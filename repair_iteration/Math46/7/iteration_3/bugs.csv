bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  double  real  =  c.isNaN()  &&  c.isNaN();  [CE]  not  a  statement  [FE]            AssertionError      [CONTEXT]      public  boolean  equals(Object  other)  {  if  (this  ==  other)  {  return  true;  }  if  (other  instanceof  Complex){  Complex  c  =  (Complex)other;  if  (c.isNaN)  {      [BUGGY]  double  real  =  c.isNaN()  &&  c.isNaN();  [BUGGY]      return  isNaN;  }  else  {  return  (real  ==  c.real)  &&  (imaginary  ==  c.imaginary);  }  }  return  false;  }  [CLASS]  Complex  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  other  [VARIABLES]  Object  other  boolean  isInfinite  isNaN  isZero  double  addend  c  d  denominator  divisor  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  	projects/Math46/src/main/java/org/apache/commons/math/complex/Complex.java	0.35355339059327373	329	329	2	replace	double  real  =  c.isNaN()  &&  c.isNaN();	  double    real    =    c.isNaN()    ||    c.isNaN();    	non-compiled	[CE]  not  a  statement	14	None	replace
2	[BUG]  [BUGGY]  double  real  =  other.getDenominator();  [CE]  not  a  statement  [FE]                  AssertionError      [CONTEXT]      public  boolean  equals(Object  other)  {  if  (this  ==  other)  {  return  true;  }  if  (other  instanceof  Complex){  Complex  c  =  (Complex)other;  if  (c.isNaN)  {      [BUGGY]  double  real  =  other.getDenominator();  [BUGGY]      return  isNaN;  }  else  {  return  (real  ==  c.real)  &&  (imaginary  ==  c.imaginary);  }  }  return  false;  }  [CLASS]  Complex  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  other  [VARIABLES]  Object  other  boolean  isInfinite  isNaN  isZero  double  addend  c  d  denominator  divisor  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  	projects/Math46/src/main/java/org/apache/commons/math/complex/Complex.java	0.35355339059327373	329	329	2	replace	double  real  =  other.getDenominator();	  double    real    =    c.getDenominator();    	non-compiled	[CE]  not  a  statement	42	None	replace
3	[BUG]  [BUGGY]  double  real  =  c.getDenominator()  +  1;  [CE]  not  a  statement  [FE]                    AssertionError      [CONTEXT]      public  boolean  equals(Object  other)  {  if  (this  ==  other)  {  return  true;  }  if  (other  instanceof  Complex){  Complex  c  =  (Complex)other;  if  (c.isNaN)  {      [BUGGY]  double  real  =  c.getDenominator()  +  1;  [BUGGY]      return  isNaN;  }  else  {  return  (real  ==  c.real)  &&  (imaginary  ==  c.imaginary);  }  }  return  false;  }  [CLASS]  Complex  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  other  [VARIABLES]  Object  other  boolean  isInfinite  isNaN  isZero  double  addend  c  d  denominator  divisor  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  	projects/Math46/src/main/java/org/apache/commons/math/complex/Complex.java	0.35355339059327373	329	329	2	replace	double  real  =  c.getDenominator()  +  1;	  double    real    =    c.getDenominator();    	non-compiled	[CE]  not  a  statement	42	None	replace
4	[BUG]  [BUGGY]  return  isInfinite  ==  c.infinite  ||  isNaN  ==  c.isNaN;  [CE]  not  a  statement  [FE]              AssertionError      [CONTEXT]      public  boolean  equals(Object  other)  {  if  (this  ==  other)  {  return  true;  }  if  (other  instanceof  Complex){  Complex  c  =  (Complex)other;  if  (c.isNaN)  {      [BUGGY]  return  isInfinite  ==  c.infinite  ||  isNaN  ==  c.isNaN;  [BUGGY]      }  else  {  return  (real  ==  c.real)  &&  (imaginary  ==  c.imaginary);  }  }  return  false;  }  [CLASS]  Complex  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  other  [VARIABLES]  Object  other  boolean  isInfinite  isNaN  isZero  double  addend  c  d  denominator  divisor  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  	projects/Math46/src/main/java/org/apache/commons/math/complex/Complex.java	0.35355339059327373	329	329	2	replace	return  isInfinite  ==  c.infinite  ||  isNaN  ==  c.isNaN;	  return    isInfinite    ==    c.isNaN    ||    isNaN    ==    c.infinite;    	non-compiled	[CE]  not  a  statement	22	None	replace
5	[BUG]  [BUGGY]  return  isNaN  &&  c.isInfinite;  [CE]  not  a  statement  [FE]              AssertionError      [CONTEXT]      public  boolean  equals(Object  other)  {  if  (this  ==  other)  {  return  true;  }  if  (other  instanceof  Complex){  Complex  c  =  (Complex)other;  if  (c.isNaN)  {      [BUGGY]  return  isNaN  &&  c.isInfinite;  [BUGGY]      }  else  {  return  (real  ==  c.real)  &&  (imaginary  ==  c.imaginary);  }  }  return  false;  }  [CLASS]  Complex  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  other  [VARIABLES]  Object  other  boolean  isInfinite  isNaN  isZero  double  addend  c  d  denominator  divisor  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  	projects/Math46/src/main/java/org/apache/commons/math/complex/Complex.java	0.35355339059327373	329	329	2	replace	return  isNaN  &&  c.isInfinite;	  return    isNaN    ||    c.isInfinite;    	non-compiled	[CE]  not  a  statement	33	None	replace
6	[BUG]  [BUGGY]  return  isNaN  ||  c.isZero;  [CE]  not  a  statement  [FE]                AssertionError      [CONTEXT]      public  boolean  equals(Object  other)  {  if  (this  ==  other)  {  return  true;  }  if  (other  instanceof  Complex){  Complex  c  =  (Complex)other;  if  (c.isNaN)  {      [BUGGY]  return  isNaN  ||  c.isZero;  [BUGGY]      }  else  {  return  (real  ==  c.real)  &&  (imaginary  ==  c.imaginary);  }  }  return  false;  }  [CLASS]  Complex  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  other  [VARIABLES]  Object  other  boolean  isInfinite  isNaN  isZero  double  addend  c  d  denominator  divisor  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  	projects/Math46/src/main/java/org/apache/commons/math/complex/Complex.java	0.35355339059327373	329	329	2	replace	return  isNaN  ||  c.isZero;	  return    isNaN    ||    c.isInfinite;    	non-compiled	[CE]  not  a  statement	33	None	replace
7	[BUG]  [BUGGY]  return  isInfinite  ||  c.isInfinite;  [CE]  not  a  statement  [FE]                  AssertionError      [CONTEXT]      public  boolean  equals(Object  other)  {  if  (this  ==  other)  {  return  true;  }  if  (other  instanceof  Complex){  Complex  c  =  (Complex)other;  if  (c.isNaN)  {      [BUGGY]  return  isInfinite  ||  c.isInfinite;  [BUGGY]      }  else  {  return  (real  ==  c.real)  &&  (imaginary  ==  c.imaginary);  }  }  return  false;  }  [CLASS]  Complex  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  other  [VARIABLES]  Object  other  boolean  isInfinite  isNaN  isZero  double  addend  c  d  denominator  divisor  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  	projects/Math46/src/main/java/org/apache/commons/math/complex/Complex.java	0.35355339059327373	329	329	2	replace	return  isInfinite  ||  c.isInfinite;	  return    isNaN    ||    c.isInfinite;    	non-compiled	[CE]  not  a  statement	33	None	replace
8	[BUG]  [BUGGY]  double  real  =  c.real  ||  imaginary  ==  c.imaginary);  [CE]  not  a  statement  [FE]            AssertionError      [CONTEXT]      public  boolean  equals(Object  other)  {  if  (this  ==  other)  {  return  true;  }  if  (other  instanceof  Complex){  Complex  c  =  (Complex)other;  if  (c.isNaN)  {      [BUGGY]  double  real  =  c.real  ||  imaginary  ==  c.imaginary);  [BUGGY]      return  isNaN;  }  else  {  return  (real  ==  c.real)  &&  (imaginary  ==  c.imaginary);  }  }  return  false;  }  [CLASS]  Complex  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  other  [VARIABLES]  Object  other  boolean  isInfinite  isNaN  isZero  double  addend  c  d  denominator  divisor  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  	projects/Math46/src/main/java/org/apache/commons/math/complex/Complex.java	0.35355339059327373	329	329	2	replace	double  real  =  c.real  ||  imaginary  ==  c.imaginary);	  double    real    =    c.real    ||    c.imaginary    ==    c.imaginary);    	non-compiled	[CE]  not  a  statement	88	None	replace
9	[BUG]  [BUGGY]  double  real  =  c.real  ||  c.imaginary!=  c.imaginary);  [CE]  not  a  statement  [FE]              AssertionError      [CONTEXT]      public  boolean  equals(Object  other)  {  if  (this  ==  other)  {  return  true;  }  if  (other  instanceof  Complex){  Complex  c  =  (Complex)other;  if  (c.isNaN)  {      [BUGGY]  double  real  =  c.real  ||  c.imaginary!=  c.imaginary);  [BUGGY]      return  isNaN;  }  else  {  return  (real  ==  c.real)  &&  (imaginary  ==  c.imaginary);  }  }  return  false;  }  [CLASS]  Complex  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  other  [VARIABLES]  Object  other  boolean  isInfinite  isNaN  isZero  double  addend  c  d  denominator  divisor  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  	projects/Math46/src/main/java/org/apache/commons/math/complex/Complex.java	0.35355339059327373	329	329	2	replace	double  real  =  c.real  ||  c.imaginary!=  c.imaginary);	  double    real    =    c.real    ||    c.imaginary    ==    c.imaginary);    	non-compiled	[CE]  not  a  statement	88	None	replace
10	[BUG]  [BUGGY]  double  real  =  c.real  ||  c.imaginary  ==  d.imaginary);  [CE]  not  a  statement  [FE]                AssertionError      [CONTEXT]      public  boolean  equals(Object  other)  {  if  (this  ==  other)  {  return  true;  }  if  (other  instanceof  Complex){  Complex  c  =  (Complex)other;  if  (c.isNaN)  {      [BUGGY]  double  real  =  c.real  ||  c.imaginary  ==  d.imaginary);  [BUGGY]      return  isNaN;  }  else  {  return  (real  ==  c.real)  &&  (imaginary  ==  c.imaginary);  }  }  return  false;  }  [CLASS]  Complex  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  other  [VARIABLES]  Object  other  boolean  isInfinite  isNaN  isZero  double  addend  c  d  denominator  divisor  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  	projects/Math46/src/main/java/org/apache/commons/math/complex/Complex.java	0.35355339059327373	329	329	2	replace	double  real  =  c.real  ||  c.imaginary  ==  d.imaginary);	  double    real    =    c.real    ||    c.imaginary    ==    c.imaginary);    	non-compiled	[CE]  not  a  statement	88	None	replace
11	[BUG]  [BUGGY]  double  real  =  other.getDivisor()  -  denominator;  [CE]  not  a  statement  [FE]                AssertionError      [CONTEXT]      public  boolean  equals(Object  other)  {  if  (this  ==  other)  {  return  true;  }  if  (other  instanceof  Complex){  Complex  c  =  (Complex)other;  if  (c.isNaN)  {      [BUGGY]  double  real  =  other.getDivisor()  -  denominator;  [BUGGY]      return  isNaN;  }  else  {  return  (real  ==  c.real)  &&  (imaginary  ==  c.imaginary);  }  }  return  false;  }  [CLASS]  Complex  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  other  [VARIABLES]  Object  other  boolean  isInfinite  isNaN  isZero  double  addend  c  d  denominator  divisor  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  	projects/Math46/src/main/java/org/apache/commons/math/complex/Complex.java	0.35355339059327373	329	329	2	replace	double  real  =  other.getDivisor()  -  denominator;	  double    real    =    other.getDivisor();    	non-compiled	[CE]  not  a  statement	41	None	replace
12	[BUG]  [BUGGY]  double  real  =  other.getDivisor()  +  1;  [CE]  not  a  statement  [FE]                  AssertionError      [CONTEXT]      public  boolean  equals(Object  other)  {  if  (this  ==  other)  {  return  true;  }  if  (other  instanceof  Complex){  Complex  c  =  (Complex)other;  if  (c.isNaN)  {      [BUGGY]  double  real  =  other.getDivisor()  +  1;  [BUGGY]      return  isNaN;  }  else  {  return  (real  ==  c.real)  &&  (imaginary  ==  c.imaginary);  }  }  return  false;  }  [CLASS]  Complex  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  other  [VARIABLES]  Object  other  boolean  isInfinite  isNaN  isZero  double  addend  c  d  denominator  divisor  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  	projects/Math46/src/main/java/org/apache/commons/math/complex/Complex.java	0.35355339059327373	329	329	2	replace	double  real  =  other.getDivisor()  +  1;	  double    real    =    other.getDivisor();    	non-compiled	[CE]  not  a  statement	41	None	replace
13	[BUG]  [BUGGY]  return  isNaN  ==  c.isNaN  ||  isNaN  ==  c.isInfinite;  [CE]  not  a  statement  [FE]            AssertionError      [CONTEXT]      public  boolean  equals(Object  other)  {  if  (this  ==  other)  {  return  true;  }  if  (other  instanceof  Complex){  Complex  c  =  (Complex)other;  if  (c.isNaN)  {      [BUGGY]  return  isNaN  ==  c.isNaN  ||  isNaN  ==  c.isInfinite;  [BUGGY]      }  else  {  return  (real  ==  c.real)  &&  (imaginary  ==  c.imaginary);  }  }  return  false;  }  [CLASS]  Complex  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  other  [VARIABLES]  Object  other  boolean  isInfinite  isNaN  isZero  double  addend  c  d  denominator  divisor  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  	projects/Math46/src/main/java/org/apache/commons/math/complex/Complex.java	0.35355339059327373	329	329	2	replace	return  isNaN  ==  c.isNaN  ||  isNaN  ==  c.isInfinite;	  return    isInfinite    ==    c.isNaN    ||    isInfinite    ==    c.isInfinite;    	non-compiled	[CE]  not  a  statement	79	None	replace
14	[BUG]  [BUGGY]  return  isNaN  ==  c.isNaN  ||  isInfinite  ==  other.isInfinite;  [CE]  not  a  statement  [FE]              AssertionError      [CONTEXT]      public  boolean  equals(Object  other)  {  if  (this  ==  other)  {  return  true;  }  if  (other  instanceof  Complex){  Complex  c  =  (Complex)other;  if  (c.isNaN)  {      [BUGGY]  return  isNaN  ==  c.isNaN  ||  isInfinite  ==  other.isInfinite;  [BUGGY]      }  else  {  return  (real  ==  c.real)  &&  (imaginary  ==  c.imaginary);  }  }  return  false;  }  [CLASS]  Complex  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  other  [VARIABLES]  Object  other  boolean  isInfinite  isNaN  isZero  double  addend  c  d  denominator  divisor  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  	projects/Math46/src/main/java/org/apache/commons/math/complex/Complex.java	0.35355339059327373	329	329	2	replace	return  isNaN  ==  c.isNaN  ||  isInfinite  ==  other.isInfinite;	  return    isInfinite    ==    c.isNaN    ||    isInfinite    ==    c.isInfinite;    	non-compiled	[CE]  not  a  statement	79	None	replace
15	[BUG]  [BUGGY]  return(c.isNaN  ||  c.isNaN)&&(real  ==  c.imaginary);  [CE]  not  a  statement  [FE]                    AssertionError      [CONTEXT]      public  boolean  equals(Object  other)  {  if  (this  ==  other)  {  return  true;  }  if  (other  instanceof  Complex){  Complex  c  =  (Complex)other;  if  (c.isNaN)  {      [BUGGY]  return(c.isNaN  ||  c.isNaN)&&(real  ==  c.imaginary);  [BUGGY]      }  else  {  return  (real  ==  c.real)  &&  (imaginary  ==  c.imaginary);  }  }  return  false;  }  [CLASS]  Complex  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  other  [VARIABLES]  Object  other  boolean  isInfinite  isNaN  isZero  double  addend  c  d  denominator  divisor  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  	projects/Math46/src/main/java/org/apache/commons/math/complex/Complex.java	0.35355339059327373	329	329	2	replace	return(c.isNaN  ||  c.isNaN)&&(real  ==  c.imaginary);	  return(c.isNaN    ||    c.isNaN)&&(imaginary    ==    c.imaginary);    	non-compiled	[CE]  not  a  statement	99	None	replace
16	[BUG]  [BUGGY]  return(c.isNaN  ||  c.isNaN)&&(imaginary  ==  other.imaginary);  [CE]  not  a  statement  [FE]                      AssertionError      [CONTEXT]      public  boolean  equals(Object  other)  {  if  (this  ==  other)  {  return  true;  }  if  (other  instanceof  Complex){  Complex  c  =  (Complex)other;  if  (c.isNaN)  {      [BUGGY]  return(c.isNaN  ||  c.isNaN)&&(imaginary  ==  other.imaginary);  [BUGGY]      }  else  {  return  (real  ==  c.real)  &&  (imaginary  ==  c.imaginary);  }  }  return  false;  }  [CLASS]  Complex  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  other  [VARIABLES]  Object  other  boolean  isInfinite  isNaN  isZero  double  addend  c  d  denominator  divisor  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  	projects/Math46/src/main/java/org/apache/commons/math/complex/Complex.java	0.35355339059327373	329	329	2	replace	return(c.isNaN  ||  c.isNaN)&&(imaginary  ==  other.imaginary);	  return(c.isNaN    ||    c.isNaN)&&(imaginary    ==    c.imaginary);    	non-compiled	[CE]  not  a  statement	99	None	replace
17	[BUG]  [BUGGY]  return(c.isNaN  ||  c.isNaN)&&(real  ==  c.real);  [CE]  not  a  statement  [FE]                        AssertionError      [CONTEXT]      public  boolean  equals(Object  other)  {  if  (this  ==  other)  {  return  true;  }  if  (other  instanceof  Complex){  Complex  c  =  (Complex)other;  if  (c.isNaN)  {      [BUGGY]  return(c.isNaN  ||  c.isNaN)&&(real  ==  c.real);  [BUGGY]      }  else  {  return  (real  ==  c.real)  &&  (imaginary  ==  c.imaginary);  }  }  return  false;  }  [CLASS]  Complex  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  other  [VARIABLES]  Object  other  boolean  isInfinite  isNaN  isZero  double  addend  c  d  denominator  divisor  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  	projects/Math46/src/main/java/org/apache/commons/math/complex/Complex.java	0.35355339059327373	329	329	2	replace	return(c.isNaN  ||  c.isNaN)&&(real  ==  c.real);	  return(c.isNaN    ||    c.isNaN)&&(imaginary    ==    c.imaginary);    	non-compiled	[CE]  not  a  statement	99	None	replace
18	[BUG]  [BUGGY]  double  imaginary  =  c.imaginary  &&  c.imaginary!=  null;  [CE]  not  a  statement  [FE]                    AssertionError      [CONTEXT]      public  boolean  equals(Object  other)  {  if  (this  ==  other)  {  return  true;  }  if  (other  instanceof  Complex){  Complex  c  =  (Complex)other;  if  (c.isNaN)  {      [BUGGY]  double  imaginary  =  c.imaginary  &&  c.imaginary!=  null;  [BUGGY]      return  isNaN;  }  else  {  return  (real  ==  c.real)  &&  (imaginary  ==  c.imaginary);  }  }  return  false;  }  [CLASS]  Complex  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  other  [VARIABLES]  Object  other  boolean  isInfinite  isNaN  isZero  double  addend  c  d  denominator  divisor  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  	projects/Math46/src/main/java/org/apache/commons/math/complex/Complex.java	0.35355339059327373	329	329	2	replace	double  imaginary  =  c.imaginary  &&  c.imaginary!=  null;	  double    imaginary    =    c.imaginary    &&    c.imaginary    ==    null;    	non-compiled	[CE]  not  a  statement	27	None	replace
19	[BUG]  [BUGGY]  double  imaginary  =  other.imaginary  &&  c.imaginary  ==  null;  [CE]  not  a  statement  [FE]                      AssertionError      [CONTEXT]      public  boolean  equals(Object  other)  {  if  (this  ==  other)  {  return  true;  }  if  (other  instanceof  Complex){  Complex  c  =  (Complex)other;  if  (c.isNaN)  {      [BUGGY]  double  imaginary  =  other.imaginary  &&  c.imaginary  ==  null;  [BUGGY]      return  isNaN;  }  else  {  return  (real  ==  c.real)  &&  (imaginary  ==  c.imaginary);  }  }  return  false;  }  [CLASS]  Complex  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  other  [VARIABLES]  Object  other  boolean  isInfinite  isNaN  isZero  double  addend  c  d  denominator  divisor  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  	projects/Math46/src/main/java/org/apache/commons/math/complex/Complex.java	0.35355339059327373	329	329	2	replace	double  imaginary  =  other.imaginary  &&  c.imaginary  ==  null;	  double    imaginary    =    c.imaginary    &&    c.imaginary    ==    null;    	non-compiled	[CE]  not  a  statement	27	None	replace
20	[BUG]  [BUGGY]  return  isNaN  ==  other.isNaN  &&  isInfinite  ==  c.isInfinite;  [CE]  not  a  statement  [FE]                AssertionError      [CONTEXT]      public  boolean  equals(Object  other)  {  if  (this  ==  other)  {  return  true;  }  if  (other  instanceof  Complex){  Complex  c  =  (Complex)other;  if  (c.isNaN)  {      [BUGGY]  return  isNaN  ==  other.isNaN  &&  isInfinite  ==  c.isInfinite;  [BUGGY]      }  else  {  return  (real  ==  c.real)  &&  (imaginary  ==  c.imaginary);  }  }  return  false;  }  [CLASS]  Complex  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  other  [VARIABLES]  Object  other  boolean  isInfinite  isNaN  isZero  double  addend  c  d  denominator  divisor  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  	projects/Math46/src/main/java/org/apache/commons/math/complex/Complex.java	0.35355339059327373	329	329	2	replace	return  isNaN  ==  other.isNaN  &&  isInfinite  ==  c.isInfinite;	  return    isNaN    ==    other.isNaN    ||    isInfinite    ==    c.isInfinite;    	non-compiled	[CE]  not  a  statement	40	None	replace
21	[BUG]  [BUGGY]  return  isNaN  ==  other.isNaN  ||  isZero  ==  c.zero;  [CE]  not  a  statement  [FE]                  AssertionError      [CONTEXT]      public  boolean  equals(Object  other)  {  if  (this  ==  other)  {  return  true;  }  if  (other  instanceof  Complex){  Complex  c  =  (Complex)other;  if  (c.isNaN)  {      [BUGGY]  return  isNaN  ==  other.isNaN  ||  isZero  ==  c.zero;  [BUGGY]      }  else  {  return  (real  ==  c.real)  &&  (imaginary  ==  c.imaginary);  }  }  return  false;  }  [CLASS]  Complex  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  other  [VARIABLES]  Object  other  boolean  isInfinite  isNaN  isZero  double  addend  c  d  denominator  divisor  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  	projects/Math46/src/main/java/org/apache/commons/math/complex/Complex.java	0.35355339059327373	329	329	2	replace	return  isNaN  ==  other.isNaN  ||  isZero  ==  c.zero;	  return    isNaN    ==    other.isNaN    ||    isInfinite    ==    c.isInfinite;    	non-compiled	[CE]  not  a  statement	40	None	replace
22	[BUG]  [BUGGY]  return  isNaN  ==  other.isNaN  &&  isInfinite  ==  c.infinite;  [CE]  not  a  statement  [FE]                  AssertionError      [CONTEXT]      public  boolean  equals(Object  other)  {  if  (this  ==  other)  {  return  true;  }  if  (other  instanceof  Complex){  Complex  c  =  (Complex)other;  if  (c.isNaN)  {      [BUGGY]  return  isNaN  ==  other.isNaN  &&  isInfinite  ==  c.infinite;  [BUGGY]      }  else  {  return  (real  ==  c.real)  &&  (imaginary  ==  c.imaginary);  }  }  return  false;  }  [CLASS]  Complex  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  other  [VARIABLES]  Object  other  boolean  isInfinite  isNaN  isZero  double  addend  c  d  denominator  divisor  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  	projects/Math46/src/main/java/org/apache/commons/math/complex/Complex.java	0.35355339059327373	329	329	2	replace	return  isNaN  ==  other.isNaN  &&  isInfinite  ==  c.infinite;	  return    isNaN    ==    other.isNaN    ||    isInfinite    ==    c.infinite;    	non-compiled	[CE]  not  a  statement	24	None	replace
23	[BUG]  [BUGGY]  return  isNaN  ==  c.isNaN  ||  isInfinite  ==  other.infinite;  [CE]  not  a  statement  [FE]                    AssertionError      [CONTEXT]      public  boolean  equals(Object  other)  {  if  (this  ==  other)  {  return  true;  }  if  (other  instanceof  Complex){  Complex  c  =  (Complex)other;  if  (c.isNaN)  {      [BUGGY]  return  isNaN  ==  c.isNaN  ||  isInfinite  ==  other.infinite;  [BUGGY]      }  else  {  return  (real  ==  c.real)  &&  (imaginary  ==  c.imaginary);  }  }  return  false;  }  [CLASS]  Complex  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  other  [VARIABLES]  Object  other  boolean  isInfinite  isNaN  isZero  double  addend  c  d  denominator  divisor  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  	projects/Math46/src/main/java/org/apache/commons/math/complex/Complex.java	0.35355339059327373	329	329	2	replace	return  isNaN  ==  c.isNaN  ||  isInfinite  ==  other.infinite;	  return    isNaN    ==    other.isNaN    ||    isInfinite    ==    c.infinite;    	non-compiled	[CE]  not  a  statement	24	None	replace
24	[BUG]  [BUGGY]  return  isInfinite  ==  c.isInfinite  ||  isZero;  [CE]  not  a  statement  [FE]                  AssertionError      [CONTEXT]      public  boolean  equals(Object  other)  {  if  (this  ==  other)  {  return  true;  }  if  (other  instanceof  Complex){  Complex  c  =  (Complex)other;  if  (c.isNaN)  {      [BUGGY]  return  isInfinite  ==  c.isInfinite  ||  isZero;  [BUGGY]      }  else  {  return  (real  ==  c.real)  &&  (imaginary  ==  c.imaginary);  }  }  return  false;  }  [CLASS]  Complex  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  other  [VARIABLES]  Object  other  boolean  isInfinite  isNaN  isZero  double  addend  c  d  denominator  divisor  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  	projects/Math46/src/main/java/org/apache/commons/math/complex/Complex.java	0.35355339059327373	329	329	2	replace	return  isInfinite  ==  c.isInfinite  ||  isZero;	  return    isInfinite    ==    c.isInfinite    ||    isNaN;    	non-compiled	[CE]  not  a  statement	83	None	replace
25	[BUG]  [BUGGY]  return  isNaN  ==  c.isInfinite  ||  isNaN;  [CE]  not  a  statement  [FE]                    AssertionError      [CONTEXT]      public  boolean  equals(Object  other)  {  if  (this  ==  other)  {  return  true;  }  if  (other  instanceof  Complex){  Complex  c  =  (Complex)other;  if  (c.isNaN)  {      [BUGGY]  return  isNaN  ==  c.isInfinite  ||  isNaN;  [BUGGY]      }  else  {  return  (real  ==  c.real)  &&  (imaginary  ==  c.imaginary);  }  }  return  false;  }  [CLASS]  Complex  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  other  [VARIABLES]  Object  other  boolean  isInfinite  isNaN  isZero  double  addend  c  d  denominator  divisor  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  	projects/Math46/src/main/java/org/apache/commons/math/complex/Complex.java	0.35355339059327373	329	329	2	replace	return  isNaN  ==  c.isInfinite  ||  isNaN;	  return    isInfinite    ==    c.isInfinite    ||    isNaN;    	non-compiled	[CE]  not  a  statement	83	None	replace
26	[BUG]  [BUGGY]  return  isInfinite  ==  c.isInfinite  ||  isNaN  ||  isZero;  [CE]  not  a  statement  [FE]                      AssertionError      [CONTEXT]      public  boolean  equals(Object  other)  {  if  (this  ==  other)  {  return  true;  }  if  (other  instanceof  Complex){  Complex  c  =  (Complex)other;  if  (c.isNaN)  {      [BUGGY]  return  isInfinite  ==  c.isInfinite  ||  isNaN  ||  isZero;  [BUGGY]      }  else  {  return  (real  ==  c.real)  &&  (imaginary  ==  c.imaginary);  }  }  return  false;  }  [CLASS]  Complex  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  other  [VARIABLES]  Object  other  boolean  isInfinite  isNaN  isZero  double  addend  c  d  denominator  divisor  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  	projects/Math46/src/main/java/org/apache/commons/math/complex/Complex.java	0.35355339059327373	329	329	2	replace	return  isInfinite  ==  c.isInfinite  ||  isNaN  ||  isZero;	  return    isInfinite    ==    c.isInfinite    ||    isNaN;    	non-compiled	[CE]  not  a  statement	83	None	replace
27	[BUG]  [BUGGY]  return  isInfinite  ==  c.isNaN  ||  isNaN  ==  c.isInfinite);  [CE]  not  a  statement  [FE]              AssertionError      [CONTEXT]      public  boolean  equals(Object  other)  {  if  (this  ==  other)  {  return  true;  }  if  (other  instanceof  Complex){  Complex  c  =  (Complex)other;  if  (c.isNaN)  {      [BUGGY]  return  isInfinite  ==  c.isNaN  ||  isNaN  ==  c.isInfinite);  [BUGGY]      }  else  {  return  (real  ==  c.real)  &&  (imaginary  ==  c.imaginary);  }  }  return  false;  }  [CLASS]  Complex  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  other  [VARIABLES]  Object  other  boolean  isInfinite  isNaN  isZero  double  addend  c  d  denominator  divisor  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  	projects/Math46/src/main/java/org/apache/commons/math/complex/Complex.java	0.35355339059327373	329	329	2	replace	return  isInfinite  ==  c.isNaN  ||  isNaN  ==  c.isInfinite);	  return    isNaN    ==    c.isNaN    ||    isInfinite    ==    c.isInfinite);    	non-compiled	[CE]  not  a  statement	95	None	replace
28	[BUG]  [BUGGY]  return  isNaN  ==  c.isNaN  &&  isInfinite  ==  c.isInfinite);  [CE]  not  a  statement  [FE]                AssertionError      [CONTEXT]      public  boolean  equals(Object  other)  {  if  (this  ==  other)  {  return  true;  }  if  (other  instanceof  Complex){  Complex  c  =  (Complex)other;  if  (c.isNaN)  {      [BUGGY]  return  isNaN  ==  c.isNaN  &&  isInfinite  ==  c.isInfinite);  [BUGGY]      }  else  {  return  (real  ==  c.real)  &&  (imaginary  ==  c.imaginary);  }  }  return  false;  }  [CLASS]  Complex  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  other  [VARIABLES]  Object  other  boolean  isInfinite  isNaN  isZero  double  addend  c  d  denominator  divisor  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  	projects/Math46/src/main/java/org/apache/commons/math/complex/Complex.java	0.35355339059327373	329	329	2	replace	return  isNaN  ==  c.isNaN  &&  isInfinite  ==  c.isInfinite);	  return    isNaN    ==    c.isNaN    ||    isInfinite    ==    c.isInfinite);    	non-compiled	[CE]  not  a  statement	95	None	replace
29	[BUG]  [BUGGY]  return  isNaN  ==  other.isNaN  ||  isInfinite  ==  c.isInfinite);  [CE]  not  a  statement  [FE]                  AssertionError      [CONTEXT]      public  boolean  equals(Object  other)  {  if  (this  ==  other)  {  return  true;  }  if  (other  instanceof  Complex){  Complex  c  =  (Complex)other;  if  (c.isNaN)  {      [BUGGY]  return  isNaN  ==  other.isNaN  ||  isInfinite  ==  c.isInfinite);  [BUGGY]      }  else  {  return  (real  ==  c.real)  &&  (imaginary  ==  c.imaginary);  }  }  return  false;  }  [CLASS]  Complex  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  other  [VARIABLES]  Object  other  boolean  isInfinite  isNaN  isZero  double  addend  c  d  denominator  divisor  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  	projects/Math46/src/main/java/org/apache/commons/math/complex/Complex.java	0.35355339059327373	329	329	2	replace	return  isNaN  ==  other.isNaN  ||  isInfinite  ==  c.isInfinite);	  return    isNaN    ==    c.isNaN    ||    isInfinite    ==    c.isInfinite);    	non-compiled	[CE]  not  a  statement	95	None	replace
30	[BUG]  [BUGGY]  return  imaginary  ==  c.real)&&  (imaginary  ==  c.imaginary);  [CE]  not  a  statement  [FE]                    AssertionError      [CONTEXT]      public  boolean  equals(Object  other)  {  if  (this  ==  other)  {  return  true;  }  if  (other  instanceof  Complex){  Complex  c  =  (Complex)other;  if  (c.isNaN)  {      [BUGGY]  return  imaginary  ==  c.real)&&  (imaginary  ==  c.imaginary);  [BUGGY]      }  else  {  return  (real  ==  c.real)  &&  (imaginary  ==  c.imaginary);  }  }  return  false;  }  [CLASS]  Complex  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  other  [VARIABLES]  Object  other  boolean  isInfinite  isNaN  isZero  double  addend  c  d  denominator  divisor  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  	projects/Math46/src/main/java/org/apache/commons/math/complex/Complex.java	0.35355339059327373	329	329	2	replace	return  imaginary  ==  c.real)&&  (imaginary  ==  c.imaginary);	  return    real    ==    c.real)&&    (imaginary    ==    c.imaginary);    	non-compiled	[CE]  not  a  statement	63	None	replace
31	[BUG]  [BUGGY]  double  imaginary  =  other.isNaN  &&  c.isInfinite;  [CE]  not  a  statement  [FE]                AssertionError      [CONTEXT]      public  boolean  equals(Object  other)  {  if  (this  ==  other)  {  return  true;  }  if  (other  instanceof  Complex){  Complex  c  =  (Complex)other;  if  (c.isNaN)  {      [BUGGY]  double  imaginary  =  other.isNaN  &&  c.isInfinite;  [BUGGY]      return  isNaN;  }  else  {  return  (real  ==  c.real)  &&  (imaginary  ==  c.imaginary);  }  }  return  false;  }  [CLASS]  Complex  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  other  [VARIABLES]  Object  other  boolean  isInfinite  isNaN  isZero  double  addend  c  d  denominator  divisor  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  	projects/Math46/src/main/java/org/apache/commons/math/complex/Complex.java	0.35355339059327373	329	329	2	replace	double  imaginary  =  other.isNaN  &&  c.isInfinite;	  double    imaginary    =    c.isNaN    &&    c.isInfinite;    	non-compiled	[CE]  not  a  statement	12	None	replace
32	[BUG]  [BUGGY]  double  imaginary  =  c.isInfinite  &&  c.isNaN;  [CE]  not  a  statement  [FE]                  AssertionError      [CONTEXT]      public  boolean  equals(Object  other)  {  if  (this  ==  other)  {  return  true;  }  if  (other  instanceof  Complex){  Complex  c  =  (Complex)other;  if  (c.isNaN)  {      [BUGGY]  double  imaginary  =  c.isInfinite  &&  c.isNaN;  [BUGGY]      return  isNaN;  }  else  {  return  (real  ==  c.real)  &&  (imaginary  ==  c.imaginary);  }  }  return  false;  }  [CLASS]  Complex  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  other  [VARIABLES]  Object  other  boolean  isInfinite  isNaN  isZero  double  addend  c  d  denominator  divisor  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  	projects/Math46/src/main/java/org/apache/commons/math/complex/Complex.java	0.35355339059327373	329	329	2	replace	double  imaginary  =  c.isInfinite  &&  c.isNaN;	  double    imaginary    =    c.isNaN    &&    c.isInfinite;    	non-compiled	[CE]  not  a  statement	12	None	replace
33	[BUG]  [BUGGY]  double  imaginary  =  c.isInfinite  ||  c.isInfinite;  [CE]  not  a  statement  [FE]                    AssertionError      [CONTEXT]      public  boolean  equals(Object  other)  {  if  (this  ==  other)  {  return  true;  }  if  (other  instanceof  Complex){  Complex  c  =  (Complex)other;  if  (c.isNaN)  {      [BUGGY]  double  imaginary  =  c.isInfinite  ||  c.isInfinite;  [BUGGY]      return  isNaN;  }  else  {  return  (real  ==  c.real)  &&  (imaginary  ==  c.imaginary);  }  }  return  false;  }  [CLASS]  Complex  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  other  [VARIABLES]  Object  other  boolean  isInfinite  isNaN  isZero  double  addend  c  d  denominator  divisor  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  	projects/Math46/src/main/java/org/apache/commons/math/complex/Complex.java	0.35355339059327373	329	329	2	replace	double  imaginary  =  c.isInfinite  ||  c.isInfinite;	  double    imaginary    =    c.isNaN    &&    c.isInfinite;    	non-compiled	[CE]  not  a  statement	12	None	replace
34	[BUG]  [BUGGY]  return  isNaN  ==  other.isNaN  ||  isNaN  ==  c.infinite;  [CE]  not  a  statement  [FE]              AssertionError      [CONTEXT]      public  boolean  equals(Object  other)  {  if  (this  ==  other)  {  return  true;  }  if  (other  instanceof  Complex){  Complex  c  =  (Complex)other;  if  (c.isNaN)  {      [BUGGY]  return  isNaN  ==  other.isNaN  ||  isNaN  ==  c.infinite;  [BUGGY]      }  else  {  return  (real  ==  c.real)  &&  (imaginary  ==  c.imaginary);  }  }  return  false;  }  [CLASS]  Complex  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  other  [VARIABLES]  Object  other  boolean  isInfinite  isNaN  isZero  double  addend  c  d  denominator  divisor  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  	projects/Math46/src/main/java/org/apache/commons/math/complex/Complex.java	0.35355339059327373	329	329	2	replace	return  isNaN  ==  other.isNaN  ||  isNaN  ==  c.infinite;	  return    isNaN    ==    c.isNaN    ||    isNaN    ==    c.infinite;    	non-compiled	[CE]  not  a  statement	57	None	replace
35	[BUG]  [BUGGY]  return  isNaN  ==  c.isNaN  &&  isNaN  ==  c.infinite;  [CE]  not  a  statement  [FE]                AssertionError      [CONTEXT]      public  boolean  equals(Object  other)  {  if  (this  ==  other)  {  return  true;  }  if  (other  instanceof  Complex){  Complex  c  =  (Complex)other;  if  (c.isNaN)  {      [BUGGY]  return  isNaN  ==  c.isNaN  &&  isNaN  ==  c.infinite;  [BUGGY]      }  else  {  return  (real  ==  c.real)  &&  (imaginary  ==  c.imaginary);  }  }  return  false;  }  [CLASS]  Complex  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  other  [VARIABLES]  Object  other  boolean  isInfinite  isNaN  isZero  double  addend  c  d  denominator  divisor  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  	projects/Math46/src/main/java/org/apache/commons/math/complex/Complex.java	0.35355339059327373	329	329	2	replace	return  isNaN  ==  c.isNaN  &&  isNaN  ==  c.infinite;	  return    isNaN    ==    c.isNaN    ||    isNaN    ==    c.infinite;    	non-compiled	[CE]  not  a  statement	57	None	replace
36	[BUG]  [BUGGY]  return  c.isInfinite  ==  isNaN;  [CE]  not  a  statement  [FE]            AssertionError      [CONTEXT]      public  boolean  equals(Object  other)  {  if  (this  ==  other)  {  return  true;  }  if  (other  instanceof  Complex){  Complex  c  =  (Complex)other;  if  (c.isNaN)  {      [BUGGY]  return  c.isInfinite  ==  isNaN;  [BUGGY]      }  else  {  return  (real  ==  c.real)  &&  (imaginary  ==  c.imaginary);  }  }  return  false;  }  [CLASS]  Complex  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  other  [VARIABLES]  Object  other  boolean  isInfinite  isNaN  isZero  double  addend  c  d  denominator  divisor  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  	projects/Math46/src/main/java/org/apache/commons/math/complex/Complex.java	0.35355339059327373	329	329	2	replace	return  c.isInfinite  ==  isNaN;	  return    isNaN    ==    c.isInfinite;    	non-compiled	[CE]  not  a  statement	86	None	replace
37	[BUG]  [BUGGY]  return  isInfinite  ==  c.isInfinite;  [CE]  not  a  statement  [FE]              AssertionError      [CONTEXT]      public  boolean  equals(Object  other)  {  if  (this  ==  other)  {  return  true;  }  if  (other  instanceof  Complex){  Complex  c  =  (Complex)other;  if  (c.isNaN)  {      [BUGGY]  return  isInfinite  ==  c.isInfinite;  [BUGGY]      }  else  {  return  (real  ==  c.real)  &&  (imaginary  ==  c.imaginary);  }  }  return  false;  }  [CLASS]  Complex  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  other  [VARIABLES]  Object  other  boolean  isInfinite  isNaN  isZero  double  addend  c  d  denominator  divisor  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  	projects/Math46/src/main/java/org/apache/commons/math/complex/Complex.java	0.35355339059327373	329	329	2	replace	return  isInfinite  ==  c.isInfinite;	  return    isNaN    ==    c.isInfinite;    	non-compiled	[CE]  not  a  statement	86	None	replace
38	[BUG]  [BUGGY]  return  real!=  c.real;  [CE]  not  a  statement  [FE]            AssertionError      [CONTEXT]      public  boolean  equals(Object  other)  {  if  (this  ==  other)  {  return  true;  }  if  (other  instanceof  Complex){  Complex  c  =  (Complex)other;  if  (c.isNaN)  {      [BUGGY]  return  real!=  c.real;  [BUGGY]      }  else  {  return  (real  ==  c.real)  &&  (imaginary  ==  c.imaginary);  }  }  return  false;  }  [CLASS]  Complex  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  other  [VARIABLES]  Object  other  boolean  isInfinite  isNaN  isZero  double  addend  c  d  denominator  divisor  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  	projects/Math46/src/main/java/org/apache/commons/math/complex/Complex.java	0.35355339059327373	329	329	2	replace	return  real!=  c.real;	  return    real!=    c.isNaN;    	non-compiled	[CE]  not  a  statement	56	None	replace
39	[BUG]  [BUGGY]  return  real  ==  c.real;  [CE]  not  a  statement  [FE]              AssertionError      [CONTEXT]      public  boolean  equals(Object  other)  {  if  (this  ==  other)  {  return  true;  }  if  (other  instanceof  Complex){  Complex  c  =  (Complex)other;  if  (c.isNaN)  {      [BUGGY]  return  real  ==  c.real;  [BUGGY]      }  else  {  return  (real  ==  c.real)  &&  (imaginary  ==  c.imaginary);  }  }  return  false;  }  [CLASS]  Complex  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  other  [VARIABLES]  Object  other  boolean  isInfinite  isNaN  isZero  double  addend  c  d  denominator  divisor  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  	projects/Math46/src/main/java/org/apache/commons/math/complex/Complex.java	0.35355339059327373	329	329	2	replace	return  real  ==  c.real;	  return    real!=    c.isNaN;    	non-compiled	[CE]  not  a  statement	56	None	replace
40	[BUG]  [BUGGY]  double  imaginary  =  other.denominator();  [CE]  not  a  statement  [FE]                AssertionError      [CONTEXT]      public  boolean  equals(Object  other)  {  if  (this  ==  other)  {  return  true;  }  if  (other  instanceof  Complex){  Complex  c  =  (Complex)other;  if  (c.isNaN)  {      [BUGGY]  double  imaginary  =  other.denominator();  [BUGGY]      return  isNaN;  }  else  {  return  (real  ==  c.real)  &&  (imaginary  ==  c.imaginary);  }  }  return  false;  }  [CLASS]  Complex  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  other  [VARIABLES]  Object  other  boolean  isInfinite  isNaN  isZero  double  addend  c  d  denominator  divisor  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  	projects/Math46/src/main/java/org/apache/commons/math/complex/Complex.java	0.35355339059327373	329	329	2	replace	double  imaginary  =  other.denominator();	  double    imaginary    =    other.infinite();    	non-compiled	[CE]  not  a  statement	35	None	replace
41	[BUG]  [BUGGY]  double  imaginary  =  this.infinite();  [CE]  not  a  statement  [FE]                  AssertionError      [CONTEXT]      public  boolean  equals(Object  other)  {  if  (this  ==  other)  {  return  true;  }  if  (other  instanceof  Complex){  Complex  c  =  (Complex)other;  if  (c.isNaN)  {      [BUGGY]  double  imaginary  =  this.infinite();  [BUGGY]      return  isNaN;  }  else  {  return  (real  ==  c.real)  &&  (imaginary  ==  c.imaginary);  }  }  return  false;  }  [CLASS]  Complex  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  other  [VARIABLES]  Object  other  boolean  isInfinite  isNaN  isZero  double  addend  c  d  denominator  divisor  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  	projects/Math46/src/main/java/org/apache/commons/math/complex/Complex.java	0.35355339059327373	329	329	2	replace	double  imaginary  =  this.infinite();	  double    imaginary    =    other.infinite();    	non-compiled	[CE]  not  a  statement	35	None	replace
42	[BUG]  [BUGGY]  return  c.isNaN  ==  isInfinite;  [CE]  not  a  statement  [FE]              AssertionError      [CONTEXT]      public  boolean  equals(Object  other)  {  if  (this  ==  other)  {  return  true;  }  if  (other  instanceof  Complex){  Complex  c  =  (Complex)other;  if  (c.isNaN)  {      [BUGGY]  return  c.isNaN  ==  isInfinite;  [BUGGY]      }  else  {  return  (real  ==  c.real)  &&  (imaginary  ==  c.imaginary);  }  }  return  false;  }  [CLASS]  Complex  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  other  [VARIABLES]  Object  other  boolean  isInfinite  isNaN  isZero  double  addend  c  d  denominator  divisor  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  	projects/Math46/src/main/java/org/apache/commons/math/complex/Complex.java	0.35355339059327373	329	329	2	replace	return  c.isNaN  ==  isInfinite;	  return    c.isNaN    ==    isNaN;    	non-compiled	[CE]  not  a  statement	73	None	replace
43	[BUG]  [BUGGY]  return  c.isNaN  ==  isNaN  ||  c.isInfinite  ==  isNaN;  [CE]  not  a  statement  [FE]                AssertionError      [CONTEXT]      public  boolean  equals(Object  other)  {  if  (this  ==  other)  {  return  true;  }  if  (other  instanceof  Complex){  Complex  c  =  (Complex)other;  if  (c.isNaN)  {      [BUGGY]  return  c.isNaN  ==  isNaN  ||  c.isInfinite  ==  isNaN;  [BUGGY]      }  else  {  return  (real  ==  c.real)  &&  (imaginary  ==  c.imaginary);  }  }  return  false;  }  [CLASS]  Complex  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  other  [VARIABLES]  Object  other  boolean  isInfinite  isNaN  isZero  double  addend  c  d  denominator  divisor  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  	projects/Math46/src/main/java/org/apache/commons/math/complex/Complex.java	0.35355339059327373	329	329	2	replace	return  c.isNaN  ==  isNaN  ||  c.isInfinite  ==  isNaN;	  return    c.isNaN    ==    isNaN;    	non-compiled	[CE]  not  a  statement	73	None	replace
44	[BUG]  [BUGGY]  return  isInfinite  &&  c.isNaN;  [CE]  not  a  statement  [FE]                    AssertionError      [CONTEXT]      public  boolean  equals(Object  other)  {  if  (this  ==  other)  {  return  true;  }  if  (other  instanceof  Complex){  Complex  c  =  (Complex)other;  if  (c.isNaN)  {      [BUGGY]  return  isInfinite  &&  c.isNaN;  [BUGGY]      }  else  {  return  (real  ==  c.real)  &&  (imaginary  ==  c.imaginary);  }  }  return  false;  }  [CLASS]  Complex  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  other  [VARIABLES]  Object  other  boolean  isInfinite  isNaN  isZero  double  addend  c  d  denominator  divisor  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  	projects/Math46/src/main/java/org/apache/commons/math/complex/Complex.java	0.35355339059327373	329	329	2	replace	return  isInfinite  &&  c.isNaN;	  return    isInfinite    ||    c.isNaN;    	non-compiled	[CE]  not  a  statement	45	None	replace
45	[BUG]  [BUGGY]  return  isInfinite  ||  c.isNaN  ||  isZero;  [CE]  not  a  statement  [FE]                      AssertionError      [CONTEXT]      public  boolean  equals(Object  other)  {  if  (this  ==  other)  {  return  true;  }  if  (other  instanceof  Complex){  Complex  c  =  (Complex)other;  if  (c.isNaN)  {      [BUGGY]  return  isInfinite  ||  c.isNaN  ||  isZero;  [BUGGY]      }  else  {  return  (real  ==  c.real)  &&  (imaginary  ==  c.imaginary);  }  }  return  false;  }  [CLASS]  Complex  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  other  [VARIABLES]  Object  other  boolean  isInfinite  isNaN  isZero  double  addend  c  d  denominator  divisor  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  	projects/Math46/src/main/java/org/apache/commons/math/complex/Complex.java	0.35355339059327373	329	329	2	replace	return  isInfinite  ||  c.isNaN  ||  isZero;	  return    isInfinite    ||    c.isNaN;    	non-compiled	[CE]  not  a  statement	45	None	replace
46	[BUG]  [BUGGY]  double  imaginary  =  c.isNaN  &&  c.isInfinite();  [CE]  not  a  statement  [FE]                      AssertionError      [CONTEXT]      public  boolean  equals(Object  other)  {  if  (this  ==  other)  {  return  true;  }  if  (other  instanceof  Complex){  Complex  c  =  (Complex)other;  if  (c.isNaN)  {      [BUGGY]  double  imaginary  =  c.isNaN  &&  c.isInfinite();  [BUGGY]      return  isNaN;  }  else  {  return  (real  ==  c.real)  &&  (imaginary  ==  c.imaginary);  }  }  return  false;  }  [CLASS]  Complex  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  other  [VARIABLES]  Object  other  boolean  isInfinite  isNaN  isZero  double  addend  c  d  denominator  divisor  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  	projects/Math46/src/main/java/org/apache/commons/math/complex/Complex.java	0.35355339059327373	329	329	2	replace	double  imaginary  =  c.isNaN  &&  c.isInfinite();	  double    imaginary    =    c.isNaN    ||    c.isInfinite();    	non-compiled	[CE]  not  a  statement	52	None	replace
47	[BUG]  [BUGGY]  double  imaginary  =  other.isNaN  &&  c.isZero();  [CE]  not  a  statement  [FE]                    AssertionError      [CONTEXT]      public  boolean  equals(Object  other)  {  if  (this  ==  other)  {  return  true;  }  if  (other  instanceof  Complex){  Complex  c  =  (Complex)other;  if  (c.isNaN)  {      [BUGGY]  double  imaginary  =  other.isNaN  &&  c.isZero();  [BUGGY]      return  isNaN;  }  else  {  return  (real  ==  c.real)  &&  (imaginary  ==  c.imaginary);  }  }  return  false;  }  [CLASS]  Complex  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  other  [VARIABLES]  Object  other  boolean  isInfinite  isNaN  isZero  double  addend  c  d  denominator  divisor  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  	projects/Math46/src/main/java/org/apache/commons/math/complex/Complex.java	0.35355339059327373	329	329	2	replace	double  imaginary  =  other.isNaN  &&  c.isZero();	  double    imaginary    =    c.isNaN    &&    c.isZero();    	non-compiled	[CE]  not  a  statement	51	None	replace
48	[BUG]  [BUGGY]  double  imaginary  =  c.imaginary.equals(denominator);  [CE]  not  a  statement  [FE]                AssertionError      [CONTEXT]      public  boolean  equals(Object  other)  {  if  (this  ==  other)  {  return  true;  }  if  (other  instanceof  Complex){  Complex  c  =  (Complex)other;  if  (c.isNaN)  {      [BUGGY]  double  imaginary  =  c.imaginary.equals(denominator);  [BUGGY]      return  isNaN;  }  else  {  return  (real  ==  c.real)  &&  (imaginary  ==  c.imaginary);  }  }  return  false;  }  [CLASS]  Complex  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  other  [VARIABLES]  Object  other  boolean  isInfinite  isNaN  isZero  double  addend  c  d  denominator  divisor  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  	projects/Math46/src/main/java/org/apache/commons/math/complex/Complex.java	0.35355339059327373	329	329	2	replace	double  imaginary  =  c.imaginary.equals(denominator);	  double    imaginary    =    c.imaginary.infinite();    	non-compiled	[CE]  not  a  statement	96	None	replace
49	[BUG]  [BUGGY]  double  imaginary  =  c.imaginary.equals(divisor);  [CE]  not  a  statement  [FE]                  AssertionError      [CONTEXT]      public  boolean  equals(Object  other)  {  if  (this  ==  other)  {  return  true;  }  if  (other  instanceof  Complex){  Complex  c  =  (Complex)other;  if  (c.isNaN)  {      [BUGGY]  double  imaginary  =  c.imaginary.equals(divisor);  [BUGGY]      return  isNaN;  }  else  {  return  (real  ==  c.real)  &&  (imaginary  ==  c.imaginary);  }  }  return  false;  }  [CLASS]  Complex  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  other  [VARIABLES]  Object  other  boolean  isInfinite  isNaN  isZero  double  addend  c  d  denominator  divisor  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  	projects/Math46/src/main/java/org/apache/commons/math/complex/Complex.java	0.35355339059327373	329	329	2	replace	double  imaginary  =  c.imaginary.equals(divisor);	  double    imaginary    =    c.imaginary.infinite();    	non-compiled	[CE]  not  a  statement	96	None	replace
50	[BUG]  [BUGGY]  double  imaginary  =  c.imaginary.denominator();  [CE]  not  a  statement  [FE]                    AssertionError      [CONTEXT]      public  boolean  equals(Object  other)  {  if  (this  ==  other)  {  return  true;  }  if  (other  instanceof  Complex){  Complex  c  =  (Complex)other;  if  (c.isNaN)  {      [BUGGY]  double  imaginary  =  c.imaginary.denominator();  [BUGGY]      return  isNaN;  }  else  {  return  (real  ==  c.real)  &&  (imaginary  ==  c.imaginary);  }  }  return  false;  }  [CLASS]  Complex  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  other  [VARIABLES]  Object  other  boolean  isInfinite  isNaN  isZero  double  addend  c  d  denominator  divisor  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  	projects/Math46/src/main/java/org/apache/commons/math/complex/Complex.java	0.35355339059327373	329	329	2	replace	double  imaginary  =  c.imaginary.denominator();	  double    imaginary    =    c.imaginary.infinite();    	non-compiled	[CE]  not  a  statement	96	None	replace
51	[BUG]  [BUGGY]  double  imaginary  =  c.isNaN()  &&  c.isZero();  [CE]  not  a  statement  [FE]                  AssertionError      [CONTEXT]      public  boolean  equals(Object  other)  {  if  (this  ==  other)  {  return  true;  }  if  (other  instanceof  Complex){  Complex  c  =  (Complex)other;  if  (c.isNaN)  {      [BUGGY]  double  imaginary  =  c.isNaN()  &&  c.isZero();  [BUGGY]      return  isNaN;  }  else  {  return  (real  ==  c.real)  &&  (imaginary  ==  c.imaginary);  }  }  return  false;  }  [CLASS]  Complex  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  other  [VARIABLES]  Object  other  boolean  isInfinite  isNaN  isZero  double  addend  c  d  denominator  divisor  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  	projects/Math46/src/main/java/org/apache/commons/math/complex/Complex.java	0.35355339059327373	329	329	2	replace	double  imaginary  =  c.isNaN()  &&  c.isZero();	  double    imaginary    =    c.isNaN()    ||    c.isZero();    	non-compiled	[CE]  not  a  statement	7	None	replace
52	[BUG]  [BUGGY]  double  imaginary  =  other.isNaN()  ||  c.isZero();  [CE]  not  a  statement  [FE]                    AssertionError      [CONTEXT]      public  boolean  equals(Object  other)  {  if  (this  ==  other)  {  return  true;  }  if  (other  instanceof  Complex){  Complex  c  =  (Complex)other;  if  (c.isNaN)  {      [BUGGY]  double  imaginary  =  other.isNaN()  ||  c.isZero();  [BUGGY]      return  isNaN;  }  else  {  return  (real  ==  c.real)  &&  (imaginary  ==  c.imaginary);  }  }  return  false;  }  [CLASS]  Complex  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  other  [VARIABLES]  Object  other  boolean  isInfinite  isNaN  isZero  double  addend  c  d  denominator  divisor  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  	projects/Math46/src/main/java/org/apache/commons/math/complex/Complex.java	0.35355339059327373	329	329	2	replace	double  imaginary  =  other.isNaN()  ||  c.isZero();	  double    imaginary    =    c.isNaN()    ||    c.isZero();    	non-compiled	[CE]  not  a  statement	7	None	replace
53	[BUG]  [BUGGY]  return  isNaN  &&  isInfinite  ==  c.isInfinite;  [CE]  not  a  statement  [FE]              AssertionError      [CONTEXT]      public  boolean  equals(Object  other)  {  if  (this  ==  other)  {  return  true;  }  if  (other  instanceof  Complex){  Complex  c  =  (Complex)other;  if  (c.isNaN)  {      [BUGGY]  return  isNaN  &&  isInfinite  ==  c.isInfinite;  [BUGGY]      }  else  {  return  (real  ==  c.real)  &&  (imaginary  ==  c.imaginary);  }  }  return  false;  }  [CLASS]  Complex  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  other  [VARIABLES]  Object  other  boolean  isInfinite  isNaN  isZero  double  addend  c  d  denominator  divisor  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  	projects/Math46/src/main/java/org/apache/commons/math/complex/Complex.java	0.35355339059327373	329	329	2	replace	return  isNaN  &&  isInfinite  ==  c.isInfinite;	  return    c.isNaN    ||    isInfinite    ==    c.isInfinite;    	non-compiled	[CE]  not  a  statement	80	None	replace
54	[BUG]  [BUGGY]  return  isNaN  ||  isInfinite  ==  c.isInfinite;  [CE]  not  a  statement  [FE]                AssertionError      [CONTEXT]      public  boolean  equals(Object  other)  {  if  (this  ==  other)  {  return  true;  }  if  (other  instanceof  Complex){  Complex  c  =  (Complex)other;  if  (c.isNaN)  {      [BUGGY]  return  isNaN  ||  isInfinite  ==  c.isInfinite;  [BUGGY]      }  else  {  return  (real  ==  c.real)  &&  (imaginary  ==  c.imaginary);  }  }  return  false;  }  [CLASS]  Complex  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  other  [VARIABLES]  Object  other  boolean  isInfinite  isNaN  isZero  double  addend  c  d  denominator  divisor  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  	projects/Math46/src/main/java/org/apache/commons/math/complex/Complex.java	0.35355339059327373	329	329	2	replace	return  isNaN  ||  isInfinite  ==  c.isInfinite;	  return    c.isNaN    ||    isInfinite    ==    c.isInfinite;    	non-compiled	[CE]  not  a  statement	80	None	replace
55	[BUG]  [BUGGY]  return  isNaN  ==  c.isNaN  ||  isZero;  [CE]  not  a  statement  [FE]              AssertionError      [CONTEXT]      public  boolean  equals(Object  other)  {  if  (this  ==  other)  {  return  true;  }  if  (other  instanceof  Complex){  Complex  c  =  (Complex)other;  if  (c.isNaN)  {      [BUGGY]  return  isNaN  ==  c.isNaN  ||  isZero;  [BUGGY]      }  else  {  return  (real  ==  c.real)  &&  (imaginary  ==  c.imaginary);  }  }  return  false;  }  [CLASS]  Complex  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  other  [VARIABLES]  Object  other  boolean  isInfinite  isNaN  isZero  double  addend  c  d  denominator  divisor  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  	projects/Math46/src/main/java/org/apache/commons/math/complex/Complex.java	0.35355339059327373	329	329	2	replace	return  isNaN  ==  c.isNaN  ||  isZero;	  return    isNaN    ==    c.isNaN    ||    isInfinite;    	non-compiled	[CE]  not  a  statement	60	None	replace
56	[BUG]  [BUGGY]  return  isInfinite  ==  c.isNaN  ||  isNaN;  [CE]  not  a  statement  [FE]                AssertionError      [CONTEXT]      public  boolean  equals(Object  other)  {  if  (this  ==  other)  {  return  true;  }  if  (other  instanceof  Complex){  Complex  c  =  (Complex)other;  if  (c.isNaN)  {      [BUGGY]  return  isInfinite  ==  c.isNaN  ||  isNaN;  [BUGGY]      }  else  {  return  (real  ==  c.real)  &&  (imaginary  ==  c.imaginary);  }  }  return  false;  }  [CLASS]  Complex  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  other  [VARIABLES]  Object  other  boolean  isInfinite  isNaN  isZero  double  addend  c  d  denominator  divisor  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  	projects/Math46/src/main/java/org/apache/commons/math/complex/Complex.java	0.35355339059327373	329	329	2	replace	return  isInfinite  ==  c.isNaN  ||  isNaN;	  return    isNaN    ==    c.isNaN    ||    isInfinite;    	non-compiled	[CE]  not  a  statement	60	None	replace
57	[BUG]  [BUGGY]  return  isNaN  ==  other.isNaN  ||  isInfinite;  [CE]  not  a  statement  [FE]                  AssertionError      [CONTEXT]      public  boolean  equals(Object  other)  {  if  (this  ==  other)  {  return  true;  }  if  (other  instanceof  Complex){  Complex  c  =  (Complex)other;  if  (c.isNaN)  {      [BUGGY]  return  isNaN  ==  other.isNaN  ||  isInfinite;  [BUGGY]      }  else  {  return  (real  ==  c.real)  &&  (imaginary  ==  c.imaginary);  }  }  return  false;  }  [CLASS]  Complex  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  other  [VARIABLES]  Object  other  boolean  isInfinite  isNaN  isZero  double  addend  c  d  denominator  divisor  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  	projects/Math46/src/main/java/org/apache/commons/math/complex/Complex.java	0.35355339059327373	329	329	2	replace	return  isNaN  ==  other.isNaN  ||  isInfinite;	  return    isNaN    ==    c.isNaN    ||    isInfinite;    	non-compiled	[CE]  not  a  statement	60	None	replace
58	[BUG]  [BUGGY]  double  real  =  other.real();  [CE]  not  a  statement  [FE]              AssertionError      [CONTEXT]      public  boolean  equals(Object  other)  {  if  (this  ==  other)  {  return  true;  }  if  (other  instanceof  Complex){  Complex  c  =  (Complex)other;  if  (c.isNaN)  {      [BUGGY]  double  real  =  other.real();  [BUGGY]      return  isNaN;  }  else  {  return  (real  ==  c.real)  &&  (imaginary  ==  c.imaginary);  }  }  return  false;  }  [CLASS]  Complex  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  other  [VARIABLES]  Object  other  boolean  isInfinite  isNaN  isZero  double  addend  c  d  denominator  divisor  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  	projects/Math46/src/main/java/org/apache/commons/math/complex/Complex.java	0.35355339059327373	329	329	2	replace	double  real  =  other.real();	  double    real    =    c.real();    	non-compiled	[CE]  not  a  statement	15	None	replace
59	[BUG]  [BUGGY]  double  real  =  c.real()  ||  c.real();  [CE]  not  a  statement  [FE]                AssertionError      [CONTEXT]      public  boolean  equals(Object  other)  {  if  (this  ==  other)  {  return  true;  }  if  (other  instanceof  Complex){  Complex  c  =  (Complex)other;  if  (c.isNaN)  {      [BUGGY]  double  real  =  c.real()  ||  c.real();  [BUGGY]      return  isNaN;  }  else  {  return  (real  ==  c.real)  &&  (imaginary  ==  c.imaginary);  }  }  return  false;  }  [CLASS]  Complex  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  other  [VARIABLES]  Object  other  boolean  isInfinite  isNaN  isZero  double  addend  c  d  denominator  divisor  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  	projects/Math46/src/main/java/org/apache/commons/math/complex/Complex.java	0.35355339059327373	329	329	2	replace	double  real  =  c.real()  ||  c.real();	  double    real    =    c.real();    	non-compiled	[CE]  not  a  statement	15	None	replace
60	[BUG]  [BUGGY]  double  real  =  c.real()  ||  c.isNaN();  [CE]  not  a  statement  [FE]                  AssertionError      [CONTEXT]      public  boolean  equals(Object  other)  {  if  (this  ==  other)  {  return  true;  }  if  (other  instanceof  Complex){  Complex  c  =  (Complex)other;  if  (c.isNaN)  {      [BUGGY]  double  real  =  c.real()  ||  c.isNaN();  [BUGGY]      return  isNaN;  }  else  {  return  (real  ==  c.real)  &&  (imaginary  ==  c.imaginary);  }  }  return  false;  }  [CLASS]  Complex  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  other  [VARIABLES]  Object  other  boolean  isInfinite  isNaN  isZero  double  addend  c  d  denominator  divisor  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  	projects/Math46/src/main/java/org/apache/commons/math/complex/Complex.java	0.35355339059327373	329	329	2	replace	double  real  =  c.real()  ||  c.isNaN();	  double    real    =    c.real();    	non-compiled	[CE]  not  a  statement	15	None	replace
61	[BUG]  [BUGGY]  double  imaginary  =  c.imaginary  ||  c.Imaginary!=  null;  [CE]  not  a  statement  [FE]                    AssertionError      [CONTEXT]      public  boolean  equals(Object  other)  {  if  (this  ==  other)  {  return  true;  }  if  (other  instanceof  Complex){  Complex  c  =  (Complex)other;  if  (c.isNaN)  {      [BUGGY]  double  imaginary  =  c.imaginary  ||  c.Imaginary!=  null;  [BUGGY]      return  isNaN;  }  else  {  return  (real  ==  c.real)  &&  (imaginary  ==  c.imaginary);  }  }  return  false;  }  [CLASS]  Complex  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  other  [VARIABLES]  Object  other  boolean  isInfinite  isNaN  isZero  double  addend  c  d  denominator  divisor  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  	projects/Math46/src/main/java/org/apache/commons/math/complex/Complex.java	0.35355339059327373	329	329	2	replace	double  imaginary  =  c.imaginary  ||  c.Imaginary!=  null;	  double    imaginary    =    c.imaginary    ||    c.Imaginary    ==    null;    	non-compiled	[CE]  not  a  statement	93	None	replace
62	[BUG]  [BUGGY]  double  imaginary  =  c.imaginary  &&  c.Imaginary  ==  null;  [CE]  not  a  statement  [FE]                      AssertionError      [CONTEXT]      public  boolean  equals(Object  other)  {  if  (this  ==  other)  {  return  true;  }  if  (other  instanceof  Complex){  Complex  c  =  (Complex)other;  if  (c.isNaN)  {      [BUGGY]  double  imaginary  =  c.imaginary  &&  c.Imaginary  ==  null;  [BUGGY]      return  isNaN;  }  else  {  return  (real  ==  c.real)  &&  (imaginary  ==  c.imaginary);  }  }  return  false;  }  [CLASS]  Complex  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  other  [VARIABLES]  Object  other  boolean  isInfinite  isNaN  isZero  double  addend  c  d  denominator  divisor  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  	projects/Math46/src/main/java/org/apache/commons/math/complex/Complex.java	0.35355339059327373	329	329	2	replace	double  imaginary  =  c.imaginary  &&  c.Imaginary  ==  null;	  double    imaginary    =    c.imaginary    ||    c.Imaginary    ==    null;    	non-compiled	[CE]  not  a  statement	93	None	replace
63	[BUG]  [BUGGY]  double  imaginary  =  c.Imaginary  ||  c.Imaginary  ==  null;  [CE]  not  a  statement  [FE]                        AssertionError      [CONTEXT]      public  boolean  equals(Object  other)  {  if  (this  ==  other)  {  return  true;  }  if  (other  instanceof  Complex){  Complex  c  =  (Complex)other;  if  (c.isNaN)  {      [BUGGY]  double  imaginary  =  c.Imaginary  ||  c.Imaginary  ==  null;  [BUGGY]      return  isNaN;  }  else  {  return  (real  ==  c.real)  &&  (imaginary  ==  c.imaginary);  }  }  return  false;  }  [CLASS]  Complex  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  other  [VARIABLES]  Object  other  boolean  isInfinite  isNaN  isZero  double  addend  c  d  denominator  divisor  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  	projects/Math46/src/main/java/org/apache/commons/math/complex/Complex.java	0.35355339059327373	329	329	2	replace	double  imaginary  =  c.Imaginary  ||  c.Imaginary  ==  null;	  double    imaginary    =    c.imaginary    ||    c.Imaginary    ==    null;    	non-compiled	[CE]  not  a  statement	93	None	replace
64	[BUG]  [BUGGY]  double  imaginary  =  c.infinite()  &&  c.infinite();  [CE]  not  a  statement  [FE]                    AssertionError      [CONTEXT]      public  boolean  equals(Object  other)  {  if  (this  ==  other)  {  return  true;  }  if  (other  instanceof  Complex){  Complex  c  =  (Complex)other;  if  (c.isNaN)  {      [BUGGY]  double  imaginary  =  c.infinite()  &&  c.infinite();  [BUGGY]      return  isNaN;  }  else  {  return  (real  ==  c.real)  &&  (imaginary  ==  c.imaginary);  }  }  return  false;  }  [CLASS]  Complex  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  other  [VARIABLES]  Object  other  boolean  isInfinite  isNaN  isZero  double  addend  c  d  denominator  divisor  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  	projects/Math46/src/main/java/org/apache/commons/math/complex/Complex.java	0.35355339059327373	329	329	2	replace	double  imaginary  =  c.infinite()  &&  c.infinite();	  double    imaginary    =    c.infinite()    ||    c.infinite();    	non-compiled	[CE]  not  a  statement	37	None	replace
65	[BUG]  [BUGGY]  double  imaginary  =  other.infinite()  ||  c.infinite();  [CE]  not  a  statement  [FE]                      AssertionError      [CONTEXT]      public  boolean  equals(Object  other)  {  if  (this  ==  other)  {  return  true;  }  if  (other  instanceof  Complex){  Complex  c  =  (Complex)other;  if  (c.isNaN)  {      [BUGGY]  double  imaginary  =  other.infinite()  ||  c.infinite();  [BUGGY]      return  isNaN;  }  else  {  return  (real  ==  c.real)  &&  (imaginary  ==  c.imaginary);  }  }  return  false;  }  [CLASS]  Complex  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  other  [VARIABLES]  Object  other  boolean  isInfinite  isNaN  isZero  double  addend  c  d  denominator  divisor  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  	projects/Math46/src/main/java/org/apache/commons/math/complex/Complex.java	0.35355339059327373	329	329	2	replace	double  imaginary  =  other.infinite()  ||  c.infinite();	  double    imaginary    =    c.infinite()    ||    c.infinite();    	non-compiled	[CE]  not  a  statement	37	None	replace
66	[BUG]  [BUGGY]  double  imaginary  =  c.infinite()  *  c.infinite();  [CE]  not  a  statement  [FE]                        AssertionError      [CONTEXT]      public  boolean  equals(Object  other)  {  if  (this  ==  other)  {  return  true;  }  if  (other  instanceof  Complex){  Complex  c  =  (Complex)other;  if  (c.isNaN)  {      [BUGGY]  double  imaginary  =  c.infinite()  *  c.infinite();  [BUGGY]      return  isNaN;  }  else  {  return  (real  ==  c.real)  &&  (imaginary  ==  c.imaginary);  }  }  return  false;  }  [CLASS]  Complex  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  other  [VARIABLES]  Object  other  boolean  isInfinite  isNaN  isZero  double  addend  c  d  denominator  divisor  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  	projects/Math46/src/main/java/org/apache/commons/math/complex/Complex.java	0.35355339059327373	329	329	2	replace	double  imaginary  =  c.infinite()  *  c.infinite();	  double    imaginary    =    c.infinite()    ||    c.infinite();    	non-compiled	[CE]  not  a  statement	37	None	replace
67	[BUG]  [BUGGY]  double  imaginary  =  c.denominator.doubleValue();  [CE]  not  a  statement  [FE]                  AssertionError      [CONTEXT]      public  boolean  equals(Object  other)  {  if  (this  ==  other)  {  return  true;  }  if  (other  instanceof  Complex){  Complex  c  =  (Complex)other;  if  (c.isNaN)  {      [BUGGY]  double  imaginary  =  c.denominator.doubleValue();  [BUGGY]      return  isNaN;  }  else  {  return  (real  ==  c.real)  &&  (imaginary  ==  c.imaginary);  }  }  return  false;  }  [CLASS]  Complex  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  other  [VARIABLES]  Object  other  boolean  isInfinite  isNaN  isZero  double  addend  c  d  denominator  divisor  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  	projects/Math46/src/main/java/org/apache/commons/math/complex/Complex.java	0.35355339059327373	329	329	2	replace	double  imaginary  =  c.denominator.doubleValue();	  double    imaginary    =    c.denominator.infinite();    	non-compiled	[CE]  not  a  statement	36	None	replace
68	[BUG]  [BUGGY]  double  imaginary  =  other.denominator.infinite();  [CE]  not  a  statement  [FE]                    AssertionError      [CONTEXT]      public  boolean  equals(Object  other)  {  if  (this  ==  other)  {  return  true;  }  if  (other  instanceof  Complex){  Complex  c  =  (Complex)other;  if  (c.isNaN)  {      [BUGGY]  double  imaginary  =  other.denominator.infinite();  [BUGGY]      return  isNaN;  }  else  {  return  (real  ==  c.real)  &&  (imaginary  ==  c.imaginary);  }  }  return  false;  }  [CLASS]  Complex  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  other  [VARIABLES]  Object  other  boolean  isInfinite  isNaN  isZero  double  addend  c  d  denominator  divisor  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  	projects/Math46/src/main/java/org/apache/commons/math/complex/Complex.java	0.35355339059327373	329	329	2	replace	double  imaginary  =  other.denominator.infinite();	  double    imaginary    =    c.denominator.infinite();    	non-compiled	[CE]  not  a  statement	36	None	replace
69	[BUG]  [BUGGY]  double  imaginary  =  c.isNaN  &&  c.imaginary;  [CE]  not  a  statement  [FE]              AssertionError      [CONTEXT]      public  boolean  equals(Object  other)  {  if  (this  ==  other)  {  return  true;  }  if  (other  instanceof  Complex){  Complex  c  =  (Complex)other;  if  (c.isNaN)  {      [BUGGY]  double  imaginary  =  c.isNaN  &&  c.imaginary;  [BUGGY]      return  isNaN;  }  else  {  return  (real  ==  c.real)  &&  (imaginary  ==  c.imaginary);  }  }  return  false;  }  [CLASS]  Complex  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  other  [VARIABLES]  Object  other  boolean  isInfinite  isNaN  isZero  double  addend  c  d  denominator  divisor  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  	projects/Math46/src/main/java/org/apache/commons/math/complex/Complex.java	0.35355339059327373	329	329	2	replace	double  imaginary  =  c.isNaN  &&  c.imaginary;	  double    imaginary    =    c.isNaN    ||    c.imaginary;    	non-compiled	[CE]  not  a  statement	92	None	replace
70	[BUG]  [BUGGY]  double  imaginary  =  c.imaginary  ||  c.isNaN;  [CE]  not  a  statement  [FE]                AssertionError      [CONTEXT]      public  boolean  equals(Object  other)  {  if  (this  ==  other)  {  return  true;  }  if  (other  instanceof  Complex){  Complex  c  =  (Complex)other;  if  (c.isNaN)  {      [BUGGY]  double  imaginary  =  c.imaginary  ||  c.isNaN;  [BUGGY]      return  isNaN;  }  else  {  return  (real  ==  c.real)  &&  (imaginary  ==  c.imaginary);  }  }  return  false;  }  [CLASS]  Complex  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  other  [VARIABLES]  Object  other  boolean  isInfinite  isNaN  isZero  double  addend  c  d  denominator  divisor  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  	projects/Math46/src/main/java/org/apache/commons/math/complex/Complex.java	0.35355339059327373	329	329	2	replace	double  imaginary  =  c.imaginary  ||  c.isNaN;	  double    imaginary    =    c.isNaN    ||    c.imaginary;    	non-compiled	[CE]  not  a  statement	92	None	replace
71	[BUG]  [BUGGY]  double  imaginary  =  c.isNaN  ||  c.real;  [CE]  not  a  statement  [FE]                  AssertionError      [CONTEXT]      public  boolean  equals(Object  other)  {  if  (this  ==  other)  {  return  true;  }  if  (other  instanceof  Complex){  Complex  c  =  (Complex)other;  if  (c.isNaN)  {      [BUGGY]  double  imaginary  =  c.isNaN  ||  c.real;  [BUGGY]      return  isNaN;  }  else  {  return  (real  ==  c.real)  &&  (imaginary  ==  c.imaginary);  }  }  return  false;  }  [CLASS]  Complex  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  other  [VARIABLES]  Object  other  boolean  isInfinite  isNaN  isZero  double  addend  c  d  denominator  divisor  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  	projects/Math46/src/main/java/org/apache/commons/math/complex/Complex.java	0.35355339059327373	329	329	2	replace	double  imaginary  =  c.isNaN  ||  c.real;	  double    imaginary    =    c.isNaN    ||    c.imaginary;    	non-compiled	[CE]  not  a  statement	92	None	replace
72	[BUG]  [BUGGY]  double  real  =  c.isNaN()  &&  c.isZero();  [CE]  not  a  statement  [FE]                AssertionError      [CONTEXT]      public  boolean  equals(Object  other)  {  if  (this  ==  other)  {  return  true;  }  if  (other  instanceof  Complex){  Complex  c  =  (Complex)other;  if  (c.isNaN)  {      [BUGGY]  double  real  =  c.isNaN()  &&  c.isZero();  [BUGGY]      return  isNaN;  }  else  {  return  (real  ==  c.real)  &&  (imaginary  ==  c.imaginary);  }  }  return  false;  }  [CLASS]  Complex  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  other  [VARIABLES]  Object  other  boolean  isInfinite  isNaN  isZero  double  addend  c  d  denominator  divisor  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  	projects/Math46/src/main/java/org/apache/commons/math/complex/Complex.java	0.35355339059327373	329	329	2	replace	double  real  =  c.isNaN()  &&  c.isZero();	  double    real    =    c.isNaN()    ||    c.isZero();    	non-compiled	[CE]  not  a  statement	16	None	replace
73	[BUG]  [BUGGY]  double  real  =  other.isNaN()  ||  c.isZero();  [CE]  not  a  statement  [FE]                  AssertionError      [CONTEXT]      public  boolean  equals(Object  other)  {  if  (this  ==  other)  {  return  true;  }  if  (other  instanceof  Complex){  Complex  c  =  (Complex)other;  if  (c.isNaN)  {      [BUGGY]  double  real  =  other.isNaN()  ||  c.isZero();  [BUGGY]      return  isNaN;  }  else  {  return  (real  ==  c.real)  &&  (imaginary  ==  c.imaginary);  }  }  return  false;  }  [CLASS]  Complex  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  other  [VARIABLES]  Object  other  boolean  isInfinite  isNaN  isZero  double  addend  c  d  denominator  divisor  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  	projects/Math46/src/main/java/org/apache/commons/math/complex/Complex.java	0.35355339059327373	329	329	2	replace	double  real  =  other.isNaN()  ||  c.isZero();	  double    real    =    c.isNaN()    ||    c.isZero();    	non-compiled	[CE]  not  a  statement	16	None	replace
74	[BUG]  [BUGGY]  double  imaginary  =  c.infinite(divisor);  [CE]  not  a  statement  [FE]                AssertionError      [CONTEXT]      public  boolean  equals(Object  other)  {  if  (this  ==  other)  {  return  true;  }  if  (other  instanceof  Complex){  Complex  c  =  (Complex)other;  if  (c.isNaN)  {      [BUGGY]  double  imaginary  =  c.infinite(divisor);  [BUGGY]      return  isNaN;  }  else  {  return  (real  ==  c.real)  &&  (imaginary  ==  c.imaginary);  }  }  return  false;  }  [CLASS]  Complex  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  other  [VARIABLES]  Object  other  boolean  isInfinite  isNaN  isZero  double  addend  c  d  denominator  divisor  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  	projects/Math46/src/main/java/org/apache/commons/math/complex/Complex.java	0.35355339059327373	329	329	2	replace	double  imaginary  =  c.infinite(divisor);	  double    imaginary    =    c.infinite(denominator);    	non-compiled	[CE]  not  a  statement	66	None	replace
75	[BUG]  [BUGGY]  double  imaginary  =  c.infinite(d,  denominator);  [CE]  not  a  statement  [FE]                  AssertionError      [CONTEXT]      public  boolean  equals(Object  other)  {  if  (this  ==  other)  {  return  true;  }  if  (other  instanceof  Complex){  Complex  c  =  (Complex)other;  if  (c.isNaN)  {      [BUGGY]  double  imaginary  =  c.infinite(d,  denominator);  [BUGGY]      return  isNaN;  }  else  {  return  (real  ==  c.real)  &&  (imaginary  ==  c.imaginary);  }  }  return  false;  }  [CLASS]  Complex  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  other  [VARIABLES]  Object  other  boolean  isInfinite  isNaN  isZero  double  addend  c  d  denominator  divisor  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  	projects/Math46/src/main/java/org/apache/commons/math/complex/Complex.java	0.35355339059327373	329	329	2	replace	double  imaginary  =  c.infinite(d,  denominator);	  double    imaginary    =    c.infinite(denominator);    	non-compiled	[CE]  not  a  statement	66	None	replace
76	[BUG]  [BUGGY]  double  imaginary  =  c.isNaN  &&  c.isDivisor();  [CE]  not  a  statement  [FE]                        AssertionError      [CONTEXT]      public  boolean  equals(Object  other)  {  if  (this  ==  other)  {  return  true;  }  if  (other  instanceof  Complex){  Complex  c  =  (Complex)other;  if  (c.isNaN)  {      [BUGGY]  double  imaginary  =  c.isNaN  &&  c.isDivisor();  [BUGGY]      return  isNaN;  }  else  {  return  (real  ==  c.real)  &&  (imaginary  ==  c.imaginary);  }  }  return  false;  }  [CLASS]  Complex  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  other  [VARIABLES]  Object  other  boolean  isInfinite  isNaN  isZero  double  addend  c  d  denominator  divisor  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  	projects/Math46/src/main/java/org/apache/commons/math/complex/Complex.java	0.35355339059327373	329	329	2	replace	double  imaginary  =  c.isNaN  &&  c.isDivisor();	  double    imaginary    =    c.isNaN    ||    c.isDivisor();    	non-compiled	[CE]  not  a  statement	53	None	replace
77	[BUG]  [BUGGY]  double  imaginary  =  c.isNaN  ||  c.isDenominator();  [CE]  not  a  statement  [FE]                          AssertionError      [CONTEXT]      public  boolean  equals(Object  other)  {  if  (this  ==  other)  {  return  true;  }  if  (other  instanceof  Complex){  Complex  c  =  (Complex)other;  if  (c.isNaN)  {      [BUGGY]  double  imaginary  =  c.isNaN  ||  c.isDenominator();  [BUGGY]      return  isNaN;  }  else  {  return  (real  ==  c.real)  &&  (imaginary  ==  c.imaginary);  }  }  return  false;  }  [CLASS]  Complex  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  other  [VARIABLES]  Object  other  boolean  isInfinite  isNaN  isZero  double  addend  c  d  denominator  divisor  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  	projects/Math46/src/main/java/org/apache/commons/math/complex/Complex.java	0.35355339059327373	329	329	2	replace	double  imaginary  =  c.isNaN  ||  c.isDenominator();	  double    imaginary    =    c.isNaN    ||    c.isDivisor();    	non-compiled	[CE]  not  a  statement	53	None	replace
78	[BUG]  [BUGGY]  double  real  =  other.isNaN  &&  c.isZero();  [CE]  not  a  statement  [FE]                  AssertionError      [CONTEXT]      public  boolean  equals(Object  other)  {  if  (this  ==  other)  {  return  true;  }  if  (other  instanceof  Complex){  Complex  c  =  (Complex)other;  if  (c.isNaN)  {      [BUGGY]  double  real  =  other.isNaN  &&  c.isZero();  [BUGGY]      return  isNaN;  }  else  {  return  (real  ==  c.real)  &&  (imaginary  ==  c.imaginary);  }  }  return  false;  }  [CLASS]  Complex  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  other  [VARIABLES]  Object  other  boolean  isInfinite  isNaN  isZero  double  addend  c  d  denominator  divisor  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  	projects/Math46/src/main/java/org/apache/commons/math/complex/Complex.java	0.35355339059327373	329	329	2	replace	double  real  =  other.isNaN  &&  c.isZero();	  double    real    =    other.isNaN    ||    c.isZero();    	non-compiled	[CE]  not  a  statement	50	None	replace
79	[BUG]  [BUGGY]  double  real  =  c.isNaN  ||  other.isZero();  [CE]  not  a  statement  [FE]                    AssertionError      [CONTEXT]      public  boolean  equals(Object  other)  {  if  (this  ==  other)  {  return  true;  }  if  (other  instanceof  Complex){  Complex  c  =  (Complex)other;  if  (c.isNaN)  {      [BUGGY]  double  real  =  c.isNaN  ||  other.isZero();  [BUGGY]      return  isNaN;  }  else  {  return  (real  ==  c.real)  &&  (imaginary  ==  c.imaginary);  }  }  return  false;  }  [CLASS]  Complex  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  other  [VARIABLES]  Object  other  boolean  isInfinite  isNaN  isZero  double  addend  c  d  denominator  divisor  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  	projects/Math46/src/main/java/org/apache/commons/math/complex/Complex.java	0.35355339059327373	329	329	2	replace	double  real  =  c.isNaN  ||  other.isZero();	  double    real    =    other.isNaN    ||    c.isZero();    	non-compiled	[CE]  not  a  statement	50	None	replace
80	[BUG]  [BUGGY]  double  real  =  c.isInfinite  ||  c.isZero;  [CE]  not  a  statement  [FE]                    AssertionError      [CONTEXT]      public  boolean  equals(Object  other)  {  if  (this  ==  other)  {  return  true;  }  if  (other  instanceof  Complex){  Complex  c  =  (Complex)other;  if  (c.isNaN)  {      [BUGGY]  double  real  =  c.isInfinite  ||  c.isZero;  [BUGGY]      return  isNaN;  }  else  {  return  (real  ==  c.real)  &&  (imaginary  ==  c.imaginary);  }  }  return  false;  }  [CLASS]  Complex  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  other  [VARIABLES]  Object  other  boolean  isInfinite  isNaN  isZero  double  addend  c  d  denominator  divisor  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  	projects/Math46/src/main/java/org/apache/commons/math/complex/Complex.java	0.35355339059327373	329	329	2	replace	double  real  =  c.isInfinite  ||  c.isZero;	  double    real    =    c.isInfinite    ||    c.isNaN;    	non-compiled	[CE]  not  a  statement	21	None	replace
81	[BUG]  [BUGGY]  double  real  =  c.isInfinite  &&  c.isNaN;  [CE]  not  a  statement  [FE]                      AssertionError      [CONTEXT]      public  boolean  equals(Object  other)  {  if  (this  ==  other)  {  return  true;  }  if  (other  instanceof  Complex){  Complex  c  =  (Complex)other;  if  (c.isNaN)  {      [BUGGY]  double  real  =  c.isInfinite  &&  c.isNaN;  [BUGGY]      return  isNaN;  }  else  {  return  (real  ==  c.real)  &&  (imaginary  ==  c.imaginary);  }  }  return  false;  }  [CLASS]  Complex  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  other  [VARIABLES]  Object  other  boolean  isInfinite  isNaN  isZero  double  addend  c  d  denominator  divisor  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  	projects/Math46/src/main/java/org/apache/commons/math/complex/Complex.java	0.35355339059327373	329	329	2	replace	double  real  =  c.isInfinite  &&  c.isNaN;	  double    real    =    c.isInfinite    ||    c.isNaN;    	non-compiled	[CE]  not  a  statement	21	None	replace
82	[BUG]  [BUGGY]  double  imaginary  =  c.isInfinite()  &&  c.isZero();  [CE]  not  a  statement  [FE]              AssertionError      [CONTEXT]      public  boolean  equals(Object  other)  {  if  (this  ==  other)  {  return  true;  }  if  (other  instanceof  Complex){  Complex  c  =  (Complex)other;  if  (c.isNaN)  {      [BUGGY]  double  imaginary  =  c.isInfinite()  &&  c.isZero();  [BUGGY]      return  isNaN;  }  else  {  return  (real  ==  c.real)  &&  (imaginary  ==  c.imaginary);  }  }  return  false;  }  [CLASS]  Complex  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  other  [VARIABLES]  Object  other  boolean  isInfinite  isNaN  isZero  double  addend  c  d  denominator  divisor  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  	projects/Math46/src/main/java/org/apache/commons/math/complex/Complex.java	0.35355339059327373	329	329	2	replace	double  imaginary  =  c.isInfinite()  &&  c.isZero();	  double    imaginary    =    c.isInfinite()    ||    c.isZero();    	non-compiled	[CE]  not  a  statement	30	None	replace
83	[BUG]  [BUGGY]  double  imaginary  =  other.isInfinite()  ||  c.isZero();  [CE]  not  a  statement  [FE]                AssertionError      [CONTEXT]      public  boolean  equals(Object  other)  {  if  (this  ==  other)  {  return  true;  }  if  (other  instanceof  Complex){  Complex  c  =  (Complex)other;  if  (c.isNaN)  {      [BUGGY]  double  imaginary  =  other.isInfinite()  ||  c.isZero();  [BUGGY]      return  isNaN;  }  else  {  return  (real  ==  c.real)  &&  (imaginary  ==  c.imaginary);  }  }  return  false;  }  [CLASS]  Complex  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  other  [VARIABLES]  Object  other  boolean  isInfinite  isNaN  isZero  double  addend  c  d  denominator  divisor  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  	projects/Math46/src/main/java/org/apache/commons/math/complex/Complex.java	0.35355339059327373	329	329	2	replace	double  imaginary  =  other.isInfinite()  ||  c.isZero();	  double    imaginary    =    c.isInfinite()    ||    c.isZero();    	non-compiled	[CE]  not  a  statement	30	None	replace
84	[BUG]  [BUGGY]  double  imaginary  =  c.isInfinite()  ||  c.isNaN();  [CE]  not  a  statement  [FE]                  AssertionError      [CONTEXT]      public  boolean  equals(Object  other)  {  if  (this  ==  other)  {  return  true;  }  if  (other  instanceof  Complex){  Complex  c  =  (Complex)other;  if  (c.isNaN)  {      [BUGGY]  double  imaginary  =  c.isInfinite()  ||  c.isNaN();  [BUGGY]      return  isNaN;  }  else  {  return  (real  ==  c.real)  &&  (imaginary  ==  c.imaginary);  }  }  return  false;  }  [CLASS]  Complex  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  other  [VARIABLES]  Object  other  boolean  isInfinite  isNaN  isZero  double  addend  c  d  denominator  divisor  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  	projects/Math46/src/main/java/org/apache/commons/math/complex/Complex.java	0.35355339059327373	329	329	2	replace	double  imaginary  =  c.isInfinite()  ||  c.isNaN();	  double    imaginary    =    c.isInfinite()    ||    c.isZero();    	non-compiled	[CE]  not  a  statement	30	None	replace
85	[BUG]  [BUGGY]  double  imaginary  =  c.real  ||  c.imaginary  ==  d.imaginary;  [CE]  not  a  statement  [FE]                  AssertionError      [CONTEXT]      public  boolean  equals(Object  other)  {  if  (this  ==  other)  {  return  true;  }  if  (other  instanceof  Complex){  Complex  c  =  (Complex)other;  if  (c.isNaN)  {      [BUGGY]  double  imaginary  =  c.real  ||  c.imaginary  ==  d.imaginary;  [BUGGY]      return  isNaN;  }  else  {  return  (real  ==  c.real)  &&  (imaginary  ==  c.imaginary);  }  }  return  false;  }  [CLASS]  Complex  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  other  [VARIABLES]  Object  other  boolean  isInfinite  isNaN  isZero  double  addend  c  d  denominator  divisor  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  	projects/Math46/src/main/java/org/apache/commons/math/complex/Complex.java	0.35355339059327373	329	329	2	replace	double  imaginary  =  c.real  ||  c.imaginary  ==  d.imaginary;	  double    imaginary    =    c.real    ||    c.imaginary    ==    c.imaginary;    	non-compiled	[CE]  not  a  statement	69	None	replace
86	[BUG]  [BUGGY]  double  imaginary  =  c.imaginary  ||  c.real  ==  c.real;  [CE]  not  a  statement  [FE]                    AssertionError      [CONTEXT]      public  boolean  equals(Object  other)  {  if  (this  ==  other)  {  return  true;  }  if  (other  instanceof  Complex){  Complex  c  =  (Complex)other;  if  (c.isNaN)  {      [BUGGY]  double  imaginary  =  c.imaginary  ||  c.real  ==  c.real;  [BUGGY]      return  isNaN;  }  else  {  return  (real  ==  c.real)  &&  (imaginary  ==  c.imaginary);  }  }  return  false;  }  [CLASS]  Complex  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  other  [VARIABLES]  Object  other  boolean  isInfinite  isNaN  isZero  double  addend  c  d  denominator  divisor  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  	projects/Math46/src/main/java/org/apache/commons/math/complex/Complex.java	0.35355339059327373	329	329	2	replace	double  imaginary  =  c.imaginary  ||  c.real  ==  c.real;	  double    imaginary    =    c.real    ||    c.imaginary    ==    c.imaginary;    	non-compiled	[CE]  not  a  statement	69	None	replace
87	[BUG]  [BUGGY]  double  imaginary  =  c.imaginary.equals(other.imaginary);  [CE]  not  a  statement  [FE]                  AssertionError      [CONTEXT]      public  boolean  equals(Object  other)  {  if  (this  ==  other)  {  return  true;  }  if  (other  instanceof  Complex){  Complex  c  =  (Complex)other;  if  (c.isNaN)  {      [BUGGY]  double  imaginary  =  c.imaginary.equals(other.imaginary);  [BUGGY]      return  isNaN;  }  else  {  return  (real  ==  c.real)  &&  (imaginary  ==  c.imaginary);  }  }  return  false;  }  [CLASS]  Complex  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  other  [VARIABLES]  Object  other  boolean  isInfinite  isNaN  isZero  double  addend  c  d  denominator  divisor  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  	projects/Math46/src/main/java/org/apache/commons/math/complex/Complex.java	0.35355339059327373	329	329	2	replace	double  imaginary  =  c.imaginary.equals(other.imaginary);	  double    imaginary    =    c.imaginary.isNaN();    	non-compiled	[CE]  not  a  statement	94	None	replace
88	[BUG]  [BUGGY]  double  real  =  c.real  ||  c.imaginary;  [CE]  not  a  statement  [FE]                AssertionError      [CONTEXT]      public  boolean  equals(Object  other)  {  if  (this  ==  other)  {  return  true;  }  if  (other  instanceof  Complex){  Complex  c  =  (Complex)other;  if  (c.isNaN)  {      [BUGGY]  double  real  =  c.real  ||  c.imaginary;  [BUGGY]      return  isNaN;  }  else  {  return  (real  ==  c.real)  &&  (imaginary  ==  c.imaginary);  }  }  return  false;  }  [CLASS]  Complex  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  other  [VARIABLES]  Object  other  boolean  isInfinite  isNaN  isZero  double  addend  c  d  denominator  divisor  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  	projects/Math46/src/main/java/org/apache/commons/math/complex/Complex.java	0.35355339059327373	329	329	2	replace	double  real  =  c.real  ||  c.imaginary;	  double    real    =    c.real    ||    c.real;    	non-compiled	[CE]  not  a  statement	6	None	replace
89	[BUG]  [BUGGY]  double  real  =  c.real  ||  imaginary;  [CE]  not  a  statement  [FE]                  AssertionError      [CONTEXT]      public  boolean  equals(Object  other)  {  if  (this  ==  other)  {  return  true;  }  if  (other  instanceof  Complex){  Complex  c  =  (Complex)other;  if  (c.isNaN)  {      [BUGGY]  double  real  =  c.real  ||  imaginary;  [BUGGY]      return  isNaN;  }  else  {  return  (real  ==  c.real)  &&  (imaginary  ==  c.imaginary);  }  }  return  false;  }  [CLASS]  Complex  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  other  [VARIABLES]  Object  other  boolean  isInfinite  isNaN  isZero  double  addend  c  d  denominator  divisor  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  	projects/Math46/src/main/java/org/apache/commons/math/complex/Complex.java	0.35355339059327373	329	329	2	replace	double  real  =  c.real  ||  imaginary;	  double    real    =    c.real    ||    c.real;    	non-compiled	[CE]  not  a  statement	6	None	replace
90	[BUG]  [BUGGY]  double  real  =  other.real  ||  c.real;  [CE]  not  a  statement  [FE]                    AssertionError      [CONTEXT]      public  boolean  equals(Object  other)  {  if  (this  ==  other)  {  return  true;  }  if  (other  instanceof  Complex){  Complex  c  =  (Complex)other;  if  (c.isNaN)  {      [BUGGY]  double  real  =  other.real  ||  c.real;  [BUGGY]      return  isNaN;  }  else  {  return  (real  ==  c.real)  &&  (imaginary  ==  c.imaginary);  }  }  return  false;  }  [CLASS]  Complex  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  other  [VARIABLES]  Object  other  boolean  isInfinite  isNaN  isZero  double  addend  c  d  denominator  divisor  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  	projects/Math46/src/main/java/org/apache/commons/math/complex/Complex.java	0.35355339059327373	329	329	2	replace	double  real  =  other.real  ||  c.real;	  double    real    =    c.real    ||    c.real;    	non-compiled	[CE]  not  a  statement	6	None	replace
91	[BUG]  [BUGGY]  return(c.real  ==  real)&&  (imaginary  ==  c.imaginary);  [CE]  not  a  statement  [FE]                    AssertionError      [CONTEXT]      public  boolean  equals(Object  other)  {  if  (this  ==  other)  {  return  true;  }  if  (other  instanceof  Complex){  Complex  c  =  (Complex)other;  if  (c.isNaN)  {      [BUGGY]  return(c.real  ==  real)&&  (imaginary  ==  c.imaginary);  [BUGGY]      }  else  {  return  (real  ==  c.real)  &&  (imaginary  ==  c.imaginary);  }  }  return  false;  }  [CLASS]  Complex  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  other  [VARIABLES]  Object  other  boolean  isInfinite  isNaN  isZero  double  addend  c  d  denominator  divisor  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  	projects/Math46/src/main/java/org/apache/commons/math/complex/Complex.java	0.35355339059327373	329	329	2	replace	return(c.real  ==  real)&&  (imaginary  ==  c.imaginary);	  return(real    ==    c.real)&&    (imaginary    ==    c.imaginary);    	non-compiled	[CE]  not  a  statement	1	None	replace
92	[BUG]  [BUGGY]  return(c.real  ==  imaginary)&&  (imaginary  ==  c.imaginary);  [CE]  not  a  statement  [FE]                      AssertionError      [CONTEXT]      public  boolean  equals(Object  other)  {  if  (this  ==  other)  {  return  true;  }  if  (other  instanceof  Complex){  Complex  c  =  (Complex)other;  if  (c.isNaN)  {      [BUGGY]  return(c.real  ==  imaginary)&&  (imaginary  ==  c.imaginary);  [BUGGY]      }  else  {  return  (real  ==  c.real)  &&  (imaginary  ==  c.imaginary);  }  }  return  false;  }  [CLASS]  Complex  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  other  [VARIABLES]  Object  other  boolean  isInfinite  isNaN  isZero  double  addend  c  d  denominator  divisor  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  	projects/Math46/src/main/java/org/apache/commons/math/complex/Complex.java	0.35355339059327373	329	329	2	replace	return(c.real  ==  imaginary)&&  (imaginary  ==  c.imaginary);	  return(real    ==    c.real)&&    (imaginary    ==    c.imaginary);    	non-compiled	[CE]  not  a  statement	1	None	replace
93	[BUG]  [BUGGY]  return(this.real  ==  c.real)&&  (imaginary  ==  c.imaginary);  [CE]  not  a  statement  [FE]                        AssertionError      [CONTEXT]      public  boolean  equals(Object  other)  {  if  (this  ==  other)  {  return  true;  }  if  (other  instanceof  Complex){  Complex  c  =  (Complex)other;  if  (c.isNaN)  {      [BUGGY]  return(this.real  ==  c.real)&&  (imaginary  ==  c.imaginary);  [BUGGY]      }  else  {  return  (real  ==  c.real)  &&  (imaginary  ==  c.imaginary);  }  }  return  false;  }  [CLASS]  Complex  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  other  [VARIABLES]  Object  other  boolean  isInfinite  isNaN  isZero  double  addend  c  d  denominator  divisor  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  	projects/Math46/src/main/java/org/apache/commons/math/complex/Complex.java	0.35355339059327373	329	329	2	replace	return(this.real  ==  c.real)&&  (imaginary  ==  c.imaginary);	  return(real    ==    c.real)&&    (imaginary    ==    c.imaginary);    	non-compiled	[CE]  not  a  statement	1	None	replace
94	[BUG]  [BUGGY]  double  imaginary  =  c.isInfinite()  &&  c.isInfinite();  [CE]  not  a  statement  [FE]              AssertionError      [CONTEXT]      public  boolean  equals(Object  other)  {  if  (this  ==  other)  {  return  true;  }  if  (other  instanceof  Complex){  Complex  c  =  (Complex)other;  if  (c.isNaN)  {      [BUGGY]  double  imaginary  =  c.isInfinite()  &&  c.isInfinite();  [BUGGY]      return  isNaN;  }  else  {  return  (real  ==  c.real)  &&  (imaginary  ==  c.imaginary);  }  }  return  false;  }  [CLASS]  Complex  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  other  [VARIABLES]  Object  other  boolean  isInfinite  isNaN  isZero  double  addend  c  d  denominator  divisor  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  	projects/Math46/src/main/java/org/apache/commons/math/complex/Complex.java	0.35355339059327373	329	329	2	replace	double  imaginary  =  c.isInfinite()  &&  c.isInfinite();	  double    imaginary    =    c.isInfinite()    ||    c.isInfinite();    	non-compiled	[CE]  not  a  statement	87	None	replace
95	[BUG]  [BUGGY]  return  isNaN  &&  isInfinite  ==  c.infinite;  [CE]  not  a  statement  [FE]                AssertionError      [CONTEXT]      public  boolean  equals(Object  other)  {  if  (this  ==  other)  {  return  true;  }  if  (other  instanceof  Complex){  Complex  c  =  (Complex)other;  if  (c.isNaN)  {      [BUGGY]  return  isNaN  &&  isInfinite  ==  c.infinite;  [BUGGY]      }  else  {  return  (real  ==  c.real)  &&  (imaginary  ==  c.imaginary);  }  }  return  false;  }  [CLASS]  Complex  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  other  [VARIABLES]  Object  other  boolean  isInfinite  isNaN  isZero  double  addend  c  d  denominator  divisor  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  	projects/Math46/src/main/java/org/apache/commons/math/complex/Complex.java	0.35355339059327373	329	329	2	replace	return  isNaN  &&  isInfinite  ==  c.infinite;	  return    c.isNaN    ||    isInfinite    ==    c.infinite;    	non-compiled	[CE]  not  a  statement	58	None	replace
96	[BUG]  [BUGGY]  return  isNaN  ||  isInfinite  ==  c.infinite;  [CE]  not  a  statement  [FE]                  AssertionError      [CONTEXT]      public  boolean  equals(Object  other)  {  if  (this  ==  other)  {  return  true;  }  if  (other  instanceof  Complex){  Complex  c  =  (Complex)other;  if  (c.isNaN)  {      [BUGGY]  return  isNaN  ||  isInfinite  ==  c.infinite;  [BUGGY]      }  else  {  return  (real  ==  c.real)  &&  (imaginary  ==  c.imaginary);  }  }  return  false;  }  [CLASS]  Complex  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  other  [VARIABLES]  Object  other  boolean  isInfinite  isNaN  isZero  double  addend  c  d  denominator  divisor  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  	projects/Math46/src/main/java/org/apache/commons/math/complex/Complex.java	0.35355339059327373	329	329	2	replace	return  isNaN  ||  isInfinite  ==  c.infinite;	  return    c.isNaN    ||    isInfinite    ==    c.infinite;    	non-compiled	[CE]  not  a  statement	58	None	replace
97	[BUG]  [BUGGY]  return  isInfinite  ||  c.isNaN  ==  c.infinite;  [CE]  not  a  statement  [FE]                    AssertionError      [CONTEXT]      public  boolean  equals(Object  other)  {  if  (this  ==  other)  {  return  true;  }  if  (other  instanceof  Complex){  Complex  c  =  (Complex)other;  if  (c.isNaN)  {      [BUGGY]  return  isInfinite  ||  c.isNaN  ==  c.infinite;  [BUGGY]      }  else  {  return  (real  ==  c.real)  &&  (imaginary  ==  c.imaginary);  }  }  return  false;  }  [CLASS]  Complex  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  other  [VARIABLES]  Object  other  boolean  isInfinite  isNaN  isZero  double  addend  c  d  denominator  divisor  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  	projects/Math46/src/main/java/org/apache/commons/math/complex/Complex.java	0.35355339059327373	329	329	2	replace	return  isInfinite  ||  c.isNaN  ==  c.infinite;	  return    c.isNaN    ||    isInfinite    ==    c.infinite;    	non-compiled	[CE]  not  a  statement	58	None	replace
98	[BUG]  [BUGGY]  return  isInfinite  ==  c.infinite  &&  isNaN  ==  c.isNaN;  [CE]  not  a  statement  [FE]                AssertionError      [CONTEXT]      public  boolean  equals(Object  other)  {  if  (this  ==  other)  {  return  true;  }  if  (other  instanceof  Complex){  Complex  c  =  (Complex)other;  if  (c.isNaN)  {      [BUGGY]  return  isInfinite  ==  c.infinite  &&  isNaN  ==  c.isNaN;  [BUGGY]      }  else  {  return  (real  ==  c.real)  &&  (imaginary  ==  c.imaginary);  }  }  return  false;  }  [CLASS]  Complex  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  other  [VARIABLES]  Object  other  boolean  isInfinite  isNaN  isZero  double  addend  c  d  denominator  divisor  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  	projects/Math46/src/main/java/org/apache/commons/math/complex/Complex.java	0.35355339059327373	329	329	2	replace	return  isInfinite  ==  c.infinite  &&  isNaN  ==  c.isNaN;	  return    isNaN    ==    c.isNaN    &&    isInfinite    ==    c.infinite;    	non-compiled	[CE]  not  a  statement	23	None	replace
99	[BUG]  [BUGGY]  return  isInfinite  ==  c.isNaN  &&  isNaN  ==  c.infinite;  [CE]  not  a  statement  [FE]                  AssertionError      [CONTEXT]      public  boolean  equals(Object  other)  {  if  (this  ==  other)  {  return  true;  }  if  (other  instanceof  Complex){  Complex  c  =  (Complex)other;  if  (c.isNaN)  {      [BUGGY]  return  isInfinite  ==  c.isNaN  &&  isNaN  ==  c.infinite;  [BUGGY]      }  else  {  return  (real  ==  c.real)  &&  (imaginary  ==  c.imaginary);  }  }  return  false;  }  [CLASS]  Complex  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  other  [VARIABLES]  Object  other  boolean  isInfinite  isNaN  isZero  double  addend  c  d  denominator  divisor  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  	projects/Math46/src/main/java/org/apache/commons/math/complex/Complex.java	0.35355339059327373	329	329	2	replace	return  isInfinite  ==  c.isNaN  &&  isNaN  ==  c.infinite;	  return    isNaN    ==    c.isNaN    &&    isInfinite    ==    c.infinite;    	non-compiled	[CE]  not  a  statement	23	None	replace
100	[BUG]  [BUGGY]  double  imaginary  =  c.isInfinite  ||  c.isZero;  [CE]  not  a  statement  [FE]                  AssertionError      [CONTEXT]      public  boolean  equals(Object  other)  {  if  (this  ==  other)  {  return  true;  }  if  (other  instanceof  Complex){  Complex  c  =  (Complex)other;  if  (c.isNaN)  {      [BUGGY]  double  imaginary  =  c.isInfinite  ||  c.isZero;  [BUGGY]      return  isNaN;  }  else  {  return  (real  ==  c.real)  &&  (imaginary  ==  c.imaginary);  }  }  return  false;  }  [CLASS]  Complex  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  other  [VARIABLES]  Object  other  boolean  isInfinite  isNaN  isZero  double  addend  c  d  denominator  divisor  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  	projects/Math46/src/main/java/org/apache/commons/math/complex/Complex.java	0.35355339059327373	329	329	2	replace	double  imaginary  =  c.isInfinite  ||  c.isZero;	  double    imaginary    =    c.isInfinite    ||    c.isNaN;    	non-compiled	[CE]  not  a  statement	13	None	replace
101	[BUG]  [BUGGY]  double  real  =  c.isNaN()  &&  c.isInfinite();  [CE]  not  a  statement  [FE]            AssertionError      [CONTEXT]      public  boolean  equals(Object  other)  {  if  (this  ==  other)  {  return  true;  }  if  (other  instanceof  Complex){  Complex  c  =  (Complex)other;  if  (c.isNaN)  {      [BUGGY]  double  real  =  c.isNaN()  &&  c.isInfinite();  [BUGGY]      return  isNaN;  }  else  {  return  (real  ==  c.real)  &&  (imaginary  ==  c.imaginary);  }  }  return  false;  }  [CLASS]  Complex  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  other  [VARIABLES]  Object  other  boolean  isInfinite  isNaN  isZero  double  addend  c  d  denominator  divisor  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  	projects/Math46/src/main/java/org/apache/commons/math/complex/Complex.java	0.35355339059327373	329	329	2	replace	double  real  =  c.isNaN()  &&  c.isInfinite();	  double    real    =    c.isNaN()    ||    c.isInfinite();    	non-compiled	[CE]  not  a  statement	68	None	replace
102	[BUG]  [BUGGY]  double  real  =  other.isNaN()  ||  c.isInfinite();  [CE]  not  a  statement  [FE]              AssertionError      [CONTEXT]      public  boolean  equals(Object  other)  {  if  (this  ==  other)  {  return  true;  }  if  (other  instanceof  Complex){  Complex  c  =  (Complex)other;  if  (c.isNaN)  {      [BUGGY]  double  real  =  other.isNaN()  ||  c.isInfinite();  [BUGGY]      return  isNaN;  }  else  {  return  (real  ==  c.real)  &&  (imaginary  ==  c.imaginary);  }  }  return  false;  }  [CLASS]  Complex  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  other  [VARIABLES]  Object  other  boolean  isInfinite  isNaN  isZero  double  addend  c  d  denominator  divisor  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  	projects/Math46/src/main/java/org/apache/commons/math/complex/Complex.java	0.35355339059327373	329	329	2	replace	double  real  =  other.isNaN()  ||  c.isInfinite();	  double    real    =    c.isNaN()    ||    c.isInfinite();    	non-compiled	[CE]  not  a  statement	68	None	replace
103	[BUG]  [BUGGY]  double  real  =  c.real.getDivisor()  +  1;  [CE]  not  a  statement  [FE]                AssertionError      [CONTEXT]      public  boolean  equals(Object  other)  {  if  (this  ==  other)  {  return  true;  }  if  (other  instanceof  Complex){  Complex  c  =  (Complex)other;  if  (c.isNaN)  {      [BUGGY]  double  real  =  c.real.getDivisor()  +  1;  [BUGGY]      return  isNaN;  }  else  {  return  (real  ==  c.real)  &&  (imaginary  ==  c.imaginary);  }  }  return  false;  }  [CLASS]  Complex  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  other  [VARIABLES]  Object  other  boolean  isInfinite  isNaN  isZero  double  addend  c  d  denominator  divisor  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  	projects/Math46/src/main/java/org/apache/commons/math/complex/Complex.java	0.35355339059327373	329	329	2	replace	double  real  =  c.real.getDivisor()  +  1;	  double    real    =    c.real.getDivisor();    	non-compiled	[CE]  not  a  statement	82	None	replace
104	[BUG]  [BUGGY]  double  real  =  c.real.getDenominator();  [CE]  not  a  statement  [FE]                  AssertionError      [CONTEXT]      public  boolean  equals(Object  other)  {  if  (this  ==  other)  {  return  true;  }  if  (other  instanceof  Complex){  Complex  c  =  (Complex)other;  if  (c.isNaN)  {      [BUGGY]  double  real  =  c.real.getDenominator();  [BUGGY]      return  isNaN;  }  else  {  return  (real  ==  c.real)  &&  (imaginary  ==  c.imaginary);  }  }  return  false;  }  [CLASS]  Complex  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  other  [VARIABLES]  Object  other  boolean  isInfinite  isNaN  isZero  double  addend  c  d  denominator  divisor  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  	projects/Math46/src/main/java/org/apache/commons/math/complex/Complex.java	0.35355339059327373	329	329	2	replace	double  real  =  c.real.getDenominator();	  double    real    =    c.real.getDivisor();    	non-compiled	[CE]  not  a  statement	82	None	replace
105	[BUG]  [BUGGY]  return  isNaN  ==  c.isNaN  &&  isZero  ==  c.isInfinite;  [CE]  not  a  statement  [FE]            AssertionError      [CONTEXT]      public  boolean  equals(Object  other)  {  if  (this  ==  other)  {  return  true;  }  if  (other  instanceof  Complex){  Complex  c  =  (Complex)other;  if  (c.isNaN)  {      [BUGGY]  return  isNaN  ==  c.isNaN  &&  isZero  ==  c.isInfinite;  [BUGGY]      }  else  {  return  (real  ==  c.real)  &&  (imaginary  ==  c.imaginary);  }  }  return  false;  }  [CLASS]  Complex  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  other  [VARIABLES]  Object  other  boolean  isInfinite  isNaN  isZero  double  addend  c  d  denominator  divisor  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  	projects/Math46/src/main/java/org/apache/commons/math/complex/Complex.java	0.35355339059327373	329	329	2	replace	return  isNaN  ==  c.isNaN  &&  isZero  ==  c.isInfinite;	  return    isNaN    ==    c.isNaN    ||    isZero    ==    c.isInfinite;    	non-compiled	[CE]  not  a  statement	71	None	replace
106	[BUG]  [BUGGY]  return  isNaN  ==  other.isNaN  ||  isZero  ==  c.isInfinite;  [CE]  not  a  statement  [FE]              AssertionError      [CONTEXT]      public  boolean  equals(Object  other)  {  if  (this  ==  other)  {  return  true;  }  if  (other  instanceof  Complex){  Complex  c  =  (Complex)other;  if  (c.isNaN)  {      [BUGGY]  return  isNaN  ==  other.isNaN  ||  isZero  ==  c.isInfinite;  [BUGGY]      }  else  {  return  (real  ==  c.real)  &&  (imaginary  ==  c.imaginary);  }  }  return  false;  }  [CLASS]  Complex  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  other  [VARIABLES]  Object  other  boolean  isInfinite  isNaN  isZero  double  addend  c  d  denominator  divisor  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  	projects/Math46/src/main/java/org/apache/commons/math/complex/Complex.java	0.35355339059327373	329	329	2	replace	return  isNaN  ==  other.isNaN  ||  isZero  ==  c.isInfinite;	  return    isNaN    ==    c.isNaN    ||    isZero    ==    c.isInfinite;    	non-compiled	[CE]  not  a  statement	71	None	replace
107	[BUG]  [BUGGY]  double  imaginary  =  c.imaginary  ||  c.imaginary!=  d.imaginary;  [CE]  not  a  statement  [FE]              AssertionError      [CONTEXT]      public  boolean  equals(Object  other)  {  if  (this  ==  other)  {  return  true;  }  if  (other  instanceof  Complex){  Complex  c  =  (Complex)other;  if  (c.isNaN)  {      [BUGGY]  double  imaginary  =  c.imaginary  ||  c.imaginary!=  d.imaginary;  [BUGGY]      return  isNaN;  }  else  {  return  (real  ==  c.real)  &&  (imaginary  ==  c.imaginary);  }  }  return  false;  }  [CLASS]  Complex  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  other  [VARIABLES]  Object  other  boolean  isInfinite  isNaN  isZero  double  addend  c  d  denominator  divisor  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  	projects/Math46/src/main/java/org/apache/commons/math/complex/Complex.java	0.35355339059327373	329	329	2	replace	double  imaginary  =  c.imaginary  ||  c.imaginary!=  d.imaginary;	  double    imaginary    =    c.imaginary    ||    c.imaginary!=    c.imaginary;    	non-compiled	[CE]  not  a  statement	78	None	replace
108	[BUG]  [BUGGY]  double  imaginary  =  c.imaginary  ||  c.imaginary!=  denominator;  [CE]  not  a  statement  [FE]                AssertionError      [CONTEXT]      public  boolean  equals(Object  other)  {  if  (this  ==  other)  {  return  true;  }  if  (other  instanceof  Complex){  Complex  c  =  (Complex)other;  if  (c.isNaN)  {      [BUGGY]  double  imaginary  =  c.imaginary  ||  c.imaginary!=  denominator;  [BUGGY]      return  isNaN;  }  else  {  return  (real  ==  c.real)  &&  (imaginary  ==  c.imaginary);  }  }  return  false;  }  [CLASS]  Complex  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  other  [VARIABLES]  Object  other  boolean  isInfinite  isNaN  isZero  double  addend  c  d  denominator  divisor  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  	projects/Math46/src/main/java/org/apache/commons/math/complex/Complex.java	0.35355339059327373	329	329	2	replace	double  imaginary  =  c.imaginary  ||  c.imaginary!=  denominator;	  double    imaginary    =    c.imaginary    ||    c.imaginary!=    c.imaginary;    	non-compiled	[CE]  not  a  statement	78	None	replace
109	[BUG]  [BUGGY]  double  imaginary  =  other.imaginary();  [CE]  not  a  statement  [FE]                  AssertionError      [CONTEXT]      public  boolean  equals(Object  other)  {  if  (this  ==  other)  {  return  true;  }  if  (other  instanceof  Complex){  Complex  c  =  (Complex)other;  if  (c.isNaN)  {      [BUGGY]  double  imaginary  =  other.imaginary();  [BUGGY]      return  isNaN;  }  else  {  return  (real  ==  c.real)  &&  (imaginary  ==  c.imaginary);  }  }  return  false;  }  [CLASS]  Complex  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  other  [VARIABLES]  Object  other  boolean  isInfinite  isNaN  isZero  double  addend  c  d  denominator  divisor  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  	projects/Math46/src/main/java/org/apache/commons/math/complex/Complex.java	0.35355339059327373	329	329	2	replace	double  imaginary  =  other.imaginary();	  double    imaginary    =    c.imaginary();    	non-compiled	[CE]  not  a  statement	67	None	replace
110	[BUG]  [BUGGY]  double  imaginary  =  c.imaginary()  ||  c.imaginary();  [CE]  not  a  statement  [FE]                    AssertionError      [CONTEXT]      public  boolean  equals(Object  other)  {  if  (this  ==  other)  {  return  true;  }  if  (other  instanceof  Complex){  Complex  c  =  (Complex)other;  if  (c.isNaN)  {      [BUGGY]  double  imaginary  =  c.imaginary()  ||  c.imaginary();  [BUGGY]      return  isNaN;  }  else  {  return  (real  ==  c.real)  &&  (imaginary  ==  c.imaginary);  }  }  return  false;  }  [CLASS]  Complex  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  other  [VARIABLES]  Object  other  boolean  isInfinite  isNaN  isZero  double  addend  c  d  denominator  divisor  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  	projects/Math46/src/main/java/org/apache/commons/math/complex/Complex.java	0.35355339059327373	329	329	2	replace	double  imaginary  =  c.imaginary()  ||  c.imaginary();	  double    imaginary    =    c.imaginary();    	non-compiled	[CE]  not  a  statement	67	None	replace
111	[BUG]  [BUGGY]  double  imaginary  =  c.real();  [CE]  not  a  statement  [FE]                      AssertionError      [CONTEXT]      public  boolean  equals(Object  other)  {  if  (this  ==  other)  {  return  true;  }  if  (other  instanceof  Complex){  Complex  c  =  (Complex)other;  if  (c.isNaN)  {      [BUGGY]  double  imaginary  =  c.real();  [BUGGY]      return  isNaN;  }  else  {  return  (real  ==  c.real)  &&  (imaginary  ==  c.imaginary);  }  }  return  false;  }  [CLASS]  Complex  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  other  [VARIABLES]  Object  other  boolean  isInfinite  isNaN  isZero  double  addend  c  d  denominator  divisor  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  	projects/Math46/src/main/java/org/apache/commons/math/complex/Complex.java	0.35355339059327373	329	329	2	replace	double  imaginary  =  c.real();	  double    imaginary    =    c.imaginary();    	non-compiled	[CE]  not  a  statement	67	None	replace
112	[BUG]  [BUGGY]  return  c.isNaN  ||  c.isNaN  +  1;  [CE]  not  a  statement  [FE]                      AssertionError      [CONTEXT]      public  boolean  equals(Object  other)  {  if  (this  ==  other)  {  return  true;  }  if  (other  instanceof  Complex){  Complex  c  =  (Complex)other;  if  (c.isNaN)  {      [BUGGY]  return  c.isNaN  ||  c.isNaN  +  1;  [BUGGY]      }  else  {  return  (real  ==  c.real)  &&  (imaginary  ==  c.imaginary);  }  }  return  false;  }  [CLASS]  Complex  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  other  [VARIABLES]  Object  other  boolean  isInfinite  isNaN  isZero  double  addend  c  d  denominator  divisor  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  	projects/Math46/src/main/java/org/apache/commons/math/complex/Complex.java	0.35355339059327373	329	329	2	replace	return  c.isNaN  ||  c.isNaN  +  1;	  return    c.isNaN    ||    c.isNaN;    	non-compiled	[CE]  not  a  statement	2	None	replace
113	[BUG]  [BUGGY]  double  imaginary  =  other.denominator;  [CE]  not  a  statement  [FE]                    AssertionError      [CONTEXT]      public  boolean  equals(Object  other)  {  if  (this  ==  other)  {  return  true;  }  if  (other  instanceof  Complex){  Complex  c  =  (Complex)other;  if  (c.isNaN)  {      [BUGGY]  double  imaginary  =  other.denominator;  [BUGGY]      return  isNaN;  }  else  {  return  (real  ==  c.real)  &&  (imaginary  ==  c.imaginary);  }  }  return  false;  }  [CLASS]  Complex  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  other  [VARIABLES]  Object  other  boolean  isInfinite  isNaN  isZero  double  addend  c  d  denominator  divisor  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  	projects/Math46/src/main/java/org/apache/commons/math/complex/Complex.java	0.35355339059327373	329	329	2	replace	double  imaginary  =  other.denominator;	  double    imaginary    =    other.real;    	non-compiled	[CE]  not  a  statement	26	None	replace
114	[BUG]  [BUGGY]  return  isNaN  ==  c.isNaN  &&  isZero  ==  c.infinite;  [CE]  not  a  statement  [FE]              AssertionError      [CONTEXT]      public  boolean  equals(Object  other)  {  if  (this  ==  other)  {  return  true;  }  if  (other  instanceof  Complex){  Complex  c  =  (Complex)other;  if  (c.isNaN)  {      [BUGGY]  return  isNaN  ==  c.isNaN  &&  isZero  ==  c.infinite;  [BUGGY]      }  else  {  return  (real  ==  c.real)  &&  (imaginary  ==  c.imaginary);  }  }  return  false;  }  [CLASS]  Complex  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  other  [VARIABLES]  Object  other  boolean  isInfinite  isNaN  isZero  double  addend  c  d  denominator  divisor  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  	projects/Math46/src/main/java/org/apache/commons/math/complex/Complex.java	0.35355339059327373	329	329	2	replace	return  isNaN  ==  c.isNaN  &&  isZero  ==  c.infinite;	  return    isNaN    ==    c.isNaN    ||    isZero    ==    c.infinite;    	non-compiled	[CE]  not  a  statement	90	None	replace
115	[BUG]  [BUGGY]  return  isNaN  ==  other.isNaN  ||  isZero  ==  c.infinite;  [CE]  not  a  statement  [FE]                AssertionError      [CONTEXT]      public  boolean  equals(Object  other)  {  if  (this  ==  other)  {  return  true;  }  if  (other  instanceof  Complex){  Complex  c  =  (Complex)other;  if  (c.isNaN)  {      [BUGGY]  return  isNaN  ==  other.isNaN  ||  isZero  ==  c.infinite;  [BUGGY]      }  else  {  return  (real  ==  c.real)  &&  (imaginary  ==  c.imaginary);  }  }  return  false;  }  [CLASS]  Complex  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  other  [VARIABLES]  Object  other  boolean  isInfinite  isNaN  isZero  double  addend  c  d  denominator  divisor  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  	projects/Math46/src/main/java/org/apache/commons/math/complex/Complex.java	0.35355339059327373	329	329	2	replace	return  isNaN  ==  other.isNaN  ||  isZero  ==  c.infinite;	  return    isNaN    ==    c.isNaN    ||    isZero    ==    c.infinite;    	non-compiled	[CE]  not  a  statement	90	None	replace
116	[BUG]  [BUGGY]  if(c.isNaN)  {  return  false;  }  [CE]  not  a  statement  [FE]                        AssertionError      [CONTEXT]      public  boolean  equals(Object  other)  {  if  (this  ==  other)  {  return  true;  }  if  (other  instanceof  Complex){  Complex  c  =  (Complex)other;  if  (c.isNaN)  {      [BUGGY]  if(c.isNaN)  {  return  false;  }  [BUGGY]      }  else  {  return  (real  ==  c.real)  &&  (imaginary  ==  c.imaginary);  }  }  return  false;  }  [CLASS]  Complex  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  other  [VARIABLES]  Object  other  boolean  isInfinite  isNaN  isZero  double  addend  c  d  denominator  divisor  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  	projects/Math46/src/main/java/org/apache/commons/math/complex/Complex.java	0.35355339059327373	329	329	2	replace	if(c.isNaN)  {  return  false;  }	  if(c.isNaN)    {    return    true;    }    	non-compiled	[CE]  not  a  statement	3	None	replace
117	[BUG]  [BUGGY]  if(c.isNaN  ||  c.isNaN)  {  return  true;  }  [CE]  not  a  statement  [FE]                          AssertionError      [CONTEXT]      public  boolean  equals(Object  other)  {  if  (this  ==  other)  {  return  true;  }  if  (other  instanceof  Complex){  Complex  c  =  (Complex)other;  if  (c.isNaN)  {      [BUGGY]  if(c.isNaN  ||  c.isNaN)  {  return  true;  }  [BUGGY]      }  else  {  return  (real  ==  c.real)  &&  (imaginary  ==  c.imaginary);  }  }  return  false;  }  [CLASS]  Complex  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  other  [VARIABLES]  Object  other  boolean  isInfinite  isNaN  isZero  double  addend  c  d  denominator  divisor  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  	projects/Math46/src/main/java/org/apache/commons/math/complex/Complex.java	0.35355339059327373	329	329	2	replace	if(c.isNaN  ||  c.isNaN)  {  return  true;  }	  if(c.isNaN)    {    return    true;    }    	non-compiled	[CE]  not  a  statement	3	None	replace
118	[BUG]  [BUGGY]  parent  ==  c.parent)  {  return  true;  }  [CE]  not  a  statement  [FE]                            AssertionError      [CONTEXT]      public  boolean  equals(Object  other)  {  if  (this  ==  other)  {  return  true;  }  if  (other  instanceof  Complex){  Complex  c  =  (Complex)other;  if  (c.isNaN)  {      [BUGGY]  parent  ==  c.parent)  {  return  true;  }  [BUGGY]      }  else  {  return  (real  ==  c.real)  &&  (imaginary  ==  c.imaginary);  }  }  return  false;  }  [CLASS]  Complex  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  other  [VARIABLES]  Object  other  boolean  isInfinite  isNaN  isZero  double  addend  c  d  denominator  divisor  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  	projects/Math46/src/main/java/org/apache/commons/math/complex/Complex.java	0.35355339059327373	329	329	2	replace	parent  ==  c.parent)  {  return  true;  }	  if(c.isNaN)    {    return    true;    }    	non-compiled	[CE]  not  a  statement	3	None	replace
119	[BUG]  [BUGGY]  if(c.isNaN  ||  c.isInfinite)  {  return  true;  }  [CE]  not  a  statement  [FE]                              AssertionError      [CONTEXT]      public  boolean  equals(Object  other)  {  if  (this  ==  other)  {  return  true;  }  if  (other  instanceof  Complex){  Complex  c  =  (Complex)other;  if  (c.isNaN)  {      [BUGGY]  if(c.isNaN  ||  c.isInfinite)  {  return  true;  }  [BUGGY]      }  else  {  return  (real  ==  c.real)  &&  (imaginary  ==  c.imaginary);  }  }  return  false;  }  [CLASS]  Complex  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  other  [VARIABLES]  Object  other  boolean  isInfinite  isNaN  isZero  double  addend  c  d  denominator  divisor  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  	projects/Math46/src/main/java/org/apache/commons/math/complex/Complex.java	0.35355339059327373	329	329	2	replace	if(c.isNaN  ||  c.isInfinite)  {  return  true;  }	  if(c.isNaN)    {    return    true;    }    	non-compiled	[CE]  not  a  statement	3	None	replace
120	[BUG]  [BUGGY]  double  real  =  c.real  ||  imaginary  ==  c.imaginary;  [CE]  not  a  statement  [FE]              AssertionError      [CONTEXT]      public  boolean  equals(Object  other)  {  if  (this  ==  other)  {  return  true;  }  if  (other  instanceof  Complex){  Complex  c  =  (Complex)other;  if  (c.isNaN)  {      [BUGGY]  double  real  =  c.real  ||  imaginary  ==  c.imaginary;  [BUGGY]      return  isNaN;  }  else  {  return  (real  ==  c.real)  &&  (imaginary  ==  c.imaginary);  }  }  return  false;  }  [CLASS]  Complex  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  other  [VARIABLES]  Object  other  boolean  isInfinite  isNaN  isZero  double  addend  c  d  denominator  divisor  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  	projects/Math46/src/main/java/org/apache/commons/math/complex/Complex.java	0.35355339059327373	329	329	2	replace	double  real  =  c.real  ||  imaginary  ==  c.imaginary;	  double    real    =    c.real    ||    c.imaginary    ==    c.imaginary;    	non-compiled	[CE]  not  a  statement	5	None	replace
121	[BUG]  [BUGGY]  double  real  =  c.real  ||  c.imaginary  ==  d.imaginary;  [CE]  not  a  statement  [FE]                AssertionError      [CONTEXT]      public  boolean  equals(Object  other)  {  if  (this  ==  other)  {  return  true;  }  if  (other  instanceof  Complex){  Complex  c  =  (Complex)other;  if  (c.isNaN)  {      [BUGGY]  double  real  =  c.real  ||  c.imaginary  ==  d.imaginary;  [BUGGY]      return  isNaN;  }  else  {  return  (real  ==  c.real)  &&  (imaginary  ==  c.imaginary);  }  }  return  false;  }  [CLASS]  Complex  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  other  [VARIABLES]  Object  other  boolean  isInfinite  isNaN  isZero  double  addend  c  d  denominator  divisor  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  	projects/Math46/src/main/java/org/apache/commons/math/complex/Complex.java	0.35355339059327373	329	329	2	replace	double  real  =  c.real  ||  c.imaginary  ==  d.imaginary;	  double    real    =    c.real    ||    c.imaginary    ==    c.imaginary;    	non-compiled	[CE]  not  a  statement	5	None	replace
122	[BUG]  [BUGGY]  double  imaginary  =  c.imaginary  ||  c.imaginary  ==  d.imaginary;  [CE]  not  a  statement  [FE]            AssertionError      [CONTEXT]      public  boolean  equals(Object  other)  {  if  (this  ==  other)  {  return  true;  }  if  (other  instanceof  Complex){  Complex  c  =  (Complex)other;  if  (c.isNaN)  {      [BUGGY]  double  imaginary  =  c.imaginary  ||  c.imaginary  ==  d.imaginary;  [BUGGY]      return  isNaN;  }  else  {  return  (real  ==  c.real)  &&  (imaginary  ==  c.imaginary);  }  }  return  false;  }  [CLASS]  Complex  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  other  [VARIABLES]  Object  other  boolean  isInfinite  isNaN  isZero  double  addend  c  d  denominator  divisor  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  	projects/Math46/src/main/java/org/apache/commons/math/complex/Complex.java	0.35355339059327373	329	329	2	replace	double  imaginary  =  c.imaginary  ||  c.imaginary  ==  d.imaginary;	  double    imaginary    =    c.imaginary    ||    c.imaginary    ==    c.imaginary;    	non-compiled	[CE]  not  a  statement	77	None	replace
123	[BUG]  [BUGGY]  double  imaginary  =  c.imaginary  ||  c.imaginary  ==  denominator;  [CE]  not  a  statement  [FE]              AssertionError      [CONTEXT]      public  boolean  equals(Object  other)  {  if  (this  ==  other)  {  return  true;  }  if  (other  instanceof  Complex){  Complex  c  =  (Complex)other;  if  (c.isNaN)  {      [BUGGY]  double  imaginary  =  c.imaginary  ||  c.imaginary  ==  denominator;  [BUGGY]      return  isNaN;  }  else  {  return  (real  ==  c.real)  &&  (imaginary  ==  c.imaginary);  }  }  return  false;  }  [CLASS]  Complex  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  other  [VARIABLES]  Object  other  boolean  isInfinite  isNaN  isZero  double  addend  c  d  denominator  divisor  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  	projects/Math46/src/main/java/org/apache/commons/math/complex/Complex.java	0.35355339059327373	329	329	2	replace	double  imaginary  =  c.imaginary  ||  c.imaginary  ==  denominator;	  double    imaginary    =    c.imaginary    ||    c.imaginary    ==    c.imaginary;    	non-compiled	[CE]  not  a  statement	77	None	replace
124	[BUG]  [BUGGY]  double  real  =  other.isNaN  &&  c.isInfinite;  [CE]  not  a  statement  [FE]                  AssertionError      [CONTEXT]      public  boolean  equals(Object  other)  {  if  (this  ==  other)  {  return  true;  }  if  (other  instanceof  Complex){  Complex  c  =  (Complex)other;  if  (c.isNaN)  {      [BUGGY]  double  real  =  other.isNaN  &&  c.isInfinite;  [BUGGY]      return  isNaN;  }  else  {  return  (real  ==  c.real)  &&  (imaginary  ==  c.imaginary);  }  }  return  false;  }  [CLASS]  Complex  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  other  [VARIABLES]  Object  other  boolean  isInfinite  isNaN  isZero  double  addend  c  d  denominator  divisor  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  	projects/Math46/src/main/java/org/apache/commons/math/complex/Complex.java	0.35355339059327373	329	329	2	replace	double  real  =  other.isNaN  &&  c.isInfinite;	  double    real    =    c.isNaN    &&    c.isInfinite;    	non-compiled	[CE]  not  a  statement	20	None	replace
125	[BUG]  [BUGGY]  double  real  =  c.real  &&  c.isInfinite;  [CE]  not  a  statement  [FE]                    AssertionError      [CONTEXT]      public  boolean  equals(Object  other)  {  if  (this  ==  other)  {  return  true;  }  if  (other  instanceof  Complex){  Complex  c  =  (Complex)other;  if  (c.isNaN)  {      [BUGGY]  double  real  =  c.real  &&  c.isInfinite;  [BUGGY]      return  isNaN;  }  else  {  return  (real  ==  c.real)  &&  (imaginary  ==  c.imaginary);  }  }  return  false;  }  [CLASS]  Complex  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  other  [VARIABLES]  Object  other  boolean  isInfinite  isNaN  isZero  double  addend  c  d  denominator  divisor  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  	projects/Math46/src/main/java/org/apache/commons/math/complex/Complex.java	0.35355339059327373	329	329	2	replace	double  real  =  c.real  &&  c.isInfinite;	  double    real    =    c.isNaN    &&    c.isInfinite;    	non-compiled	[CE]  not  a  statement	20	None	replace
126	[BUG]  [BUGGY]  double  real  =  c.isNaN  &&  c.isZero;  [CE]  not  a  statement  [FE]                AssertionError      [CONTEXT]      public  boolean  equals(Object  other)  {  if  (this  ==  other)  {  return  true;  }  if  (other  instanceof  Complex){  Complex  c  =  (Complex)other;  if  (c.isNaN)  {      [BUGGY]  double  real  =  c.isNaN  &&  c.isZero;  [BUGGY]      return  isNaN;  }  else  {  return  (real  ==  c.real)  &&  (imaginary  ==  c.imaginary);  }  }  return  false;  }  [CLASS]  Complex  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  other  [VARIABLES]  Object  other  boolean  isInfinite  isNaN  isZero  double  addend  c  d  denominator  divisor  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  	projects/Math46/src/main/java/org/apache/commons/math/complex/Complex.java	0.35355339059327373	329	329	2	replace	double  real  =  c.isNaN  &&  c.isZero;	  double    real    =    c.isNaN    ||    c.isZero;    	non-compiled	[CE]  not  a  statement	19	None	replace
127	[BUG]  [BUGGY]  double  real  =  other.isNaN  ||  c.isZero;  [CE]  not  a  statement  [FE]                  AssertionError      [CONTEXT]      public  boolean  equals(Object  other)  {  if  (this  ==  other)  {  return  true;  }  if  (other  instanceof  Complex){  Complex  c  =  (Complex)other;  if  (c.isNaN)  {      [BUGGY]  double  real  =  other.isNaN  ||  c.isZero;  [BUGGY]      return  isNaN;  }  else  {  return  (real  ==  c.real)  &&  (imaginary  ==  c.imaginary);  }  }  return  false;  }  [CLASS]  Complex  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  other  [VARIABLES]  Object  other  boolean  isInfinite  isNaN  isZero  double  addend  c  d  denominator  divisor  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  	projects/Math46/src/main/java/org/apache/commons/math/complex/Complex.java	0.35355339059327373	329	329	2	replace	double  real  =  other.isNaN  ||  c.isZero;	  double    real    =    c.isNaN    ||    c.isZero;    	non-compiled	[CE]  not  a  statement	19	None	replace
128	[BUG]  [BUGGY]  double  real  =  c.real  ||  imaginary!=  c.imaginary;  [CE]  not  a  statement  [FE]            AssertionError      [CONTEXT]      public  boolean  equals(Object  other)  {  if  (this  ==  other)  {  return  true;  }  if  (other  instanceof  Complex){  Complex  c  =  (Complex)other;  if  (c.isNaN)  {      [BUGGY]  double  real  =  c.real  ||  imaginary!=  c.imaginary;  [BUGGY]      return  isNaN;  }  else  {  return  (real  ==  c.real)  &&  (imaginary  ==  c.imaginary);  }  }  return  false;  }  [CLASS]  Complex  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  other  [VARIABLES]  Object  other  boolean  isInfinite  isNaN  isZero  double  addend  c  d  denominator  divisor  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  	projects/Math46/src/main/java/org/apache/commons/math/complex/Complex.java	0.35355339059327373	329	329	2	replace	double  real  =  c.real  ||  imaginary!=  c.imaginary;	  double    real    =    c.real    ||    c.imaginary!=    c.imaginary;    	non-compiled	[CE]  not  a  statement	4	None	replace
129	[BUG]  [BUGGY]  double  imaginary  =  c.isNaN  &&  c.isImaginary();  [CE]  not  a  statement  [FE]                    AssertionError      [CONTEXT]      public  boolean  equals(Object  other)  {  if  (this  ==  other)  {  return  true;  }  if  (other  instanceof  Complex){  Complex  c  =  (Complex)other;  if  (c.isNaN)  {      [BUGGY]  double  imaginary  =  c.isNaN  &&  c.isImaginary();  [BUGGY]      return  isNaN;  }  else  {  return  (real  ==  c.real)  &&  (imaginary  ==  c.imaginary);  }  }  return  false;  }  [CLASS]  Complex  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  other  [VARIABLES]  Object  other  boolean  isInfinite  isNaN  isZero  double  addend  c  d  denominator  divisor  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  	projects/Math46/src/main/java/org/apache/commons/math/complex/Complex.java	0.35355339059327373	329	329	2	replace	double  imaginary  =  c.isNaN  &&  c.isImaginary();	  double    imaginary    =    c.isNaN    ||    c.isImaginary();    	non-compiled	[CE]  not  a  statement	89	None	replace
130	[BUG]  [BUGGY]  return  isInfinite  ==  c.isNaN  &&  isNaN  ==  c.isInfinite;  [CE]  not  a  statement  [FE]              AssertionError      [CONTEXT]      public  boolean  equals(Object  other)  {  if  (this  ==  other)  {  return  true;  }  if  (other  instanceof  Complex){  Complex  c  =  (Complex)other;  if  (c.isNaN)  {      [BUGGY]  return  isInfinite  ==  c.isNaN  &&  isNaN  ==  c.isInfinite;  [BUGGY]      }  else  {  return  (real  ==  c.real)  &&  (imaginary  ==  c.imaginary);  }  }  return  false;  }  [CLASS]  Complex  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  other  [VARIABLES]  Object  other  boolean  isInfinite  isNaN  isZero  double  addend  c  d  denominator  divisor  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  	projects/Math46/src/main/java/org/apache/commons/math/complex/Complex.java	0.35355339059327373	329	329	2	replace	return  isInfinite  ==  c.isNaN  &&  isNaN  ==  c.isInfinite;	  return    isNaN    ==    c.isNaN    &&    isInfinite    ==    c.isInfinite;    	non-compiled	[CE]  not  a  statement	39	None	replace
131	[BUG]  [BUGGY]  double  real  =  c.getDivisor()  *  1;  [CE]  not  a  statement  [FE]                    AssertionError      [CONTEXT]      public  boolean  equals(Object  other)  {  if  (this  ==  other)  {  return  true;  }  if  (other  instanceof  Complex){  Complex  c  =  (Complex)other;  if  (c.isNaN)  {      [BUGGY]  double  real  =  c.getDivisor()  *  1;  [BUGGY]      return  isNaN;  }  else  {  return  (real  ==  c.real)  &&  (imaginary  ==  c.imaginary);  }  }  return  false;  }  [CLASS]  Complex  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  other  [VARIABLES]  Object  other  boolean  isInfinite  isNaN  isZero  double  addend  c  d  denominator  divisor  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  	projects/Math46/src/main/java/org/apache/commons/math/complex/Complex.java	0.35355339059327373	329	329	2	replace	double  real  =  c.getDivisor()  *  1;	  double    real    =    c.getDivisor()    +    1;    	non-compiled	[CE]  not  a  statement	43	None	replace
132	[BUG]  [BUGGY]  return  isNaN  ==  other.isNaN  &&  isInfinite;  [CE]  not  a  statement  [FE]              AssertionError      [CONTEXT]      public  boolean  equals(Object  other)  {  if  (this  ==  other)  {  return  true;  }  if  (other  instanceof  Complex){  Complex  c  =  (Complex)other;  if  (c.isNaN)  {      [BUGGY]  return  isNaN  ==  other.isNaN  &&  isInfinite;  [BUGGY]      }  else  {  return  (real  ==  c.real)  &&  (imaginary  ==  c.imaginary);  }  }  return  false;  }  [CLASS]  Complex  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  other  [VARIABLES]  Object  other  boolean  isInfinite  isNaN  isZero  double  addend  c  d  denominator  divisor  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  	projects/Math46/src/main/java/org/apache/commons/math/complex/Complex.java	0.35355339059327373	329	329	2	replace	return  isNaN  ==  other.isNaN  &&  isInfinite;	  return    isNaN    ==    other.isNaN;    	non-compiled	[CE]  not  a  statement	10	None	replace
133	[BUG]  [BUGGY]  return  isInfinite  ==  c.infinite  ||  isInfinite  ==  c.isNaN;  [CE]  not  a  statement  [FE]                AssertionError      [CONTEXT]      public  boolean  equals(Object  other)  {  if  (this  ==  other)  {  return  true;  }  if  (other  instanceof  Complex){  Complex  c  =  (Complex)other;  if  (c.isNaN)  {      [BUGGY]  return  isInfinite  ==  c.infinite  ||  isInfinite  ==  c.isNaN;  [BUGGY]      }  else  {  return  (real  ==  c.real)  &&  (imaginary  ==  c.imaginary);  }  }  return  false;  }  [CLASS]  Complex  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  other  [VARIABLES]  Object  other  boolean  isInfinite  isNaN  isZero  double  addend  c  d  denominator  divisor  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  	projects/Math46/src/main/java/org/apache/commons/math/complex/Complex.java	0.35355339059327373	329	329	2	replace	return  isInfinite  ==  c.infinite  ||  isInfinite  ==  c.isNaN;	  return    isInfinite    ==    c.isNaN    ||    isInfinite    ==    c.infinite;    	non-compiled	[CE]  not  a  statement	91	None	replace
134	[BUG]  [BUGGY]  double  imaginary  =  other.isInfinite()  &&  isNaN;  [CE]  not  a  statement  [FE]                AssertionError      [CONTEXT]      public  boolean  equals(Object  other)  {  if  (this  ==  other)  {  return  true;  }  if  (other  instanceof  Complex){  Complex  c  =  (Complex)other;  if  (c.isNaN)  {      [BUGGY]  double  imaginary  =  other.isInfinite()  &&  isNaN;  [BUGGY]      return  isNaN;  }  else  {  return  (real  ==  c.real)  &&  (imaginary  ==  c.imaginary);  }  }  return  false;  }  [CLASS]  Complex  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  other  [VARIABLES]  Object  other  boolean  isInfinite  isNaN  isZero  double  addend  c  d  denominator  divisor  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  	projects/Math46/src/main/java/org/apache/commons/math/complex/Complex.java	0.35355339059327373	329	329	2	replace	double  imaginary  =  other.isInfinite()  &&  isNaN;	  double    imaginary    =    other.isInfinite();    	non-compiled	[CE]  not  a  statement	31	None	replace
135	[BUG]  [BUGGY]  double  imaginary  =  this.imaginary;  [CE]  not  a  statement  [FE]            AssertionError      [CONTEXT]      public  boolean  equals(Object  other)  {  if  (this  ==  other)  {  return  true;  }  if  (other  instanceof  Complex){  Complex  c  =  (Complex)other;  if  (c.isNaN)  {      [BUGGY]  double  imaginary  =  this.imaginary;  [BUGGY]      return  isNaN;  }  else  {  return  (real  ==  c.real)  &&  (imaginary  ==  c.imaginary);  }  }  return  false;  }  [CLASS]  Complex  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  other  [VARIABLES]  Object  other  boolean  isInfinite  isNaN  isZero  double  addend  c  d  denominator  divisor  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  	projects/Math46/src/main/java/org/apache/commons/math/complex/Complex.java	0.35355339059327373	329	329	2	replace	double  imaginary  =  this.imaginary;	  double    imaginary    =    other.imaginary;    	non-compiled	[CE]  not  a  statement	47	None	replace
136	[BUG]  [BUGGY]  double  real  =  c.isInfinite  &&  c.isZero();  [CE]  not  a  statement  [FE]              AssertionError      [CONTEXT]      public  boolean  equals(Object  other)  {  if  (this  ==  other)  {  return  true;  }  if  (other  instanceof  Complex){  Complex  c  =  (Complex)other;  if  (c.isNaN)  {      [BUGGY]  double  real  =  c.isInfinite  &&  c.isZero();  [BUGGY]      return  isNaN;  }  else  {  return  (real  ==  c.real)  &&  (imaginary  ==  c.imaginary);  }  }  return  false;  }  [CLASS]  Complex  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  other  [VARIABLES]  Object  other  boolean  isInfinite  isNaN  isZero  double  addend  c  d  denominator  divisor  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  	projects/Math46/src/main/java/org/apache/commons/math/complex/Complex.java	0.35355339059327373	329	329	2	replace	double  real  =  c.isInfinite  &&  c.isZero();	  double    real    =    c.isNaN    &&    c.isZero();    	non-compiled	[CE]  not  a  statement	48	None	replace
137	[BUG]  [BUGGY]  return  c.isNaN  &&  c.isZero();  [CE]  not  a  statement  [FE]                  AssertionError      [CONTEXT]      public  boolean  equals(Object  other)  {  if  (this  ==  other)  {  return  true;  }  if  (other  instanceof  Complex){  Complex  c  =  (Complex)other;  if  (c.isNaN)  {      [BUGGY]  return  c.isNaN  &&  c.isZero();  [BUGGY]      }  else  {  return  (real  ==  c.real)  &&  (imaginary  ==  c.imaginary);  }  }  return  false;  }  [CLASS]  Complex  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  other  [VARIABLES]  Object  other  boolean  isInfinite  isNaN  isZero  double  addend  c  d  denominator  divisor  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  	projects/Math46/src/main/java/org/apache/commons/math/complex/Complex.java	0.35355339059327373	329	329	2	replace	return  c.isNaN  &&  c.isZero();	  return    c.isNaN    ||    c.isZero();    	non-compiled	[CE]  not  a  statement	75	None	replace
138	[BUG]  [BUGGY]  return  c.isNaN  ||  c.isInfinite();  [CE]  not  a  statement  [FE]                    AssertionError      [CONTEXT]      public  boolean  equals(Object  other)  {  if  (this  ==  other)  {  return  true;  }  if  (other  instanceof  Complex){  Complex  c  =  (Complex)other;  if  (c.isNaN)  {      [BUGGY]  return  c.isNaN  ||  c.isInfinite();  [BUGGY]      }  else  {  return  (real  ==  c.real)  &&  (imaginary  ==  c.imaginary);  }  }  return  false;  }  [CLASS]  Complex  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  other  [VARIABLES]  Object  other  boolean  isInfinite  isNaN  isZero  double  addend  c  d  denominator  divisor  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  	projects/Math46/src/main/java/org/apache/commons/math/complex/Complex.java	0.35355339059327373	329	329	2	replace	return  c.isNaN  ||  c.isInfinite();	  return    c.isNaN    ||    c.isZero();    	non-compiled	[CE]  not  a  statement	75	None	replace
139	[BUG]  [BUGGY]  return  isNaN  ||  c.isZero();  [CE]  not  a  statement  [FE]                      AssertionError      [CONTEXT]      public  boolean  equals(Object  other)  {  if  (this  ==  other)  {  return  true;  }  if  (other  instanceof  Complex){  Complex  c  =  (Complex)other;  if  (c.isNaN)  {      [BUGGY]  return  isNaN  ||  c.isZero();  [BUGGY]      }  else  {  return  (real  ==  c.real)  &&  (imaginary  ==  c.imaginary);  }  }  return  false;  }  [CLASS]  Complex  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  other  [VARIABLES]  Object  other  boolean  isInfinite  isNaN  isZero  double  addend  c  d  denominator  divisor  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  	projects/Math46/src/main/java/org/apache/commons/math/complex/Complex.java	0.35355339059327373	329	329	2	replace	return  isNaN  ||  c.isZero();	  return    c.isNaN    ||    c.isZero();    	non-compiled	[CE]  not  a  statement	75	None	replace
140	[BUG]  [BUGGY]  return  c.isNaN  &&  c.isVoid;  [CE]  not  a  statement  [FE]                AssertionError      [CONTEXT]      public  boolean  equals(Object  other)  {  if  (this  ==  other)  {  return  true;  }  if  (other  instanceof  Complex){  Complex  c  =  (Complex)other;  if  (c.isNaN)  {      [BUGGY]  return  c.isNaN  &&  c.isVoid;  [BUGGY]      }  else  {  return  (real  ==  c.real)  &&  (imaginary  ==  c.imaginary);  }  }  return  false;  }  [CLASS]  Complex  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  other  [VARIABLES]  Object  other  boolean  isInfinite  isNaN  isZero  double  addend  c  d  denominator  divisor  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  	projects/Math46/src/main/java/org/apache/commons/math/complex/Complex.java	0.35355339059327373	329	329	2	replace	return  c.isNaN  &&  c.isVoid;	  return    c.isNaN    ||    c.isVoid;    	non-compiled	[CE]  not  a  statement	74	None	replace
141	[BUG]  [BUGGY]  double  imaginary  =  c.imaginary  +  2;  [CE]  not  a  statement  [FE]            AssertionError      [CONTEXT]      public  boolean  equals(Object  other)  {  if  (this  ==  other)  {  return  true;  }  if  (other  instanceof  Complex){  Complex  c  =  (Complex)other;  if  (c.isNaN)  {      [BUGGY]  double  imaginary  =  c.imaginary  +  2;  [BUGGY]      return  isNaN;  }  else  {  return  (real  ==  c.real)  &&  (imaginary  ==  c.imaginary);  }  }  return  false;  }  [CLASS]  Complex  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  other  [VARIABLES]  Object  other  boolean  isInfinite  isNaN  isZero  double  addend  c  d  denominator  divisor  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  	projects/Math46/src/main/java/org/apache/commons/math/complex/Complex.java	0.35355339059327373	329	329	2	replace	double  imaginary  =  c.imaginary  +  2;	  double    imaginary    =    c.imaginary    +    1;    	non-compiled	[CE]  not  a  statement	72	None	replace
142	[BUG]  [BUGGY]  double  imaginary  =  other.imaginary  +  1;  [CE]  not  a  statement  [FE]              AssertionError      [CONTEXT]      public  boolean  equals(Object  other)  {  if  (this  ==  other)  {  return  true;  }  if  (other  instanceof  Complex){  Complex  c  =  (Complex)other;  if  (c.isNaN)  {      [BUGGY]  double  imaginary  =  other.imaginary  +  1;  [BUGGY]      return  isNaN;  }  else  {  return  (real  ==  c.real)  &&  (imaginary  ==  c.imaginary);  }  }  return  false;  }  [CLASS]  Complex  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  other  [VARIABLES]  Object  other  boolean  isInfinite  isNaN  isZero  double  addend  c  d  denominator  divisor  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  	projects/Math46/src/main/java/org/apache/commons/math/complex/Complex.java	0.35355339059327373	329	329	2	replace	double  imaginary  =  other.imaginary  +  1;	  double    imaginary    =    c.imaginary    +    1;    	non-compiled	[CE]  not  a  statement	72	None	replace
143	[BUG]  [BUGGY]  double  imaginary  =  c.Imaginary  +  1;  [CE]  not  a  statement  [FE]                AssertionError      [CONTEXT]      public  boolean  equals(Object  other)  {  if  (this  ==  other)  {  return  true;  }  if  (other  instanceof  Complex){  Complex  c  =  (Complex)other;  if  (c.isNaN)  {      [BUGGY]  double  imaginary  =  c.Imaginary  +  1;  [BUGGY]      return  isNaN;  }  else  {  return  (real  ==  c.real)  &&  (imaginary  ==  c.imaginary);  }  }  return  false;  }  [CLASS]  Complex  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  other  [VARIABLES]  Object  other  boolean  isInfinite  isNaN  isZero  double  addend  c  d  denominator  divisor  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  	projects/Math46/src/main/java/org/apache/commons/math/complex/Complex.java	0.35355339059327373	329	329	2	replace	double  imaginary  =  c.Imaginary  +  1;	  double    imaginary    =    c.imaginary    +    1;    	non-compiled	[CE]  not  a  statement	72	None	replace
144	[BUG]  [BUGGY]  double  imaginary  =  c.real  ||  imaginary!=  c.imaginary;  [CE]  not  a  statement  [FE]                    AssertionError      [CONTEXT]      public  boolean  equals(Object  other)  {  if  (this  ==  other)  {  return  true;  }  if  (other  instanceof  Complex){  Complex  c  =  (Complex)other;  if  (c.isNaN)  {      [BUGGY]  double  imaginary  =  c.real  ||  imaginary!=  c.imaginary;  [BUGGY]      return  isNaN;  }  else  {  return  (real  ==  c.real)  &&  (imaginary  ==  c.imaginary);  }  }  return  false;  }  [CLASS]  Complex  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  other  [VARIABLES]  Object  other  boolean  isInfinite  isNaN  isZero  double  addend  c  d  denominator  divisor  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  	projects/Math46/src/main/java/org/apache/commons/math/complex/Complex.java	0.35355339059327373	329	329	2	replace	double  imaginary  =  c.real  ||  imaginary!=  c.imaginary;	  double    imaginary    =    c.real    ||    c.imaginary!=    c.imaginary;    	non-compiled	[CE]  not  a  statement	70	None	replace
145	[BUG]  [BUGGY]  double  imaginary  =  c.imaginary  ||  c.real!=  c.imaginary;  [CE]  not  a  statement  [FE]                      AssertionError      [CONTEXT]      public  boolean  equals(Object  other)  {  if  (this  ==  other)  {  return  true;  }  if  (other  instanceof  Complex){  Complex  c  =  (Complex)other;  if  (c.isNaN)  {      [BUGGY]  double  imaginary  =  c.imaginary  ||  c.real!=  c.imaginary;  [BUGGY]      return  isNaN;  }  else  {  return  (real  ==  c.real)  &&  (imaginary  ==  c.imaginary);  }  }  return  false;  }  [CLASS]  Complex  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  other  [VARIABLES]  Object  other  boolean  isInfinite  isNaN  isZero  double  addend  c  d  denominator  divisor  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  	projects/Math46/src/main/java/org/apache/commons/math/complex/Complex.java	0.35355339059327373	329	329	2	replace	double  imaginary  =  c.imaginary  ||  c.real!=  c.imaginary;	  double    imaginary    =    c.real    ||    c.imaginary!=    c.imaginary;    	non-compiled	[CE]  not  a  statement	70	None	replace
146	[BUG]  [BUGGY]  return  c.isNaN  &&  c.isInfinite;  [CE]  not  a  statement  [FE]                AssertionError      [CONTEXT]      public  boolean  equals(Object  other)  {  if  (this  ==  other)  {  return  true;  }  if  (other  instanceof  Complex){  Complex  c  =  (Complex)other;  if  (c.isNaN)  {      [BUGGY]  return  c.isNaN  &&  c.isInfinite;  [BUGGY]      }  else  {  return  (real  ==  c.real)  &&  (imaginary  ==  c.imaginary);  }  }  return  false;  }  [CLASS]  Complex  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  other  [VARIABLES]  Object  other  boolean  isInfinite  isNaN  isZero  double  addend  c  d  denominator  divisor  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  	projects/Math46/src/main/java/org/apache/commons/math/complex/Complex.java	0.35355339059327373	329	329	2	replace	return  c.isNaN  &&  c.isInfinite;	  return    c.isNaN    ||    c.isInfinite;    	non-compiled	[CE]  not  a  statement	17	None	replace
147	[BUG]  [BUGGY]  return  c.isInfinite  ||  c.isNaN;  [CE]  not  a  statement  [FE]                  AssertionError      [CONTEXT]      public  boolean  equals(Object  other)  {  if  (this  ==  other)  {  return  true;  }  if  (other  instanceof  Complex){  Complex  c  =  (Complex)other;  if  (c.isNaN)  {      [BUGGY]  return  c.isInfinite  ||  c.isNaN;  [BUGGY]      }  else  {  return  (real  ==  c.real)  &&  (imaginary  ==  c.imaginary);  }  }  return  false;  }  [CLASS]  Complex  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  other  [VARIABLES]  Object  other  boolean  isInfinite  isNaN  isZero  double  addend  c  d  denominator  divisor  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  	projects/Math46/src/main/java/org/apache/commons/math/complex/Complex.java	0.35355339059327373	329	329	2	replace	return  c.isInfinite  ||  c.isNaN;	  return    c.isNaN    ||    c.isInfinite;    	non-compiled	[CE]  not  a  statement	17	None	replace
148	[BUG]  [BUGGY]  double  real  =  c.isNaN  &&  c.isDigits();  [CE]  not  a  statement  [FE]              AssertionError      [CONTEXT]      public  boolean  equals(Object  other)  {  if  (this  ==  other)  {  return  true;  }  if  (other  instanceof  Complex){  Complex  c  =  (Complex)other;  if  (c.isNaN)  {      [BUGGY]  double  real  =  c.isNaN  &&  c.isDigits();  [BUGGY]      return  isNaN;  }  else  {  return  (real  ==  c.real)  &&  (imaginary  ==  c.imaginary);  }  }  return  false;  }  [CLASS]  Complex  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  other  [VARIABLES]  Object  other  boolean  isInfinite  isNaN  isZero  double  addend  c  d  denominator  divisor  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  	projects/Math46/src/main/java/org/apache/commons/math/complex/Complex.java	0.35355339059327373	329	329	2	replace	double  real  =  c.isNaN  &&  c.isDigits();	  double    real    =    c.isNaN    ||    c.isDigits();    	non-compiled	[CE]  not  a  statement	55	None	replace
149	[BUG]  [BUGGY]  double  real  =  other.isNaN  ||  c.isDigits();  [CE]  not  a  statement  [FE]                AssertionError      [CONTEXT]      public  boolean  equals(Object  other)  {  if  (this  ==  other)  {  return  true;  }  if  (other  instanceof  Complex){  Complex  c  =  (Complex)other;  if  (c.isNaN)  {      [BUGGY]  double  real  =  other.isNaN  ||  c.isDigits();  [BUGGY]      return  isNaN;  }  else  {  return  (real  ==  c.real)  &&  (imaginary  ==  c.imaginary);  }  }  return  false;  }  [CLASS]  Complex  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  other  [VARIABLES]  Object  other  boolean  isInfinite  isNaN  isZero  double  addend  c  d  denominator  divisor  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  	projects/Math46/src/main/java/org/apache/commons/math/complex/Complex.java	0.35355339059327373	329	329	2	replace	double  real  =  other.isNaN  ||  c.isDigits();	  double    real    =    c.isNaN    ||    c.isDigits();    	non-compiled	[CE]  not  a  statement	55	None	replace
150	[BUG]  [BUGGY]  double  real  =  c.isNaN  ||  c.isDigit();  [CE]  not  a  statement  [FE]                  AssertionError      [CONTEXT]      public  boolean  equals(Object  other)  {  if  (this  ==  other)  {  return  true;  }  if  (other  instanceof  Complex){  Complex  c  =  (Complex)other;  if  (c.isNaN)  {      [BUGGY]  double  real  =  c.isNaN  ||  c.isDigit();  [BUGGY]      return  isNaN;  }  else  {  return  (real  ==  c.real)  &&  (imaginary  ==  c.imaginary);  }  }  return  false;  }  [CLASS]  Complex  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  other  [VARIABLES]  Object  other  boolean  isInfinite  isNaN  isZero  double  addend  c  d  denominator  divisor  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  	projects/Math46/src/main/java/org/apache/commons/math/complex/Complex.java	0.35355339059327373	329	329	2	replace	double  real  =  c.isNaN  ||  c.isDigit();	  double    real    =    c.isNaN    ||    c.isDigits();    	non-compiled	[CE]  not  a  statement	55	None	replace
151	[BUG]  [BUGGY]  double  real  =  c.isInfinite  &&  c.isInfinite;  [CE]  not  a  statement  [FE]                AssertionError      [CONTEXT]      public  boolean  equals(Object  other)  {  if  (this  ==  other)  {  return  true;  }  if  (other  instanceof  Complex){  Complex  c  =  (Complex)other;  if  (c.isNaN)  {      [BUGGY]  double  real  =  c.isInfinite  &&  c.isInfinite;  [BUGGY]      return  isNaN;  }  else  {  return  (real  ==  c.real)  &&  (imaginary  ==  c.imaginary);  }  }  return  false;  }  [CLASS]  Complex  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  other  [VARIABLES]  Object  other  boolean  isInfinite  isNaN  isZero  double  addend  c  d  denominator  divisor  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  	projects/Math46/src/main/java/org/apache/commons/math/complex/Complex.java	0.35355339059327373	329	329	2	replace	double  real  =  c.isInfinite  &&  c.isInfinite;	  double    real    =    c.isInfinite    ||    c.isInfinite;    	non-compiled	[CE]  not  a  statement	85	None	replace
152	[BUG]  [BUGGY]  return  isNaN  &&  isZero;  [CE]  not  a  statement  [FE]            AssertionError      [CONTEXT]      public  boolean  equals(Object  other)  {  if  (this  ==  other)  {  return  true;  }  if  (other  instanceof  Complex){  Complex  c  =  (Complex)other;  if  (c.isNaN)  {      [BUGGY]  return  isNaN  &&  isZero;  [BUGGY]      }  else  {  return  (real  ==  c.real)  &&  (imaginary  ==  c.imaginary);  }  }  return  false;  }  [CLASS]  Complex  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  other  [VARIABLES]  Object  other  boolean  isInfinite  isNaN  isZero  double  addend  c  d  denominator  divisor  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  	projects/Math46/src/main/java/org/apache/commons/math/complex/Complex.java	0.35355339059327373	329	329	2	replace	return  isNaN  &&  isZero;	  return    isNaN    ||    isZero;    	non-compiled	[CE]  not  a  statement	32	None	replace
153	[BUG]  [BUGGY]  return  isNaN  ||  isZero  ||  c.isInfinite;  [CE]  not  a  statement  [FE]              AssertionError      [CONTEXT]      public  boolean  equals(Object  other)  {  if  (this  ==  other)  {  return  true;  }  if  (other  instanceof  Complex){  Complex  c  =  (Complex)other;  if  (c.isNaN)  {      [BUGGY]  return  isNaN  ||  isZero  ||  c.isInfinite;  [BUGGY]      }  else  {  return  (real  ==  c.real)  &&  (imaginary  ==  c.imaginary);  }  }  return  false;  }  [CLASS]  Complex  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  other  [VARIABLES]  Object  other  boolean  isInfinite  isNaN  isZero  double  addend  c  d  denominator  divisor  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  	projects/Math46/src/main/java/org/apache/commons/math/complex/Complex.java	0.35355339059327373	329	329	2	replace	return  isNaN  ||  isZero  ||  c.isInfinite;	  return    isNaN    ||    isZero;    	non-compiled	[CE]  not  a  statement	32	None	replace
154	[BUG]  [BUGGY]  double  imaginary  =  c.imaginary  ||  c.real  ==  null;  [CE]  not  a  statement  [FE]                        AssertionError      [CONTEXT]      public  boolean  equals(Object  other)  {  if  (this  ==  other)  {  return  true;  }  if  (other  instanceof  Complex){  Complex  c  =  (Complex)other;  if  (c.isNaN)  {      [BUGGY]  double  imaginary  =  c.imaginary  ||  c.real  ==  null;  [BUGGY]      return  isNaN;  }  else  {  return  (real  ==  c.real)  &&  (imaginary  ==  c.imaginary);  }  }  return  false;  }  [CLASS]  Complex  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  other  [VARIABLES]  Object  other  boolean  isInfinite  isNaN  isZero  double  addend  c  d  denominator  divisor  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  	projects/Math46/src/main/java/org/apache/commons/math/complex/Complex.java	0.35355339059327373	329	329	2	replace	double  imaginary  =  c.imaginary  ||  c.real  ==  null;	  double    imaginary    =    c.real    ||    c.imaginary    ==    null;    	non-compiled	[CE]  not  a  statement	29	None	replace
155	[BUG]  [BUGGY]  double  imaginary  =  c.real  ||  imaginary  ==  null;  [CE]  not  a  statement  [FE]                          AssertionError      [CONTEXT]      public  boolean  equals(Object  other)  {  if  (this  ==  other)  {  return  true;  }  if  (other  instanceof  Complex){  Complex  c  =  (Complex)other;  if  (c.isNaN)  {      [BUGGY]  double  imaginary  =  c.real  ||  imaginary  ==  null;  [BUGGY]      return  isNaN;  }  else  {  return  (real  ==  c.real)  &&  (imaginary  ==  c.imaginary);  }  }  return  false;  }  [CLASS]  Complex  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  other  [VARIABLES]  Object  other  boolean  isInfinite  isNaN  isZero  double  addend  c  d  denominator  divisor  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  	projects/Math46/src/main/java/org/apache/commons/math/complex/Complex.java	0.35355339059327373	329	329	2	replace	double  imaginary  =  c.real  ||  imaginary  ==  null;	  double    imaginary    =    c.real    ||    c.imaginary    ==    null;    	non-compiled	[CE]  not  a  statement	29	None	replace
156	[BUG]  [BUGGY]  double  imaginary  =  c.imaginary  ||  c.real!=  null;  [CE]  not  a  statement  [FE]                            AssertionError      [CONTEXT]      public  boolean  equals(Object  other)  {  if  (this  ==  other)  {  return  true;  }  if  (other  instanceof  Complex){  Complex  c  =  (Complex)other;  if  (c.isNaN)  {      [BUGGY]  double  imaginary  =  c.imaginary  ||  c.real!=  null;  [BUGGY]      return  isNaN;  }  else  {  return  (real  ==  c.real)  &&  (imaginary  ==  c.imaginary);  }  }  return  false;  }  [CLASS]  Complex  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  other  [VARIABLES]  Object  other  boolean  isInfinite  isNaN  isZero  double  addend  c  d  denominator  divisor  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  	projects/Math46/src/main/java/org/apache/commons/math/complex/Complex.java	0.35355339059327373	329	329	2	replace	double  imaginary  =  c.imaginary  ||  c.real!=  null;	  double    imaginary    =    c.real    ||    c.imaginary    ==    null;    	non-compiled	[CE]  not  a  statement	29	None	replace
157	[BUG]  [BUGGY]  return  isInfinite  &&  c.isZero;  [CE]  not  a  statement  [FE]                  AssertionError      [CONTEXT]      public  boolean  equals(Object  other)  {  if  (this  ==  other)  {  return  true;  }  if  (other  instanceof  Complex){  Complex  c  =  (Complex)other;  if  (c.isNaN)  {      [BUGGY]  return  isInfinite  &&  c.isZero;  [BUGGY]      }  else  {  return  (real  ==  c.real)  &&  (imaginary  ==  c.imaginary);  }  }  return  false;  }  [CLASS]  Complex  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  other  [VARIABLES]  Object  other  boolean  isInfinite  isNaN  isZero  double  addend  c  d  denominator  divisor  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  	projects/Math46/src/main/java/org/apache/commons/math/complex/Complex.java	0.35355339059327373	329	329	2	replace	return  isInfinite  &&  c.isZero;	  return    isInfinite    ||    c.isZero;    	non-compiled	[CE]  not  a  statement	59	None	replace
158	[BUG]  [BUGGY]  return  isNaN  &&  c.isZero;  [CE]  not  a  statement  [FE]                    AssertionError      [CONTEXT]      public  boolean  equals(Object  other)  {  if  (this  ==  other)  {  return  true;  }  if  (other  instanceof  Complex){  Complex  c  =  (Complex)other;  if  (c.isNaN)  {      [BUGGY]  return  isNaN  &&  c.isZero;  [BUGGY]      }  else  {  return  (real  ==  c.real)  &&  (imaginary  ==  c.imaginary);  }  }  return  false;  }  [CLASS]  Complex  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  other  [VARIABLES]  Object  other  boolean  isInfinite  isNaN  isZero  double  addend  c  d  denominator  divisor  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  	projects/Math46/src/main/java/org/apache/commons/math/complex/Complex.java	0.35355339059327373	329	329	2	replace	return  isNaN  &&  c.isZero;	  return    isInfinite    ||    c.isZero;    	non-compiled	[CE]  not  a  statement	59	None	replace
159	[BUG]  [BUGGY]  return  c.isNaN  &&  c.isZero;  [CE]  not  a  statement  [FE]                  AssertionError      [CONTEXT]      public  boolean  equals(Object  other)  {  if  (this  ==  other)  {  return  true;  }  if  (other  instanceof  Complex){  Complex  c  =  (Complex)other;  if  (c.isNaN)  {      [BUGGY]  return  c.isNaN  &&  c.isZero;  [BUGGY]      }  else  {  return  (real  ==  c.real)  &&  (imaginary  ==  c.imaginary);  }  }  return  false;  }  [CLASS]  Complex  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  other  [VARIABLES]  Object  other  boolean  isInfinite  isNaN  isZero  double  addend  c  d  denominator  divisor  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  	projects/Math46/src/main/java/org/apache/commons/math/complex/Complex.java	0.35355339059327373	329	329	2	replace	return  c.isNaN  &&  c.isZero;	  return    c.isNaN    ||    c.isZero;    	non-compiled	[CE]  not  a  statement	18	None	replace
160	[BUG]  [BUGGY]  double  real  =  c.real  ||  imaginary  >=  c.imaginary;  [CE]  not  a  statement  [FE]            AssertionError      [CONTEXT]      public  boolean  equals(Object  other)  {  if  (this  ==  other)  {  return  true;  }  if  (other  instanceof  Complex){  Complex  c  =  (Complex)other;  if  (c.isNaN)  {      [BUGGY]  double  real  =  c.real  ||  imaginary  >=  c.imaginary;  [BUGGY]      return  isNaN;  }  else  {  return  (real  ==  c.real)  &&  (imaginary  ==  c.imaginary);  }  }  return  false;  }  [CLASS]  Complex  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  other  [VARIABLES]  Object  other  boolean  isInfinite  isNaN  isZero  double  addend  c  d  denominator  divisor  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  	projects/Math46/src/main/java/org/apache/commons/math/complex/Complex.java	0.35355339059327373	329	329	2	replace	double  real  =  c.real  ||  imaginary  >=  c.imaginary;	  double    real    =    c.real    ||    c.imaginary    >=    c.imaginary;    	non-compiled	[CE]  not  a  statement	65	None	replace
161	[BUG]  [BUGGY]  double  real  =  c.real  ||  imaginary  >>  c.imaginary;  [CE]  not  a  statement  [FE]              AssertionError      [CONTEXT]      public  boolean  equals(Object  other)  {  if  (this  ==  other)  {  return  true;  }  if  (other  instanceof  Complex){  Complex  c  =  (Complex)other;  if  (c.isNaN)  {      [BUGGY]  double  real  =  c.real  ||  imaginary  >>  c.imaginary;  [BUGGY]      return  isNaN;  }  else  {  return  (real  ==  c.real)  &&  (imaginary  ==  c.imaginary);  }  }  return  false;  }  [CLASS]  Complex  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  other  [VARIABLES]  Object  other  boolean  isInfinite  isNaN  isZero  double  addend  c  d  denominator  divisor  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  	projects/Math46/src/main/java/org/apache/commons/math/complex/Complex.java	0.35355339059327373	329	329	2	replace	double  real  =  c.real  ||  imaginary  >>  c.imaginary;	  double    real    =    c.real    ||    c.imaginary    >=    c.imaginary;    	non-compiled	[CE]  not  a  statement	65	None	replace
162	[BUG]  [BUGGY]  double  imaginary  =  c.infinite()  &&  c.infinite()!=  denominator;  [CE]  not  a  statement  [FE]                  AssertionError      [CONTEXT]      public  boolean  equals(Object  other)  {  if  (this  ==  other)  {  return  true;  }  if  (other  instanceof  Complex){  Complex  c  =  (Complex)other;  if  (c.isNaN)  {      [BUGGY]  double  imaginary  =  c.infinite()  &&  c.infinite()!=  denominator;  [BUGGY]      return  isNaN;  }  else  {  return  (real  ==  c.real)  &&  (imaginary  ==  c.imaginary);  }  }  return  false;  }  [CLASS]  Complex  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  other  [VARIABLES]  Object  other  boolean  isInfinite  isNaN  isZero  double  addend  c  d  denominator  divisor  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  	projects/Math46/src/main/java/org/apache/commons/math/complex/Complex.java	0.35355339059327373	329	329	2	replace	double  imaginary  =  c.infinite()  &&  c.infinite()!=  denominator;	  double    imaginary    =    c.infinite()    ||    c.infinite()!=    denominator;    	non-compiled	[CE]  not  a  statement	97	None	replace
163	[BUG]  [BUGGY]  double  imaginary  =  other.infinite()  ||  c.infinite()!=  denominator;  [CE]  not  a  statement  [FE]                    AssertionError      [CONTEXT]      public  boolean  equals(Object  other)  {  if  (this  ==  other)  {  return  true;  }  if  (other  instanceof  Complex){  Complex  c  =  (Complex)other;  if  (c.isNaN)  {      [BUGGY]  double  imaginary  =  other.infinite()  ||  c.infinite()!=  denominator;  [BUGGY]      return  isNaN;  }  else  {  return  (real  ==  c.real)  &&  (imaginary  ==  c.imaginary);  }  }  return  false;  }  [CLASS]  Complex  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  other  [VARIABLES]  Object  other  boolean  isInfinite  isNaN  isZero  double  addend  c  d  denominator  divisor  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  	projects/Math46/src/main/java/org/apache/commons/math/complex/Complex.java	0.35355339059327373	329	329	2	replace	double  imaginary  =  other.infinite()  ||  c.infinite()!=  denominator;	  double    imaginary    =    c.infinite()    ||    c.infinite()!=    denominator;    	non-compiled	[CE]  not  a  statement	97	None	replace
164	[BUG]  [BUGGY]  return  isInfinite  &&  isZero;  [CE]  not  a  statement  [FE]                  AssertionError      [CONTEXT]      public  boolean  equals(Object  other)  {  if  (this  ==  other)  {  return  true;  }  if  (other  instanceof  Complex){  Complex  c  =  (Complex)other;  if  (c.isNaN)  {      [BUGGY]  return  isInfinite  &&  isZero;  [BUGGY]      }  else  {  return  (real  ==  c.real)  &&  (imaginary  ==  c.imaginary);  }  }  return  false;  }  [CLASS]  Complex  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  other  [VARIABLES]  Object  other  boolean  isInfinite  isNaN  isZero  double  addend  c  d  denominator  divisor  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  	projects/Math46/src/main/java/org/apache/commons/math/complex/Complex.java	0.35355339059327373	329	329	2	replace	return  isInfinite  &&  isZero;	  return    isInfinite    ||    isZero;    	non-compiled	[CE]  not  a  statement	44	None	replace
165	[BUG]  [BUGGY]  double  imaginary  =  c.isZero()  ||  c.isInfinite();  [CE]  not  a  statement  [FE]              AssertionError      [CONTEXT]      public  boolean  equals(Object  other)  {  if  (this  ==  other)  {  return  true;  }  if  (other  instanceof  Complex){  Complex  c  =  (Complex)other;  if  (c.isNaN)  {      [BUGGY]  double  imaginary  =  c.isZero()  ||  c.isInfinite();  [BUGGY]      return  isNaN;  }  else  {  return  (real  ==  c.real)  &&  (imaginary  ==  c.imaginary);  }  }  return  false;  }  [CLASS]  Complex  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  other  [VARIABLES]  Object  other  boolean  isInfinite  isNaN  isZero  double  addend  c  d  denominator  divisor  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  	projects/Math46/src/main/java/org/apache/commons/math/complex/Complex.java	0.35355339059327373	329	329	2	replace	double  imaginary  =  c.isZero()  ||  c.isInfinite();	  double    imaginary    =    c.isZero();    	non-compiled	[CE]  not  a  statement	54	None	replace
166	[BUG]  [BUGGY]  return  c.isNaN  ||  real  ==  c.isNaN;  [CE]  not  a  statement  [FE]                  AssertionError      [CONTEXT]      public  boolean  equals(Object  other)  {  if  (this  ==  other)  {  return  true;  }  if  (other  instanceof  Complex){  Complex  c  =  (Complex)other;  if  (c.isNaN)  {      [BUGGY]  return  c.isNaN  ||  real  ==  c.isNaN;  [BUGGY]      }  else  {  return  (real  ==  c.real)  &&  (imaginary  ==  c.imaginary);  }  }  return  false;  }  [CLASS]  Complex  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  other  [VARIABLES]  Object  other  boolean  isInfinite  isNaN  isZero  double  addend  c  d  denominator  divisor  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  	projects/Math46/src/main/java/org/apache/commons/math/complex/Complex.java	0.35355339059327373	329	329	2	replace	return  c.isNaN  ||  real  ==  c.isNaN;	  return    real    ==    c.isNaN;    	non-compiled	[CE]  not  a  statement	62	None	replace
167	[BUG]  [BUGGY]  return  isNaN  &&  c.isNaN;  [CE]  not  a  statement  [FE]            AssertionError      [CONTEXT]      public  boolean  equals(Object  other)  {  if  (this  ==  other)  {  return  true;  }  if  (other  instanceof  Complex){  Complex  c  =  (Complex)other;  if  (c.isNaN)  {      [BUGGY]  return  isNaN  &&  c.isNaN;  [BUGGY]      }  else  {  return  (real  ==  c.real)  &&  (imaginary  ==  c.imaginary);  }  }  return  false;  }  [CLASS]  Complex  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  other  [VARIABLES]  Object  other  boolean  isInfinite  isNaN  isZero  double  addend  c  d  denominator  divisor  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  	projects/Math46/src/main/java/org/apache/commons/math/complex/Complex.java	0.35355339059327373	329	329	2	replace	return  isNaN  &&  c.isNaN;	  return    isNaN    ||    c.isNaN;    	non-compiled	[CE]  not  a  statement	64	None	replace
168	[BUG]  [BUGGY]  return  isNaN  ||  c.isNaN  ||  isInfinite;  [CE]  not  a  statement  [FE]              AssertionError      [CONTEXT]      public  boolean  equals(Object  other)  {  if  (this  ==  other)  {  return  true;  }  if  (other  instanceof  Complex){  Complex  c  =  (Complex)other;  if  (c.isNaN)  {      [BUGGY]  return  isNaN  ||  c.isNaN  ||  isInfinite;  [BUGGY]      }  else  {  return  (real  ==  c.real)  &&  (imaginary  ==  c.imaginary);  }  }  return  false;  }  [CLASS]  Complex  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  other  [VARIABLES]  Object  other  boolean  isInfinite  isNaN  isZero  double  addend  c  d  denominator  divisor  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  	projects/Math46/src/main/java/org/apache/commons/math/complex/Complex.java	0.35355339059327373	329	329	2	replace	return  isNaN  ||  c.isNaN  ||  isInfinite;	  return    isNaN    ||    c.isNaN;    	non-compiled	[CE]  not  a  statement	64	None	replace
169	[BUG]  [BUGGY]  return  isNaN  ||  c.isNaN  ||  real;  [CE]  not  a  statement  [FE]                AssertionError      [CONTEXT]      public  boolean  equals(Object  other)  {  if  (this  ==  other)  {  return  true;  }  if  (other  instanceof  Complex){  Complex  c  =  (Complex)other;  if  (c.isNaN)  {      [BUGGY]  return  isNaN  ||  c.isNaN  ||  real;  [BUGGY]      }  else  {  return  (real  ==  c.real)  &&  (imaginary  ==  c.imaginary);  }  }  return  false;  }  [CLASS]  Complex  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  other  [VARIABLES]  Object  other  boolean  isInfinite  isNaN  isZero  double  addend  c  d  denominator  divisor  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  	projects/Math46/src/main/java/org/apache/commons/math/complex/Complex.java	0.35355339059327373	329	329	2	replace	return  isNaN  ||  c.isNaN  ||  real;	  return    isNaN    ||    c.isNaN;    	non-compiled	[CE]  not  a  statement	64	None	replace
170	[BUG]  [BUGGY]  return  isInfinite!=  c.isNaN;  [CE]  not  a  statement  [FE]                      AssertionError      [CONTEXT]      public  boolean  equals(Object  other)  {  if  (this  ==  other)  {  return  true;  }  if  (other  instanceof  Complex){  Complex  c  =  (Complex)other;  if  (c.isNaN)  {      [BUGGY]  return  isInfinite!=  c.isNaN;  [BUGGY]      }  else  {  return  (real  ==  c.real)  &&  (imaginary  ==  c.imaginary);  }  }  return  false;  }  [CLASS]  Complex  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  other  [VARIABLES]  Object  other  boolean  isInfinite  isNaN  isZero  double  addend  c  d  denominator  divisor  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  	projects/Math46/src/main/java/org/apache/commons/math/complex/Complex.java	0.35355339059327373	329	329	2	replace	return  isInfinite!=  c.isNaN;	  return    isInfinite    &&    isNaN;    	non-compiled	[CE]  not  a  statement	46	None	replace
171	[BUG]  [BUGGY]  return  isNaN  ==  c.isNaN  ||  isInfinite  ==  c.isZero;  [CE]  not  a  statement  [FE]                AssertionError      [CONTEXT]      public  boolean  equals(Object  other)  {  if  (this  ==  other)  {  return  true;  }  if  (other  instanceof  Complex){  Complex  c  =  (Complex)other;  if  (c.isNaN)  {      [BUGGY]  return  isNaN  ==  c.isNaN  ||  isInfinite  ==  c.isZero;  [BUGGY]      }  else  {  return  (real  ==  c.real)  &&  (imaginary  ==  c.imaginary);  }  }  return  false;  }  [CLASS]  Complex  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  other  [VARIABLES]  Object  other  boolean  isInfinite  isNaN  isZero  double  addend  c  d  denominator  divisor  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  	projects/Math46/src/main/java/org/apache/commons/math/complex/Complex.java	0.35355339059327373	329	329	2	replace	return  isNaN  ==  c.isNaN  ||  isInfinite  ==  c.isZero;	  return    isNaN    ==    c.isNaN    ||    isZero    ==    c.isZero;    	non-compiled	[CE]  not  a  statement	81	None	replace
172	[BUG]  [BUGGY]  return  isNaN  ==  other.isNaN  ||  isZero  ==  c.isZero;  [CE]  not  a  statement  [FE]                  AssertionError      [CONTEXT]      public  boolean  equals(Object  other)  {  if  (this  ==  other)  {  return  true;  }  if  (other  instanceof  Complex){  Complex  c  =  (Complex)other;  if  (c.isNaN)  {      [BUGGY]  return  isNaN  ==  other.isNaN  ||  isZero  ==  c.isZero;  [BUGGY]      }  else  {  return  (real  ==  c.real)  &&  (imaginary  ==  c.imaginary);  }  }  return  false;  }  [CLASS]  Complex  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  other  [VARIABLES]  Object  other  boolean  isInfinite  isNaN  isZero  double  addend  c  d  denominator  divisor  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  	projects/Math46/src/main/java/org/apache/commons/math/complex/Complex.java	0.35355339059327373	329	329	2	replace	return  isNaN  ==  other.isNaN  ||  isZero  ==  c.isZero;	  return    isNaN    ==    c.isNaN    ||    isZero    ==    c.isZero;    	non-compiled	[CE]  not  a  statement	81	None	replace
173	[BUG]  [BUGGY]  double  imaginary  =  c.infinite()  &&  c.infinite()  ==  denominator;  [CE]  not  a  statement  [FE]                    AssertionError      [CONTEXT]      public  boolean  equals(Object  other)  {  if  (this  ==  other)  {  return  true;  }  if  (other  instanceof  Complex){  Complex  c  =  (Complex)other;  if  (c.isNaN)  {      [BUGGY]  double  imaginary  =  c.infinite()  &&  c.infinite()  ==  denominator;  [BUGGY]      return  isNaN;  }  else  {  return  (real  ==  c.real)  &&  (imaginary  ==  c.imaginary);  }  }  return  false;  }  [CLASS]  Complex  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  other  [VARIABLES]  Object  other  boolean  isInfinite  isNaN  isZero  double  addend  c  d  denominator  divisor  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  	projects/Math46/src/main/java/org/apache/commons/math/complex/Complex.java	0.35355339059327373	329	329	2	replace	double  imaginary  =  c.infinite()  &&  c.infinite()  ==  denominator;	  double    imaginary    =    c.infinite()    ||    c.infinite()    ==    denominator;    	non-compiled	[CE]  not  a  statement	98	None	replace
174	[BUG]  [BUGGY]  double  imaginary  =  other.infinite()  ||  c.infinite()  ==  denominator;  [CE]  not  a  statement  [FE]                      AssertionError      [CONTEXT]      public  boolean  equals(Object  other)  {  if  (this  ==  other)  {  return  true;  }  if  (other  instanceof  Complex){  Complex  c  =  (Complex)other;  if  (c.isNaN)  {      [BUGGY]  double  imaginary  =  other.infinite()  ||  c.infinite()  ==  denominator;  [BUGGY]      return  isNaN;  }  else  {  return  (real  ==  c.real)  &&  (imaginary  ==  c.imaginary);  }  }  return  false;  }  [CLASS]  Complex  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  other  [VARIABLES]  Object  other  boolean  isInfinite  isNaN  isZero  double  addend  c  d  denominator  divisor  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  	projects/Math46/src/main/java/org/apache/commons/math/complex/Complex.java	0.35355339059327373	329	329	2	replace	double  imaginary  =  other.infinite()  ||  c.infinite()  ==  denominator;	  double    imaginary    =    c.infinite()    ||    c.infinite()    ==    denominator;    	non-compiled	[CE]  not  a  statement	98	None	replace
175	[BUG]  [BUGGY]  double  imaginary  =  c.infinite()  ||  c.infinite()  ==  divisor;  [CE]  not  a  statement  [FE]                        AssertionError      [CONTEXT]      public  boolean  equals(Object  other)  {  if  (this  ==  other)  {  return  true;  }  if  (other  instanceof  Complex){  Complex  c  =  (Complex)other;  if  (c.isNaN)  {      [BUGGY]  double  imaginary  =  c.infinite()  ||  c.infinite()  ==  divisor;  [BUGGY]      return  isNaN;  }  else  {  return  (real  ==  c.real)  &&  (imaginary  ==  c.imaginary);  }  }  return  false;  }  [CLASS]  Complex  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  other  [VARIABLES]  Object  other  boolean  isInfinite  isNaN  isZero  double  addend  c  d  denominator  divisor  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  	projects/Math46/src/main/java/org/apache/commons/math/complex/Complex.java	0.35355339059327373	329	329	2	replace	double  imaginary  =  c.infinite()  ||  c.infinite()  ==  divisor;	  double    imaginary    =    c.infinite()    ||    c.infinite()    ==    denominator;    	non-compiled	[CE]  not  a  statement	98	None	replace
176	[BUG]  [BUGGY]  double  imaginary  =  c.isNaN  &&  c.isZero;  [CE]  not  a  statement  [FE]              AssertionError      [CONTEXT]      public  boolean  equals(Object  other)  {  if  (this  ==  other)  {  return  true;  }  if  (other  instanceof  Complex){  Complex  c  =  (Complex)other;  if  (c.isNaN)  {      [BUGGY]  double  imaginary  =  c.isNaN  &&  c.isZero;  [BUGGY]      return  isNaN;  }  else  {  return  (real  ==  c.real)  &&  (imaginary  ==  c.imaginary);  }  }  return  false;  }  [CLASS]  Complex  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  other  [VARIABLES]  Object  other  boolean  isInfinite  isNaN  isZero  double  addend  c  d  denominator  divisor  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  	projects/Math46/src/main/java/org/apache/commons/math/complex/Complex.java	0.35355339059327373	329	329	2	replace	double  imaginary  =  c.isNaN  &&  c.isZero;	  double    imaginary    =    c.isNaN    ||    c.isZero;    	non-compiled	[CE]  not  a  statement	11	None	replace
177	[BUG]  [BUGGY]  double  imaginary  =  c.isNaN  ||  c.isDivisor;  [CE]  not  a  statement  [FE]                AssertionError      [CONTEXT]      public  boolean  equals(Object  other)  {  if  (this  ==  other)  {  return  true;  }  if  (other  instanceof  Complex){  Complex  c  =  (Complex)other;  if  (c.isNaN)  {      [BUGGY]  double  imaginary  =  c.isNaN  ||  c.isDivisor;  [BUGGY]      return  isNaN;  }  else  {  return  (real  ==  c.real)  &&  (imaginary  ==  c.imaginary);  }  }  return  false;  }  [CLASS]  Complex  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  other  [VARIABLES]  Object  other  boolean  isInfinite  isNaN  isZero  double  addend  c  d  denominator  divisor  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  	projects/Math46/src/main/java/org/apache/commons/math/complex/Complex.java	0.35355339059327373	329	329	2	replace	double  imaginary  =  c.isNaN  ||  c.isDivisor;	  double    imaginary    =    c.isNaN    ||    c.isZero;    	non-compiled	[CE]  not  a  statement	11	None	replace
178	[BUG]  [BUGGY]  double  imaginary  =  other.imaginary  ||  c.imaginary!=  null;  [CE]  not  a  statement  [FE]                      AssertionError      [CONTEXT]      public  boolean  equals(Object  other)  {  if  (this  ==  other)  {  return  true;  }  if  (other  instanceof  Complex){  Complex  c  =  (Complex)other;  if  (c.isNaN)  {      [BUGGY]  double  imaginary  =  other.imaginary  ||  c.imaginary!=  null;  [BUGGY]      return  isNaN;  }  else  {  return  (real  ==  c.real)  &&  (imaginary  ==  c.imaginary);  }  }  return  false;  }  [CLASS]  Complex  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  other  [VARIABLES]  Object  other  boolean  isInfinite  isNaN  isZero  double  addend  c  d  denominator  divisor  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  	projects/Math46/src/main/java/org/apache/commons/math/complex/Complex.java	0.35355339059327373	329	329	2	replace	double  imaginary  =  other.imaginary  ||  c.imaginary!=  null;	  double    imaginary    =    c.imaginary    ||    c.imaginary!=    null;    	non-compiled	[CE]  not  a  statement	28	None	replace
179	[BUG]  [BUGGY]  double  real  =  c.isNaN  &&  c.isInfinite();  [CE]  not  a  statement  [FE]                AssertionError      [CONTEXT]      public  boolean  equals(Object  other)  {  if  (this  ==  other)  {  return  true;  }  if  (other  instanceof  Complex){  Complex  c  =  (Complex)other;  if  (c.isNaN)  {      [BUGGY]  double  real  =  c.isNaN  &&  c.isInfinite();  [BUGGY]      return  isNaN;  }  else  {  return  (real  ==  c.real)  &&  (imaginary  ==  c.imaginary);  }  }  return  false;  }  [CLASS]  Complex  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  other  [VARIABLES]  Object  other  boolean  isInfinite  isNaN  isZero  double  addend  c  d  denominator  divisor  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  	projects/Math46/src/main/java/org/apache/commons/math/complex/Complex.java	0.35355339059327373	329	329	2	replace	double  real  =  c.isNaN  &&  c.isInfinite();	  double    real    =    c.isNaN    ||    c.isInfinite();    	non-compiled	[CE]  not  a  statement	49	None	replace
180	[BUG]  [BUGGY]  double  real  =  other.isNaN  ||  c.isInfinite();  [CE]  not  a  statement  [FE]                  AssertionError      [CONTEXT]      public  boolean  equals(Object  other)  {  if  (this  ==  other)  {  return  true;  }  if  (other  instanceof  Complex){  Complex  c  =  (Complex)other;  if  (c.isNaN)  {      [BUGGY]  double  real  =  other.isNaN  ||  c.isInfinite();  [BUGGY]      return  isNaN;  }  else  {  return  (real  ==  c.real)  &&  (imaginary  ==  c.imaginary);  }  }  return  false;  }  [CLASS]  Complex  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  other  [VARIABLES]  Object  other  boolean  isInfinite  isNaN  isZero  double  addend  c  d  denominator  divisor  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  	projects/Math46/src/main/java/org/apache/commons/math/complex/Complex.java	0.35355339059327373	329	329	2	replace	double  real  =  other.isNaN  ||  c.isInfinite();	  double    real    =    c.isNaN    ||    c.isInfinite();    	non-compiled	[CE]  not  a  statement	49	None	replace
181	[BUG]  [BUGGY]  double  imaginary  =  c.isNaN()  &&  c.isInfinite();  [CE]  not  a  statement  [FE]                    AssertionError      [CONTEXT]      public  boolean  equals(Object  other)  {  if  (this  ==  other)  {  return  true;  }  if  (other  instanceof  Complex){  Complex  c  =  (Complex)other;  if  (c.isNaN)  {      [BUGGY]  double  imaginary  =  c.isNaN()  &&  c.isInfinite();  [BUGGY]      return  isNaN;  }  else  {  return  (real  ==  c.real)  &&  (imaginary  ==  c.imaginary);  }  }  return  false;  }  [CLASS]  Complex  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  other  [VARIABLES]  Object  other  boolean  isInfinite  isNaN  isZero  double  addend  c  d  denominator  divisor  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  	projects/Math46/src/main/java/org/apache/commons/math/complex/Complex.java	0.35355339059327373	329	329	2	replace	double  imaginary  =  c.isNaN()  &&  c.isInfinite();	  double    imaginary    =    c.isNaN()    ||    c.isInfinite();    	non-compiled	[CE]  not  a  statement	8	None	replace
182	[BUG]  [BUGGY]  double  imaginary  =  other.isNaN()  ||  c.isInfinite();  [CE]  not  a  statement  [FE]                      AssertionError      [CONTEXT]      public  boolean  equals(Object  other)  {  if  (this  ==  other)  {  return  true;  }  if  (other  instanceof  Complex){  Complex  c  =  (Complex)other;  if  (c.isNaN)  {      [BUGGY]  double  imaginary  =  other.isNaN()  ||  c.isInfinite();  [BUGGY]      return  isNaN;  }  else  {  return  (real  ==  c.real)  &&  (imaginary  ==  c.imaginary);  }  }  return  false;  }  [CLASS]  Complex  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  other  [VARIABLES]  Object  other  boolean  isInfinite  isNaN  isZero  double  addend  c  d  denominator  divisor  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  	projects/Math46/src/main/java/org/apache/commons/math/complex/Complex.java	0.35355339059327373	329	329	2	replace	double  imaginary  =  other.isNaN()  ||  c.isInfinite();	  double    imaginary    =    c.isNaN()    ||    c.isInfinite();    	non-compiled	[CE]  not  a  statement	8	None	replace
183	[BUG]  [BUGGY]  double  real  =  c.isNaN()  ||  c.isVoid();  [CE]  not  a  statement  [FE]                AssertionError      [CONTEXT]      public  boolean  equals(Object  other)  {  if  (this  ==  other)  {  return  true;  }  if  (other  instanceof  Complex){  Complex  c  =  (Complex)other;  if  (c.isNaN)  {      [BUGGY]  double  real  =  c.isNaN()  ||  c.isVoid();  [BUGGY]      return  isNaN;  }  else  {  return  (real  ==  c.real)  &&  (imaginary  ==  c.imaginary);  }  }  return  false;  }  [CLASS]  Complex  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  other  [VARIABLES]  Object  other  boolean  isInfinite  isNaN  isZero  double  addend  c  d  denominator  divisor  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  	projects/Math46/src/main/java/org/apache/commons/math/complex/Complex.java	0.35355339059327373	329	329	2	replace	double  real  =  c.isNaN()  ||  c.isVoid();	  double    real    =    c.isNaN()    ||    c.isZero();    	non-compiled	[CE]  not  a  statement	16	None	replace
184	[BUG]  [BUGGY]  double  real  =  c.getImaginary();  [CE]  not  a  statement  [FE]                  AssertionError      [CONTEXT]      public  boolean  equals(Object  other)  {  if  (this  ==  other)  {  return  true;  }  if  (other  instanceof  Complex){  Complex  c  =  (Complex)other;  if  (c.isNaN)  {      [BUGGY]  double  real  =  c.getImaginary();  [BUGGY]      return  isNaN;  }  else  {  return  (real  ==  c.real)  &&  (imaginary  ==  c.imaginary);  }  }  return  false;  }  [CLASS]  Complex  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  other  [VARIABLES]  Object  other  boolean  isInfinite  isNaN  isZero  double  addend  c  d  denominator  divisor  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  	projects/Math46/src/main/java/org/apache/commons/math/complex/Complex.java	0.35355339059327373	329	329	2	replace	double  real  =  c.getImaginary();	  double    real    =    c.getDenominator();    	non-compiled	[CE]  not  a  statement	42	None	replace
185	[BUG]  [BUGGY]  if(c.isNaN  ||  c.isZero)  {  return  true;  }  [CE]  not  a  statement  [FE]                        AssertionError      [CONTEXT]      public  boolean  equals(Object  other)  {  if  (this  ==  other)  {  return  true;  }  if  (other  instanceof  Complex){  Complex  c  =  (Complex)other;  if  (c.isNaN)  {      [BUGGY]  if(c.isNaN  ||  c.isZero)  {  return  true;  }  [BUGGY]      }  else  {  return  (real  ==  c.real)  &&  (imaginary  ==  c.imaginary);  }  }  return  false;  }  [CLASS]  Complex  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  other  [VARIABLES]  Object  other  boolean  isInfinite  isNaN  isZero  double  addend  c  d  denominator  divisor  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  	projects/Math46/src/main/java/org/apache/commons/math/complex/Complex.java	0.35355339059327373	329	329	2	replace	if(c.isNaN  ||  c.isZero)  {  return  true;  }	  if(c.isNaN)    {    return    true;    }    	non-compiled	[CE]  not  a  statement	3	None	replace
186	[BUG]  [BUGGY]  double  real  =  c.real()  ||  c.imaginary()!=  c.imaginary;  [CE]  not  a  statement  [FE]              AssertionError      [CONTEXT]      public  boolean  equals(Object  other)  {  if  (this  ==  other)  {  return  true;  }  if  (other  instanceof  Complex){  Complex  c  =  (Complex)other;  if  (c.isNaN)  {      [BUGGY]  double  real  =  c.real()  ||  c.imaginary()!=  c.imaginary;  [BUGGY]      return  isNaN;  }  else  {  return  (real  ==  c.real)  &&  (imaginary  ==  c.imaginary);  }  }  return  false;  }  [CLASS]  Complex  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  other  [VARIABLES]  Object  other  boolean  isInfinite  isNaN  isZero  double  addend  c  d  denominator  divisor  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  	projects/Math46/src/main/java/org/apache/commons/math/complex/Complex.java	0.35355339059327373	329	329	2	replace	double  real  =  c.real()  ||  c.imaginary()!=  c.imaginary;	  double    real    =    c.real();    	non-compiled	[CE]  not  a  statement	15	None	replace
187	[BUG]  [BUGGY]  double  real  =  c.real()  ||  c.imaginary()!=  c.imaginary);  [CE]  not  a  statement  [FE]                AssertionError      [CONTEXT]      public  boolean  equals(Object  other)  {  if  (this  ==  other)  {  return  true;  }  if  (other  instanceof  Complex){  Complex  c  =  (Complex)other;  if  (c.isNaN)  {      [BUGGY]  double  real  =  c.real()  ||  c.imaginary()!=  c.imaginary);  [BUGGY]      return  isNaN;  }  else  {  return  (real  ==  c.real)  &&  (imaginary  ==  c.imaginary);  }  }  return  false;  }  [CLASS]  Complex  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  other  [VARIABLES]  Object  other  boolean  isInfinite  isNaN  isZero  double  addend  c  d  denominator  divisor  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  	projects/Math46/src/main/java/org/apache/commons/math/complex/Complex.java	0.35355339059327373	329	329	2	replace	double  real  =  c.real()  ||  c.imaginary()!=  c.imaginary);	  double    real    =    c.real();    	non-compiled	[CE]  not  a  statement	15	None	replace
188	[BUG]  [BUGGY]  double  real  =  c.real()  ||  c.imaginary()  ==  c.imaginary;  [CE]  not  a  statement  [FE]                  AssertionError      [CONTEXT]      public  boolean  equals(Object  other)  {  if  (this  ==  other)  {  return  true;  }  if  (other  instanceof  Complex){  Complex  c  =  (Complex)other;  if  (c.isNaN)  {      [BUGGY]  double  real  =  c.real()  ||  c.imaginary()  ==  c.imaginary;  [BUGGY]      return  isNaN;  }  else  {  return  (real  ==  c.real)  &&  (imaginary  ==  c.imaginary);  }  }  return  false;  }  [CLASS]  Complex  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  other  [VARIABLES]  Object  other  boolean  isInfinite  isNaN  isZero  double  addend  c  d  denominator  divisor  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  	projects/Math46/src/main/java/org/apache/commons/math/complex/Complex.java	0.35355339059327373	329	329	2	replace	double  real  =  c.real()  ||  c.imaginary()  ==  c.imaginary;	  double    real    =    c.real();    	non-compiled	[CE]  not  a  statement	15	None	replace
189	[BUG]  [BUGGY]  return  c.isInfinite  ||  c.isZero;  [CE]  not  a  statement  [FE]                  AssertionError      [CONTEXT]      public  boolean  equals(Object  other)  {  if  (this  ==  other)  {  return  true;  }  if  (other  instanceof  Complex){  Complex  c  =  (Complex)other;  if  (c.isNaN)  {      [BUGGY]  return  c.isInfinite  ||  c.isZero;  [BUGGY]      }  else  {  return  (real  ==  c.real)  &&  (imaginary  ==  c.imaginary);  }  }  return  false;  }  [CLASS]  Complex  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  other  [VARIABLES]  Object  other  boolean  isInfinite  isNaN  isZero  double  addend  c  d  denominator  divisor  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  	projects/Math46/src/main/java/org/apache/commons/math/complex/Complex.java	0.35355339059327373	329	329	2	replace	return  c.isInfinite  ||  c.isZero;	  return    isInfinite    ||    c.isZero;    	non-compiled	[CE]  not  a  statement	59	None	replace
190	[BUG]  [BUGGY]  double  imaginary  =  c.isInfinite  ||  c.isNaN();  [CE]  not  a  statement  [FE]                      AssertionError      [CONTEXT]      public  boolean  equals(Object  other)  {  if  (this  ==  other)  {  return  true;  }  if  (other  instanceof  Complex){  Complex  c  =  (Complex)other;  if  (c.isNaN)  {      [BUGGY]  double  imaginary  =  c.isInfinite  ||  c.isNaN();  [BUGGY]      return  isNaN;  }  else  {  return  (real  ==  c.real)  &&  (imaginary  ==  c.imaginary);  }  }  return  false;  }  [CLASS]  Complex  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  other  [VARIABLES]  Object  other  boolean  isInfinite  isNaN  isZero  double  addend  c  d  denominator  divisor  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  	projects/Math46/src/main/java/org/apache/commons/math/complex/Complex.java	0.35355339059327373	329	329	2	replace	double  imaginary  =  c.isInfinite  ||  c.isNaN();	  double    imaginary    =    c.isNaN    ||    c.isInfinite();    	non-compiled	[CE]  not  a  statement	52	None	replace
191	[BUG]  [BUGGY]  return  real  ==  c.real  ||  c.isZero();  [CE]  not  a  statement  [FE]                  AssertionError      [CONTEXT]      public  boolean  equals(Object  other)  {  if  (this  ==  other)  {  return  true;  }  if  (other  instanceof  Complex){  Complex  c  =  (Complex)other;  if  (c.isNaN)  {      [BUGGY]  return  real  ==  c.real  ||  c.isZero();  [BUGGY]      }  else  {  return  (real  ==  c.real)  &&  (imaginary  ==  c.imaginary);  }  }  return  false;  }  [CLASS]  Complex  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  other  [VARIABLES]  Object  other  boolean  isInfinite  isNaN  isZero  double  addend  c  d  denominator  divisor  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  	projects/Math46/src/main/java/org/apache/commons/math/complex/Complex.java	0.35355339059327373	329	329	2	replace	return  real  ==  c.real  ||  c.isZero();	  return    c.isNaN    ||    c.isZero();    	non-compiled	[CE]  not  a  statement	75	None	replace
192	[BUG]  [BUGGY]  double  imaginary  =  c.imaginary.infinite(denominator);  [CE]  not  a  statement  [FE]                AssertionError      [CONTEXT]      public  boolean  equals(Object  other)  {  if  (this  ==  other)  {  return  true;  }  if  (other  instanceof  Complex){  Complex  c  =  (Complex)other;  if  (c.isNaN)  {      [BUGGY]  double  imaginary  =  c.imaginary.infinite(denominator);  [BUGGY]      return  isNaN;  }  else  {  return  (real  ==  c.real)  &&  (imaginary  ==  c.imaginary);  }  }  return  false;  }  [CLASS]  Complex  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  other  [VARIABLES]  Object  other  boolean  isInfinite  isNaN  isZero  double  addend  c  d  denominator  divisor  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  	projects/Math46/src/main/java/org/apache/commons/math/complex/Complex.java	0.35355339059327373	329	329	2	replace	double  imaginary  =  c.imaginary.infinite(denominator);	  double    imaginary    =    c.imaginary.infinite();    	non-compiled	[CE]  not  a  statement	96	None	replace
193	[BUG]  [BUGGY]  return  c.isNaN  ==  isNaN  ||  c.infinite;  [CE]  not  a  statement  [FE]              AssertionError      [CONTEXT]      public  boolean  equals(Object  other)  {  if  (this  ==  other)  {  return  true;  }  if  (other  instanceof  Complex){  Complex  c  =  (Complex)other;  if  (c.isNaN)  {      [BUGGY]  return  c.isNaN  ==  isNaN  ||  c.infinite;  [BUGGY]      }  else  {  return  (real  ==  c.real)  &&  (imaginary  ==  c.imaginary);  }  }  return  false;  }  [CLASS]  Complex  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  other  [VARIABLES]  Object  other  boolean  isInfinite  isNaN  isZero  double  addend  c  d  denominator  divisor  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  	projects/Math46/src/main/java/org/apache/commons/math/complex/Complex.java	0.35355339059327373	329	329	2	replace	return  c.isNaN  ==  isNaN  ||  c.infinite;	  return    isNaN    ==    c.isNaN    ||    isNaN    ==    c.infinite;    	non-compiled	[CE]  not  a  statement	57	None	replace
194	[BUG]  [BUGGY]  double  imaginary  =  c.real  &&  c.imaginary  ==  null;  [CE]  not  a  statement  [FE]                        AssertionError      [CONTEXT]      public  boolean  equals(Object  other)  {  if  (this  ==  other)  {  return  true;  }  if  (other  instanceof  Complex){  Complex  c  =  (Complex)other;  if  (c.isNaN)  {      [BUGGY]  double  imaginary  =  c.real  &&  c.imaginary  ==  null;  [BUGGY]      return  isNaN;  }  else  {  return  (real  ==  c.real)  &&  (imaginary  ==  c.imaginary);  }  }  return  false;  }  [CLASS]  Complex  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  other  [VARIABLES]  Object  other  boolean  isInfinite  isNaN  isZero  double  addend  c  d  denominator  divisor  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  	projects/Math46/src/main/java/org/apache/commons/math/complex/Complex.java	0.35355339059327373	329	329	2	replace	double  imaginary  =  c.real  &&  c.imaginary  ==  null;	  double    imaginary    =    c.real    ||    c.imaginary    ==    null;    	non-compiled	[CE]  not  a  statement	29	None	replace
195	[BUG]  [BUGGY]  return  c.isNaN  &&  isInfinite  ==  c.isInfinite;  [CE]  not  a  statement  [FE]              AssertionError      [CONTEXT]      public  boolean  equals(Object  other)  {  if  (this  ==  other)  {  return  true;  }  if  (other  instanceof  Complex){  Complex  c  =  (Complex)other;  if  (c.isNaN)  {      [BUGGY]  return  c.isNaN  &&  isInfinite  ==  c.isInfinite;  [BUGGY]      }  else  {  return  (real  ==  c.real)  &&  (imaginary  ==  c.imaginary);  }  }  return  false;  }  [CLASS]  Complex  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  other  [VARIABLES]  Object  other  boolean  isInfinite  isNaN  isZero  double  addend  c  d  denominator  divisor  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  	projects/Math46/src/main/java/org/apache/commons/math/complex/Complex.java	0.35355339059327373	329	329	2	replace	return  c.isNaN  &&  isInfinite  ==  c.isInfinite;	  return    c.isNaN    ||    isInfinite    ==    c.isInfinite;    	non-compiled	[CE]  not  a  statement	80	None	replace
196	[BUG]  [BUGGY]  double  imaginary  =  c.Imaginary;  [CE]  not  a  statement  [FE]            AssertionError      [CONTEXT]      public  boolean  equals(Object  other)  {  if  (this  ==  other)  {  return  true;  }  if  (other  instanceof  Complex){  Complex  c  =  (Complex)other;  if  (c.isNaN)  {      [BUGGY]  double  imaginary  =  c.Imaginary;  [BUGGY]      return  isNaN;  }  else  {  return  (real  ==  c.real)  &&  (imaginary  ==  c.imaginary);  }  }  return  false;  }  [CLASS]  Complex  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  other  [VARIABLES]  Object  other  boolean  isInfinite  isNaN  isZero  double  addend  c  d  denominator  divisor  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  	projects/Math46/src/main/java/org/apache/commons/math/complex/Complex.java	0.35355339059327373	329	329	2	replace	double  imaginary  =  c.Imaginary;	  double    imaginary    =    other.imaginary;    	non-compiled	[CE]  not  a  statement	47	None	replace
197	[BUG]  [BUGGY]  double  imaginary  =  d.imaginary;  [CE]  not  a  statement  [FE]              AssertionError      [CONTEXT]      public  boolean  equals(Object  other)  {  if  (this  ==  other)  {  return  true;  }  if  (other  instanceof  Complex){  Complex  c  =  (Complex)other;  if  (c.isNaN)  {      [BUGGY]  double  imaginary  =  d.imaginary;  [BUGGY]      return  isNaN;  }  else  {  return  (real  ==  c.real)  &&  (imaginary  ==  c.imaginary);  }  }  return  false;  }  [CLASS]  Complex  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  other  [VARIABLES]  Object  other  boolean  isInfinite  isNaN  isZero  double  addend  c  d  denominator  divisor  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  	projects/Math46/src/main/java/org/apache/commons/math/complex/Complex.java	0.35355339059327373	329	329	2	replace	double  imaginary  =  d.imaginary;	  double    imaginary    =    other.imaginary;    	non-compiled	[CE]  not  a  statement	47	None	replace
198	[BUG]  [BUGGY]  Double  real  =  c.getDivisor();  [CE]  not  a  statement  [FE]                AssertionError      [CONTEXT]      public  boolean  equals(Object  other)  {  if  (this  ==  other)  {  return  true;  }  if  (other  instanceof  Complex){  Complex  c  =  (Complex)other;  if  (c.isNaN)  {      [BUGGY]  Double  real  =  c.getDivisor();  [BUGGY]      return  isNaN;  }  else  {  return  (real  ==  c.real)  &&  (imaginary  ==  c.imaginary);  }  }  return  false;  }  [CLASS]  Complex  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  other  [VARIABLES]  Object  other  boolean  isInfinite  isNaN  isZero  double  addend  c  d  denominator  divisor  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  	projects/Math46/src/main/java/org/apache/commons/math/complex/Complex.java	0.35355339059327373	329	329	2	replace	Double  real  =  c.getDivisor();	  double    real    =    other.getDivisor();    	non-compiled	[CE]  not  a  statement	41	None	replace
199	[BUG]  [BUGGY]  return  c.isNaN  ||  isInfinite  ==  c.isInfinite);  [CE]  not  a  statement  [FE]              AssertionError      [CONTEXT]      public  boolean  equals(Object  other)  {  if  (this  ==  other)  {  return  true;  }  if  (other  instanceof  Complex){  Complex  c  =  (Complex)other;  if  (c.isNaN)  {      [BUGGY]  return  c.isNaN  ||  isInfinite  ==  c.isInfinite);  [BUGGY]      }  else  {  return  (real  ==  c.real)  &&  (imaginary  ==  c.imaginary);  }  }  return  false;  }  [CLASS]  Complex  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  other  [VARIABLES]  Object  other  boolean  isInfinite  isNaN  isZero  double  addend  c  d  denominator  divisor  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  	projects/Math46/src/main/java/org/apache/commons/math/complex/Complex.java	0.35355339059327373	329	329	2	replace	return  c.isNaN  ||  isInfinite  ==  c.isInfinite);	  return    isNaN    ==    c.isNaN    ||    isInfinite    ==    c.isInfinite);    	non-compiled	[CE]  not  a  statement	95	None	replace
200	[BUG]  [BUGGY]  return  isInfinite  ==  c.isNaN  &&  isInfinite  ==  c.isInfinite;  [CE]  not  a  statement  [FE]            AssertionError      [CONTEXT]      public  boolean  equals(Object  other)  {  if  (this  ==  other)  {  return  true;  }  if  (other  instanceof  Complex){  Complex  c  =  (Complex)other;  if  (c.isNaN)  {      [BUGGY]  return  isInfinite  ==  c.isNaN  &&  isInfinite  ==  c.isInfinite;  [BUGGY]      }  else  {  return  (real  ==  c.real)  &&  (imaginary  ==  c.imaginary);  }  }  return  false;  }  [CLASS]  Complex  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  other  [VARIABLES]  Object  other  boolean  isInfinite  isNaN  isZero  double  addend  c  d  denominator  divisor  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  	projects/Math46/src/main/java/org/apache/commons/math/complex/Complex.java	0.35355339059327373	329	329	2	replace	return  isInfinite  ==  c.isNaN  &&  isInfinite  ==  c.isInfinite;	  return    isInfinite    ==    c.isNaN    ||    isInfinite    ==    c.isInfinite;    	non-compiled	[CE]  not  a  statement	79	None	replace
201	[BUG]  [BUGGY]  double  imaginary  =  this.real;  [CE]  not  a  statement  [FE]                    AssertionError      [CONTEXT]      public  boolean  equals(Object  other)  {  if  (this  ==  other)  {  return  true;  }  if  (other  instanceof  Complex){  Complex  c  =  (Complex)other;  if  (c.isNaN)  {      [BUGGY]  double  imaginary  =  this.real;  [BUGGY]      return  isNaN;  }  else  {  return  (real  ==  c.real)  &&  (imaginary  ==  c.imaginary);  }  }  return  false;  }  [CLASS]  Complex  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  other  [VARIABLES]  Object  other  boolean  isInfinite  isNaN  isZero  double  addend  c  d  denominator  divisor  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  	projects/Math46/src/main/java/org/apache/commons/math/complex/Complex.java	0.35355339059327373	329	329	2	replace	double  imaginary  =  this.real;	  double    imaginary    =    other.real;    	non-compiled	[CE]  not  a  statement	26	None	replace
202	[BUG]  [BUGGY]  return(imaginary  ==  c.real)&&(imaginary  ==  c.imaginary);  [CE]  not  a  statement  [FE]                    AssertionError      [CONTEXT]      public  boolean  equals(Object  other)  {  if  (this  ==  other)  {  return  true;  }  if  (other  instanceof  Complex){  Complex  c  =  (Complex)other;  if  (c.isNaN)  {      [BUGGY]  return(imaginary  ==  c.real)&&(imaginary  ==  c.imaginary);  [BUGGY]      }  else  {  return  (real  ==  c.real)  &&  (imaginary  ==  c.imaginary);  }  }  return  false;  }  [CLASS]  Complex  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  other  [VARIABLES]  Object  other  boolean  isInfinite  isNaN  isZero  double  addend  c  d  denominator  divisor  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  	projects/Math46/src/main/java/org/apache/commons/math/complex/Complex.java	0.35355339059327373	329	329	2	replace	return(imaginary  ==  c.real)&&(imaginary  ==  c.imaginary);	  return(real    ==    c.real)&&    (imaginary    ==    c.imaginary);    	non-compiled	[CE]  not  a  statement	1	None	replace
203	[BUG]  [BUGGY]  double  imaginary  =  c.real  ||  c.imaginary!=  null;  [CE]  not  a  statement  [FE]                      AssertionError      [CONTEXT]      public  boolean  equals(Object  other)  {  if  (this  ==  other)  {  return  true;  }  if  (other  instanceof  Complex){  Complex  c  =  (Complex)other;  if  (c.isNaN)  {      [BUGGY]  double  imaginary  =  c.real  ||  c.imaginary!=  null;  [BUGGY]      return  isNaN;  }  else  {  return  (real  ==  c.real)  &&  (imaginary  ==  c.imaginary);  }  }  return  false;  }  [CLASS]  Complex  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  other  [VARIABLES]  Object  other  boolean  isInfinite  isNaN  isZero  double  addend  c  d  denominator  divisor  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  	projects/Math46/src/main/java/org/apache/commons/math/complex/Complex.java	0.35355339059327373	329	329	2	replace	double  imaginary  =  c.real  ||  c.imaginary!=  null;	  double    imaginary    =    c.imaginary    ||    c.imaginary!=    null;    	non-compiled	[CE]  not  a  statement	28	None	replace
204	[BUG]  [BUGGY]  double  imaginary  =  c.imaginary.equals(this.imaginary);  [CE]  not  a  statement  [FE]                  AssertionError      [CONTEXT]      public  boolean  equals(Object  other)  {  if  (this  ==  other)  {  return  true;  }  if  (other  instanceof  Complex){  Complex  c  =  (Complex)other;  if  (c.isNaN)  {      [BUGGY]  double  imaginary  =  c.imaginary.equals(this.imaginary);  [BUGGY]      return  isNaN;  }  else  {  return  (real  ==  c.real)  &&  (imaginary  ==  c.imaginary);  }  }  return  false;  }  [CLASS]  Complex  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  other  [VARIABLES]  Object  other  boolean  isInfinite  isNaN  isZero  double  addend  c  d  denominator  divisor  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  	projects/Math46/src/main/java/org/apache/commons/math/complex/Complex.java	0.35355339059327373	329	329	2	replace	double  imaginary  =  c.imaginary.equals(this.imaginary);	  double    imaginary    =    c.imaginary.isNaN();    	non-compiled	[CE]  not  a  statement	94	None	replace
205	[BUG]  [BUGGY]  double  imaginary  =  c.imaginary.equals(real);  [CE]  not  a  statement  [FE]                    AssertionError      [CONTEXT]      public  boolean  equals(Object  other)  {  if  (this  ==  other)  {  return  true;  }  if  (other  instanceof  Complex){  Complex  c  =  (Complex)other;  if  (c.isNaN)  {      [BUGGY]  double  imaginary  =  c.imaginary.equals(real);  [BUGGY]      return  isNaN;  }  else  {  return  (real  ==  c.real)  &&  (imaginary  ==  c.imaginary);  }  }  return  false;  }  [CLASS]  Complex  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  other  [VARIABLES]  Object  other  boolean  isInfinite  isNaN  isZero  double  addend  c  d  denominator  divisor  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  	projects/Math46/src/main/java/org/apache/commons/math/complex/Complex.java	0.35355339059327373	329	329	2	replace	double  imaginary  =  c.imaginary.equals(real);	  double    imaginary    =    c.imaginary.isNaN();    	non-compiled	[CE]  not  a  statement	94	None	replace
206	[BUG]  [BUGGY]  double  imaginary  =  c.imaginary  &&  c.denominator  ==  null;  [CE]  not  a  statement  [FE]                    AssertionError      [CONTEXT]      public  boolean  equals(Object  other)  {  if  (this  ==  other)  {  return  true;  }  if  (other  instanceof  Complex){  Complex  c  =  (Complex)other;  if  (c.isNaN)  {      [BUGGY]  double  imaginary  =  c.imaginary  &&  c.denominator  ==  null;  [BUGGY]      return  isNaN;  }  else  {  return  (real  ==  c.real)  &&  (imaginary  ==  c.imaginary);  }  }  return  false;  }  [CLASS]  Complex  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  other  [VARIABLES]  Object  other  boolean  isInfinite  isNaN  isZero  double  addend  c  d  denominator  divisor  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  	projects/Math46/src/main/java/org/apache/commons/math/complex/Complex.java	0.35355339059327373	329	329	2	replace	double  imaginary  =  c.imaginary  &&  c.denominator  ==  null;	  double    imaginary    =    c.imaginary    &&    c.imaginary    ==    null;    	non-compiled	[CE]  not  a  statement	27	None	replace
207	[BUG]  [BUGGY]  double  imaginary  =  c.imaginary  &&  c.divisor  ==  null;  [CE]  not  a  statement  [FE]                      AssertionError      [CONTEXT]      public  boolean  equals(Object  other)  {  if  (this  ==  other)  {  return  true;  }  if  (other  instanceof  Complex){  Complex  c  =  (Complex)other;  if  (c.isNaN)  {      [BUGGY]  double  imaginary  =  c.imaginary  &&  c.divisor  ==  null;  [BUGGY]      return  isNaN;  }  else  {  return  (real  ==  c.real)  &&  (imaginary  ==  c.imaginary);  }  }  return  false;  }  [CLASS]  Complex  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  other  [VARIABLES]  Object  other  boolean  isInfinite  isNaN  isZero  double  addend  c  d  denominator  divisor  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  	projects/Math46/src/main/java/org/apache/commons/math/complex/Complex.java	0.35355339059327373	329	329	2	replace	double  imaginary  =  c.imaginary  &&  c.divisor  ==  null;	  double    imaginary    =    c.imaginary    &&    c.imaginary    ==    null;    	non-compiled	[CE]  not  a  statement	27	None	replace
208	[BUG]  [BUGGY]  Double  imaginary  =  c.infinite();  [CE]  not  a  statement  [FE]                AssertionError      [CONTEXT]      public  boolean  equals(Object  other)  {  if  (this  ==  other)  {  return  true;  }  if  (other  instanceof  Complex){  Complex  c  =  (Complex)other;  if  (c.isNaN)  {      [BUGGY]  Double  imaginary  =  c.infinite();  [BUGGY]      return  isNaN;  }  else  {  return  (real  ==  c.real)  &&  (imaginary  ==  c.imaginary);  }  }  return  false;  }  [CLASS]  Complex  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  other  [VARIABLES]  Object  other  boolean  isInfinite  isNaN  isZero  double  addend  c  d  denominator  divisor  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  	projects/Math46/src/main/java/org/apache/commons/math/complex/Complex.java	0.35355339059327373	329	329	2	replace	Double  imaginary  =  c.infinite();	  double    imaginary    =    other.infinite();    	non-compiled	[CE]  not  a  statement	35	None	replace
209	[BUG]  [BUGGY]  return(c.isNaN  ||  c.isNaN)&&(imaginary  ==  c.real);  [CE]  not  a  statement  [FE]                    AssertionError      [CONTEXT]      public  boolean  equals(Object  other)  {  if  (this  ==  other)  {  return  true;  }  if  (other  instanceof  Complex){  Complex  c  =  (Complex)other;  if  (c.isNaN)  {      [BUGGY]  return(c.isNaN  ||  c.isNaN)&&(imaginary  ==  c.real);  [BUGGY]      }  else  {  return  (real  ==  c.real)  &&  (imaginary  ==  c.imaginary);  }  }  return  false;  }  [CLASS]  Complex  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  other  [VARIABLES]  Object  other  boolean  isInfinite  isNaN  isZero  double  addend  c  d  denominator  divisor  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  	projects/Math46/src/main/java/org/apache/commons/math/complex/Complex.java	0.35355339059327373	329	329	2	replace	return(c.isNaN  ||  c.isNaN)&&(imaginary  ==  c.real);	  return(c.isNaN    ||    c.isNaN)&&(imaginary    ==    c.imaginary);    	non-compiled	[CE]  not  a  statement	99	None	replace
210	[BUG]  [BUGGY]  return  isNaN  ==  other.isInfinite;  [CE]  not  a  statement  [FE]            AssertionError      [CONTEXT]      public  boolean  equals(Object  other)  {  if  (this  ==  other)  {  return  true;  }  if  (other  instanceof  Complex){  Complex  c  =  (Complex)other;  if  (c.isNaN)  {      [BUGGY]  return  isNaN  ==  other.isInfinite;  [BUGGY]      }  else  {  return  (real  ==  c.real)  &&  (imaginary  ==  c.imaginary);  }  }  return  false;  }  [CLASS]  Complex  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  other  [VARIABLES]  Object  other  boolean  isInfinite  isNaN  isZero  double  addend  c  d  denominator  divisor  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  	projects/Math46/src/main/java/org/apache/commons/math/complex/Complex.java	0.35355339059327373	329	329	2	replace	return  isNaN  ==  other.isInfinite;	  return    isNaN    ==    c.isInfinite;    	non-compiled	[CE]  not  a  statement	86	None	replace
211	[BUG]  [BUGGY]  return  isNaN  ==  c.isNaN  &&  isInfinite;  [CE]  not  a  statement  [FE]              AssertionError      [CONTEXT]      public  boolean  equals(Object  other)  {  if  (this  ==  other)  {  return  true;  }  if  (other  instanceof  Complex){  Complex  c  =  (Complex)other;  if  (c.isNaN)  {      [BUGGY]  return  isNaN  ==  c.isNaN  &&  isInfinite;  [BUGGY]      }  else  {  return  (real  ==  c.real)  &&  (imaginary  ==  c.imaginary);  }  }  return  false;  }  [CLASS]  Complex  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  other  [VARIABLES]  Object  other  boolean  isInfinite  isNaN  isZero  double  addend  c  d  denominator  divisor  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  	projects/Math46/src/main/java/org/apache/commons/math/complex/Complex.java	0.35355339059327373	329	329	2	replace	return  isNaN  ==  c.isNaN  &&  isInfinite;	  return    isNaN    ==    c.isNaN    ||    isInfinite;    	non-compiled	[CE]  not  a  statement	60	None	replace
212	[BUG]  [BUGGY]  return  real  ==  c.real  ||  imaginary  ==  c.imaginary;  [CE]  not  a  statement  [FE]                      AssertionError      [CONTEXT]      public  boolean  equals(Object  other)  {  if  (this  ==  other)  {  return  true;  }  if  (other  instanceof  Complex){  Complex  c  =  (Complex)other;  if  (c.isNaN)  {      [BUGGY]  return  real  ==  c.real  ||  imaginary  ==  c.imaginary;  [BUGGY]      }  else  {  return  (real  ==  c.real)  &&  (imaginary  ==  c.imaginary);  }  }  return  false;  }  [CLASS]  Complex  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  other  [VARIABLES]  Object  other  boolean  isInfinite  isNaN  isZero  double  addend  c  d  denominator  divisor  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  	projects/Math46/src/main/java/org/apache/commons/math/complex/Complex.java	0.35355339059327373	329	329	2	replace	return  real  ==  c.real  ||  imaginary  ==  c.imaginary;	  return    c.isNaN    ||    c.isNaN;    	non-compiled	[CE]  not  a  statement	2	None	replace
213	[BUG]  [BUGGY]  double  imaginary  =  c.isInfinite  ||  c.imaginary;  [CE]  not  a  statement  [FE]                  AssertionError      [CONTEXT]      public  boolean  equals(Object  other)  {  if  (this  ==  other)  {  return  true;  }  if  (other  instanceof  Complex){  Complex  c  =  (Complex)other;  if  (c.isNaN)  {      [BUGGY]  double  imaginary  =  c.isInfinite  ||  c.imaginary;  [BUGGY]      return  isNaN;  }  else  {  return  (real  ==  c.real)  &&  (imaginary  ==  c.imaginary);  }  }  return  false;  }  [CLASS]  Complex  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  other  [VARIABLES]  Object  other  boolean  isInfinite  isNaN  isZero  double  addend  c  d  denominator  divisor  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  	projects/Math46/src/main/java/org/apache/commons/math/complex/Complex.java	0.35355339059327373	329	329	2	replace	double  imaginary  =  c.isInfinite  ||  c.imaginary;	  double    imaginary    =    c.isInfinite    ||    c.isNaN;    	non-compiled	[CE]  not  a  statement	13	None	replace
214	[BUG]  [BUGGY]  double  real  =  c.isInfinite()  ||  c.isNaN();  [CE]  not  a  statement  [FE]            AssertionError      [CONTEXT]      public  boolean  equals(Object  other)  {  if  (this  ==  other)  {  return  true;  }  if  (other  instanceof  Complex){  Complex  c  =  (Complex)other;  if  (c.isNaN)  {      [BUGGY]  double  real  =  c.isInfinite()  ||  c.isNaN();  [BUGGY]      return  isNaN;  }  else  {  return  (real  ==  c.real)  &&  (imaginary  ==  c.imaginary);  }  }  return  false;  }  [CLASS]  Complex  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  other  [VARIABLES]  Object  other  boolean  isInfinite  isNaN  isZero  double  addend  c  d  denominator  divisor  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  	projects/Math46/src/main/java/org/apache/commons/math/complex/Complex.java	0.35355339059327373	329	329	2	replace	double  real  =  c.isInfinite()  ||  c.isNaN();	  double    real    =    c.isNaN()    ||    c.isInfinite();    	non-compiled	[CE]  not  a  statement	68	None	replace
215	[BUG]  [BUGGY]  return  c.isNaN  &&  isInfinite  ==  c.infinite;  [CE]  not  a  statement  [FE]                AssertionError      [CONTEXT]      public  boolean  equals(Object  other)  {  if  (this  ==  other)  {  return  true;  }  if  (other  instanceof  Complex){  Complex  c  =  (Complex)other;  if  (c.isNaN)  {      [BUGGY]  return  c.isNaN  &&  isInfinite  ==  c.infinite;  [BUGGY]      }  else  {  return  (real  ==  c.real)  &&  (imaginary  ==  c.imaginary);  }  }  return  false;  }  [CLASS]  Complex  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  other  [VARIABLES]  Object  other  boolean  isInfinite  isNaN  isZero  double  addend  c  d  denominator  divisor  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  	projects/Math46/src/main/java/org/apache/commons/math/complex/Complex.java	0.35355339059327373	329	329	2	replace	return  c.isNaN  &&  isInfinite  ==  c.infinite;	  return    c.isNaN    ||    isInfinite    ==    c.infinite;    	non-compiled	[CE]  not  a  statement	58	None	replace
216	[BUG]  [BUGGY]  double  imaginary  =  c.real  ||  imaginary  ==  c.imaginary;  [CE]  not  a  statement  [FE]                    AssertionError      [CONTEXT]      public  boolean  equals(Object  other)  {  if  (this  ==  other)  {  return  true;  }  if  (other  instanceof  Complex){  Complex  c  =  (Complex)other;  if  (c.isNaN)  {      [BUGGY]  double  imaginary  =  c.real  ||  imaginary  ==  c.imaginary;  [BUGGY]      return  isNaN;  }  else  {  return  (real  ==  c.real)  &&  (imaginary  ==  c.imaginary);  }  }  return  false;  }  [CLASS]  Complex  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  other  [VARIABLES]  Object  other  boolean  isInfinite  isNaN  isZero  double  addend  c  d  denominator  divisor  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  	projects/Math46/src/main/java/org/apache/commons/math/complex/Complex.java	0.35355339059327373	329	329	2	replace	double  imaginary  =  c.real  ||  imaginary  ==  c.imaginary;	  double    imaginary    =    c.real    ||    c.imaginary!=    c.imaginary;    	non-compiled	[CE]  not  a  statement	70	None	replace
217	[BUG]  [BUGGY]  double  imaginary  =  c.isNaN()  ||  c.isVoid();  [CE]  not  a  statement  [FE]                  AssertionError      [CONTEXT]      public  boolean  equals(Object  other)  {  if  (this  ==  other)  {  return  true;  }  if  (other  instanceof  Complex){  Complex  c  =  (Complex)other;  if  (c.isNaN)  {      [BUGGY]  double  imaginary  =  c.isNaN()  ||  c.isVoid();  [BUGGY]      return  isNaN;  }  else  {  return  (real  ==  c.real)  &&  (imaginary  ==  c.imaginary);  }  }  return  false;  }  [CLASS]  Complex  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  other  [VARIABLES]  Object  other  boolean  isInfinite  isNaN  isZero  double  addend  c  d  denominator  divisor  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  	projects/Math46/src/main/java/org/apache/commons/math/complex/Complex.java	0.35355339059327373	329	329	2	replace	double  imaginary  =  c.isNaN()  ||  c.isVoid();	  double    imaginary    =    c.isNaN()    ||    c.isZero();    	non-compiled	[CE]  not  a  statement	7	None	replace
218	[BUG]  [BUGGY]  double  imaginary  =  c.imaginary  /  1;  [CE]  not  a  statement  [FE]            AssertionError      [CONTEXT]      public  boolean  equals(Object  other)  {  if  (this  ==  other)  {  return  true;  }  if  (other  instanceof  Complex){  Complex  c  =  (Complex)other;  if  (c.isNaN)  {      [BUGGY]  double  imaginary  =  c.imaginary  /  1;  [BUGGY]      return  isNaN;  }  else  {  return  (real  ==  c.real)  &&  (imaginary  ==  c.imaginary);  }  }  return  false;  }  [CLASS]  Complex  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  other  [VARIABLES]  Object  other  boolean  isInfinite  isNaN  isZero  double  addend  c  d  denominator  divisor  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  	projects/Math46/src/main/java/org/apache/commons/math/complex/Complex.java	0.35355339059327373	329	329	2	replace	double  imaginary  =  c.imaginary  /  1;	  double    imaginary    =    c.imaginary    +    1;    	non-compiled	[CE]  not  a  statement	72	None	replace
219	[BUG]  [BUGGY]  double  imaginary  =  c.imaginary  +  3;  [CE]  not  a  statement  [FE]              AssertionError      [CONTEXT]      public  boolean  equals(Object  other)  {  if  (this  ==  other)  {  return  true;  }  if  (other  instanceof  Complex){  Complex  c  =  (Complex)other;  if  (c.isNaN)  {      [BUGGY]  double  imaginary  =  c.imaginary  +  3;  [BUGGY]      return  isNaN;  }  else  {  return  (real  ==  c.real)  &&  (imaginary  ==  c.imaginary);  }  }  return  false;  }  [CLASS]  Complex  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  other  [VARIABLES]  Object  other  boolean  isInfinite  isNaN  isZero  double  addend  c  d  denominator  divisor  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  	projects/Math46/src/main/java/org/apache/commons/math/complex/Complex.java	0.35355339059327373	329	329	2	replace	double  imaginary  =  c.imaginary  +  3;	  double    imaginary    =    c.imaginary    +    1;    	non-compiled	[CE]  not  a  statement	72	None	replace
220	[BUG]  [BUGGY]  return  c.isNaN  ==  isNaN  ||  c.infinite  ==  isNaN;  [CE]  not  a  statement  [FE]              AssertionError      [CONTEXT]      public  boolean  equals(Object  other)  {  if  (this  ==  other)  {  return  true;  }  if  (other  instanceof  Complex){  Complex  c  =  (Complex)other;  if  (c.isNaN)  {      [BUGGY]  return  c.isNaN  ==  isNaN  ||  c.infinite  ==  isNaN;  [BUGGY]      }  else  {  return  (real  ==  c.real)  &&  (imaginary  ==  c.imaginary);  }  }  return  false;  }  [CLASS]  Complex  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  other  [VARIABLES]  Object  other  boolean  isInfinite  isNaN  isZero  double  addend  c  d  denominator  divisor  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  	projects/Math46/src/main/java/org/apache/commons/math/complex/Complex.java	0.35355339059327373	329	329	2	replace	return  c.isNaN  ==  isNaN  ||  c.infinite  ==  isNaN;	  return    isNaN    ==    c.isNaN    ||    isZero    ==    c.infinite;    	non-compiled	[CE]  not  a  statement	90	None	replace
221	[BUG]  [BUGGY]  double  imaginary  =  c.isNaN  &&  c.isDenominator();  [CE]  not  a  statement  [FE]                    AssertionError      [CONTEXT]      public  boolean  equals(Object  other)  {  if  (this  ==  other)  {  return  true;  }  if  (other  instanceof  Complex){  Complex  c  =  (Complex)other;  if  (c.isNaN)  {      [BUGGY]  double  imaginary  =  c.isNaN  &&  c.isDenominator();  [BUGGY]      return  isNaN;  }  else  {  return  (real  ==  c.real)  &&  (imaginary  ==  c.imaginary);  }  }  return  false;  }  [CLASS]  Complex  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  other  [VARIABLES]  Object  other  boolean  isInfinite  isNaN  isZero  double  addend  c  d  denominator  divisor  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  	projects/Math46/src/main/java/org/apache/commons/math/complex/Complex.java	0.35355339059327373	329	329	2	replace	double  imaginary  =  c.isNaN  &&  c.isDenominator();	  double    imaginary    =    c.isNaN    &&    c.isZero();    	non-compiled	[CE]  not  a  statement	51	None	replace
222	[BUG]  [BUGGY]  return  c.isNaN!=  real;  [CE]  not  a  statement  [FE]            AssertionError      [CONTEXT]      public  boolean  equals(Object  other)  {  if  (this  ==  other)  {  return  true;  }  if  (other  instanceof  Complex){  Complex  c  =  (Complex)other;  if  (c.isNaN)  {      [BUGGY]  return  c.isNaN!=  real;  [BUGGY]      }  else  {  return  (real  ==  c.real)  &&  (imaginary  ==  c.imaginary);  }  }  return  false;  }  [CLASS]  Complex  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  other  [VARIABLES]  Object  other  boolean  isInfinite  isNaN  isZero  double  addend  c  d  denominator  divisor  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  	projects/Math46/src/main/java/org/apache/commons/math/complex/Complex.java	0.35355339059327373	329	329	2	replace	return  c.isNaN!=  real;	  return    real!=    c.isNaN;    	non-compiled	[CE]  not  a  statement	56	None	replace
223	[BUG]  [BUGGY]  double  real  =  c.real.equals(divisor);  [CE]  not  a  statement  [FE]                AssertionError      [CONTEXT]      public  boolean  equals(Object  other)  {  if  (this  ==  other)  {  return  true;  }  if  (other  instanceof  Complex){  Complex  c  =  (Complex)other;  if  (c.isNaN)  {      [BUGGY]  double  real  =  c.real.equals(divisor);  [BUGGY]      return  isNaN;  }  else  {  return  (real  ==  c.real)  &&  (imaginary  ==  c.imaginary);  }  }  return  false;  }  [CLASS]  Complex  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  other  [VARIABLES]  Object  other  boolean  isInfinite  isNaN  isZero  double  addend  c  d  denominator  divisor  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  	projects/Math46/src/main/java/org/apache/commons/math/complex/Complex.java	0.35355339059327373	329	329	2	replace	double  real  =  c.real.equals(divisor);	  double    real    =    c.real.getDivisor();    	non-compiled	[CE]  not  a  statement	82	None	replace
224	[BUG]  [BUGGY]  double  real  =  c.isNaN  ||  c.isZero  +  1;  [CE]  not  a  statement  [FE]                AssertionError      [CONTEXT]      public  boolean  equals(Object  other)  {  if  (this  ==  other)  {  return  true;  }  if  (other  instanceof  Complex){  Complex  c  =  (Complex)other;  if  (c.isNaN)  {      [BUGGY]  double  real  =  c.isNaN  ||  c.isZero  +  1;  [BUGGY]      return  isNaN;  }  else  {  return  (real  ==  c.real)  &&  (imaginary  ==  c.imaginary);  }  }  return  false;  }  [CLASS]  Complex  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  other  [VARIABLES]  Object  other  boolean  isInfinite  isNaN  isZero  double  addend  c  d  denominator  divisor  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  	projects/Math46/src/main/java/org/apache/commons/math/complex/Complex.java	0.35355339059327373	329	329	2	replace	double  real  =  c.isNaN  ||  c.isZero  +  1;	  double    real    =    c.isNaN    ||    c.isZero;    	non-compiled	[CE]  not  a  statement	19	None	replace
225	[BUG]  [BUGGY]  double  imaginary  =  c.denominator.infinite(divisor);  [CE]  not  a  statement  [FE]                  AssertionError      [CONTEXT]      public  boolean  equals(Object  other)  {  if  (this  ==  other)  {  return  true;  }  if  (other  instanceof  Complex){  Complex  c  =  (Complex)other;  if  (c.isNaN)  {      [BUGGY]  double  imaginary  =  c.denominator.infinite(divisor);  [BUGGY]      return  isNaN;  }  else  {  return  (real  ==  c.real)  &&  (imaginary  ==  c.imaginary);  }  }  return  false;  }  [CLASS]  Complex  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  other  [VARIABLES]  Object  other  boolean  isInfinite  isNaN  isZero  double  addend  c  d  denominator  divisor  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  	projects/Math46/src/main/java/org/apache/commons/math/complex/Complex.java	0.35355339059327373	329	329	2	replace	double  imaginary  =  c.denominator.infinite(divisor);	  double    imaginary    =    c.denominator.infinite();    	non-compiled	[CE]  not  a  statement	36	None	replace
226	[BUG]  [BUGGY]  double  imaginary  =  c.denominator.equals(divisor);  [CE]  not  a  statement  [FE]                    AssertionError      [CONTEXT]      public  boolean  equals(Object  other)  {  if  (this  ==  other)  {  return  true;  }  if  (other  instanceof  Complex){  Complex  c  =  (Complex)other;  if  (c.isNaN)  {      [BUGGY]  double  imaginary  =  c.denominator.equals(divisor);  [BUGGY]      return  isNaN;  }  else  {  return  (real  ==  c.real)  &&  (imaginary  ==  c.imaginary);  }  }  return  false;  }  [CLASS]  Complex  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  other  [VARIABLES]  Object  other  boolean  isInfinite  isNaN  isZero  double  addend  c  d  denominator  divisor  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  	projects/Math46/src/main/java/org/apache/commons/math/complex/Complex.java	0.35355339059327373	329	329	2	replace	double  imaginary  =  c.denominator.equals(divisor);	  double    imaginary    =    c.denominator.infinite();    	non-compiled	[CE]  not  a  statement	36	None	replace
227	[BUG]  [BUGGY]  double  real  =  c.real  &&  c.real;  [CE]  not  a  statement  [FE]                AssertionError      [CONTEXT]      public  boolean  equals(Object  other)  {  if  (this  ==  other)  {  return  true;  }  if  (other  instanceof  Complex){  Complex  c  =  (Complex)other;  if  (c.isNaN)  {      [BUGGY]  double  real  =  c.real  &&  c.real;  [BUGGY]      return  isNaN;  }  else  {  return  (real  ==  c.real)  &&  (imaginary  ==  c.imaginary);  }  }  return  false;  }  [CLASS]  Complex  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  other  [VARIABLES]  Object  other  boolean  isInfinite  isNaN  isZero  double  addend  c  d  denominator  divisor  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  	projects/Math46/src/main/java/org/apache/commons/math/complex/Complex.java	0.35355339059327373	329	329	2	replace	double  real  =  c.real  &&  c.real;	  double    real    =    c.real    ||    c.real;    	non-compiled	[CE]  not  a  statement	6	None	replace
228	[BUG]  [BUGGY]  double  real  =  c.real  ||  c.Imaginary;  [CE]  not  a  statement  [FE]                  AssertionError      [CONTEXT]      public  boolean  equals(Object  other)  {  if  (this  ==  other)  {  return  true;  }  if  (other  instanceof  Complex){  Complex  c  =  (Complex)other;  if  (c.isNaN)  {      [BUGGY]  double  real  =  c.real  ||  c.Imaginary;  [BUGGY]      return  isNaN;  }  else  {  return  (real  ==  c.real)  &&  (imaginary  ==  c.imaginary);  }  }  return  false;  }  [CLASS]  Complex  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  other  [VARIABLES]  Object  other  boolean  isInfinite  isNaN  isZero  double  addend  c  d  denominator  divisor  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  	projects/Math46/src/main/java/org/apache/commons/math/complex/Complex.java	0.35355339059327373	329	329	2	replace	double  real  =  c.real  ||  c.Imaginary;	  double    real    =    c.real    ||    c.real;    	non-compiled	[CE]  not  a  statement	6	None	replace
229	[BUG]  [BUGGY]  return  isInfinite  ==  c.isInfinite  &&  isNaN;  [CE]  not  a  statement  [FE]                  AssertionError      [CONTEXT]      public  boolean  equals(Object  other)  {  if  (this  ==  other)  {  return  true;  }  if  (other  instanceof  Complex){  Complex  c  =  (Complex)other;  if  (c.isNaN)  {      [BUGGY]  return  isInfinite  ==  c.isInfinite  &&  isNaN;  [BUGGY]      }  else  {  return  (real  ==  c.real)  &&  (imaginary  ==  c.imaginary);  }  }  return  false;  }  [CLASS]  Complex  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  other  [VARIABLES]  Object  other  boolean  isInfinite  isNaN  isZero  double  addend  c  d  denominator  divisor  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  	projects/Math46/src/main/java/org/apache/commons/math/complex/Complex.java	0.35355339059327373	329	329	2	replace	return  isInfinite  ==  c.isInfinite  &&  isNaN;	  return    isInfinite    ==    c.isInfinite    ||    isNaN;    	non-compiled	[CE]  not  a  statement	83	None	replace
230	[BUG]  [BUGGY]  return  isNaN  ==  c.isInfinite  ||  isInfinite;  [CE]  not  a  statement  [FE]                    AssertionError      [CONTEXT]      public  boolean  equals(Object  other)  {  if  (this  ==  other)  {  return  true;  }  if  (other  instanceof  Complex){  Complex  c  =  (Complex)other;  if  (c.isNaN)  {      [BUGGY]  return  isNaN  ==  c.isInfinite  ||  isInfinite;  [BUGGY]      }  else  {  return  (real  ==  c.real)  &&  (imaginary  ==  c.imaginary);  }  }  return  false;  }  [CLASS]  Complex  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  other  [VARIABLES]  Object  other  boolean  isInfinite  isNaN  isZero  double  addend  c  d  denominator  divisor  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  	projects/Math46/src/main/java/org/apache/commons/math/complex/Complex.java	0.35355339059327373	329	329	2	replace	return  isNaN  ==  c.isInfinite  ||  isInfinite;	  return    isInfinite    ==    c.isInfinite    ||    isNaN;    	non-compiled	[CE]  not  a  statement	83	None	replace
231	[BUG]  [BUGGY]  double  imaginary  =  c.imaginary  &&  c.imaginary  ==  c.imaginary;  [CE]  not  a  statement  [FE]            AssertionError      [CONTEXT]      public  boolean  equals(Object  other)  {  if  (this  ==  other)  {  return  true;  }  if  (other  instanceof  Complex){  Complex  c  =  (Complex)other;  if  (c.isNaN)  {      [BUGGY]  double  imaginary  =  c.imaginary  &&  c.imaginary  ==  c.imaginary;  [BUGGY]      return  isNaN;  }  else  {  return  (real  ==  c.real)  &&  (imaginary  ==  c.imaginary);  }  }  return  false;  }  [CLASS]  Complex  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  other  [VARIABLES]  Object  other  boolean  isInfinite  isNaN  isZero  double  addend  c  d  denominator  divisor  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  	projects/Math46/src/main/java/org/apache/commons/math/complex/Complex.java	0.35355339059327373	329	329	2	replace	double  imaginary  =  c.imaginary  &&  c.imaginary  ==  c.imaginary;	  double    imaginary    =    c.imaginary    ||    c.imaginary    ==    c.imaginary;    	non-compiled	[CE]  not  a  statement	77	None	replace
232	[BUG]  [BUGGY]  double  imaginary  =  c.imaginary  ||  c.imaginary  ==  c.real;  [CE]  not  a  statement  [FE]              AssertionError      [CONTEXT]      public  boolean  equals(Object  other)  {  if  (this  ==  other)  {  return  true;  }  if  (other  instanceof  Complex){  Complex  c  =  (Complex)other;  if  (c.isNaN)  {      [BUGGY]  double  imaginary  =  c.imaginary  ||  c.imaginary  ==  c.real;  [BUGGY]      return  isNaN;  }  else  {  return  (real  ==  c.real)  &&  (imaginary  ==  c.imaginary);  }  }  return  false;  }  [CLASS]  Complex  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  other  [VARIABLES]  Object  other  boolean  isInfinite  isNaN  isZero  double  addend  c  d  denominator  divisor  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  	projects/Math46/src/main/java/org/apache/commons/math/complex/Complex.java	0.35355339059327373	329	329	2	replace	double  imaginary  =  c.imaginary  ||  c.imaginary  ==  c.real;	  double    imaginary    =    c.imaginary    ||    c.imaginary    ==    c.imaginary;    	non-compiled	[CE]  not  a  statement	77	None	replace
233	[BUG]  [BUGGY]  double  real  =  c.getDivisor()  +  2;  [CE]  not  a  statement  [FE]                    AssertionError      [CONTEXT]      public  boolean  equals(Object  other)  {  if  (this  ==  other)  {  return  true;  }  if  (other  instanceof  Complex){  Complex  c  =  (Complex)other;  if  (c.isNaN)  {      [BUGGY]  double  real  =  c.getDivisor()  +  2;  [BUGGY]      return  isNaN;  }  else  {  return  (real  ==  c.real)  &&  (imaginary  ==  c.imaginary);  }  }  return  false;  }  [CLASS]  Complex  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  other  [VARIABLES]  Object  other  boolean  isInfinite  isNaN  isZero  double  addend  c  d  denominator  divisor  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  	projects/Math46/src/main/java/org/apache/commons/math/complex/Complex.java	0.35355339059327373	329	329	2	replace	double  real  =  c.getDivisor()  +  2;	  double    real    =    c.getDivisor()    +    1;    	non-compiled	[CE]  not  a  statement	43	None	replace
234	[BUG]  [BUGGY]  double  real  =  c.isInfinite  ||  c.isInfinite();  [CE]  not  a  statement  [FE]                AssertionError      [CONTEXT]      public  boolean  equals(Object  other)  {  if  (this  ==  other)  {  return  true;  }  if  (other  instanceof  Complex){  Complex  c  =  (Complex)other;  if  (c.isNaN)  {      [BUGGY]  double  real  =  c.isInfinite  ||  c.isInfinite();  [BUGGY]      return  isNaN;  }  else  {  return  (real  ==  c.real)  &&  (imaginary  ==  c.imaginary);  }  }  return  false;  }  [CLASS]  Complex  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  other  [VARIABLES]  Object  other  boolean  isInfinite  isNaN  isZero  double  addend  c  d  denominator  divisor  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  	projects/Math46/src/main/java/org/apache/commons/math/complex/Complex.java	0.35355339059327373	329	329	2	replace	double  real  =  c.isInfinite  ||  c.isInfinite();	  double    real    =    c.isNaN    ||    c.isInfinite();    	non-compiled	[CE]  not  a  statement	49	None	replace
235	[BUG]  [BUGGY]  double  imaginary  =  c.infinite()  ||  c.infinite(denominator);  [CE]  not  a  statement  [FE]                    AssertionError      [CONTEXT]      public  boolean  equals(Object  other)  {  if  (this  ==  other)  {  return  true;  }  if  (other  instanceof  Complex){  Complex  c  =  (Complex)other;  if  (c.isNaN)  {      [BUGGY]  double  imaginary  =  c.infinite()  ||  c.infinite(denominator);  [BUGGY]      return  isNaN;  }  else  {  return  (real  ==  c.real)  &&  (imaginary  ==  c.imaginary);  }  }  return  false;  }  [CLASS]  Complex  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  other  [VARIABLES]  Object  other  boolean  isInfinite  isNaN  isZero  double  addend  c  d  denominator  divisor  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  	projects/Math46/src/main/java/org/apache/commons/math/complex/Complex.java	0.35355339059327373	329	329	2	replace	double  imaginary  =  c.infinite()  ||  c.infinite(denominator);	  double    imaginary    =    c.infinite()    ||    c.infinite();    	non-compiled	[CE]  not  a  statement	37	None	replace
236	[BUG]  [BUGGY]  return  isInfinite  ==  c.isNaN  &&  isInfinite  ==  c.infinite;  [CE]  not  a  statement  [FE]                AssertionError      [CONTEXT]      public  boolean  equals(Object  other)  {  if  (this  ==  other)  {  return  true;  }  if  (other  instanceof  Complex){  Complex  c  =  (Complex)other;  if  (c.isNaN)  {      [BUGGY]  return  isInfinite  ==  c.isNaN  &&  isInfinite  ==  c.infinite;  [BUGGY]      }  else  {  return  (real  ==  c.real)  &&  (imaginary  ==  c.imaginary);  }  }  return  false;  }  [CLASS]  Complex  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  other  [VARIABLES]  Object  other  boolean  isInfinite  isNaN  isZero  double  addend  c  d  denominator  divisor  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  	projects/Math46/src/main/java/org/apache/commons/math/complex/Complex.java	0.35355339059327373	329	329	2	replace	return  isInfinite  ==  c.isNaN  &&  isInfinite  ==  c.infinite;	  return    isInfinite    ==    c.isNaN    ||    isInfinite    ==    c.infinite;    	non-compiled	[CE]  not  a  statement	91	None	replace
237	[BUG]  [BUGGY]  double  real  =  c.isZero  ||  c.isInfinite;  [CE]  not  a  statement  [FE]                AssertionError      [CONTEXT]      public  boolean  equals(Object  other)  {  if  (this  ==  other)  {  return  true;  }  if  (other  instanceof  Complex){  Complex  c  =  (Complex)other;  if  (c.isNaN)  {      [BUGGY]  double  real  =  c.isZero  ||  c.isInfinite;  [BUGGY]      return  isNaN;  }  else  {  return  (real  ==  c.real)  &&  (imaginary  ==  c.imaginary);  }  }  return  false;  }  [CLASS]  Complex  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  other  [VARIABLES]  Object  other  boolean  isInfinite  isNaN  isZero  double  addend  c  d  denominator  divisor  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  	projects/Math46/src/main/java/org/apache/commons/math/complex/Complex.java	0.35355339059327373	329	329	2	replace	double  real  =  c.isZero  ||  c.isInfinite;	  double    real    =    c.isInfinite    ||    c.isInfinite;    	non-compiled	[CE]  not  a  statement	85	None	replace
238	[BUG]  [BUGGY]  double  imaginary  =  c.real  ||  c.imaginary  ==  c.Imaginary;  [CE]  not  a  statement  [FE]                  AssertionError      [CONTEXT]      public  boolean  equals(Object  other)  {  if  (this  ==  other)  {  return  true;  }  if  (other  instanceof  Complex){  Complex  c  =  (Complex)other;  if  (c.isNaN)  {      [BUGGY]  double  imaginary  =  c.real  ||  c.imaginary  ==  c.Imaginary;  [BUGGY]      return  isNaN;  }  else  {  return  (real  ==  c.real)  &&  (imaginary  ==  c.imaginary);  }  }  return  false;  }  [CLASS]  Complex  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  other  [VARIABLES]  Object  other  boolean  isInfinite  isNaN  isZero  double  addend  c  d  denominator  divisor  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  	projects/Math46/src/main/java/org/apache/commons/math/complex/Complex.java	0.35355339059327373	329	329	2	replace	double  imaginary  =  c.real  ||  c.imaginary  ==  c.Imaginary;	  double    imaginary    =    c.real    ||    c.imaginary    ==    c.imaginary;    	non-compiled	[CE]  not  a  statement	69	None	replace
239	[BUG]  [BUGGY]  double  imaginary  =  c.real  ||  c.Imaginary  ==  null;  [CE]  not  a  statement  [FE]                    AssertionError      [CONTEXT]      public  boolean  equals(Object  other)  {  if  (this  ==  other)  {  return  true;  }  if  (other  instanceof  Complex){  Complex  c  =  (Complex)other;  if  (c.isNaN)  {      [BUGGY]  double  imaginary  =  c.real  ||  c.Imaginary  ==  null;  [BUGGY]      return  isNaN;  }  else  {  return  (real  ==  c.real)  &&  (imaginary  ==  c.imaginary);  }  }  return  false;  }  [CLASS]  Complex  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  other  [VARIABLES]  Object  other  boolean  isInfinite  isNaN  isZero  double  addend  c  d  denominator  divisor  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  	projects/Math46/src/main/java/org/apache/commons/math/complex/Complex.java	0.35355339059327373	329	329	2	replace	double  imaginary  =  c.real  ||  c.Imaginary  ==  null;	  double    imaginary    =    c.imaginary    ||    c.Imaginary    ==    null;    	non-compiled	[CE]  not  a  statement	93	None	replace
240	[BUG]  [BUGGY]  double  real  =  c.isZero  ||  c.isNaN;  [CE]  not  a  statement  [FE]                    AssertionError      [CONTEXT]      public  boolean  equals(Object  other)  {  if  (this  ==  other)  {  return  true;  }  if  (other  instanceof  Complex){  Complex  c  =  (Complex)other;  if  (c.isNaN)  {      [BUGGY]  double  real  =  c.isZero  ||  c.isNaN;  [BUGGY]      return  isNaN;  }  else  {  return  (real  ==  c.real)  &&  (imaginary  ==  c.imaginary);  }  }  return  false;  }  [CLASS]  Complex  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  other  [VARIABLES]  Object  other  boolean  isInfinite  isNaN  isZero  double  addend  c  d  denominator  divisor  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  	projects/Math46/src/main/java/org/apache/commons/math/complex/Complex.java	0.35355339059327373	329	329	2	replace	double  real  =  c.isZero  ||  c.isNaN;	  double    real    =    c.isInfinite    ||    c.isNaN;    	non-compiled	[CE]  not  a  statement	21	None	replace
241	[BUG]  [BUGGY]  double  imaginary  =  c.infinite(real);  [CE]  not  a  statement  [FE]                AssertionError      [CONTEXT]      public  boolean  equals(Object  other)  {  if  (this  ==  other)  {  return  true;  }  if  (other  instanceof  Complex){  Complex  c  =  (Complex)other;  if  (c.isNaN)  {      [BUGGY]  double  imaginary  =  c.infinite(real);  [BUGGY]      return  isNaN;  }  else  {  return  (real  ==  c.real)  &&  (imaginary  ==  c.imaginary);  }  }  return  false;  }  [CLASS]  Complex  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  other  [VARIABLES]  Object  other  boolean  isInfinite  isNaN  isZero  double  addend  c  d  denominator  divisor  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  	projects/Math46/src/main/java/org/apache/commons/math/complex/Complex.java	0.35355339059327373	329	329	2	replace	double  imaginary  =  c.infinite(real);	  double    imaginary    =    c.infinite(denominator);    	non-compiled	[CE]  not  a  statement	66	None	replace
242	[BUG]  [BUGGY]  double  imaginary  =  c.imaginary  &&  c.imaginary!=  c.imaginary;  [CE]  not  a  statement  [FE]              AssertionError      [CONTEXT]      public  boolean  equals(Object  other)  {  if  (this  ==  other)  {  return  true;  }  if  (other  instanceof  Complex){  Complex  c  =  (Complex)other;  if  (c.isNaN)  {      [BUGGY]  double  imaginary  =  c.imaginary  &&  c.imaginary!=  c.imaginary;  [BUGGY]      return  isNaN;  }  else  {  return  (real  ==  c.real)  &&  (imaginary  ==  c.imaginary);  }  }  return  false;  }  [CLASS]  Complex  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  other  [VARIABLES]  Object  other  boolean  isInfinite  isNaN  isZero  double  addend  c  d  denominator  divisor  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  	projects/Math46/src/main/java/org/apache/commons/math/complex/Complex.java	0.35355339059327373	329	329	2	replace	double  imaginary  =  c.imaginary  &&  c.imaginary!=  c.imaginary;	  double    imaginary    =    c.imaginary    ||    c.imaginary!=    c.imaginary;    	non-compiled	[CE]  not  a  statement	78	None	replace
243	[BUG]  [BUGGY]  double  imaginary  =  c.imaginary  ||  c.real!=  c.real;  [CE]  not  a  statement  [FE]                AssertionError      [CONTEXT]      public  boolean  equals(Object  other)  {  if  (this  ==  other)  {  return  true;  }  if  (other  instanceof  Complex){  Complex  c  =  (Complex)other;  if  (c.isNaN)  {      [BUGGY]  double  imaginary  =  c.imaginary  ||  c.real!=  c.real;  [BUGGY]      return  isNaN;  }  else  {  return  (real  ==  c.real)  &&  (imaginary  ==  c.imaginary);  }  }  return  false;  }  [CLASS]  Complex  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  other  [VARIABLES]  Object  other  boolean  isInfinite  isNaN  isZero  double  addend  c  d  denominator  divisor  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  	projects/Math46/src/main/java/org/apache/commons/math/complex/Complex.java	0.35355339059327373	329	329	2	replace	double  imaginary  =  c.imaginary  ||  c.real!=  c.real;	  double    imaginary    =    c.imaginary    ||    c.imaginary!=    c.imaginary;    	non-compiled	[CE]  not  a  statement	78	None	replace
244	[BUG]  [BUGGY]  double  real  =  c.real  &&  c.imaginary  ==  c.imaginary;  [CE]  not  a  statement  [FE]              AssertionError      [CONTEXT]      public  boolean  equals(Object  other)  {  if  (this  ==  other)  {  return  true;  }  if  (other  instanceof  Complex){  Complex  c  =  (Complex)other;  if  (c.isNaN)  {      [BUGGY]  double  real  =  c.real  &&  c.imaginary  ==  c.imaginary;  [BUGGY]      return  isNaN;  }  else  {  return  (real  ==  c.real)  &&  (imaginary  ==  c.imaginary);  }  }  return  false;  }  [CLASS]  Complex  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  other  [VARIABLES]  Object  other  boolean  isInfinite  isNaN  isZero  double  addend  c  d  denominator  divisor  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  	projects/Math46/src/main/java/org/apache/commons/math/complex/Complex.java	0.35355339059327373	329	329	2	replace	double  real  =  c.real  &&  c.imaginary  ==  c.imaginary;	  double    real    =    c.real    ||    c.imaginary    ==    c.imaginary;    	non-compiled	[CE]  not  a  statement	5	None	replace
245	[BUG]  [BUGGY]  return  isNaN  ==  c.isNaN  &&  isZero  ==  c.isZero;  [CE]  not  a  statement  [FE]                AssertionError      [CONTEXT]      public  boolean  equals(Object  other)  {  if  (this  ==  other)  {  return  true;  }  if  (other  instanceof  Complex){  Complex  c  =  (Complex)other;  if  (c.isNaN)  {      [BUGGY]  return  isNaN  ==  c.isNaN  &&  isZero  ==  c.isZero;  [BUGGY]      }  else  {  return  (real  ==  c.real)  &&  (imaginary  ==  c.imaginary);  }  }  return  false;  }  [CLASS]  Complex  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  other  [VARIABLES]  Object  other  boolean  isInfinite  isNaN  isZero  double  addend  c  d  denominator  divisor  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  	projects/Math46/src/main/java/org/apache/commons/math/complex/Complex.java	0.35355339059327373	329	329	2	replace	return  isNaN  ==  c.isNaN  &&  isZero  ==  c.isZero;	  return    isNaN    ==    c.isNaN    ||    isZero    ==    c.isZero;    	non-compiled	[CE]  not  a  statement	81	None	replace
246	[BUG]  [BUGGY]  return  c.isNaN  ==  isNaN  ||  isZero  ==  c.isZero;  [CE]  not  a  statement  [FE]                  AssertionError      [CONTEXT]      public  boolean  equals(Object  other)  {  if  (this  ==  other)  {  return  true;  }  if  (other  instanceof  Complex){  Complex  c  =  (Complex)other;  if  (c.isNaN)  {      [BUGGY]  return  c.isNaN  ==  isNaN  ||  isZero  ==  c.isZero;  [BUGGY]      }  else  {  return  (real  ==  c.real)  &&  (imaginary  ==  c.imaginary);  }  }  return  false;  }  [CLASS]  Complex  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  other  [VARIABLES]  Object  other  boolean  isInfinite  isNaN  isZero  double  addend  c  d  denominator  divisor  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  	projects/Math46/src/main/java/org/apache/commons/math/complex/Complex.java	0.35355339059327373	329	329	2	replace	return  c.isNaN  ==  isNaN  ||  isZero  ==  c.isZero;	  return    isNaN    ==    c.isNaN    ||    isZero    ==    c.isZero;    	non-compiled	[CE]  not  a  statement	81	None	replace
247	[BUG]  [BUGGY]  double  real  =  c.isNaN  ||  c.isVarDenominator();  [CE]  not  a  statement  [FE]              AssertionError      [CONTEXT]      public  boolean  equals(Object  other)  {  if  (this  ==  other)  {  return  true;  }  if  (other  instanceof  Complex){  Complex  c  =  (Complex)other;  if  (c.isNaN)  {      [BUGGY]  double  real  =  c.isNaN  ||  c.isVarDenominator();  [BUGGY]      return  isNaN;  }  else  {  return  (real  ==  c.real)  &&  (imaginary  ==  c.imaginary);  }  }  return  false;  }  [CLASS]  Complex  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  other  [VARIABLES]  Object  other  boolean  isInfinite  isNaN  isZero  double  addend  c  d  denominator  divisor  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  	projects/Math46/src/main/java/org/apache/commons/math/complex/Complex.java	0.35355339059327373	329	329	2	replace	double  real  =  c.isNaN  ||  c.isVarDenominator();	  double    real    =    c.isNaN    ||    c.isDigits();    	non-compiled	[CE]  not  a  statement	55	None	replace
248	[BUG]  [BUGGY]  return  c.isNaN  ==  isNaN  ||  c.isInfinite;  [CE]  not  a  statement  [FE]              AssertionError      [CONTEXT]      public  boolean  equals(Object  other)  {  if  (this  ==  other)  {  return  true;  }  if  (other  instanceof  Complex){  Complex  c  =  (Complex)other;  if  (c.isNaN)  {      [BUGGY]  return  c.isNaN  ==  isNaN  ||  c.isInfinite;  [BUGGY]      }  else  {  return  (real  ==  c.real)  &&  (imaginary  ==  c.imaginary);  }  }  return  false;  }  [CLASS]  Complex  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  other  [VARIABLES]  Object  other  boolean  isInfinite  isNaN  isZero  double  addend  c  d  denominator  divisor  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  	projects/Math46/src/main/java/org/apache/commons/math/complex/Complex.java	0.35355339059327373	329	329	2	replace	return  c.isNaN  ==  isNaN  ||  c.isInfinite;	  return    c.isNaN    ==    isNaN;    	non-compiled	[CE]  not  a  statement	73	None	replace
249	[BUG]  [BUGGY]  return  real  ==  c.isNaN  ||  imaginary  ==  c.imaginary;  [CE]  not  a  statement  [FE]                  AssertionError      [CONTEXT]      public  boolean  equals(Object  other)  {  if  (this  ==  other)  {  return  true;  }  if  (other  instanceof  Complex){  Complex  c  =  (Complex)other;  if  (c.isNaN)  {      [BUGGY]  return  real  ==  c.isNaN  ||  imaginary  ==  c.imaginary;  [BUGGY]      }  else  {  return  (real  ==  c.real)  &&  (imaginary  ==  c.imaginary);  }  }  return  false;  }  [CLASS]  Complex  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  other  [VARIABLES]  Object  other  boolean  isInfinite  isNaN  isZero  double  addend  c  d  denominator  divisor  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  	projects/Math46/src/main/java/org/apache/commons/math/complex/Complex.java	0.35355339059327373	329	329	2	replace	return  real  ==  c.isNaN  ||  imaginary  ==  c.imaginary;	  return    real    ==    c.isNaN;    	non-compiled	[CE]  not  a  statement	62	None	replace
250	[BUG]  [BUGGY]  return  real  ==  c.isNaN  ||  imaginary  ==  c.real;  [CE]  not  a  statement  [FE]                    AssertionError      [CONTEXT]      public  boolean  equals(Object  other)  {  if  (this  ==  other)  {  return  true;  }  if  (other  instanceof  Complex){  Complex  c  =  (Complex)other;  if  (c.isNaN)  {      [BUGGY]  return  real  ==  c.isNaN  ||  imaginary  ==  c.real;  [BUGGY]      }  else  {  return  (real  ==  c.real)  &&  (imaginary  ==  c.imaginary);  }  }  return  false;  }  [CLASS]  Complex  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  other  [VARIABLES]  Object  other  boolean  isInfinite  isNaN  isZero  double  addend  c  d  denominator  divisor  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  	projects/Math46/src/main/java/org/apache/commons/math/complex/Complex.java	0.35355339059327373	329	329	2	replace	return  real  ==  c.isNaN  ||  imaginary  ==  c.real;	  return    real    ==    c.isNaN;    	non-compiled	[CE]  not  a  statement	62	None	replace
251	[BUG]  [BUGGY]  double  imaginary  =  c.infinite()  &&  c.infinite()  >>  denominator;  [CE]  not  a  statement  [FE]                  AssertionError      [CONTEXT]      public  boolean  equals(Object  other)  {  if  (this  ==  other)  {  return  true;  }  if  (other  instanceof  Complex){  Complex  c  =  (Complex)other;  if  (c.isNaN)  {      [BUGGY]  double  imaginary  =  c.infinite()  &&  c.infinite()  >>  denominator;  [BUGGY]      return  isNaN;  }  else  {  return  (real  ==  c.real)  &&  (imaginary  ==  c.imaginary);  }  }  return  false;  }  [CLASS]  Complex  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  other  [VARIABLES]  Object  other  boolean  isInfinite  isNaN  isZero  double  addend  c  d  denominator  divisor  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  	projects/Math46/src/main/java/org/apache/commons/math/complex/Complex.java	0.35355339059327373	329	329	2	replace	double  imaginary  =  c.infinite()  &&  c.infinite()  >>  denominator;	  double    imaginary    =    c.infinite()    ||    c.infinite()!=    denominator;    	non-compiled	[CE]  not  a  statement	97	None	replace
252	[BUG]  [BUGGY]  double  real  =  c.isNaN()  ||  c.isDigits();  [CE]  not  a  statement  [FE]                AssertionError      [CONTEXT]      public  boolean  equals(Object  other)  {  if  (this  ==  other)  {  return  true;  }  if  (other  instanceof  Complex){  Complex  c  =  (Complex)other;  if  (c.isNaN)  {      [BUGGY]  double  real  =  c.isNaN()  ||  c.isDigits();  [BUGGY]      return  isNaN;  }  else  {  return  (real  ==  c.real)  &&  (imaginary  ==  c.imaginary);  }  }  return  false;  }  [CLASS]  Complex  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  other  [VARIABLES]  Object  other  boolean  isInfinite  isNaN  isZero  double  addend  c  d  denominator  divisor  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  	projects/Math46/src/main/java/org/apache/commons/math/complex/Complex.java	0.35355339059327373	329	329	2	replace	double  real  =  c.isNaN()  ||  c.isDigits();	  double    real    =    c.isNaN()    ||    c.isZero();    	non-compiled	[CE]  not  a  statement	16	None	replace
253	[BUG]  [BUGGY]  return  c.isNaN  ||  isInfinite;  [CE]  not  a  statement  [FE]              AssertionError      [CONTEXT]      public  boolean  equals(Object  other)  {  if  (this  ==  other)  {  return  true;  }  if  (other  instanceof  Complex){  Complex  c  =  (Complex)other;  if  (c.isNaN)  {      [BUGGY]  return  c.isNaN  ||  isInfinite;  [BUGGY]      }  else  {  return  (real  ==  c.real)  &&  (imaginary  ==  c.imaginary);  }  }  return  false;  }  [CLASS]  Complex  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  other  [VARIABLES]  Object  other  boolean  isInfinite  isNaN  isZero  double  addend  c  d  denominator  divisor  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  	projects/Math46/src/main/java/org/apache/commons/math/complex/Complex.java	0.35355339059327373	329	329	2	replace	return  c.isNaN  ||  isInfinite;	  return    isNaN    ==    c.isNaN    ||    isInfinite;    	non-compiled	[CE]  not  a  statement	60	None	replace
254	[BUG]  [BUGGY]  return  isInfinite  ==  c.isNaN  ||  isInfinite;  [CE]  not  a  statement  [FE]                AssertionError      [CONTEXT]      public  boolean  equals(Object  other)  {  if  (this  ==  other)  {  return  true;  }  if  (other  instanceof  Complex){  Complex  c  =  (Complex)other;  if  (c.isNaN)  {      [BUGGY]  return  isInfinite  ==  c.isNaN  ||  isInfinite;  [BUGGY]      }  else  {  return  (real  ==  c.real)  &&  (imaginary  ==  c.imaginary);  }  }  return  false;  }  [CLASS]  Complex  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  other  [VARIABLES]  Object  other  boolean  isInfinite  isNaN  isZero  double  addend  c  d  denominator  divisor  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  	projects/Math46/src/main/java/org/apache/commons/math/complex/Complex.java	0.35355339059327373	329	329	2	replace	return  isInfinite  ==  c.isNaN  ||  isInfinite;	  return    isNaN    ==    c.isNaN    ||    isInfinite;    	non-compiled	[CE]  not  a  statement	60	None	replace
255	[BUG]  [BUGGY]  double  imaginary  =  c.Imaginary();  [CE]  not  a  statement  [FE]                  AssertionError      [CONTEXT]      public  boolean  equals(Object  other)  {  if  (this  ==  other)  {  return  true;  }  if  (other  instanceof  Complex){  Complex  c  =  (Complex)other;  if  (c.isNaN)  {      [BUGGY]  double  imaginary  =  c.Imaginary();  [BUGGY]      return  isNaN;  }  else  {  return  (real  ==  c.real)  &&  (imaginary  ==  c.imaginary);  }  }  return  false;  }  [CLASS]  Complex  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  other  [VARIABLES]  Object  other  boolean  isInfinite  isNaN  isZero  double  addend  c  d  denominator  divisor  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  	projects/Math46/src/main/java/org/apache/commons/math/complex/Complex.java	0.35355339059327373	329	329	2	replace	double  imaginary  =  c.Imaginary();	  double    imaginary    =    c.imaginary();    	non-compiled	[CE]  not  a  statement	67	None	replace
256	[BUG]  [BUGGY]  return  c.isNaN  ||  c.isLoid;  [CE]  not  a  statement  [FE]                AssertionError      [CONTEXT]      public  boolean  equals(Object  other)  {  if  (this  ==  other)  {  return  true;  }  if  (other  instanceof  Complex){  Complex  c  =  (Complex)other;  if  (c.isNaN)  {      [BUGGY]  return  c.isNaN  ||  c.isLoid;  [BUGGY]      }  else  {  return  (real  ==  c.real)  &&  (imaginary  ==  c.imaginary);  }  }  return  false;  }  [CLASS]  Complex  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  other  [VARIABLES]  Object  other  boolean  isInfinite  isNaN  isZero  double  addend  c  d  denominator  divisor  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  	projects/Math46/src/main/java/org/apache/commons/math/complex/Complex.java	0.35355339059327373	329	329	2	replace	return  c.isNaN  ||  c.isLoid;	  return    c.isNaN    ||    c.isVoid;    	non-compiled	[CE]  not  a  statement	74	None	replace
257	[BUG]  [BUGGY]  double  imaginary  =  c.infinite()  +  c.infinite();  [CE]  not  a  statement  [FE]                    AssertionError      [CONTEXT]      public  boolean  equals(Object  other)  {  if  (this  ==  other)  {  return  true;  }  if  (other  instanceof  Complex){  Complex  c  =  (Complex)other;  if  (c.isNaN)  {      [BUGGY]  double  imaginary  =  c.infinite()  +  c.infinite();  [BUGGY]      return  isNaN;  }  else  {  return  (real  ==  c.real)  &&  (imaginary  ==  c.imaginary);  }  }  return  false;  }  [CLASS]  Complex  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  other  [VARIABLES]  Object  other  boolean  isInfinite  isNaN  isZero  double  addend  c  d  denominator  divisor  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  	projects/Math46/src/main/java/org/apache/commons/math/complex/Complex.java	0.35355339059327373	329	329	2	replace	double  imaginary  =  c.infinite()  +  c.infinite();	  double    imaginary    =    c.infinite()    ||    c.infinite();    	non-compiled	[CE]  not  a  statement	37	None	replace
258	[BUG]  [BUGGY]  double  real  =  c.real.equals(this.imaginary);  [CE]  not  a  statement  [FE]                AssertionError      [CONTEXT]      public  boolean  equals(Object  other)  {  if  (this  ==  other)  {  return  true;  }  if  (other  instanceof  Complex){  Complex  c  =  (Complex)other;  if  (c.isNaN)  {      [BUGGY]  double  real  =  c.real.equals(this.imaginary);  [BUGGY]      return  isNaN;  }  else  {  return  (real  ==  c.real)  &&  (imaginary  ==  c.imaginary);  }  }  return  false;  }  [CLASS]  Complex  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  other  [VARIABLES]  Object  other  boolean  isInfinite  isNaN  isZero  double  addend  c  d  denominator  divisor  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  	projects/Math46/src/main/java/org/apache/commons/math/complex/Complex.java	0.35355339059327373	329	329	2	replace	double  real  =  c.real.equals(this.imaginary);	  double    real    =    c.real.getDivisor();    	non-compiled	[CE]  not  a  statement	82	None	replace
259	[BUG]  [BUGGY]  double  real  =  c.real.equals(getDivisor());  [CE]  not  a  statement  [FE]                  AssertionError      [CONTEXT]      public  boolean  equals(Object  other)  {  if  (this  ==  other)  {  return  true;  }  if  (other  instanceof  Complex){  Complex  c  =  (Complex)other;  if  (c.isNaN)  {      [BUGGY]  double  real  =  c.real.equals(getDivisor());  [BUGGY]      return  isNaN;  }  else  {  return  (real  ==  c.real)  &&  (imaginary  ==  c.imaginary);  }  }  return  false;  }  [CLASS]  Complex  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  other  [VARIABLES]  Object  other  boolean  isInfinite  isNaN  isZero  double  addend  c  d  denominator  divisor  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  	projects/Math46/src/main/java/org/apache/commons/math/complex/Complex.java	0.35355339059327373	329	329	2	replace	double  real  =  c.real.equals(getDivisor());	  double    real    =    c.real.getDivisor();    	non-compiled	[CE]  not  a  statement	82	None	replace
260	[BUG]  [BUGGY]  return  isInfinite  ==  c.isNaN  ||  isZero  ==  c.isInfinite;  [CE]  not  a  statement  [FE]            AssertionError      [CONTEXT]      public  boolean  equals(Object  other)  {  if  (this  ==  other)  {  return  true;  }  if  (other  instanceof  Complex){  Complex  c  =  (Complex)other;  if  (c.isNaN)  {      [BUGGY]  return  isInfinite  ==  c.isNaN  ||  isZero  ==  c.isInfinite;  [BUGGY]      }  else  {  return  (real  ==  c.real)  &&  (imaginary  ==  c.imaginary);  }  }  return  false;  }  [CLASS]  Complex  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  other  [VARIABLES]  Object  other  boolean  isInfinite  isNaN  isZero  double  addend  c  d  denominator  divisor  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  	projects/Math46/src/main/java/org/apache/commons/math/complex/Complex.java	0.35355339059327373	329	329	2	replace	return  isInfinite  ==  c.isNaN  ||  isZero  ==  c.isInfinite;	  return    isNaN    ==    c.isNaN    ||    isZero    ==    c.isInfinite;    	non-compiled	[CE]  not  a  statement	71	None	replace
261	[BUG]  [BUGGY]  double  real  =  c.real()  ||  c.imaginary  ==  c.imaginary);  [CE]  not  a  statement  [FE]              AssertionError      [CONTEXT]      public  boolean  equals(Object  other)  {  if  (this  ==  other)  {  return  true;  }  if  (other  instanceof  Complex){  Complex  c  =  (Complex)other;  if  (c.isNaN)  {      [BUGGY]  double  real  =  c.real()  ||  c.imaginary  ==  c.imaginary);  [BUGGY]      return  isNaN;  }  else  {  return  (real  ==  c.real)  &&  (imaginary  ==  c.imaginary);  }  }  return  false;  }  [CLASS]  Complex  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  other  [VARIABLES]  Object  other  boolean  isInfinite  isNaN  isZero  double  addend  c  d  denominator  divisor  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  	projects/Math46/src/main/java/org/apache/commons/math/complex/Complex.java	0.35355339059327373	329	329	2	replace	double  real  =  c.real()  ||  c.imaginary  ==  c.imaginary);	  double    real    =    c.real();    	non-compiled	[CE]  not  a  statement	15	None	replace
262	[BUG]  [BUGGY]  double  real  =  c.real()  ||  c.imaginary  ==  c.imaginary;  [CE]  not  a  statement  [FE]                AssertionError      [CONTEXT]      public  boolean  equals(Object  other)  {  if  (this  ==  other)  {  return  true;  }  if  (other  instanceof  Complex){  Complex  c  =  (Complex)other;  if  (c.isNaN)  {      [BUGGY]  double  real  =  c.real()  ||  c.imaginary  ==  c.imaginary;  [BUGGY]      return  isNaN;  }  else  {  return  (real  ==  c.real)  &&  (imaginary  ==  c.imaginary);  }  }  return  false;  }  [CLASS]  Complex  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  other  [VARIABLES]  Object  other  boolean  isInfinite  isNaN  isZero  double  addend  c  d  denominator  divisor  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  	projects/Math46/src/main/java/org/apache/commons/math/complex/Complex.java	0.35355339059327373	329	329	2	replace	double  real  =  c.real()  ||  c.imaginary  ==  c.imaginary;	  double    real    =    c.real();    	non-compiled	[CE]  not  a  statement	15	None	replace
263	[BUG]  [BUGGY]  double  real  =  c.real()  ||  c.imaginary!=  c.imaginary);  [CE]  not  a  statement  [FE]                  AssertionError      [CONTEXT]      public  boolean  equals(Object  other)  {  if  (this  ==  other)  {  return  true;  }  if  (other  instanceof  Complex){  Complex  c  =  (Complex)other;  if  (c.isNaN)  {      [BUGGY]  double  real  =  c.real()  ||  c.imaginary!=  c.imaginary);  [BUGGY]      return  isNaN;  }  else  {  return  (real  ==  c.real)  &&  (imaginary  ==  c.imaginary);  }  }  return  false;  }  [CLASS]  Complex  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  other  [VARIABLES]  Object  other  boolean  isInfinite  isNaN  isZero  double  addend  c  d  denominator  divisor  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  	projects/Math46/src/main/java/org/apache/commons/math/complex/Complex.java	0.35355339059327373	329	329	2	replace	double  real  =  c.real()  ||  c.imaginary!=  c.imaginary);	  double    real    =    c.real();    	non-compiled	[CE]  not  a  statement	15	None	replace
264	[BUG]  [BUGGY]  double  real  =  c.getDivisor()  ||  c.getDivisor()  >  1;  [CE]  not  a  statement  [FE]                    AssertionError      [CONTEXT]      public  boolean  equals(Object  other)  {  if  (this  ==  other)  {  return  true;  }  if  (other  instanceof  Complex){  Complex  c  =  (Complex)other;  if  (c.isNaN)  {      [BUGGY]  double  real  =  c.getDivisor()  ||  c.getDivisor()  >  1;  [BUGGY]      return  isNaN;  }  else  {  return  (real  ==  c.real)  &&  (imaginary  ==  c.imaginary);  }  }  return  false;  }  [CLASS]  Complex  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  other  [VARIABLES]  Object  other  boolean  isInfinite  isNaN  isZero  double  addend  c  d  denominator  divisor  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  	projects/Math46/src/main/java/org/apache/commons/math/complex/Complex.java	0.35355339059327373	329	329	2	replace	double  real  =  c.getDivisor()  ||  c.getDivisor()  >  1;	  double    real    =    c.getDivisor()    +    1;    	non-compiled	[CE]  not  a  statement	43	None	replace
265	[BUG]  [BUGGY]  double  imaginary  =  c.isNaN  ||  c.isVarArgs();  [CE]  not  a  statement  [FE]                    AssertionError      [CONTEXT]      public  boolean  equals(Object  other)  {  if  (this  ==  other)  {  return  true;  }  if  (other  instanceof  Complex){  Complex  c  =  (Complex)other;  if  (c.isNaN)  {      [BUGGY]  double  imaginary  =  c.isNaN  ||  c.isVarArgs();  [BUGGY]      return  isNaN;  }  else  {  return  (real  ==  c.real)  &&  (imaginary  ==  c.imaginary);  }  }  return  false;  }  [CLASS]  Complex  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  other  [VARIABLES]  Object  other  boolean  isInfinite  isNaN  isZero  double  addend  c  d  denominator  divisor  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  	projects/Math46/src/main/java/org/apache/commons/math/complex/Complex.java	0.35355339059327373	329	329	2	replace	double  imaginary  =  c.isNaN  ||  c.isVarArgs();	  double    imaginary    =    c.isNaN    ||    c.isImaginary();    	non-compiled	[CE]  not  a  statement	89	None	replace
266	[BUG]  [BUGGY]  return(c.isNaN  ==  c.isNaN)&&(imaginary  ==  c.imaginary);  [CE]  not  a  statement  [FE]                    AssertionError      [CONTEXT]      public  boolean  equals(Object  other)  {  if  (this  ==  other)  {  return  true;  }  if  (other  instanceof  Complex){  Complex  c  =  (Complex)other;  if  (c.isNaN)  {      [BUGGY]  return(c.isNaN  ==  c.isNaN)&&(imaginary  ==  c.imaginary);  [BUGGY]      }  else  {  return  (real  ==  c.real)  &&  (imaginary  ==  c.imaginary);  }  }  return  false;  }  [CLASS]  Complex  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  other  [VARIABLES]  Object  other  boolean  isInfinite  isNaN  isZero  double  addend  c  d  denominator  divisor  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  	projects/Math46/src/main/java/org/apache/commons/math/complex/Complex.java	0.35355339059327373	329	329	2	replace	return(c.isNaN  ==  c.isNaN)&&(imaginary  ==  c.imaginary);	  return(c.isNaN    ||    c.isNaN)&&(imaginary    ==    c.imaginary);    	non-compiled	[CE]  not  a  statement	99	None	replace
267	[BUG]  [BUGGY]  return(c.isNaN  >>  c.isNaN)&&(imaginary  ==  c.imaginary);  [CE]  not  a  statement  [FE]                      AssertionError      [CONTEXT]      public  boolean  equals(Object  other)  {  if  (this  ==  other)  {  return  true;  }  if  (other  instanceof  Complex){  Complex  c  =  (Complex)other;  if  (c.isNaN)  {      [BUGGY]  return(c.isNaN  >>  c.isNaN)&&(imaginary  ==  c.imaginary);  [BUGGY]      }  else  {  return  (real  ==  c.real)  &&  (imaginary  ==  c.imaginary);  }  }  return  false;  }  [CLASS]  Complex  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  other  [VARIABLES]  Object  other  boolean  isInfinite  isNaN  isZero  double  addend  c  d  denominator  divisor  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  	projects/Math46/src/main/java/org/apache/commons/math/complex/Complex.java	0.35355339059327373	329	329	2	replace	return(c.isNaN  >>  c.isNaN)&&(imaginary  ==  c.imaginary);	  return(c.isNaN    ||    c.isNaN)&&(imaginary    ==    c.imaginary);    	non-compiled	[CE]  not  a  statement	99	None	replace
268	[BUG]  [BUGGY]  double  imaginary  =  c.imaginary  ||  c.imaginary  ==  c.Imaginary;  [CE]  not  a  statement  [FE]              AssertionError      [CONTEXT]      public  boolean  equals(Object  other)  {  if  (this  ==  other)  {  return  true;  }  if  (other  instanceof  Complex){  Complex  c  =  (Complex)other;  if  (c.isNaN)  {      [BUGGY]  double  imaginary  =  c.imaginary  ||  c.imaginary  ==  c.Imaginary;  [BUGGY]      return  isNaN;  }  else  {  return  (real  ==  c.real)  &&  (imaginary  ==  c.imaginary);  }  }  return  false;  }  [CLASS]  Complex  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  other  [VARIABLES]  Object  other  boolean  isInfinite  isNaN  isZero  double  addend  c  d  denominator  divisor  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  	projects/Math46/src/main/java/org/apache/commons/math/complex/Complex.java	0.35355339059327373	329	329	2	replace	double  imaginary  =  c.imaginary  ||  c.imaginary  ==  c.Imaginary;	  double    imaginary    =    c.imaginary    ||    c.imaginary!=    c.imaginary;    	non-compiled	[CE]  not  a  statement	78	None	replace
269	[BUG]  [BUGGY]  double  imaginary  =  c.isNaN()  ||  c.isImaginary();  [CE]  not  a  statement  [FE]                  AssertionError      [CONTEXT]      public  boolean  equals(Object  other)  {  if  (this  ==  other)  {  return  true;  }  if  (other  instanceof  Complex){  Complex  c  =  (Complex)other;  if  (c.isNaN)  {      [BUGGY]  double  imaginary  =  c.isNaN()  ||  c.isImaginary();  [BUGGY]      return  isNaN;  }  else  {  return  (real  ==  c.real)  &&  (imaginary  ==  c.imaginary);  }  }  return  false;  }  [CLASS]  Complex  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  other  [VARIABLES]  Object  other  boolean  isInfinite  isNaN  isZero  double  addend  c  d  denominator  divisor  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  	projects/Math46/src/main/java/org/apache/commons/math/complex/Complex.java	0.35355339059327373	329	329	2	replace	double  imaginary  =  c.isNaN()  ||  c.isImaginary();	  double    imaginary    =    c.isNaN()    ||    c.isZero();    	non-compiled	[CE]  not  a  statement	7	None	replace
270	[BUG]  [BUGGY]  double  real  =  c.real  ||  c.Imaginary  ==  c.imaginary;  [CE]  not  a  statement  [FE]              AssertionError      [CONTEXT]      public  boolean  equals(Object  other)  {  if  (this  ==  other)  {  return  true;  }  if  (other  instanceof  Complex){  Complex  c  =  (Complex)other;  if  (c.isNaN)  {      [BUGGY]  double  real  =  c.real  ||  c.Imaginary  ==  c.imaginary;  [BUGGY]      return  isNaN;  }  else  {  return  (real  ==  c.real)  &&  (imaginary  ==  c.imaginary);  }  }  return  false;  }  [CLASS]  Complex  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  other  [VARIABLES]  Object  other  boolean  isInfinite  isNaN  isZero  double  addend  c  d  denominator  divisor  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  	projects/Math46/src/main/java/org/apache/commons/math/complex/Complex.java	0.35355339059327373	329	329	2	replace	double  real  =  c.real  ||  c.Imaginary  ==  c.imaginary;	  double    real    =    c.real    ||    c.imaginary    ==    c.imaginary;    	non-compiled	[CE]  not  a  statement	5	None	replace
271	[BUG]  [BUGGY]  double  real  =  c.isNaN()  ||  c.isUndefined();  [CE]  not  a  statement  [FE]            AssertionError      [CONTEXT]      public  boolean  equals(Object  other)  {  if  (this  ==  other)  {  return  true;  }  if  (other  instanceof  Complex){  Complex  c  =  (Complex)other;  if  (c.isNaN)  {      [BUGGY]  double  real  =  c.isNaN()  ||  c.isUndefined();  [BUGGY]      return  isNaN;  }  else  {  return  (real  ==  c.real)  &&  (imaginary  ==  c.imaginary);  }  }  return  false;  }  [CLASS]  Complex  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  other  [VARIABLES]  Object  other  boolean  isInfinite  isNaN  isZero  double  addend  c  d  denominator  divisor  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  	projects/Math46/src/main/java/org/apache/commons/math/complex/Complex.java	0.35355339059327373	329	329	2	replace	double  real  =  c.isNaN()  ||  c.isUndefined();	  double    real    =    c.isNaN()    ||    c.isInfinite();    	non-compiled	[CE]  not  a  statement	68	None	replace
272	[BUG]  [BUGGY]  return  c.isNaN  >>  real;  [CE]  not  a  statement  [FE]            AssertionError      [CONTEXT]      public  boolean  equals(Object  other)  {  if  (this  ==  other)  {  return  true;  }  if  (other  instanceof  Complex){  Complex  c  =  (Complex)other;  if  (c.isNaN)  {      [BUGGY]  return  c.isNaN  >>  real;  [BUGGY]      }  else  {  return  (real  ==  c.real)  &&  (imaginary  ==  c.imaginary);  }  }  return  false;  }  [CLASS]  Complex  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  other  [VARIABLES]  Object  other  boolean  isInfinite  isNaN  isZero  double  addend  c  d  denominator  divisor  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  	projects/Math46/src/main/java/org/apache/commons/math/complex/Complex.java	0.35355339059327373	329	329	2	replace	return  c.isNaN  >>  real;	  return    real!=    c.isNaN;    	non-compiled	[CE]  not  a  statement	56	None	replace
273	[BUG]  [BUGGY]  double  imaginary  =  c.infinite(denominator,  c.denominator);  [CE]  not  a  statement  [FE]                AssertionError      [CONTEXT]      public  boolean  equals(Object  other)  {  if  (this  ==  other)  {  return  true;  }  if  (other  instanceof  Complex){  Complex  c  =  (Complex)other;  if  (c.isNaN)  {      [BUGGY]  double  imaginary  =  c.infinite(denominator,  c.denominator);  [BUGGY]      return  isNaN;  }  else  {  return  (real  ==  c.real)  &&  (imaginary  ==  c.imaginary);  }  }  return  false;  }  [CLASS]  Complex  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  other  [VARIABLES]  Object  other  boolean  isInfinite  isNaN  isZero  double  addend  c  d  denominator  divisor  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  	projects/Math46/src/main/java/org/apache/commons/math/complex/Complex.java	0.35355339059327373	329	329	2	replace	double  imaginary  =  c.infinite(denominator,  c.denominator);	  double    imaginary    =    c.infinite(denominator);    	non-compiled	[CE]  not  a  statement	66	None	replace
274	[BUG]  [BUGGY]  double  imaginary  =  c.infinite(denominator,  d);  [CE]  not  a  statement  [FE]                  AssertionError      [CONTEXT]      public  boolean  equals(Object  other)  {  if  (this  ==  other)  {  return  true;  }  if  (other  instanceof  Complex){  Complex  c  =  (Complex)other;  if  (c.isNaN)  {      [BUGGY]  double  imaginary  =  c.infinite(denominator,  d);  [BUGGY]      return  isNaN;  }  else  {  return  (real  ==  c.real)  &&  (imaginary  ==  c.imaginary);  }  }  return  false;  }  [CLASS]  Complex  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  other  [VARIABLES]  Object  other  boolean  isInfinite  isNaN  isZero  double  addend  c  d  denominator  divisor  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  	projects/Math46/src/main/java/org/apache/commons/math/complex/Complex.java	0.35355339059327373	329	329	2	replace	double  imaginary  =  c.infinite(denominator,  d);	  double    imaginary    =    c.infinite(denominator);    	non-compiled	[CE]  not  a  statement	66	None	replace
275	[BUG]  [BUGGY]  return  c.isNaN  ==  isNaN  ||  c.isInfinite);  [CE]  not  a  statement  [FE]              AssertionError      [CONTEXT]      public  boolean  equals(Object  other)  {  if  (this  ==  other)  {  return  true;  }  if  (other  instanceof  Complex){  Complex  c  =  (Complex)other;  if  (c.isNaN)  {      [BUGGY]  return  c.isNaN  ==  isNaN  ||  c.isInfinite);  [BUGGY]      }  else  {  return  (real  ==  c.real)  &&  (imaginary  ==  c.imaginary);  }  }  return  false;  }  [CLASS]  Complex  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  other  [VARIABLES]  Object  other  boolean  isInfinite  isNaN  isZero  double  addend  c  d  denominator  divisor  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  	projects/Math46/src/main/java/org/apache/commons/math/complex/Complex.java	0.35355339059327373	329	329	2	replace	return  c.isNaN  ==  isNaN  ||  c.isInfinite);	  return    c.isNaN    ==    isNaN;    	non-compiled	[CE]  not  a  statement	73	None	replace
276	[BUG]  [BUGGY]  return  isNaN  ||  c.infinite  ==  isNaN;  [CE]  not  a  statement  [FE]                AssertionError      [CONTEXT]      public  boolean  equals(Object  other)  {  if  (this  ==  other)  {  return  true;  }  if  (other  instanceof  Complex){  Complex  c  =  (Complex)other;  if  (c.isNaN)  {      [BUGGY]  return  isNaN  ||  c.infinite  ==  isNaN;  [BUGGY]      }  else  {  return  (real  ==  c.real)  &&  (imaginary  ==  c.imaginary);  }  }  return  false;  }  [CLASS]  Complex  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  other  [VARIABLES]  Object  other  boolean  isInfinite  isNaN  isZero  double  addend  c  d  denominator  divisor  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  	projects/Math46/src/main/java/org/apache/commons/math/complex/Complex.java	0.35355339059327373	329	329	2	replace	return  isNaN  ||  c.infinite  ==  isNaN;	  return    c.isNaN    ||    isInfinite    ==    c.infinite;    	non-compiled	[CE]  not  a  statement	58	None	replace
277	[BUG]  [BUGGY]  return  isNaN  ||  c.infinite  ==  isInfinite;  [CE]  not  a  statement  [FE]                  AssertionError      [CONTEXT]      public  boolean  equals(Object  other)  {  if  (this  ==  other)  {  return  true;  }  if  (other  instanceof  Complex){  Complex  c  =  (Complex)other;  if  (c.isNaN)  {      [BUGGY]  return  isNaN  ||  c.infinite  ==  isInfinite;  [BUGGY]      }  else  {  return  (real  ==  c.real)  &&  (imaginary  ==  c.imaginary);  }  }  return  false;  }  [CLASS]  Complex  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  other  [VARIABLES]  Object  other  boolean  isInfinite  isNaN  isZero  double  addend  c  d  denominator  divisor  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  	projects/Math46/src/main/java/org/apache/commons/math/complex/Complex.java	0.35355339059327373	329	329	2	replace	return  isNaN  ||  c.infinite  ==  isInfinite;	  return    c.isNaN    ||    isInfinite    ==    c.infinite;    	non-compiled	[CE]  not  a  statement	58	None	replace
278	[BUG]  [BUGGY]  return  isNaN  ||  c.infinite  ==  c.infinite;  [CE]  not  a  statement  [FE]                    AssertionError      [CONTEXT]      public  boolean  equals(Object  other)  {  if  (this  ==  other)  {  return  true;  }  if  (other  instanceof  Complex){  Complex  c  =  (Complex)other;  if  (c.isNaN)  {      [BUGGY]  return  isNaN  ||  c.infinite  ==  c.infinite;  [BUGGY]      }  else  {  return  (real  ==  c.real)  &&  (imaginary  ==  c.imaginary);  }  }  return  false;  }  [CLASS]  Complex  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  other  [VARIABLES]  Object  other  boolean  isInfinite  isNaN  isZero  double  addend  c  d  denominator  divisor  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  	projects/Math46/src/main/java/org/apache/commons/math/complex/Complex.java	0.35355339059327373	329	329	2	replace	return  isNaN  ||  c.infinite  ==  c.infinite;	  return    c.isNaN    ||    isInfinite    ==    c.infinite;    	non-compiled	[CE]  not  a  statement	58	None	replace
279	[BUG]  [BUGGY]  double  imaginary  =  c.imaginary.isInfinite();  [CE]  not  a  statement  [FE]                AssertionError      [CONTEXT]      public  boolean  equals(Object  other)  {  if  (this  ==  other)  {  return  true;  }  if  (other  instanceof  Complex){  Complex  c  =  (Complex)other;  if  (c.isNaN)  {      [BUGGY]  double  imaginary  =  c.imaginary.isInfinite();  [BUGGY]      return  isNaN;  }  else  {  return  (real  ==  c.real)  &&  (imaginary  ==  c.imaginary);  }  }  return  false;  }  [CLASS]  Complex  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  other  [VARIABLES]  Object  other  boolean  isInfinite  isNaN  isZero  double  addend  c  d  denominator  divisor  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  	projects/Math46/src/main/java/org/apache/commons/math/complex/Complex.java	0.35355339059327373	329	329	2	replace	double  imaginary  =  c.imaginary.isInfinite();	  double    imaginary    =    other.isInfinite();    	non-compiled	[CE]  not  a  statement	31	None	replace
280	[BUG]  [BUGGY]  double  imaginary  =  c.imaginary.equals(other.isInfinite());  [CE]  not  a  statement  [FE]                  AssertionError      [CONTEXT]      public  boolean  equals(Object  other)  {  if  (this  ==  other)  {  return  true;  }  if  (other  instanceof  Complex){  Complex  c  =  (Complex)other;  if  (c.isNaN)  {      [BUGGY]  double  imaginary  =  c.imaginary.equals(other.isInfinite());  [BUGGY]      return  isNaN;  }  else  {  return  (real  ==  c.real)  &&  (imaginary  ==  c.imaginary);  }  }  return  false;  }  [CLASS]  Complex  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  other  [VARIABLES]  Object  other  boolean  isInfinite  isNaN  isZero  double  addend  c  d  denominator  divisor  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  	projects/Math46/src/main/java/org/apache/commons/math/complex/Complex.java	0.35355339059327373	329	329	2	replace	double  imaginary  =  c.imaginary.equals(other.isInfinite());	  double    imaginary    =    other.isInfinite();    	non-compiled	[CE]  not  a  statement	31	None	replace
281	[BUG]  [BUGGY]  return  isNaN!=  c.isInfinite;  [CE]  not  a  statement  [FE]                AssertionError      [CONTEXT]      public  boolean  equals(Object  other)  {  if  (this  ==  other)  {  return  true;  }  if  (other  instanceof  Complex){  Complex  c  =  (Complex)other;  if  (c.isNaN)  {      [BUGGY]  return  isNaN!=  c.isInfinite;  [BUGGY]      }  else  {  return  (real  ==  c.real)  &&  (imaginary  ==  c.imaginary);  }  }  return  false;  }  [CLASS]  Complex  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  other  [VARIABLES]  Object  other  boolean  isInfinite  isNaN  isZero  double  addend  c  d  denominator  divisor  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  	projects/Math46/src/main/java/org/apache/commons/math/complex/Complex.java	0.35355339059327373	329	329	2	replace	return  isNaN!=  c.isInfinite;	  return    isNaN    &&    isInfinite;    	non-compiled	[CE]  not  a  statement	34	None	replace
282	[BUG]  [BUGGY]  double  imaginary  =  c.real  ||  c.imaginary;  [CE]  not  a  statement  [FE]              AssertionError      [CONTEXT]      public  boolean  equals(Object  other)  {  if  (this  ==  other)  {  return  true;  }  if  (other  instanceof  Complex){  Complex  c  =  (Complex)other;  if  (c.isNaN)  {      [BUGGY]  double  imaginary  =  c.real  ||  c.imaginary;  [BUGGY]      return  isNaN;  }  else  {  return  (real  ==  c.real)  &&  (imaginary  ==  c.imaginary);  }  }  return  false;  }  [CLASS]  Complex  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  other  [VARIABLES]  Object  other  boolean  isInfinite  isNaN  isZero  double  addend  c  d  denominator  divisor  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  	projects/Math46/src/main/java/org/apache/commons/math/complex/Complex.java	0.35355339059327373	329	329	2	replace	double  imaginary  =  c.real  ||  c.imaginary;	  double    imaginary    =    c.isNaN    ||    c.imaginary;    	non-compiled	[CE]  not  a  statement	92	None	replace
283	[BUG]  [BUGGY]  double  imaginary  =  c.imaginary  +  denominator;  [CE]  not  a  statement  [FE]            AssertionError      [CONTEXT]      public  boolean  equals(Object  other)  {  if  (this  ==  other)  {  return  true;  }  if  (other  instanceof  Complex){  Complex  c  =  (Complex)other;  if  (c.isNaN)  {      [BUGGY]  double  imaginary  =  c.imaginary  +  denominator;  [BUGGY]      return  isNaN;  }  else  {  return  (real  ==  c.real)  &&  (imaginary  ==  c.imaginary);  }  }  return  false;  }  [CLASS]  Complex  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  other  [VARIABLES]  Object  other  boolean  isInfinite  isNaN  isZero  double  addend  c  d  denominator  divisor  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  	projects/Math46/src/main/java/org/apache/commons/math/complex/Complex.java	0.35355339059327373	329	329	2	replace	double  imaginary  =  c.imaginary  +  denominator;	  double    imaginary    =    c.imaginary    +    1;    	non-compiled	[CE]  not  a  statement	72	None	replace
284	[BUG]  [BUGGY]  double  real  =  c.isNaN  ||  c.isUndefined();  [CE]  not  a  statement  [FE]                AssertionError      [CONTEXT]      public  boolean  equals(Object  other)  {  if  (this  ==  other)  {  return  true;  }  if  (other  instanceof  Complex){  Complex  c  =  (Complex)other;  if  (c.isNaN)  {      [BUGGY]  double  real  =  c.isNaN  ||  c.isUndefined();  [BUGGY]      return  isNaN;  }  else  {  return  (real  ==  c.real)  &&  (imaginary  ==  c.imaginary);  }  }  return  false;  }  [CLASS]  Complex  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  other  [VARIABLES]  Object  other  boolean  isInfinite  isNaN  isZero  double  addend  c  d  denominator  divisor  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  	projects/Math46/src/main/java/org/apache/commons/math/complex/Complex.java	0.35355339059327373	329	329	2	replace	double  real  =  c.isNaN  ||  c.isUndefined();	  double    real    =    c.isNaN    ||    c.isInfinite();    	non-compiled	[CE]  not  a  statement	49	None	replace
285	[BUG]  [BUGGY]  double  real  =  this.divisor.getDivisor();  [CE]  not  a  statement  [FE]                AssertionError      [CONTEXT]      public  boolean  equals(Object  other)  {  if  (this  ==  other)  {  return  true;  }  if  (other  instanceof  Complex){  Complex  c  =  (Complex)other;  if  (c.isNaN)  {      [BUGGY]  double  real  =  this.divisor.getDivisor();  [BUGGY]      return  isNaN;  }  else  {  return  (real  ==  c.real)  &&  (imaginary  ==  c.imaginary);  }  }  return  false;  }  [CLASS]  Complex  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  other  [VARIABLES]  Object  other  boolean  isInfinite  isNaN  isZero  double  addend  c  d  denominator  divisor  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  	projects/Math46/src/main/java/org/apache/commons/math/complex/Complex.java	0.35355339059327373	329	329	2	replace	double  real  =  this.divisor.getDivisor();	  double    real    =    other.getDivisor();    	non-compiled	[CE]  not  a  statement	41	None	replace
286	[BUG]  [BUGGY]  double  imaginary  =  c.imaginary  {  null  ||  c.imaginary  ==  null;  [CE]  not  a  statement  [FE]                    AssertionError      [CONTEXT]      public  boolean  equals(Object  other)  {  if  (this  ==  other)  {  return  true;  }  if  (other  instanceof  Complex){  Complex  c  =  (Complex)other;  if  (c.isNaN)  {      [BUGGY]  double  imaginary  =  c.imaginary  {  null  ||  c.imaginary  ==  null;  [BUGGY]      return  isNaN;  }  else  {  return  (real  ==  c.real)  &&  (imaginary  ==  c.imaginary);  }  }  return  false;  }  [CLASS]  Complex  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  other  [VARIABLES]  Object  other  boolean  isInfinite  isNaN  isZero  double  addend  c  d  denominator  divisor  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  	projects/Math46/src/main/java/org/apache/commons/math/complex/Complex.java	0.35355339059327373	329	329	2	replace	double  imaginary  =  c.imaginary  {  null  ||  c.imaginary  ==  null;	  double    imaginary    =    c.imaginary    &&    c.imaginary    ==    null;    	non-compiled	[CE]  not  a  statement	27	None	replace
287	[BUG]  [BUGGY]  double  imaginary  =  c.isInfinite  &&  c.isInfinite;  [CE]  not  a  statement  [FE]                AssertionError      [CONTEXT]      public  boolean  equals(Object  other)  {  if  (this  ==  other)  {  return  true;  }  if  (other  instanceof  Complex){  Complex  c  =  (Complex)other;  if  (c.isNaN)  {      [BUGGY]  double  imaginary  =  c.isInfinite  &&  c.isInfinite;  [BUGGY]      return  isNaN;  }  else  {  return  (real  ==  c.real)  &&  (imaginary  ==  c.imaginary);  }  }  return  false;  }  [CLASS]  Complex  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  other  [VARIABLES]  Object  other  boolean  isInfinite  isNaN  isZero  double  addend  c  d  denominator  divisor  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  	projects/Math46/src/main/java/org/apache/commons/math/complex/Complex.java	0.35355339059327373	329	329	2	replace	double  imaginary  =  c.isInfinite  &&  c.isInfinite;	  double    imaginary    =    c.isNaN    &&    c.isInfinite;    	non-compiled	[CE]  not  a  statement	12	None	replace
288	[BUG]  [BUGGY]  return  c.isNaN  ||  isNaN  ==  c.isInfinite;  [CE]  not  a  statement  [FE]            AssertionError      [CONTEXT]      public  boolean  equals(Object  other)  {  if  (this  ==  other)  {  return  true;  }  if  (other  instanceof  Complex){  Complex  c  =  (Complex)other;  if  (c.isNaN)  {      [BUGGY]  return  c.isNaN  ||  isNaN  ==  c.isInfinite;  [BUGGY]      }  else  {  return  (real  ==  c.real)  &&  (imaginary  ==  c.imaginary);  }  }  return  false;  }  [CLASS]  Complex  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  other  [VARIABLES]  Object  other  boolean  isInfinite  isNaN  isZero  double  addend  c  d  denominator  divisor  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  	projects/Math46/src/main/java/org/apache/commons/math/complex/Complex.java	0.35355339059327373	329	329	2	replace	return  c.isNaN  ||  isNaN  ==  c.isInfinite;	  return    isInfinite    ==    c.isNaN    ||    isNaN    ==    c.isInfinite;    	non-compiled	[CE]  not  a  statement	38	None	replace
289	[BUG]  [BUGGY]  return  c.isNaN  ||  isNaN  ==  c.infinite;  [CE]  not  a  statement  [FE]              AssertionError      [CONTEXT]      public  boolean  equals(Object  other)  {  if  (this  ==  other)  {  return  true;  }  if  (other  instanceof  Complex){  Complex  c  =  (Complex)other;  if  (c.isNaN)  {      [BUGGY]  return  c.isNaN  ||  isNaN  ==  c.infinite;  [BUGGY]      }  else  {  return  (real  ==  c.real)  &&  (imaginary  ==  c.imaginary);  }  }  return  false;  }  [CLASS]  Complex  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  other  [VARIABLES]  Object  other  boolean  isInfinite  isNaN  isZero  double  addend  c  d  denominator  divisor  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  	projects/Math46/src/main/java/org/apache/commons/math/complex/Complex.java	0.35355339059327373	329	329	2	replace	return  c.isNaN  ||  isNaN  ==  c.infinite;	  return    isInfinite    ==    c.isNaN    ||    isNaN    ==    c.infinite;    	non-compiled	[CE]  not  a  statement	22	None	replace
290	[BUG]  [BUGGY]  return  real.isNaN  ||  c.isNaN;  [CE]  not  a  statement  [FE]                      AssertionError      [CONTEXT]      public  boolean  equals(Object  other)  {  if  (this  ==  other)  {  return  true;  }  if  (other  instanceof  Complex){  Complex  c  =  (Complex)other;  if  (c.isNaN)  {      [BUGGY]  return  real.isNaN  ||  c.isNaN;  [BUGGY]      }  else  {  return  (real  ==  c.real)  &&  (imaginary  ==  c.imaginary);  }  }  return  false;  }  [CLASS]  Complex  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  other  [VARIABLES]  Object  other  boolean  isInfinite  isNaN  isZero  double  addend  c  d  denominator  divisor  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  	projects/Math46/src/main/java/org/apache/commons/math/complex/Complex.java	0.35355339059327373	329	329	2	replace	return  real.isNaN  ||  c.isNaN;	  return    c.isNaN    ||    c.isNaN;    	non-compiled	[CE]  not  a  statement	2	None	replace
291	[BUG]  [BUGGY]  return  c.isNaN  ||  c.isVoid();  [CE]  not  a  statement  [FE]                  AssertionError      [CONTEXT]      public  boolean  equals(Object  other)  {  if  (this  ==  other)  {  return  true;  }  if  (other  instanceof  Complex){  Complex  c  =  (Complex)other;  if  (c.isNaN)  {      [BUGGY]  return  c.isNaN  ||  c.isVoid();  [BUGGY]      }  else  {  return  (real  ==  c.real)  &&  (imaginary  ==  c.imaginary);  }  }  return  false;  }  [CLASS]  Complex  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  other  [VARIABLES]  Object  other  boolean  isInfinite  isNaN  isZero  double  addend  c  d  denominator  divisor  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  	projects/Math46/src/main/java/org/apache/commons/math/complex/Complex.java	0.35355339059327373	329	329	2	replace	return  c.isNaN  ||  c.isVoid();	  return    c.isNaN    ||    c.isZero();    	non-compiled	[CE]  not  a  statement	75	None	replace
292	[BUG]  [BUGGY]  return  c.isNaN  ||  c.isVar(c.isZero());  [CE]  not  a  statement  [FE]                    AssertionError      [CONTEXT]      public  boolean  equals(Object  other)  {  if  (this  ==  other)  {  return  true;  }  if  (other  instanceof  Complex){  Complex  c  =  (Complex)other;  if  (c.isNaN)  {      [BUGGY]  return  c.isNaN  ||  c.isVar(c.isZero());  [BUGGY]      }  else  {  return  (real  ==  c.real)  &&  (imaginary  ==  c.imaginary);  }  }  return  false;  }  [CLASS]  Complex  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  other  [VARIABLES]  Object  other  boolean  isInfinite  isNaN  isZero  double  addend  c  d  denominator  divisor  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  	projects/Math46/src/main/java/org/apache/commons/math/complex/Complex.java	0.35355339059327373	329	329	2	replace	return  c.isNaN  ||  c.isVar(c.isZero());	  return    c.isNaN    ||    c.isZero();    	non-compiled	[CE]  not  a  statement	75	None	replace
293	[BUG]  [BUGGY]  return  c.isInfinite  ==  isNaN  ||  isInfinite;  [CE]  not  a  statement  [FE]                  AssertionError      [CONTEXT]      public  boolean  equals(Object  other)  {  if  (this  ==  other)  {  return  true;  }  if  (other  instanceof  Complex){  Complex  c  =  (Complex)other;  if  (c.isNaN)  {      [BUGGY]  return  c.isInfinite  ==  isNaN  ||  isInfinite;  [BUGGY]      }  else  {  return  (real  ==  c.real)  &&  (imaginary  ==  c.imaginary);  }  }  return  false;  }  [CLASS]  Complex  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  other  [VARIABLES]  Object  other  boolean  isInfinite  isNaN  isZero  double  addend  c  d  denominator  divisor  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  	projects/Math46/src/main/java/org/apache/commons/math/complex/Complex.java	0.35355339059327373	329	329	2	replace	return  c.isInfinite  ==  isNaN  ||  isInfinite;	  return    isInfinite    ==    c.isInfinite    ||    isNaN;    	non-compiled	[CE]  not  a  statement	83	None	replace
294	[BUG]  [BUGGY]  double  real  =  c.isNaN  ||  c.isImaginary();  [CE]  not  a  statement  [FE]              AssertionError      [CONTEXT]      public  boolean  equals(Object  other)  {  if  (this  ==  other)  {  return  true;  }  if  (other  instanceof  Complex){  Complex  c  =  (Complex)other;  if  (c.isNaN)  {      [BUGGY]  double  real  =  c.isNaN  ||  c.isImaginary();  [BUGGY]      return  isNaN;  }  else  {  return  (real  ==  c.real)  &&  (imaginary  ==  c.imaginary);  }  }  return  false;  }  [CLASS]  Complex  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  other  [VARIABLES]  Object  other  boolean  isInfinite  isNaN  isZero  double  addend  c  d  denominator  divisor  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  	projects/Math46/src/main/java/org/apache/commons/math/complex/Complex.java	0.35355339059327373	329	329	2	replace	double  real  =  c.isNaN  ||  c.isImaginary();	  double    real    =    c.isNaN    ||    c.isDigits();    	non-compiled	[CE]  not  a  statement	55	None	replace
295	[BUG]  [BUGGY]  return  isInfinite  ==  c.isNaN  ||  isInfinite  ==  c.isInfinite);  [CE]  not  a  statement  [FE]              AssertionError      [CONTEXT]      public  boolean  equals(Object  other)  {  if  (this  ==  other)  {  return  true;  }  if  (other  instanceof  Complex){  Complex  c  =  (Complex)other;  if  (c.isNaN)  {      [BUGGY]  return  isInfinite  ==  c.isNaN  ||  isInfinite  ==  c.isInfinite);  [BUGGY]      }  else  {  return  (real  ==  c.real)  &&  (imaginary  ==  c.imaginary);  }  }  return  false;  }  [CLASS]  Complex  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  other  [VARIABLES]  Object  other  boolean  isInfinite  isNaN  isZero  double  addend  c  d  denominator  divisor  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  	projects/Math46/src/main/java/org/apache/commons/math/complex/Complex.java	0.35355339059327373	329	329	2	replace	return  isInfinite  ==  c.isNaN  ||  isInfinite  ==  c.isInfinite);	  return    isNaN    ==    c.isNaN    ||    isInfinite    ==    c.isInfinite);    	non-compiled	[CE]  not  a  statement	95	None	replace
296	[BUG]  [BUGGY]  return  isNaN  ==  c.isNaN  ||  isZero  ==  c.isZero);  [CE]  not  a  statement  [FE]                AssertionError      [CONTEXT]      public  boolean  equals(Object  other)  {  if  (this  ==  other)  {  return  true;  }  if  (other  instanceof  Complex){  Complex  c  =  (Complex)other;  if  (c.isNaN)  {      [BUGGY]  return  isNaN  ==  c.isNaN  ||  isZero  ==  c.isZero);  [BUGGY]      }  else  {  return  (real  ==  c.real)  &&  (imaginary  ==  c.imaginary);  }  }  return  false;  }  [CLASS]  Complex  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  other  [VARIABLES]  Object  other  boolean  isInfinite  isNaN  isZero  double  addend  c  d  denominator  divisor  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  	projects/Math46/src/main/java/org/apache/commons/math/complex/Complex.java	0.35355339059327373	329	329	2	replace	return  isNaN  ==  c.isNaN  ||  isZero  ==  c.isZero);	  return    isNaN    ==    c.isNaN    ||    isInfinite    ==    c.isInfinite);    	non-compiled	[CE]  not  a  statement	95	None	replace
297	[BUG]  [BUGGY]  double  imaginary  =  c.isInfinite  &&  c.isZero();  [CE]  not  a  statement  [FE]                    AssertionError      [CONTEXT]      public  boolean  equals(Object  other)  {  if  (this  ==  other)  {  return  true;  }  if  (other  instanceof  Complex){  Complex  c  =  (Complex)other;  if  (c.isNaN)  {      [BUGGY]  double  imaginary  =  c.isInfinite  &&  c.isZero();  [BUGGY]      return  isNaN;  }  else  {  return  (real  ==  c.real)  &&  (imaginary  ==  c.imaginary);  }  }  return  false;  }  [CLASS]  Complex  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  other  [VARIABLES]  Object  other  boolean  isInfinite  isNaN  isZero  double  addend  c  d  denominator  divisor  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  	projects/Math46/src/main/java/org/apache/commons/math/complex/Complex.java	0.35355339059327373	329	329	2	replace	double  imaginary  =  c.isInfinite  &&  c.isZero();	  double    imaginary    =    c.isNaN    &&    c.isZero();    	non-compiled	[CE]  not  a  statement	51	None	replace
298	[BUG]  [BUGGY]  double  imaginary  =  c.isNaN  ||  c.isImaginary;  [CE]  not  a  statement  [FE]              AssertionError      [CONTEXT]      public  boolean  equals(Object  other)  {  if  (this  ==  other)  {  return  true;  }  if  (other  instanceof  Complex){  Complex  c  =  (Complex)other;  if  (c.isNaN)  {      [BUGGY]  double  imaginary  =  c.isNaN  ||  c.isImaginary;  [BUGGY]      return  isNaN;  }  else  {  return  (real  ==  c.real)  &&  (imaginary  ==  c.imaginary);  }  }  return  false;  }  [CLASS]  Complex  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  other  [VARIABLES]  Object  other  boolean  isInfinite  isNaN  isZero  double  addend  c  d  denominator  divisor  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  	projects/Math46/src/main/java/org/apache/commons/math/complex/Complex.java	0.35355339059327373	329	329	2	replace	double  imaginary  =  c.isNaN  ||  c.isImaginary;	  double    imaginary    =    c.isNaN    ||    c.isZero;    	non-compiled	[CE]  not  a  statement	11	None	replace
299	[BUG]  [BUGGY]  return  isNaN  ||  c.isInfinite  ==  isNaN;  [CE]  not  a  statement  [FE]              AssertionError      [CONTEXT]      public  boolean  equals(Object  other)  {  if  (this  ==  other)  {  return  true;  }  if  (other  instanceof  Complex){  Complex  c  =  (Complex)other;  if  (c.isNaN)  {      [BUGGY]  return  isNaN  ||  c.isInfinite  ==  isNaN;  [BUGGY]      }  else  {  return  (real  ==  c.real)  &&  (imaginary  ==  c.imaginary);  }  }  return  false;  }  [CLASS]  Complex  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  other  [VARIABLES]  Object  other  boolean  isInfinite  isNaN  isZero  double  addend  c  d  denominator  divisor  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  	projects/Math46/src/main/java/org/apache/commons/math/complex/Complex.java	0.35355339059327373	329	329	2	replace	return  isNaN  ||  c.isInfinite  ==  isNaN;	  return    c.isNaN    ||    isInfinite    ==    c.isInfinite;    	non-compiled	[CE]  not  a  statement	80	None	replace
300	[BUG]  [BUGGY]  return  isNaN  ||  c.isInfinite  ==  isZero;  [CE]  not  a  statement  [FE]                AssertionError      [CONTEXT]      public  boolean  equals(Object  other)  {  if  (this  ==  other)  {  return  true;  }  if  (other  instanceof  Complex){  Complex  c  =  (Complex)other;  if  (c.isNaN)  {      [BUGGY]  return  isNaN  ||  c.isInfinite  ==  isZero;  [BUGGY]      }  else  {  return  (real  ==  c.real)  &&  (imaginary  ==  c.imaginary);  }  }  return  false;  }  [CLASS]  Complex  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  other  [VARIABLES]  Object  other  boolean  isInfinite  isNaN  isZero  double  addend  c  d  denominator  divisor  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  	projects/Math46/src/main/java/org/apache/commons/math/complex/Complex.java	0.35355339059327373	329	329	2	replace	return  isNaN  ||  c.isInfinite  ==  isZero;	  return    c.isNaN    ||    isInfinite    ==    c.isInfinite;    	non-compiled	[CE]  not  a  statement	80	None	replace
