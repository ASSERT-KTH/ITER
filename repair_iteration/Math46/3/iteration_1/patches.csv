bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  if(isNaN)  {  return  this.add(INF).divide(I.subtract(this)).log().multiply(I.divide(createComplex(2.0,  0.0)));  }  [CE]  ';'  expected  [FE]        AssertionError    [CONTEXT]    public  Complex  atan()  {  if  (isNaN)  {  return  NaN;  }    [BUGGY]  if(isNaN)  {  return  this.add(INF).divide(I.subtract(this)).log().multiply(I.divide(createComplex(2.0,  0.0)));  }  [BUGGY]    .multiply(I.divide(createComplex(2.0,  0.0)));  }  [CLASS]  Complex  [METHOD]  atan  [RETURN_TYPE]  Complex  [VARIABLES]  boolean  isInfinite  isNaN  isZero  double  addend  c  d  denominator  divisor  factor  imaginary  q  real  subtrahend  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  	projects/Math46/src/main/java/org/apache/commons/math/complex/Complex.java	0.4082482904638631	587	588	2	replace	if(isNaN)  {  return  this.add(INF).divide(I.subtract(this)).log().multiply(I.divide(createComplex(2.0,  0.0)));  }	  return    this.add(INF).divide(I.subtract(this)).log().multiply(I.divide(createComplex(2.0,    0.0)));    	non-compiled	[CE]  ';'  expected	1	None	replace
2	[BUG]  [BUGGY]  this.add(I).log().multiply(I.divide(createNaN(0.0,  0.0)));  [CE]  ';'  expected  [FE]              AssertionError    [CONTEXT]    public  Complex  atan()  {  if  (isNaN)  {  return  NaN;  }    [BUGGY]  this.add(I).log().multiply(I.divide(createNaN(0.0,  0.0)));  [BUGGY]    return  this.add(I).divide(I.subtract(this)).log()    .multiply(I.divide(createComplex(2.0,  0.0)));  .multiply(I.divide(createComplex(2.0,  0.0)));  }  [CLASS]  Complex  [METHOD]  atan  [RETURN_TYPE]  Complex  [VARIABLES]  boolean  isInfinite  isNaN  isZero  double  addend  c  d  denominator  divisor  factor  imaginary  q  real  subtrahend  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  	projects/Math46/src/main/java/org/apache/commons/math/complex/Complex.java	0.4082482904638631	587	588	2	replace	this.add(I).log().multiply(I.divide(createNaN(0.0,  0.0)));	      this.add(INF).log().multiply(I.divide(createNaN(0.0,    0.0)));    	non-compiled	[CE]  ';'  expected	9	None	replace
3	[BUG]  [BUGGY]  if(isInfinite  ||  isZero)  {  return  Complex.ZERO;  }  [CE]  ';'  expected  [FE]              AssertionError    [CONTEXT]    public  Complex  atan()  {  if  (isNaN)  {  return  NaN;  }    [BUGGY]  if(isInfinite  ||  isZero)  {  return  Complex.ZERO;  }  [BUGGY]    return  this.add(I).divide(I.subtract(this)).log()    .multiply(I.divide(createComplex(2.0,  0.0)));  .multiply(I.divide(createComplex(2.0,  0.0)));  }  [CLASS]  Complex  [METHOD]  atan  [RETURN_TYPE]  Complex  [VARIABLES]  boolean  isInfinite  isNaN  isZero  double  addend  c  d  denominator  divisor  factor  imaginary  q  real  subtrahend  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  	projects/Math46/src/main/java/org/apache/commons/math/complex/Complex.java	0.4082482904638631	587	588	2	replace	if(isInfinite  ||  isZero)  {  return  Complex.ZERO;  }	      if(isNaN    ||    isZero)    {    return    Complex.ZERO;    }    	non-compiled	[CE]  ';'  expected	15	None	replace
4	[BUG]  [BUGGY]  if(isNaN  ||  isZero  ||  isInfinite)  {  return  Complex.ZERO;  }  [CE]  ';'  expected  [FE]                AssertionError    [CONTEXT]    public  Complex  atan()  {  if  (isNaN)  {  return  NaN;  }    [BUGGY]  if(isNaN  ||  isZero  ||  isInfinite)  {  return  Complex.ZERO;  }  [BUGGY]    return  this.add(I).divide(I.subtract(this)).log()    .multiply(I.divide(createComplex(2.0,  0.0)));  .multiply(I.divide(createComplex(2.0,  0.0)));  }  [CLASS]  Complex  [METHOD]  atan  [RETURN_TYPE]  Complex  [VARIABLES]  boolean  isInfinite  isNaN  isZero  double  addend  c  d  denominator  divisor  factor  imaginary  q  real  subtrahend  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  	projects/Math46/src/main/java/org/apache/commons/math/complex/Complex.java	0.4082482904638631	587	588	2	replace	if(isNaN  ||  isZero  ||  isInfinite)  {  return  Complex.ZERO;  }	      if(isNaN    ||    isZero)    {    return    Complex.ZERO;    }    	non-compiled	[CE]  ';'  expected	15	None	replace
5	[BUG]  [BUGGY]  if(isNaN  ||  isInfinite)  {  return  Complex.ZERO;  }  [CE]  [FE]                  AssertionError    [CONTEXT]    public  Complex  atan()  {  if  (isNaN)  {  return  NaN;  }    [BUGGY]  if(isNaN  ||  isInfinite)  {  return  Complex.ZERO;  }  [BUGGY]    return  this.add(I).divide(I.subtract(this)).log()    .multiply(I.divide(createComplex(2.0,  0.0)));  .multiply(I.divide(createComplex(2.0,  0.0)));  }  [CLASS]  Complex  [METHOD]  atan  [RETURN_TYPE]  Complex  [VARIABLES]  boolean  isInfinite  isNaN  isZero  double  addend  c  d  denominator  divisor  factor  imaginary  q  real  subtrahend  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  	projects/Math46/src/main/java/org/apache/commons/math/complex/Complex.java	0.4082482904638631	587	588	2	replace	if(isNaN  ||  isInfinite)  {  return  Complex.ZERO;  }	      if(isNaN    ||    isZero)    {    return    Complex.ZERO;    }    	non-compiled	[CE]  	15	None	replace
6	[BUG]  [BUGGY]  if(isNaN)  {  return  this.add(INF).multiply(I.subtract(this)).log().multiply(I.divide(createComplex(2.0,  0.0)));  }  [CE]  [FE]              AssertionError    [CONTEXT]    public  Complex  atan()  {  if  (isNaN)  {  return  NaN;  }    [BUGGY]  if(isNaN)  {  return  this.add(INF).multiply(I.subtract(this)).log().multiply(I.divide(createComplex(2.0,  0.0)));  }  [BUGGY]    .multiply(I.divide(createComplex(2.0,  0.0)));  }  [CLASS]  Complex  [METHOD]  atan  [RETURN_TYPE]  Complex  [VARIABLES]  boolean  isInfinite  isNaN  isZero  double  addend  c  d  denominator  divisor  factor  imaginary  q  real  subtrahend  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  	projects/Math46/src/main/java/org/apache/commons/math/complex/Complex.java	0.4082482904638631	587	588	2	replace	if(isNaN)  {  return  this.add(INF).multiply(I.subtract(this)).log().multiply(I.divide(createComplex(2.0,  0.0)));  }	  return    this.add(INF).multiply(I.subtract(this)).log().multiply(I.divide(createComplex(2.0,    0.0)));    	non-compiled	[CE]  	4	None	replace
7	[BUG]  [BUGGY]  return  this.add(INF).multiply(I.subtract(this)).log().multiply(I.divide(createComplex(0.0,  0.0)));  [CE]  ';'  expected  [FE]                AssertionError    [CONTEXT]    public  Complex  atan()  {  if  (isNaN)  {  return  NaN;  }    [BUGGY]  return  this.add(INF).multiply(I.subtract(this)).log().multiply(I.divide(createComplex(0.0,  0.0)));  [BUGGY]    .multiply(I.divide(createComplex(2.0,  0.0)));  }  [CLASS]  Complex  [METHOD]  atan  [RETURN_TYPE]  Complex  [VARIABLES]  boolean  isInfinite  isNaN  isZero  double  addend  c  d  denominator  divisor  factor  imaginary  q  real  subtrahend  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  	projects/Math46/src/main/java/org/apache/commons/math/complex/Complex.java	0.4082482904638631	587	588	2	replace	return  this.add(INF).multiply(I.subtract(this)).log().multiply(I.divide(createComplex(0.0,  0.0)));	  return    this.add(INF).multiply(I.subtract(this)).log().multiply(I.divide(createComplex(2.0,    0.0)));    	non-compiled	[CE]  ';'  expected	4	None	replace
8	[BUG]  [BUGGY]  if(isNaN)  {  if(isInfinite)  {  return  NaN;  }  [CE]  ';'  expected  [FE]            AssertionError    [CONTEXT]    public  Complex  atan()  {  if  (isNaN)  {  return  NaN;  }    [BUGGY]  if(isNaN)  {  if(isInfinite)  {  return  NaN;  }  [BUGGY]    return  this.add(I).divide(I.subtract(this)).log()    .multiply(I.divide(createComplex(2.0,  0.0)));  .multiply(I.divide(createComplex(2.0,  0.0)));  }  [CLASS]  Complex  [METHOD]  atan  [RETURN_TYPE]  Complex  [VARIABLES]  boolean  isInfinite  isNaN  isZero  double  addend  c  d  denominator  divisor  factor  imaginary  q  real  subtrahend  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  	projects/Math46/src/main/java/org/apache/commons/math/complex/Complex.java	0.4082482904638631	587	588	2	replace	if(isNaN)  {  if(isInfinite)  {  return  NaN;  }	      if(isInfinite)    {    if(isZero)    {    return    NaN;    }    	non-compiled	[CE]  ';'  expected	19	None	replace
9	[BUG]  [BUGGY]  if(isInfinite  ||  isZero)  {  if(isNaN)  {  return  NaN;  }  [CE]  ';'  expected  [FE]              AssertionError    [CONTEXT]    public  Complex  atan()  {  if  (isNaN)  {  return  NaN;  }    [BUGGY]  if(isInfinite  ||  isZero)  {  if(isNaN)  {  return  NaN;  }  [BUGGY]    return  this.add(I).divide(I.subtract(this)).log()    .multiply(I.divide(createComplex(2.0,  0.0)));  .multiply(I.divide(createComplex(2.0,  0.0)));  }  [CLASS]  Complex  [METHOD]  atan  [RETURN_TYPE]  Complex  [VARIABLES]  boolean  isInfinite  isNaN  isZero  double  addend  c  d  denominator  divisor  factor  imaginary  q  real  subtrahend  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  	projects/Math46/src/main/java/org/apache/commons/math/complex/Complex.java	0.4082482904638631	587	588	2	replace	if(isInfinite  ||  isZero)  {  if(isNaN)  {  return  NaN;  }	      if(isInfinite)    {    if(isZero)    {    return    NaN;    }    	non-compiled	[CE]  ';'  expected	19	None	replace
10	[BUG]  [BUGGY]  if(isZero)  {  return  this.add(INF).divide(I.subtract(this)).log().multiply(I.divide(createComplex(0.0,  0.0)));  }  [CE]  ';'  expected  [FE]        AssertionError    [CONTEXT]    public  Complex  atan()  {  if  (isNaN)  {  return  NaN;  }    [BUGGY]  if(isZero)  {  return  this.add(INF).divide(I.subtract(this)).log().multiply(I.divide(createComplex(0.0,  0.0)));  }  [BUGGY]    .multiply(I.divide(createComplex(2.0,  0.0)));  }  [CLASS]  Complex  [METHOD]  atan  [RETURN_TYPE]  Complex  [VARIABLES]  boolean  isInfinite  isNaN  isZero  double  addend  c  d  denominator  divisor  factor  imaginary  q  real  subtrahend  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  	projects/Math46/src/main/java/org/apache/commons/math/complex/Complex.java	0.4082482904638631	587	588	2	replace	if(isZero)  {  return  this.add(INF).divide(I.subtract(this)).log().multiply(I.divide(createComplex(0.0,  0.0)));  }	  return    this.add(INF).divide(I.subtract(this)).log().multiply(I.divide(createComplex(0.0,    0.0)));    	non-compiled	[CE]  ';'  expected	11	None	replace
11	[BUG]  [BUGGY]  if(isNaN)  {  return  this.add(INF).divide(I.subtract(this)).log().multiply(I.divide(createComplex(0.0,  0.0)));  }  [CE]  ';'  expected  [FE]          AssertionError    [CONTEXT]    public  Complex  atan()  {  if  (isNaN)  {  return  NaN;  }    [BUGGY]  if(isNaN)  {  return  this.add(INF).divide(I.subtract(this)).log().multiply(I.divide(createComplex(0.0,  0.0)));  }  [BUGGY]    .multiply(I.divide(createComplex(2.0,  0.0)));  }  [CLASS]  Complex  [METHOD]  atan  [RETURN_TYPE]  Complex  [VARIABLES]  boolean  isInfinite  isNaN  isZero  double  addend  c  d  denominator  divisor  factor  imaginary  q  real  subtrahend  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  	projects/Math46/src/main/java/org/apache/commons/math/complex/Complex.java	0.4082482904638631	587	588	2	replace	if(isNaN)  {  return  this.add(INF).divide(I.subtract(this)).log().multiply(I.divide(createComplex(0.0,  0.0)));  }	  return    this.add(INF).divide(I.subtract(this)).log().multiply(I.divide(createComplex(0.0,    0.0)));    	non-compiled	[CE]  ';'  expected	11	None	replace
12	[BUG]  [BUGGY]  if(isZero)  {  if(isNaN)  {  return  NaN;  }  [CE]  ';'  expected  [FE]          AssertionError    [CONTEXT]    public  Complex  atan()  {  if  (isNaN)  {  return  NaN;  }    [BUGGY]  if(isZero)  {  if(isNaN)  {  return  NaN;  }  [BUGGY]    return  this.add(I).divide(I.subtract(this)).log()    .multiply(I.divide(createComplex(2.0,  0.0)));  .multiply(I.divide(createComplex(2.0,  0.0)));  }  [CLASS]  Complex  [METHOD]  atan  [RETURN_TYPE]  Complex  [VARIABLES]  boolean  isInfinite  isNaN  isZero  double  addend  c  d  denominator  divisor  factor  imaginary  q  real  subtrahend  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  	projects/Math46/src/main/java/org/apache/commons/math/complex/Complex.java	0.4082482904638631	587	588	2	replace	if(isZero)  {  if(isNaN)  {  return  NaN;  }	      if(isInfinite)    {    if(isNaN)    {    return    NaN;    }    	non-compiled	[CE]  ';'  expected	18	None	replace
13	[BUG]  [BUGGY]  if(isZero)  {  if(isInfinite)  {  return  NaN;  }  [CE]  ';'  expected  [FE]            AssertionError    [CONTEXT]    public  Complex  atan()  {  if  (isNaN)  {  return  NaN;  }    [BUGGY]  if(isZero)  {  if(isInfinite)  {  return  NaN;  }  [BUGGY]    return  this.add(I).divide(I.subtract(this)).log()    .multiply(I.divide(createComplex(2.0,  0.0)));  .multiply(I.divide(createComplex(2.0,  0.0)));  }  [CLASS]  Complex  [METHOD]  atan  [RETURN_TYPE]  Complex  [VARIABLES]  boolean  isInfinite  isNaN  isZero  double  addend  c  d  denominator  divisor  factor  imaginary  q  real  subtrahend  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  	projects/Math46/src/main/java/org/apache/commons/math/complex/Complex.java	0.4082482904638631	587	588	2	replace	if(isZero)  {  if(isInfinite)  {  return  NaN;  }	      if(isInfinite)    {    if(isNaN)    {    return    NaN;    }    	non-compiled	[CE]  ';'  expected	18	None	replace
14	[BUG]  [BUGGY]  this.add(I).log().multiply(I.divide(createComplex(0.0,  0.0)));  [CE]  ';'  expected  [FE]          AssertionError    [CONTEXT]    public  Complex  atan()  {  if  (isNaN)  {  return  NaN;  }    [BUGGY]  this.add(I).log().multiply(I.divide(createComplex(0.0,  0.0)));  [BUGGY]    return  this.add(I).divide(I.subtract(this)).log()    .multiply(I.divide(createComplex(2.0,  0.0)));  .multiply(I.divide(createComplex(2.0,  0.0)));  }  [CLASS]  Complex  [METHOD]  atan  [RETURN_TYPE]  Complex  [VARIABLES]  boolean  isInfinite  isNaN  isZero  double  addend  c  d  denominator  divisor  factor  imaginary  q  real  subtrahend  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  	projects/Math46/src/main/java/org/apache/commons/math/complex/Complex.java	0.4082482904638631	587	588	2	replace	this.add(I).log().multiply(I.divide(createComplex(0.0,  0.0)));	      this.add(INF).log().multiply(I.divide(createComplex(0.0,    0.0)));    	non-compiled	[CE]  ';'  expected	7	None	replace
15	[BUG]  [BUGGY]  return  this.add(this.subtract(INF.subtract(this)).log().multiply(I.divide(createComplex(2.0,  0.0)));  [CE]  ';'  expected  [FE]          AssertionError    [CONTEXT]    public  Complex  atan()  {  if  (isNaN)  {  return  NaN;  }    [BUGGY]  return  this.add(this.subtract(INF.subtract(this)).log().multiply(I.divide(createComplex(2.0,  0.0)));  [BUGGY]    .multiply(I.divide(createComplex(2.0,  0.0)));  }  [CLASS]  Complex  [METHOD]  atan  [RETURN_TYPE]  Complex  [VARIABLES]  boolean  isInfinite  isNaN  isZero  double  addend  c  d  denominator  divisor  factor  imaginary  q  real  subtrahend  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  	projects/Math46/src/main/java/org/apache/commons/math/complex/Complex.java	0.4082482904638631	587	588	2	replace	return  this.add(this.subtract(INF.subtract(this)).log().multiply(I.divide(createComplex(2.0,  0.0)));	  return    this.add(INF).subtract(I.subtract(this)).log().multiply(I.divide(createComplex(2.0,    0.0)));    	non-compiled	[CE]  ';'  expected	2	None	replace
16	[BUG]  [BUGGY]  return  this.add(infinite).subtract(I.subtract(this)).log().multiply(I.divide(createComplex(2.0,  0.0)));  [CE]  ';'  expected  [FE]            AssertionError    [CONTEXT]    public  Complex  atan()  {  if  (isNaN)  {  return  NaN;  }    [BUGGY]  return  this.add(infinite).subtract(I.subtract(this)).log().multiply(I.divide(createComplex(2.0,  0.0)));  [BUGGY]    .multiply(I.divide(createComplex(2.0,  0.0)));  }  [CLASS]  Complex  [METHOD]  atan  [RETURN_TYPE]  Complex  [VARIABLES]  boolean  isInfinite  isNaN  isZero  double  addend  c  d  denominator  divisor  factor  imaginary  q  real  subtrahend  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  	projects/Math46/src/main/java/org/apache/commons/math/complex/Complex.java	0.4082482904638631	587	588	2	replace	return  this.add(infinite).subtract(I.subtract(this)).log().multiply(I.divide(createComplex(2.0,  0.0)));	  return    this.add(INF).subtract(I.subtract(this)).log().multiply(I.divide(createComplex(2.0,    0.0)));    	non-compiled	[CE]  ';'  expected	2	None	replace
17	[BUG]  [BUGGY]  this.add(I).log().multiply(I.divide(createComplex(2.0,  0.0)));  [CE]  ';'  expected  [FE]        AssertionError    [CONTEXT]    public  Complex  atan()  {  if  (isNaN)  {  return  NaN;  }    [BUGGY]  this.add(I).log().multiply(I.divide(createComplex(2.0,  0.0)));  [BUGGY]    return  this.add(I).divide(I.subtract(this)).log()    .multiply(I.divide(createComplex(2.0,  0.0)));  .multiply(I.divide(createComplex(2.0,  0.0)));  }  [CLASS]  Complex  [METHOD]  atan  [RETURN_TYPE]  Complex  [VARIABLES]  boolean  isInfinite  isNaN  isZero  double  addend  c  d  denominator  divisor  factor  imaginary  q  real  subtrahend  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  	projects/Math46/src/main/java/org/apache/commons/math/complex/Complex.java	0.4082482904638631	587	588	2	replace	this.add(I).log().multiply(I.divide(createComplex(2.0,  0.0)));	      this.add(INF).log().multiply(I.divide(createComplex(2.0,    0.0)));    	non-compiled	[CE]  ';'  expected	6	None	replace
18	[BUG]  [BUGGY]  if(isNaN)  {  if(!isInfinite)  {  return  Complex.ZERO;  }  [CE]  ';'  expected  [FE]                AssertionError    [CONTEXT]    public  Complex  atan()  {  if  (isNaN)  {  return  NaN;  }    [BUGGY]  if(isNaN)  {  if(!isInfinite)  {  return  Complex.ZERO;  }  [BUGGY]    return  this.add(I).divide(I.subtract(this)).log()    .multiply(I.divide(createComplex(2.0,  0.0)));  .multiply(I.divide(createComplex(2.0,  0.0)));  }  [CLASS]  Complex  [METHOD]  atan  [RETURN_TYPE]  Complex  [VARIABLES]  boolean  isInfinite  isNaN  isZero  double  addend  c  d  denominator  divisor  factor  imaginary  q  real  subtrahend  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  	projects/Math46/src/main/java/org/apache/commons/math/complex/Complex.java	0.4082482904638631	587	588	2	replace	if(isNaN)  {  if(!isInfinite)  {  return  Complex.ZERO;  }	      if(isInfinite)    {    if(!isZero)    {    return    Complex.ZERO;    }    	non-compiled	[CE]  ';'  expected	21	None	replace
19	[BUG]  [BUGGY]  if(isInfinite)  {  if(!isNaN)  {  return  Complex.ZERO;  }  [CE]  ';'  expected  [FE]                  AssertionError    [CONTEXT]    public  Complex  atan()  {  if  (isNaN)  {  return  NaN;  }    [BUGGY]  if(isInfinite)  {  if(!isNaN)  {  return  Complex.ZERO;  }  [BUGGY]    return  this.add(I).divide(I.subtract(this)).log()    .multiply(I.divide(createComplex(2.0,  0.0)));  .multiply(I.divide(createComplex(2.0,  0.0)));  }  [CLASS]  Complex  [METHOD]  atan  [RETURN_TYPE]  Complex  [VARIABLES]  boolean  isInfinite  isNaN  isZero  double  addend  c  d  denominator  divisor  factor  imaginary  q  real  subtrahend  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  	projects/Math46/src/main/java/org/apache/commons/math/complex/Complex.java	0.4082482904638631	587	588	2	replace	if(isInfinite)  {  if(!isNaN)  {  return  Complex.ZERO;  }	      if(isInfinite)    {    if(!isZero)    {    return    Complex.ZERO;    }    	non-compiled	[CE]  ';'  expected	21	None	replace
20	[BUG]  [BUGGY]  if(isNaN  ||  isInfinite)  {  if(!isZero)  {  return  Complex.ZERO;  }  [CE]  ';'  expected  [FE]                    AssertionError    [CONTEXT]    public  Complex  atan()  {  if  (isNaN)  {  return  NaN;  }    [BUGGY]  if(isNaN  ||  isInfinite)  {  if(!isZero)  {  return  Complex.ZERO;  }  [BUGGY]    return  this.add(I).divide(I.subtract(this)).log()    .multiply(I.divide(createComplex(2.0,  0.0)));  .multiply(I.divide(createComplex(2.0,  0.0)));  }  [CLASS]  Complex  [METHOD]  atan  [RETURN_TYPE]  Complex  [VARIABLES]  boolean  isInfinite  isNaN  isZero  double  addend  c  d  denominator  divisor  factor  imaginary  q  real  subtrahend  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  	projects/Math46/src/main/java/org/apache/commons/math/complex/Complex.java	0.4082482904638631	587	588	2	replace	if(isNaN  ||  isInfinite)  {  if(!isZero)  {  return  Complex.ZERO;  }	      if(isInfinite)    {    if(!isZero)    {    return    Complex.ZERO;    }    	non-compiled	[CE]  ';'  expected	21	None	replace
21	[BUG]  [BUGGY]  Iterator  <  Complex>  it  =  this.getDivisor().iterator();  [CE]  ';'  expected  [FE]              AssertionError    [CONTEXT]    public  Complex  atan()  {  if  (isNaN)  {  return  NaN;  }    [BUGGY]  Iterator  <  Complex>  it  =  this.getDivisor().iterator();  [BUGGY]    return  this.add(I).divide(I.subtract(this)).log()    .multiply(I.divide(createComplex(2.0,  0.0)));  .multiply(I.divide(createComplex(2.0,  0.0)));  }  [CLASS]  Complex  [METHOD]  atan  [RETURN_TYPE]  Complex  [VARIABLES]  boolean  isInfinite  isNaN  isZero  double  addend  c  d  denominator  divisor  factor  imaginary  q  real  subtrahend  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  	projects/Math46/src/main/java/org/apache/commons/math/complex/Complex.java	0.4082482904638631	587	588	2	replace	Iterator  <  Complex>  it  =  this.getDivisor().iterator();	      Iterator    <    Complex>    it    =    this.getINFs().iterator();    	non-compiled	[CE]  ';'  expected	20	None	replace
22	[BUG]  [BUGGY]  Iterator  <  Complex>  it  =  this.getDivisors().iterator();  [CE]  ';'  expected  [FE]                AssertionError    [CONTEXT]    public  Complex  atan()  {  if  (isNaN)  {  return  NaN;  }    [BUGGY]  Iterator  <  Complex>  it  =  this.getDivisors().iterator();  [BUGGY]    return  this.add(I).divide(I.subtract(this)).log()    .multiply(I.divide(createComplex(2.0,  0.0)));  .multiply(I.divide(createComplex(2.0,  0.0)));  }  [CLASS]  Complex  [METHOD]  atan  [RETURN_TYPE]  Complex  [VARIABLES]  boolean  isInfinite  isNaN  isZero  double  addend  c  d  denominator  divisor  factor  imaginary  q  real  subtrahend  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  	projects/Math46/src/main/java/org/apache/commons/math/complex/Complex.java	0.4082482904638631	587	588	2	replace	Iterator  <  Complex>  it  =  this.getDivisors().iterator();	      Iterator    <    Complex>    it    =    this.getINFs().iterator();    	non-compiled	[CE]  ';'  expected	20	None	replace
23	[BUG]  [BUGGY]  return  this.add(INF).log().multiply(I.divide(createComplex(1.0,  0.0)));  [CE]  ';'  expected  [FE]            AssertionError    [CONTEXT]    public  Complex  atan()  {  if  (isNaN)  {  return  NaN;  }    [BUGGY]  return  this.add(INF).log().multiply(I.divide(createComplex(1.0,  0.0)));  [BUGGY]    .multiply(I.divide(createComplex(2.0,  0.0)));  }  [CLASS]  Complex  [METHOD]  atan  [RETURN_TYPE]  Complex  [VARIABLES]  boolean  isInfinite  isNaN  isZero  double  addend  c  d  denominator  divisor  factor  imaginary  q  real  subtrahend  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  	projects/Math46/src/main/java/org/apache/commons/math/complex/Complex.java	0.4082482904638631	587	588	2	replace	return  this.add(INF).log().multiply(I.divide(createComplex(1.0,  0.0)));	  return    this.add(INF).log().multiply(I.divide(createComplex(2.0,    0.0)));    	non-compiled	[CE]  ';'  expected	3	None	replace
24	[BUG]  [BUGGY]  return  this.add(INF).log().multiply(I.divide(createComplex(0.0,  0.0)));  [CE]  ';'  expected  [FE]              AssertionError    [CONTEXT]    public  Complex  atan()  {  if  (isNaN)  {  return  NaN;  }    [BUGGY]  return  this.add(INF).log().multiply(I.divide(createComplex(0.0,  0.0)));  [BUGGY]    .multiply(I.divide(createComplex(2.0,  0.0)));  }  [CLASS]  Complex  [METHOD]  atan  [RETURN_TYPE]  Complex  [VARIABLES]  boolean  isInfinite  isNaN  isZero  double  addend  c  d  denominator  divisor  factor  imaginary  q  real  subtrahend  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  	projects/Math46/src/main/java/org/apache/commons/math/complex/Complex.java	0.4082482904638631	587	588	2	replace	return  this.add(INF).log().multiply(I.divide(createComplex(0.0,  0.0)));	  return    this.add(INF).log().multiply(I.divide(createComplex(2.0,    0.0)));    	non-compiled	[CE]  ';'  expected	3	None	replace
25	[BUG]  [BUGGY]  return  this.add(INF).log().multiply(I.divide(createComplex(2.0,  1.0)));  [CE]  ';'  expected  [FE]                AssertionError    [CONTEXT]    public  Complex  atan()  {  if  (isNaN)  {  return  NaN;  }    [BUGGY]  return  this.add(INF).log().multiply(I.divide(createComplex(2.0,  1.0)));  [BUGGY]    .multiply(I.divide(createComplex(2.0,  0.0)));  }  [CLASS]  Complex  [METHOD]  atan  [RETURN_TYPE]  Complex  [VARIABLES]  boolean  isInfinite  isNaN  isZero  double  addend  c  d  denominator  divisor  factor  imaginary  q  real  subtrahend  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  	projects/Math46/src/main/java/org/apache/commons/math/complex/Complex.java	0.4082482904638631	587	588	2	replace	return  this.add(INF).log().multiply(I.divide(createComplex(2.0,  1.0)));	  return    this.add(INF).log().multiply(I.divide(createComplex(2.0,    0.0)));    	non-compiled	[CE]  ';'  expected	3	None	replace
26	[BUG]  [BUGGY]  if(isInfinite)  {  if(!isZero)  {  return  Complex.EMPTY;  }  [CE]  ';'  expected  [FE]            AssertionError    [CONTEXT]    public  Complex  atan()  {  if  (isNaN)  {  return  NaN;  }    [BUGGY]  if(isInfinite)  {  if(!isZero)  {  return  Complex.EMPTY;  }  [BUGGY]    return  this.add(I).divide(I.subtract(this)).log()    .multiply(I.divide(createComplex(2.0,  0.0)));  .multiply(I.divide(createComplex(2.0,  0.0)));  }  [CLASS]  Complex  [METHOD]  atan  [RETURN_TYPE]  Complex  [VARIABLES]  boolean  isInfinite  isNaN  isZero  double  addend  c  d  denominator  divisor  factor  imaginary  q  real  subtrahend  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  	projects/Math46/src/main/java/org/apache/commons/math/complex/Complex.java	0.4082482904638631	587	588	2	replace	if(isInfinite)  {  if(!isZero)  {  return  Complex.EMPTY;  }	      if(isNaN)    {    if(!isZero)    {    return    Complex.EMPTY;    }    	non-compiled	[CE]  ';'  expected	14	None	replace
27	[BUG]  [BUGGY]  if(isNaN  ||  isInfinite)  {  if(!isZero)  {  return  Complex.EMPTY;  }  [CE]  ';'  expected  [FE]              AssertionError    [CONTEXT]    public  Complex  atan()  {  if  (isNaN)  {  return  NaN;  }    [BUGGY]  if(isNaN  ||  isInfinite)  {  if(!isZero)  {  return  Complex.EMPTY;  }  [BUGGY]    return  this.add(I).divide(I.subtract(this)).log()    .multiply(I.divide(createComplex(2.0,  0.0)));  .multiply(I.divide(createComplex(2.0,  0.0)));  }  [CLASS]  Complex  [METHOD]  atan  [RETURN_TYPE]  Complex  [VARIABLES]  boolean  isInfinite  isNaN  isZero  double  addend  c  d  denominator  divisor  factor  imaginary  q  real  subtrahend  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  	projects/Math46/src/main/java/org/apache/commons/math/complex/Complex.java	0.4082482904638631	587	588	2	replace	if(isNaN  ||  isInfinite)  {  if(!isZero)  {  return  Complex.EMPTY;  }	      if(isNaN)    {    if(!isZero)    {    return    Complex.EMPTY;    }    	non-compiled	[CE]  ';'  expected	14	None	replace
28	[BUG]  [BUGGY]  if(isNaN)  {  if(!isInfinite)  {  return  Complex.EMPTY;  }  [CE]  ';'  expected  [FE]                AssertionError    [CONTEXT]    public  Complex  atan()  {  if  (isNaN)  {  return  NaN;  }    [BUGGY]  if(isNaN)  {  if(!isInfinite)  {  return  Complex.EMPTY;  }  [BUGGY]    return  this.add(I).divide(I.subtract(this)).log()    .multiply(I.divide(createComplex(2.0,  0.0)));  .multiply(I.divide(createComplex(2.0,  0.0)));  }  [CLASS]  Complex  [METHOD]  atan  [RETURN_TYPE]  Complex  [VARIABLES]  boolean  isInfinite  isNaN  isZero  double  addend  c  d  denominator  divisor  factor  imaginary  q  real  subtrahend  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  	projects/Math46/src/main/java/org/apache/commons/math/complex/Complex.java	0.4082482904638631	587	588	2	replace	if(isNaN)  {  if(!isInfinite)  {  return  Complex.EMPTY;  }	      if(isNaN)    {    if(!isZero)    {    return    Complex.EMPTY;    }    	non-compiled	[CE]  ';'  expected	14	None	replace
29	[BUG]  [BUGGY]  .multiply(I.divide(createComplex(2.0,  0.0)));  [CE]  ';'  expected  [FE]                AssertionError    [CONTEXT]    public  Complex  atan()  {  if  (isNaN)  {  return  NaN;  }    [BUGGY]  .multiply(I.divide(createComplex(2.0,  0.0)));  [BUGGY]    .multiply(I.divide(createComplex(2.0,  0.0)));  }  [CLASS]  Complex  [METHOD]  atan  [RETURN_TYPE]  Complex  [VARIABLES]  boolean  isInfinite  isNaN  isZero  double  addend  c  d  denominator  divisor  factor  imaginary  q  real  subtrahend  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  	projects/Math46/src/main/java/org/apache/commons/math/complex/Complex.java	0.4082482904638631	587	588	2	replace	.multiply(I.divide(createComplex(2.0,  0.0)));	      	non-compiled	[CE]  ';'  expected	5	None	replace
30	[BUG]  [BUGGY]  if(isNaN  ||  isInfinite)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  ';'  expected  [FE]                  AssertionError    [CONTEXT]    public  Complex  atan()  {  if  (isNaN)  {  return  NaN;  }    [BUGGY]  if(isNaN  ||  isInfinite)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]    .multiply(I.divide(createComplex(2.0,  0.0)));  }  [CLASS]  Complex  [METHOD]  atan  [RETURN_TYPE]  Complex  [VARIABLES]  boolean  isInfinite  isNaN  isZero  double  addend  c  d  denominator  divisor  factor  imaginary  q  real  subtrahend  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  	projects/Math46/src/main/java/org/apache/commons/math/complex/Complex.java	0.4082482904638631	587	588	2	replace	if(isNaN  ||  isInfinite)  {  throw  new  IllegalArgumentException( " ");  }	      	non-compiled	[CE]  ';'  expected	5	None	replace
31	[BUG]  [BUGGY]  if(isNaN)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  ';'  expected  [FE]                    AssertionError    [CONTEXT]    public  Complex  atan()  {  if  (isNaN)  {  return  NaN;  }    [BUGGY]  if(isNaN)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]    .multiply(I.divide(createComplex(2.0,  0.0)));  }  [CLASS]  Complex  [METHOD]  atan  [RETURN_TYPE]  Complex  [VARIABLES]  boolean  isInfinite  isNaN  isZero  double  addend  c  d  denominator  divisor  factor  imaginary  q  real  subtrahend  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  	projects/Math46/src/main/java/org/apache/commons/math/complex/Complex.java	0.4082482904638631	587	588	2	replace	if(isNaN)  {  throw  new  IllegalArgumentException( " ");  }	      	non-compiled	[CE]  ';'  expected	5	None	replace
32	[BUG]  [BUGGY]  .multiply(I.divide(createComplex(2.0,  1.0)));  [CE]  ';'  expected  [FE]                      AssertionError    [CONTEXT]    public  Complex  atan()  {  if  (isNaN)  {  return  NaN;  }    [BUGGY]  .multiply(I.divide(createComplex(2.0,  1.0)));  [BUGGY]    .multiply(I.divide(createComplex(2.0,  0.0)));  }  [CLASS]  Complex  [METHOD]  atan  [RETURN_TYPE]  Complex  [VARIABLES]  boolean  isInfinite  isNaN  isZero  double  addend  c  d  denominator  divisor  factor  imaginary  q  real  subtrahend  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  	projects/Math46/src/main/java/org/apache/commons/math/complex/Complex.java	0.4082482904638631	587	588	2	replace	.multiply(I.divide(createComplex(2.0,  1.0)));	      	non-compiled	[CE]  ';'  expected	5	None	replace
33	[BUG]  [BUGGY]  if(isInfinite  ||  isZero)  {  return  Complex.ZERO;  }  else  {  return  Complex.ZERO;  }  [CE]  ';'  expected  [FE]                AssertionError    [CONTEXT]    public  Complex  atan()  {  if  (isNaN)  {  return  NaN;  }    [BUGGY]  if(isInfinite  ||  isZero)  {  return  Complex.ZERO;  }  else  {  return  Complex.ZERO;  }  [BUGGY]    return  this.add(I).divide(I.subtract(this)).log()    .multiply(I.divide(createComplex(2.0,  0.0)));  .multiply(I.divide(createComplex(2.0,  0.0)));  }  [CLASS]  Complex  [METHOD]  atan  [RETURN_TYPE]  Complex  [VARIABLES]  boolean  isInfinite  isNaN  isZero  double  addend  c  d  denominator  divisor  factor  imaginary  q  real  subtrahend  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  	projects/Math46/src/main/java/org/apache/commons/math/complex/Complex.java	0.4082482904638631	587	588	2	replace	if(isInfinite  ||  isZero)  {  return  Complex.ZERO;  }  else  {  return  Complex.ZERO;  }	      if(isNaN    ||    isZero)    {    return    Complex.ZERO;    }    else    {    return    Complex.ZERO;    }    	non-compiled	[CE]  ';'  expected	16	None	replace
34	[BUG]  [BUGGY]  if(isNaN  ||  isInfinite)  {  return  Complex.ZERO;  }  else  {  return  Complex.ZERO;  }  [CE]  ';'  expected  [FE]                  AssertionError    [CONTEXT]    public  Complex  atan()  {  if  (isNaN)  {  return  NaN;  }    [BUGGY]  if(isNaN  ||  isInfinite)  {  return  Complex.ZERO;  }  else  {  return  Complex.ZERO;  }  [BUGGY]    return  this.add(I).divide(I.subtract(this)).log()    .multiply(I.divide(createComplex(2.0,  0.0)));  .multiply(I.divide(createComplex(2.0,  0.0)));  }  [CLASS]  Complex  [METHOD]  atan  [RETURN_TYPE]  Complex  [VARIABLES]  boolean  isInfinite  isNaN  isZero  double  addend  c  d  denominator  divisor  factor  imaginary  q  real  subtrahend  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  	projects/Math46/src/main/java/org/apache/commons/math/complex/Complex.java	0.4082482904638631	587	588	2	replace	if(isNaN  ||  isInfinite)  {  return  Complex.ZERO;  }  else  {  return  Complex.ZERO;  }	      if(isNaN    ||    isZero)    {    return    Complex.ZERO;    }    else    {    return    Complex.ZERO;    }    	non-compiled	[CE]  ';'  expected	16	None	replace
35	[BUG]  [BUGGY]  ||  isInfinite)  {  return  Complex.ZERO;  }  else  {  return  Complex.ZERO;  }  [CE]  ';'  expected  [FE]                    AssertionError    [CONTEXT]    public  Complex  atan()  {  if  (isNaN)  {  return  NaN;  }    [BUGGY]  ||  isInfinite)  {  return  Complex.ZERO;  }  else  {  return  Complex.ZERO;  }  [BUGGY]    return  this.add(I).divide(I.subtract(this)).log()    .multiply(I.divide(createComplex(2.0,  0.0)));  .multiply(I.divide(createComplex(2.0,  0.0)));  }  [CLASS]  Complex  [METHOD]  atan  [RETURN_TYPE]  Complex  [VARIABLES]  boolean  isInfinite  isNaN  isZero  double  addend  c  d  denominator  divisor  factor  imaginary  q  real  subtrahend  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  	projects/Math46/src/main/java/org/apache/commons/math/complex/Complex.java	0.4082482904638631	587	588	2	replace	||  isInfinite)  {  return  Complex.ZERO;  }  else  {  return  Complex.ZERO;  }	      if(isNaN    ||    isZero)    {    return    Complex.ZERO;    }    else    {    return    Complex.ZERO;    }    	non-compiled	[CE]  ';'  expected	16	None	replace
36	[BUG]  [BUGGY]  this.add(I).log().multiply(I.divide(createComplex(1.0,  0.0)));  [CE]  ';'  expected  [FE]            AssertionError    [CONTEXT]    public  Complex  atan()  {  if  (isNaN)  {  return  NaN;  }    [BUGGY]  this.add(I).log().multiply(I.divide(createComplex(1.0,  0.0)));  [BUGGY]    return  this.add(I).divide(I.subtract(this)).log()    .multiply(I.divide(createComplex(2.0,  0.0)));  .multiply(I.divide(createComplex(2.0,  0.0)));  }  [CLASS]  Complex  [METHOD]  atan  [RETURN_TYPE]  Complex  [VARIABLES]  boolean  isInfinite  isNaN  isZero  double  addend  c  d  denominator  divisor  factor  imaginary  q  real  subtrahend  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  	projects/Math46/src/main/java/org/apache/commons/math/complex/Complex.java	0.4082482904638631	587	588	2	replace	this.add(I).log().multiply(I.divide(createComplex(1.0,  0.0)));	      this.add(INF).log().multiply(I.divide(createComplex(1.0,    0.0)));    	non-compiled	[CE]  ';'  expected	8	None	replace
37	[BUG]  [BUGGY]  if(isNaN)  {  if(!isInfinite)  {  return  NaN;  }  [CE]  ';'  expected  [FE]          AssertionError    [CONTEXT]    public  Complex  atan()  {  if  (isNaN)  {  return  NaN;  }    [BUGGY]  if(isNaN)  {  if(!isInfinite)  {  return  NaN;  }  [BUGGY]    return  this.add(I).divide(I.subtract(this)).log()    .multiply(I.divide(createComplex(2.0,  0.0)));  .multiply(I.divide(createComplex(2.0,  0.0)));  }  [CLASS]  Complex  [METHOD]  atan  [RETURN_TYPE]  Complex  [VARIABLES]  boolean  isInfinite  isNaN  isZero  double  addend  c  d  denominator  divisor  factor  imaginary  q  real  subtrahend  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  	projects/Math46/src/main/java/org/apache/commons/math/complex/Complex.java	0.4082482904638631	587	588	2	replace	if(isNaN)  {  if(!isInfinite)  {  return  NaN;  }	      if(isNaN)    {    if(!isZero)    {    return    NaN;    }    	non-compiled	[CE]  ';'  expected	13	None	replace
38	[BUG]  [BUGGY]  Annotated.isInfinite(this))  {  if(!isZero)  {  return  NaN;  }  [CE]  ';'  expected  [FE]            AssertionError    [CONTEXT]    public  Complex  atan()  {  if  (isNaN)  {  return  NaN;  }    [BUGGY]  Annotated.isInfinite(this))  {  if(!isZero)  {  return  NaN;  }  [BUGGY]    return  this.add(I).divide(I.subtract(this)).log()    .multiply(I.divide(createComplex(2.0,  0.0)));  .multiply(I.divide(createComplex(2.0,  0.0)));  }  [CLASS]  Complex  [METHOD]  atan  [RETURN_TYPE]  Complex  [VARIABLES]  boolean  isInfinite  isNaN  isZero  double  addend  c  d  denominator  divisor  factor  imaginary  q  real  subtrahend  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  	projects/Math46/src/main/java/org/apache/commons/math/complex/Complex.java	0.4082482904638631	587	588	2	replace	Annotated.isInfinite(this))  {  if(!isZero)  {  return  NaN;  }	      if(isNaN)    {    if(!isZero)    {    return    NaN;    }    	non-compiled	[CE]  ';'  expected	13	None	replace
39	[BUG]  [BUGGY]  if(isInfinite  ||  isZero)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  [FE]                AssertionError    [CONTEXT]    public  Complex  atan()  {  if  (isNaN)  {  return  NaN;  }    [BUGGY]  if(isInfinite  ||  isZero)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]    return  this.add(I).divide(I.subtract(this)).log()    .multiply(I.divide(createComplex(2.0,  0.0)));  .multiply(I.divide(createComplex(2.0,  0.0)));  }  [CLASS]  Complex  [METHOD]  atan  [RETURN_TYPE]  Complex  [VARIABLES]  boolean  isInfinite  isNaN  isZero  double  addend  c  d  denominator  divisor  factor  imaginary  q  real  subtrahend  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  	projects/Math46/src/main/java/org/apache/commons/math/complex/Complex.java	0.4082482904638631	587	588	2	replace	if(isInfinite  ||  isZero)  {  throw  new  IllegalArgumentException( " ");  }	      if(isNaN    ||    isZero)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  	10	None	replace
40	[BUG]  [BUGGY]  if(isNaN  ||  isZero  ||  isInfinite)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  [FE]                  AssertionError    [CONTEXT]    public  Complex  atan()  {  if  (isNaN)  {  return  NaN;  }    [BUGGY]  if(isNaN  ||  isZero  ||  isInfinite)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]    return  this.add(I).divide(I.subtract(this)).log()    .multiply(I.divide(createComplex(2.0,  0.0)));  .multiply(I.divide(createComplex(2.0,  0.0)));  }  [CLASS]  Complex  [METHOD]  atan  [RETURN_TYPE]  Complex  [VARIABLES]  boolean  isInfinite  isNaN  isZero  double  addend  c  d  denominator  divisor  factor  imaginary  q  real  subtrahend  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  	projects/Math46/src/main/java/org/apache/commons/math/complex/Complex.java	0.4082482904638631	587	588	2	replace	if(isNaN  ||  isZero  ||  isInfinite)  {  throw  new  IllegalArgumentException( " ");  }	      if(isNaN    ||    isZero)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  	10	None	replace
41	[BUG]  [BUGGY]  if(isInfinite)  {  if(!isNaN)  {  return  NaN;  }  [CE]  ';'  expected  [FE]        AssertionError    [CONTEXT]    public  Complex  atan()  {  if  (isNaN)  {  return  NaN;  }    [BUGGY]  if(isInfinite)  {  if(!isNaN)  {  return  NaN;  }  [BUGGY]    return  this.add(I).divide(I.subtract(this)).log()    .multiply(I.divide(createComplex(2.0,  0.0)));  .multiply(I.divide(createComplex(2.0,  0.0)));  }  [CLASS]  Complex  [METHOD]  atan  [RETURN_TYPE]  Complex  [VARIABLES]  boolean  isInfinite  isNaN  isZero  double  addend  c  d  denominator  divisor  factor  imaginary  q  real  subtrahend  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  	projects/Math46/src/main/java/org/apache/commons/math/complex/Complex.java	0.4082482904638631	587	588	2	replace	if(isInfinite)  {  if(!isNaN)  {  return  NaN;  }	      if(isInfinite)    {    if(!isZero)    {    return    NaN;    }    	non-compiled	[CE]  ';'  expected	17	None	replace
42	[BUG]  [BUGGY]  if(isInfinite  ||  isZero)  {  if(!isZero)  {  return  NaN;  }  [CE]  ';'  expected  [FE]          AssertionError    [CONTEXT]    public  Complex  atan()  {  if  (isNaN)  {  return  NaN;  }    [BUGGY]  if(isInfinite  ||  isZero)  {  if(!isZero)  {  return  NaN;  }  [BUGGY]    return  this.add(I).divide(I.subtract(this)).log()    .multiply(I.divide(createComplex(2.0,  0.0)));  .multiply(I.divide(createComplex(2.0,  0.0)));  }  [CLASS]  Complex  [METHOD]  atan  [RETURN_TYPE]  Complex  [VARIABLES]  boolean  isInfinite  isNaN  isZero  double  addend  c  d  denominator  divisor  factor  imaginary  q  real  subtrahend  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  	projects/Math46/src/main/java/org/apache/commons/math/complex/Complex.java	0.4082482904638631	587	588	2	replace	if(isInfinite  ||  isZero)  {  if(!isZero)  {  return  NaN;  }	      if(isInfinite)    {    if(!isZero)    {    return    NaN;    }    	non-compiled	[CE]  ';'  expected	17	None	replace
43	[BUG]  [BUGGY]  return  this.add(real).subtract(I.subtract(this)).log().multiply(I.divide(createComplex(2.0,  0.0)));  [CE]  ';'  expected  [FE]          AssertionError    [CONTEXT]    public  Complex  atan()  {  if  (isNaN)  {  return  NaN;  }    [BUGGY]  return  this.add(real).subtract(I.subtract(this)).log().multiply(I.divide(createComplex(2.0,  0.0)));  [BUGGY]    .multiply(I.divide(createComplex(2.0,  0.0)));  }  [CLASS]  Complex  [METHOD]  atan  [RETURN_TYPE]  Complex  [VARIABLES]  boolean  isInfinite  isNaN  isZero  double  addend  c  d  denominator  divisor  factor  imaginary  q  real  subtrahend  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  	projects/Math46/src/main/java/org/apache/commons/math/complex/Complex.java	0.4082482904638631	587	588	2	replace	return  this.add(real).subtract(I.subtract(this)).log().multiply(I.divide(createComplex(2.0,  0.0)));	  return    this.add(INF).subtract(I.subtract(this)).log().multiply(I.divide(createComplex(2.0,    0.0)));    	non-compiled	[CE]  ';'  expected	2	None	replace
44	[BUG]  [BUGGY]  if(isNaN  &&  isZero)  {  return  Complex.ZERO;  }  [CE]  ';'  expected  [FE]              AssertionError    [CONTEXT]    public  Complex  atan()  {  if  (isNaN)  {  return  NaN;  }    [BUGGY]  if(isNaN  &&  isZero)  {  return  Complex.ZERO;  }  [BUGGY]    return  this.add(I).divide(I.subtract(this)).log()    .multiply(I.divide(createComplex(2.0,  0.0)));  .multiply(I.divide(createComplex(2.0,  0.0)));  }  [CLASS]  Complex  [METHOD]  atan  [RETURN_TYPE]  Complex  [VARIABLES]  boolean  isInfinite  isNaN  isZero  double  addend  c  d  denominator  divisor  factor  imaginary  q  real  subtrahend  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  	projects/Math46/src/main/java/org/apache/commons/math/complex/Complex.java	0.4082482904638631	587	588	2	replace	if(isNaN  &&  isZero)  {  return  Complex.ZERO;  }	      if(isNaN    ||    isZero)    {    return    Complex.ZERO;    }    	non-compiled	[CE]  ';'  expected	15	None	replace
45	[BUG]  [BUGGY]  return  this.add(infinite).multiply(I.subtract(this)).log().multiply(I.divide(createComplex(2.0,  0.0)));  [CE]  [FE]              AssertionError    [CONTEXT]    public  Complex  atan()  {  if  (isNaN)  {  return  NaN;  }    [BUGGY]  return  this.add(infinite).multiply(I.subtract(this)).log().multiply(I.divide(createComplex(2.0,  0.0)));  [BUGGY]    .multiply(I.divide(createComplex(2.0,  0.0)));  }  [CLASS]  Complex  [METHOD]  atan  [RETURN_TYPE]  Complex  [VARIABLES]  boolean  isInfinite  isNaN  isZero  double  addend  c  d  denominator  divisor  factor  imaginary  q  real  subtrahend  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  	projects/Math46/src/main/java/org/apache/commons/math/complex/Complex.java	0.4082482904638631	587	588	2	replace	return  this.add(infinite).multiply(I.subtract(this)).log().multiply(I.divide(createComplex(2.0,  0.0)));	  return    this.add(INF).multiply(I.subtract(this)).log().multiply(I.divide(createComplex(2.0,    0.0)));    	non-compiled	[CE]  	4	None	replace
46	[BUG]  [BUGGY]  if(isInfinite)  {  if(isNaN  ||  isZero)  {  return  NaN;  }  [CE]  [FE]            AssertionError    [CONTEXT]    public  Complex  atan()  {  if  (isNaN)  {  return  NaN;  }    [BUGGY]  if(isInfinite)  {  if(isNaN  ||  isZero)  {  return  NaN;  }  [BUGGY]    return  this.add(I).divide(I.subtract(this)).log()    .multiply(I.divide(createComplex(2.0,  0.0)));  .multiply(I.divide(createComplex(2.0,  0.0)));  }  [CLASS]  Complex  [METHOD]  atan  [RETURN_TYPE]  Complex  [VARIABLES]  boolean  isInfinite  isNaN  isZero  double  addend  c  d  denominator  divisor  factor  imaginary  q  real  subtrahend  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  	projects/Math46/src/main/java/org/apache/commons/math/complex/Complex.java	0.4082482904638631	587	588	2	replace	if(isInfinite)  {  if(isNaN  ||  isZero)  {  return  NaN;  }	      if(isInfinite)    {    if(isZero)    {    return    NaN;    }    	non-compiled	[CE]  	19	None	replace
47	[BUG]  [BUGGY]  if(isNaN  ||  isZero)  {  return  Complex.ONE;  }  else  {  return  Complex.ZERO;  }  [CE]  [FE]                AssertionError    [CONTEXT]    public  Complex  atan()  {  if  (isNaN)  {  return  NaN;  }    [BUGGY]  if(isNaN  ||  isZero)  {  return  Complex.ONE;  }  else  {  return  Complex.ZERO;  }  [BUGGY]    return  this.add(I).divide(I.subtract(this)).log()    .multiply(I.divide(createComplex(2.0,  0.0)));  .multiply(I.divide(createComplex(2.0,  0.0)));  }  [CLASS]  Complex  [METHOD]  atan  [RETURN_TYPE]  Complex  [VARIABLES]  boolean  isInfinite  isNaN  isZero  double  addend  c  d  denominator  divisor  factor  imaginary  q  real  subtrahend  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  	projects/Math46/src/main/java/org/apache/commons/math/complex/Complex.java	0.4082482904638631	587	588	2	replace	if(isNaN  ||  isZero)  {  return  Complex.ONE;  }  else  {  return  Complex.ZERO;  }	      if(isNaN    ||    isZero)    {    return    Complex.ZERO;    }    else    {    return    Complex.ZERO;    }    	non-compiled	[CE]  	16	None	replace
48	[BUG]  [BUGGY]  Real.multiply(I.divide(createComplex(2.0,  0.0)));  [CE]  [FE]                AssertionError    [CONTEXT]    public  Complex  atan()  {  if  (isNaN)  {  return  NaN;  }    [BUGGY]  Real.multiply(I.divide(createComplex(2.0,  0.0)));  [BUGGY]    .multiply(I.divide(createComplex(2.0,  0.0)));  }  [CLASS]  Complex  [METHOD]  atan  [RETURN_TYPE]  Complex  [VARIABLES]  boolean  isInfinite  isNaN  isZero  double  addend  c  d  denominator  divisor  factor  imaginary  q  real  subtrahend  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  	projects/Math46/src/main/java/org/apache/commons/math/complex/Complex.java	0.4082482904638631	587	588	2	replace	Real.multiply(I.divide(createComplex(2.0,  0.0)));	      	non-compiled	[CE]  	5	None	replace
49	[BUG]  [BUGGY]  if(isNaN  ||  isInfinite)  {  return  NaN;  }  [CE]  [FE]                  AssertionError    [CONTEXT]    public  Complex  atan()  {  if  (isNaN)  {  return  NaN;  }    [BUGGY]  if(isNaN  ||  isInfinite)  {  return  NaN;  }  [BUGGY]    .multiply(I.divide(createComplex(2.0,  0.0)));  }  [CLASS]  Complex  [METHOD]  atan  [RETURN_TYPE]  Complex  [VARIABLES]  boolean  isInfinite  isNaN  isZero  double  addend  c  d  denominator  divisor  factor  imaginary  q  real  subtrahend  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  	projects/Math46/src/main/java/org/apache/commons/math/complex/Complex.java	0.4082482904638631	587	588	2	replace	if(isNaN  ||  isInfinite)  {  return  NaN;  }	      	non-compiled	[CE]  	5	None	replace
50	[BUG]  [BUGGY]  Iterator  <  Complex>  it  =  atans().iterator();  [CE]  [FE]          AssertionError    [CONTEXT]    public  Complex  atan()  {  if  (isNaN)  {  return  NaN;  }    [BUGGY]  Iterator  <  Complex>  it  =  atans().iterator();  [BUGGY]    return  this.add(I).divide(I.subtract(this)).log()    .multiply(I.divide(createComplex(2.0,  0.0)));  .multiply(I.divide(createComplex(2.0,  0.0)));  }  [CLASS]  Complex  [METHOD]  atan  [RETURN_TYPE]  Complex  [VARIABLES]  boolean  isInfinite  isNaN  isZero  double  addend  c  d  denominator  divisor  factor  imaginary  q  real  subtrahend  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  	projects/Math46/src/main/java/org/apache/commons/math/complex/Complex.java	0.4082482904638631	587	588	2	replace	Iterator  <  Complex>  it  =  atans().iterator();	      if(isNaN)    {    if(!isZero)    {    return    NaN;    }    	non-compiled	[CE]  	13	None	replace
51	[BUG]  [BUGGY]  Context.checkInfinite(isNaN);  [CE]  [FE]            AssertionError    [CONTEXT]    public  Complex  atan()  {  if  (isNaN)  {  return  NaN;  }    [BUGGY]  Context.checkInfinite(isNaN);  [BUGGY]    return  this.add(I).divide(I.subtract(this)).log()    .multiply(I.divide(createComplex(2.0,  0.0)));  .multiply(I.divide(createComplex(2.0,  0.0)));  }  [CLASS]  Complex  [METHOD]  atan  [RETURN_TYPE]  Complex  [VARIABLES]  boolean  isInfinite  isNaN  isZero  double  addend  c  d  denominator  divisor  factor  imaginary  q  real  subtrahend  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  	projects/Math46/src/main/java/org/apache/commons/math/complex/Complex.java	0.4082482904638631	587	588	2	replace	Context.checkInfinite(isNaN);	      if(isNaN)    {    if(!isZero)    {    return    NaN;    }    	non-compiled	[CE]  	13	None	replace
52	[BUG]  [BUGGY]  Iterator  <  Complex>  it  =  factor.iterator();  [CE]  [FE]        AssertionError    [CONTEXT]    public  Complex  atan()  {  if  (isNaN)  {  return  NaN;  }    [BUGGY]  Iterator  <  Complex>  it  =  factor.iterator();  [BUGGY]    return  this.add(I).divide(I.subtract(this)).log()    .multiply(I.divide(createComplex(2.0,  0.0)));  .multiply(I.divide(createComplex(2.0,  0.0)));  }  [CLASS]  Complex  [METHOD]  atan  [RETURN_TYPE]  Complex  [VARIABLES]  boolean  isInfinite  isNaN  isZero  double  addend  c  d  denominator  divisor  factor  imaginary  q  real  subtrahend  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  	projects/Math46/src/main/java/org/apache/commons/math/complex/Complex.java	0.4082482904638631	587	588	2	replace	Iterator  <  Complex>  it  =  factor.iterator();	      if(isNaN)    {    if(!isZero)    {    return    Complex.ZERO;    }    	non-compiled	[CE]  	12	None	replace
53	[BUG]  [BUGGY]  if(isNaN  ||  isZero)  {  throw  new  IllegalArgumentException( " ".);  }  [CE]  [FE]                AssertionError    [CONTEXT]    public  Complex  atan()  {  if  (isNaN)  {  return  NaN;  }    [BUGGY]  if(isNaN  ||  isZero)  {  throw  new  IllegalArgumentException( " ".);  }  [BUGGY]    return  this.add(I).divide(I.subtract(this)).log()    .multiply(I.divide(createComplex(2.0,  0.0)));  .multiply(I.divide(createComplex(2.0,  0.0)));  }  [CLASS]  Complex  [METHOD]  atan  [RETURN_TYPE]  Complex  [VARIABLES]  boolean  isInfinite  isNaN  isZero  double  addend  c  d  denominator  divisor  factor  imaginary  q  real  subtrahend  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  	projects/Math46/src/main/java/org/apache/commons/math/complex/Complex.java	0.4082482904638631	587	588	2	replace	if(isNaN  ||  isZero)  {  throw  new  IllegalArgumentException( " ".);  }	      if(isNaN    ||    isZero)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  	10	None	replace
54	[BUG]  [BUGGY]  this.add(INF).log().multiply(I.divide(createNaN(1.0,  0.0)));  [CE]  [FE]              AssertionError    [CONTEXT]    public  Complex  atan()  {  if  (isNaN)  {  return  NaN;  }    [BUGGY]  this.add(INF).log().multiply(I.divide(createNaN(1.0,  0.0)));  [BUGGY]    return  this.add(I).divide(I.subtract(this)).log()    .multiply(I.divide(createComplex(2.0,  0.0)));  .multiply(I.divide(createComplex(2.0,  0.0)));  }  [CLASS]  Complex  [METHOD]  atan  [RETURN_TYPE]  Complex  [VARIABLES]  boolean  isInfinite  isNaN  isZero  double  addend  c  d  denominator  divisor  factor  imaginary  q  real  subtrahend  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  	projects/Math46/src/main/java/org/apache/commons/math/complex/Complex.java	0.4082482904638631	587	588	2	replace	this.add(INF).log().multiply(I.divide(createNaN(1.0,  0.0)));	      this.add(INF).log().multiply(I.divide(createNaN(0.0,    0.0)));    	non-compiled	[CE]  	9	None	replace
55	[BUG]  [BUGGY]  this.add(INF).log().multiply(I.divide(createNaN(2.0,  0.0)));  [CE]  [FE]                AssertionError    [CONTEXT]    public  Complex  atan()  {  if  (isNaN)  {  return  NaN;  }    [BUGGY]  this.add(INF).log().multiply(I.divide(createNaN(2.0,  0.0)));  [BUGGY]    return  this.add(I).divide(I.subtract(this)).log()    .multiply(I.divide(createComplex(2.0,  0.0)));  .multiply(I.divide(createComplex(2.0,  0.0)));  }  [CLASS]  Complex  [METHOD]  atan  [RETURN_TYPE]  Complex  [VARIABLES]  boolean  isInfinite  isNaN  isZero  double  addend  c  d  denominator  divisor  factor  imaginary  q  real  subtrahend  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  	projects/Math46/src/main/java/org/apache/commons/math/complex/Complex.java	0.4082482904638631	587	588	2	replace	this.add(INF).log().multiply(I.divide(createNaN(2.0,  0.0)));	      this.add(INF).log().multiply(I.divide(createNaN(0.0,    0.0)));    	non-compiled	[CE]  	9	None	replace
56	[BUG]  [BUGGY]  return  this.add(infinite).divide(I.subtract(this)).log().multiply(I.divide(createComplex(0.0,  0.0)));  [CE]  [FE]        AssertionError    [CONTEXT]    public  Complex  atan()  {  if  (isNaN)  {  return  NaN;  }    [BUGGY]  return  this.add(infinite).divide(I.subtract(this)).log().multiply(I.divide(createComplex(0.0,  0.0)));  [BUGGY]    .multiply(I.divide(createComplex(2.0,  0.0)));  }  [CLASS]  Complex  [METHOD]  atan  [RETURN_TYPE]  Complex  [VARIABLES]  boolean  isInfinite  isNaN  isZero  double  addend  c  d  denominator  divisor  factor  imaginary  q  real  subtrahend  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  	projects/Math46/src/main/java/org/apache/commons/math/complex/Complex.java	0.4082482904638631	587	588	2	replace	return  this.add(infinite).divide(I.subtract(this)).log().multiply(I.divide(createComplex(0.0,  0.0)));	  return    this.add(INF).divide(I.subtract(this)).log().multiply(I.divide(createComplex(0.0,    0.0)));    	non-compiled	[CE]  	11	None	replace
57	[BUG]  [BUGGY]  if(!isInfinite)  {  return  Complex.ZERO;  }  [CE]  [FE]        AssertionError    [CONTEXT]    public  Complex  atan()  {  if  (isNaN)  {  return  NaN;  }    [BUGGY]  if(!isInfinite)  {  return  Complex.ZERO;  }  [BUGGY]    return  this.add(I).divide(I.subtract(this)).log()    .multiply(I.divide(createComplex(2.0,  0.0)));  .multiply(I.divide(createComplex(2.0,  0.0)));  }  [CLASS]  Complex  [METHOD]  atan  [RETURN_TYPE]  Complex  [VARIABLES]  boolean  isInfinite  isNaN  isZero  double  addend  c  d  denominator  divisor  factor  imaginary  q  real  subtrahend  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  	projects/Math46/src/main/java/org/apache/commons/math/complex/Complex.java	0.4082482904638631	587	588	2	replace	if(!isInfinite)  {  return  Complex.ZERO;  }	      if(isNaN)    {    if(!isZero)    {    return    Complex.ZERO;    }    	non-compiled	[CE]  	12	None	replace
58	[BUG]  [BUGGY]  if(isInfinite)  {  if(!isZero)return  Complex.ZERO;  }  [CE]  [FE]          AssertionError    [CONTEXT]    public  Complex  atan()  {  if  (isNaN)  {  return  NaN;  }    [BUGGY]  if(isInfinite)  {  if(!isZero)return  Complex.ZERO;  }  [BUGGY]    return  this.add(I).divide(I.subtract(this)).log()    .multiply(I.divide(createComplex(2.0,  0.0)));  .multiply(I.divide(createComplex(2.0,  0.0)));  }  [CLASS]  Complex  [METHOD]  atan  [RETURN_TYPE]  Complex  [VARIABLES]  boolean  isInfinite  isNaN  isZero  double  addend  c  d  denominator  divisor  factor  imaginary  q  real  subtrahend  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  	projects/Math46/src/main/java/org/apache/commons/math/complex/Complex.java	0.4082482904638631	587	588	2	replace	if(isInfinite)  {  if(!isZero)return  Complex.ZERO;  }	      if(isNaN)    {    if(!isZero)    {    return    Complex.ZERO;    }    	non-compiled	[CE]  	12	None	replace
59	[BUG]  [BUGGY]  if(!isInfinite)  {  return  Complex.EMPTY;  }  [CE]  [FE]            AssertionError    [CONTEXT]    public  Complex  atan()  {  if  (isNaN)  {  return  NaN;  }    [BUGGY]  if(!isInfinite)  {  return  Complex.EMPTY;  }  [BUGGY]    return  this.add(I).divide(I.subtract(this)).log()    .multiply(I.divide(createComplex(2.0,  0.0)));  .multiply(I.divide(createComplex(2.0,  0.0)));  }  [CLASS]  Complex  [METHOD]  atan  [RETURN_TYPE]  Complex  [VARIABLES]  boolean  isInfinite  isNaN  isZero  double  addend  c  d  denominator  divisor  factor  imaginary  q  real  subtrahend  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  	projects/Math46/src/main/java/org/apache/commons/math/complex/Complex.java	0.4082482904638631	587	588	2	replace	if(!isInfinite)  {  return  Complex.EMPTY;  }	      if(isNaN)    {    if(!isZero)    {    return    Complex.EMPTY;    }    	non-compiled	[CE]  	14	None	replace
60	[BUG]  [BUGGY]  return  this.add(INF).subtract(I.subtract(this)).log().multiply(I.divide(createComplex(0.0,  0.0)));  [CE]  [FE]          AssertionError    [CONTEXT]    public  Complex  atan()  {  if  (isNaN)  {  return  NaN;  }    [BUGGY]  return  this.add(INF).subtract(I.subtract(this)).log().multiply(I.divide(createComplex(0.0,  0.0)));  [BUGGY]    .multiply(I.divide(createComplex(2.0,  0.0)));  }  [CLASS]  Complex  [METHOD]  atan  [RETURN_TYPE]  Complex  [VARIABLES]  boolean  isInfinite  isNaN  isZero  double  addend  c  d  denominator  divisor  factor  imaginary  q  real  subtrahend  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  	projects/Math46/src/main/java/org/apache/commons/math/complex/Complex.java	0.4082482904638631	587	588	2	replace	return  this.add(INF).subtract(I.subtract(this)).log().multiply(I.divide(createComplex(0.0,  0.0)));	  return    this.add(INF).subtract(I.subtract(this)).log().multiply(I.divide(createComplex(2.0,    0.0)));    	non-compiled	[CE]  	2	None	replace
61	[BUG]  [BUGGY]  return  this.add(infinite).divide(I.subtract(this)).log().multiply(I.divide(createComplex(2.0,  0.0)));  [CE]  [FE]        AssertionError    [CONTEXT]    public  Complex  atan()  {  if  (isNaN)  {  return  NaN;  }    [BUGGY]  return  this.add(infinite).divide(I.subtract(this)).log().multiply(I.divide(createComplex(2.0,  0.0)));  [BUGGY]    .multiply(I.divide(createComplex(2.0,  0.0)));  }  [CLASS]  Complex  [METHOD]  atan  [RETURN_TYPE]  Complex  [VARIABLES]  boolean  isInfinite  isNaN  isZero  double  addend  c  d  denominator  divisor  factor  imaginary  q  real  subtrahend  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  	projects/Math46/src/main/java/org/apache/commons/math/complex/Complex.java	0.4082482904638631	587	588	2	replace	return  this.add(infinite).divide(I.subtract(this)).log().multiply(I.divide(createComplex(2.0,  0.0)));	  return    this.add(INF).divide(I.subtract(this)).log().multiply(I.divide(createComplex(2.0,    0.0)));    	non-compiled	[CE]  	1	None	replace
62	[BUG]  [BUGGY]  if(isInfinite)  {  return  Complex.ZERO;  }  else  {  return  Complex.ZERO;  }  [CE]  [FE]                AssertionError    [CONTEXT]    public  Complex  atan()  {  if  (isNaN)  {  return  NaN;  }    [BUGGY]  if(isInfinite)  {  return  Complex.ZERO;  }  else  {  return  Complex.ZERO;  }  [BUGGY]    return  this.add(I).divide(I.subtract(this)).log()    .multiply(I.divide(createComplex(2.0,  0.0)));  .multiply(I.divide(createComplex(2.0,  0.0)));  }  [CLASS]  Complex  [METHOD]  atan  [RETURN_TYPE]  Complex  [VARIABLES]  boolean  isInfinite  isNaN  isZero  double  addend  c  d  denominator  divisor  factor  imaginary  q  real  subtrahend  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  	projects/Math46/src/main/java/org/apache/commons/math/complex/Complex.java	0.4082482904638631	587	588	2	replace	if(isInfinite)  {  return  Complex.ZERO;  }  else  {  return  Complex.ZERO;  }	      if(isNaN    ||    isZero)    {    return    Complex.ZERO;    }    else    {    return    Complex.ZERO;    }    	non-compiled	[CE]  	16	None	replace
63	[BUG]  [BUGGY]  if(isNaN  ||  isInfinite)  {  if(!isZero)  {  return  NaN;  }  [CE]  [FE]          AssertionError    [CONTEXT]    public  Complex  atan()  {  if  (isNaN)  {  return  NaN;  }    [BUGGY]  if(isNaN  ||  isInfinite)  {  if(!isZero)  {  return  NaN;  }  [BUGGY]    return  this.add(I).divide(I.subtract(this)).log()    .multiply(I.divide(createComplex(2.0,  0.0)));  .multiply(I.divide(createComplex(2.0,  0.0)));  }  [CLASS]  Complex  [METHOD]  atan  [RETURN_TYPE]  Complex  [VARIABLES]  boolean  isInfinite  isNaN  isZero  double  addend  c  d  denominator  divisor  factor  imaginary  q  real  subtrahend  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  	projects/Math46/src/main/java/org/apache/commons/math/complex/Complex.java	0.4082482904638631	587	588	2	replace	if(isNaN  ||  isInfinite)  {  if(!isZero)  {  return  NaN;  }	      if(isNaN)    {    if(!isZero)    {    return    NaN;    }    	non-compiled	[CE]  	13	None	replace
64	[BUG]  [BUGGY]  if(!isInfinite)  {  return  NaN;  }  [CE]  [FE]            AssertionError    [CONTEXT]    public  Complex  atan()  {  if  (isNaN)  {  return  NaN;  }    [BUGGY]  if(!isInfinite)  {  return  NaN;  }  [BUGGY]    return  this.add(I).divide(I.subtract(this)).log()    .multiply(I.divide(createComplex(2.0,  0.0)));  .multiply(I.divide(createComplex(2.0,  0.0)));  }  [CLASS]  Complex  [METHOD]  atan  [RETURN_TYPE]  Complex  [VARIABLES]  boolean  isInfinite  isNaN  isZero  double  addend  c  d  denominator  divisor  factor  imaginary  q  real  subtrahend  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  	projects/Math46/src/main/java/org/apache/commons/math/complex/Complex.java	0.4082482904638631	587	588	2	replace	if(!isInfinite)  {  return  NaN;  }	      if(isNaN)    {    if(!isZero)    {    return    NaN;    }    	non-compiled	[CE]  	13	None	replace
65	[BUG]  [BUGGY]  if(isInfinite)  {  if(!isNaN  ||!isZero)  {  return  Complex.ZERO;  }  [CE]  [FE]                AssertionError    [CONTEXT]    public  Complex  atan()  {  if  (isNaN)  {  return  NaN;  }    [BUGGY]  if(isInfinite)  {  if(!isNaN  ||!isZero)  {  return  Complex.ZERO;  }  [BUGGY]    return  this.add(I).divide(I.subtract(this)).log()    .multiply(I.divide(createComplex(2.0,  0.0)));  .multiply(I.divide(createComplex(2.0,  0.0)));  }  [CLASS]  Complex  [METHOD]  atan  [RETURN_TYPE]  Complex  [VARIABLES]  boolean  isInfinite  isNaN  isZero  double  addend  c  d  denominator  divisor  factor  imaginary  q  real  subtrahend  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  	projects/Math46/src/main/java/org/apache/commons/math/complex/Complex.java	0.4082482904638631	587	588	2	replace	if(isInfinite)  {  if(!isNaN  ||!isZero)  {  return  Complex.ZERO;  }	      if(isInfinite)    {    if(!isZero)    {    return    Complex.ZERO;    }    	non-compiled	[CE]  	21	None	replace
66	[BUG]  [BUGGY]  Iterator  <  Complex>  it  =  this.getInFs().iterator();  [CE]  [FE]              AssertionError    [CONTEXT]    public  Complex  atan()  {  if  (isNaN)  {  return  NaN;  }    [BUGGY]  Iterator  <  Complex>  it  =  this.getInFs().iterator();  [BUGGY]    return  this.add(I).divide(I.subtract(this)).log()    .multiply(I.divide(createComplex(2.0,  0.0)));  .multiply(I.divide(createComplex(2.0,  0.0)));  }  [CLASS]  Complex  [METHOD]  atan  [RETURN_TYPE]  Complex  [VARIABLES]  boolean  isInfinite  isNaN  isZero  double  addend  c  d  denominator  divisor  factor  imaginary  q  real  subtrahend  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  	projects/Math46/src/main/java/org/apache/commons/math/complex/Complex.java	0.4082482904638631	587	588	2	replace	Iterator  <  Complex>  it  =  this.getInFs().iterator();	      Iterator    <    Complex>    it    =    this.getINFs().iterator();    	non-compiled	[CE]  	20	None	replace
