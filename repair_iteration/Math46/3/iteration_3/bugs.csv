bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  if(isInfinite  ||  isZero)  {  return  NaN;  }  [CE]  [FE]                AssertionError      [CONTEXT]      public  Complex  atan()  {  if  (isNaN)  {  return  NaN;  }      [BUGGY]  if(isInfinite  ||  isZero)  {  return  NaN;  }  [BUGGY]      return  this.add(I).divide(I.subtract(this)).log()    .multiply(I.divide(createComplex(2.0,  0.0)));  .multiply(I.divide(createComplex(2.0,  0.0)));  }  [CLASS]  Complex  [METHOD]  atan  [RETURN_TYPE]  Complex  [VARIABLES]  boolean  isInfinite  isNaN  isZero  double  addend  c  d  denominator  divisor  factor  imaginary  q  real  subtrahend  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  	projects/Math46/src/main/java/org/apache/commons/math/complex/Complex.java	0.4082482904638631	587	588	2	replace	if(isInfinite  ||  isZero)  {  return  NaN;  }	  if(isInfinite)    {    if(isNaN    ||    isZero)    {    return    NaN;    }    	non-compiled	[CE]  	46	None	replace
2	[BUG]  [BUGGY]  Annotated.isInfinite(this)  {  if(isNaN  ||  isZero)  {  return  NaN;  }  [CE]  [FE]                  AssertionError      [CONTEXT]      public  Complex  atan()  {  if  (isNaN)  {  return  NaN;  }      [BUGGY]  Annotated.isInfinite(this)  {  if(isNaN  ||  isZero)  {  return  NaN;  }  [BUGGY]      return  this.add(I).divide(I.subtract(this)).log()    .multiply(I.divide(createComplex(2.0,  0.0)));  .multiply(I.divide(createComplex(2.0,  0.0)));  }  [CLASS]  Complex  [METHOD]  atan  [RETURN_TYPE]  Complex  [VARIABLES]  boolean  isInfinite  isNaN  isZero  double  addend  c  d  denominator  divisor  factor  imaginary  q  real  subtrahend  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  	projects/Math46/src/main/java/org/apache/commons/math/complex/Complex.java	0.4082482904638631	587	588	2	replace	Annotated.isInfinite(this)  {  if(isNaN  ||  isZero)  {  return  NaN;  }	  if(isInfinite)    {    if(isNaN    ||    isZero)    {    return    NaN;    }    	non-compiled	[CE]  	46	None	replace
3	[BUG]  [BUGGY]  Annotation  <?>  isInfinite  =  isNaN  ||  isZero)  {  return  NaN;  }  [CE]  [FE]                    AssertionError      [CONTEXT]      public  Complex  atan()  {  if  (isNaN)  {  return  NaN;  }      [BUGGY]  Annotation  <?>  isInfinite  =  isNaN  ||  isZero)  {  return  NaN;  }  [BUGGY]      return  this.add(I).divide(I.subtract(this)).log()    .multiply(I.divide(createComplex(2.0,  0.0)));  .multiply(I.divide(createComplex(2.0,  0.0)));  }  [CLASS]  Complex  [METHOD]  atan  [RETURN_TYPE]  Complex  [VARIABLES]  boolean  isInfinite  isNaN  isZero  double  addend  c  d  denominator  divisor  factor  imaginary  q  real  subtrahend  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  	projects/Math46/src/main/java/org/apache/commons/math/complex/Complex.java	0.4082482904638631	587	588	2	replace	Annotation  <?>  isInfinite  =  isNaN  ||  isZero)  {  return  NaN;  }	  if(isInfinite)    {    if(isNaN    ||    isZero)    {    return    NaN;    }    	non-compiled	[CE]  	46	None	replace
4	[BUG]  [BUGGY]  Iterator  <  Complex>  it  =  this.factor.iterator();  [CE]  [FE]            AssertionError      [CONTEXT]      public  Complex  atan()  {  if  (isNaN)  {  return  NaN;  }      [BUGGY]  Iterator  <  Complex>  it  =  this.factor.iterator();  [BUGGY]      return  this.add(I).divide(I.subtract(this)).log()    .multiply(I.divide(createComplex(2.0,  0.0)));  .multiply(I.divide(createComplex(2.0,  0.0)));  }  [CLASS]  Complex  [METHOD]  atan  [RETURN_TYPE]  Complex  [VARIABLES]  boolean  isInfinite  isNaN  isZero  double  addend  c  d  denominator  divisor  factor  imaginary  q  real  subtrahend  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  	projects/Math46/src/main/java/org/apache/commons/math/complex/Complex.java	0.4082482904638631	587	588	2	replace	Iterator  <  Complex>  it  =  this.factor.iterator();	  Iterator    <    Complex>    it    =    factor.iterator();    	non-compiled	[CE]  	52	None	replace
5	[BUG]  [BUGGY]  Iterator  <  Complex>  it  =  this.faktor.iterator();  [CE]  [FE]              AssertionError      [CONTEXT]      public  Complex  atan()  {  if  (isNaN)  {  return  NaN;  }      [BUGGY]  Iterator  <  Complex>  it  =  this.faktor.iterator();  [BUGGY]      return  this.add(I).divide(I.subtract(this)).log()    .multiply(I.divide(createComplex(2.0,  0.0)));  .multiply(I.divide(createComplex(2.0,  0.0)));  }  [CLASS]  Complex  [METHOD]  atan  [RETURN_TYPE]  Complex  [VARIABLES]  boolean  isInfinite  isNaN  isZero  double  addend  c  d  denominator  divisor  factor  imaginary  q  real  subtrahend  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  	projects/Math46/src/main/java/org/apache/commons/math/complex/Complex.java	0.4082482904638631	587	588	2	replace	Iterator  <  Complex>  it  =  this.faktor.iterator();	  Iterator    <    Complex>    it    =    factor.iterator();    	non-compiled	[CE]  	52	None	replace
6	[BUG]  [BUGGY]  Iterator  <  Complex>  it  =  this.factors.iterator();  [CE]  [FE]                AssertionError      [CONTEXT]      public  Complex  atan()  {  if  (isNaN)  {  return  NaN;  }      [BUGGY]  Iterator  <  Complex>  it  =  this.factors.iterator();  [BUGGY]      return  this.add(I).divide(I.subtract(this)).log()    .multiply(I.divide(createComplex(2.0,  0.0)));  .multiply(I.divide(createComplex(2.0,  0.0)));  }  [CLASS]  Complex  [METHOD]  atan  [RETURN_TYPE]  Complex  [VARIABLES]  boolean  isInfinite  isNaN  isZero  double  addend  c  d  denominator  divisor  factor  imaginary  q  real  subtrahend  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  	projects/Math46/src/main/java/org/apache/commons/math/complex/Complex.java	0.4082482904638631	587	588	2	replace	Iterator  <  Complex>  it  =  this.factors.iterator();	  Iterator    <    Complex>    it    =    factor.iterator();    	non-compiled	[CE]  	52	None	replace
7	[BUG]  [BUGGY]  Real.multiply(I.divide(createComplex(1.0,  0.0)));  [CE]  [FE]                    AssertionError      [CONTEXT]      public  Complex  atan()  {  if  (isNaN)  {  return  NaN;  }      [BUGGY]  Real.multiply(I.divide(createComplex(1.0,  0.0)));  [BUGGY]      .multiply(I.divide(createComplex(2.0,  0.0)));  }  [CLASS]  Complex  [METHOD]  atan  [RETURN_TYPE]  Complex  [VARIABLES]  boolean  isInfinite  isNaN  isZero  double  addend  c  d  denominator  divisor  factor  imaginary  q  real  subtrahend  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  	projects/Math46/src/main/java/org/apache/commons/math/complex/Complex.java	0.4082482904638631	587	588	2	replace	Real.multiply(I.divide(createComplex(1.0,  0.0)));	  Real.multiply(I.divide(createComplex(2.0,    0.0)));    	non-compiled	[CE]  	48	None	replace
8	[BUG]  [BUGGY]  Real.multiply(I.divide(createComplex(0.0,  0.0)));  [CE]  [FE]                      AssertionError      [CONTEXT]      public  Complex  atan()  {  if  (isNaN)  {  return  NaN;  }      [BUGGY]  Real.multiply(I.divide(createComplex(0.0,  0.0)));  [BUGGY]      .multiply(I.divide(createComplex(2.0,  0.0)));  }  [CLASS]  Complex  [METHOD]  atan  [RETURN_TYPE]  Complex  [VARIABLES]  boolean  isInfinite  isNaN  isZero  double  addend  c  d  denominator  divisor  factor  imaginary  q  real  subtrahend  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  	projects/Math46/src/main/java/org/apache/commons/math/complex/Complex.java	0.4082482904638631	587	588	2	replace	Real.multiply(I.divide(createComplex(0.0,  0.0)));	  Real.multiply(I.divide(createComplex(2.0,    0.0)));    	non-compiled	[CE]  	48	None	replace
9	[BUG]  [BUGGY]  Real.multiply(I.divide(createComplex(2.0,  1.0)));  [CE]  [FE]                        AssertionError      [CONTEXT]      public  Complex  atan()  {  if  (isNaN)  {  return  NaN;  }      [BUGGY]  Real.multiply(I.divide(createComplex(2.0,  1.0)));  [BUGGY]      .multiply(I.divide(createComplex(2.0,  0.0)));  }  [CLASS]  Complex  [METHOD]  atan  [RETURN_TYPE]  Complex  [VARIABLES]  boolean  isInfinite  isNaN  isZero  double  addend  c  d  denominator  divisor  factor  imaginary  q  real  subtrahend  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  	projects/Math46/src/main/java/org/apache/commons/math/complex/Complex.java	0.4082482904638631	587	588	2	replace	Real.multiply(I.divide(createComplex(2.0,  1.0)));	  Real.multiply(I.divide(createComplex(2.0,    0.0)));    	non-compiled	[CE]  	48	None	replace
10	[BUG]  [BUGGY]  if(isNaN  ||  isInfinite)  {  if(isNaN)  {  return  NaN;  }  [CE]  [FE]                  AssertionError      [CONTEXT]      public  Complex  atan()  {  if  (isNaN)  {  return  NaN;  }      [BUGGY]  if(isNaN  ||  isInfinite)  {  if(isNaN)  {  return  NaN;  }  [BUGGY]      return  this.add(I).divide(I.subtract(this)).log()    .multiply(I.divide(createComplex(2.0,  0.0)));  .multiply(I.divide(createComplex(2.0,  0.0)));  }  [CLASS]  Complex  [METHOD]  atan  [RETURN_TYPE]  Complex  [VARIABLES]  boolean  isInfinite  isNaN  isZero  double  addend  c  d  denominator  divisor  factor  imaginary  q  real  subtrahend  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  	projects/Math46/src/main/java/org/apache/commons/math/complex/Complex.java	0.4082482904638631	587	588	2	replace	if(isNaN  ||  isInfinite)  {  if(isNaN)  {  return  NaN;  }	  if(isInfinite    ||    isZero)    {    if(isNaN)    {    return    NaN;    }    	non-compiled	[CE]  	9	None	replace
11	[BUG]  [BUGGY]  if(isInfinite  ||  isZero  ||  isNaN)  {  if(isNaN)  {  return  NaN;  }  [CE]  [FE]                    AssertionError      [CONTEXT]      public  Complex  atan()  {  if  (isNaN)  {  return  NaN;  }      [BUGGY]  if(isInfinite  ||  isZero  ||  isNaN)  {  if(isNaN)  {  return  NaN;  }  [BUGGY]      return  this.add(I).divide(I.subtract(this)).log()    .multiply(I.divide(createComplex(2.0,  0.0)));  .multiply(I.divide(createComplex(2.0,  0.0)));  }  [CLASS]  Complex  [METHOD]  atan  [RETURN_TYPE]  Complex  [VARIABLES]  boolean  isInfinite  isNaN  isZero  double  addend  c  d  denominator  divisor  factor  imaginary  q  real  subtrahend  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  	projects/Math46/src/main/java/org/apache/commons/math/complex/Complex.java	0.4082482904638631	587	588	2	replace	if(isInfinite  ||  isZero  ||  isNaN)  {  if(isNaN)  {  return  NaN;  }	  if(isInfinite    ||    isZero)    {    if(isNaN)    {    return    NaN;    }    	non-compiled	[CE]  	9	None	replace
12	[BUG]  [BUGGY]  if(isInfinite  ||  isInfinite)  {  if(!isZero)  {  return  NaN;  }  [CE]  [FE]              AssertionError      [CONTEXT]      public  Complex  atan()  {  if  (isNaN)  {  return  NaN;  }      [BUGGY]  if(isInfinite  ||  isInfinite)  {  if(!isZero)  {  return  NaN;  }  [BUGGY]      return  this.add(I).divide(I.subtract(this)).log()    .multiply(I.divide(createComplex(2.0,  0.0)));  .multiply(I.divide(createComplex(2.0,  0.0)));  }  [CLASS]  Complex  [METHOD]  atan  [RETURN_TYPE]  Complex  [VARIABLES]  boolean  isInfinite  isNaN  isZero  double  addend  c  d  denominator  divisor  factor  imaginary  q  real  subtrahend  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  	projects/Math46/src/main/java/org/apache/commons/math/complex/Complex.java	0.4082482904638631	587	588	2	replace	if(isInfinite  ||  isInfinite)  {  if(!isZero)  {  return  NaN;  }	  if(isNaN    ||    isInfinite)    {    if(!isZero)    {    return    NaN;    }    	non-compiled	[CE]  	63	None	replace
13	[BUG]  [BUGGY]  if(isInfinite  ||  isNaN)  {  if(!isZero)  {  return  NaN;  }  [CE]  [FE]                AssertionError      [CONTEXT]      public  Complex  atan()  {  if  (isNaN)  {  return  NaN;  }      [BUGGY]  if(isInfinite  ||  isNaN)  {  if(!isZero)  {  return  NaN;  }  [BUGGY]      return  this.add(I).divide(I.subtract(this)).log()    .multiply(I.divide(createComplex(2.0,  0.0)));  .multiply(I.divide(createComplex(2.0,  0.0)));  }  [CLASS]  Complex  [METHOD]  atan  [RETURN_TYPE]  Complex  [VARIABLES]  boolean  isInfinite  isNaN  isZero  double  addend  c  d  denominator  divisor  factor  imaginary  q  real  subtrahend  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  	projects/Math46/src/main/java/org/apache/commons/math/complex/Complex.java	0.4082482904638631	587	588	2	replace	if(isInfinite  ||  isNaN)  {  if(!isZero)  {  return  NaN;  }	  if(isNaN    ||    isInfinite)    {    if(!isZero)    {    return    NaN;    }    	non-compiled	[CE]  	63	None	replace
14	[BUG]  [BUGGY]  if(isNaN)  {  return  this.add(this.subtract(INF.subtract(this)).log().multiply(I.divide(createComplex(2.0,  0.0)));  }  [CE]  [FE]              AssertionError      [CONTEXT]      public  Complex  atan()  {  if  (isNaN)  {  return  NaN;  }      [BUGGY]  if(isNaN)  {  return  this.add(this.subtract(INF.subtract(this)).log().multiply(I.divide(createComplex(2.0,  0.0)));  }  [BUGGY]      .multiply(I.divide(createComplex(2.0,  0.0)));  }  [CLASS]  Complex  [METHOD]  atan  [RETURN_TYPE]  Complex  [VARIABLES]  boolean  isInfinite  isNaN  isZero  double  addend  c  d  denominator  divisor  factor  imaginary  q  real  subtrahend  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  	projects/Math46/src/main/java/org/apache/commons/math/complex/Complex.java	0.4082482904638631	587	588	2	replace	if(isNaN)  {  return  this.add(this.subtract(INF.subtract(this)).log().multiply(I.divide(createComplex(2.0,  0.0)));  }	  return    this.add(this.subtract(INF.subtract(this)).log().multiply(I.divide(createComplex(2.0,    0.0)));    	non-compiled	[CE]  	15	None	replace
15	[BUG]  [BUGGY]  if(isZero)  {  return  this.add(this.subtract(INF.subtract(this)).log().multiply(I.divide(createComplex(2.0,  0.0)));  }  [CE]  [FE]                AssertionError      [CONTEXT]      public  Complex  atan()  {  if  (isNaN)  {  return  NaN;  }      [BUGGY]  if(isZero)  {  return  this.add(this.subtract(INF.subtract(this)).log().multiply(I.divide(createComplex(2.0,  0.0)));  }  [BUGGY]      .multiply(I.divide(createComplex(2.0,  0.0)));  }  [CLASS]  Complex  [METHOD]  atan  [RETURN_TYPE]  Complex  [VARIABLES]  boolean  isInfinite  isNaN  isZero  double  addend  c  d  denominator  divisor  factor  imaginary  q  real  subtrahend  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  	projects/Math46/src/main/java/org/apache/commons/math/complex/Complex.java	0.4082482904638631	587	588	2	replace	if(isZero)  {  return  this.add(this.subtract(INF.subtract(this)).log().multiply(I.divide(createComplex(2.0,  0.0)));  }	  return    this.add(this.subtract(INF.subtract(this)).log().multiply(I.divide(createComplex(2.0,    0.0)));    	non-compiled	[CE]  	15	None	replace
16	[BUG]  [BUGGY]  return  this.add(this.subtract(INF.subtract(this)).log().multiply(I.divide(createComplex(0.0,  0.0)));  [CE]  [FE]                  AssertionError      [CONTEXT]      public  Complex  atan()  {  if  (isNaN)  {  return  NaN;  }      [BUGGY]  return  this.add(this.subtract(INF.subtract(this)).log().multiply(I.divide(createComplex(0.0,  0.0)));  [BUGGY]      .multiply(I.divide(createComplex(2.0,  0.0)));  }  [CLASS]  Complex  [METHOD]  atan  [RETURN_TYPE]  Complex  [VARIABLES]  boolean  isInfinite  isNaN  isZero  double  addend  c  d  denominator  divisor  factor  imaginary  q  real  subtrahend  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  	projects/Math46/src/main/java/org/apache/commons/math/complex/Complex.java	0.4082482904638631	587	588	2	replace	return  this.add(this.subtract(INF.subtract(this)).log().multiply(I.divide(createComplex(0.0,  0.0)));	  return    this.add(this.subtract(INF.subtract(this)).log().multiply(I.divide(createComplex(2.0,    0.0)));    	non-compiled	[CE]  	15	None	replace
17	[BUG]  [BUGGY]  if(isInfinite)  {  return  Complex.ZERO;  }  [CE]  [FE]            AssertionError      [CONTEXT]      public  Complex  atan()  {  if  (isNaN)  {  return  NaN;  }      [BUGGY]  if(isInfinite)  {  return  Complex.ZERO;  }  [BUGGY]      return  this.add(I).divide(I.subtract(this)).log()    .multiply(I.divide(createComplex(2.0,  0.0)));  .multiply(I.divide(createComplex(2.0,  0.0)));  }  [CLASS]  Complex  [METHOD]  atan  [RETURN_TYPE]  Complex  [VARIABLES]  boolean  isInfinite  isNaN  isZero  double  addend  c  d  denominator  divisor  factor  imaginary  q  real  subtrahend  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  	projects/Math46/src/main/java/org/apache/commons/math/complex/Complex.java	0.4082482904638631	587	588	2	replace	if(isInfinite)  {  return  Complex.ZERO;  }	  if(!isInfinite)    {    return    Complex.ZERO;    }    	non-compiled	[CE]  	57	None	replace
18	[BUG]  [BUGGY]  if(isNaN)  {  return  Complex.ZERO;  }  [CE]  [FE]              AssertionError      [CONTEXT]      public  Complex  atan()  {  if  (isNaN)  {  return  NaN;  }      [BUGGY]  if(isNaN)  {  return  Complex.ZERO;  }  [BUGGY]      return  this.add(I).divide(I.subtract(this)).log()    .multiply(I.divide(createComplex(2.0,  0.0)));  .multiply(I.divide(createComplex(2.0,  0.0)));  }  [CLASS]  Complex  [METHOD]  atan  [RETURN_TYPE]  Complex  [VARIABLES]  boolean  isInfinite  isNaN  isZero  double  addend  c  d  denominator  divisor  factor  imaginary  q  real  subtrahend  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  	projects/Math46/src/main/java/org/apache/commons/math/complex/Complex.java	0.4082482904638631	587	588	2	replace	if(isNaN)  {  return  Complex.ZERO;  }	  if(!isInfinite)    {    return    Complex.ZERO;    }    	non-compiled	[CE]  	57	None	replace
19	[BUG]  [BUGGY]  while(isInfinite  &&  isNaN)  {  return  Complex.ZERO;  }  [CE]  [FE]                AssertionError      [CONTEXT]      public  Complex  atan()  {  if  (isNaN)  {  return  NaN;  }      [BUGGY]  while(isInfinite  &&  isNaN)  {  return  Complex.ZERO;  }  [BUGGY]      return  this.add(I).divide(I.subtract(this)).log()    .multiply(I.divide(createComplex(2.0,  0.0)));  .multiply(I.divide(createComplex(2.0,  0.0)));  }  [CLASS]  Complex  [METHOD]  atan  [RETURN_TYPE]  Complex  [VARIABLES]  boolean  isInfinite  isNaN  isZero  double  addend  c  d  denominator  divisor  factor  imaginary  q  real  subtrahend  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  	projects/Math46/src/main/java/org/apache/commons/math/complex/Complex.java	0.4082482904638631	587	588	2	replace	while(isInfinite  &&  isNaN)  {  return  Complex.ZERO;  }	  if(!isInfinite)    {    return    Complex.ZERO;    }    	non-compiled	[CE]  	57	None	replace
20	[BUG]  [BUGGY]  if(isNaN)  {  return  this.add(infinite).subtract(I.subtract(this)).log().multiply(I.divide(createComplex(2.0,  0.0)));  }  [CE]  [FE]                AssertionError      [CONTEXT]      public  Complex  atan()  {  if  (isNaN)  {  return  NaN;  }      [BUGGY]  if(isNaN)  {  return  this.add(infinite).subtract(I.subtract(this)).log().multiply(I.divide(createComplex(2.0,  0.0)));  }  [BUGGY]      .multiply(I.divide(createComplex(2.0,  0.0)));  }  [CLASS]  Complex  [METHOD]  atan  [RETURN_TYPE]  Complex  [VARIABLES]  boolean  isInfinite  isNaN  isZero  double  addend  c  d  denominator  divisor  factor  imaginary  q  real  subtrahend  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  	projects/Math46/src/main/java/org/apache/commons/math/complex/Complex.java	0.4082482904638631	587	588	2	replace	if(isNaN)  {  return  this.add(infinite).subtract(I.subtract(this)).log().multiply(I.divide(createComplex(2.0,  0.0)));  }	  return    this.add(infinite).subtract(I.subtract(this)).log().multiply(I.divide(createComplex(2.0,    0.0)));    	non-compiled	[CE]  	16	None	replace
21	[BUG]  [BUGGY]  return  this.add(infinite).subtract(I.subtract(this)).log().multiply(I.divide(createComplex(0.0,  0.0)));  [CE]  [FE]                  AssertionError      [CONTEXT]      public  Complex  atan()  {  if  (isNaN)  {  return  NaN;  }      [BUGGY]  return  this.add(infinite).subtract(I.subtract(this)).log().multiply(I.divide(createComplex(0.0,  0.0)));  [BUGGY]      .multiply(I.divide(createComplex(2.0,  0.0)));  }  [CLASS]  Complex  [METHOD]  atan  [RETURN_TYPE]  Complex  [VARIABLES]  boolean  isInfinite  isNaN  isZero  double  addend  c  d  denominator  divisor  factor  imaginary  q  real  subtrahend  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  	projects/Math46/src/main/java/org/apache/commons/math/complex/Complex.java	0.4082482904638631	587	588	2	replace	return  this.add(infinite).subtract(I.subtract(this)).log().multiply(I.divide(createComplex(0.0,  0.0)));	  return    this.add(infinite).subtract(I.subtract(this)).log().multiply(I.divide(createComplex(2.0,    0.0)));    	non-compiled	[CE]  	16	None	replace
22	[BUG]  [BUGGY]  if(isZero)  {  return  this.add(INF).log().multiply(I.divide(createComplex(1.0,  0.0)));  }  [CE]  [FE]                AssertionError      [CONTEXT]      public  Complex  atan()  {  if  (isNaN)  {  return  NaN;  }      [BUGGY]  if(isZero)  {  return  this.add(INF).log().multiply(I.divide(createComplex(1.0,  0.0)));  }  [BUGGY]      .multiply(I.divide(createComplex(2.0,  0.0)));  }  [CLASS]  Complex  [METHOD]  atan  [RETURN_TYPE]  Complex  [VARIABLES]  boolean  isInfinite  isNaN  isZero  double  addend  c  d  denominator  divisor  factor  imaginary  q  real  subtrahend  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  	projects/Math46/src/main/java/org/apache/commons/math/complex/Complex.java	0.4082482904638631	587	588	2	replace	if(isZero)  {  return  this.add(INF).log().multiply(I.divide(createComplex(1.0,  0.0)));  }	  return    this.add(INF).log().multiply(I.divide(createComplex(1.0,    0.0)));    	non-compiled	[CE]  	23	None	replace
23	[BUG]  [BUGGY]  if(isNaN)  {  return  this.add(INF).log().multiply(I.divide(createComplex(1.0,  0.0)));  }  [CE]  [FE]                  AssertionError      [CONTEXT]      public  Complex  atan()  {  if  (isNaN)  {  return  NaN;  }      [BUGGY]  if(isNaN)  {  return  this.add(INF).log().multiply(I.divide(createComplex(1.0,  0.0)));  }  [BUGGY]      .multiply(I.divide(createComplex(2.0,  0.0)));  }  [CLASS]  Complex  [METHOD]  atan  [RETURN_TYPE]  Complex  [VARIABLES]  boolean  isInfinite  isNaN  isZero  double  addend  c  d  denominator  divisor  factor  imaginary  q  real  subtrahend  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  	projects/Math46/src/main/java/org/apache/commons/math/complex/Complex.java	0.4082482904638631	587	588	2	replace	if(isNaN)  {  return  this.add(INF).log().multiply(I.divide(createComplex(1.0,  0.0)));  }	  return    this.add(INF).log().multiply(I.divide(createComplex(1.0,    0.0)));    	non-compiled	[CE]  	23	None	replace
24	[BUG]  [BUGGY]  while(isInfinite  &&  isNaN)  {  return  this.add(INF).divide(I.subtract(this)).log().multiply(I.divide(createComplex(2.0,  0.0)));  }  [CE]  [FE]            AssertionError      [CONTEXT]      public  Complex  atan()  {  if  (isNaN)  {  return  NaN;  }      [BUGGY]  while(isInfinite  &&  isNaN)  {  return  this.add(INF).divide(I.subtract(this)).log().multiply(I.divide(createComplex(2.0,  0.0)));  }  [BUGGY]      .multiply(I.divide(createComplex(2.0,  0.0)));  }  [CLASS]  Complex  [METHOD]  atan  [RETURN_TYPE]  Complex  [VARIABLES]  boolean  isInfinite  isNaN  isZero  double  addend  c  d  denominator  divisor  factor  imaginary  q  real  subtrahend  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  	projects/Math46/src/main/java/org/apache/commons/math/complex/Complex.java	0.4082482904638631	587	588	2	replace	while(isInfinite  &&  isNaN)  {  return  this.add(INF).divide(I.subtract(this)).log().multiply(I.divide(createComplex(2.0,  0.0)));  }	  if(isNaN)    {    return    this.add(INF).divide(I.subtract(this)).log().multiply(I.divide(createComplex(2.0,    0.0)));    }    	non-compiled	[CE]  	1	None	replace
25	[BUG]  [BUGGY]  if(isInfinite)  {  if(isNaN)  {  return  NF.divide(I.subtract(this)).log().multiply(I.divide(createComplex(2.0,  0.0)));  }  [CE]  [FE]              AssertionError      [CONTEXT]      public  Complex  atan()  {  if  (isNaN)  {  return  NaN;  }      [BUGGY]  if(isInfinite)  {  if(isNaN)  {  return  NF.divide(I.subtract(this)).log().multiply(I.divide(createComplex(2.0,  0.0)));  }  [BUGGY]      .multiply(I.divide(createComplex(2.0,  0.0)));  }  [CLASS]  Complex  [METHOD]  atan  [RETURN_TYPE]  Complex  [VARIABLES]  boolean  isInfinite  isNaN  isZero  double  addend  c  d  denominator  divisor  factor  imaginary  q  real  subtrahend  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  	projects/Math46/src/main/java/org/apache/commons/math/complex/Complex.java	0.4082482904638631	587	588	2	replace	if(isInfinite)  {  if(isNaN)  {  return  NF.divide(I.subtract(this)).log().multiply(I.divide(createComplex(2.0,  0.0)));  }	  if(isNaN)    {    return    this.add(INF).divide(I.subtract(this)).log().multiply(I.divide(createComplex(2.0,    0.0)));    }    	non-compiled	[CE]  	1	None	replace
26	[BUG]  [BUGGY]  while(isInfinite  &&  isNaN)  {  return  this.add(INF).multiply(I.subtract(this)).log().multiply(I.divide(createComplex(2.0,  0.0)));  }  [CE]  [FE]                AssertionError      [CONTEXT]      public  Complex  atan()  {  if  (isNaN)  {  return  NaN;  }      [BUGGY]  while(isInfinite  &&  isNaN)  {  return  this.add(INF).multiply(I.subtract(this)).log().multiply(I.divide(createComplex(2.0,  0.0)));  }  [BUGGY]      .multiply(I.divide(createComplex(2.0,  0.0)));  }  [CLASS]  Complex  [METHOD]  atan  [RETURN_TYPE]  Complex  [VARIABLES]  boolean  isInfinite  isNaN  isZero  double  addend  c  d  denominator  divisor  factor  imaginary  q  real  subtrahend  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  	projects/Math46/src/main/java/org/apache/commons/math/complex/Complex.java	0.4082482904638631	587	588	2	replace	while(isInfinite  &&  isNaN)  {  return  this.add(INF).multiply(I.subtract(this)).log().multiply(I.divide(createComplex(2.0,  0.0)));  }	  if(isNaN)    {    return    this.add(INF).divide(I.subtract(this)).log().multiply(I.divide(createComplex(2.0,    0.0)));    }    	non-compiled	[CE]  	1	None	replace
27	[BUG]  [BUGGY]  while(isInfinite  &&  isNaN)  {  return  this.add(INF).subtract(I.subtract(this)).log().multiply(I.divide(createComplex(2.0,  0.0)));  }  [CE]  [FE]                  AssertionError      [CONTEXT]      public  Complex  atan()  {  if  (isNaN)  {  return  NaN;  }      [BUGGY]  while(isInfinite  &&  isNaN)  {  return  this.add(INF).subtract(I.subtract(this)).log().multiply(I.divide(createComplex(2.0,  0.0)));  }  [BUGGY]      .multiply(I.divide(createComplex(2.0,  0.0)));  }  [CLASS]  Complex  [METHOD]  atan  [RETURN_TYPE]  Complex  [VARIABLES]  boolean  isInfinite  isNaN  isZero  double  addend  c  d  denominator  divisor  factor  imaginary  q  real  subtrahend  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  	projects/Math46/src/main/java/org/apache/commons/math/complex/Complex.java	0.4082482904638631	587	588	2	replace	while(isInfinite  &&  isNaN)  {  return  this.add(INF).subtract(I.subtract(this)).log().multiply(I.divide(createComplex(2.0,  0.0)));  }	  if(isNaN)    {    return    this.add(INF).divide(I.subtract(this)).log().multiply(I.divide(createComplex(2.0,    0.0)));    }    	non-compiled	[CE]  	1	None	replace
28	[BUG]  [BUGGY]  if(isInfinite  ||  isNaN)  {  if(!isZero)  {  return  Complex.ZERO;  }  [CE]  [FE]                        AssertionError      [CONTEXT]      public  Complex  atan()  {  if  (isNaN)  {  return  NaN;  }      [BUGGY]  if(isInfinite  ||  isNaN)  {  if(!isZero)  {  return  Complex.ZERO;  }  [BUGGY]      return  this.add(I).divide(I.subtract(this)).log()    .multiply(I.divide(createComplex(2.0,  0.0)));  .multiply(I.divide(createComplex(2.0,  0.0)));  }  [CLASS]  Complex  [METHOD]  atan  [RETURN_TYPE]  Complex  [VARIABLES]  boolean  isInfinite  isNaN  isZero  double  addend  c  d  denominator  divisor  factor  imaginary  q  real  subtrahend  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  	projects/Math46/src/main/java/org/apache/commons/math/complex/Complex.java	0.4082482904638631	587	588	2	replace	if(isInfinite  ||  isNaN)  {  if(!isZero)  {  return  Complex.ZERO;  }	  if(isNaN    ||    isInfinite)    {    if(!isZero)    {    return    Complex.ZERO;    }    	non-compiled	[CE]  	20	None	replace
29	[BUG]  [BUGGY]  if(isInfinite  ||  isInfinite)  {  if(!isZero)  {  return  Complex.ZERO;  }  [CE]  [FE]                          AssertionError      [CONTEXT]      public  Complex  atan()  {  if  (isNaN)  {  return  NaN;  }      [BUGGY]  if(isInfinite  ||  isInfinite)  {  if(!isZero)  {  return  Complex.ZERO;  }  [BUGGY]      return  this.add(I).divide(I.subtract(this)).log()    .multiply(I.divide(createComplex(2.0,  0.0)));  .multiply(I.divide(createComplex(2.0,  0.0)));  }  [CLASS]  Complex  [METHOD]  atan  [RETURN_TYPE]  Complex  [VARIABLES]  boolean  isInfinite  isNaN  isZero  double  addend  c  d  denominator  divisor  factor  imaginary  q  real  subtrahend  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  	projects/Math46/src/main/java/org/apache/commons/math/complex/Complex.java	0.4082482904638631	587	588	2	replace	if(isInfinite  ||  isInfinite)  {  if(!isZero)  {  return  Complex.ZERO;  }	  if(isNaN    ||    isInfinite)    {    if(!isZero)    {    return    Complex.ZERO;    }    	non-compiled	[CE]  	20	None	replace
30	[BUG]  [BUGGY]  if(isInfinite  ||  isNaN)  {  return  NaN;  }  [CE]  [FE]                      AssertionError      [CONTEXT]      public  Complex  atan()  {  if  (isNaN)  {  return  NaN;  }      [BUGGY]  if(isInfinite  ||  isNaN)  {  return  NaN;  }  [BUGGY]      .multiply(I.divide(createComplex(2.0,  0.0)));  }  [CLASS]  Complex  [METHOD]  atan  [RETURN_TYPE]  Complex  [VARIABLES]  boolean  isInfinite  isNaN  isZero  double  addend  c  d  denominator  divisor  factor  imaginary  q  real  subtrahend  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  	projects/Math46/src/main/java/org/apache/commons/math/complex/Complex.java	0.4082482904638631	587	588	2	replace	if(isInfinite  ||  isNaN)  {  return  NaN;  }	  if(isNaN    ||    isInfinite)    {    return    NaN;    }    	non-compiled	[CE]  	49	None	replace
31	[BUG]  [BUGGY]  if(isNaN  ||  isZero)  {  return  NaN;  }  [CE]  [FE]                        AssertionError      [CONTEXT]      public  Complex  atan()  {  if  (isNaN)  {  return  NaN;  }      [BUGGY]  if(isNaN  ||  isZero)  {  return  NaN;  }  [BUGGY]      .multiply(I.divide(createComplex(2.0,  0.0)));  }  [CLASS]  Complex  [METHOD]  atan  [RETURN_TYPE]  Complex  [VARIABLES]  boolean  isInfinite  isNaN  isZero  double  addend  c  d  denominator  divisor  factor  imaginary  q  real  subtrahend  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  	projects/Math46/src/main/java/org/apache/commons/math/complex/Complex.java	0.4082482904638631	587	588	2	replace	if(isNaN  ||  isZero)  {  return  NaN;  }	  if(isNaN    ||    isInfinite)    {    return    NaN;    }    	non-compiled	[CE]  	49	None	replace
32	[BUG]  [BUGGY]  if(isInfinite  &&  isZero)  {  if(!isZero)  {  return  NaN;  }  [CE]  ';'  expected  [FE]              AssertionError      [CONTEXT]      public  Complex  atan()  {  if  (isNaN)  {  return  NaN;  }      [BUGGY]  if(isInfinite  &&  isZero)  {  if(!isZero)  {  return  NaN;  }  [BUGGY]      return  this.add(I).divide(I.subtract(this)).log()    .multiply(I.divide(createComplex(2.0,  0.0)));  .multiply(I.divide(createComplex(2.0,  0.0)));  }  [CLASS]  Complex  [METHOD]  atan  [RETURN_TYPE]  Complex  [VARIABLES]  boolean  isInfinite  isNaN  isZero  double  addend  c  d  denominator  divisor  factor  imaginary  q  real  subtrahend  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  	projects/Math46/src/main/java/org/apache/commons/math/complex/Complex.java	0.4082482904638631	587	588	2	replace	if(isInfinite  &&  isZero)  {  if(!isZero)  {  return  NaN;  }	  if(isInfinite    ||    isZero)    {    if(!isZero)    {    return    NaN;    }    	non-compiled	[CE]  ';'  expected	42	None	replace
33	[BUG]  [BUGGY]  if(isInfinite  ||  isZero)  {  if(!isNaN)  {  return  NaN;  }  [CE]  ';'  expected  [FE]                AssertionError      [CONTEXT]      public  Complex  atan()  {  if  (isNaN)  {  return  NaN;  }      [BUGGY]  if(isInfinite  ||  isZero)  {  if(!isNaN)  {  return  NaN;  }  [BUGGY]      return  this.add(I).divide(I.subtract(this)).log()    .multiply(I.divide(createComplex(2.0,  0.0)));  .multiply(I.divide(createComplex(2.0,  0.0)));  }  [CLASS]  Complex  [METHOD]  atan  [RETURN_TYPE]  Complex  [VARIABLES]  boolean  isInfinite  isNaN  isZero  double  addend  c  d  denominator  divisor  factor  imaginary  q  real  subtrahend  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  	projects/Math46/src/main/java/org/apache/commons/math/complex/Complex.java	0.4082482904638631	587	588	2	replace	if(isInfinite  ||  isZero)  {  if(!isNaN)  {  return  NaN;  }	  if(isInfinite    ||    isZero)    {    if(!isZero)    {    return    NaN;    }    	non-compiled	[CE]  ';'  expected	42	None	replace
34	[BUG]  [BUGGY]  Iterator  <  Complex>  it  =  this.getDenominator().iterator();  [CE]  ';'  expected  [FE]                  AssertionError      [CONTEXT]      public  Complex  atan()  {  if  (isNaN)  {  return  NaN;  }      [BUGGY]  Iterator  <  Complex>  it  =  this.getDenominator().iterator();  [BUGGY]      return  this.add(I).divide(I.subtract(this)).log()    .multiply(I.divide(createComplex(2.0,  0.0)));  .multiply(I.divide(createComplex(2.0,  0.0)));  }  [CLASS]  Complex  [METHOD]  atan  [RETURN_TYPE]  Complex  [VARIABLES]  boolean  isInfinite  isNaN  isZero  double  addend  c  d  denominator  divisor  factor  imaginary  q  real  subtrahend  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  	projects/Math46/src/main/java/org/apache/commons/math/complex/Complex.java	0.4082482904638631	587	588	2	replace	Iterator  <  Complex>  it  =  this.getDenominator().iterator();	  Iterator    <    Complex>    it    =    this.getDivisor().iterator();    	non-compiled	[CE]  ';'  expected	21	None	replace
35	[BUG]  [BUGGY]  Iterator  <  Complex>  it  =  this.getDivisor().entrySet().iterator();  [CE]  ';'  expected  [FE]                    AssertionError      [CONTEXT]      public  Complex  atan()  {  if  (isNaN)  {  return  NaN;  }      [BUGGY]  Iterator  <  Complex>  it  =  this.getDivisor().entrySet().iterator();  [BUGGY]      return  this.add(I).divide(I.subtract(this)).log()    .multiply(I.divide(createComplex(2.0,  0.0)));  .multiply(I.divide(createComplex(2.0,  0.0)));  }  [CLASS]  Complex  [METHOD]  atan  [RETURN_TYPE]  Complex  [VARIABLES]  boolean  isInfinite  isNaN  isZero  double  addend  c  d  denominator  divisor  factor  imaginary  q  real  subtrahend  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  	projects/Math46/src/main/java/org/apache/commons/math/complex/Complex.java	0.4082482904638631	587	588	2	replace	Iterator  <  Complex>  it  =  this.getDivisor().entrySet().iterator();	  Iterator    <    Complex>    it    =    this.getDivisor().iterator();    	non-compiled	[CE]  ';'  expected	21	None	replace
36	[BUG]  [BUGGY]  Iterator  <  Complex>  it  =  this.getDivisor().values().iterator();  [CE]  ';'  expected  [FE]                      AssertionError      [CONTEXT]      public  Complex  atan()  {  if  (isNaN)  {  return  NaN;  }      [BUGGY]  Iterator  <  Complex>  it  =  this.getDivisor().values().iterator();  [BUGGY]      return  this.add(I).divide(I.subtract(this)).log()    .multiply(I.divide(createComplex(2.0,  0.0)));  .multiply(I.divide(createComplex(2.0,  0.0)));  }  [CLASS]  Complex  [METHOD]  atan  [RETURN_TYPE]  Complex  [VARIABLES]  boolean  isInfinite  isNaN  isZero  double  addend  c  d  denominator  divisor  factor  imaginary  q  real  subtrahend  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  	projects/Math46/src/main/java/org/apache/commons/math/complex/Complex.java	0.4082482904638631	587	588	2	replace	Iterator  <  Complex>  it  =  this.getDivisor().values().iterator();	  Iterator    <    Complex>    it    =    this.getDivisor().iterator();    	non-compiled	[CE]  ';'  expected	21	None	replace
37	[BUG]  [BUGGY]  if(isInfinite  &&  isZero)  {  return  Complex.ZERO;  }  [CE]  ';'  expected  [FE]                  AssertionError      [CONTEXT]      public  Complex  atan()  {  if  (isNaN)  {  return  NaN;  }      [BUGGY]  if(isInfinite  &&  isZero)  {  return  Complex.ZERO;  }  [BUGGY]      return  this.add(I).divide(I.subtract(this)).log()    .multiply(I.divide(createComplex(2.0,  0.0)));  .multiply(I.divide(createComplex(2.0,  0.0)));  }  [CLASS]  Complex  [METHOD]  atan  [RETURN_TYPE]  Complex  [VARIABLES]  boolean  isInfinite  isNaN  isZero  double  addend  c  d  denominator  divisor  factor  imaginary  q  real  subtrahend  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  	projects/Math46/src/main/java/org/apache/commons/math/complex/Complex.java	0.4082482904638631	587	588	2	replace	if(isInfinite  &&  isZero)  {  return  Complex.ZERO;  }	  if(isNaN    &&    isZero)    {    return    Complex.ZERO;    }    	non-compiled	[CE]  ';'  expected	44	None	replace
38	[BUG]  [BUGGY]  if(isInfinite  &&  isNaN)  {  return  Complex.ZERO;  }  [CE]  ';'  expected  [FE]                    AssertionError      [CONTEXT]      public  Complex  atan()  {  if  (isNaN)  {  return  NaN;  }      [BUGGY]  if(isInfinite  &&  isNaN)  {  return  Complex.ZERO;  }  [BUGGY]      return  this.add(I).divide(I.subtract(this)).log()    .multiply(I.divide(createComplex(2.0,  0.0)));  .multiply(I.divide(createComplex(2.0,  0.0)));  }  [CLASS]  Complex  [METHOD]  atan  [RETURN_TYPE]  Complex  [VARIABLES]  boolean  isInfinite  isNaN  isZero  double  addend  c  d  denominator  divisor  factor  imaginary  q  real  subtrahend  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  	projects/Math46/src/main/java/org/apache/commons/math/complex/Complex.java	0.4082482904638631	587	588	2	replace	if(isInfinite  &&  isNaN)  {  return  Complex.ZERO;  }	  if(isNaN    &&    isZero)    {    return    Complex.ZERO;    }    	non-compiled	[CE]  ';'  expected	44	None	replace
39	[BUG]  [BUGGY]  if(isInfinite  ||  isZero  ||  isInfinite)  {  return  Complex.ZERO;  }  [CE]  ';'  expected  [FE]                    AssertionError      [CONTEXT]      public  Complex  atan()  {  if  (isNaN)  {  return  NaN;  }      [BUGGY]  if(isInfinite  ||  isZero  ||  isInfinite)  {  return  Complex.ZERO;  }  [BUGGY]      return  this.add(I).divide(I.subtract(this)).log()    .multiply(I.divide(createComplex(2.0,  0.0)));  .multiply(I.divide(createComplex(2.0,  0.0)));  }  [CLASS]  Complex  [METHOD]  atan  [RETURN_TYPE]  Complex  [VARIABLES]  boolean  isInfinite  isNaN  isZero  double  addend  c  d  denominator  divisor  factor  imaginary  q  real  subtrahend  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  	projects/Math46/src/main/java/org/apache/commons/math/complex/Complex.java	0.4082482904638631	587	588	2	replace	if(isInfinite  ||  isZero  ||  isInfinite)  {  return  Complex.ZERO;  }	  if(isNaN    ||    isZero    ||    isInfinite)    {    return    Complex.ZERO;    }    	non-compiled	[CE]  ';'  expected	4	None	replace
40	[BUG]  [BUGGY]  if(isNaN  ||  isInfinite  ||  isZero)  {  return  Complex.ZERO;  }  [CE]  ';'  expected  [FE]                      AssertionError      [CONTEXT]      public  Complex  atan()  {  if  (isNaN)  {  return  NaN;  }      [BUGGY]  if(isNaN  ||  isInfinite  ||  isZero)  {  return  Complex.ZERO;  }  [BUGGY]      return  this.add(I).divide(I.subtract(this)).log()    .multiply(I.divide(createComplex(2.0,  0.0)));  .multiply(I.divide(createComplex(2.0,  0.0)));  }  [CLASS]  Complex  [METHOD]  atan  [RETURN_TYPE]  Complex  [VARIABLES]  boolean  isInfinite  isNaN  isZero  double  addend  c  d  denominator  divisor  factor  imaginary  q  real  subtrahend  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  	projects/Math46/src/main/java/org/apache/commons/math/complex/Complex.java	0.4082482904638631	587	588	2	replace	if(isNaN  ||  isInfinite  ||  isZero)  {  return  Complex.ZERO;  }	  if(isNaN    ||    isZero    ||    isInfinite)    {    return    Complex.ZERO;    }    	non-compiled	[CE]  ';'  expected	4	None	replace
41	[BUG]  [BUGGY]  while(isNaN  &&  isInfinite)  {  return  this.add(INF).multiply(I.subtract(this)).log().multiply(I.divide(createComplex(2.0,  0.0)));  }  [CE]  ';'  expected  [FE]                  AssertionError      [CONTEXT]      public  Complex  atan()  {  if  (isNaN)  {  return  NaN;  }      [BUGGY]  while(isNaN  &&  isInfinite)  {  return  this.add(INF).multiply(I.subtract(this)).log().multiply(I.divide(createComplex(2.0,  0.0)));  }  [BUGGY]      .multiply(I.divide(createComplex(2.0,  0.0)));  }  [CLASS]  Complex  [METHOD]  atan  [RETURN_TYPE]  Complex  [VARIABLES]  boolean  isInfinite  isNaN  isZero  double  addend  c  d  denominator  divisor  factor  imaginary  q  real  subtrahend  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  	projects/Math46/src/main/java/org/apache/commons/math/complex/Complex.java	0.4082482904638631	587	588	2	replace	while(isNaN  &&  isInfinite)  {  return  this.add(INF).multiply(I.subtract(this)).log().multiply(I.divide(createComplex(2.0,  0.0)));  }	  if(isNaN)    {    return    this.add(INF).multiply(I.subtract(this)).log().multiply(I.divide(createComplex(2.0,    0.0)));    }    	non-compiled	[CE]  ';'  expected	6	None	replace
42	[BUG]  [BUGGY]  while(isInfinite)  {  if(isNaN)  {  return  INF.multiply(I.subtract(this)).log().multiply(I.divide(createComplex(2.0,  0.0)));  }  [CE]  ';'  expected  [FE]                    AssertionError      [CONTEXT]      public  Complex  atan()  {  if  (isNaN)  {  return  NaN;  }      [BUGGY]  while(isInfinite)  {  if(isNaN)  {  return  INF.multiply(I.subtract(this)).log().multiply(I.divide(createComplex(2.0,  0.0)));  }  [BUGGY]      .multiply(I.divide(createComplex(2.0,  0.0)));  }  [CLASS]  Complex  [METHOD]  atan  [RETURN_TYPE]  Complex  [VARIABLES]  boolean  isInfinite  isNaN  isZero  double  addend  c  d  denominator  divisor  factor  imaginary  q  real  subtrahend  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  	projects/Math46/src/main/java/org/apache/commons/math/complex/Complex.java	0.4082482904638631	587	588	2	replace	while(isInfinite)  {  if(isNaN)  {  return  INF.multiply(I.subtract(this)).log().multiply(I.divide(createComplex(2.0,  0.0)));  }	  if(isNaN)    {    return    this.add(INF).multiply(I.subtract(this)).log().multiply(I.divide(createComplex(2.0,    0.0)));    }    	non-compiled	[CE]  ';'  expected	6	None	replace
43	[BUG]  [BUGGY]  try  {  [Delete]  catch(NumberFormatException  nfe)  {  return  INF.multiply(I.subtract(this)).log().multiply(I.divide(createComplex(2.0,  0.0)));  }  [CE]  ';'  expected  [FE]                      AssertionError      [CONTEXT]      public  Complex  atan()  {  if  (isNaN)  {  return  NaN;  }      [BUGGY]  try  {  [Delete]  catch(NumberFormatException  nfe)  {  return  INF.multiply(I.subtract(this)).log().multiply(I.divide(createComplex(2.0,  0.0)));  }  [BUGGY]      .multiply(I.divide(createComplex(2.0,  0.0)));  }  [CLASS]  Complex  [METHOD]  atan  [RETURN_TYPE]  Complex  [VARIABLES]  boolean  isInfinite  isNaN  isZero  double  addend  c  d  denominator  divisor  factor  imaginary  q  real  subtrahend  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  	projects/Math46/src/main/java/org/apache/commons/math/complex/Complex.java	0.4082482904638631	587	588	2	replace	try  {  [Delete]  catch(NumberFormatException  nfe)  {  return  INF.multiply(I.subtract(this)).log().multiply(I.divide(createComplex(2.0,  0.0)));  }	  if(isNaN)    {    return    this.add(INF).multiply(I.subtract(this)).log().multiply(I.divide(createComplex(2.0,    0.0)));    }    	non-compiled	[CE]  ';'  expected	6	None	replace
44	[BUG]  [BUGGY]  return  this.add(real).multiply(I.subtract(this)).log().multiply(I.divide(createComplex(2.0,  0.0)));  [CE]  ';'  expected  [FE]                  AssertionError      [CONTEXT]      public  Complex  atan()  {  if  (isNaN)  {  return  NaN;  }      [BUGGY]  return  this.add(real).multiply(I.subtract(this)).log().multiply(I.divide(createComplex(2.0,  0.0)));  [BUGGY]      .multiply(I.divide(createComplex(2.0,  0.0)));  }  [CLASS]  Complex  [METHOD]  atan  [RETURN_TYPE]  Complex  [VARIABLES]  boolean  isInfinite  isNaN  isZero  double  addend  c  d  denominator  divisor  factor  imaginary  q  real  subtrahend  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  	projects/Math46/src/main/java/org/apache/commons/math/complex/Complex.java	0.4082482904638631	587	588	2	replace	return  this.add(real).multiply(I.subtract(this)).log().multiply(I.divide(createComplex(2.0,  0.0)));	  return    this.add(infinite).multiply(I.subtract(this)).log().multiply(I.divide(createComplex(2.0,    0.0)));    	non-compiled	[CE]  ';'  expected	45	None	replace
45	[BUG]  [BUGGY]  return  this.add(imaginary).multiply(I.subtract(this)).log().multiply(I.divide(createComplex(2.0,  0.0)));  [CE]  ';'  expected  [FE]                    AssertionError      [CONTEXT]      public  Complex  atan()  {  if  (isNaN)  {  return  NaN;  }      [BUGGY]  return  this.add(imaginary).multiply(I.subtract(this)).log().multiply(I.divide(createComplex(2.0,  0.0)));  [BUGGY]      .multiply(I.divide(createComplex(2.0,  0.0)));  }  [CLASS]  Complex  [METHOD]  atan  [RETURN_TYPE]  Complex  [VARIABLES]  boolean  isInfinite  isNaN  isZero  double  addend  c  d  denominator  divisor  factor  imaginary  q  real  subtrahend  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  	projects/Math46/src/main/java/org/apache/commons/math/complex/Complex.java	0.4082482904638631	587	588	2	replace	return  this.add(imaginary).multiply(I.subtract(this)).log().multiply(I.divide(createComplex(2.0,  0.0)));	  return    this.add(infinite).multiply(I.subtract(this)).log().multiply(I.divide(createComplex(2.0,    0.0)));    	non-compiled	[CE]  ';'  expected	45	None	replace
46	[BUG]  [BUGGY]  return  this.add(infinite).multiply(I.subtract(this)).log().multiply(I.divide(createComplex(1.0,  0.0)));  [CE]  ';'  expected  [FE]                      AssertionError      [CONTEXT]      public  Complex  atan()  {  if  (isNaN)  {  return  NaN;  }      [BUGGY]  return  this.add(infinite).multiply(I.subtract(this)).log().multiply(I.divide(createComplex(1.0,  0.0)));  [BUGGY]      .multiply(I.divide(createComplex(2.0,  0.0)));  }  [CLASS]  Complex  [METHOD]  atan  [RETURN_TYPE]  Complex  [VARIABLES]  boolean  isInfinite  isNaN  isZero  double  addend  c  d  denominator  divisor  factor  imaginary  q  real  subtrahend  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  	projects/Math46/src/main/java/org/apache/commons/math/complex/Complex.java	0.4082482904638631	587	588	2	replace	return  this.add(infinite).multiply(I.subtract(this)).log().multiply(I.divide(createComplex(1.0,  0.0)));	  return    this.add(infinite).multiply(I.subtract(this)).log().multiply(I.divide(createComplex(2.0,    0.0)));    	non-compiled	[CE]  ';'  expected	45	None	replace
47	[BUG]  [BUGGY]  if(isZero)  {  if(!isNaN)  {  return  NaN;  }  [CE]  ';'  expected  [FE]            AssertionError      [CONTEXT]      public  Complex  atan()  {  if  (isNaN)  {  return  NaN;  }      [BUGGY]  if(isZero)  {  if(!isNaN)  {  return  NaN;  }  [BUGGY]      return  this.add(I).divide(I.subtract(this)).log()    .multiply(I.divide(createComplex(2.0,  0.0)));  .multiply(I.divide(createComplex(2.0,  0.0)));  }  [CLASS]  Complex  [METHOD]  atan  [RETURN_TYPE]  Complex  [VARIABLES]  boolean  isInfinite  isNaN  isZero  double  addend  c  d  denominator  divisor  factor  imaginary  q  real  subtrahend  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  	projects/Math46/src/main/java/org/apache/commons/math/complex/Complex.java	0.4082482904638631	587	588	2	replace	if(isZero)  {  if(!isNaN)  {  return  NaN;  }	  if(isInfinite)    {    if(!isNaN)    {    return    NaN;    }    	non-compiled	[CE]  ';'  expected	41	None	replace
48	[BUG]  [BUGGY]  if(isZero)  {  if(!isInfinite)  {  return  NaN;  }  [CE]  ';'  expected  [FE]              AssertionError      [CONTEXT]      public  Complex  atan()  {  if  (isNaN)  {  return  NaN;  }      [BUGGY]  if(isZero)  {  if(!isInfinite)  {  return  NaN;  }  [BUGGY]      return  this.add(I).divide(I.subtract(this)).log()    .multiply(I.divide(createComplex(2.0,  0.0)));  .multiply(I.divide(createComplex(2.0,  0.0)));  }  [CLASS]  Complex  [METHOD]  atan  [RETURN_TYPE]  Complex  [VARIABLES]  boolean  isInfinite  isNaN  isZero  double  addend  c  d  denominator  divisor  factor  imaginary  q  real  subtrahend  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  	projects/Math46/src/main/java/org/apache/commons/math/complex/Complex.java	0.4082482904638631	587	588	2	replace	if(isZero)  {  if(!isInfinite)  {  return  NaN;  }	  if(isInfinite)    {    if(!isNaN)    {    return    NaN;    }    	non-compiled	[CE]  ';'  expected	41	None	replace
49	[BUG]  [BUGGY]  Iterator  <  Complex>  it  =  this.atans().iterator();  [CE]  [FE]              AssertionError      [CONTEXT]      public  Complex  atan()  {  if  (isNaN)  {  return  NaN;  }      [BUGGY]  Iterator  <  Complex>  it  =  this.atans().iterator();  [BUGGY]      return  this.add(I).divide(I.subtract(this)).log()    .multiply(I.divide(createComplex(2.0,  0.0)));  .multiply(I.divide(createComplex(2.0,  0.0)));  }  [CLASS]  Complex  [METHOD]  atan  [RETURN_TYPE]  Complex  [VARIABLES]  boolean  isInfinite  isNaN  isZero  double  addend  c  d  denominator  divisor  factor  imaginary  q  real  subtrahend  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  	projects/Math46/src/main/java/org/apache/commons/math/complex/Complex.java	0.4082482904638631	587	588	2	replace	Iterator  <  Complex>  it  =  this.atans().iterator();	  Iterator    <    Complex>    it    =    atans().iterator();    	non-compiled	[CE]  	50	None	replace
50	[BUG]  [BUGGY]  Iterator  <  Complex>  it  =  this.ans().iterator();  [CE]  [FE]                AssertionError      [CONTEXT]      public  Complex  atan()  {  if  (isNaN)  {  return  NaN;  }      [BUGGY]  Iterator  <  Complex>  it  =  this.ans().iterator();  [BUGGY]      return  this.add(I).divide(I.subtract(this)).log()    .multiply(I.divide(createComplex(2.0,  0.0)));  .multiply(I.divide(createComplex(2.0,  0.0)));  }  [CLASS]  Complex  [METHOD]  atan  [RETURN_TYPE]  Complex  [VARIABLES]  boolean  isInfinite  isNaN  isZero  double  addend  c  d  denominator  divisor  factor  imaginary  q  real  subtrahend  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  	projects/Math46/src/main/java/org/apache/commons/math/complex/Complex.java	0.4082482904638631	587	588	2	replace	Iterator  <  Complex>  it  =  this.ans().iterator();	  Iterator    <    Complex>    it    =    atans().iterator();    	non-compiled	[CE]  	50	None	replace
51	[BUG]  [BUGGY]  Iterator  <  Complex>  it  =  this.annotations().iterator();  [CE]  [FE]                  AssertionError      [CONTEXT]      public  Complex  atan()  {  if  (isNaN)  {  return  NaN;  }      [BUGGY]  Iterator  <  Complex>  it  =  this.annotations().iterator();  [BUGGY]      return  this.add(I).divide(I.subtract(this)).log()    .multiply(I.divide(createComplex(2.0,  0.0)));  .multiply(I.divide(createComplex(2.0,  0.0)));  }  [CLASS]  Complex  [METHOD]  atan  [RETURN_TYPE]  Complex  [VARIABLES]  boolean  isInfinite  isNaN  isZero  double  addend  c  d  denominator  divisor  factor  imaginary  q  real  subtrahend  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  	projects/Math46/src/main/java/org/apache/commons/math/complex/Complex.java	0.4082482904638631	587	588	2	replace	Iterator  <  Complex>  it  =  this.annotations().iterator();	  Iterator    <    Complex>    it    =    atans().iterator();    	non-compiled	[CE]  	50	None	replace
52	[BUG]  [BUGGY]  .multiply(I.divide(createComplex(1.0,  0.0)));  [CE]  [FE]                    AssertionError      [CONTEXT]      public  Complex  atan()  {  if  (isNaN)  {  return  NaN;  }      [BUGGY]  .multiply(I.divide(createComplex(1.0,  0.0)));  [BUGGY]      .multiply(I.divide(createComplex(2.0,  0.0)));  }  [CLASS]  Complex  [METHOD]  atan  [RETURN_TYPE]  Complex  [VARIABLES]  boolean  isInfinite  isNaN  isZero  double  addend  c  d  denominator  divisor  factor  imaginary  q  real  subtrahend  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  	projects/Math46/src/main/java/org/apache/commons/math/complex/Complex.java	0.4082482904638631	587	588	2	replace	.multiply(I.divide(createComplex(1.0,  0.0)));	  .multiply(I.divide(createComplex(2.0,    0.0)));    	non-compiled	[CE]  	29	None	replace
53	[BUG]  [BUGGY]  .multiply(I.divide(createComplex(0.0,  0.0)));  [CE]  [FE]                      AssertionError      [CONTEXT]      public  Complex  atan()  {  if  (isNaN)  {  return  NaN;  }      [BUGGY]  .multiply(I.divide(createComplex(0.0,  0.0)));  [BUGGY]      .multiply(I.divide(createComplex(2.0,  0.0)));  }  [CLASS]  Complex  [METHOD]  atan  [RETURN_TYPE]  Complex  [VARIABLES]  boolean  isInfinite  isNaN  isZero  double  addend  c  d  denominator  divisor  factor  imaginary  q  real  subtrahend  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  	projects/Math46/src/main/java/org/apache/commons/math/complex/Complex.java	0.4082482904638631	587	588	2	replace	.multiply(I.divide(createComplex(0.0,  0.0)));	  .multiply(I.divide(createComplex(2.0,    0.0)));    	non-compiled	[CE]  	29	None	replace
54	[BUG]  [BUGGY]  return  this.add(real).subtract(I.subtract(this)).log().multiply(I.divide(createComplex(0.0,  0.0)));  [CE]  [FE]              AssertionError      [CONTEXT]      public  Complex  atan()  {  if  (isNaN)  {  return  NaN;  }      [BUGGY]  return  this.add(real).subtract(I.subtract(this)).log().multiply(I.divide(createComplex(0.0,  0.0)));  [BUGGY]      .multiply(I.divide(createComplex(2.0,  0.0)));  }  [CLASS]  Complex  [METHOD]  atan  [RETURN_TYPE]  Complex  [VARIABLES]  boolean  isInfinite  isNaN  isZero  double  addend  c  d  denominator  divisor  factor  imaginary  q  real  subtrahend  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  	projects/Math46/src/main/java/org/apache/commons/math/complex/Complex.java	0.4082482904638631	587	588	2	replace	return  this.add(real).subtract(I.subtract(this)).log().multiply(I.divide(createComplex(0.0,  0.0)));	  return    this.add(real).subtract(I.subtract(this)).log().multiply(I.divide(createComplex(2.0,    0.0)));    	non-compiled	[CE]  	43	None	replace
55	[BUG]  [BUGGY]  return  this.add(real).subtract(I.subtract(this)).log().multiply(I.divide(createComplex(1.0,  0.0)));  [CE]  [FE]                AssertionError      [CONTEXT]      public  Complex  atan()  {  if  (isNaN)  {  return  NaN;  }      [BUGGY]  return  this.add(real).subtract(I.subtract(this)).log().multiply(I.divide(createComplex(1.0,  0.0)));  [BUGGY]      .multiply(I.divide(createComplex(2.0,  0.0)));  }  [CLASS]  Complex  [METHOD]  atan  [RETURN_TYPE]  Complex  [VARIABLES]  boolean  isInfinite  isNaN  isZero  double  addend  c  d  denominator  divisor  factor  imaginary  q  real  subtrahend  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  	projects/Math46/src/main/java/org/apache/commons/math/complex/Complex.java	0.4082482904638631	587	588	2	replace	return  this.add(real).subtract(I.subtract(this)).log().multiply(I.divide(createComplex(1.0,  0.0)));	  return    this.add(real).subtract(I.subtract(this)).log().multiply(I.divide(createComplex(2.0,    0.0)));    	non-compiled	[CE]  	43	None	replace
56	[BUG]  [BUGGY]  if(real!=  null)  {  return  this.add(real).subtract(I.subtract(this)).log().multiply(I.divide(createComplex(2.0,  0.0)));  }  [CE]  [FE]                  AssertionError      [CONTEXT]      public  Complex  atan()  {  if  (isNaN)  {  return  NaN;  }      [BUGGY]  if(real!=  null)  {  return  this.add(real).subtract(I.subtract(this)).log().multiply(I.divide(createComplex(2.0,  0.0)));  }  [BUGGY]      .multiply(I.divide(createComplex(2.0,  0.0)));  }  [CLASS]  Complex  [METHOD]  atan  [RETURN_TYPE]  Complex  [VARIABLES]  boolean  isInfinite  isNaN  isZero  double  addend  c  d  denominator  divisor  factor  imaginary  q  real  subtrahend  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  	projects/Math46/src/main/java/org/apache/commons/math/complex/Complex.java	0.4082482904638631	587	588	2	replace	if(real!=  null)  {  return  this.add(real).subtract(I.subtract(this)).log().multiply(I.divide(createComplex(2.0,  0.0)));  }	  return    this.add(real).subtract(I.subtract(this)).log().multiply(I.divide(createComplex(2.0,    0.0)));    	non-compiled	[CE]  	43	None	replace
57	[BUG]  [BUGGY]  if(isNaN)  {  if(!isZero)  return  Complex.ZERO;  }  [CE]  [FE]              AssertionError      [CONTEXT]      public  Complex  atan()  {  if  (isNaN)  {  return  NaN;  }      [BUGGY]  if(isNaN)  {  if(!isZero)  return  Complex.ZERO;  }  [BUGGY]      return  this.add(I).divide(I.subtract(this)).log()    .multiply(I.divide(createComplex(2.0,  0.0)));  .multiply(I.divide(createComplex(2.0,  0.0)));  }  [CLASS]  Complex  [METHOD]  atan  [RETURN_TYPE]  Complex  [VARIABLES]  boolean  isInfinite  isNaN  isZero  double  addend  c  d  denominator  divisor  factor  imaginary  q  real  subtrahend  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  	projects/Math46/src/main/java/org/apache/commons/math/complex/Complex.java	0.4082482904638631	587	588	2	replace	if(isNaN)  {  if(!isZero)  return  Complex.ZERO;  }	  if(isInfinite)    {    if(!isZero)return    Complex.ZERO;    }    	non-compiled	[CE]  	58	None	replace
58	[BUG]  [BUGGY]  if(isInfinite)  {  if(!isInfinite)  {  return  Complex.EMPTY;  }  [CE]  [FE]                    AssertionError      [CONTEXT]      public  Complex  atan()  {  if  (isNaN)  {  return  NaN;  }      [BUGGY]  if(isInfinite)  {  if(!isInfinite)  {  return  Complex.EMPTY;  }  [BUGGY]      return  this.add(I).divide(I.subtract(this)).log()    .multiply(I.divide(createComplex(2.0,  0.0)));  .multiply(I.divide(createComplex(2.0,  0.0)));  }  [CLASS]  Complex  [METHOD]  atan  [RETURN_TYPE]  Complex  [VARIABLES]  boolean  isInfinite  isNaN  isZero  double  addend  c  d  denominator  divisor  factor  imaginary  q  real  subtrahend  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  	projects/Math46/src/main/java/org/apache/commons/math/complex/Complex.java	0.4082482904638631	587	588	2	replace	if(isInfinite)  {  if(!isInfinite)  {  return  Complex.EMPTY;  }	  if(isNaN)    {    if(!isInfinite)    {    return    Complex.EMPTY;    }    	non-compiled	[CE]  	28	None	replace
59	[BUG]  [BUGGY]  if(isInfinite)  {  if(!isNaN)  {  return  Complex.EMPTY;  }  [CE]  [FE]                      AssertionError      [CONTEXT]      public  Complex  atan()  {  if  (isNaN)  {  return  NaN;  }      [BUGGY]  if(isInfinite)  {  if(!isNaN)  {  return  Complex.EMPTY;  }  [BUGGY]      return  this.add(I).divide(I.subtract(this)).log()    .multiply(I.divide(createComplex(2.0,  0.0)));  .multiply(I.divide(createComplex(2.0,  0.0)));  }  [CLASS]  Complex  [METHOD]  atan  [RETURN_TYPE]  Complex  [VARIABLES]  boolean  isInfinite  isNaN  isZero  double  addend  c  d  denominator  divisor  factor  imaginary  q  real  subtrahend  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  	projects/Math46/src/main/java/org/apache/commons/math/complex/Complex.java	0.4082482904638631	587	588	2	replace	if(isInfinite)  {  if(!isNaN)  {  return  Complex.EMPTY;  }	  if(isNaN)    {    if(!isInfinite)    {    return    Complex.EMPTY;    }    	non-compiled	[CE]  	28	None	replace
60	[BUG]  [BUGGY]  if(isInfinite)  {  return  Complex.EMPTY;  }  [CE]  [FE]                AssertionError      [CONTEXT]      public  Complex  atan()  {  if  (isNaN)  {  return  NaN;  }      [BUGGY]  if(isInfinite)  {  return  Complex.EMPTY;  }  [BUGGY]      return  this.add(I).divide(I.subtract(this)).log()    .multiply(I.divide(createComplex(2.0,  0.0)));  .multiply(I.divide(createComplex(2.0,  0.0)));  }  [CLASS]  Complex  [METHOD]  atan  [RETURN_TYPE]  Complex  [VARIABLES]  boolean  isInfinite  isNaN  isZero  double  addend  c  d  denominator  divisor  factor  imaginary  q  real  subtrahend  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  	projects/Math46/src/main/java/org/apache/commons/math/complex/Complex.java	0.4082482904638631	587	588	2	replace	if(isInfinite)  {  return  Complex.EMPTY;  }	  if(!isInfinite)    {    return    Complex.EMPTY;    }    	non-compiled	[CE]  	59	None	replace
61	[BUG]  [BUGGY]  While(isInfinite  &&  isZero)  {  if(!isInfinite)  {  return  Complex.EMPTY;  }  [CE]  [FE]                  AssertionError      [CONTEXT]      public  Complex  atan()  {  if  (isNaN)  {  return  NaN;  }      [BUGGY]  While(isInfinite  &&  isZero)  {  if(!isInfinite)  {  return  Complex.EMPTY;  }  [BUGGY]      return  this.add(I).divide(I.subtract(this)).log()    .multiply(I.divide(createComplex(2.0,  0.0)));  .multiply(I.divide(createComplex(2.0,  0.0)));  }  [CLASS]  Complex  [METHOD]  atan  [RETURN_TYPE]  Complex  [VARIABLES]  boolean  isInfinite  isNaN  isZero  double  addend  c  d  denominator  divisor  factor  imaginary  q  real  subtrahend  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  	projects/Math46/src/main/java/org/apache/commons/math/complex/Complex.java	0.4082482904638631	587	588	2	replace	While(isInfinite  &&  isZero)  {  if(!isInfinite)  {  return  Complex.EMPTY;  }	  if(!isInfinite)    {    return    Complex.EMPTY;    }    	non-compiled	[CE]  	59	None	replace
62	[BUG]  [BUGGY]  While(isInfinite  &&  isZero  <  =  real)  {  if(!isInfinite)  {  return  Complex.EMPTY;  }  [CE]  [FE]                    AssertionError      [CONTEXT]      public  Complex  atan()  {  if  (isNaN)  {  return  NaN;  }      [BUGGY]  While(isInfinite  &&  isZero  <  =  real)  {  if(!isInfinite)  {  return  Complex.EMPTY;  }  [BUGGY]      return  this.add(I).divide(I.subtract(this)).log()    .multiply(I.divide(createComplex(2.0,  0.0)));  .multiply(I.divide(createComplex(2.0,  0.0)));  }  [CLASS]  Complex  [METHOD]  atan  [RETURN_TYPE]  Complex  [VARIABLES]  boolean  isInfinite  isNaN  isZero  double  addend  c  d  denominator  divisor  factor  imaginary  q  real  subtrahend  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  	projects/Math46/src/main/java/org/apache/commons/math/complex/Complex.java	0.4082482904638631	587	588	2	replace	While(isInfinite  &&  isZero  <  =  real)  {  if(!isInfinite)  {  return  Complex.EMPTY;  }	  if(!isInfinite)    {    return    Complex.EMPTY;    }    	non-compiled	[CE]  	59	None	replace
63	[BUG]  [BUGGY]  While(isInfinite  &&  isZero)  {  if(isInfinite)  {  return  Complex.EMPTY;  }  [CE]  [FE]                      AssertionError      [CONTEXT]      public  Complex  atan()  {  if  (isNaN)  {  return  NaN;  }      [BUGGY]  While(isInfinite  &&  isZero)  {  if(isInfinite)  {  return  Complex.EMPTY;  }  [BUGGY]      return  this.add(I).divide(I.subtract(this)).log()    .multiply(I.divide(createComplex(2.0,  0.0)));  .multiply(I.divide(createComplex(2.0,  0.0)));  }  [CLASS]  Complex  [METHOD]  atan  [RETURN_TYPE]  Complex  [VARIABLES]  boolean  isInfinite  isNaN  isZero  double  addend  c  d  denominator  divisor  factor  imaginary  q  real  subtrahend  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  	projects/Math46/src/main/java/org/apache/commons/math/complex/Complex.java	0.4082482904638631	587	588	2	replace	While(isInfinite  &&  isZero)  {  if(isInfinite)  {  return  Complex.EMPTY;  }	  if(!isInfinite)    {    return    Complex.EMPTY;    }    	non-compiled	[CE]  	59	None	replace
64	[BUG]  [BUGGY]  if(isInfinite)  {  if(!isNaN  &&!isZero)  {  return  Complex.ZERO;  }  [CE]  [FE]                    AssertionError      [CONTEXT]      public  Complex  atan()  {  if  (isNaN)  {  return  NaN;  }      [BUGGY]  if(isInfinite)  {  if(!isNaN  &&!isZero)  {  return  Complex.ZERO;  }  [BUGGY]      return  this.add(I).divide(I.subtract(this)).log()    .multiply(I.divide(createComplex(2.0,  0.0)));  .multiply(I.divide(createComplex(2.0,  0.0)));  }  [CLASS]  Complex  [METHOD]  atan  [RETURN_TYPE]  Complex  [VARIABLES]  boolean  isInfinite  isNaN  isZero  double  addend  c  d  denominator  divisor  factor  imaginary  q  real  subtrahend  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  	projects/Math46/src/main/java/org/apache/commons/math/complex/Complex.java	0.4082482904638631	587	588	2	replace	if(isInfinite)  {  if(!isNaN  &&!isZero)  {  return  Complex.ZERO;  }	  if(isInfinite)    {    if(!isNaN    ||!isZero)    {    return    Complex.ZERO;    }    	non-compiled	[CE]  	65	None	replace
65	[BUG]  [BUGGY]  if(isInfinite)  {  if(!isNaN  ||  isZero)  {  return  Complex.ZERO;  }  [CE]  [FE]                      AssertionError      [CONTEXT]      public  Complex  atan()  {  if  (isNaN)  {  return  NaN;  }      [BUGGY]  if(isInfinite)  {  if(!isNaN  ||  isZero)  {  return  Complex.ZERO;  }  [BUGGY]      return  this.add(I).divide(I.subtract(this)).log()    .multiply(I.divide(createComplex(2.0,  0.0)));  .multiply(I.divide(createComplex(2.0,  0.0)));  }  [CLASS]  Complex  [METHOD]  atan  [RETURN_TYPE]  Complex  [VARIABLES]  boolean  isInfinite  isNaN  isZero  double  addend  c  d  denominator  divisor  factor  imaginary  q  real  subtrahend  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  	projects/Math46/src/main/java/org/apache/commons/math/complex/Complex.java	0.4082482904638631	587	588	2	replace	if(isInfinite)  {  if(!isNaN  ||  isZero)  {  return  Complex.ZERO;  }	  if(isInfinite)    {    if(!isNaN    ||!isZero)    {    return    Complex.ZERO;    }    	non-compiled	[CE]  	65	None	replace
66	[BUG]  [BUGGY]  this.add(I).log().multiply(I.divide(createNaN(1.0,  0.0)));  [CE]  [FE]                  AssertionError      [CONTEXT]      public  Complex  atan()  {  if  (isNaN)  {  return  NaN;  }      [BUGGY]  this.add(I).log().multiply(I.divide(createNaN(1.0,  0.0)));  [BUGGY]      return  this.add(I).divide(I.subtract(this)).log()    .multiply(I.divide(createComplex(2.0,  0.0)));  .multiply(I.divide(createComplex(2.0,  0.0)));  }  [CLASS]  Complex  [METHOD]  atan  [RETURN_TYPE]  Complex  [VARIABLES]  boolean  isInfinite  isNaN  isZero  double  addend  c  d  denominator  divisor  factor  imaginary  q  real  subtrahend  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  	projects/Math46/src/main/java/org/apache/commons/math/complex/Complex.java	0.4082482904638631	587	588	2	replace	this.add(I).log().multiply(I.divide(createNaN(1.0,  0.0)));	  this.add(I).log().multiply(I.divide(createNaN(0.0,    0.0)));    	non-compiled	[CE]  	2	None	replace
67	[BUG]  [BUGGY]  this.add(I).log().multiply(I.divide(createNaN(2.0,  0.0)));  [CE]  ';'  expected  [FE]                    AssertionError      [CONTEXT]      public  Complex  atan()  {  if  (isNaN)  {  return  NaN;  }      [BUGGY]  this.add(I).log().multiply(I.divide(createNaN(2.0,  0.0)));  [BUGGY]      return  this.add(I).divide(I.subtract(this)).log()    .multiply(I.divide(createComplex(2.0,  0.0)));  .multiply(I.divide(createComplex(2.0,  0.0)));  }  [CLASS]  Complex  [METHOD]  atan  [RETURN_TYPE]  Complex  [VARIABLES]  boolean  isInfinite  isNaN  isZero  double  addend  c  d  denominator  divisor  factor  imaginary  q  real  subtrahend  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  	projects/Math46/src/main/java/org/apache/commons/math/complex/Complex.java	0.4082482904638631	587	588	2	replace	this.add(I).log().multiply(I.divide(createNaN(2.0,  0.0)));	  this.add(I).log().multiply(I.divide(createNaN(0.0,    0.0)));    	non-compiled	[CE]  ';'  expected	2	None	replace
68	[BUG]  [BUGGY]  ||  isNaN)  {  return  Complex.ZERO;  }  else  {  return  Complex.ZERO;  }  [CE]  ';'  expected  [FE]                        AssertionError      [CONTEXT]      public  Complex  atan()  {  if  (isNaN)  {  return  NaN;  }      [BUGGY]  ||  isNaN)  {  return  Complex.ZERO;  }  else  {  return  Complex.ZERO;  }  [BUGGY]      return  this.add(I).divide(I.subtract(this)).log()    .multiply(I.divide(createComplex(2.0,  0.0)));  .multiply(I.divide(createComplex(2.0,  0.0)));  }  [CLASS]  Complex  [METHOD]  atan  [RETURN_TYPE]  Complex  [VARIABLES]  boolean  isInfinite  isNaN  isZero  double  addend  c  d  denominator  divisor  factor  imaginary  q  real  subtrahend  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  	projects/Math46/src/main/java/org/apache/commons/math/complex/Complex.java	0.4082482904638631	587	588	2	replace	||  isNaN)  {  return  Complex.ZERO;  }  else  {  return  Complex.ZERO;  }	  ||    isInfinite)    {    return    Complex.ZERO;    }    else    {    return    Complex.ZERO;    }    	non-compiled	[CE]  ';'  expected	35	None	replace
69	[BUG]  [BUGGY]  ||  isZero)  {  return  Complex.ZERO;  }  else  {  return  Complex.ZERO;  }  [CE]  ';'  expected  [FE]                          AssertionError      [CONTEXT]      public  Complex  atan()  {  if  (isNaN)  {  return  NaN;  }      [BUGGY]  ||  isZero)  {  return  Complex.ZERO;  }  else  {  return  Complex.ZERO;  }  [BUGGY]      return  this.add(I).divide(I.subtract(this)).log()    .multiply(I.divide(createComplex(2.0,  0.0)));  .multiply(I.divide(createComplex(2.0,  0.0)));  }  [CLASS]  Complex  [METHOD]  atan  [RETURN_TYPE]  Complex  [VARIABLES]  boolean  isInfinite  isNaN  isZero  double  addend  c  d  denominator  divisor  factor  imaginary  q  real  subtrahend  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  	projects/Math46/src/main/java/org/apache/commons/math/complex/Complex.java	0.4082482904638631	587	588	2	replace	||  isZero)  {  return  Complex.ZERO;  }  else  {  return  Complex.ZERO;  }	  ||    isInfinite)    {    return    Complex.ZERO;    }    else    {    return    Complex.ZERO;    }    	non-compiled	[CE]  ';'  expected	35	None	replace
70	[BUG]  [BUGGY]  ||  isInfinite)  {  return  Complex.ZERO;  }  [CE]  ';'  expected  [FE]                            AssertionError      [CONTEXT]      public  Complex  atan()  {  if  (isNaN)  {  return  NaN;  }      [BUGGY]  ||  isInfinite)  {  return  Complex.ZERO;  }  [BUGGY]      return  this.add(I).divide(I.subtract(this)).log()    .multiply(I.divide(createComplex(2.0,  0.0)));  .multiply(I.divide(createComplex(2.0,  0.0)));  }  [CLASS]  Complex  [METHOD]  atan  [RETURN_TYPE]  Complex  [VARIABLES]  boolean  isInfinite  isNaN  isZero  double  addend  c  d  denominator  divisor  factor  imaginary  q  real  subtrahend  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  	projects/Math46/src/main/java/org/apache/commons/math/complex/Complex.java	0.4082482904638631	587	588	2	replace	||  isInfinite)  {  return  Complex.ZERO;  }	  ||    isInfinite)    {    return    Complex.ZERO;    }    else    {    return    Complex.ZERO;    }    	non-compiled	[CE]  ';'  expected	35	None	replace
71	[BUG]  [BUGGY]  if(isInfinite  ||  isNaN)  {  return  Complex.ZERO;  }  else  {  return  Complex.ZERO;  }  [CE]  ';'  expected  [FE]                      AssertionError      [CONTEXT]      public  Complex  atan()  {  if  (isNaN)  {  return  NaN;  }      [BUGGY]  if(isInfinite  ||  isNaN)  {  return  Complex.ZERO;  }  else  {  return  Complex.ZERO;  }  [BUGGY]      return  this.add(I).divide(I.subtract(this)).log()    .multiply(I.divide(createComplex(2.0,  0.0)));  .multiply(I.divide(createComplex(2.0,  0.0)));  }  [CLASS]  Complex  [METHOD]  atan  [RETURN_TYPE]  Complex  [VARIABLES]  boolean  isInfinite  isNaN  isZero  double  addend  c  d  denominator  divisor  factor  imaginary  q  real  subtrahend  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  	projects/Math46/src/main/java/org/apache/commons/math/complex/Complex.java	0.4082482904638631	587	588	2	replace	if(isInfinite  ||  isNaN)  {  return  Complex.ZERO;  }  else  {  return  Complex.ZERO;  }	  if(isNaN    ||    isInfinite)    {    return    Complex.ZERO;    }    else    {    return    Complex.ZERO;    }    	non-compiled	[CE]  ';'  expected	34	None	replace
72	[BUG]  [BUGGY]  return  this.add(real).divide(I.subtract(this)).log().multiply(I.divide(createComplex(2.0,  0.0)));  [CE]  ';'  expected  [FE]            AssertionError      [CONTEXT]      public  Complex  atan()  {  if  (isNaN)  {  return  NaN;  }      [BUGGY]  return  this.add(real).divide(I.subtract(this)).log().multiply(I.divide(createComplex(2.0,  0.0)));  [BUGGY]      .multiply(I.divide(createComplex(2.0,  0.0)));  }  [CLASS]  Complex  [METHOD]  atan  [RETURN_TYPE]  Complex  [VARIABLES]  boolean  isInfinite  isNaN  isZero  double  addend  c  d  denominator  divisor  factor  imaginary  q  real  subtrahend  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  	projects/Math46/src/main/java/org/apache/commons/math/complex/Complex.java	0.4082482904638631	587	588	2	replace	return  this.add(real).divide(I.subtract(this)).log().multiply(I.divide(createComplex(2.0,  0.0)));	  return    this.add(infinite).divide(I.subtract(this)).log().multiply(I.divide(createComplex(2.0,    0.0)));    	non-compiled	[CE]  ';'  expected	61	None	replace
73	[BUG]  [BUGGY]  return  this.add(iNF).divide(I.subtract(this)).log().multiply(I.divide(createComplex(2.0,  0.0)));  [CE]  ';'  expected  [FE]              AssertionError      [CONTEXT]      public  Complex  atan()  {  if  (isNaN)  {  return  NaN;  }      [BUGGY]  return  this.add(iNF).divide(I.subtract(this)).log().multiply(I.divide(createComplex(2.0,  0.0)));  [BUGGY]      .multiply(I.divide(createComplex(2.0,  0.0)));  }  [CLASS]  Complex  [METHOD]  atan  [RETURN_TYPE]  Complex  [VARIABLES]  boolean  isInfinite  isNaN  isZero  double  addend  c  d  denominator  divisor  factor  imaginary  q  real  subtrahend  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  	projects/Math46/src/main/java/org/apache/commons/math/complex/Complex.java	0.4082482904638631	587	588	2	replace	return  this.add(iNF).divide(I.subtract(this)).log().multiply(I.divide(createComplex(2.0,  0.0)));	  return    this.add(infinite).divide(I.subtract(this)).log().multiply(I.divide(createComplex(2.0,    0.0)));    	non-compiled	[CE]  ';'  expected	61	None	replace
74	[BUG]  [BUGGY]  if(isInfinite  ||  isZero  ||  isNaN)  {  return  Complex.ZERO;  }  else  {  return  Complex.ZERO;  }  [CE]  ';'  expected  [FE]                    AssertionError      [CONTEXT]      public  Complex  atan()  {  if  (isNaN)  {  return  NaN;  }      [BUGGY]  if(isInfinite  ||  isZero  ||  isNaN)  {  return  Complex.ZERO;  }  else  {  return  Complex.ZERO;  }  [BUGGY]      return  this.add(I).divide(I.subtract(this)).log()    .multiply(I.divide(createComplex(2.0,  0.0)));  .multiply(I.divide(createComplex(2.0,  0.0)));  }  [CLASS]  Complex  [METHOD]  atan  [RETURN_TYPE]  Complex  [VARIABLES]  boolean  isInfinite  isNaN  isZero  double  addend  c  d  denominator  divisor  factor  imaginary  q  real  subtrahend  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  	projects/Math46/src/main/java/org/apache/commons/math/complex/Complex.java	0.4082482904638631	587	588	2	replace	if(isInfinite  ||  isZero  ||  isNaN)  {  return  Complex.ZERO;  }  else  {  return  Complex.ZERO;  }	  if(isInfinite    ||    isZero)    {    return    Complex.ZERO;    }    else    {    return    Complex.ZERO;    }    	non-compiled	[CE]  ';'  expected	33	None	replace
75	[BUG]  [BUGGY]  while(isInfinite  &&  isNaN)  {  return  this.add(INF).divide(I.subtract(this)).log().multiply(I.divide(createComplex(0.0,  0.0)));  }  [CE]  ';'  expected  [FE]              AssertionError      [CONTEXT]      public  Complex  atan()  {  if  (isNaN)  {  return  NaN;  }      [BUGGY]  while(isInfinite  &&  isNaN)  {  return  this.add(INF).divide(I.subtract(this)).log().multiply(I.divide(createComplex(0.0,  0.0)));  }  [BUGGY]      .multiply(I.divide(createComplex(2.0,  0.0)));  }  [CLASS]  Complex  [METHOD]  atan  [RETURN_TYPE]  Complex  [VARIABLES]  boolean  isInfinite  isNaN  isZero  double  addend  c  d  denominator  divisor  factor  imaginary  q  real  subtrahend  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  	projects/Math46/src/main/java/org/apache/commons/math/complex/Complex.java	0.4082482904638631	587	588	2	replace	while(isInfinite  &&  isNaN)  {  return  this.add(INF).divide(I.subtract(this)).log().multiply(I.divide(createComplex(0.0,  0.0)));  }	  if(isNaN)    {    return    this.add(INF).divide(I.subtract(this)).log().multiply(I.divide(createComplex(0.0,    0.0)));    }    	non-compiled	[CE]  ';'  expected	11	None	replace
76	[BUG]  [BUGGY]  if(isInfinite)  {  if(isNaN)  {  return  NF.divide(I.subtract(this)).log().multiply(I.divide(createComplex(0.0,  0.0)));  }  [CE]  ';'  expected  [FE]                AssertionError      [CONTEXT]      public  Complex  atan()  {  if  (isNaN)  {  return  NaN;  }      [BUGGY]  if(isInfinite)  {  if(isNaN)  {  return  NF.divide(I.subtract(this)).log().multiply(I.divide(createComplex(0.0,  0.0)));  }  [BUGGY]      .multiply(I.divide(createComplex(2.0,  0.0)));  }  [CLASS]  Complex  [METHOD]  atan  [RETURN_TYPE]  Complex  [VARIABLES]  boolean  isInfinite  isNaN  isZero  double  addend  c  d  denominator  divisor  factor  imaginary  q  real  subtrahend  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  	projects/Math46/src/main/java/org/apache/commons/math/complex/Complex.java	0.4082482904638631	587	588	2	replace	if(isInfinite)  {  if(isNaN)  {  return  NF.divide(I.subtract(this)).log().multiply(I.divide(createComplex(0.0,  0.0)));  }	  if(isNaN)    {    return    this.add(INF).divide(I.subtract(this)).log().multiply(I.divide(createComplex(0.0,    0.0)));    }    	non-compiled	[CE]  ';'  expected	11	None	replace
77	[BUG]  [BUGGY]  if(isInfinite  ||  isZero  ||  isInfinite)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  ';'  expected  [FE]                      AssertionError      [CONTEXT]      public  Complex  atan()  {  if  (isNaN)  {  return  NaN;  }      [BUGGY]  if(isInfinite  ||  isZero  ||  isInfinite)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      return  this.add(I).divide(I.subtract(this)).log()    .multiply(I.divide(createComplex(2.0,  0.0)));  .multiply(I.divide(createComplex(2.0,  0.0)));  }  [CLASS]  Complex  [METHOD]  atan  [RETURN_TYPE]  Complex  [VARIABLES]  boolean  isInfinite  isNaN  isZero  double  addend  c  d  denominator  divisor  factor  imaginary  q  real  subtrahend  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  	projects/Math46/src/main/java/org/apache/commons/math/complex/Complex.java	0.4082482904638631	587	588	2	replace	if(isInfinite  ||  isZero  ||  isInfinite)  {  throw  new  IllegalArgumentException( " ");  }	  if(isNaN    ||    isZero    ||    isInfinite)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  ';'  expected	40	None	replace
78	[BUG]  [BUGGY]  if(isInfinite  ||  isZero  ||  isInfinite)  {  throw  new  IllegalArgumentException( " ".);  }  [CE]  [FE]                        AssertionError      [CONTEXT]      public  Complex  atan()  {  if  (isNaN)  {  return  NaN;  }      [BUGGY]  if(isInfinite  ||  isZero  ||  isInfinite)  {  throw  new  IllegalArgumentException( " ".);  }  [BUGGY]      return  this.add(I).divide(I.subtract(this)).log()    .multiply(I.divide(createComplex(2.0,  0.0)));  .multiply(I.divide(createComplex(2.0,  0.0)));  }  [CLASS]  Complex  [METHOD]  atan  [RETURN_TYPE]  Complex  [VARIABLES]  boolean  isInfinite  isNaN  isZero  double  addend  c  d  denominator  divisor  factor  imaginary  q  real  subtrahend  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  	projects/Math46/src/main/java/org/apache/commons/math/complex/Complex.java	0.4082482904638631	587	588	2	replace	if(isInfinite  ||  isZero  ||  isInfinite)  {  throw  new  IllegalArgumentException( " ".);  }	  if(isNaN    ||    isZero    ||    isInfinite)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  	40	None	replace
79	[BUG]  [BUGGY]  if(isInfinite  ||  isZero)  {  if(!isZero)  {  return  Complex.EMPTY;  }  [CE]  ';'  expected  [FE]                AssertionError      [CONTEXT]      public  Complex  atan()  {  if  (isNaN)  {  return  NaN;  }      [BUGGY]  if(isInfinite  ||  isZero)  {  if(!isZero)  {  return  Complex.EMPTY;  }  [BUGGY]      return  this.add(I).divide(I.subtract(this)).log()    .multiply(I.divide(createComplex(2.0,  0.0)));  .multiply(I.divide(createComplex(2.0,  0.0)));  }  [CLASS]  Complex  [METHOD]  atan  [RETURN_TYPE]  Complex  [VARIABLES]  boolean  isInfinite  isNaN  isZero  double  addend  c  d  denominator  divisor  factor  imaginary  q  real  subtrahend  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  	projects/Math46/src/main/java/org/apache/commons/math/complex/Complex.java	0.4082482904638631	587	588	2	replace	if(isInfinite  ||  isZero)  {  if(!isZero)  {  return  Complex.EMPTY;  }	  if(isInfinite)    {    if(!isZero)    {    return    Complex.EMPTY;    }    	non-compiled	[CE]  ';'  expected	26	None	replace
80	[BUG]  [BUGGY]  .multiply(I.divide(createComplex(0.0,  1.0)));  [CE]  ';'  expected  [FE]                          AssertionError      [CONTEXT]      public  Complex  atan()  {  if  (isNaN)  {  return  NaN;  }      [BUGGY]  .multiply(I.divide(createComplex(0.0,  1.0)));  [BUGGY]      .multiply(I.divide(createComplex(2.0,  0.0)));  }  [CLASS]  Complex  [METHOD]  atan  [RETURN_TYPE]  Complex  [VARIABLES]  boolean  isInfinite  isNaN  isZero  double  addend  c  d  denominator  divisor  factor  imaginary  q  real  subtrahend  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  	projects/Math46/src/main/java/org/apache/commons/math/complex/Complex.java	0.4082482904638631	587	588	2	replace	.multiply(I.divide(createComplex(0.0,  1.0)));	  .multiply(I.divide(createComplex(2.0,    1.0)));    	non-compiled	[CE]  ';'  expected	32	None	replace
81	[BUG]  [BUGGY]  if(isInfinite)  {  if(isZero)  {  return  INF.divide(I.subtract(this)).log().multiply(I.divide(createComplex(0.0,  0.0)));  }  [CE]  ';'  expected  [FE]            AssertionError      [CONTEXT]      public  Complex  atan()  {  if  (isNaN)  {  return  NaN;  }      [BUGGY]  if(isInfinite)  {  if(isZero)  {  return  INF.divide(I.subtract(this)).log().multiply(I.divide(createComplex(0.0,  0.0)));  }  [BUGGY]      .multiply(I.divide(createComplex(2.0,  0.0)));  }  [CLASS]  Complex  [METHOD]  atan  [RETURN_TYPE]  Complex  [VARIABLES]  boolean  isInfinite  isNaN  isZero  double  addend  c  d  denominator  divisor  factor  imaginary  q  real  subtrahend  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  	projects/Math46/src/main/java/org/apache/commons/math/complex/Complex.java	0.4082482904638631	587	588	2	replace	if(isInfinite)  {  if(isZero)  {  return  INF.divide(I.subtract(this)).log().multiply(I.divide(createComplex(0.0,  0.0)));  }	  if(isZero)    {    return    this.add(INF).divide(I.subtract(this)).log().multiply(I.divide(createComplex(0.0,    0.0)));    }    	non-compiled	[CE]  ';'  expected	10	None	replace
82	[BUG]  [BUGGY]  if(isInfinite)  {  if(isZero)  {  return  this.add(INF).divide(I.subtract(this)).log().multiply(I.divide(createComplex(0.0,  0.0)));  }  [CE]  ';'  expected  [FE]              AssertionError      [CONTEXT]      public  Complex  atan()  {  if  (isNaN)  {  return  NaN;  }      [BUGGY]  if(isInfinite)  {  if(isZero)  {  return  this.add(INF).divide(I.subtract(this)).log().multiply(I.divide(createComplex(0.0,  0.0)));  }  [BUGGY]      .multiply(I.divide(createComplex(2.0,  0.0)));  }  [CLASS]  Complex  [METHOD]  atan  [RETURN_TYPE]  Complex  [VARIABLES]  boolean  isInfinite  isNaN  isZero  double  addend  c  d  denominator  divisor  factor  imaginary  q  real  subtrahend  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  	projects/Math46/src/main/java/org/apache/commons/math/complex/Complex.java	0.4082482904638631	587	588	2	replace	if(isInfinite)  {  if(isZero)  {  return  this.add(INF).divide(I.subtract(this)).log().multiply(I.divide(createComplex(0.0,  0.0)));  }	  if(isZero)    {    return    this.add(INF).divide(I.subtract(this)).log().multiply(I.divide(createComplex(0.0,    0.0)));    }    	non-compiled	[CE]  ';'  expected	10	None	replace
83	[BUG]  [BUGGY]  if(isInfinite)  {  if(isZero)  {  return  INF.divide(I.subtract(this)).log().multiply(I.divide(createComplex(2.0,  0.0)));  }  [CE]  ';'  expected  [FE]                AssertionError      [CONTEXT]      public  Complex  atan()  {  if  (isNaN)  {  return  NaN;  }      [BUGGY]  if(isInfinite)  {  if(isZero)  {  return  INF.divide(I.subtract(this)).log().multiply(I.divide(createComplex(2.0,  0.0)));  }  [BUGGY]      .multiply(I.divide(createComplex(2.0,  0.0)));  }  [CLASS]  Complex  [METHOD]  atan  [RETURN_TYPE]  Complex  [VARIABLES]  boolean  isInfinite  isNaN  isZero  double  addend  c  d  denominator  divisor  factor  imaginary  q  real  subtrahend  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  	projects/Math46/src/main/java/org/apache/commons/math/complex/Complex.java	0.4082482904638631	587	588	2	replace	if(isInfinite)  {  if(isZero)  {  return  INF.divide(I.subtract(this)).log().multiply(I.divide(createComplex(2.0,  0.0)));  }	  if(isZero)    {    return    this.add(INF).divide(I.subtract(this)).log().multiply(I.divide(createComplex(0.0,    0.0)));    }    	non-compiled	[CE]  ';'  expected	10	None	replace
84	[BUG]  [BUGGY]  while(isInfinite)  {  if(isZero)  {  return  INF.divide(I.subtract(this)).log().multiply(I.divide(createComplex(0.0,  0.0)));  }  [CE]  ';'  expected  [FE]                  AssertionError      [CONTEXT]      public  Complex  atan()  {  if  (isNaN)  {  return  NaN;  }      [BUGGY]  while(isInfinite)  {  if(isZero)  {  return  INF.divide(I.subtract(this)).log().multiply(I.divide(createComplex(0.0,  0.0)));  }  [BUGGY]      .multiply(I.divide(createComplex(2.0,  0.0)));  }  [CLASS]  Complex  [METHOD]  atan  [RETURN_TYPE]  Complex  [VARIABLES]  boolean  isInfinite  isNaN  isZero  double  addend  c  d  denominator  divisor  factor  imaginary  q  real  subtrahend  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  	projects/Math46/src/main/java/org/apache/commons/math/complex/Complex.java	0.4082482904638631	587	588	2	replace	while(isInfinite)  {  if(isZero)  {  return  INF.divide(I.subtract(this)).log().multiply(I.divide(createComplex(0.0,  0.0)));  }	  if(isZero)    {    return    this.add(INF).divide(I.subtract(this)).log().multiply(I.divide(createComplex(0.0,    0.0)));    }    	non-compiled	[CE]  ';'  expected	10	None	replace
85	[BUG]  [BUGGY]  if(isZero)  {  if(!isNaN)  {  return  Complex.ZERO;  }  [CE]  ';'  expected  [FE]                      AssertionError      [CONTEXT]      public  Complex  atan()  {  if  (isNaN)  {  return  NaN;  }      [BUGGY]  if(isZero)  {  if(!isNaN)  {  return  Complex.ZERO;  }  [BUGGY]      return  this.add(I).divide(I.subtract(this)).log()    .multiply(I.divide(createComplex(2.0,  0.0)));  .multiply(I.divide(createComplex(2.0,  0.0)));  }  [CLASS]  Complex  [METHOD]  atan  [RETURN_TYPE]  Complex  [VARIABLES]  boolean  isInfinite  isNaN  isZero  double  addend  c  d  denominator  divisor  factor  imaginary  q  real  subtrahend  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  	projects/Math46/src/main/java/org/apache/commons/math/complex/Complex.java	0.4082482904638631	587	588	2	replace	if(isZero)  {  if(!isNaN)  {  return  Complex.ZERO;  }	  if(isInfinite)    {    if(!isNaN)    {    return    Complex.ZERO;    }    	non-compiled	[CE]  ';'  expected	19	None	replace
86	[BUG]  [BUGGY]  if(isInfinite  ||  isZero)  {  if(!isNaN)  {  return  Complex.ZERO;  }  [CE]  ';'  expected  [FE]                        AssertionError      [CONTEXT]      public  Complex  atan()  {  if  (isNaN)  {  return  NaN;  }      [BUGGY]  if(isInfinite  ||  isZero)  {  if(!isNaN)  {  return  Complex.ZERO;  }  [BUGGY]      return  this.add(I).divide(I.subtract(this)).log()    .multiply(I.divide(createComplex(2.0,  0.0)));  .multiply(I.divide(createComplex(2.0,  0.0)));  }  [CLASS]  Complex  [METHOD]  atan  [RETURN_TYPE]  Complex  [VARIABLES]  boolean  isInfinite  isNaN  isZero  double  addend  c  d  denominator  divisor  factor  imaginary  q  real  subtrahend  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  	projects/Math46/src/main/java/org/apache/commons/math/complex/Complex.java	0.4082482904638631	587	588	2	replace	if(isInfinite  ||  isZero)  {  if(!isNaN)  {  return  Complex.ZERO;  }	  if(isInfinite)    {    if(!isNaN)    {    return    Complex.ZERO;    }    	non-compiled	[CE]  ';'  expected	19	None	replace
87	[BUG]  [BUGGY]  if(isInfinite  ||  isZero)  {  return  Complex.ONE;  }  [CE]  ';'  expected  [FE]                    AssertionError      [CONTEXT]      public  Complex  atan()  {  if  (isNaN)  {  return  NaN;  }      [BUGGY]  if(isInfinite  ||  isZero)  {  return  Complex.ONE;  }  [BUGGY]      return  this.add(I).divide(I.subtract(this)).log()    .multiply(I.divide(createComplex(2.0,  0.0)));  .multiply(I.divide(createComplex(2.0,  0.0)));  }  [CLASS]  Complex  [METHOD]  atan  [RETURN_TYPE]  Complex  [VARIABLES]  boolean  isInfinite  isNaN  isZero  double  addend  c  d  denominator  divisor  factor  imaginary  q  real  subtrahend  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  	projects/Math46/src/main/java/org/apache/commons/math/complex/Complex.java	0.4082482904638631	587	588	2	replace	if(isInfinite  ||  isZero)  {  return  Complex.ONE;  }	  if(isNaN    ||    isZero)    {    return    Complex.ONE;    }    else    {    return    Complex.ZERO;    }    	non-compiled	[CE]  ';'  expected	47	None	replace
88	[BUG]  [BUGGY]  if(isInfinite  ||  isZero)  {  return  Complex.ONE;  }  else  {  return  Complex.ZERO;  }  [CE]  ';'  expected  [FE]                      AssertionError      [CONTEXT]      public  Complex  atan()  {  if  (isNaN)  {  return  NaN;  }      [BUGGY]  if(isInfinite  ||  isZero)  {  return  Complex.ONE;  }  else  {  return  Complex.ZERO;  }  [BUGGY]      return  this.add(I).divide(I.subtract(this)).log()    .multiply(I.divide(createComplex(2.0,  0.0)));  .multiply(I.divide(createComplex(2.0,  0.0)));  }  [CLASS]  Complex  [METHOD]  atan  [RETURN_TYPE]  Complex  [VARIABLES]  boolean  isInfinite  isNaN  isZero  double  addend  c  d  denominator  divisor  factor  imaginary  q  real  subtrahend  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  	projects/Math46/src/main/java/org/apache/commons/math/complex/Complex.java	0.4082482904638631	587	588	2	replace	if(isInfinite  ||  isZero)  {  return  Complex.ONE;  }  else  {  return  Complex.ZERO;  }	  if(isNaN    ||    isZero)    {    return    Complex.ONE;    }    else    {    return    Complex.ZERO;    }    	non-compiled	[CE]  ';'  expected	47	None	replace
89	[BUG]  [BUGGY]  if(isInfinite)  {  if(isNaN  ||  isZero)  {  return  Complex.ONE;  }  [CE]  ';'  expected  [FE]                        AssertionError      [CONTEXT]      public  Complex  atan()  {  if  (isNaN)  {  return  NaN;  }      [BUGGY]  if(isInfinite)  {  if(isNaN  ||  isZero)  {  return  Complex.ONE;  }  [BUGGY]      return  this.add(I).divide(I.subtract(this)).log()    .multiply(I.divide(createComplex(2.0,  0.0)));  .multiply(I.divide(createComplex(2.0,  0.0)));  }  [CLASS]  Complex  [METHOD]  atan  [RETURN_TYPE]  Complex  [VARIABLES]  boolean  isInfinite  isNaN  isZero  double  addend  c  d  denominator  divisor  factor  imaginary  q  real  subtrahend  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  	projects/Math46/src/main/java/org/apache/commons/math/complex/Complex.java	0.4082482904638631	587	588	2	replace	if(isInfinite)  {  if(isNaN  ||  isZero)  {  return  Complex.ONE;  }	  if(isNaN    ||    isZero)    {    return    Complex.ONE;    }    else    {    return    Complex.ZERO;    }    	non-compiled	[CE]  ';'  expected	47	None	replace
90	[BUG]  [BUGGY]  if(isNaN)  {  return  this.add(INF).log().multiply(I.divide(createComplex(0.0,  0.0)));  }  [CE]  ';'  expected  [FE]                  AssertionError      [CONTEXT]      public  Complex  atan()  {  if  (isNaN)  {  return  NaN;  }      [BUGGY]  if(isNaN)  {  return  this.add(INF).log().multiply(I.divide(createComplex(0.0,  0.0)));  }  [BUGGY]      .multiply(I.divide(createComplex(2.0,  0.0)));  }  [CLASS]  Complex  [METHOD]  atan  [RETURN_TYPE]  Complex  [VARIABLES]  boolean  isInfinite  isNaN  isZero  double  addend  c  d  denominator  divisor  factor  imaginary  q  real  subtrahend  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  	projects/Math46/src/main/java/org/apache/commons/math/complex/Complex.java	0.4082482904638631	587	588	2	replace	if(isNaN)  {  return  this.add(INF).log().multiply(I.divide(createComplex(0.0,  0.0)));  }	  return    this.add(INF).log().multiply(I.divide(createComplex(0.0,    0.0)));    	non-compiled	[CE]  ';'  expected	24	None	replace
91	[BUG]  [BUGGY]  if(isInfinite  ||  isNaN)  {  return  Complex.ZERO;  }  [CE]  ';'  expected  [FE]                      AssertionError      [CONTEXT]      public  Complex  atan()  {  if  (isNaN)  {  return  NaN;  }      [BUGGY]  if(isInfinite  ||  isNaN)  {  return  Complex.ZERO;  }  [BUGGY]      return  this.add(I).divide(I.subtract(this)).log()    .multiply(I.divide(createComplex(2.0,  0.0)));  .multiply(I.divide(createComplex(2.0,  0.0)));  }  [CLASS]  Complex  [METHOD]  atan  [RETURN_TYPE]  Complex  [VARIABLES]  boolean  isInfinite  isNaN  isZero  double  addend  c  d  denominator  divisor  factor  imaginary  q  real  subtrahend  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  	projects/Math46/src/main/java/org/apache/commons/math/complex/Complex.java	0.4082482904638631	587	588	2	replace	if(isInfinite  ||  isNaN)  {  return  Complex.ZERO;  }	  if(isNaN    ||    isInfinite)    {    return    Complex.ZERO;    }    	non-compiled	[CE]  ';'  expected	5	None	replace
92	[BUG]  [BUGGY]  if(isNaN  &&  isInfinite)  {  return  Complex.ZERO;  }  [CE]  ';'  expected  [FE]                        AssertionError      [CONTEXT]      public  Complex  atan()  {  if  (isNaN)  {  return  NaN;  }      [BUGGY]  if(isNaN  &&  isInfinite)  {  return  Complex.ZERO;  }  [BUGGY]      return  this.add(I).divide(I.subtract(this)).log()    .multiply(I.divide(createComplex(2.0,  0.0)));  .multiply(I.divide(createComplex(2.0,  0.0)));  }  [CLASS]  Complex  [METHOD]  atan  [RETURN_TYPE]  Complex  [VARIABLES]  boolean  isInfinite  isNaN  isZero  double  addend  c  d  denominator  divisor  factor  imaginary  q  real  subtrahend  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  	projects/Math46/src/main/java/org/apache/commons/math/complex/Complex.java	0.4082482904638631	587	588	2	replace	if(isNaN  &&  isInfinite)  {  return  Complex.ZERO;  }	  if(isNaN    ||    isInfinite)    {    return    Complex.ZERO;    }    	non-compiled	[CE]  ';'  expected	5	None	replace
93	[BUG]  [BUGGY]  return  this.add(real).divide(I.subtract(this)).log().multiply(I.divide(createComplex(0.0,  0.0)));  [CE]  ';'  expected  [FE]            AssertionError      [CONTEXT]      public  Complex  atan()  {  if  (isNaN)  {  return  NaN;  }      [BUGGY]  return  this.add(real).divide(I.subtract(this)).log().multiply(I.divide(createComplex(0.0,  0.0)));  [BUGGY]      .multiply(I.divide(createComplex(2.0,  0.0)));  }  [CLASS]  Complex  [METHOD]  atan  [RETURN_TYPE]  Complex  [VARIABLES]  boolean  isInfinite  isNaN  isZero  double  addend  c  d  denominator  divisor  factor  imaginary  q  real  subtrahend  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  	projects/Math46/src/main/java/org/apache/commons/math/complex/Complex.java	0.4082482904638631	587	588	2	replace	return  this.add(real).divide(I.subtract(this)).log().multiply(I.divide(createComplex(0.0,  0.0)));	  return    this.add(infinite).divide(I.subtract(this)).log().multiply(I.divide(createComplex(0.0,    0.0)));    	non-compiled	[CE]  ';'  expected	56	None	replace
94	[BUG]  [BUGGY]  return  this.add(isInfinite).divide(I.subtract(this)).log().multiply(I.divide(createComplex(0.0,  0.0)));  [CE]  ';'  expected  [FE]              AssertionError      [CONTEXT]      public  Complex  atan()  {  if  (isNaN)  {  return  NaN;  }      [BUGGY]  return  this.add(isInfinite).divide(I.subtract(this)).log().multiply(I.divide(createComplex(0.0,  0.0)));  [BUGGY]      .multiply(I.divide(createComplex(2.0,  0.0)));  }  [CLASS]  Complex  [METHOD]  atan  [RETURN_TYPE]  Complex  [VARIABLES]  boolean  isInfinite  isNaN  isZero  double  addend  c  d  denominator  divisor  factor  imaginary  q  real  subtrahend  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  	projects/Math46/src/main/java/org/apache/commons/math/complex/Complex.java	0.4082482904638631	587	588	2	replace	return  this.add(isInfinite).divide(I.subtract(this)).log().multiply(I.divide(createComplex(0.0,  0.0)));	  return    this.add(infinite).divide(I.subtract(this)).log().multiply(I.divide(createComplex(0.0,    0.0)));    	non-compiled	[CE]  ';'  expected	56	None	replace
95	[BUG]  [BUGGY]  if(isInfinite  ||  isNaN)  {  if(!isZero)  {  return  Complex.EMPTY;  }  [CE]  ';'  expected  [FE]                  AssertionError      [CONTEXT]      public  Complex  atan()  {  if  (isNaN)  {  return  NaN;  }      [BUGGY]  if(isInfinite  ||  isNaN)  {  if(!isZero)  {  return  Complex.EMPTY;  }  [BUGGY]      return  this.add(I).divide(I.subtract(this)).log()    .multiply(I.divide(createComplex(2.0,  0.0)));  .multiply(I.divide(createComplex(2.0,  0.0)));  }  [CLASS]  Complex  [METHOD]  atan  [RETURN_TYPE]  Complex  [VARIABLES]  boolean  isInfinite  isNaN  isZero  double  addend  c  d  denominator  divisor  factor  imaginary  q  real  subtrahend  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  	projects/Math46/src/main/java/org/apache/commons/math/complex/Complex.java	0.4082482904638631	587	588	2	replace	if(isInfinite  ||  isNaN)  {  if(!isZero)  {  return  Complex.EMPTY;  }	  if(isNaN    ||    isInfinite)    {    if(!isZero)    {    return    Complex.EMPTY;    }    	non-compiled	[CE]  ';'  expected	27	None	replace
96	[BUG]  [BUGGY]  if(isInfinite  ||  isInfinite)  {  if(!isZero)  {  return  Complex.EMPTY;  }  [CE]  ';'  expected  [FE]                    AssertionError      [CONTEXT]      public  Complex  atan()  {  if  (isNaN)  {  return  NaN;  }      [BUGGY]  if(isInfinite  ||  isInfinite)  {  if(!isZero)  {  return  Complex.EMPTY;  }  [BUGGY]      return  this.add(I).divide(I.subtract(this)).log()    .multiply(I.divide(createComplex(2.0,  0.0)));  .multiply(I.divide(createComplex(2.0,  0.0)));  }  [CLASS]  Complex  [METHOD]  atan  [RETURN_TYPE]  Complex  [VARIABLES]  boolean  isInfinite  isNaN  isZero  double  addend  c  d  denominator  divisor  factor  imaginary  q  real  subtrahend  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  	projects/Math46/src/main/java/org/apache/commons/math/complex/Complex.java	0.4082482904638631	587	588	2	replace	if(isInfinite  ||  isInfinite)  {  if(!isZero)  {  return  Complex.EMPTY;  }	  if(isNaN    ||    isInfinite)    {    if(!isZero)    {    return    Complex.EMPTY;    }    	non-compiled	[CE]  ';'  expected	27	None	replace
97	[BUG]  [BUGGY]  if(isInfinite  ||  isZero  ||  isNaN)  {  return  Complex.ZERO;  }  [CE]  ';'  expected  [FE]                  AssertionError      [CONTEXT]      public  Complex  atan()  {  if  (isNaN)  {  return  NaN;  }      [BUGGY]  if(isInfinite  ||  isZero  ||  isNaN)  {  return  Complex.ZERO;  }  [BUGGY]      return  this.add(I).divide(I.subtract(this)).log()    .multiply(I.divide(createComplex(2.0,  0.0)));  .multiply(I.divide(createComplex(2.0,  0.0)));  }  [CLASS]  Complex  [METHOD]  atan  [RETURN_TYPE]  Complex  [VARIABLES]  boolean  isInfinite  isNaN  isZero  double  addend  c  d  denominator  divisor  factor  imaginary  q  real  subtrahend  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  	projects/Math46/src/main/java/org/apache/commons/math/complex/Complex.java	0.4082482904638631	587	588	2	replace	if(isInfinite  ||  isZero  ||  isNaN)  {  return  Complex.ZERO;  }	  if(isInfinite    ||    isZero)    {    return    Complex.ZERO;    }    	non-compiled	[CE]  ';'  expected	3	None	replace
98	[BUG]  [BUGGY]  if(isInfinite)  {  if(!isInfinite)  {  return  NaN;  }  [CE]  ';'  expected  [FE]              AssertionError      [CONTEXT]      public  Complex  atan()  {  if  (isNaN)  {  return  NaN;  }      [BUGGY]  if(isInfinite)  {  if(!isInfinite)  {  return  NaN;  }  [BUGGY]      return  this.add(I).divide(I.subtract(this)).log()    .multiply(I.divide(createComplex(2.0,  0.0)));  .multiply(I.divide(createComplex(2.0,  0.0)));  }  [CLASS]  Complex  [METHOD]  atan  [RETURN_TYPE]  Complex  [VARIABLES]  boolean  isInfinite  isNaN  isZero  double  addend  c  d  denominator  divisor  factor  imaginary  q  real  subtrahend  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  	projects/Math46/src/main/java/org/apache/commons/math/complex/Complex.java	0.4082482904638631	587	588	2	replace	if(isInfinite)  {  if(!isInfinite)  {  return  NaN;  }	  if(isNaN)    {    if(!isInfinite)    {    return    NaN;    }    	non-compiled	[CE]  ';'  expected	37	None	replace
99	[BUG]  [BUGGY]  if(isInfinite)  {  return  NaN;  }  [CE]  ';'  expected  [FE]                AssertionError      [CONTEXT]      public  Complex  atan()  {  if  (isNaN)  {  return  NaN;  }      [BUGGY]  if(isInfinite)  {  return  NaN;  }  [BUGGY]      return  this.add(I).divide(I.subtract(this)).log()    .multiply(I.divide(createComplex(2.0,  0.0)));  .multiply(I.divide(createComplex(2.0,  0.0)));  }  [CLASS]  Complex  [METHOD]  atan  [RETURN_TYPE]  Complex  [VARIABLES]  boolean  isInfinite  isNaN  isZero  double  addend  c  d  denominator  divisor  factor  imaginary  q  real  subtrahend  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  	projects/Math46/src/main/java/org/apache/commons/math/complex/Complex.java	0.4082482904638631	587	588	2	replace	if(isInfinite)  {  return  NaN;  }	  if(isNaN)    {    if(!isInfinite)    {    return    NaN;    }    	non-compiled	[CE]  ';'  expected	37	None	replace
100	[BUG]  [BUGGY]  Context.checkInfinite(isZero);  [CE]  ';'  expected  [FE]                AssertionError      [CONTEXT]      public  Complex  atan()  {  if  (isNaN)  {  return  NaN;  }      [BUGGY]  Context.checkInfinite(isZero);  [BUGGY]      return  this.add(I).divide(I.subtract(this)).log()    .multiply(I.divide(createComplex(2.0,  0.0)));  .multiply(I.divide(createComplex(2.0,  0.0)));  }  [CLASS]  Complex  [METHOD]  atan  [RETURN_TYPE]  Complex  [VARIABLES]  boolean  isInfinite  isNaN  isZero  double  addend  c  d  denominator  divisor  factor  imaginary  q  real  subtrahend  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  	projects/Math46/src/main/java/org/apache/commons/math/complex/Complex.java	0.4082482904638631	587	588	2	replace	Context.checkInfinite(isZero);	  Context.checkInfinite(isNaN);    	non-compiled	[CE]  ';'  expected	51	None	replace
101	[BUG]  [BUGGY]  Context.checkInfinite(isNaN  ||  isZero);  [CE]  ';'  expected  [FE]                  AssertionError      [CONTEXT]      public  Complex  atan()  {  if  (isNaN)  {  return  NaN;  }      [BUGGY]  Context.checkInfinite(isNaN  ||  isZero);  [BUGGY]      return  this.add(I).divide(I.subtract(this)).log()    .multiply(I.divide(createComplex(2.0,  0.0)));  .multiply(I.divide(createComplex(2.0,  0.0)));  }  [CLASS]  Complex  [METHOD]  atan  [RETURN_TYPE]  Complex  [VARIABLES]  boolean  isInfinite  isNaN  isZero  double  addend  c  d  denominator  divisor  factor  imaginary  q  real  subtrahend  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  	projects/Math46/src/main/java/org/apache/commons/math/complex/Complex.java	0.4082482904638631	587	588	2	replace	Context.checkInfinite(isNaN  ||  isZero);	  Context.checkInfinite(isNaN);    	non-compiled	[CE]  ';'  expected	51	None	replace
102	[BUG]  [BUGGY]  Context.checkInfinite(isNaN,  isZero);  [CE]  ';'  expected  [FE]                    AssertionError      [CONTEXT]      public  Complex  atan()  {  if  (isNaN)  {  return  NaN;  }      [BUGGY]  Context.checkInfinite(isNaN,  isZero);  [BUGGY]      return  this.add(I).divide(I.subtract(this)).log()    .multiply(I.divide(createComplex(2.0,  0.0)));  .multiply(I.divide(createComplex(2.0,  0.0)));  }  [CLASS]  Complex  [METHOD]  atan  [RETURN_TYPE]  Complex  [VARIABLES]  boolean  isInfinite  isNaN  isZero  double  addend  c  d  denominator  divisor  factor  imaginary  q  real  subtrahend  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  	projects/Math46/src/main/java/org/apache/commons/math/complex/Complex.java	0.4082482904638631	587	588	2	replace	Context.checkInfinite(isNaN,  isZero);	  Context.checkInfinite(isNaN);    	non-compiled	[CE]  ';'  expected	51	None	replace
103	[BUG]  [BUGGY]  Annotated.isInfinite(this))  {  if(!isNaN)  {  return  NaN;  }  [CE]  ';'  expected  [FE]                AssertionError      [CONTEXT]      public  Complex  atan()  {  if  (isNaN)  {  return  NaN;  }      [BUGGY]  Annotated.isInfinite(this))  {  if(!isNaN)  {  return  NaN;  }  [BUGGY]      return  this.add(I).divide(I.subtract(this)).log()    .multiply(I.divide(createComplex(2.0,  0.0)));  .multiply(I.divide(createComplex(2.0,  0.0)));  }  [CLASS]  Complex  [METHOD]  atan  [RETURN_TYPE]  Complex  [VARIABLES]  boolean  isInfinite  isNaN  isZero  double  addend  c  d  denominator  divisor  factor  imaginary  q  real  subtrahend  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  	projects/Math46/src/main/java/org/apache/commons/math/complex/Complex.java	0.4082482904638631	587	588	2	replace	Annotated.isInfinite(this))  {  if(!isNaN)  {  return  NaN;  }	  Annotated.isInfinite(this))    {    if(!isZero)    {    return    NaN;    }    	non-compiled	[CE]  ';'  expected	38	None	replace
104	[BUG]  [BUGGY]  Annotated.isNaN(this))  {  if(!isZero)  {  return  NaN;  }  [CE]  ';'  expected  [FE]                  AssertionError      [CONTEXT]      public  Complex  atan()  {  if  (isNaN)  {  return  NaN;  }      [BUGGY]  Annotated.isNaN(this))  {  if(!isZero)  {  return  NaN;  }  [BUGGY]      return  this.add(I).divide(I.subtract(this)).log()    .multiply(I.divide(createComplex(2.0,  0.0)));  .multiply(I.divide(createComplex(2.0,  0.0)));  }  [CLASS]  Complex  [METHOD]  atan  [RETURN_TYPE]  Complex  [VARIABLES]  boolean  isInfinite  isNaN  isZero  double  addend  c  d  denominator  divisor  factor  imaginary  q  real  subtrahend  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  	projects/Math46/src/main/java/org/apache/commons/math/complex/Complex.java	0.4082482904638631	587	588	2	replace	Annotated.isNaN(this))  {  if(!isZero)  {  return  NaN;  }	  Annotated.isInfinite(this))    {    if(!isZero)    {    return    NaN;    }    	non-compiled	[CE]  ';'  expected	38	None	replace
105	[BUG]  [BUGGY]  Annotated.isInfinite(this))  {  if(!isInfinite)  {  return  NaN;  }  [CE]  ';'  expected  [FE]                    AssertionError      [CONTEXT]      public  Complex  atan()  {  if  (isNaN)  {  return  NaN;  }      [BUGGY]  Annotated.isInfinite(this))  {  if(!isInfinite)  {  return  NaN;  }  [BUGGY]      return  this.add(I).divide(I.subtract(this)).log()    .multiply(I.divide(createComplex(2.0,  0.0)));  .multiply(I.divide(createComplex(2.0,  0.0)));  }  [CLASS]  Complex  [METHOD]  atan  [RETURN_TYPE]  Complex  [VARIABLES]  boolean  isInfinite  isNaN  isZero  double  addend  c  d  denominator  divisor  factor  imaginary  q  real  subtrahend  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  	projects/Math46/src/main/java/org/apache/commons/math/complex/Complex.java	0.4082482904638631	587	588	2	replace	Annotated.isInfinite(this))  {  if(!isInfinite)  {  return  NaN;  }	  Annotated.isInfinite(this))    {    if(!isZero)    {    return    NaN;    }    	non-compiled	[CE]  ';'  expected	38	None	replace
106	[BUG]  [BUGGY]  if(isInfinite  ||  isZero  ||  isNaN)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  [FE]                    AssertionError      [CONTEXT]      public  Complex  atan()  {  if  (isNaN)  {  return  NaN;  }      [BUGGY]  if(isInfinite  ||  isZero  ||  isNaN)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      return  this.add(I).divide(I.subtract(this)).log()    .multiply(I.divide(createComplex(2.0,  0.0)));  .multiply(I.divide(createComplex(2.0,  0.0)));  }  [CLASS]  Complex  [METHOD]  atan  [RETURN_TYPE]  Complex  [VARIABLES]  boolean  isInfinite  isNaN  isZero  double  addend  c  d  denominator  divisor  factor  imaginary  q  real  subtrahend  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  	projects/Math46/src/main/java/org/apache/commons/math/complex/Complex.java	0.4082482904638631	587	588	2	replace	if(isInfinite  ||  isZero  ||  isNaN)  {  throw  new  IllegalArgumentException( " ");  }	  if(isInfinite    ||    isZero)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  	39	None	replace
107	[BUG]  [BUGGY]  Annotated.setInfinite(isInfinite  ||  isZero)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  [FE]                      AssertionError      [CONTEXT]      public  Complex  atan()  {  if  (isNaN)  {  return  NaN;  }      [BUGGY]  Annotated.setInfinite(isInfinite  ||  isZero)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      return  this.add(I).divide(I.subtract(this)).log()    .multiply(I.divide(createComplex(2.0,  0.0)));  .multiply(I.divide(createComplex(2.0,  0.0)));  }  [CLASS]  Complex  [METHOD]  atan  [RETURN_TYPE]  Complex  [VARIABLES]  boolean  isInfinite  isNaN  isZero  double  addend  c  d  denominator  divisor  factor  imaginary  q  real  subtrahend  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  	projects/Math46/src/main/java/org/apache/commons/math/complex/Complex.java	0.4082482904638631	587	588	2	replace	Annotated.setInfinite(isInfinite  ||  isZero)  {  throw  new  IllegalArgumentException( " ");  }	  if(isInfinite    ||    isZero)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  	39	None	replace
108	[BUG]  [BUGGY]  if(isInfinite  ||  isNaN)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  [FE]                        AssertionError      [CONTEXT]      public  Complex  atan()  {  if  (isNaN)  {  return  NaN;  }      [BUGGY]  if(isInfinite  ||  isNaN)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      return  this.add(I).divide(I.subtract(this)).log()    .multiply(I.divide(createComplex(2.0,  0.0)));  .multiply(I.divide(createComplex(2.0,  0.0)));  }  [CLASS]  Complex  [METHOD]  atan  [RETURN_TYPE]  Complex  [VARIABLES]  boolean  isInfinite  isNaN  isZero  double  addend  c  d  denominator  divisor  factor  imaginary  q  real  subtrahend  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  	projects/Math46/src/main/java/org/apache/commons/math/complex/Complex.java	0.4082482904638631	587	588	2	replace	if(isInfinite  ||  isNaN)  {  throw  new  IllegalArgumentException( " ");  }	  if(isInfinite    ||    isZero)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  	39	None	replace
109	[BUG]  [BUGGY]  While(isInfinite  &&  isZero)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  [FE]                    AssertionError      [CONTEXT]      public  Complex  atan()  {  if  (isNaN)  {  return  NaN;  }      [BUGGY]  While(isInfinite  &&  isZero)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      return  this.add(I).divide(I.subtract(this)).log()    .multiply(I.divide(createComplex(2.0,  0.0)));  .multiply(I.divide(createComplex(2.0,  0.0)));  }  [CLASS]  Complex  [METHOD]  atan  [RETURN_TYPE]  Complex  [VARIABLES]  boolean  isInfinite  isNaN  isZero  double  addend  c  d  denominator  divisor  factor  imaginary  q  real  subtrahend  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  	projects/Math46/src/main/java/org/apache/commons/math/complex/Complex.java	0.4082482904638631	587	588	2	replace	While(isInfinite  &&  isZero)  {  throw  new  IllegalArgumentException( " ");  }	  if(isNaN    ||    isZero)    {    throw    new    IllegalArgumentException(   "   ".);    }    	non-compiled	[CE]  	53	None	replace
110	[BUG]  [BUGGY]  While(isInfinite  ||  isZero)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  [FE]                      AssertionError      [CONTEXT]      public  Complex  atan()  {  if  (isNaN)  {  return  NaN;  }      [BUGGY]  While(isInfinite  ||  isZero)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      return  this.add(I).divide(I.subtract(this)).log()    .multiply(I.divide(createComplex(2.0,  0.0)));  .multiply(I.divide(createComplex(2.0,  0.0)));  }  [CLASS]  Complex  [METHOD]  atan  [RETURN_TYPE]  Complex  [VARIABLES]  boolean  isInfinite  isNaN  isZero  double  addend  c  d  denominator  divisor  factor  imaginary  q  real  subtrahend  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  	projects/Math46/src/main/java/org/apache/commons/math/complex/Complex.java	0.4082482904638631	587	588	2	replace	While(isInfinite  ||  isZero)  {  throw  new  IllegalArgumentException( " ");  }	  if(isNaN    ||    isZero)    {    throw    new    IllegalArgumentException(   "   ".);    }    	non-compiled	[CE]  	53	None	replace
111	[BUG]  [BUGGY]  While(isNaN  &&  isZero)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  [FE]                        AssertionError      [CONTEXT]      public  Complex  atan()  {  if  (isNaN)  {  return  NaN;  }      [BUGGY]  While(isNaN  &&  isZero)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      return  this.add(I).divide(I.subtract(this)).log()    .multiply(I.divide(createComplex(2.0,  0.0)));  .multiply(I.divide(createComplex(2.0,  0.0)));  }  [CLASS]  Complex  [METHOD]  atan  [RETURN_TYPE]  Complex  [VARIABLES]  boolean  isInfinite  isNaN  isZero  double  addend  c  d  denominator  divisor  factor  imaginary  q  real  subtrahend  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  	projects/Math46/src/main/java/org/apache/commons/math/complex/Complex.java	0.4082482904638631	587	588	2	replace	While(isNaN  &&  isZero)  {  throw  new  IllegalArgumentException( " ");  }	  if(isNaN    ||    isZero)    {    throw    new    IllegalArgumentException(   "   ".);    }    	non-compiled	[CE]  	53	None	replace
112	[BUG]  [BUGGY]  Annotated.isInfinite(this)  {  if(isInfinite)  {  return  NaN;  }  [CE]  ';'  expected  [FE]                AssertionError      [CONTEXT]      public  Complex  atan()  {  if  (isNaN)  {  return  NaN;  }      [BUGGY]  Annotated.isInfinite(this)  {  if(isInfinite)  {  return  NaN;  }  [BUGGY]      return  this.add(I).divide(I.subtract(this)).log()    .multiply(I.divide(createComplex(2.0,  0.0)));  .multiply(I.divide(createComplex(2.0,  0.0)));  }  [CLASS]  Complex  [METHOD]  atan  [RETURN_TYPE]  Complex  [VARIABLES]  boolean  isInfinite  isNaN  isZero  double  addend  c  d  denominator  divisor  factor  imaginary  q  real  subtrahend  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  	projects/Math46/src/main/java/org/apache/commons/math/complex/Complex.java	0.4082482904638631	587	588	2	replace	Annotated.isInfinite(this)  {  if(isInfinite)  {  return  NaN;  }	  if(isZero)    {    if(isInfinite)    {    return    NaN;    }    	non-compiled	[CE]  ';'  expected	13	None	replace
113	[BUG]  [BUGGY]  if(isNaN)  {  if(isZero)  {  return  NaN;  }  [CE]  ';'  expected  [FE]                  AssertionError      [CONTEXT]      public  Complex  atan()  {  if  (isNaN)  {  return  NaN;  }      [BUGGY]  if(isNaN)  {  if(isZero)  {  return  NaN;  }  [BUGGY]      return  this.add(I).divide(I.subtract(this)).log()    .multiply(I.divide(createComplex(2.0,  0.0)));  .multiply(I.divide(createComplex(2.0,  0.0)));  }  [CLASS]  Complex  [METHOD]  atan  [RETURN_TYPE]  Complex  [VARIABLES]  boolean  isInfinite  isNaN  isZero  double  addend  c  d  denominator  divisor  factor  imaginary  q  real  subtrahend  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  	projects/Math46/src/main/java/org/apache/commons/math/complex/Complex.java	0.4082482904638631	587	588	2	replace	if(isNaN)  {  if(isZero)  {  return  NaN;  }	  if(isZero)    {    if(isInfinite)    {    return    NaN;    }    	non-compiled	[CE]  ';'  expected	13	None	replace
114	[BUG]  [BUGGY]  if(isInfinite)  {  if(!isInfinite)  {  return  Complex.ZERO;  }  [CE]  ';'  expected  [FE]                    AssertionError      [CONTEXT]      public  Complex  atan()  {  if  (isNaN)  {  return  NaN;  }      [BUGGY]  if(isInfinite)  {  if(!isInfinite)  {  return  Complex.ZERO;  }  [BUGGY]      return  this.add(I).divide(I.subtract(this)).log()    .multiply(I.divide(createComplex(2.0,  0.0)));  .multiply(I.divide(createComplex(2.0,  0.0)));  }  [CLASS]  Complex  [METHOD]  atan  [RETURN_TYPE]  Complex  [VARIABLES]  boolean  isInfinite  isNaN  isZero  double  addend  c  d  denominator  divisor  factor  imaginary  q  real  subtrahend  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  	projects/Math46/src/main/java/org/apache/commons/math/complex/Complex.java	0.4082482904638631	587	588	2	replace	if(isInfinite)  {  if(!isInfinite)  {  return  Complex.ZERO;  }	  if(isNaN)    {    if(!isInfinite)    {    return    Complex.ZERO;    }    	non-compiled	[CE]  ';'  expected	18	None	replace
115	[BUG]  [BUGGY]  if(isZero)  {  if(!isInfinite)  {  return  Complex.ZERO;  }  [CE]  [FE]                      AssertionError      [CONTEXT]      public  Complex  atan()  {  if  (isNaN)  {  return  NaN;  }      [BUGGY]  if(isZero)  {  if(!isInfinite)  {  return  Complex.ZERO;  }  [BUGGY]      return  this.add(I).divide(I.subtract(this)).log()    .multiply(I.divide(createComplex(2.0,  0.0)));  .multiply(I.divide(createComplex(2.0,  0.0)));  }  [CLASS]  Complex  [METHOD]  atan  [RETURN_TYPE]  Complex  [VARIABLES]  boolean  isInfinite  isNaN  isZero  double  addend  c  d  denominator  divisor  factor  imaginary  q  real  subtrahend  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  	projects/Math46/src/main/java/org/apache/commons/math/complex/Complex.java	0.4082482904638631	587	588	2	replace	if(isZero)  {  if(!isInfinite)  {  return  Complex.ZERO;  }	  if(isNaN)    {    if(!isInfinite)    {    return    Complex.ZERO;    }    	non-compiled	[CE]  	18	None	replace
116	[BUG]  [BUGGY]  return  this.add(INF).log().multiply(I.divide(createComplex(0.0,  1.0)));  [CE]  [FE]                    AssertionError      [CONTEXT]      public  Complex  atan()  {  if  (isNaN)  {  return  NaN;  }      [BUGGY]  return  this.add(INF).log().multiply(I.divide(createComplex(0.0,  1.0)));  [BUGGY]      .multiply(I.divide(createComplex(2.0,  0.0)));  }  [CLASS]  Complex  [METHOD]  atan  [RETURN_TYPE]  Complex  [VARIABLES]  boolean  isInfinite  isNaN  isZero  double  addend  c  d  denominator  divisor  factor  imaginary  q  real  subtrahend  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  	projects/Math46/src/main/java/org/apache/commons/math/complex/Complex.java	0.4082482904638631	587	588	2	replace	return  this.add(INF).log().multiply(I.divide(createComplex(0.0,  1.0)));	  return    this.add(INF).log().multiply(I.divide(createComplex(2.0,    1.0)));    	non-compiled	[CE]  	25	None	replace
117	[BUG]  [BUGGY]  Context.checkInfinite(isInfinite);  [CE]  [FE]                AssertionError      [CONTEXT]      public  Complex  atan()  {  if  (isNaN)  {  return  NaN;  }      [BUGGY]  Context.checkInfinite(isInfinite);  [BUGGY]      return  this.add(I).divide(I.subtract(this)).log()    .multiply(I.divide(createComplex(2.0,  0.0)));  .multiply(I.divide(createComplex(2.0,  0.0)));  }  [CLASS]  Complex  [METHOD]  atan  [RETURN_TYPE]  Complex  [VARIABLES]  boolean  isInfinite  isNaN  isZero  double  addend  c  d  denominator  divisor  factor  imaginary  q  real  subtrahend  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  	projects/Math46/src/main/java/org/apache/commons/math/complex/Complex.java	0.4082482904638631	587	588	2	replace	Context.checkInfinite(isInfinite);	  if(isNaN)    {    if(isInfinite)    {    return    NaN;    }    	non-compiled	[CE]  	8	None	replace
118	[BUG]  [BUGGY]  Context.checkState(isInfinite);  [CE]  [FE]                  AssertionError      [CONTEXT]      public  Complex  atan()  {  if  (isNaN)  {  return  NaN;  }      [BUGGY]  Context.checkState(isInfinite);  [BUGGY]      return  this.add(I).divide(I.subtract(this)).log()    .multiply(I.divide(createComplex(2.0,  0.0)));  .multiply(I.divide(createComplex(2.0,  0.0)));  }  [CLASS]  Complex  [METHOD]  atan  [RETURN_TYPE]  Complex  [VARIABLES]  boolean  isInfinite  isNaN  isZero  double  addend  c  d  denominator  divisor  factor  imaginary  q  real  subtrahend  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  	projects/Math46/src/main/java/org/apache/commons/math/complex/Complex.java	0.4082482904638631	587	588	2	replace	Context.checkState(isInfinite);	  if(isNaN)    {    if(isInfinite)    {    return    NaN;    }    	non-compiled	[CE]  	8	None	replace
119	[BUG]  [BUGGY]  While(isInfinite)  {  if(isNaN)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  [FE]                        AssertionError      [CONTEXT]      public  Complex  atan()  {  if  (isNaN)  {  return  NaN;  }      [BUGGY]  While(isInfinite)  {  if(isNaN)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      .multiply(I.divide(createComplex(2.0,  0.0)));  }  [CLASS]  Complex  [METHOD]  atan  [RETURN_TYPE]  Complex  [VARIABLES]  boolean  isInfinite  isNaN  isZero  double  addend  c  d  denominator  divisor  factor  imaginary  q  real  subtrahend  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  	projects/Math46/src/main/java/org/apache/commons/math/complex/Complex.java	0.4082482904638631	587	588	2	replace	While(isInfinite)  {  if(isNaN)  {  throw  new  IllegalArgumentException( " ");  }	  if(isNaN)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  	31	None	replace
120	[BUG]  [BUGGY]  While(isInfinite  &&  isNaN)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  [FE]                          AssertionError      [CONTEXT]      public  Complex  atan()  {  if  (isNaN)  {  return  NaN;  }      [BUGGY]  While(isInfinite  &&  isNaN)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      .multiply(I.divide(createComplex(2.0,  0.0)));  }  [CLASS]  Complex  [METHOD]  atan  [RETURN_TYPE]  Complex  [VARIABLES]  boolean  isInfinite  isNaN  isZero  double  addend  c  d  denominator  divisor  factor  imaginary  q  real  subtrahend  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  	projects/Math46/src/main/java/org/apache/commons/math/complex/Complex.java	0.4082482904638631	587	588	2	replace	While(isInfinite  &&  isNaN)  {  throw  new  IllegalArgumentException( " ");  }	  if(isNaN)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  	31	None	replace
121	[BUG]  [BUGGY]  While(isNaN  &&  isInfinite)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  [FE]                            AssertionError      [CONTEXT]      public  Complex  atan()  {  if  (isNaN)  {  return  NaN;  }      [BUGGY]  While(isNaN  &&  isInfinite)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      .multiply(I.divide(createComplex(2.0,  0.0)));  }  [CLASS]  Complex  [METHOD]  atan  [RETURN_TYPE]  Complex  [VARIABLES]  boolean  isInfinite  isNaN  isZero  double  addend  c  d  denominator  divisor  factor  imaginary  q  real  subtrahend  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  	projects/Math46/src/main/java/org/apache/commons/math/complex/Complex.java	0.4082482904638631	587	588	2	replace	While(isNaN  &&  isInfinite)  {  throw  new  IllegalArgumentException( " ");  }	  if(isNaN)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  	31	None	replace
122	[BUG]  [BUGGY]  While(isNaN)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  [FE]                              AssertionError      [CONTEXT]      public  Complex  atan()  {  if  (isNaN)  {  return  NaN;  }      [BUGGY]  While(isNaN)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      .multiply(I.divide(createComplex(2.0,  0.0)));  }  [CLASS]  Complex  [METHOD]  atan  [RETURN_TYPE]  Complex  [VARIABLES]  boolean  isInfinite  isNaN  isZero  double  addend  c  d  denominator  divisor  factor  imaginary  q  real  subtrahend  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  	projects/Math46/src/main/java/org/apache/commons/math/complex/Complex.java	0.4082482904638631	587	588	2	replace	While(isNaN)  {  throw  new  IllegalArgumentException( " ");  }	  if(isNaN)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  	31	None	replace
123	[BUG]  [BUGGY]  if(isNaN)  {  return  this.add(INF).multiply(I.subtract(this)).log().multiply(I.divide(createComplex(0.0,  0.0)));  }  [CE]  [FE]                    AssertionError      [CONTEXT]      public  Complex  atan()  {  if  (isNaN)  {  return  NaN;  }      [BUGGY]  if(isNaN)  {  return  this.add(INF).multiply(I.subtract(this)).log().multiply(I.divide(createComplex(0.0,  0.0)));  }  [BUGGY]      .multiply(I.divide(createComplex(2.0,  0.0)));  }  [CLASS]  Complex  [METHOD]  atan  [RETURN_TYPE]  Complex  [VARIABLES]  boolean  isInfinite  isNaN  isZero  double  addend  c  d  denominator  divisor  factor  imaginary  q  real  subtrahend  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  	projects/Math46/src/main/java/org/apache/commons/math/complex/Complex.java	0.4082482904638631	587	588	2	replace	if(isNaN)  {  return  this.add(INF).multiply(I.subtract(this)).log().multiply(I.divide(createComplex(0.0,  0.0)));  }	  return    this.add(INF).multiply(I.subtract(this)).log().multiply(I.divide(createComplex(0.0,    0.0)));    	non-compiled	[CE]  	7	None	replace
124	[BUG]  [BUGGY]  if(isZero)  {  return  this.add(INF).multiply(I.subtract(this)).log().multiply(I.divide(createComplex(0.0,  0.0)));  }  [CE]  [FE]                      AssertionError      [CONTEXT]      public  Complex  atan()  {  if  (isNaN)  {  return  NaN;  }      [BUGGY]  if(isZero)  {  return  this.add(INF).multiply(I.subtract(this)).log().multiply(I.divide(createComplex(0.0,  0.0)));  }  [BUGGY]      .multiply(I.divide(createComplex(2.0,  0.0)));  }  [CLASS]  Complex  [METHOD]  atan  [RETURN_TYPE]  Complex  [VARIABLES]  boolean  isInfinite  isNaN  isZero  double  addend  c  d  denominator  divisor  factor  imaginary  q  real  subtrahend  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  	projects/Math46/src/main/java/org/apache/commons/math/complex/Complex.java	0.4082482904638631	587	588	2	replace	if(isZero)  {  return  this.add(INF).multiply(I.subtract(this)).log().multiply(I.divide(createComplex(0.0,  0.0)));  }	  return    this.add(INF).multiply(I.subtract(this)).log().multiply(I.divide(createComplex(0.0,    0.0)));    	non-compiled	[CE]  	7	None	replace
125	[BUG]  [BUGGY]  Context.checkState(isNaN  ||  isInfinite)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  [FE]                      AssertionError      [CONTEXT]      public  Complex  atan()  {  if  (isNaN)  {  return  NaN;  }      [BUGGY]  Context.checkState(isNaN  ||  isInfinite)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      .multiply(I.divide(createComplex(2.0,  0.0)));  }  [CLASS]  Complex  [METHOD]  atan  [RETURN_TYPE]  Complex  [VARIABLES]  boolean  isInfinite  isNaN  isZero  double  addend  c  d  denominator  divisor  factor  imaginary  q  real  subtrahend  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  	projects/Math46/src/main/java/org/apache/commons/math/complex/Complex.java	0.4082482904638631	587	588	2	replace	Context.checkState(isNaN  ||  isInfinite)  {  throw  new  IllegalArgumentException( " ");  }	  if(isNaN    ||    isInfinite)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  	30	None	replace
126	[BUG]  [BUGGY]  if(isNaN)  {  return  NaN;  }  [CE]  [FE]                AssertionError      [CONTEXT]      public  Complex  atan()  {  if  (isNaN)  {  return  NaN;  }      [BUGGY]  if(isNaN)  {  return  NaN;  }  [BUGGY]      return  this.add(I).divide(I.subtract(this)).log()    .multiply(I.divide(createComplex(2.0,  0.0)));  .multiply(I.divide(createComplex(2.0,  0.0)));  }  [CLASS]  Complex  [METHOD]  atan  [RETURN_TYPE]  Complex  [VARIABLES]  boolean  isInfinite  isNaN  isZero  double  addend  c  d  denominator  divisor  factor  imaginary  q  real  subtrahend  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  	projects/Math46/src/main/java/org/apache/commons/math/complex/Complex.java	0.4082482904638631	587	588	2	replace	if(isNaN)  {  return  NaN;  }	  if(!isInfinite)    {    return    NaN;    }    	non-compiled	[CE]  	64	None	replace
127	[BUG]  [BUGGY]  Iterator  <  Complex>  it  =  this.getDenominators().iterator();  [CE]  [FE]                    AssertionError      [CONTEXT]      public  Complex  atan()  {  if  (isNaN)  {  return  NaN;  }      [BUGGY]  Iterator  <  Complex>  it  =  this.getDenominators().iterator();  [BUGGY]      return  this.add(I).divide(I.subtract(this)).log()    .multiply(I.divide(createComplex(2.0,  0.0)));  .multiply(I.divide(createComplex(2.0,  0.0)));  }  [CLASS]  Complex  [METHOD]  atan  [RETURN_TYPE]  Complex  [VARIABLES]  boolean  isInfinite  isNaN  isZero  double  addend  c  d  denominator  divisor  factor  imaginary  q  real  subtrahend  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  	projects/Math46/src/main/java/org/apache/commons/math/complex/Complex.java	0.4082482904638631	587	588	2	replace	Iterator  <  Complex>  it  =  this.getDenominators().iterator();	  Iterator    <    Complex>    it    =    this.getDivisors().iterator();    	non-compiled	[CE]  	22	None	replace
128	[BUG]  [BUGGY]  Iterator  <  Complex>  it  =  this.getSubtrahends().iterator();  [CE]  [FE]                      AssertionError      [CONTEXT]      public  Complex  atan()  {  if  (isNaN)  {  return  NaN;  }      [BUGGY]  Iterator  <  Complex>  it  =  this.getSubtrahends().iterator();  [BUGGY]      return  this.add(I).divide(I.subtract(this)).log()    .multiply(I.divide(createComplex(2.0,  0.0)));  .multiply(I.divide(createComplex(2.0,  0.0)));  }  [CLASS]  Complex  [METHOD]  atan  [RETURN_TYPE]  Complex  [VARIABLES]  boolean  isInfinite  isNaN  isZero  double  addend  c  d  denominator  divisor  factor  imaginary  q  real  subtrahend  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  	projects/Math46/src/main/java/org/apache/commons/math/complex/Complex.java	0.4082482904638631	587	588	2	replace	Iterator  <  Complex>  it  =  this.getSubtrahends().iterator();	  Iterator    <    Complex>    it    =    this.getDivisors().iterator();    	non-compiled	[CE]  	22	None	replace
129	[BUG]  [BUGGY]  Iterator  <  Complex>  it  =  this.getSubtracts().iterator();  [CE]  [FE]                        AssertionError      [CONTEXT]      public  Complex  atan()  {  if  (isNaN)  {  return  NaN;  }      [BUGGY]  Iterator  <  Complex>  it  =  this.getSubtracts().iterator();  [BUGGY]      return  this.add(I).divide(I.subtract(this)).log()    .multiply(I.divide(createComplex(2.0,  0.0)));  .multiply(I.divide(createComplex(2.0,  0.0)));  }  [CLASS]  Complex  [METHOD]  atan  [RETURN_TYPE]  Complex  [VARIABLES]  boolean  isInfinite  isNaN  isZero  double  addend  c  d  denominator  divisor  factor  imaginary  q  real  subtrahend  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  	projects/Math46/src/main/java/org/apache/commons/math/complex/Complex.java	0.4082482904638631	587	588	2	replace	Iterator  <  Complex>  it  =  this.getSubtracts().iterator();	  Iterator    <    Complex>    it    =    this.getDivisors().iterator();    	non-compiled	[CE]  	22	None	replace
130	[BUG]  [BUGGY]  Annotated.isInfinite(this))  {  if(isNaN)  {  return  NaN;  }  [CE]  [FE]              AssertionError      [CONTEXT]      public  Complex  atan()  {  if  (isNaN)  {  return  NaN;  }      [BUGGY]  Annotated.isInfinite(this))  {  if(isNaN)  {  return  NaN;  }  [BUGGY]      return  this.add(I).divide(I.subtract(this)).log()    .multiply(I.divide(createComplex(2.0,  0.0)));  .multiply(I.divide(createComplex(2.0,  0.0)));  }  [CLASS]  Complex  [METHOD]  atan  [RETURN_TYPE]  Complex  [VARIABLES]  boolean  isInfinite  isNaN  isZero  double  addend  c  d  denominator  divisor  factor  imaginary  q  real  subtrahend  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  	projects/Math46/src/main/java/org/apache/commons/math/complex/Complex.java	0.4082482904638631	587	588	2	replace	Annotated.isInfinite(this))  {  if(isNaN)  {  return  NaN;  }	  if(isZero)    {    if(isNaN)    {    return    NaN;    }    	non-compiled	[CE]  	12	None	replace
131	[BUG]  [BUGGY]  while(isInfinite  &&  isZero)  {  return  this.add(INF).divide(I.subtract(this)).log().multiply(I.divide(createComplex(0.0,  0.0)));  }  [CE]  [FE]            AssertionError      [CONTEXT]      public  Complex  atan()  {  if  (isNaN)  {  return  NaN;  }      [BUGGY]  while(isInfinite  &&  isZero)  {  return  this.add(INF).divide(I.subtract(this)).log().multiply(I.divide(createComplex(0.0,  0.0)));  }  [BUGGY]      .multiply(I.divide(createComplex(2.0,  0.0)));  }  [CLASS]  Complex  [METHOD]  atan  [RETURN_TYPE]  Complex  [VARIABLES]  boolean  isInfinite  isNaN  isZero  double  addend  c  d  denominator  divisor  factor  imaginary  q  real  subtrahend  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  	projects/Math46/src/main/java/org/apache/commons/math/complex/Complex.java	0.4082482904638631	587	588	2	replace	while(isInfinite  &&  isZero)  {  return  this.add(INF).divide(I.subtract(this)).log().multiply(I.divide(createComplex(0.0,  0.0)));  }	  if(isZero)    {    return    this.add(INF).divide(I.subtract(this)).log().multiply(I.divide(createComplex(0.0,    0.0)));    }    	non-compiled	[CE]  	10	None	replace
132	[BUG]  [BUGGY]  while(isInfinite)  {  if(isZero)  {  return  INF).divide(I.subtract(this)).log().multiply(I.divide(createComplex(0.0,  0.0)));  }  [CE]  [FE]              AssertionError      [CONTEXT]      public  Complex  atan()  {  if  (isNaN)  {  return  NaN;  }      [BUGGY]  while(isInfinite)  {  if(isZero)  {  return  INF).divide(I.subtract(this)).log().multiply(I.divide(createComplex(0.0,  0.0)));  }  [BUGGY]      .multiply(I.divide(createComplex(2.0,  0.0)));  }  [CLASS]  Complex  [METHOD]  atan  [RETURN_TYPE]  Complex  [VARIABLES]  boolean  isInfinite  isNaN  isZero  double  addend  c  d  denominator  divisor  factor  imaginary  q  real  subtrahend  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  	projects/Math46/src/main/java/org/apache/commons/math/complex/Complex.java	0.4082482904638631	587	588	2	replace	while(isInfinite)  {  if(isZero)  {  return  INF).divide(I.subtract(this)).log().multiply(I.divide(createComplex(0.0,  0.0)));  }	  if(isZero)    {    return    this.add(INF).divide(I.subtract(this)).log().multiply(I.divide(createComplex(0.0,    0.0)));    }    	non-compiled	[CE]  	10	None	replace
133	[BUG]  [BUGGY]  while(isInfinite)  {  if(isZero)  {  return  this.add(INF).divide(I.subtract(this)).log().multiply(I.divide(createComplex(0.0,  0.0)));  }  [CE]  [FE]                AssertionError      [CONTEXT]      public  Complex  atan()  {  if  (isNaN)  {  return  NaN;  }      [BUGGY]  while(isInfinite)  {  if(isZero)  {  return  this.add(INF).divide(I.subtract(this)).log().multiply(I.divide(createComplex(0.0,  0.0)));  }  [BUGGY]      .multiply(I.divide(createComplex(2.0,  0.0)));  }  [CLASS]  Complex  [METHOD]  atan  [RETURN_TYPE]  Complex  [VARIABLES]  boolean  isInfinite  isNaN  isZero  double  addend  c  d  denominator  divisor  factor  imaginary  q  real  subtrahend  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  	projects/Math46/src/main/java/org/apache/commons/math/complex/Complex.java	0.4082482904638631	587	588	2	replace	while(isInfinite)  {  if(isZero)  {  return  this.add(INF).divide(I.subtract(this)).log().multiply(I.divide(createComplex(0.0,  0.0)));  }	  if(isZero)    {    return    this.add(INF).divide(I.subtract(this)).log().multiply(I.divide(createComplex(0.0,    0.0)));    }    	non-compiled	[CE]  	10	None	replace
134	[BUG]  [BUGGY]  Iterator  <  Complex>  it  =  factor.values().iterator();  [CE]  [FE]            AssertionError      [CONTEXT]      public  Complex  atan()  {  if  (isNaN)  {  return  NaN;  }      [BUGGY]  Iterator  <  Complex>  it  =  factor.values().iterator();  [BUGGY]      return  this.add(I).divide(I.subtract(this)).log()    .multiply(I.divide(createComplex(2.0,  0.0)));  .multiply(I.divide(createComplex(2.0,  0.0)));  }  [CLASS]  Complex  [METHOD]  atan  [RETURN_TYPE]  Complex  [VARIABLES]  boolean  isInfinite  isNaN  isZero  double  addend  c  d  denominator  divisor  factor  imaginary  q  real  subtrahend  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  	projects/Math46/src/main/java/org/apache/commons/math/complex/Complex.java	0.4082482904638631	587	588	2	replace	Iterator  <  Complex>  it  =  factor.values().iterator();	  Iterator    <    Complex>    it    =    factor.iterator();    	non-compiled	[CE]  	52	None	replace
135	[BUG]  [BUGGY]  Iterator  <  Complex>  it  =  this.factor.atan();  [CE]  [FE]              AssertionError      [CONTEXT]      public  Complex  atan()  {  if  (isNaN)  {  return  NaN;  }      [BUGGY]  Iterator  <  Complex>  it  =  this.factor.atan();  [BUGGY]      return  this.add(I).divide(I.subtract(this)).log()    .multiply(I.divide(createComplex(2.0,  0.0)));  .multiply(I.divide(createComplex(2.0,  0.0)));  }  [CLASS]  Complex  [METHOD]  atan  [RETURN_TYPE]  Complex  [VARIABLES]  boolean  isInfinite  isNaN  isZero  double  addend  c  d  denominator  divisor  factor  imaginary  q  real  subtrahend  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  	projects/Math46/src/main/java/org/apache/commons/math/complex/Complex.java	0.4082482904638631	587	588	2	replace	Iterator  <  Complex>  it  =  this.factor.atan();	  Iterator    <    Complex>    it    =    factor.iterator();    	non-compiled	[CE]  	52	None	replace
136	[BUG]  [BUGGY]  if(isInfinite  &&  isZero)  {  if(isNaN)  {  return  NaN;  }  [CE]  [FE]                  AssertionError      [CONTEXT]      public  Complex  atan()  {  if  (isNaN)  {  return  NaN;  }      [BUGGY]  if(isInfinite  &&  isZero)  {  if(isNaN)  {  return  NaN;  }  [BUGGY]      return  this.add(I).divide(I.subtract(this)).log()    .multiply(I.divide(createComplex(2.0,  0.0)));  .multiply(I.divide(createComplex(2.0,  0.0)));  }  [CLASS]  Complex  [METHOD]  atan  [RETURN_TYPE]  Complex  [VARIABLES]  boolean  isInfinite  isNaN  isZero  double  addend  c  d  denominator  divisor  factor  imaginary  q  real  subtrahend  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  	projects/Math46/src/main/java/org/apache/commons/math/complex/Complex.java	0.4082482904638631	587	588	2	replace	if(isInfinite  &&  isZero)  {  if(isNaN)  {  return  NaN;  }	  if(isInfinite    ||    isZero)    {    if(isNaN)    {    return    NaN;    }    	non-compiled	[CE]  	9	None	replace
137	[BUG]  [BUGGY]  if(!isZero)  {  return  Complex.ZERO;  }  [CE]  [FE]            AssertionError      [CONTEXT]      public  Complex  atan()  {  if  (isNaN)  {  return  NaN;  }      [BUGGY]  if(!isZero)  {  return  Complex.ZERO;  }  [BUGGY]      return  this.add(I).divide(I.subtract(this)).log()    .multiply(I.divide(createComplex(2.0,  0.0)));  .multiply(I.divide(createComplex(2.0,  0.0)));  }  [CLASS]  Complex  [METHOD]  atan  [RETURN_TYPE]  Complex  [VARIABLES]  boolean  isInfinite  isNaN  isZero  double  addend  c  d  denominator  divisor  factor  imaginary  q  real  subtrahend  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  	projects/Math46/src/main/java/org/apache/commons/math/complex/Complex.java	0.4082482904638631	587	588	2	replace	if(!isZero)  {  return  Complex.ZERO;  }	  if(!isInfinite)    {    return    Complex.ZERO;    }    	non-compiled	[CE]  	57	None	replace
138	[BUG]  [BUGGY]  if(isZero)  {  return  NaN;  }  [CE]  [FE]                AssertionError      [CONTEXT]      public  Complex  atan()  {  if  (isNaN)  {  return  NaN;  }      [BUGGY]  if(isZero)  {  return  NaN;  }  [BUGGY]      return  this.add(I).divide(I.subtract(this)).log()    .multiply(I.divide(createComplex(2.0,  0.0)));  .multiply(I.divide(createComplex(2.0,  0.0)));  }  [CLASS]  Complex  [METHOD]  atan  [RETURN_TYPE]  Complex  [VARIABLES]  boolean  isInfinite  isNaN  isZero  double  addend  c  d  denominator  divisor  factor  imaginary  q  real  subtrahend  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  	projects/Math46/src/main/java/org/apache/commons/math/complex/Complex.java	0.4082482904638631	587	588	2	replace	if(isZero)  {  return  NaN;  }	  if(!isInfinite)    {    return    NaN;    }    	non-compiled	[CE]  	64	None	replace
139	[BUG]  [BUGGY]  if(isInfinite)  {  return  this;  }  [CE]  [FE]                  AssertionError      [CONTEXT]      public  Complex  atan()  {  if  (isNaN)  {  return  NaN;  }      [BUGGY]  if(isInfinite)  {  return  this;  }  [BUGGY]      return  this.add(I).divide(I.subtract(this)).log()    .multiply(I.divide(createComplex(2.0,  0.0)));  .multiply(I.divide(createComplex(2.0,  0.0)));  }  [CLASS]  Complex  [METHOD]  atan  [RETURN_TYPE]  Complex  [VARIABLES]  boolean  isInfinite  isNaN  isZero  double  addend  c  d  denominator  divisor  factor  imaginary  q  real  subtrahend  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  	projects/Math46/src/main/java/org/apache/commons/math/complex/Complex.java	0.4082482904638631	587	588	2	replace	if(isInfinite)  {  return  this;  }	  if(!isInfinite)    {    return    NaN;    }    	non-compiled	[CE]  	64	None	replace
140	[BUG]  [BUGGY]  aughtException( " ");  [CE]  [FE]                        AssertionError      [CONTEXT]      public  Complex  atan()  {  if  (isNaN)  {  return  NaN;  }      [BUGGY]  aughtException( " ");  [BUGGY]      .multiply(I.divide(createComplex(2.0,  0.0)));  }  [CLASS]  Complex  [METHOD]  atan  [RETURN_TYPE]  Complex  [VARIABLES]  boolean  isInfinite  isNaN  isZero  double  addend  c  d  denominator  divisor  factor  imaginary  q  real  subtrahend  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  	projects/Math46/src/main/java/org/apache/commons/math/complex/Complex.java	0.4082482904638631	587	588	2	replace	aughtException( " ");	  if(isNaN)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  	31	None	replace
141	[BUG]  [BUGGY]  [Delete]  [CE]  [FE]                          AssertionError      [CONTEXT]      public  Complex  atan()  {  if  (isNaN)  {  return  NaN;  }      [BUGGY]  [Delete]  [BUGGY]      .multiply(I.divide(createComplex(2.0,  0.0)));  }  [CLASS]  Complex  [METHOD]  atan  [RETURN_TYPE]  Complex  [VARIABLES]  boolean  isInfinite  isNaN  isZero  double  addend  c  d  denominator  divisor  factor  imaginary  q  real  subtrahend  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  	projects/Math46/src/main/java/org/apache/commons/math/complex/Complex.java	0.4082482904638631	587	588	2	replace	[Delete]	  if(isNaN)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  	31	None	replace
142	[BUG]  [BUGGY]  nisip  =  getNaN();  [CE]  [FE]                            AssertionError      [CONTEXT]      public  Complex  atan()  {  if  (isNaN)  {  return  NaN;  }      [BUGGY]  nisip  =  getNaN();  [BUGGY]      .multiply(I.divide(createComplex(2.0,  0.0)));  }  [CLASS]  Complex  [METHOD]  atan  [RETURN_TYPE]  Complex  [VARIABLES]  boolean  isInfinite  isNaN  isZero  double  addend  c  d  denominator  divisor  factor  imaginary  q  real  subtrahend  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  	projects/Math46/src/main/java/org/apache/commons/math/complex/Complex.java	0.4082482904638631	587	588	2	replace	nisip  =  getNaN();	  if(isNaN)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  	31	None	replace
143	[BUG]  [BUGGY]  safeTree();  [CE]  [FE]                              AssertionError      [CONTEXT]      public  Complex  atan()  {  if  (isNaN)  {  return  NaN;  }      [BUGGY]  safeTree();  [BUGGY]      .multiply(I.divide(createComplex(2.0,  0.0)));  }  [CLASS]  Complex  [METHOD]  atan  [RETURN_TYPE]  Complex  [VARIABLES]  boolean  isInfinite  isNaN  isZero  double  addend  c  d  denominator  divisor  factor  imaginary  q  real  subtrahend  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  	projects/Math46/src/main/java/org/apache/commons/math/complex/Complex.java	0.4082482904638631	587	588	2	replace	safeTree();	  if(isNaN)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  	31	None	replace
144	[BUG]  [BUGGY]  return  this.add(posite).multiply(I.subtract(this)).log().multiply(I.divide(createComplex(2.0,  0.0)));  [CE]  [FE]                  AssertionError      [CONTEXT]      public  Complex  atan()  {  if  (isNaN)  {  return  NaN;  }      [BUGGY]  return  this.add(posite).multiply(I.subtract(this)).log().multiply(I.divide(createComplex(2.0,  0.0)));  [BUGGY]      .multiply(I.divide(createComplex(2.0,  0.0)));  }  [CLASS]  Complex  [METHOD]  atan  [RETURN_TYPE]  Complex  [VARIABLES]  boolean  isInfinite  isNaN  isZero  double  addend  c  d  denominator  divisor  factor  imaginary  q  real  subtrahend  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  	projects/Math46/src/main/java/org/apache/commons/math/complex/Complex.java	0.4082482904638631	587	588	2	replace	return  this.add(posite).multiply(I.subtract(this)).log().multiply(I.divide(createComplex(2.0,  0.0)));	  return    this.add(infinite).multiply(I.subtract(this)).log().multiply(I.divide(createComplex(2.0,    0.0)));    	non-compiled	[CE]  	45	None	replace
145	[BUG]  [BUGGY]  if(isInfinite  ||  isNaN  ||  isZero  ||  isInfinite)  {  return  Complex.ZERO;  }  [CE]  [FE]                    AssertionError      [CONTEXT]      public  Complex  atan()  {  if  (isNaN)  {  return  NaN;  }      [BUGGY]  if(isInfinite  ||  isNaN  ||  isZero  ||  isInfinite)  {  return  Complex.ZERO;  }  [BUGGY]      return  this.add(I).divide(I.subtract(this)).log()    .multiply(I.divide(createComplex(2.0,  0.0)));  .multiply(I.divide(createComplex(2.0,  0.0)));  }  [CLASS]  Complex  [METHOD]  atan  [RETURN_TYPE]  Complex  [VARIABLES]  boolean  isInfinite  isNaN  isZero  double  addend  c  d  denominator  divisor  factor  imaginary  q  real  subtrahend  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  	projects/Math46/src/main/java/org/apache/commons/math/complex/Complex.java	0.4082482904638631	587	588	2	replace	if(isInfinite  ||  isNaN  ||  isZero  ||  isInfinite)  {  return  Complex.ZERO;  }	  if(isNaN    ||    isZero    ||    isInfinite)    {    return    Complex.ZERO;    }    	non-compiled	[CE]  	4	None	replace
146	[BUG]  [BUGGY]  ||  isNaN)  {  return  Complex.ZERO;  }  [CE]  [FE]                        AssertionError      [CONTEXT]      public  Complex  atan()  {  if  (isNaN)  {  return  NaN;  }      [BUGGY]  ||  isNaN)  {  return  Complex.ZERO;  }  [BUGGY]      return  this.add(I).divide(I.subtract(this)).log()    .multiply(I.divide(createComplex(2.0,  0.0)));  .multiply(I.divide(createComplex(2.0,  0.0)));  }  [CLASS]  Complex  [METHOD]  atan  [RETURN_TYPE]  Complex  [VARIABLES]  boolean  isInfinite  isNaN  isZero  double  addend  c  d  denominator  divisor  factor  imaginary  q  real  subtrahend  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  	projects/Math46/src/main/java/org/apache/commons/math/complex/Complex.java	0.4082482904638631	587	588	2	replace	||  isNaN)  {  return  Complex.ZERO;  }	  ||    isInfinite)    {    return    Complex.ZERO;    }    else    {    return    Complex.ZERO;    }    	non-compiled	[CE]  	35	None	replace
147	[BUG]  [BUGGY]  return  this.add(posite).divide(I.subtract(this)).log().multiply(I.divide(createComplex(2.0,  0.0)));  [CE]  [FE]            AssertionError      [CONTEXT]      public  Complex  atan()  {  if  (isNaN)  {  return  NaN;  }      [BUGGY]  return  this.add(posite).divide(I.subtract(this)).log().multiply(I.divide(createComplex(2.0,  0.0)));  [BUGGY]      .multiply(I.divide(createComplex(2.0,  0.0)));  }  [CLASS]  Complex  [METHOD]  atan  [RETURN_TYPE]  Complex  [VARIABLES]  boolean  isInfinite  isNaN  isZero  double  addend  c  d  denominator  divisor  factor  imaginary  q  real  subtrahend  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  	projects/Math46/src/main/java/org/apache/commons/math/complex/Complex.java	0.4082482904638631	587	588	2	replace	return  this.add(posite).divide(I.subtract(this)).log().multiply(I.divide(createComplex(2.0,  0.0)));	  return    this.add(infinite).divide(I.subtract(this)).log().multiply(I.divide(createComplex(2.0,    0.0)));    	non-compiled	[CE]  	61	None	replace
148	[BUG]  [BUGGY]  Context.checkInfinite(false);  [CE]  [FE]                AssertionError      [CONTEXT]      public  Complex  atan()  {  if  (isNaN)  {  return  NaN;  }      [BUGGY]  Context.checkInfinite(false);  [BUGGY]      return  this.add(I).divide(I.subtract(this)).log()    .multiply(I.divide(createComplex(2.0,  0.0)));  .multiply(I.divide(createComplex(2.0,  0.0)));  }  [CLASS]  Complex  [METHOD]  atan  [RETURN_TYPE]  Complex  [VARIABLES]  boolean  isInfinite  isNaN  isZero  double  addend  c  d  denominator  divisor  factor  imaginary  q  real  subtrahend  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  	projects/Math46/src/main/java/org/apache/commons/math/complex/Complex.java	0.4082482904638631	587	588	2	replace	Context.checkInfinite(false);	  Context.checkInfinite(isNaN);    	non-compiled	[CE]  	51	None	replace
149	[BUG]  [BUGGY]  Annotated.isInfinite(false))  {  if(!isZero)  {  return  NaN;  }  [CE]  [FE]                AssertionError      [CONTEXT]      public  Complex  atan()  {  if  (isNaN)  {  return  NaN;  }      [BUGGY]  Annotated.isInfinite(false))  {  if(!isZero)  {  return  NaN;  }  [BUGGY]      return  this.add(I).divide(I.subtract(this)).log()    .multiply(I.divide(createComplex(2.0,  0.0)));  .multiply(I.divide(createComplex(2.0,  0.0)));  }  [CLASS]  Complex  [METHOD]  atan  [RETURN_TYPE]  Complex  [VARIABLES]  boolean  isInfinite  isNaN  isZero  double  addend  c  d  denominator  divisor  factor  imaginary  q  real  subtrahend  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  	projects/Math46/src/main/java/org/apache/commons/math/complex/Complex.java	0.4082482904638631	587	588	2	replace	Annotated.isInfinite(false))  {  if(!isZero)  {  return  NaN;  }	  Annotated.isInfinite(this))    {    if(!isZero)    {    return    NaN;    }    	non-compiled	[CE]  	38	None	replace
150	[BUG]  [BUGGY]  Neighbor  <  ARRAY>  return  NFN.multiply(I.subtract(this)).log().multiply(I.divide(createComplex(2.0,  0.0)));  [CE]  [FE]                  AssertionError      [CONTEXT]      public  Complex  atan()  {  if  (isNaN)  {  return  NaN;  }      [BUGGY]  Neighbor  <  ARRAY>  return  NFN.multiply(I.subtract(this)).log().multiply(I.divide(createComplex(2.0,  0.0)));  [BUGGY]      .multiply(I.divide(createComplex(2.0,  0.0)));  }  [CLASS]  Complex  [METHOD]  atan  [RETURN_TYPE]  Complex  [VARIABLES]  boolean  isInfinite  isNaN  isZero  double  addend  c  d  denominator  divisor  factor  imaginary  q  real  subtrahend  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  	projects/Math46/src/main/java/org/apache/commons/math/complex/Complex.java	0.4082482904638631	587	588	2	replace	Neighbor  <  ARRAY>  return  NFN.multiply(I.subtract(this)).log().multiply(I.divide(createComplex(2.0,  0.0)));	  if(isNaN)    {    return    this.add(INF).multiply(I.subtract(this)).log().multiply(I.divide(createComplex(2.0,    0.0)));    }    	non-compiled	[CE]  	6	None	replace
151	[BUG]  [BUGGY]  Neighbor  <  ARRAY>  return  NFN.add(INF).multiply(I.subtract(this)).log().multiply(I.divide(createComplex(2.0,  0.0)));  [CE]  [FE]                    AssertionError      [CONTEXT]      public  Complex  atan()  {  if  (isNaN)  {  return  NaN;  }      [BUGGY]  Neighbor  <  ARRAY>  return  NFN.add(INF).multiply(I.subtract(this)).log().multiply(I.divide(createComplex(2.0,  0.0)));  [BUGGY]      .multiply(I.divide(createComplex(2.0,  0.0)));  }  [CLASS]  Complex  [METHOD]  atan  [RETURN_TYPE]  Complex  [VARIABLES]  boolean  isInfinite  isNaN  isZero  double  addend  c  d  denominator  divisor  factor  imaginary  q  real  subtrahend  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  	projects/Math46/src/main/java/org/apache/commons/math/complex/Complex.java	0.4082482904638631	587	588	2	replace	Neighbor  <  ARRAY>  return  NFN.add(INF).multiply(I.subtract(this)).log().multiply(I.divide(createComplex(2.0,  0.0)));	  if(isNaN)    {    return    this.add(INF).multiply(I.subtract(this)).log().multiply(I.divide(createComplex(2.0,    0.0)));    }    	non-compiled	[CE]  	6	None	replace
152	[BUG]  [BUGGY]  Neighbor  <  ARRAY>  return  NAF.add(INF).multiply(I.subtract(this)).log().multiply(I.divide(createComplex(2.0,  0.0)));  [CE]  [FE]                      AssertionError      [CONTEXT]      public  Complex  atan()  {  if  (isNaN)  {  return  NaN;  }      [BUGGY]  Neighbor  <  ARRAY>  return  NAF.add(INF).multiply(I.subtract(this)).log().multiply(I.divide(createComplex(2.0,  0.0)));  [BUGGY]      .multiply(I.divide(createComplex(2.0,  0.0)));  }  [CLASS]  Complex  [METHOD]  atan  [RETURN_TYPE]  Complex  [VARIABLES]  boolean  isInfinite  isNaN  isZero  double  addend  c  d  denominator  divisor  factor  imaginary  q  real  subtrahend  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  	projects/Math46/src/main/java/org/apache/commons/math/complex/Complex.java	0.4082482904638631	587	588	2	replace	Neighbor  <  ARRAY>  return  NAF.add(INF).multiply(I.subtract(this)).log().multiply(I.divide(createComplex(2.0,  0.0)));	  if(isNaN)    {    return    this.add(INF).multiply(I.subtract(this)).log().multiply(I.divide(createComplex(2.0,    0.0)));    }    	non-compiled	[CE]  	6	None	replace
153	[BUG]  [BUGGY]  Neighbor  <  ARRAY>  return  NFN.add(this.subtract(this)).log().multiply(I.divide(createComplex(2.0,  0.0)));  [CE]  [FE]                        AssertionError      [CONTEXT]      public  Complex  atan()  {  if  (isNaN)  {  return  NaN;  }      [BUGGY]  Neighbor  <  ARRAY>  return  NFN.add(this.subtract(this)).log().multiply(I.divide(createComplex(2.0,  0.0)));  [BUGGY]      .multiply(I.divide(createComplex(2.0,  0.0)));  }  [CLASS]  Complex  [METHOD]  atan  [RETURN_TYPE]  Complex  [VARIABLES]  boolean  isInfinite  isNaN  isZero  double  addend  c  d  denominator  divisor  factor  imaginary  q  real  subtrahend  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  	projects/Math46/src/main/java/org/apache/commons/math/complex/Complex.java	0.4082482904638631	587	588	2	replace	Neighbor  <  ARRAY>  return  NFN.add(this.subtract(this)).log().multiply(I.divide(createComplex(2.0,  0.0)));	  if(isNaN)    {    return    this.add(INF).multiply(I.subtract(this)).log().multiply(I.divide(createComplex(2.0,    0.0)));    }    	non-compiled	[CE]  	6	None	replace
154	[BUG]  [BUGGY]  if(isNaN  ||  isZero)  {  return  Complex.ONE;  }  [CE]  [FE]                    AssertionError      [CONTEXT]      public  Complex  atan()  {  if  (isNaN)  {  return  NaN;  }      [BUGGY]  if(isNaN  ||  isZero)  {  return  Complex.ONE;  }  [BUGGY]      return  this.add(I).divide(I.subtract(this)).log()    .multiply(I.divide(createComplex(2.0,  0.0)));  .multiply(I.divide(createComplex(2.0,  0.0)));  }  [CLASS]  Complex  [METHOD]  atan  [RETURN_TYPE]  Complex  [VARIABLES]  boolean  isInfinite  isNaN  isZero  double  addend  c  d  denominator  divisor  factor  imaginary  q  real  subtrahend  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  	projects/Math46/src/main/java/org/apache/commons/math/complex/Complex.java	0.4082482904638631	587	588	2	replace	if(isNaN  ||  isZero)  {  return  Complex.ONE;  }	  if(isNaN    ||    isZero)    {    return    Complex.ONE;    }    else    {    return    Complex.ZERO;    }    	non-compiled	[CE]  	47	None	replace
155	[BUG]  [BUGGY]  return  this.add(imaginary).subtract(I.subtract(this)).log().multiply(I.divide(createComplex(2.0,  0.0)));  [CE]  [FE]              AssertionError      [CONTEXT]      public  Complex  atan()  {  if  (isNaN)  {  return  NaN;  }      [BUGGY]  return  this.add(imaginary).subtract(I.subtract(this)).log().multiply(I.divide(createComplex(2.0,  0.0)));  [BUGGY]      .multiply(I.divide(createComplex(2.0,  0.0)));  }  [CLASS]  Complex  [METHOD]  atan  [RETURN_TYPE]  Complex  [VARIABLES]  boolean  isInfinite  isNaN  isZero  double  addend  c  d  denominator  divisor  factor  imaginary  q  real  subtrahend  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  	projects/Math46/src/main/java/org/apache/commons/math/complex/Complex.java	0.4082482904638631	587	588	2	replace	return  this.add(imaginary).subtract(I.subtract(this)).log().multiply(I.divide(createComplex(2.0,  0.0)));	  return    this.add(real).subtract(I.subtract(this)).log().multiply(I.divide(createComplex(2.0,    0.0)));    	non-compiled	[CE]  	43	None	replace
156	[BUG]  [BUGGY]  return  this.add(infinite).multiply(I.subtract(this)).log().multiply(I.divide(createComplex(0.0,  0.0)));  [CE]  [FE]                    AssertionError      [CONTEXT]      public  Complex  atan()  {  if  (isNaN)  {  return  NaN;  }      [BUGGY]  return  this.add(infinite).multiply(I.subtract(this)).log().multiply(I.divide(createComplex(0.0,  0.0)));  [BUGGY]      .multiply(I.divide(createComplex(2.0,  0.0)));  }  [CLASS]  Complex  [METHOD]  atan  [RETURN_TYPE]  Complex  [VARIABLES]  boolean  isInfinite  isNaN  isZero  double  addend  c  d  denominator  divisor  factor  imaginary  q  real  subtrahend  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  	projects/Math46/src/main/java/org/apache/commons/math/complex/Complex.java	0.4082482904638631	587	588	2	replace	return  this.add(infinite).multiply(I.subtract(this)).log().multiply(I.divide(createComplex(0.0,  0.0)));	  return    this.add(INF).multiply(I.subtract(this)).log().multiply(I.divide(createComplex(0.0,    0.0)));    	non-compiled	[CE]  	7	None	replace
157	[BUG]  [BUGGY]  return  this.add(posite).subtract(I.subtract(this)).log().multiply(I.divide(createComplex(2.0,  0.0)));  [CE]  [FE]                AssertionError      [CONTEXT]      public  Complex  atan()  {  if  (isNaN)  {  return  NaN;  }      [BUGGY]  return  this.add(posite).subtract(I.subtract(this)).log().multiply(I.divide(createComplex(2.0,  0.0)));  [BUGGY]      .multiply(I.divide(createComplex(2.0,  0.0)));  }  [CLASS]  Complex  [METHOD]  atan  [RETURN_TYPE]  Complex  [VARIABLES]  boolean  isInfinite  isNaN  isZero  double  addend  c  d  denominator  divisor  factor  imaginary  q  real  subtrahend  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  	projects/Math46/src/main/java/org/apache/commons/math/complex/Complex.java	0.4082482904638631	587	588	2	replace	return  this.add(posite).subtract(I.subtract(this)).log().multiply(I.divide(createComplex(2.0,  0.0)));	  return    this.add(infinite).subtract(I.subtract(this)).log().multiply(I.divide(createComplex(2.0,    0.0)));    	non-compiled	[CE]  	16	None	replace
158	[BUG]  [BUGGY]  Real.multiply(I.divide(createComplex(2.0,  0.0),  imaginary));  [CE]  [FE]                    AssertionError      [CONTEXT]      public  Complex  atan()  {  if  (isNaN)  {  return  NaN;  }      [BUGGY]  Real.multiply(I.divide(createComplex(2.0,  0.0),  imaginary));  [BUGGY]      .multiply(I.divide(createComplex(2.0,  0.0)));  }  [CLASS]  Complex  [METHOD]  atan  [RETURN_TYPE]  Complex  [VARIABLES]  boolean  isInfinite  isNaN  isZero  double  addend  c  d  denominator  divisor  factor  imaginary  q  real  subtrahend  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  	projects/Math46/src/main/java/org/apache/commons/math/complex/Complex.java	0.4082482904638631	587	588	2	replace	Real.multiply(I.divide(createComplex(2.0,  0.0),  imaginary));	  Real.multiply(I.divide(createComplex(2.0,    0.0)));    	non-compiled	[CE]  	48	None	replace
159	[BUG]  [BUGGY]  Annotated.setInfinite(isNaN  ||  isZero)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  [FE]                    AssertionError      [CONTEXT]      public  Complex  atan()  {  if  (isNaN)  {  return  NaN;  }      [BUGGY]  Annotated.setInfinite(isNaN  ||  isZero)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      return  this.add(I).divide(I.subtract(this)).log()    .multiply(I.divide(createComplex(2.0,  0.0)));  .multiply(I.divide(createComplex(2.0,  0.0)));  }  [CLASS]  Complex  [METHOD]  atan  [RETURN_TYPE]  Complex  [VARIABLES]  boolean  isInfinite  isNaN  isZero  double  addend  c  d  denominator  divisor  factor  imaginary  q  real  subtrahend  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  	projects/Math46/src/main/java/org/apache/commons/math/complex/Complex.java	0.4082482904638631	587	588	2	replace	Annotated.setInfinite(isNaN  ||  isZero)  {  throw  new  IllegalArgumentException( " ");  }	  if(isNaN    ||    isZero)    {    throw    new    IllegalArgumentException(   "   ".);    }    	non-compiled	[CE]  	53	None	replace
160	[BUG]  [BUGGY]  Neighbor  <  ARRAY>  return  NFN.add(INF).divide(I.subtract(this)).log().multiply(I.divide(createComplex(0.0,  0.0)));  [CE]  [FE]              AssertionError      [CONTEXT]      public  Complex  atan()  {  if  (isNaN)  {  return  NaN;  }      [BUGGY]  Neighbor  <  ARRAY>  return  NFN.add(INF).divide(I.subtract(this)).log().multiply(I.divide(createComplex(0.0,  0.0)));  [BUGGY]      .multiply(I.divide(createComplex(2.0,  0.0)));  }  [CLASS]  Complex  [METHOD]  atan  [RETURN_TYPE]  Complex  [VARIABLES]  boolean  isInfinite  isNaN  isZero  double  addend  c  d  denominator  divisor  factor  imaginary  q  real  subtrahend  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  	projects/Math46/src/main/java/org/apache/commons/math/complex/Complex.java	0.4082482904638631	587	588	2	replace	Neighbor  <  ARRAY>  return  NFN.add(INF).divide(I.subtract(this)).log().multiply(I.divide(createComplex(0.0,  0.0)));	  if(isNaN)    {    return    this.add(INF).divide(I.subtract(this)).log().multiply(I.divide(createComplex(0.0,    0.0)));    }    	non-compiled	[CE]  	11	None	replace
161	[BUG]  [BUGGY]  Neighbor  <  ARRAY>  return  NFN.add(this.subtract(this)).log().multiply(I.divide(createComplex(0.0,  0.0)));  [CE]  [FE]                AssertionError      [CONTEXT]      public  Complex  atan()  {  if  (isNaN)  {  return  NaN;  }      [BUGGY]  Neighbor  <  ARRAY>  return  NFN.add(this.subtract(this)).log().multiply(I.divide(createComplex(0.0,  0.0)));  [BUGGY]      .multiply(I.divide(createComplex(2.0,  0.0)));  }  [CLASS]  Complex  [METHOD]  atan  [RETURN_TYPE]  Complex  [VARIABLES]  boolean  isInfinite  isNaN  isZero  double  addend  c  d  denominator  divisor  factor  imaginary  q  real  subtrahend  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  	projects/Math46/src/main/java/org/apache/commons/math/complex/Complex.java	0.4082482904638631	587	588	2	replace	Neighbor  <  ARRAY>  return  NFN.add(this.subtract(this)).log().multiply(I.divide(createComplex(0.0,  0.0)));	  if(isNaN)    {    return    this.add(INF).divide(I.subtract(this)).log().multiply(I.divide(createComplex(0.0,    0.0)));    }    	non-compiled	[CE]  	11	None	replace
162	[BUG]  [BUGGY]  Neighbor  <  ARRAY>  return  NFN.subtract(this)).log().multiply(I.divide(createComplex(0.0,  0.0)));  [CE]  [FE]                  AssertionError      [CONTEXT]      public  Complex  atan()  {  if  (isNaN)  {  return  NaN;  }      [BUGGY]  Neighbor  <  ARRAY>  return  NFN.subtract(this)).log().multiply(I.divide(createComplex(0.0,  0.0)));  [BUGGY]      .multiply(I.divide(createComplex(2.0,  0.0)));  }  [CLASS]  Complex  [METHOD]  atan  [RETURN_TYPE]  Complex  [VARIABLES]  boolean  isInfinite  isNaN  isZero  double  addend  c  d  denominator  divisor  factor  imaginary  q  real  subtrahend  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  	projects/Math46/src/main/java/org/apache/commons/math/complex/Complex.java	0.4082482904638631	587	588	2	replace	Neighbor  <  ARRAY>  return  NFN.subtract(this)).log().multiply(I.divide(createComplex(0.0,  0.0)));	  if(isNaN)    {    return    this.add(INF).divide(I.subtract(this)).log().multiply(I.divide(createComplex(0.0,    0.0)));    }    	non-compiled	[CE]  	11	None	replace
163	[BUG]  [BUGGY]  Neighbor  <  ARRAY>  return  NFN.subtract(this).log().multiply(I.divide(createComplex(0.0,  0.0)));  [CE]  [FE]                    AssertionError      [CONTEXT]      public  Complex  atan()  {  if  (isNaN)  {  return  NaN;  }      [BUGGY]  Neighbor  <  ARRAY>  return  NFN.subtract(this).log().multiply(I.divide(createComplex(0.0,  0.0)));  [BUGGY]      .multiply(I.divide(createComplex(2.0,  0.0)));  }  [CLASS]  Complex  [METHOD]  atan  [RETURN_TYPE]  Complex  [VARIABLES]  boolean  isInfinite  isNaN  isZero  double  addend  c  d  denominator  divisor  factor  imaginary  q  real  subtrahend  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  	projects/Math46/src/main/java/org/apache/commons/math/complex/Complex.java	0.4082482904638631	587	588	2	replace	Neighbor  <  ARRAY>  return  NFN.subtract(this).log().multiply(I.divide(createComplex(0.0,  0.0)));	  if(isNaN)    {    return    this.add(INF).divide(I.subtract(this)).log().multiply(I.divide(createComplex(0.0,    0.0)));    }    	non-compiled	[CE]  	11	None	replace
164	[BUG]  [BUGGY]  return  this.add(this.subtract(INF.subtract(this)).log().multiply(I.divide(createComplex(1.0,  0.0)));  [CE]  [FE]              AssertionError      [CONTEXT]      public  Complex  atan()  {  if  (isNaN)  {  return  NaN;  }      [BUGGY]  return  this.add(this.subtract(INF.subtract(this)).log().multiply(I.divide(createComplex(1.0,  0.0)));  [BUGGY]      .multiply(I.divide(createComplex(2.0,  0.0)));  }  [CLASS]  Complex  [METHOD]  atan  [RETURN_TYPE]  Complex  [VARIABLES]  boolean  isInfinite  isNaN  isZero  double  addend  c  d  denominator  divisor  factor  imaginary  q  real  subtrahend  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  	projects/Math46/src/main/java/org/apache/commons/math/complex/Complex.java	0.4082482904638631	587	588	2	replace	return  this.add(this.subtract(INF.subtract(this)).log().multiply(I.divide(createComplex(1.0,  0.0)));	  return    this.add(this.subtract(INF.subtract(this)).log().multiply(I.divide(createComplex(2.0,    0.0)));    	non-compiled	[CE]  	15	None	replace
165	[BUG]  [BUGGY]  Iterator  <  Complex>  it  =  this.getDivisors().values().iterator();  [CE]  [FE]                    AssertionError      [CONTEXT]      public  Complex  atan()  {  if  (isNaN)  {  return  NaN;  }      [BUGGY]  Iterator  <  Complex>  it  =  this.getDivisors().values().iterator();  [BUGGY]      return  this.add(I).divide(I.subtract(this)).log()    .multiply(I.divide(createComplex(2.0,  0.0)));  .multiply(I.divide(createComplex(2.0,  0.0)));  }  [CLASS]  Complex  [METHOD]  atan  [RETURN_TYPE]  Complex  [VARIABLES]  boolean  isInfinite  isNaN  isZero  double  addend  c  d  denominator  divisor  factor  imaginary  q  real  subtrahend  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  	projects/Math46/src/main/java/org/apache/commons/math/complex/Complex.java	0.4082482904638631	587	588	2	replace	Iterator  <  Complex>  it  =  this.getDivisors().values().iterator();	  Iterator    <    Complex>    it    =    this.getDivisors().iterator();    	non-compiled	[CE]  	22	None	replace
166	[BUG]  [BUGGY]  if(isZero)  {  return  Complex.EMPTY;  }  [CE]  [FE]                AssertionError      [CONTEXT]      public  Complex  atan()  {  if  (isNaN)  {  return  NaN;  }      [BUGGY]  if(isZero)  {  return  Complex.EMPTY;  }  [BUGGY]      return  this.add(I).divide(I.subtract(this)).log()    .multiply(I.divide(createComplex(2.0,  0.0)));  .multiply(I.divide(createComplex(2.0,  0.0)));  }  [CLASS]  Complex  [METHOD]  atan  [RETURN_TYPE]  Complex  [VARIABLES]  boolean  isInfinite  isNaN  isZero  double  addend  c  d  denominator  divisor  factor  imaginary  q  real  subtrahend  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  	projects/Math46/src/main/java/org/apache/commons/math/complex/Complex.java	0.4082482904638631	587	588	2	replace	if(isZero)  {  return  Complex.EMPTY;  }	  if(!isInfinite)    {    return    Complex.EMPTY;    }    	non-compiled	[CE]  	59	None	replace
167	[BUG]  [BUGGY]  if(isNaN)  {  return  Complex.EMPTY;  }  [CE]  [FE]                  AssertionError      [CONTEXT]      public  Complex  atan()  {  if  (isNaN)  {  return  NaN;  }      [BUGGY]  if(isNaN)  {  return  Complex.EMPTY;  }  [BUGGY]      return  this.add(I).divide(I.subtract(this)).log()    .multiply(I.divide(createComplex(2.0,  0.0)));  .multiply(I.divide(createComplex(2.0,  0.0)));  }  [CLASS]  Complex  [METHOD]  atan  [RETURN_TYPE]  Complex  [VARIABLES]  boolean  isInfinite  isNaN  isZero  double  addend  c  d  denominator  divisor  factor  imaginary  q  real  subtrahend  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  	projects/Math46/src/main/java/org/apache/commons/math/complex/Complex.java	0.4082482904638631	587	588	2	replace	if(isNaN)  {  return  Complex.EMPTY;  }	  if(!isInfinite)    {    return    Complex.EMPTY;    }    	non-compiled	[CE]  	59	None	replace
168	[BUG]  [BUGGY]  if(!isZero)  {  return  Complex.EMPTY;  }  [CE]  [FE]                    AssertionError      [CONTEXT]      public  Complex  atan()  {  if  (isNaN)  {  return  NaN;  }      [BUGGY]  if(!isZero)  {  return  Complex.EMPTY;  }  [BUGGY]      return  this.add(I).divide(I.subtract(this)).log()    .multiply(I.divide(createComplex(2.0,  0.0)));  .multiply(I.divide(createComplex(2.0,  0.0)));  }  [CLASS]  Complex  [METHOD]  atan  [RETURN_TYPE]  Complex  [VARIABLES]  boolean  isInfinite  isNaN  isZero  double  addend  c  d  denominator  divisor  factor  imaginary  q  real  subtrahend  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  	projects/Math46/src/main/java/org/apache/commons/math/complex/Complex.java	0.4082482904638631	587	588	2	replace	if(!isZero)  {  return  Complex.EMPTY;  }	  if(!isInfinite)    {    return    Complex.EMPTY;    }    	non-compiled	[CE]  	59	None	replace
169	[BUG]  [BUGGY]  if(isInfinite)  {  if(!isZero  ||!isInfinite)  {  return  Complex.ZERO;  }  [CE]  [FE]                    AssertionError      [CONTEXT]      public  Complex  atan()  {  if  (isNaN)  {  return  NaN;  }      [BUGGY]  if(isInfinite)  {  if(!isZero  ||!isInfinite)  {  return  Complex.ZERO;  }  [BUGGY]      return  this.add(I).divide(I.subtract(this)).log()    .multiply(I.divide(createComplex(2.0,  0.0)));  .multiply(I.divide(createComplex(2.0,  0.0)));  }  [CLASS]  Complex  [METHOD]  atan  [RETURN_TYPE]  Complex  [VARIABLES]  boolean  isInfinite  isNaN  isZero  double  addend  c  d  denominator  divisor  factor  imaginary  q  real  subtrahend  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  	projects/Math46/src/main/java/org/apache/commons/math/complex/Complex.java	0.4082482904638631	587	588	2	replace	if(isInfinite)  {  if(!isZero  ||!isInfinite)  {  return  Complex.ZERO;  }	  if(isInfinite)    {    if(!isNaN    ||!isZero)    {    return    Complex.ZERO;    }    	non-compiled	[CE]  	65	None	replace
170	[BUG]  [BUGGY]  if(isInfinite  &&  isZero)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  [FE]                    AssertionError      [CONTEXT]      public  Complex  atan()  {  if  (isNaN)  {  return  NaN;  }      [BUGGY]  if(isInfinite  &&  isZero)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      return  this.add(I).divide(I.subtract(this)).log()    .multiply(I.divide(createComplex(2.0,  0.0)));  .multiply(I.divide(createComplex(2.0,  0.0)));  }  [CLASS]  Complex  [METHOD]  atan  [RETURN_TYPE]  Complex  [VARIABLES]  boolean  isInfinite  isNaN  isZero  double  addend  c  d  denominator  divisor  factor  imaginary  q  real  subtrahend  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  	projects/Math46/src/main/java/org/apache/commons/math/complex/Complex.java	0.4082482904638631	587	588	2	replace	if(isInfinite  &&  isZero)  {  throw  new  IllegalArgumentException( " ");  }	  if(isInfinite    ||    isZero)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  	39	None	replace
171	[BUG]  [BUGGY]  if(isInfinite  &&  isNaN)  {  if(!isZero)  {  return  Complex.ZERO;  }  [CE]  [FE]                        AssertionError      [CONTEXT]      public  Complex  atan()  {  if  (isNaN)  {  return  NaN;  }      [BUGGY]  if(isInfinite  &&  isNaN)  {  if(!isZero)  {  return  Complex.ZERO;  }  [BUGGY]      return  this.add(I).divide(I.subtract(this)).log()    .multiply(I.divide(createComplex(2.0,  0.0)));  .multiply(I.divide(createComplex(2.0,  0.0)));  }  [CLASS]  Complex  [METHOD]  atan  [RETURN_TYPE]  Complex  [VARIABLES]  boolean  isInfinite  isNaN  isZero  double  addend  c  d  denominator  divisor  factor  imaginary  q  real  subtrahend  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  	projects/Math46/src/main/java/org/apache/commons/math/complex/Complex.java	0.4082482904638631	587	588	2	replace	if(isInfinite  &&  isNaN)  {  if(!isZero)  {  return  Complex.ZERO;  }	  if(isNaN    ||    isInfinite)    {    if(!isZero)    {    return    Complex.ZERO;    }    	non-compiled	[CE]  	20	None	replace
172	[BUG]  [BUGGY]  if(isInfinite)  {  if(!isNaN)return  Complex.ZERO;  }  [CE]  [FE]              AssertionError      [CONTEXT]      public  Complex  atan()  {  if  (isNaN)  {  return  NaN;  }      [BUGGY]  if(isInfinite)  {  if(!isNaN)return  Complex.ZERO;  }  [BUGGY]      return  this.add(I).divide(I.subtract(this)).log()    .multiply(I.divide(createComplex(2.0,  0.0)));  .multiply(I.divide(createComplex(2.0,  0.0)));  }  [CLASS]  Complex  [METHOD]  atan  [RETURN_TYPE]  Complex  [VARIABLES]  boolean  isInfinite  isNaN  isZero  double  addend  c  d  denominator  divisor  factor  imaginary  q  real  subtrahend  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  	projects/Math46/src/main/java/org/apache/commons/math/complex/Complex.java	0.4082482904638631	587	588	2	replace	if(isInfinite)  {  if(!isNaN)return  Complex.ZERO;  }	  if(isInfinite)    {    if(!isZero)return    Complex.ZERO;    }    	non-compiled	[CE]  	58	None	replace
173	[BUG]  [BUGGY]  if(isInfinite  &&  isNaN)  {  if(!isZero)  {  return  Complex.EMPTY;  }  [CE]  [FE]                  AssertionError      [CONTEXT]      public  Complex  atan()  {  if  (isNaN)  {  return  NaN;  }      [BUGGY]  if(isInfinite  &&  isNaN)  {  if(!isZero)  {  return  Complex.EMPTY;  }  [BUGGY]      return  this.add(I).divide(I.subtract(this)).log()    .multiply(I.divide(createComplex(2.0,  0.0)));  .multiply(I.divide(createComplex(2.0,  0.0)));  }  [CLASS]  Complex  [METHOD]  atan  [RETURN_TYPE]  Complex  [VARIABLES]  boolean  isInfinite  isNaN  isZero  double  addend  c  d  denominator  divisor  factor  imaginary  q  real  subtrahend  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  	projects/Math46/src/main/java/org/apache/commons/math/complex/Complex.java	0.4082482904638631	587	588	2	replace	if(isInfinite  &&  isNaN)  {  if(!isZero)  {  return  Complex.EMPTY;  }	  if(isNaN    ||    isInfinite)    {    if(!isZero)    {    return    Complex.EMPTY;    }    	non-compiled	[CE]  	27	None	replace
174	[BUG]  [BUGGY]  .add(I.divide(createComplex(2.0,  0.0)));  [CE]  [FE]                    AssertionError      [CONTEXT]      public  Complex  atan()  {  if  (isNaN)  {  return  NaN;  }      [BUGGY]  .add(I.divide(createComplex(2.0,  0.0)));  [BUGGY]      .multiply(I.divide(createComplex(2.0,  0.0)));  }  [CLASS]  Complex  [METHOD]  atan  [RETURN_TYPE]  Complex  [VARIABLES]  boolean  isInfinite  isNaN  isZero  double  addend  c  d  denominator  divisor  factor  imaginary  q  real  subtrahend  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  	projects/Math46/src/main/java/org/apache/commons/math/complex/Complex.java	0.4082482904638631	587	588	2	replace	.add(I.divide(createComplex(2.0,  0.0)));	  .multiply(I.divide(createComplex(2.0,    0.0)));    	non-compiled	[CE]  	29	None	replace
175	[BUG]  [BUGGY]  if(isInfinite  &&  isZero)  {  return  Complex.ZERO;  }  else  {  return  Complex.ZERO;  }  [CE]  [FE]                    AssertionError      [CONTEXT]      public  Complex  atan()  {  if  (isNaN)  {  return  NaN;  }      [BUGGY]  if(isInfinite  &&  isZero)  {  return  Complex.ZERO;  }  else  {  return  Complex.ZERO;  }  [BUGGY]      return  this.add(I).divide(I.subtract(this)).log()    .multiply(I.divide(createComplex(2.0,  0.0)));  .multiply(I.divide(createComplex(2.0,  0.0)));  }  [CLASS]  Complex  [METHOD]  atan  [RETURN_TYPE]  Complex  [VARIABLES]  boolean  isInfinite  isNaN  isZero  double  addend  c  d  denominator  divisor  factor  imaginary  q  real  subtrahend  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  	projects/Math46/src/main/java/org/apache/commons/math/complex/Complex.java	0.4082482904638631	587	588	2	replace	if(isInfinite  &&  isZero)  {  return  Complex.ZERO;  }  else  {  return  Complex.ZERO;  }	  if(isInfinite    ||    isZero)    {    return    Complex.ZERO;    }    else    {    return    Complex.ZERO;    }    	non-compiled	[CE]  	33	None	replace
176	[BUG]  [BUGGY]  Neighbor  <  ARRAY>  return  NFN.add(INF).divide(I.subtract(this)).log().multiply(I.divide(createComplex(2.0,  0.0)));  [CE]  [FE]            AssertionError      [CONTEXT]      public  Complex  atan()  {  if  (isNaN)  {  return  NaN;  }      [BUGGY]  Neighbor  <  ARRAY>  return  NFN.add(INF).divide(I.subtract(this)).log().multiply(I.divide(createComplex(2.0,  0.0)));  [BUGGY]      .multiply(I.divide(createComplex(2.0,  0.0)));  }  [CLASS]  Complex  [METHOD]  atan  [RETURN_TYPE]  Complex  [VARIABLES]  boolean  isInfinite  isNaN  isZero  double  addend  c  d  denominator  divisor  factor  imaginary  q  real  subtrahend  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  	projects/Math46/src/main/java/org/apache/commons/math/complex/Complex.java	0.4082482904638631	587	588	2	replace	Neighbor  <  ARRAY>  return  NFN.add(INF).divide(I.subtract(this)).log().multiply(I.divide(createComplex(2.0,  0.0)));	  if(isNaN)    {    return    this.add(INF).divide(I.subtract(this)).log().multiply(I.divide(createComplex(2.0,    0.0)));    }    	non-compiled	[CE]  	1	None	replace
177	[BUG]  [BUGGY]  nisipINF.multiply(I.divide(createComplex(2.0,  0.0)));  [CE]  [FE]              AssertionError      [CONTEXT]      public  Complex  atan()  {  if  (isNaN)  {  return  NaN;  }      [BUGGY]  nisipINF.multiply(I.divide(createComplex(2.0,  0.0)));  [BUGGY]      .multiply(I.divide(createComplex(2.0,  0.0)));  }  [CLASS]  Complex  [METHOD]  atan  [RETURN_TYPE]  Complex  [VARIABLES]  boolean  isInfinite  isNaN  isZero  double  addend  c  d  denominator  divisor  factor  imaginary  q  real  subtrahend  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  	projects/Math46/src/main/java/org/apache/commons/math/complex/Complex.java	0.4082482904638631	587	588	2	replace	nisipINF.multiply(I.divide(createComplex(2.0,  0.0)));	  if(isNaN)    {    return    this.add(INF).divide(I.subtract(this)).log().multiply(I.divide(createComplex(2.0,    0.0)));    }    	non-compiled	[CE]  	1	None	replace
178	[BUG]  [BUGGY]  Neighbor  <  ARRAY>  return  NFN.add(INF).divide(I.subtract(this)).log().multiply(I.divide(createComplex(2.0,  0.0)));  }  [CE]  [FE]                AssertionError      [CONTEXT]      public  Complex  atan()  {  if  (isNaN)  {  return  NaN;  }      [BUGGY]  Neighbor  <  ARRAY>  return  NFN.add(INF).divide(I.subtract(this)).log().multiply(I.divide(createComplex(2.0,  0.0)));  }  [BUGGY]      .multiply(I.divide(createComplex(2.0,  0.0)));  }  [CLASS]  Complex  [METHOD]  atan  [RETURN_TYPE]  Complex  [VARIABLES]  boolean  isInfinite  isNaN  isZero  double  addend  c  d  denominator  divisor  factor  imaginary  q  real  subtrahend  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  	projects/Math46/src/main/java/org/apache/commons/math/complex/Complex.java	0.4082482904638631	587	588	2	replace	Neighbor  <  ARRAY>  return  NFN.add(INF).divide(I.subtract(this)).log().multiply(I.divide(createComplex(2.0,  0.0)));  }	  if(isNaN)    {    return    this.add(INF).divide(I.subtract(this)).log().multiply(I.divide(createComplex(2.0,    0.0)));    }    	non-compiled	[CE]  	1	None	replace
179	[BUG]  [BUGGY]  if(isInfinite  &&  isZero)  {  if(isNaN  ||  isZero)  {  return  NaN;  }  [CE]  [FE]                AssertionError      [CONTEXT]      public  Complex  atan()  {  if  (isNaN)  {  return  NaN;  }      [BUGGY]  if(isInfinite  &&  isZero)  {  if(isNaN  ||  isZero)  {  return  NaN;  }  [BUGGY]      return  this.add(I).divide(I.subtract(this)).log()    .multiply(I.divide(createComplex(2.0,  0.0)));  .multiply(I.divide(createComplex(2.0,  0.0)));  }  [CLASS]  Complex  [METHOD]  atan  [RETURN_TYPE]  Complex  [VARIABLES]  boolean  isInfinite  isNaN  isZero  double  addend  c  d  denominator  divisor  factor  imaginary  q  real  subtrahend  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  	projects/Math46/src/main/java/org/apache/commons/math/complex/Complex.java	0.4082482904638631	587	588	2	replace	if(isInfinite  &&  isZero)  {  if(isNaN  ||  isZero)  {  return  NaN;  }	  if(isInfinite)    {    if(isNaN    ||    isZero)    {    return    NaN;    }    	non-compiled	[CE]  	46	None	replace
180	[BUG]  [BUGGY]  if(isInfinite)  {  if(isNaN  ||  isZero)  {  return  this;  }  [CE]  [FE]                  AssertionError      [CONTEXT]      public  Complex  atan()  {  if  (isNaN)  {  return  NaN;  }      [BUGGY]  if(isInfinite)  {  if(isNaN  ||  isZero)  {  return  this;  }  [BUGGY]      return  this.add(I).divide(I.subtract(this)).log()    .multiply(I.divide(createComplex(2.0,  0.0)));  .multiply(I.divide(createComplex(2.0,  0.0)));  }  [CLASS]  Complex  [METHOD]  atan  [RETURN_TYPE]  Complex  [VARIABLES]  boolean  isInfinite  isNaN  isZero  double  addend  c  d  denominator  divisor  factor  imaginary  q  real  subtrahend  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  	projects/Math46/src/main/java/org/apache/commons/math/complex/Complex.java	0.4082482904638631	587	588	2	replace	if(isInfinite)  {  if(isNaN  ||  isZero)  {  return  this;  }	  if(isInfinite)    {    if(isNaN    ||    isZero)    {    return    NaN;    }    	non-compiled	[CE]  	46	None	replace
181	[BUG]  [BUGGY]  return  this.add(posite).divide(I.subtract(this)).log().multiply(I.divide(createComplex(0.0,  0.0)));  [CE]  [FE]            AssertionError      [CONTEXT]      public  Complex  atan()  {  if  (isNaN)  {  return  NaN;  }      [BUGGY]  return  this.add(posite).divide(I.subtract(this)).log().multiply(I.divide(createComplex(0.0,  0.0)));  [BUGGY]      .multiply(I.divide(createComplex(2.0,  0.0)));  }  [CLASS]  Complex  [METHOD]  atan  [RETURN_TYPE]  Complex  [VARIABLES]  boolean  isInfinite  isNaN  isZero  double  addend  c  d  denominator  divisor  factor  imaginary  q  real  subtrahend  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  	projects/Math46/src/main/java/org/apache/commons/math/complex/Complex.java	0.4082482904638631	587	588	2	replace	return  this.add(posite).divide(I.subtract(this)).log().multiply(I.divide(createComplex(0.0,  0.0)));	  return    this.add(infinite).divide(I.subtract(this)).log().multiply(I.divide(createComplex(0.0,    0.0)));    	non-compiled	[CE]  	56	None	replace
182	[BUG]  [BUGGY]  if(isNaN  ||  isInfinite)  {  return  Complex.ONE;  }  [CE]  [FE]                      AssertionError      [CONTEXT]      public  Complex  atan()  {  if  (isNaN)  {  return  NaN;  }      [BUGGY]  if(isNaN  ||  isInfinite)  {  return  Complex.ONE;  }  [BUGGY]      .multiply(I.divide(createComplex(2.0,  0.0)));  }  [CLASS]  Complex  [METHOD]  atan  [RETURN_TYPE]  Complex  [VARIABLES]  boolean  isInfinite  isNaN  isZero  double  addend  c  d  denominator  divisor  factor  imaginary  q  real  subtrahend  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  	projects/Math46/src/main/java/org/apache/commons/math/complex/Complex.java	0.4082482904638631	587	588	2	replace	if(isNaN  ||  isInfinite)  {  return  Complex.ONE;  }	  if(isNaN    ||    isInfinite)    {    return    NaN;    }    	non-compiled	[CE]  	49	None	replace
183	[BUG]  [BUGGY]  if(isZero)  {  if(!isInfinite)  {  return  Complex.EMPTY;  }  [CE]  [FE]                    AssertionError      [CONTEXT]      public  Complex  atan()  {  if  (isNaN)  {  return  NaN;  }      [BUGGY]  if(isZero)  {  if(!isInfinite)  {  return  Complex.EMPTY;  }  [BUGGY]      return  this.add(I).divide(I.subtract(this)).log()    .multiply(I.divide(createComplex(2.0,  0.0)));  .multiply(I.divide(createComplex(2.0,  0.0)));  }  [CLASS]  Complex  [METHOD]  atan  [RETURN_TYPE]  Complex  [VARIABLES]  boolean  isInfinite  isNaN  isZero  double  addend  c  d  denominator  divisor  factor  imaginary  q  real  subtrahend  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  	projects/Math46/src/main/java/org/apache/commons/math/complex/Complex.java	0.4082482904638631	587	588	2	replace	if(isZero)  {  if(!isInfinite)  {  return  Complex.EMPTY;  }	  if(isNaN)    {    if(!isInfinite)    {    return    Complex.EMPTY;    }    	non-compiled	[CE]  	28	None	replace
184	[BUG]  [BUGGY]  if(isInfinite  ||  isNaN  ||  isInfinite)  {  return  Complex.ZERO;  }  [CE]  [FE]                    AssertionError      [CONTEXT]      public  Complex  atan()  {  if  (isNaN)  {  return  NaN;  }      [BUGGY]  if(isInfinite  ||  isNaN  ||  isInfinite)  {  return  Complex.ZERO;  }  [BUGGY]      return  this.add(I).divide(I.subtract(this)).log()    .multiply(I.divide(createComplex(2.0,  0.0)));  .multiply(I.divide(createComplex(2.0,  0.0)));  }  [CLASS]  Complex  [METHOD]  atan  [RETURN_TYPE]  Complex  [VARIABLES]  boolean  isInfinite  isNaN  isZero  double  addend  c  d  denominator  divisor  factor  imaginary  q  real  subtrahend  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  	projects/Math46/src/main/java/org/apache/commons/math/complex/Complex.java	0.4082482904638631	587	588	2	replace	if(isInfinite  ||  isNaN  ||  isInfinite)  {  return  Complex.ZERO;  }	  if(isNaN    ||    isZero    ||    isInfinite)    {    return    Complex.ZERO;    }    	non-compiled	[CE]  	4	None	replace
185	[BUG]  [BUGGY]  if(isInfinite)  {  if(!isZero  ||  isNaN)  {  return  Complex.EMPTY;  }  [CE]  [FE]                AssertionError      [CONTEXT]      public  Complex  atan()  {  if  (isNaN)  {  return  NaN;  }      [BUGGY]  if(isInfinite)  {  if(!isZero  ||  isNaN)  {  return  Complex.EMPTY;  }  [BUGGY]      return  this.add(I).divide(I.subtract(this)).log()    .multiply(I.divide(createComplex(2.0,  0.0)));  .multiply(I.divide(createComplex(2.0,  0.0)));  }  [CLASS]  Complex  [METHOD]  atan  [RETURN_TYPE]  Complex  [VARIABLES]  boolean  isInfinite  isNaN  isZero  double  addend  c  d  denominator  divisor  factor  imaginary  q  real  subtrahend  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  	projects/Math46/src/main/java/org/apache/commons/math/complex/Complex.java	0.4082482904638631	587	588	2	replace	if(isInfinite)  {  if(!isZero  ||  isNaN)  {  return  Complex.EMPTY;  }	  if(isInfinite)    {    if(!isZero)    {    return    Complex.EMPTY;    }    	non-compiled	[CE]  	26	None	replace
186	[BUG]  [BUGGY]  if(isInfinite)return  Complex.ZERO;  [CE]  [FE]              AssertionError      [CONTEXT]      public  Complex  atan()  {  if  (isNaN)  {  return  NaN;  }      [BUGGY]  if(isInfinite)return  Complex.ZERO;  [BUGGY]      return  this.add(I).divide(I.subtract(this)).log()    .multiply(I.divide(createComplex(2.0,  0.0)));  .multiply(I.divide(createComplex(2.0,  0.0)));  }  [CLASS]  Complex  [METHOD]  atan  [RETURN_TYPE]  Complex  [VARIABLES]  boolean  isInfinite  isNaN  isZero  double  addend  c  d  denominator  divisor  factor  imaginary  q  real  subtrahend  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  	projects/Math46/src/main/java/org/apache/commons/math/complex/Complex.java	0.4082482904638631	587	588	2	replace	if(isInfinite)return  Complex.ZERO;	  if(isInfinite)    {    if(!isZero)return    Complex.ZERO;    }    	non-compiled	[CE]  	58	None	replace
187	[BUG]  [BUGGY]  if(!isInfinite  &&  isZero)  {  return  Complex.ZERO;  }  [CE]  [FE]            AssertionError      [CONTEXT]      public  Complex  atan()  {  if  (isNaN)  {  return  NaN;  }      [BUGGY]  if(!isInfinite  &&  isZero)  {  return  Complex.ZERO;  }  [BUGGY]      return  this.add(I).divide(I.subtract(this)).log()    .multiply(I.divide(createComplex(2.0,  0.0)));  .multiply(I.divide(createComplex(2.0,  0.0)));  }  [CLASS]  Complex  [METHOD]  atan  [RETURN_TYPE]  Complex  [VARIABLES]  boolean  isInfinite  isNaN  isZero  double  addend  c  d  denominator  divisor  factor  imaginary  q  real  subtrahend  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  	projects/Math46/src/main/java/org/apache/commons/math/complex/Complex.java	0.4082482904638631	587	588	2	replace	if(!isInfinite  &&  isZero)  {  return  Complex.ZERO;  }	  if(!isInfinite)    {    return    Complex.ZERO;    }    	non-compiled	[CE]  	57	None	replace
188	[BUG]  [BUGGY]  aughtException( " ");  }  [CE]  [FE]                        AssertionError      [CONTEXT]      public  Complex  atan()  {  if  (isNaN)  {  return  NaN;  }      [BUGGY]  aughtException( " ");  }  [BUGGY]      .multiply(I.divide(createComplex(2.0,  0.0)));  }  [CLASS]  Complex  [METHOD]  atan  [RETURN_TYPE]  Complex  [VARIABLES]  boolean  isInfinite  isNaN  isZero  double  addend  c  d  denominator  divisor  factor  imaginary  q  real  subtrahend  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  	projects/Math46/src/main/java/org/apache/commons/math/complex/Complex.java	0.4082482904638631	587	588	2	replace	aughtException( " ");  }	  if(isNaN)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  	31	None	replace
189	[BUG]  [BUGGY]  aughtInfinite( "NaN ");  [CE]  [FE]                          AssertionError      [CONTEXT]      public  Complex  atan()  {  if  (isNaN)  {  return  NaN;  }      [BUGGY]  aughtInfinite( "NaN ");  [BUGGY]      .multiply(I.divide(createComplex(2.0,  0.0)));  }  [CLASS]  Complex  [METHOD]  atan  [RETURN_TYPE]  Complex  [VARIABLES]  boolean  isInfinite  isNaN  isZero  double  addend  c  d  denominator  divisor  factor  imaginary  q  real  subtrahend  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  	projects/Math46/src/main/java/org/apache/commons/math/complex/Complex.java	0.4082482904638631	587	588	2	replace	aughtInfinite( "NaN ");	  if(isNaN)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  	31	None	replace
190	[BUG]  [BUGGY]  return  this.add(INF).log().multiply(I.divide(createComplex(1.0,  1.0)));  [CE]  [FE]                    AssertionError      [CONTEXT]      public  Complex  atan()  {  if  (isNaN)  {  return  NaN;  }      [BUGGY]  return  this.add(INF).log().multiply(I.divide(createComplex(1.0,  1.0)));  [BUGGY]      .multiply(I.divide(createComplex(2.0,  0.0)));  }  [CLASS]  Complex  [METHOD]  atan  [RETURN_TYPE]  Complex  [VARIABLES]  boolean  isInfinite  isNaN  isZero  double  addend  c  d  denominator  divisor  factor  imaginary  q  real  subtrahend  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  	projects/Math46/src/main/java/org/apache/commons/math/complex/Complex.java	0.4082482904638631	587	588	2	replace	return  this.add(INF).log().multiply(I.divide(createComplex(1.0,  1.0)));	  return    this.add(INF).log().multiply(I.divide(createComplex(2.0,    1.0)));    	non-compiled	[CE]  	25	None	replace
191	[BUG]  [BUGGY]  if(isInfinite  &&  isNaN  ||  isZero)  {  return  Complex.ZERO;  }  [CE]  [FE]                  AssertionError      [CONTEXT]      public  Complex  atan()  {  if  (isNaN)  {  return  NaN;  }      [BUGGY]  if(isInfinite  &&  isNaN  ||  isZero)  {  return  Complex.ZERO;  }  [BUGGY]      return  this.add(I).divide(I.subtract(this)).log()    .multiply(I.divide(createComplex(2.0,  0.0)));  .multiply(I.divide(createComplex(2.0,  0.0)));  }  [CLASS]  Complex  [METHOD]  atan  [RETURN_TYPE]  Complex  [VARIABLES]  boolean  isInfinite  isNaN  isZero  double  addend  c  d  denominator  divisor  factor  imaginary  q  real  subtrahend  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  	projects/Math46/src/main/java/org/apache/commons/math/complex/Complex.java	0.4082482904638631	587	588	2	replace	if(isInfinite  &&  isNaN  ||  isZero)  {  return  Complex.ZERO;  }	  if(isNaN    &&    isZero)    {    return    Complex.ZERO;    }    	non-compiled	[CE]  	44	None	replace
192	[BUG]  [BUGGY]  if(isInfinite  ||  isZero  ||  imaginary)  {  return  Complex.ZERO;  }  [CE]  [FE]                  AssertionError      [CONTEXT]      public  Complex  atan()  {  if  (isNaN)  {  return  NaN;  }      [BUGGY]  if(isInfinite  ||  isZero  ||  imaginary)  {  return  Complex.ZERO;  }  [BUGGY]      return  this.add(I).divide(I.subtract(this)).log()    .multiply(I.divide(createComplex(2.0,  0.0)));  .multiply(I.divide(createComplex(2.0,  0.0)));  }  [CLASS]  Complex  [METHOD]  atan  [RETURN_TYPE]  Complex  [VARIABLES]  boolean  isInfinite  isNaN  isZero  double  addend  c  d  denominator  divisor  factor  imaginary  q  real  subtrahend  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  	projects/Math46/src/main/java/org/apache/commons/math/complex/Complex.java	0.4082482904638631	587	588	2	replace	if(isInfinite  ||  isZero  ||  imaginary)  {  return  Complex.ZERO;  }	  if(isInfinite    ||    isZero)    {    return    Complex.ZERO;    }    	non-compiled	[CE]  	3	None	replace
193	[BUG]  [BUGGY]  .multiply(I.divide(createComplex(1.0,  1.0)));  [CE]  [FE]                          AssertionError      [CONTEXT]      public  Complex  atan()  {  if  (isNaN)  {  return  NaN;  }      [BUGGY]  .multiply(I.divide(createComplex(1.0,  1.0)));  [BUGGY]      .multiply(I.divide(createComplex(2.0,  0.0)));  }  [CLASS]  Complex  [METHOD]  atan  [RETURN_TYPE]  Complex  [VARIABLES]  boolean  isInfinite  isNaN  isZero  double  addend  c  d  denominator  divisor  factor  imaginary  q  real  subtrahend  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  	projects/Math46/src/main/java/org/apache/commons/math/complex/Complex.java	0.4082482904638631	587	588	2	replace	.multiply(I.divide(createComplex(1.0,  1.0)));	  .multiply(I.divide(createComplex(2.0,    1.0)));    	non-compiled	[CE]  	32	None	replace
194	[BUG]  [BUGGY]  return  this.add(infinite).subtract(I.subtract(this)).log().multiply(I.divide(createComplex(1.0,  0.0)));  [CE]  [FE]                AssertionError      [CONTEXT]      public  Complex  atan()  {  if  (isNaN)  {  return  NaN;  }      [BUGGY]  return  this.add(infinite).subtract(I.subtract(this)).log().multiply(I.divide(createComplex(1.0,  0.0)));  [BUGGY]      .multiply(I.divide(createComplex(2.0,  0.0)));  }  [CLASS]  Complex  [METHOD]  atan  [RETURN_TYPE]  Complex  [VARIABLES]  boolean  isInfinite  isNaN  isZero  double  addend  c  d  denominator  divisor  factor  imaginary  q  real  subtrahend  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  	projects/Math46/src/main/java/org/apache/commons/math/complex/Complex.java	0.4082482904638631	587	588	2	replace	return  this.add(infinite).subtract(I.subtract(this)).log().multiply(I.divide(createComplex(1.0,  0.0)));	  return    this.add(infinite).subtract(I.subtract(this)).log().multiply(I.divide(createComplex(2.0,    0.0)));    	non-compiled	[CE]  	16	None	replace
195	[BUG]  [BUGGY]  if(isInfinite)  {  if(!isZero  ||!isNaN)  {  return  Complex.ZERO;  }  [CE]  [FE]                      AssertionError      [CONTEXT]      public  Complex  atan()  {  if  (isNaN)  {  return  NaN;  }      [BUGGY]  if(isInfinite)  {  if(!isZero  ||!isNaN)  {  return  Complex.ZERO;  }  [BUGGY]      return  this.add(I).divide(I.subtract(this)).log()    .multiply(I.divide(createComplex(2.0,  0.0)));  .multiply(I.divide(createComplex(2.0,  0.0)));  }  [CLASS]  Complex  [METHOD]  atan  [RETURN_TYPE]  Complex  [VARIABLES]  boolean  isInfinite  isNaN  isZero  double  addend  c  d  denominator  divisor  factor  imaginary  q  real  subtrahend  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  	projects/Math46/src/main/java/org/apache/commons/math/complex/Complex.java	0.4082482904638631	587	588	2	replace	if(isInfinite)  {  if(!isZero  ||!isNaN)  {  return  Complex.ZERO;  }	  if(isInfinite)    {    if(!isNaN)    {    return    Complex.ZERO;    }    	non-compiled	[CE]  	19	None	replace
196	[BUG]  [BUGGY]  if(!isInfinite  &&  isZero)  {  return  Complex.EMPTY;  }  [CE]  [FE]                AssertionError      [CONTEXT]      public  Complex  atan()  {  if  (isNaN)  {  return  NaN;  }      [BUGGY]  if(!isInfinite  &&  isZero)  {  return  Complex.EMPTY;  }  [BUGGY]      return  this.add(I).divide(I.subtract(this)).log()    .multiply(I.divide(createComplex(2.0,  0.0)));  .multiply(I.divide(createComplex(2.0,  0.0)));  }  [CLASS]  Complex  [METHOD]  atan  [RETURN_TYPE]  Complex  [VARIABLES]  boolean  isInfinite  isNaN  isZero  double  addend  c  d  denominator  divisor  factor  imaginary  q  real  subtrahend  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  	projects/Math46/src/main/java/org/apache/commons/math/complex/Complex.java	0.4082482904638631	587	588	2	replace	if(!isInfinite  &&  isZero)  {  return  Complex.EMPTY;  }	  if(!isInfinite)    {    return    Complex.EMPTY;    }    	non-compiled	[CE]  	59	None	replace
197	[BUG]  [BUGGY]  return  this.add(infinite).divide(I.subtract(this)).log().multiply(I.divide(createComplex(1.0,  0.0)));  [CE]  [FE]            AssertionError      [CONTEXT]      public  Complex  atan()  {  if  (isNaN)  {  return  NaN;  }      [BUGGY]  return  this.add(infinite).divide(I.subtract(this)).log().multiply(I.divide(createComplex(1.0,  0.0)));  [BUGGY]      .multiply(I.divide(createComplex(2.0,  0.0)));  }  [CLASS]  Complex  [METHOD]  atan  [RETURN_TYPE]  Complex  [VARIABLES]  boolean  isInfinite  isNaN  isZero  double  addend  c  d  denominator  divisor  factor  imaginary  q  real  subtrahend  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  	projects/Math46/src/main/java/org/apache/commons/math/complex/Complex.java	0.4082482904638631	587	588	2	replace	return  this.add(infinite).divide(I.subtract(this)).log().multiply(I.divide(createComplex(1.0,  0.0)));	  return    this.add(infinite).divide(I.subtract(this)).log().multiply(I.divide(createComplex(2.0,    0.0)));    	non-compiled	[CE]  	61	None	replace
198	[BUG]  [BUGGY]  if(isInfinite  ||  isZero  ||  isNaN)  {  return  NaN;  }  [CE]  [FE]                  AssertionError      [CONTEXT]      public  Complex  atan()  {  if  (isNaN)  {  return  NaN;  }      [BUGGY]  if(isInfinite  ||  isZero  ||  isNaN)  {  return  NaN;  }  [BUGGY]      return  this.add(I).divide(I.subtract(this)).log()    .multiply(I.divide(createComplex(2.0,  0.0)));  .multiply(I.divide(createComplex(2.0,  0.0)));  }  [CLASS]  Complex  [METHOD]  atan  [RETURN_TYPE]  Complex  [VARIABLES]  boolean  isInfinite  isNaN  isZero  double  addend  c  d  denominator  divisor  factor  imaginary  q  real  subtrahend  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  	projects/Math46/src/main/java/org/apache/commons/math/complex/Complex.java	0.4082482904638631	587	588	2	replace	if(isInfinite  ||  isZero  ||  isNaN)  {  return  NaN;  }	  if(isInfinite    ||    isZero)    {    if(isNaN)    {    return    NaN;    }    	non-compiled	[CE]  	9	None	replace
199	[BUG]  [BUGGY]  try  ==  [Delete]  catch(NumberFormatException  e)  {  return  this.add(INF).divide(I.subtract(this)).log().multiply(I.divide(createComplex(2.0,  0.0)));  }  [CE]  [FE]            AssertionError      [CONTEXT]      public  Complex  atan()  {  if  (isNaN)  {  return  NaN;  }      [BUGGY]  try  ==  [Delete]  catch(NumberFormatException  e)  {  return  this.add(INF).divide(I.subtract(this)).log().multiply(I.divide(createComplex(2.0,  0.0)));  }  [BUGGY]      .multiply(I.divide(createComplex(2.0,  0.0)));  }  [CLASS]  Complex  [METHOD]  atan  [RETURN_TYPE]  Complex  [VARIABLES]  boolean  isInfinite  isNaN  isZero  double  addend  c  d  denominator  divisor  factor  imaginary  q  real  subtrahend  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  	projects/Math46/src/main/java/org/apache/commons/math/complex/Complex.java	0.4082482904638631	587	588	2	replace	try  ==  [Delete]  catch(NumberFormatException  e)  {  return  this.add(INF).divide(I.subtract(this)).log().multiply(I.divide(createComplex(2.0,  0.0)));  }	  if(isNaN)    {    return    this.add(INF).divide(I.subtract(this)).log().multiply(I.divide(createComplex(2.0,    0.0)));    }    	non-compiled	[CE]  	1	None	replace
200	[BUG]  [BUGGY]  try  ==  [Delete]  catch(NumberFormatException  e)  {  return  INF.add(INF).divide(I.subtract(this)).log().multiply(I.divide(createComplex(2.0,  0.0)));  }  [CE]  ';'  expected  [FE]              AssertionError      [CONTEXT]      public  Complex  atan()  {  if  (isNaN)  {  return  NaN;  }      [BUGGY]  try  ==  [Delete]  catch(NumberFormatException  e)  {  return  INF.add(INF).divide(I.subtract(this)).log().multiply(I.divide(createComplex(2.0,  0.0)));  }  [BUGGY]      .multiply(I.divide(createComplex(2.0,  0.0)));  }  [CLASS]  Complex  [METHOD]  atan  [RETURN_TYPE]  Complex  [VARIABLES]  boolean  isInfinite  isNaN  isZero  double  addend  c  d  denominator  divisor  factor  imaginary  q  real  subtrahend  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  	projects/Math46/src/main/java/org/apache/commons/math/complex/Complex.java	0.4082482904638631	587	588	2	replace	try  ==  [Delete]  catch(NumberFormatException  e)  {  return  INF.add(INF).divide(I.subtract(this)).log().multiply(I.divide(createComplex(2.0,  0.0)));  }	  if(isNaN)    {    return    this.add(INF).divide(I.subtract(this)).log().multiply(I.divide(createComplex(2.0,    0.0)));    }    	non-compiled	[CE]  ';'  expected	1	None	replace
201	[BUG]  [BUGGY]  aughtExceptionHandler(this).attr(INF).log().multiply(I.divide(createComplex(2.0,  0.0)));  [CE]  [FE]                AssertionError      [CONTEXT]      public  Complex  atan()  {  if  (isNaN)  {  return  NaN;  }      [BUGGY]  aughtExceptionHandler(this).attr(INF).log().multiply(I.divide(createComplex(2.0,  0.0)));  [BUGGY]      .multiply(I.divide(createComplex(2.0,  0.0)));  }  [CLASS]  Complex  [METHOD]  atan  [RETURN_TYPE]  Complex  [VARIABLES]  boolean  isInfinite  isNaN  isZero  double  addend  c  d  denominator  divisor  factor  imaginary  q  real  subtrahend  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  	projects/Math46/src/main/java/org/apache/commons/math/complex/Complex.java	0.4082482904638631	587	588	2	replace	aughtExceptionHandler(this).attr(INF).log().multiply(I.divide(createComplex(2.0,  0.0)));	  if(isNaN)    {    return    this.add(INF).divide(I.subtract(this)).log().multiply(I.divide(createComplex(2.0,    0.0)));    }    	non-compiled	[CE]  	1	None	replace
202	[BUG]  [BUGGY]  try  ==  [Delete]  catch(NumberFormatException  e)  {  return  this.add(INF).divide(I.subtract(this)).log().multiply(I.divide(createComplex(0.0,  0.0)));  }  [CE]  [FE]                  AssertionError      [CONTEXT]      public  Complex  atan()  {  if  (isNaN)  {  return  NaN;  }      [BUGGY]  try  ==  [Delete]  catch(NumberFormatException  e)  {  return  this.add(INF).divide(I.subtract(this)).log().multiply(I.divide(createComplex(0.0,  0.0)));  }  [BUGGY]      .multiply(I.divide(createComplex(2.0,  0.0)));  }  [CLASS]  Complex  [METHOD]  atan  [RETURN_TYPE]  Complex  [VARIABLES]  boolean  isInfinite  isNaN  isZero  double  addend  c  d  denominator  divisor  factor  imaginary  q  real  subtrahend  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  	projects/Math46/src/main/java/org/apache/commons/math/complex/Complex.java	0.4082482904638631	587	588	2	replace	try  ==  [Delete]  catch(NumberFormatException  e)  {  return  this.add(INF).divide(I.subtract(this)).log().multiply(I.divide(createComplex(0.0,  0.0)));  }	  if(isNaN)    {    return    this.add(INF).divide(I.subtract(this)).log().multiply(I.divide(createComplex(2.0,    0.0)));    }    	non-compiled	[CE]  	1	None	replace
203	[BUG]  [BUGGY]  if(isNaN  ||  isZero)  {  if(isInfinite)  {  return  NaN;  }  [CE]  [FE]                AssertionError      [CONTEXT]      public  Complex  atan()  {  if  (isNaN)  {  return  NaN;  }      [BUGGY]  if(isNaN  ||  isZero)  {  if(isInfinite)  {  return  NaN;  }  [BUGGY]      return  this.add(I).divide(I.subtract(this)).log()    .multiply(I.divide(createComplex(2.0,  0.0)));  .multiply(I.divide(createComplex(2.0,  0.0)));  }  [CLASS]  Complex  [METHOD]  atan  [RETURN_TYPE]  Complex  [VARIABLES]  boolean  isInfinite  isNaN  isZero  double  addend  c  d  denominator  divisor  factor  imaginary  q  real  subtrahend  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  	projects/Math46/src/main/java/org/apache/commons/math/complex/Complex.java	0.4082482904638631	587	588	2	replace	if(isNaN  ||  isZero)  {  if(isInfinite)  {  return  NaN;  }	  if(isNaN)    {    if(isInfinite)    {    return    NaN;    }    	non-compiled	[CE]  	8	None	replace
204	[BUG]  [BUGGY]  while(isInfinite  &&  isNaN)  {  return  NaN;  }  [CE]  [FE]                      AssertionError      [CONTEXT]      public  Complex  atan()  {  if  (isNaN)  {  return  NaN;  }      [BUGGY]  while(isInfinite  &&  isNaN)  {  return  NaN;  }  [BUGGY]      .multiply(I.divide(createComplex(2.0,  0.0)));  }  [CLASS]  Complex  [METHOD]  atan  [RETURN_TYPE]  Complex  [VARIABLES]  boolean  isInfinite  isNaN  isZero  double  addend  c  d  denominator  divisor  factor  imaginary  q  real  subtrahend  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  	projects/Math46/src/main/java/org/apache/commons/math/complex/Complex.java	0.4082482904638631	587	588	2	replace	while(isInfinite  &&  isNaN)  {  return  NaN;  }	  if(isNaN    ||    isInfinite)    {    return    NaN;    }    	non-compiled	[CE]  	49	None	replace
205	[BUG]  [BUGGY]  try  ==  [Delete]  catch(NumberFormatException  e)  {  return  this.add(INF).multiply(I.subtract(this)).log().multiply(I.divide(createComplex(2.0,  0.0)));  }  [CE]  [FE]                  AssertionError      [CONTEXT]      public  Complex  atan()  {  if  (isNaN)  {  return  NaN;  }      [BUGGY]  try  ==  [Delete]  catch(NumberFormatException  e)  {  return  this.add(INF).multiply(I.subtract(this)).log().multiply(I.divide(createComplex(2.0,  0.0)));  }  [BUGGY]      .multiply(I.divide(createComplex(2.0,  0.0)));  }  [CLASS]  Complex  [METHOD]  atan  [RETURN_TYPE]  Complex  [VARIABLES]  boolean  isInfinite  isNaN  isZero  double  addend  c  d  denominator  divisor  factor  imaginary  q  real  subtrahend  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  	projects/Math46/src/main/java/org/apache/commons/math/complex/Complex.java	0.4082482904638631	587	588	2	replace	try  ==  [Delete]  catch(NumberFormatException  e)  {  return  this.add(INF).multiply(I.subtract(this)).log().multiply(I.divide(createComplex(2.0,  0.0)));  }	  if(isNaN)    {    return    this.add(INF).multiply(I.subtract(this)).log().multiply(I.divide(createComplex(2.0,    0.0)));    }    	non-compiled	[CE]  	6	None	replace
206	[BUG]  [BUGGY]  try  ==  [Delete]  catch(Throwable  t)  {  return  this.add(INF).multiply(I.subtract(this)).log().multiply(I.divide(createComplex(2.0,  0.0)));  }  [CE]  ';'  expected  [FE]                    AssertionError      [CONTEXT]      public  Complex  atan()  {  if  (isNaN)  {  return  NaN;  }      [BUGGY]  try  ==  [Delete]  catch(Throwable  t)  {  return  this.add(INF).multiply(I.subtract(this)).log().multiply(I.divide(createComplex(2.0,  0.0)));  }  [BUGGY]      .multiply(I.divide(createComplex(2.0,  0.0)));  }  [CLASS]  Complex  [METHOD]  atan  [RETURN_TYPE]  Complex  [VARIABLES]  boolean  isInfinite  isNaN  isZero  double  addend  c  d  denominator  divisor  factor  imaginary  q  real  subtrahend  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  	projects/Math46/src/main/java/org/apache/commons/math/complex/Complex.java	0.4082482904638631	587	588	2	replace	try  ==  [Delete]  catch(Throwable  t)  {  return  this.add(INF).multiply(I.subtract(this)).log().multiply(I.divide(createComplex(2.0,  0.0)));  }	  if(isNaN)    {    return    this.add(INF).multiply(I.subtract(this)).log().multiply(I.divide(createComplex(2.0,    0.0)));    }    	non-compiled	[CE]  ';'  expected	6	None	replace
207	[BUG]  [BUGGY]  try  ==  [Delete]  catch(NumberFormatException  e)  {  return  INF.multiply(I.subtract(this)).log().multiply(I.divide(createComplex(2.0,  0.0)));  }  [CE]  [FE]                      AssertionError      [CONTEXT]      public  Complex  atan()  {  if  (isNaN)  {  return  NaN;  }      [BUGGY]  try  ==  [Delete]  catch(NumberFormatException  e)  {  return  INF.multiply(I.subtract(this)).log().multiply(I.divide(createComplex(2.0,  0.0)));  }  [BUGGY]      .multiply(I.divide(createComplex(2.0,  0.0)));  }  [CLASS]  Complex  [METHOD]  atan  [RETURN_TYPE]  Complex  [VARIABLES]  boolean  isInfinite  isNaN  isZero  double  addend  c  d  denominator  divisor  factor  imaginary  q  real  subtrahend  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  	projects/Math46/src/main/java/org/apache/commons/math/complex/Complex.java	0.4082482904638631	587	588	2	replace	try  ==  [Delete]  catch(NumberFormatException  e)  {  return  INF.multiply(I.subtract(this)).log().multiply(I.divide(createComplex(2.0,  0.0)));  }	  if(isNaN)    {    return    this.add(INF).multiply(I.subtract(this)).log().multiply(I.divide(createComplex(2.0,    0.0)));    }    	non-compiled	[CE]  	6	None	replace
208	[BUG]  [BUGGY]  try  ==  [Delete]  catch(NumberFormatException  nfe)  {  return  INF.multiply(I.subtract(this)).log().multiply(I.divide(createComplex(2.0,  0.0)));  }  [CE]  [FE]                        AssertionError      [CONTEXT]      public  Complex  atan()  {  if  (isNaN)  {  return  NaN;  }      [BUGGY]  try  ==  [Delete]  catch(NumberFormatException  nfe)  {  return  INF.multiply(I.subtract(this)).log().multiply(I.divide(createComplex(2.0,  0.0)));  }  [BUGGY]      .multiply(I.divide(createComplex(2.0,  0.0)));  }  [CLASS]  Complex  [METHOD]  atan  [RETURN_TYPE]  Complex  [VARIABLES]  boolean  isInfinite  isNaN  isZero  double  addend  c  d  denominator  divisor  factor  imaginary  q  real  subtrahend  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  	projects/Math46/src/main/java/org/apache/commons/math/complex/Complex.java	0.4082482904638631	587	588	2	replace	try  ==  [Delete]  catch(NumberFormatException  nfe)  {  return  INF.multiply(I.subtract(this)).log().multiply(I.divide(createComplex(2.0,  0.0)));  }	  if(isNaN)    {    return    this.add(INF).multiply(I.subtract(this)).log().multiply(I.divide(createComplex(2.0,    0.0)));    }    	non-compiled	[CE]  	6	None	replace
209	[BUG]  [BUGGY]  return  this.add(isNaN).subtract(I.subtract(this)).log().multiply(I.divide(createComplex(0.0,  0.0)));  [CE]  [FE]              AssertionError      [CONTEXT]      public  Complex  atan()  {  if  (isNaN)  {  return  NaN;  }      [BUGGY]  return  this.add(isNaN).subtract(I.subtract(this)).log().multiply(I.divide(createComplex(0.0,  0.0)));  [BUGGY]      .multiply(I.divide(createComplex(2.0,  0.0)));  }  [CLASS]  Complex  [METHOD]  atan  [RETURN_TYPE]  Complex  [VARIABLES]  boolean  isInfinite  isNaN  isZero  double  addend  c  d  denominator  divisor  factor  imaginary  q  real  subtrahend  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  	projects/Math46/src/main/java/org/apache/commons/math/complex/Complex.java	0.4082482904638631	587	588	2	replace	return  this.add(isNaN).subtract(I.subtract(this)).log().multiply(I.divide(createComplex(0.0,  0.0)));	  return    this.add(INF).subtract(I.subtract(this)).log().multiply(I.divide(createComplex(0.0,    0.0)));    	non-compiled	[CE]  	60	None	replace
210	[BUG]  [BUGGY]  if(isInfinite)  {  return  this.add(INF).divide(I.subtract(this)).log().multiply(I.divide(createComplex(0.0,  0.0)));  }  [CE]  [FE]            AssertionError      [CONTEXT]      public  Complex  atan()  {  if  (isNaN)  {  return  NaN;  }      [BUGGY]  if(isInfinite)  {  return  this.add(INF).divide(I.subtract(this)).log().multiply(I.divide(createComplex(0.0,  0.0)));  }  [BUGGY]      .multiply(I.divide(createComplex(2.0,  0.0)));  }  [CLASS]  Complex  [METHOD]  atan  [RETURN_TYPE]  Complex  [VARIABLES]  boolean  isInfinite  isNaN  isZero  double  addend  c  d  denominator  divisor  factor  imaginary  q  real  subtrahend  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  	projects/Math46/src/main/java/org/apache/commons/math/complex/Complex.java	0.4082482904638631	587	588	2	replace	if(isInfinite)  {  return  this.add(INF).divide(I.subtract(this)).log().multiply(I.divide(createComplex(0.0,  0.0)));  }	  if(isZero)    {    return    this.add(INF).divide(I.subtract(this)).log().multiply(I.divide(createComplex(0.0,    0.0)));    }    	non-compiled	[CE]  	10	None	replace
211	[BUG]  [BUGGY]  if(isInfinite)  {  return  this.add(INF).divide(I.subtract(this)).log().multiply(I.divide(createComplex(2.0,  0.0)));  }  [CE]  [FE]              AssertionError      [CONTEXT]      public  Complex  atan()  {  if  (isNaN)  {  return  NaN;  }      [BUGGY]  if(isInfinite)  {  return  this.add(INF).divide(I.subtract(this)).log().multiply(I.divide(createComplex(2.0,  0.0)));  }  [BUGGY]      .multiply(I.divide(createComplex(2.0,  0.0)));  }  [CLASS]  Complex  [METHOD]  atan  [RETURN_TYPE]  Complex  [VARIABLES]  boolean  isInfinite  isNaN  isZero  double  addend  c  d  denominator  divisor  factor  imaginary  q  real  subtrahend  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  	projects/Math46/src/main/java/org/apache/commons/math/complex/Complex.java	0.4082482904638631	587	588	2	replace	if(isInfinite)  {  return  this.add(INF).divide(I.subtract(this)).log().multiply(I.divide(createComplex(2.0,  0.0)));  }	  if(isZero)    {    return    this.add(INF).divide(I.subtract(this)).log().multiply(I.divide(createComplex(0.0,    0.0)));    }    	non-compiled	[CE]  	10	None	replace
212	[BUG]  [BUGGY]  Iterator  <  Complex>  it  =  this.getINFDivisors().iterator();  [CE]  ';'  expected  [FE]                    AssertionError      [CONTEXT]      public  Complex  atan()  {  if  (isNaN)  {  return  NaN;  }      [BUGGY]  Iterator  <  Complex>  it  =  this.getINFDivisors().iterator();  [BUGGY]      return  this.add(I).divide(I.subtract(this)).log()    .multiply(I.divide(createComplex(2.0,  0.0)));  .multiply(I.divide(createComplex(2.0,  0.0)));  }  [CLASS]  Complex  [METHOD]  atan  [RETURN_TYPE]  Complex  [VARIABLES]  boolean  isInfinite  isNaN  isZero  double  addend  c  d  denominator  divisor  factor  imaginary  q  real  subtrahend  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  	projects/Math46/src/main/java/org/apache/commons/math/complex/Complex.java	0.4082482904638631	587	588	2	replace	Iterator  <  Complex>  it  =  this.getINFDivisors().iterator();	  Iterator    <    Complex>    it    =    this.getDivisors().iterator();    	non-compiled	[CE]  ';'  expected	22	None	replace
213	[BUG]  [BUGGY]  if(isInfinite  ||  isZero)  {  if(!isInfinite)  {  return  Complex.EMPTY;  }  [CE]  ';'  expected  [FE]                  AssertionError      [CONTEXT]      public  Complex  atan()  {  if  (isNaN)  {  return  NaN;  }      [BUGGY]  if(isInfinite  ||  isZero)  {  if(!isInfinite)  {  return  Complex.EMPTY;  }  [BUGGY]      return  this.add(I).divide(I.subtract(this)).log()    .multiply(I.divide(createComplex(2.0,  0.0)));  .multiply(I.divide(createComplex(2.0,  0.0)));  }  [CLASS]  Complex  [METHOD]  atan  [RETURN_TYPE]  Complex  [VARIABLES]  boolean  isInfinite  isNaN  isZero  double  addend  c  d  denominator  divisor  factor  imaginary  q  real  subtrahend  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  	projects/Math46/src/main/java/org/apache/commons/math/complex/Complex.java	0.4082482904638631	587	588	2	replace	if(isInfinite  ||  isZero)  {  if(!isInfinite)  {  return  Complex.EMPTY;  }	  if(isNaN    ||    isInfinite)    {    if(!isZero)    {    return    Complex.EMPTY;    }    	non-compiled	[CE]  ';'  expected	27	None	replace
214	[BUG]  [BUGGY]  try  ==  [Delete]  catch(NumberFormatException  nfe)  {  return  INF.add(INF).divide(I.subtract(this)).log().multiply(I.divide(createComplex(0.0,  0.0)));  }  [CE]  ';'  expected  [FE]              AssertionError      [CONTEXT]      public  Complex  atan()  {  if  (isNaN)  {  return  NaN;  }      [BUGGY]  try  ==  [Delete]  catch(NumberFormatException  nfe)  {  return  INF.add(INF).divide(I.subtract(this)).log().multiply(I.divide(createComplex(0.0,  0.0)));  }  [BUGGY]      .multiply(I.divide(createComplex(2.0,  0.0)));  }  [CLASS]  Complex  [METHOD]  atan  [RETURN_TYPE]  Complex  [VARIABLES]  boolean  isInfinite  isNaN  isZero  double  addend  c  d  denominator  divisor  factor  imaginary  q  real  subtrahend  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  	projects/Math46/src/main/java/org/apache/commons/math/complex/Complex.java	0.4082482904638631	587	588	2	replace	try  ==  [Delete]  catch(NumberFormatException  nfe)  {  return  INF.add(INF).divide(I.subtract(this)).log().multiply(I.divide(createComplex(0.0,  0.0)));  }	  if(isNaN)    {    return    this.add(INF).divide(I.subtract(this)).log().multiply(I.divide(createComplex(0.0,    0.0)));    }    	non-compiled	[CE]  ';'  expected	11	None	replace
215	[BUG]  [BUGGY]  try  ==  [Delete]  catch(NumberFormatException  e)  {  return  INF.divide(I.subtract(this)).log().multiply(I.divide(createComplex(0.0,  0.0)));  }  [CE]  ';'  expected  [FE]                AssertionError      [CONTEXT]      public  Complex  atan()  {  if  (isNaN)  {  return  NaN;  }      [BUGGY]  try  ==  [Delete]  catch(NumberFormatException  e)  {  return  INF.divide(I.subtract(this)).log().multiply(I.divide(createComplex(0.0,  0.0)));  }  [BUGGY]      .multiply(I.divide(createComplex(2.0,  0.0)));  }  [CLASS]  Complex  [METHOD]  atan  [RETURN_TYPE]  Complex  [VARIABLES]  boolean  isInfinite  isNaN  isZero  double  addend  c  d  denominator  divisor  factor  imaginary  q  real  subtrahend  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  	projects/Math46/src/main/java/org/apache/commons/math/complex/Complex.java	0.4082482904638631	587	588	2	replace	try  ==  [Delete]  catch(NumberFormatException  e)  {  return  INF.divide(I.subtract(this)).log().multiply(I.divide(createComplex(0.0,  0.0)));  }	  if(isNaN)    {    return    this.add(INF).divide(I.subtract(this)).log().multiply(I.divide(createComplex(0.0,    0.0)));    }    	non-compiled	[CE]  ';'  expected	11	None	replace
216	[BUG]  [BUGGY]  if(isInfinite  ||  isZero  ||  imaginary)  {  return  Complex.ZERO;  }  else  {  return  Complex.ZERO;  }  [CE]  ';'  expected  [FE]                    AssertionError      [CONTEXT]      public  Complex  atan()  {  if  (isNaN)  {  return  NaN;  }      [BUGGY]  if(isInfinite  ||  isZero  ||  imaginary)  {  return  Complex.ZERO;  }  else  {  return  Complex.ZERO;  }  [BUGGY]      return  this.add(I).divide(I.subtract(this)).log()    .multiply(I.divide(createComplex(2.0,  0.0)));  .multiply(I.divide(createComplex(2.0,  0.0)));  }  [CLASS]  Complex  [METHOD]  atan  [RETURN_TYPE]  Complex  [VARIABLES]  boolean  isInfinite  isNaN  isZero  double  addend  c  d  denominator  divisor  factor  imaginary  q  real  subtrahend  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  	projects/Math46/src/main/java/org/apache/commons/math/complex/Complex.java	0.4082482904638631	587	588	2	replace	if(isInfinite  ||  isZero  ||  imaginary)  {  return  Complex.ZERO;  }  else  {  return  Complex.ZERO;  }	  if(isInfinite    ||    isZero)    {    return    Complex.ZERO;    }    else    {    return    Complex.ZERO;    }    	non-compiled	[CE]  ';'  expected	33	None	replace
217	[BUG]  [BUGGY]  &&  isInfinite)  {  return  Complex.ZERO;  }  else  {  return  Complex.ZERO;  }  [CE]  ';'  expected  [FE]                        AssertionError      [CONTEXT]      public  Complex  atan()  {  if  (isNaN)  {  return  NaN;  }      [BUGGY]  &&  isInfinite)  {  return  Complex.ZERO;  }  else  {  return  Complex.ZERO;  }  [BUGGY]      return  this.add(I).divide(I.subtract(this)).log()    .multiply(I.divide(createComplex(2.0,  0.0)));  .multiply(I.divide(createComplex(2.0,  0.0)));  }  [CLASS]  Complex  [METHOD]  atan  [RETURN_TYPE]  Complex  [VARIABLES]  boolean  isInfinite  isNaN  isZero  double  addend  c  d  denominator  divisor  factor  imaginary  q  real  subtrahend  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  	projects/Math46/src/main/java/org/apache/commons/math/complex/Complex.java	0.4082482904638631	587	588	2	replace	&&  isInfinite)  {  return  Complex.ZERO;  }  else  {  return  Complex.ZERO;  }	  ||    isInfinite)    {    return    Complex.ZERO;    }    else    {    return    Complex.ZERO;    }    	non-compiled	[CE]  ';'  expected	35	None	replace
218	[BUG]  [BUGGY]  if(isInfinite  ||  isZero  ||  imaginary)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  ';'  expected  [FE]                    AssertionError      [CONTEXT]      public  Complex  atan()  {  if  (isNaN)  {  return  NaN;  }      [BUGGY]  if(isInfinite  ||  isZero  ||  imaginary)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      return  this.add(I).divide(I.subtract(this)).log()    .multiply(I.divide(createComplex(2.0,  0.0)));  .multiply(I.divide(createComplex(2.0,  0.0)));  }  [CLASS]  Complex  [METHOD]  atan  [RETURN_TYPE]  Complex  [VARIABLES]  boolean  isInfinite  isNaN  isZero  double  addend  c  d  denominator  divisor  factor  imaginary  q  real  subtrahend  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  	projects/Math46/src/main/java/org/apache/commons/math/complex/Complex.java	0.4082482904638631	587	588	2	replace	if(isInfinite  ||  isZero  ||  imaginary)  {  throw  new  IllegalArgumentException( " ");  }	  if(isInfinite    ||    isZero)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  ';'  expected	39	None	replace
