bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  List  <  Option>  tokens  =  Lists.newArrayList(tokens);  [CE]  cannot  find  symbol  [FE]                    UnrecognizedOptionException      [CONTEXT]      private  void  init()  {  eatTheRest  =  false;  tokens.clear();      [BUGGY]  List  <  Option>  tokens  =  Lists.newArrayList(tokens);  [BUGGY]      currentOption  =  null;  }  [CLASS]  PosixParser  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  ArrayList  tokens  Options  options  Option  currentOption  boolean  eatTheRest  	projects/Cli2/src/java/org/apache/commons/cli/PosixParser.java	1.0	53	53	1	replace	List  <  Option>  tokens  =  Lists.newArrayList(tokens);	  List    <    Option>    tokens    =    Lists.newArrayList();    	non-compiled	[CE]  cannot  find  symbol	36	None	replace
2	[BUG]  [BUGGY]  List  <  Option>  tokens  =  Lists.newLinkedList();  [CE]  cannot  find  symbol  [FE]                      UnrecognizedOptionException      [CONTEXT]      private  void  init()  {  eatTheRest  =  false;  tokens.clear();      [BUGGY]  List  <  Option>  tokens  =  Lists.newLinkedList();  [BUGGY]      currentOption  =  null;  }  [CLASS]  PosixParser  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  ArrayList  tokens  Options  options  Option  currentOption  boolean  eatTheRest  	projects/Cli2/src/java/org/apache/commons/cli/PosixParser.java	1.0	53	53	1	replace	List  <  Option>  tokens  =  Lists.newLinkedList();	  List    <    Option>    tokens    =    Lists.newArrayList();    	non-compiled	[CE]  cannot  find  symbol	36	None	replace
3	[BUG]  [BUGGY]  List  <  Option>  tokens  =  new  ArrayList  <  Option>(options.size());  [CE]  cannot  find  symbol  [FE]                    UnrecognizedOptionException      [CONTEXT]      private  void  init()  {  eatTheRest  =  false;  tokens.clear();      [BUGGY]  List  <  Option>  tokens  =  new  ArrayList  <  Option>(options.size());  [BUGGY]      currentOption  =  null;  }  [CLASS]  PosixParser  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  ArrayList  tokens  Options  options  Option  currentOption  boolean  eatTheRest  	projects/Cli2/src/java/org/apache/commons/cli/PosixParser.java	1.0	53	53	1	replace	List  <  Option>  tokens  =  new  ArrayList  <  Option>(options.size());	  ArrayList    <    Option>    tokens    =    new    ArrayList    <    Option>(options.size());    	non-compiled	[CE]  cannot  find  symbol	78	None	replace
4	[BUG]  [BUGGY]  ArrayList  <  Option>  tokens  =  new  ArrayList  <  Option>(options.size()  -  1);  [CE]  cannot  find  symbol  [FE]                      UnrecognizedOptionException      [CONTEXT]      private  void  init()  {  eatTheRest  =  false;  tokens.clear();      [BUGGY]  ArrayList  <  Option>  tokens  =  new  ArrayList  <  Option>(options.size()  -  1);  [BUGGY]      currentOption  =  null;  }  [CLASS]  PosixParser  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  ArrayList  tokens  Options  options  Option  currentOption  boolean  eatTheRest  	projects/Cli2/src/java/org/apache/commons/cli/PosixParser.java	1.0	53	53	1	replace	ArrayList  <  Option>  tokens  =  new  ArrayList  <  Option>(options.size()  -  1);	  ArrayList    <    Option>    tokens    =    new    ArrayList    <    Option>(options.size());    	non-compiled	[CE]  cannot  find  symbol	78	None	replace
5	[BUG]  [BUGGY]  ArrayList  <  Option>  tokens  =  new  ArrayList  <  Option>(options.size()  +  1);  [CE]  cannot  find  symbol  [FE]                        UnrecognizedOptionException      [CONTEXT]      private  void  init()  {  eatTheRest  =  false;  tokens.clear();      [BUGGY]  ArrayList  <  Option>  tokens  =  new  ArrayList  <  Option>(options.size()  +  1);  [BUGGY]      currentOption  =  null;  }  [CLASS]  PosixParser  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  ArrayList  tokens  Options  options  Option  currentOption  boolean  eatTheRest  	projects/Cli2/src/java/org/apache/commons/cli/PosixParser.java	1.0	53	53	1	replace	ArrayList  <  Option>  tokens  =  new  ArrayList  <  Option>(options.size()  +  1);	  ArrayList    <    Option>    tokens    =    new    ArrayList    <    Option>(options.size());    	non-compiled	[CE]  cannot  find  symbol	78	None	replace
6	[BUG]  [BUGGY]  List  tokens  =  new  ArrayList();  Options  options  =  options.getOptions();  [CE]  cannot  find  symbol  [FE]        UnrecognizedOptionException      [CONTEXT]      private  void  init()  {  eatTheRest  =  false;  tokens.clear();      [BUGGY]  List  tokens  =  new  ArrayList();  Options  options  =  options.getOptions();  [BUGGY]      currentOption  =  null;  }  [CLASS]  PosixParser  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  ArrayList  tokens  Options  options  Option  currentOption  boolean  eatTheRest  	projects/Cli2/src/java/org/apache/commons/cli/PosixParser.java	1.0	53	53	1	replace	List  tokens  =  new  ArrayList();  Options  options  =  options.getOptions();	          ArrayList    tokens    =    new    ArrayList();    Options    options    =    options.getOptions();    	non-compiled	[CE]  cannot  find  symbol	136	None	replace
7	[BUG]  [BUGGY]  ArrayList  tokens  =  new  ArrayList();  Option  options  =  options.getOptions();  [CE]  cannot  find  symbol  [FE]          UnrecognizedOptionException      [CONTEXT]      private  void  init()  {  eatTheRest  =  false;  tokens.clear();      [BUGGY]  ArrayList  tokens  =  new  ArrayList();  Option  options  =  options.getOptions();  [BUGGY]      currentOption  =  null;  }  [CLASS]  PosixParser  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  ArrayList  tokens  Options  options  Option  currentOption  boolean  eatTheRest  	projects/Cli2/src/java/org/apache/commons/cli/PosixParser.java	1.0	53	53	1	replace	ArrayList  tokens  =  new  ArrayList();  Option  options  =  options.getOptions();	          ArrayList    tokens    =    new    ArrayList();    Options    options    =    options.getOptions();    	non-compiled	[CE]  cannot  find  symbol	136	None	replace
8	[BUG]  [BUGGY]  ArrayList  tokens  =  new  ArrayList();  options  =  options.getOptions();  [CE]  incompatible  types  [FE]            UnrecognizedOptionException      [CONTEXT]      private  void  init()  {  eatTheRest  =  false;  tokens.clear();      [BUGGY]  ArrayList  tokens  =  new  ArrayList();  options  =  options.getOptions();  [BUGGY]      currentOption  =  null;  }  [CLASS]  PosixParser  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  ArrayList  tokens  Options  options  Option  currentOption  boolean  eatTheRest  	projects/Cli2/src/java/org/apache/commons/cli/PosixParser.java	1.0	53	53	1	replace	ArrayList  tokens  =  new  ArrayList();  options  =  options.getOptions();	          ArrayList    tokens    =    new    ArrayList();    Options    options    =    options.getOptions();    	non-compiled	[CE]  incompatible  types	136	None	replace
9	[BUG]  [BUGGY]  [FE]  UnrecognizedOptionException  [FE]    UnrecognizedOptionException    [CONTEXT]      private  void  init()  {  eatTheRest  =  false;  tokens.clear();      [BUGGY]  if(!eatTheRest)  {  tokens.clear();  currentOption  =  null;  tokens.clear();  currentOption  =  null;  }  [BUGGY]      currentOption  =  null;  }  [CLASS]  PosixParser  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  ArrayList  tokens  Options  options  Option  currentOption  boolean  eatTheRest  	projects/Cli2/src/java/org/apache/commons/cli/PosixParser.java	1.0	53	53	1	add	if(!eatTheRest)  {  tokens.clear();  currentOption  =  null;  tokens.clear();  currentOption  =  null;  }	          tokens.clear();    currentOption    =    null;    tokens.clear();    currentOption    =    null;    	compilable	  [FE]  UnrecognizedOptionException  	53	1	replace
10	[BUG]  [BUGGY]  if(!eatTheRest)  {  tokens.clear();  currentOption  =  null;  tokens.clear();  currentOption  =  null;  }  [FE]  UnrecognizedOptionException  [FE]    UnrecognizedOptionException    [CONTEXT]      private  void  init()  {  eatTheRest  =  false;  tokens.clear();      [BUGGY]  if(!eatTheRest)  {  tokens.clear();  currentOption  =  null;  tokens.clear();  currentOption  =  null;  }  [BUGGY]      currentOption  =  null;  }  [CLASS]  PosixParser  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  ArrayList  tokens  Options  options  Option  currentOption  boolean  eatTheRest  	projects/Cli2/src/java/org/apache/commons/cli/PosixParser.java	1.0	53	53	1	replace	if(!eatTheRest)  {  tokens.clear();  currentOption  =  null;  tokens.clear();  currentOption  =  null;  }	          tokens.clear();    currentOption    =    null;    tokens.clear();    currentOption    =    null;    	compilable	  [FE]  UnrecognizedOptionException  	53	1	replace
11	[BUG]  [BUGGY]  [FE]  UnrecognizedOptionException  [FE]      UnrecognizedOptionException    [CONTEXT]      private  void  init()  {  eatTheRest  =  false;  tokens.clear();      [BUGGY]  if(eatTheRest)  {  tokens.clear();  currentOption  =  null;  tokens.clear();  currentOption  =  null;  }  [BUGGY]      currentOption  =  null;  }  [CLASS]  PosixParser  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  ArrayList  tokens  Options  options  Option  currentOption  boolean  eatTheRest  	projects/Cli2/src/java/org/apache/commons/cli/PosixParser.java	1.0	53	53	1	add	if(eatTheRest)  {  tokens.clear();  currentOption  =  null;  tokens.clear();  currentOption  =  null;  }	          tokens.clear();    currentOption    =    null;    tokens.clear();    currentOption    =    null;    	compilable	  [FE]  UnrecognizedOptionException  	53	1	replace
12	[BUG]  [BUGGY]  if(eatTheRest)  {  tokens.clear();  currentOption  =  null;  tokens.clear();  currentOption  =  null;  }  [FE]  UnrecognizedOptionException  [FE]      UnrecognizedOptionException    [CONTEXT]      private  void  init()  {  eatTheRest  =  false;  tokens.clear();      [BUGGY]  if(eatTheRest)  {  tokens.clear();  currentOption  =  null;  tokens.clear();  currentOption  =  null;  }  [BUGGY]      currentOption  =  null;  }  [CLASS]  PosixParser  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  ArrayList  tokens  Options  options  Option  currentOption  boolean  eatTheRest  	projects/Cli2/src/java/org/apache/commons/cli/PosixParser.java	1.0	53	53	1	replace	if(eatTheRest)  {  tokens.clear();  currentOption  =  null;  tokens.clear();  currentOption  =  null;  }	          tokens.clear();    currentOption    =    null;    tokens.clear();    currentOption    =    null;    	compilable	  [FE]  UnrecognizedOptionException  	53	1	replace
13	[BUG]  [BUGGY]          ArrayList    <    Option>    tokens    =    new    ArrayList    <    Option>();    new  ArrayList  <  Option>();  ArrayList  <  Option>  tokens  =  new  ArrayList  <  Option>();  new  ArrayList  <  Option>();  [CE]  variable  tokens  is  already  defined  in  method  init()  [FE]    UnrecognizedOptionException    [CONTEXT]      private  void  init()  {  eatTheRest  =  false;  tokens.clear();      [BUGGY]          ArrayList    <    Option>    tokens    =    new    ArrayList    <    Option>();    new  ArrayList  <  Option>();  ArrayList  <  Option>  tokens  =  new  ArrayList  <  Option>();  new  ArrayList  <  Option>();  [BUGGY]      currentOption  =  null;  }  [CLASS]  PosixParser  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  ArrayList  tokens  Options  options  Option  currentOption  boolean  eatTheRest  	projects/Cli2/src/java/org/apache/commons/cli/PosixParser.java	1.0	53	53	1	replace	                ArrayList        <        Option>        tokens        =        new        ArrayList        <        Option>();        new    ArrayList    <    Option>();    ArrayList  <  Option>  tokens  =  new  ArrayList  <  Option>();  new  ArrayList  <  Option>();	  	non-compiled	[CE]  variable  tokens  is  already  defined  in  method  init()	45	None	add
14	[BUG]  [BUGGY]          ArrayList    <    Option>    tokens    =    new    ArrayList    <    Option>();    new  ArrayList  <  Option>();  ArrayList  <  Option>  tokens  =  new  ArrayList  <  Option>();  new  ArrayList  <  Option>();  currentOption  =  null;  [CE]  variable  tokens  is  already  defined  in  method  init()  [FE]      UnrecognizedOptionException    [CONTEXT]      private  void  init()  {  eatTheRest  =  false;  tokens.clear();      [BUGGY]          ArrayList    <    Option>    tokens    =    new    ArrayList    <    Option>();    new  ArrayList  <  Option>();  ArrayList  <  Option>  tokens  =  new  ArrayList  <  Option>();  new  ArrayList  <  Option>();  currentOption  =  null;  [BUGGY]      currentOption  =  null;  }  [CLASS]  PosixParser  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  ArrayList  tokens  Options  options  Option  currentOption  boolean  eatTheRest  	projects/Cli2/src/java/org/apache/commons/cli/PosixParser.java	1.0	53	53	1	replace	                ArrayList        <        Option>        tokens        =        new        ArrayList        <        Option>();        new    ArrayList    <    Option>();    ArrayList  <  Option>  tokens  =  new  ArrayList  <  Option>();  new  ArrayList  <  Option>();  currentOption  =  null;	  	non-compiled	[CE]  variable  tokens  is  already  defined  in  method  init()	45	None	add
15	[BUG]  [BUGGY]          ArrayList    <    Option>    tokens    =    new    ArrayList    <    Option>();    new  ArrayList  <  Option>();  ArrayList  <  Option>  tokens  =  new  ArrayList  <  Option>();  [CE]  variable  tokens  is  already  defined  in  method  init()  [FE]        UnrecognizedOptionException    [CONTEXT]      private  void  init()  {  eatTheRest  =  false;  tokens.clear();      [BUGGY]          ArrayList    <    Option>    tokens    =    new    ArrayList    <    Option>();    new  ArrayList  <  Option>();  ArrayList  <  Option>  tokens  =  new  ArrayList  <  Option>();  [BUGGY]      currentOption  =  null;  }  [CLASS]  PosixParser  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  ArrayList  tokens  Options  options  Option  currentOption  boolean  eatTheRest  	projects/Cli2/src/java/org/apache/commons/cli/PosixParser.java	1.0	53	53	1	replace	                ArrayList        <        Option>        tokens        =        new        ArrayList        <        Option>();        new    ArrayList    <    Option>();    ArrayList  <  Option>  tokens  =  new  ArrayList  <  Option>();	  	non-compiled	[CE]  variable  tokens  is  already  defined  in  method  init()	45	None	add
16	[BUG]  [BUGGY]          ArrayList    <    Option>    tokens    =    new    ArrayList    <    Option>();    new  ArrayList  <  Option>();  ArrayList  <  Option>  tokens  =  new  ArrayList  <  Option>();  new  ArrayList  <  Option>();  System.arraycopy(tokens,  0,  tokens,  0,  tokens.size());  [CE]  variable  tokens  is  already  defined  in  method  init()  [FE]          UnrecognizedOptionException    [CONTEXT]      private  void  init()  {  eatTheRest  =  false;  tokens.clear();      [BUGGY]          ArrayList    <    Option>    tokens    =    new    ArrayList    <    Option>();    new  ArrayList  <  Option>();  ArrayList  <  Option>  tokens  =  new  ArrayList  <  Option>();  new  ArrayList  <  Option>();  System.arraycopy(tokens,  0,  tokens,  0,  tokens.size());  [BUGGY]      currentOption  =  null;  }  [CLASS]  PosixParser  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  ArrayList  tokens  Options  options  Option  currentOption  boolean  eatTheRest  	projects/Cli2/src/java/org/apache/commons/cli/PosixParser.java	1.0	53	53	1	replace	                ArrayList        <        Option>        tokens        =        new        ArrayList        <        Option>();        new    ArrayList    <    Option>();    ArrayList  <  Option>  tokens  =  new  ArrayList  <  Option>();  new  ArrayList  <  Option>();  System.arraycopy(tokens,  0,  tokens,  0,  tokens.size());	  	non-compiled	[CE]  variable  tokens  is  already  defined  in  method  init()	45	None	add
17	[BUG]  [BUGGY]          ArrayList    <    Option>    tokens    =    new    ArrayList    <    Option>();    new  ArrayList  <  Option>();  ArrayList  <  Option>  tokens  =  new  ArrayList  <  Option>();  new  ArrayList  <  Option>();  System.arraycopy(tokens,  0,  tokens,  0,  currentOption.size());  [CE]  variable  tokens  is  already  defined  in  method  init()  [FE]            UnrecognizedOptionException    [CONTEXT]      private  void  init()  {  eatTheRest  =  false;  tokens.clear();      [BUGGY]          ArrayList    <    Option>    tokens    =    new    ArrayList    <    Option>();    new  ArrayList  <  Option>();  ArrayList  <  Option>  tokens  =  new  ArrayList  <  Option>();  new  ArrayList  <  Option>();  System.arraycopy(tokens,  0,  tokens,  0,  currentOption.size());  [BUGGY]      currentOption  =  null;  }  [CLASS]  PosixParser  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  ArrayList  tokens  Options  options  Option  currentOption  boolean  eatTheRest  	projects/Cli2/src/java/org/apache/commons/cli/PosixParser.java	1.0	53	53	1	replace	                ArrayList        <        Option>        tokens        =        new        ArrayList        <        Option>();        new    ArrayList    <    Option>();    ArrayList  <  Option>  tokens  =  new  ArrayList  <  Option>();  new  ArrayList  <  Option>();  System.arraycopy(tokens,  0,  tokens,  0,  currentOption.size());	  	non-compiled	[CE]  variable  tokens  is  already  defined  in  method  init()	45	None	add
18	[BUG]  [BUGGY]  [FE]  UnrecognizedOptionException  [FE]    UnrecognizedOptionException    [CONTEXT]      private  void  init()  {  eatTheRest  =  false;  tokens.clear();      [BUGGY]  currentOption  =  Option.OK_STANDARD  +  1;  currentOption  =  Option.OK_STANDARD  +  1;  [BUGGY]      }  [CLASS]  PosixParser  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  ArrayList  tokens  Options  options  Option  currentOption  boolean  eatTheRest  	projects/Cli2/src/java/org/apache/commons/cli/PosixParser.java	1.0	53	53	1	add	currentOption    =    Option.OK_STANDARD    +    1;    currentOption  =  Option.OK_STANDARD  +  1;	  	compilable	  [FE]  UnrecognizedOptionException  	16	1	add
19	[BUG]  [BUGGY]  currentOption  =  Option.OK_STANDARD  +  1;  currentOption  =  Option.OK_STANDARD  +  1;  [FE]  UnrecognizedOptionException  [FE]    UnrecognizedOptionException    [CONTEXT]      private  void  init()  {  eatTheRest  =  false;  tokens.clear();      [BUGGY]  currentOption  =  Option.OK_STANDARD  +  1;  currentOption  =  Option.OK_STANDARD  +  1;  [BUGGY]      }  [CLASS]  PosixParser  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  ArrayList  tokens  Options  options  Option  currentOption  boolean  eatTheRest  	projects/Cli2/src/java/org/apache/commons/cli/PosixParser.java	1.0	53	53	1	replace	currentOption    =    Option.OK_STANDARD    +    1;    currentOption  =  Option.OK_STANDARD  +  1;	  	compilable	  [FE]  UnrecognizedOptionException  	16	1	add
20	[BUG]  [BUGGY]  [FE]  UnrecognizedOptionException  [FE]      UnrecognizedOptionException    [CONTEXT]      private  void  init()  {  eatTheRest  =  false;  tokens.clear();      [BUGGY]  currentOption  =  Option.OK_STANDARD  +  1;  tokens.clear();  currentOption  =  Option.OK_STANDARD  +  1;  [BUGGY]      }  [CLASS]  PosixParser  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  ArrayList  tokens  Options  options  Option  currentOption  boolean  eatTheRest  	projects/Cli2/src/java/org/apache/commons/cli/PosixParser.java	1.0	53	53	1	add	currentOption    =    Option.OK_STANDARD    +    1;    tokens.clear();  currentOption  =  Option.OK_STANDARD  +  1;	  	compilable	  [FE]  UnrecognizedOptionException  	16	1	add
21	[BUG]  [BUGGY]  currentOption  =  Option.OK_STANDARD  +  1;  tokens.clear();  currentOption  =  Option.OK_STANDARD  +  1;  [FE]  UnrecognizedOptionException  [FE]      UnrecognizedOptionException    [CONTEXT]      private  void  init()  {  eatTheRest  =  false;  tokens.clear();      [BUGGY]  currentOption  =  Option.OK_STANDARD  +  1;  tokens.clear();  currentOption  =  Option.OK_STANDARD  +  1;  [BUGGY]      }  [CLASS]  PosixParser  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  ArrayList  tokens  Options  options  Option  currentOption  boolean  eatTheRest  	projects/Cli2/src/java/org/apache/commons/cli/PosixParser.java	1.0	53	53	1	replace	currentOption    =    Option.OK_STANDARD    +    1;    tokens.clear();  currentOption  =  Option.OK_STANDARD  +  1;	  	compilable	  [FE]  UnrecognizedOptionException  	16	1	add
22	[BUG]  [BUGGY]  [FE]  UnrecognizedOptionException  [FE]        UnrecognizedOptionException    [CONTEXT]      private  void  init()  {  eatTheRest  =  false;  tokens.clear();      [BUGGY]  currentOption  =  Option.OK_STANDARD  +  1;  if(currentOption!=  null)  {  currentOption  =  Option.OK_STANDARD  +  1;  }  [BUGGY]      }  [CLASS]  PosixParser  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  ArrayList  tokens  Options  options  Option  currentOption  boolean  eatTheRest  	projects/Cli2/src/java/org/apache/commons/cli/PosixParser.java	1.0	53	53	1	add	currentOption    =    Option.OK_STANDARD    +    1;    if(currentOption!=  null)  {  currentOption  =  Option.OK_STANDARD  +  1;  }	  	compilable	  [FE]  UnrecognizedOptionException  	16	1	add
23	[BUG]  [BUGGY]  currentOption  =  Option.OK_STANDARD  +  1;  if(currentOption!=  null)  {  currentOption  =  Option.OK_STANDARD  +  1;  }  [FE]  UnrecognizedOptionException  [FE]        UnrecognizedOptionException    [CONTEXT]      private  void  init()  {  eatTheRest  =  false;  tokens.clear();      [BUGGY]  currentOption  =  Option.OK_STANDARD  +  1;  if(currentOption!=  null)  {  currentOption  =  Option.OK_STANDARD  +  1;  }  [BUGGY]      }  [CLASS]  PosixParser  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  ArrayList  tokens  Options  options  Option  currentOption  boolean  eatTheRest  	projects/Cli2/src/java/org/apache/commons/cli/PosixParser.java	1.0	53	53	1	replace	currentOption    =    Option.OK_STANDARD    +    1;    if(currentOption!=  null)  {  currentOption  =  Option.OK_STANDARD  +  1;  }	  	compilable	  [FE]  UnrecognizedOptionException  	16	1	add
24	[BUG]  [BUGGY]  [FE]  UnrecognizedOptionException  [FE]          UnrecognizedOptionException    [CONTEXT]      private  void  init()  {  eatTheRest  =  false;  tokens.clear();      [BUGGY]  currentOption  =  Option.OK_STANDARD  +  1;  ArrayList  <  Option>  tokens  =  new  ArrayList  <  Option>(tokens.size());  currentOption  =  Option.OK_STANDARD  +  1;  [BUGGY]      }  [CLASS]  PosixParser  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  ArrayList  tokens  Options  options  Option  currentOption  boolean  eatTheRest  	projects/Cli2/src/java/org/apache/commons/cli/PosixParser.java	1.0	53	53	1	add	currentOption    =    Option.OK_STANDARD    +    1;    ArrayList  <  Option>  tokens  =  new  ArrayList  <  Option>(tokens.size());  currentOption  =  Option.OK_STANDARD  +  1;	  	compilable	  [FE]  UnrecognizedOptionException  	16	1	add
25	[BUG]  [BUGGY]  currentOption  =  Option.OK_STANDARD  +  1;  ArrayList  <  Option>  tokens  =  new  ArrayList  <  Option>(tokens.size());  currentOption  =  Option.OK_STANDARD  +  1;  [FE]  UnrecognizedOptionException  [FE]          UnrecognizedOptionException    [CONTEXT]      private  void  init()  {  eatTheRest  =  false;  tokens.clear();      [BUGGY]  currentOption  =  Option.OK_STANDARD  +  1;  ArrayList  <  Option>  tokens  =  new  ArrayList  <  Option>(tokens.size());  currentOption  =  Option.OK_STANDARD  +  1;  [BUGGY]      }  [CLASS]  PosixParser  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  ArrayList  tokens  Options  options  Option  currentOption  boolean  eatTheRest  	projects/Cli2/src/java/org/apache/commons/cli/PosixParser.java	1.0	53	53	1	replace	currentOption    =    Option.OK_STANDARD    +    1;    ArrayList  <  Option>  tokens  =  new  ArrayList  <  Option>(tokens.size());  currentOption  =  Option.OK_STANDARD  +  1;	  	compilable	  [FE]  UnrecognizedOptionException  	16	1	add
26	[BUG]  [BUGGY]  [FE]  UnrecognizedOptionException  [FE]            UnrecognizedOptionException    [CONTEXT]      private  void  init()  {  eatTheRest  =  false;  tokens.clear();      [BUGGY]  currentOption  =  Option.OK_STANDARD  +  1;  ArrayList  <  Option>  tokens  =  new  ArrayList  <  Option>(tokens.size());  [BUGGY]      }  [CLASS]  PosixParser  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  ArrayList  tokens  Options  options  Option  currentOption  boolean  eatTheRest  	projects/Cli2/src/java/org/apache/commons/cli/PosixParser.java	1.0	53	53	1	add	currentOption    =    Option.OK_STANDARD    +    1;    ArrayList  <  Option>  tokens  =  new  ArrayList  <  Option>(tokens.size());	  	compilable	  [FE]  UnrecognizedOptionException  	16	1	add
27	[BUG]  [BUGGY]  currentOption  =  Option.OK_STANDARD  +  1;  ArrayList  <  Option>  tokens  =  new  ArrayList  <  Option>(tokens.size());  [FE]  UnrecognizedOptionException  [FE]            UnrecognizedOptionException    [CONTEXT]      private  void  init()  {  eatTheRest  =  false;  tokens.clear();      [BUGGY]  currentOption  =  Option.OK_STANDARD  +  1;  ArrayList  <  Option>  tokens  =  new  ArrayList  <  Option>(tokens.size());  [BUGGY]      }  [CLASS]  PosixParser  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  ArrayList  tokens  Options  options  Option  currentOption  boolean  eatTheRest  	projects/Cli2/src/java/org/apache/commons/cli/PosixParser.java	1.0	53	53	1	replace	currentOption    =    Option.OK_STANDARD    +    1;    ArrayList  <  Option>  tokens  =  new  ArrayList  <  Option>(tokens.size());	  	compilable	  [FE]  UnrecognizedOptionException  	16	1	add
28	[BUG]  [BUGGY]  tokens.addAll( "-- "  +  String.valueOf(currentOption));  [CE]  no  suitable  method  found  for  addAll(String)  [FE]        ComparisonFailure      [CONTEXT]      private  void  init()  {  eatTheRest  =  false;  tokens.clear();      [BUGGY]  tokens.addAll( "-- "  +  String.valueOf(currentOption));  [BUGGY]      currentOption  =  null;  }  [CLASS]  PosixParser  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  ArrayList  tokens  Options  options  Option  currentOption  boolean  eatTheRest  	projects/Cli2/src/java/org/apache/commons/cli/PosixParser.java	1.0	53	53	1	replace	tokens.addAll( "-- "  +  String.valueOf(currentOption));	  tokens.addAll(   "--   ");    	non-compiled	[CE]  no  suitable  method  found  for  addAll(String)	164	None	replace
29	[BUG]  [BUGGY]  tokens.addAll( "-- ", "-- ");  [CE]  no  suitable  method  found  for  addAll(String,String)  [FE]          ComparisonFailure      [CONTEXT]      private  void  init()  {  eatTheRest  =  false;  tokens.clear();      [BUGGY]  tokens.addAll( "-- ", "-- ");  [BUGGY]      currentOption  =  null;  }  [CLASS]  PosixParser  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  ArrayList  tokens  Options  options  Option  currentOption  boolean  eatTheRest  	projects/Cli2/src/java/org/apache/commons/cli/PosixParser.java	1.0	53	53	1	replace	tokens.addAll( "-- ", "-- ");	  tokens.addAll(   "--   ");    	non-compiled	[CE]  no  suitable  method  found  for  addAll(String,String)	164	None	replace
30	[BUG]  [BUGGY]  tokens.addAll( "-- "  +  currentOption);  [CE]  no  suitable  method  found  for  addAll(String)  [FE]            ComparisonFailure      [CONTEXT]      private  void  init()  {  eatTheRest  =  false;  tokens.clear();      [BUGGY]  tokens.addAll( "-- "  +  currentOption);  [BUGGY]      currentOption  =  null;  }  [CLASS]  PosixParser  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  ArrayList  tokens  Options  options  Option  currentOption  boolean  eatTheRest  	projects/Cli2/src/java/org/apache/commons/cli/PosixParser.java	1.0	53	53	1	replace	tokens.addAll( "-- "  +  currentOption);	  tokens.addAll(   "--   ");    	non-compiled	[CE]  no  suitable  method  found  for  addAll(String)	164	None	replace
31	[BUG]  [BUGGY]  [FE]  UnrecognizedOptionException  [FE]    UnrecognizedOptionException    [CONTEXT]      private  void  init()  {  eatTheRest  =  false;  tokens.clear();      [BUGGY]  if(currentOption  ==  null)  {  eatTheRest  =  false;  tokens.clear();  }  if(currentOption  ==  null)  {  eatTheRest  =  false;  tokens.clear();  }  [BUGGY]      currentOption  =  null;  }  [CLASS]  PosixParser  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  ArrayList  tokens  Options  options  Option  currentOption  boolean  eatTheRest  	projects/Cli2/src/java/org/apache/commons/cli/PosixParser.java	1.0	53	53	1	add	if(currentOption    ==    null)    {    eatTheRest    =    false;    tokens.clear();    }    if(currentOption  ==  null)  {  eatTheRest  =  false;  tokens.clear();  }	  	compilable	  [FE]  UnrecognizedOptionException  	39	1	add
32	[BUG]  [BUGGY]  if(currentOption  ==  null)  {  eatTheRest  =  false;  tokens.clear();  }  if(currentOption  ==  null)  {  eatTheRest  =  false;  tokens.clear();  }  [FE]  UnrecognizedOptionException  [FE]    UnrecognizedOptionException    [CONTEXT]      private  void  init()  {  eatTheRest  =  false;  tokens.clear();      [BUGGY]  if(currentOption  ==  null)  {  eatTheRest  =  false;  tokens.clear();  }  if(currentOption  ==  null)  {  eatTheRest  =  false;  tokens.clear();  }  [BUGGY]      currentOption  =  null;  }  [CLASS]  PosixParser  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  ArrayList  tokens  Options  options  Option  currentOption  boolean  eatTheRest  	projects/Cli2/src/java/org/apache/commons/cli/PosixParser.java	1.0	53	53	1	replace	if(currentOption    ==    null)    {    eatTheRest    =    false;    tokens.clear();    }    if(currentOption  ==  null)  {  eatTheRest  =  false;  tokens.clear();  }	  	compilable	  [FE]  UnrecognizedOptionException  	39	1	add
33	[BUG]  [BUGGY]  [FE]  UnrecognizedOptionException  [FE]      UnrecognizedOptionException    [CONTEXT]      private  void  init()  {  eatTheRest  =  false;  tokens.clear();      [BUGGY]  if(currentOption  ==  null)  {  eatTheRest  =  false;  tokens.clear();  }  if(currentOption!=  null)  {  eatTheRest  =  false;  tokens.clear();  }  [BUGGY]      currentOption  =  null;  }  [CLASS]  PosixParser  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  ArrayList  tokens  Options  options  Option  currentOption  boolean  eatTheRest  	projects/Cli2/src/java/org/apache/commons/cli/PosixParser.java	1.0	53	53	1	add	if(currentOption    ==    null)    {    eatTheRest    =    false;    tokens.clear();    }    if(currentOption!=  null)  {  eatTheRest  =  false;  tokens.clear();  }	  	compilable	  [FE]  UnrecognizedOptionException  	39	1	add
34	[BUG]  [BUGGY]  if(currentOption  ==  null)  {  eatTheRest  =  false;  tokens.clear();  }  if(currentOption!=  null)  {  eatTheRest  =  false;  tokens.clear();  }  [FE]  UnrecognizedOptionException  [FE]      UnrecognizedOptionException    [CONTEXT]      private  void  init()  {  eatTheRest  =  false;  tokens.clear();      [BUGGY]  if(currentOption  ==  null)  {  eatTheRest  =  false;  tokens.clear();  }  if(currentOption!=  null)  {  eatTheRest  =  false;  tokens.clear();  }  [BUGGY]      currentOption  =  null;  }  [CLASS]  PosixParser  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  ArrayList  tokens  Options  options  Option  currentOption  boolean  eatTheRest  	projects/Cli2/src/java/org/apache/commons/cli/PosixParser.java	1.0	53	53	1	replace	if(currentOption    ==    null)    {    eatTheRest    =    false;    tokens.clear();    }    if(currentOption!=  null)  {  eatTheRest  =  false;  tokens.clear();  }	  	compilable	  [FE]  UnrecognizedOptionException  	39	1	add
35	[BUG]  [BUGGY]  if(currentOption  ==  null)  {  eatTheRest  =  false;  tokens.clear();  }  if(currentOption  ==  null)  {  eattheRest  =  false;  tokens.clear();  }  [CE]  cannot  find  symbol  eattheRest  [FE]        UnrecognizedOptionException    [CONTEXT]      private  void  init()  {  eatTheRest  =  false;  tokens.clear();      [BUGGY]  if(currentOption  ==  null)  {  eatTheRest  =  false;  tokens.clear();  }  if(currentOption  ==  null)  {  eattheRest  =  false;  tokens.clear();  }  [BUGGY]      currentOption  =  null;  }  [CLASS]  PosixParser  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  ArrayList  tokens  Options  options  Option  currentOption  boolean  eatTheRest  	projects/Cli2/src/java/org/apache/commons/cli/PosixParser.java	1.0	53	53	1	replace	if(currentOption    ==    null)    {    eatTheRest    =    false;    tokens.clear();    }    if(currentOption  ==  null)  {  eattheRest  =  false;  tokens.clear();  }	  	non-compiled	[CE]  cannot  find  symbol  eattheRest	39	None	add
36	[BUG]  [BUGGY]  [FE]  UnrecognizedOptionException  [FE]          UnrecognizedOptionException    [CONTEXT]      private  void  init()  {  eatTheRest  =  false;  tokens.clear();      [BUGGY]  if(currentOption  ==  null)  {  eatTheRest  =  false;  tokens.clear();  }  if(currentOption  ==  null)  {  currentOption  =  null;  tokens.clear();  }  [BUGGY]      currentOption  =  null;  }  [CLASS]  PosixParser  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  ArrayList  tokens  Options  options  Option  currentOption  boolean  eatTheRest  	projects/Cli2/src/java/org/apache/commons/cli/PosixParser.java	1.0	53	53	1	add	if(currentOption    ==    null)    {    eatTheRest    =    false;    tokens.clear();    }    if(currentOption  ==  null)  {  currentOption  =  null;  tokens.clear();  }	  	compilable	  [FE]  UnrecognizedOptionException  	39	1	add
37	[BUG]  [BUGGY]  if(currentOption  ==  null)  {  eatTheRest  =  false;  tokens.clear();  }  if(currentOption  ==  null)  {  currentOption  =  null;  tokens.clear();  }  [FE]  UnrecognizedOptionException  [FE]          UnrecognizedOptionException    [CONTEXT]      private  void  init()  {  eatTheRest  =  false;  tokens.clear();      [BUGGY]  if(currentOption  ==  null)  {  eatTheRest  =  false;  tokens.clear();  }  if(currentOption  ==  null)  {  currentOption  =  null;  tokens.clear();  }  [BUGGY]      currentOption  =  null;  }  [CLASS]  PosixParser  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  ArrayList  tokens  Options  options  Option  currentOption  boolean  eatTheRest  	projects/Cli2/src/java/org/apache/commons/cli/PosixParser.java	1.0	53	53	1	replace	if(currentOption    ==    null)    {    eatTheRest    =    false;    tokens.clear();    }    if(currentOption  ==  null)  {  currentOption  =  null;  tokens.clear();  }	  	compilable	  [FE]  UnrecognizedOptionException  	39	1	add
38	[BUG]  [BUGGY]  options.getOption(this,  tokens,  eatTheRest);  [CE]  method  getOption  in  class  Options  cannot  be  applied  to  given  types;  [FE]                      UnrecognizedOptionException      [CONTEXT]      private  void  init()  {  eatTheRest  =  false;  tokens.clear();      [BUGGY]  options.getOption(this,  tokens,  eatTheRest);  [BUGGY]      currentOption  =  null;  }  [CLASS]  PosixParser  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  ArrayList  tokens  Options  options  Option  currentOption  boolean  eatTheRest  	projects/Cli2/src/java/org/apache/commons/cli/PosixParser.java	1.0	53	53	1	replace	options.getOption(this,  tokens,  eatTheRest);	  options.getOption(this,    tokens);    	non-compiled	[CE]  method  getOption  in  class  Options  cannot  be  applied  to  given  types;	70	None	replace
39	[BUG]  [BUGGY]  options.getOption(this,  tokens,  currentOption);  [CE]  method  getOption  in  class  Options  cannot  be  applied  to  given  types;  [FE]                        UnrecognizedOptionException      [CONTEXT]      private  void  init()  {  eatTheRest  =  false;  tokens.clear();      [BUGGY]  options.getOption(this,  tokens,  currentOption);  [BUGGY]      currentOption  =  null;  }  [CLASS]  PosixParser  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  ArrayList  tokens  Options  options  Option  currentOption  boolean  eatTheRest  	projects/Cli2/src/java/org/apache/commons/cli/PosixParser.java	1.0	53	53	1	replace	options.getOption(this,  tokens,  currentOption);	  options.getOption(this,    tokens);    	non-compiled	[CE]  method  getOption  in  class  Options  cannot  be  applied  to  given  types;	70	None	replace
40	[BUG]  [BUGGY]  options.getOption(this,  currentOption,  tokens);  [CE]  method  getOption  in  class  Options  cannot  be  applied  to  given  types;  [FE]                          UnrecognizedOptionException      [CONTEXT]      private  void  init()  {  eatTheRest  =  false;  tokens.clear();      [BUGGY]  options.getOption(this,  currentOption,  tokens);  [BUGGY]      currentOption  =  null;  }  [CLASS]  PosixParser  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  ArrayList  tokens  Options  options  Option  currentOption  boolean  eatTheRest  	projects/Cli2/src/java/org/apache/commons/cli/PosixParser.java	1.0	53	53	1	replace	options.getOption(this,  currentOption,  tokens);	  options.getOption(this,    tokens);    	non-compiled	[CE]  method  getOption  in  class  Options  cannot  be  applied  to  given  types;	70	None	replace
41	[BUG]  [BUGGY]  options.getOption(this,  tokens,  null);  [CE]  method  getOption  in  class  Options  cannot  be  applied  to  given  types;  [FE]                            UnrecognizedOptionException      [CONTEXT]      private  void  init()  {  eatTheRest  =  false;  tokens.clear();      [BUGGY]  options.getOption(this,  tokens,  null);  [BUGGY]      currentOption  =  null;  }  [CLASS]  PosixParser  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  ArrayList  tokens  Options  options  Option  currentOption  boolean  eatTheRest  	projects/Cli2/src/java/org/apache/commons/cli/PosixParser.java	1.0	53	53	1	replace	options.getOption(this,  tokens,  null);	  options.getOption(this,    tokens);    	non-compiled	[CE]  method  getOption  in  class  Options  cannot  be  applied  to  given  types;	70	None	replace
42	[BUG]  [BUGGY]  [FE]  UnrecognizedOptionException  [FE]    UnrecognizedOptionException    [CONTEXT]      private  void  init()  {  eatTheRest  =  false;  tokens.clear();      [BUGGY]          tokens.add(     "--     ");    tokens.add(   ",--     ");  tokens.add( "--   ");  tokens.add( ",--   ");  [BUGGY]      currentOption  =  null;  }  [CLASS]  PosixParser  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  ArrayList  tokens  Options  options  Option  currentOption  boolean  eatTheRest  	projects/Cli2/src/java/org/apache/commons/cli/PosixParser.java	1.0	53	53	1	add	                tokens.add(       "--       ");        tokens.add(   ",--       ");    tokens.add( "--   ");  tokens.add( ",--   ");	  	compilable	  [FE]  UnrecognizedOptionException  	143	1	add
43	[BUG]  [BUGGY]          tokens.add(     "--     ");    tokens.add(   ",--     ");  tokens.add( "--   ");  tokens.add( ",--   ");  [FE]  UnrecognizedOptionException  [FE]    UnrecognizedOptionException    [CONTEXT]      private  void  init()  {  eatTheRest  =  false;  tokens.clear();      [BUGGY]          tokens.add(     "--     ");    tokens.add(   ",--     ");  tokens.add( "--   ");  tokens.add( ",--   ");  [BUGGY]      currentOption  =  null;  }  [CLASS]  PosixParser  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  ArrayList  tokens  Options  options  Option  currentOption  boolean  eatTheRest  	projects/Cli2/src/java/org/apache/commons/cli/PosixParser.java	1.0	53	53	1	replace	                tokens.add(       "--       ");        tokens.add(   ",--       ");    tokens.add( "--   ");  tokens.add( ",--   ");	  	compilable	  [FE]  UnrecognizedOptionException  	143	1	add
44	[BUG]  [BUGGY]  [FE]  UnrecognizedOptionException  [FE]      UnrecognizedOptionException    [CONTEXT]      private  void  init()  {  eatTheRest  =  false;  tokens.clear();      [BUGGY]          tokens.add(     "--     ");    tokens.add(   ",--     ");  tokens.add( "--   ");  [BUGGY]      currentOption  =  null;  }  [CLASS]  PosixParser  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  ArrayList  tokens  Options  options  Option  currentOption  boolean  eatTheRest  	projects/Cli2/src/java/org/apache/commons/cli/PosixParser.java	1.0	53	53	1	add	                tokens.add(       "--       ");        tokens.add(   ",--       ");    tokens.add( "--   ");	  	compilable	  [FE]  UnrecognizedOptionException  	143	1	add
45	[BUG]  [BUGGY]          tokens.add(     "--     ");    tokens.add(   ",--     ");  tokens.add( "--   ");  [FE]  UnrecognizedOptionException  [FE]      UnrecognizedOptionException    [CONTEXT]      private  void  init()  {  eatTheRest  =  false;  tokens.clear();      [BUGGY]          tokens.add(     "--     ");    tokens.add(   ",--     ");  tokens.add( "--   ");  [BUGGY]      currentOption  =  null;  }  [CLASS]  PosixParser  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  ArrayList  tokens  Options  options  Option  currentOption  boolean  eatTheRest  	projects/Cli2/src/java/org/apache/commons/cli/PosixParser.java	1.0	53	53	1	replace	                tokens.add(       "--       ");        tokens.add(   ",--       ");    tokens.add( "--   ");	  	compilable	  [FE]  UnrecognizedOptionException  	143	1	add
46	[BUG]  [BUGGY]  [FE]  UnrecognizedOptionException  [FE]        UnrecognizedOptionException    [CONTEXT]      private  void  init()  {  eatTheRest  =  false;  tokens.clear();      [BUGGY]          tokens.add(     "--     ");    tokens.add(   ",--     ");  tokens.remove( "--   ");  tokens.add( ",-- ");  [BUGGY]      currentOption  =  null;  }  [CLASS]  PosixParser  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  ArrayList  tokens  Options  options  Option  currentOption  boolean  eatTheRest  	projects/Cli2/src/java/org/apache/commons/cli/PosixParser.java	1.0	53	53	1	add	                tokens.add(       "--       ");        tokens.add(   ",--       ");    tokens.remove( "--   ");  tokens.add( ",-- ");	  	compilable	  [FE]  UnrecognizedOptionException  	143	1	add
47	[BUG]  [BUGGY]          tokens.add(     "--     ");    tokens.add(   ",--     ");  tokens.remove( "--   ");  tokens.add( ",-- ");  [FE]  UnrecognizedOptionException  [FE]        UnrecognizedOptionException    [CONTEXT]      private  void  init()  {  eatTheRest  =  false;  tokens.clear();      [BUGGY]          tokens.add(     "--     ");    tokens.add(   ",--     ");  tokens.remove( "--   ");  tokens.add( ",-- ");  [BUGGY]      currentOption  =  null;  }  [CLASS]  PosixParser  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  ArrayList  tokens  Options  options  Option  currentOption  boolean  eatTheRest  	projects/Cli2/src/java/org/apache/commons/cli/PosixParser.java	1.0	53	53	1	replace	                tokens.add(       "--       ");        tokens.add(   ",--       ");    tokens.remove( "--   ");  tokens.add( ",-- ");	  	compilable	  [FE]  UnrecognizedOptionException  	143	1	add
48	[BUG]  [BUGGY]  [FE]  UnrecognizedOptionException  [FE]    UnrecognizedOptionException    [CONTEXT]      private  void  init()  {  eatTheRest  =  false;  tokens.clear();      [BUGGY]  tokens.add(   "-   ");  tokens.add( "-   ");  [BUGGY]      currentOption  =  null;  }  [CLASS]  PosixParser  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  ArrayList  tokens  Options  options  Option  currentOption  boolean  eatTheRest  	projects/Cli2/src/java/org/apache/commons/cli/PosixParser.java	1.0	53	53	1	add	tokens.add(   "-   ");    tokens.add( "-   ");	  	compilable	  [FE]  UnrecognizedOptionException  	99	1	add
49	[BUG]  [BUGGY]  tokens.add(   "-   ");  tokens.add( "-   ");  [FE]  UnrecognizedOptionException  [FE]    UnrecognizedOptionException    [CONTEXT]      private  void  init()  {  eatTheRest  =  false;  tokens.clear();      [BUGGY]  tokens.add(   "-   ");  tokens.add( "-   ");  [BUGGY]      currentOption  =  null;  }  [CLASS]  PosixParser  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  ArrayList  tokens  Options  options  Option  currentOption  boolean  eatTheRest  	projects/Cli2/src/java/org/apache/commons/cli/PosixParser.java	1.0	53	53	1	replace	tokens.add(   "-   ");    tokens.add( "-   ");	  	compilable	  [FE]  UnrecognizedOptionException  	99	1	add
50	[BUG]  [BUGGY]  [FE]  UnrecognizedOptionException  [FE]      UnrecognizedOptionException    [CONTEXT]      private  void  init()  {  eatTheRest  =  false;  tokens.clear();      [BUGGY]  tokens.add(   "-   ");  tokens.add( "-   ");  currentOption  =  null;  [BUGGY]      currentOption  =  null;  }  [CLASS]  PosixParser  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  ArrayList  tokens  Options  options  Option  currentOption  boolean  eatTheRest  	projects/Cli2/src/java/org/apache/commons/cli/PosixParser.java	1.0	53	53	1	add	tokens.add(   "-   ");    tokens.add( "-   ");  currentOption  =  null;	  	compilable	  [FE]  UnrecognizedOptionException  	99	1	add
51	[BUG]  [BUGGY]  tokens.add(   "-   ");  tokens.add( "-   ");  currentOption  =  null;  [FE]  UnrecognizedOptionException  [FE]      UnrecognizedOptionException    [CONTEXT]      private  void  init()  {  eatTheRest  =  false;  tokens.clear();      [BUGGY]  tokens.add(   "-   ");  tokens.add( "-   ");  currentOption  =  null;  [BUGGY]      currentOption  =  null;  }  [CLASS]  PosixParser  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  ArrayList  tokens  Options  options  Option  currentOption  boolean  eatTheRest  	projects/Cli2/src/java/org/apache/commons/cli/PosixParser.java	1.0	53	53	1	replace	tokens.add(   "-   ");    tokens.add( "-   ");  currentOption  =  null;	  	compilable	  [FE]  UnrecognizedOptionException  	99	1	add
52	[BUG]  [BUGGY]  [FE]  UnrecognizedOptionException  [FE]        UnrecognizedOptionException    [CONTEXT]      private  void  init()  {  eatTheRest  =  false;  tokens.clear();      [BUGGY]  tokens.add(   "-   ");  tokens.add( "-   ");  eatTheRest  =  true;  [BUGGY]      currentOption  =  null;  }  [CLASS]  PosixParser  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  ArrayList  tokens  Options  options  Option  currentOption  boolean  eatTheRest  	projects/Cli2/src/java/org/apache/commons/cli/PosixParser.java	1.0	53	53	1	add	tokens.add(   "-   ");    tokens.add( "-   ");  eatTheRest  =  true;	  	compilable	  [FE]  UnrecognizedOptionException  	99	1	add
53	[BUG]  [BUGGY]  tokens.add(   "-   ");  tokens.add( "-   ");  eatTheRest  =  true;  [FE]  UnrecognizedOptionException  [FE]        UnrecognizedOptionException    [CONTEXT]      private  void  init()  {  eatTheRest  =  false;  tokens.clear();      [BUGGY]  tokens.add(   "-   ");  tokens.add( "-   ");  eatTheRest  =  true;  [BUGGY]      currentOption  =  null;  }  [CLASS]  PosixParser  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  ArrayList  tokens  Options  options  Option  currentOption  boolean  eatTheRest  	projects/Cli2/src/java/org/apache/commons/cli/PosixParser.java	1.0	53	53	1	replace	tokens.add(   "-   ");    tokens.add( "-   ");  eatTheRest  =  true;	  	compilable	  [FE]  UnrecognizedOptionException  	99	1	add
54	[BUG]  [BUGGY]  [FE]  UnrecognizedOptionException  [FE]          UnrecognizedOptionException    [CONTEXT]      private  void  init()  {  eatTheRest  =  false;  tokens.clear();      [BUGGY]  tokens.add(   "-   ");  tokens.add( "-   ");  this.currentOption  =  null;  [BUGGY]      currentOption  =  null;  }  [CLASS]  PosixParser  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  ArrayList  tokens  Options  options  Option  currentOption  boolean  eatTheRest  	projects/Cli2/src/java/org/apache/commons/cli/PosixParser.java	1.0	53	53	1	add	tokens.add(   "-   ");    tokens.add( "-   ");  this.currentOption  =  null;	  	compilable	  [FE]  UnrecognizedOptionException  	99	1	add
55	[BUG]  [BUGGY]  tokens.add(   "-   ");  tokens.add( "-   ");  this.currentOption  =  null;  [FE]  UnrecognizedOptionException  [FE]          UnrecognizedOptionException    [CONTEXT]      private  void  init()  {  eatTheRest  =  false;  tokens.clear();      [BUGGY]  tokens.add(   "-   ");  tokens.add( "-   ");  this.currentOption  =  null;  [BUGGY]      currentOption  =  null;  }  [CLASS]  PosixParser  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  ArrayList  tokens  Options  options  Option  currentOption  boolean  eatTheRest  	projects/Cli2/src/java/org/apache/commons/cli/PosixParser.java	1.0	53	53	1	replace	tokens.add(   "-   ");    tokens.add( "-   ");  this.currentOption  =  null;	  	compilable	  [FE]  UnrecognizedOptionException  	99	1	add
56	[BUG]  [BUGGY]  [FE]  UnrecognizedOptionException  [FE]    UnrecognizedOptionException    [CONTEXT]      private  void  init()  {  eatTheRest  =  false;  tokens.clear();      [BUGGY]          tokens.clear();    currentOption    =    null;    eatTheRest  =  false;  tokens.clear();  currentOption  =  null;  tokens.clear();  currentOption  =  null;  [BUGGY]      currentOption  =  null;  }  [CLASS]  PosixParser  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  ArrayList  tokens  Options  options  Option  currentOption  boolean  eatTheRest  	projects/Cli2/src/java/org/apache/commons/cli/PosixParser.java	1.0	53	53	1	add	                tokens.clear();        currentOption        =        null;        eatTheRest    =    false;    tokens.clear();    currentOption    =    null;    tokens.clear();  currentOption  =  null;	  	compilable	  [FE]  UnrecognizedOptionException  	157	1	add
57	[BUG]  [BUGGY]          tokens.clear();    currentOption    =    null;    eatTheRest  =  false;  tokens.clear();  currentOption  =  null;  tokens.clear();  currentOption  =  null;  [FE]  UnrecognizedOptionException  [FE]    UnrecognizedOptionException    [CONTEXT]      private  void  init()  {  eatTheRest  =  false;  tokens.clear();      [BUGGY]          tokens.clear();    currentOption    =    null;    eatTheRest  =  false;  tokens.clear();  currentOption  =  null;  tokens.clear();  currentOption  =  null;  [BUGGY]      currentOption  =  null;  }  [CLASS]  PosixParser  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  ArrayList  tokens  Options  options  Option  currentOption  boolean  eatTheRest  	projects/Cli2/src/java/org/apache/commons/cli/PosixParser.java	1.0	53	53	1	replace	                tokens.clear();        currentOption        =        null;        eatTheRest    =    false;    tokens.clear();    currentOption    =    null;    tokens.clear();  currentOption  =  null;	  	compilable	  [FE]  UnrecognizedOptionException  	157	1	add
58	[BUG]  [BUGGY]  [FE]  UnrecognizedOptionException  [FE]      UnrecognizedOptionException    [CONTEXT]      private  void  init()  {  eatTheRest  =  false;  tokens.clear();      [BUGGY]          tokens.clear();    currentOption    =    null;    eatTheRest  =  false;  tokens.clear();  currentOption  =  null;  tokens.clear();  [BUGGY]      currentOption  =  null;  }  [CLASS]  PosixParser  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  ArrayList  tokens  Options  options  Option  currentOption  boolean  eatTheRest  	projects/Cli2/src/java/org/apache/commons/cli/PosixParser.java	1.0	53	53	1	add	                tokens.clear();        currentOption        =        null;        eatTheRest    =    false;    tokens.clear();    currentOption    =    null;    tokens.clear();	  	compilable	  [FE]  UnrecognizedOptionException  	157	1	add
59	[BUG]  [BUGGY]          tokens.clear();    currentOption    =    null;    eatTheRest  =  false;  tokens.clear();  currentOption  =  null;  tokens.clear();  [FE]  UnrecognizedOptionException  [FE]      UnrecognizedOptionException    [CONTEXT]      private  void  init()  {  eatTheRest  =  false;  tokens.clear();      [BUGGY]          tokens.clear();    currentOption    =    null;    eatTheRest  =  false;  tokens.clear();  currentOption  =  null;  tokens.clear();  [BUGGY]      currentOption  =  null;  }  [CLASS]  PosixParser  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  ArrayList  tokens  Options  options  Option  currentOption  boolean  eatTheRest  	projects/Cli2/src/java/org/apache/commons/cli/PosixParser.java	1.0	53	53	1	replace	                tokens.clear();        currentOption        =        null;        eatTheRest    =    false;    tokens.clear();    currentOption    =    null;    tokens.clear();	  	compilable	  [FE]  UnrecognizedOptionException  	157	1	add
60	[BUG]  [BUGGY]  [FE]  UnrecognizedOptionException  [FE]        UnrecognizedOptionException    [CONTEXT]      private  void  init()  {  eatTheRest  =  false;  tokens.clear();      [BUGGY]          tokens.clear();    currentOption    =    null;    eatTheRest  =  false;  tokens.clear();  currentOption  =  null;  tokens.clear();  currentOption  =  null;  eatTheRest  =  false;  [BUGGY]      currentOption  =  null;  }  [CLASS]  PosixParser  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  ArrayList  tokens  Options  options  Option  currentOption  boolean  eatTheRest  	projects/Cli2/src/java/org/apache/commons/cli/PosixParser.java	1.0	53	53	1	add	                tokens.clear();        currentOption        =        null;        eatTheRest    =    false;    tokens.clear();    currentOption    =    null;    tokens.clear();  currentOption  =  null;  eatTheRest  =  false;	  	compilable	  [FE]  UnrecognizedOptionException  	157	1	add
61	[BUG]  [BUGGY]          tokens.clear();    currentOption    =    null;    eatTheRest  =  false;  tokens.clear();  currentOption  =  null;  tokens.clear();  currentOption  =  null;  eatTheRest  =  false;  [FE]  UnrecognizedOptionException  [FE]        UnrecognizedOptionException    [CONTEXT]      private  void  init()  {  eatTheRest  =  false;  tokens.clear();      [BUGGY]          tokens.clear();    currentOption    =    null;    eatTheRest  =  false;  tokens.clear();  currentOption  =  null;  tokens.clear();  currentOption  =  null;  eatTheRest  =  false;  [BUGGY]      currentOption  =  null;  }  [CLASS]  PosixParser  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  ArrayList  tokens  Options  options  Option  currentOption  boolean  eatTheRest  	projects/Cli2/src/java/org/apache/commons/cli/PosixParser.java	1.0	53	53	1	replace	                tokens.clear();        currentOption        =        null;        eatTheRest    =    false;    tokens.clear();    currentOption    =    null;    tokens.clear();  currentOption  =  null;  eatTheRest  =  false;	  	compilable	  [FE]  UnrecognizedOptionException  	157	1	add
62	[BUG]  [BUGGY]          tokens.clear();    currentOption    =    null;    eatTheRest  =  false;  tokens.clear();  currentOption  =  null;  tokens.clear();  eatTheRest  =  null;  [CE]  incompatible  types  [FE]          UnrecognizedOptionException    [CONTEXT]      private  void  init()  {  eatTheRest  =  false;  tokens.clear();      [BUGGY]          tokens.clear();    currentOption    =    null;    eatTheRest  =  false;  tokens.clear();  currentOption  =  null;  tokens.clear();  eatTheRest  =  null;  [BUGGY]      currentOption  =  null;  }  [CLASS]  PosixParser  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  ArrayList  tokens  Options  options  Option  currentOption  boolean  eatTheRest  	projects/Cli2/src/java/org/apache/commons/cli/PosixParser.java	1.0	53	53	1	replace	                tokens.clear();        currentOption        =        null;        eatTheRest    =    false;    tokens.clear();    currentOption    =    null;    tokens.clear();  eatTheRest  =  null;	  	non-compiled	[CE]  incompatible  types	157	None	add
63	[BUG]  [BUGGY]  [FE]  UnrecognizedOptionException  [FE]            UnrecognizedOptionException    [CONTEXT]      private  void  init()  {  eatTheRest  =  false;  tokens.clear();      [BUGGY]          tokens.clear();    currentOption    =    null;    eatTheRest  =  false;  tokens.clear();  currentOption  =  null;  if(!eatTheRest)  {  tokens.clear();  currentOption  =  null;  }  [BUGGY]      currentOption  =  null;  }  [CLASS]  PosixParser  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  ArrayList  tokens  Options  options  Option  currentOption  boolean  eatTheRest  	projects/Cli2/src/java/org/apache/commons/cli/PosixParser.java	1.0	53	53	1	add	                tokens.clear();        currentOption        =        null;        eatTheRest    =    false;    tokens.clear();    currentOption    =    null;    if(!eatTheRest)  {  tokens.clear();  currentOption  =  null;  }	  	compilable	  [FE]  UnrecognizedOptionException  	157	1	add
64	[BUG]  [BUGGY]          tokens.clear();    currentOption    =    null;    eatTheRest  =  false;  tokens.clear();  currentOption  =  null;  if(!eatTheRest)  {  tokens.clear();  currentOption  =  null;  }  [FE]  UnrecognizedOptionException  [FE]            UnrecognizedOptionException    [CONTEXT]      private  void  init()  {  eatTheRest  =  false;  tokens.clear();      [BUGGY]          tokens.clear();    currentOption    =    null;    eatTheRest  =  false;  tokens.clear();  currentOption  =  null;  if(!eatTheRest)  {  tokens.clear();  currentOption  =  null;  }  [BUGGY]      currentOption  =  null;  }  [CLASS]  PosixParser  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  ArrayList  tokens  Options  options  Option  currentOption  boolean  eatTheRest  	projects/Cli2/src/java/org/apache/commons/cli/PosixParser.java	1.0	53	53	1	replace	                tokens.clear();        currentOption        =        null;        eatTheRest    =    false;    tokens.clear();    currentOption    =    null;    if(!eatTheRest)  {  tokens.clear();  currentOption  =  null;  }	  	compilable	  [FE]  UnrecognizedOptionException  	157	1	add
65	[BUG]  [BUGGY]  [FE]  UnrecognizedOptionException  [FE]    UnrecognizedOptionException    [CONTEXT]      private  void  init()  {  eatTheRest  =  false;  tokens.clear();      [BUGGY]  if(!eatTheRest)  {  currentOption  =  Option.OK_STANDARD;  tokens.clear();  }  [BUGGY]      }  [CLASS]  PosixParser  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  ArrayList  tokens  Options  options  Option  currentOption  boolean  eatTheRest  	projects/Cli2/src/java/org/apache/commons/cli/PosixParser.java	1.0	53	53	1	add	if(!eatTheRest)  {  currentOption  =  Option.OK_STANDARD;  tokens.clear();  }	  currentOption    =    Option.OK_STANDARD;    tokens.clear();    	compilable	  [FE]  UnrecognizedOptionException  	152	1	replace
66	[BUG]  [BUGGY]  if(!eatTheRest)  {  currentOption  =  Option.OK_STANDARD;  tokens.clear();  }  [FE]  UnrecognizedOptionException  [FE]    UnrecognizedOptionException    [CONTEXT]      private  void  init()  {  eatTheRest  =  false;  tokens.clear();      [BUGGY]  if(!eatTheRest)  {  currentOption  =  Option.OK_STANDARD;  tokens.clear();  }  [BUGGY]      }  [CLASS]  PosixParser  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  ArrayList  tokens  Options  options  Option  currentOption  boolean  eatTheRest  	projects/Cli2/src/java/org/apache/commons/cli/PosixParser.java	1.0	53	53	1	replace	if(!eatTheRest)  {  currentOption  =  Option.OK_STANDARD;  tokens.clear();  }	  currentOption    =    Option.OK_STANDARD;    tokens.clear();    	compilable	  [FE]  UnrecognizedOptionException  	152	1	replace
67	[BUG]  [BUGGY]  [FE]  UnrecognizedOptionException  [FE]      UnrecognizedOptionException    [CONTEXT]      private  void  init()  {  eatTheRest  =  false;  tokens.clear();      [BUGGY]  float  currentOption  =  Option.OK_STANDARD;  tokens.clear();  [BUGGY]      }  [CLASS]  PosixParser  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  ArrayList  tokens  Options  options  Option  currentOption  boolean  eatTheRest  	projects/Cli2/src/java/org/apache/commons/cli/PosixParser.java	1.0	53	53	1	add	float  currentOption  =  Option.OK_STANDARD;  tokens.clear();	  currentOption    =    Option.OK_STANDARD;    tokens.clear();    	compilable	  [FE]  UnrecognizedOptionException  	152	1	replace
68	[BUG]  [BUGGY]  float  currentOption  =  Option.OK_STANDARD;  tokens.clear();  [FE]  UnrecognizedOptionException  [FE]      UnrecognizedOptionException    [CONTEXT]      private  void  init()  {  eatTheRest  =  false;  tokens.clear();      [BUGGY]  float  currentOption  =  Option.OK_STANDARD;  tokens.clear();  [BUGGY]      }  [CLASS]  PosixParser  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  ArrayList  tokens  Options  options  Option  currentOption  boolean  eatTheRest  	projects/Cli2/src/java/org/apache/commons/cli/PosixParser.java	1.0	53	53	1	replace	float  currentOption  =  Option.OK_STANDARD;  tokens.clear();	  currentOption    =    Option.OK_STANDARD;    tokens.clear();    	compilable	  [FE]  UnrecognizedOptionException  	152	1	replace
69	[BUG]  [BUGGY]  [FE]  UnrecognizedOptionException  [FE]    UnrecognizedOptionException    [CONTEXT]      private  void  init()  {  eatTheRest  =  false;  tokens.clear();      [BUGGY]  currentOption    =    Option.OK_STANDARD;    currentOption  =  Option.OK_STANDARD;  currentOption  =  Option.OK_STANDARD;  currentOption  =  Option.OK_STANDARD;  [BUGGY]      }  [CLASS]  PosixParser  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  ArrayList  tokens  Options  options  Option  currentOption  boolean  eatTheRest  	projects/Cli2/src/java/org/apache/commons/cli/PosixParser.java	1.0	53	53	1	add	currentOption        =        Option.OK_STANDARD;        currentOption    =    Option.OK_STANDARD;    currentOption  =  Option.OK_STANDARD;  currentOption  =  Option.OK_STANDARD;	  	compilable	  [FE]  UnrecognizedOptionException  	79	1	add
70	[BUG]  [BUGGY]  currentOption    =    Option.OK_STANDARD;    currentOption  =  Option.OK_STANDARD;  currentOption  =  Option.OK_STANDARD;  currentOption  =  Option.OK_STANDARD;  [FE]  UnrecognizedOptionException  [FE]    UnrecognizedOptionException    [CONTEXT]      private  void  init()  {  eatTheRest  =  false;  tokens.clear();      [BUGGY]  currentOption    =    Option.OK_STANDARD;    currentOption  =  Option.OK_STANDARD;  currentOption  =  Option.OK_STANDARD;  currentOption  =  Option.OK_STANDARD;  [BUGGY]      }  [CLASS]  PosixParser  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  ArrayList  tokens  Options  options  Option  currentOption  boolean  eatTheRest  	projects/Cli2/src/java/org/apache/commons/cli/PosixParser.java	1.0	53	53	1	replace	currentOption        =        Option.OK_STANDARD;        currentOption    =    Option.OK_STANDARD;    currentOption  =  Option.OK_STANDARD;  currentOption  =  Option.OK_STANDARD;	  	compilable	  [FE]  UnrecognizedOptionException  	79	1	add
71	[BUG]  [BUGGY]  [FE]  UnrecognizedOptionException  [FE]      UnrecognizedOptionException    [CONTEXT]      private  void  init()  {  eatTheRest  =  false;  tokens.clear();      [BUGGY]  currentOption    =    Option.OK_STANDARD;    currentOption  =  Option.OK_STANDARD;  tokens.clear();  currentOption  =  Option.OK_STANDARD;  [BUGGY]      }  [CLASS]  PosixParser  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  ArrayList  tokens  Options  options  Option  currentOption  boolean  eatTheRest  	projects/Cli2/src/java/org/apache/commons/cli/PosixParser.java	1.0	53	53	1	add	currentOption        =        Option.OK_STANDARD;        currentOption    =    Option.OK_STANDARD;    tokens.clear();  currentOption  =  Option.OK_STANDARD;	  	compilable	  [FE]  UnrecognizedOptionException  	79	1	add
72	[BUG]  [BUGGY]  currentOption    =    Option.OK_STANDARD;    currentOption  =  Option.OK_STANDARD;  tokens.clear();  currentOption  =  Option.OK_STANDARD;  [FE]  UnrecognizedOptionException  [FE]      UnrecognizedOptionException    [CONTEXT]      private  void  init()  {  eatTheRest  =  false;  tokens.clear();      [BUGGY]  currentOption    =    Option.OK_STANDARD;    currentOption  =  Option.OK_STANDARD;  tokens.clear();  currentOption  =  Option.OK_STANDARD;  [BUGGY]      }  [CLASS]  PosixParser  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  ArrayList  tokens  Options  options  Option  currentOption  boolean  eatTheRest  	projects/Cli2/src/java/org/apache/commons/cli/PosixParser.java	1.0	53	53	1	replace	currentOption        =        Option.OK_STANDARD;        currentOption    =    Option.OK_STANDARD;    tokens.clear();  currentOption  =  Option.OK_STANDARD;	  	compilable	  [FE]  UnrecognizedOptionException  	79	1	add
73	[BUG]  [BUGGY]  [FE]  UnrecognizedOptionException  [FE]        UnrecognizedOptionException    [CONTEXT]      private  void  init()  {  eatTheRest  =  false;  tokens.clear();      [BUGGY]  currentOption    =    Option.OK_STANDARD;    currentOption  =  Option.OK_STANDARD;  tokens.clear();  [BUGGY]      }  [CLASS]  PosixParser  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  ArrayList  tokens  Options  options  Option  currentOption  boolean  eatTheRest  	projects/Cli2/src/java/org/apache/commons/cli/PosixParser.java	1.0	53	53	1	add	currentOption        =        Option.OK_STANDARD;        currentOption    =    Option.OK_STANDARD;    tokens.clear();	  	compilable	  [FE]  UnrecognizedOptionException  	79	1	add
74	[BUG]  [BUGGY]  currentOption    =    Option.OK_STANDARD;    currentOption  =  Option.OK_STANDARD;  tokens.clear();  [FE]  UnrecognizedOptionException  [FE]        UnrecognizedOptionException    [CONTEXT]      private  void  init()  {  eatTheRest  =  false;  tokens.clear();      [BUGGY]  currentOption    =    Option.OK_STANDARD;    currentOption  =  Option.OK_STANDARD;  tokens.clear();  [BUGGY]      }  [CLASS]  PosixParser  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  ArrayList  tokens  Options  options  Option  currentOption  boolean  eatTheRest  	projects/Cli2/src/java/org/apache/commons/cli/PosixParser.java	1.0	53	53	1	replace	currentOption        =        Option.OK_STANDARD;        currentOption    =    Option.OK_STANDARD;    tokens.clear();	  	compilable	  [FE]  UnrecognizedOptionException  	79	1	add
75	[BUG]  [BUGGY]  [FE]  UnrecognizedOptionException  [FE]          UnrecognizedOptionException    [CONTEXT]      private  void  init()  {  eatTheRest  =  false;  tokens.clear();      [BUGGY]  currentOption    =    Option.OK_STANDARD;    currentOption  =  Option.OK_STANDARD;  ArrayList  <  Option>  tokens  =  new  ArrayList  <  Option>(tokens.size());  [BUGGY]      }  [CLASS]  PosixParser  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  ArrayList  tokens  Options  options  Option  currentOption  boolean  eatTheRest  	projects/Cli2/src/java/org/apache/commons/cli/PosixParser.java	1.0	53	53	1	add	currentOption        =        Option.OK_STANDARD;        currentOption    =    Option.OK_STANDARD;    ArrayList  <  Option>  tokens  =  new  ArrayList  <  Option>(tokens.size());	  	compilable	  [FE]  UnrecognizedOptionException  	79	1	add
76	[BUG]  [BUGGY]  currentOption    =    Option.OK_STANDARD;    currentOption  =  Option.OK_STANDARD;  ArrayList  <  Option>  tokens  =  new  ArrayList  <  Option>(tokens.size());  [FE]  UnrecognizedOptionException  [FE]          UnrecognizedOptionException    [CONTEXT]      private  void  init()  {  eatTheRest  =  false;  tokens.clear();      [BUGGY]  currentOption    =    Option.OK_STANDARD;    currentOption  =  Option.OK_STANDARD;  ArrayList  <  Option>  tokens  =  new  ArrayList  <  Option>(tokens.size());  [BUGGY]      }  [CLASS]  PosixParser  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  ArrayList  tokens  Options  options  Option  currentOption  boolean  eatTheRest  	projects/Cli2/src/java/org/apache/commons/cli/PosixParser.java	1.0	53	53	1	replace	currentOption        =        Option.OK_STANDARD;        currentOption    =    Option.OK_STANDARD;    ArrayList  <  Option>  tokens  =  new  ArrayList  <  Option>(tokens.size());	  	compilable	  [FE]  UnrecognizedOptionException  	79	1	add
77	[BUG]  [BUGGY]  [FE]  UnrecognizedOptionException  [FE]            UnrecognizedOptionException    [CONTEXT]      private  void  init()  {  eatTheRest  =  false;  tokens.clear();      [BUGGY]  currentOption    =    Option.OK_STANDARD;    currentOption  =  Option.OK_STANDARD;  currentOption  =  Option.OK_STANDARD;  [BUGGY]      }  [CLASS]  PosixParser  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  ArrayList  tokens  Options  options  Option  currentOption  boolean  eatTheRest  	projects/Cli2/src/java/org/apache/commons/cli/PosixParser.java	1.0	53	53	1	add	currentOption        =        Option.OK_STANDARD;        currentOption    =    Option.OK_STANDARD;    currentOption  =  Option.OK_STANDARD;	  	compilable	  [FE]  UnrecognizedOptionException  	79	1	add
78	[BUG]  [BUGGY]  currentOption    =    Option.OK_STANDARD;    currentOption  =  Option.OK_STANDARD;  currentOption  =  Option.OK_STANDARD;  [FE]  UnrecognizedOptionException  [FE]            UnrecognizedOptionException    [CONTEXT]      private  void  init()  {  eatTheRest  =  false;  tokens.clear();      [BUGGY]  currentOption    =    Option.OK_STANDARD;    currentOption  =  Option.OK_STANDARD;  currentOption  =  Option.OK_STANDARD;  [BUGGY]      }  [CLASS]  PosixParser  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  ArrayList  tokens  Options  options  Option  currentOption  boolean  eatTheRest  	projects/Cli2/src/java/org/apache/commons/cli/PosixParser.java	1.0	53	53	1	replace	currentOption        =        Option.OK_STANDARD;        currentOption    =    Option.OK_STANDARD;    currentOption  =  Option.OK_STANDARD;	  	compilable	  [FE]  UnrecognizedOptionException  	79	1	add
79	[BUG]  [BUGGY]  if(currentOption!=  null)  {  ArrayList  <  Option>  tokens  =  new  ArrayList  <  Option>();  ArrayList  <  Option>  tokens  =  new  ArrayList  <  Option>();  }  [CE]  variable  tokens  is  already  defined  in  method  init()  [FE]        UnrecognizedOptionException      [CONTEXT]      private  void  init()  {  eatTheRest  =  false;  tokens.clear();      [BUGGY]  if(currentOption!=  null)  {  ArrayList  <  Option>  tokens  =  new  ArrayList  <  Option>();  ArrayList  <  Option>  tokens  =  new  ArrayList  <  Option>();  }  [BUGGY]      currentOption  =  null;  }  [CLASS]  PosixParser  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  ArrayList  tokens  Options  options  Option  currentOption  boolean  eatTheRest  	projects/Cli2/src/java/org/apache/commons/cli/PosixParser.java	1.0	53	53	1	replace	if(currentOption!=  null)  {  ArrayList  <  Option>  tokens  =  new  ArrayList  <  Option>();  ArrayList  <  Option>  tokens  =  new  ArrayList  <  Option>();  }	          ArrayList    <    Option>    tokens    =    new    ArrayList    <    Option>();    ArrayList    <    Option>    tokens    =    new    ArrayList    <    Option>();    	non-compiled	[CE]  variable  tokens  is  already  defined  in  method  init()	43	None	replace
80	[BUG]  [BUGGY]  if(currentOption!=  null)  {  ArrayList  <  Option>  tokens  =  new  ArrayList  <  Option>();  ArrayList  <  Option>  tokens  =  new  ArrayList  <  Option>();  }  else  {  tokens.add(currentOption);  }  [CE]  variable  tokens  is  already  defined  in  method  init()  [FE]          UnrecognizedOptionException      [CONTEXT]      private  void  init()  {  eatTheRest  =  false;  tokens.clear();      [BUGGY]  if(currentOption!=  null)  {  ArrayList  <  Option>  tokens  =  new  ArrayList  <  Option>();  ArrayList  <  Option>  tokens  =  new  ArrayList  <  Option>();  }  else  {  tokens.add(currentOption);  }  [BUGGY]      currentOption  =  null;  }  [CLASS]  PosixParser  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  ArrayList  tokens  Options  options  Option  currentOption  boolean  eatTheRest  	projects/Cli2/src/java/org/apache/commons/cli/PosixParser.java	1.0	53	53	1	replace	if(currentOption!=  null)  {  ArrayList  <  Option>  tokens  =  new  ArrayList  <  Option>();  ArrayList  <  Option>  tokens  =  new  ArrayList  <  Option>();  }  else  {  tokens.add(currentOption);  }	          ArrayList    <    Option>    tokens    =    new    ArrayList    <    Option>();    ArrayList    <    Option>    tokens    =    new    ArrayList    <    Option>();    	non-compiled	[CE]  variable  tokens  is  already  defined  in  method  init()	43	None	replace
81	[BUG]  [BUGGY]  [FE]  UnrecognizedOptionException  [FE]    UnrecognizedOptionException    [CONTEXT]      private  void  init()  {  eatTheRest  =  false;  tokens.clear();      [BUGGY]  if(currentOption!=  null)  {  eatTheRest  =  false;  tokens.clear();  eatTheRest  =  false;  tokens.clear();  }  [BUGGY]      currentOption  =  null;  }  [CLASS]  PosixParser  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  ArrayList  tokens  Options  options  Option  currentOption  boolean  eatTheRest  	projects/Cli2/src/java/org/apache/commons/cli/PosixParser.java	1.0	53	53	1	add	if(currentOption!=  null)  {  eatTheRest  =  false;  tokens.clear();  eatTheRest  =  false;  tokens.clear();  }	          eatTheRest    =    false;    tokens.clear();    eatTheRest    =    false;    tokens.clear();    	compilable	  [FE]  UnrecognizedOptionException  	2	1	replace
82	[BUG]  [BUGGY]  if(currentOption!=  null)  {  eatTheRest  =  false;  tokens.clear();  eatTheRest  =  false;  tokens.clear();  }  [FE]  UnrecognizedOptionException  [FE]    UnrecognizedOptionException    [CONTEXT]      private  void  init()  {  eatTheRest  =  false;  tokens.clear();      [BUGGY]  if(currentOption!=  null)  {  eatTheRest  =  false;  tokens.clear();  eatTheRest  =  false;  tokens.clear();  }  [BUGGY]      currentOption  =  null;  }  [CLASS]  PosixParser  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  ArrayList  tokens  Options  options  Option  currentOption  boolean  eatTheRest  	projects/Cli2/src/java/org/apache/commons/cli/PosixParser.java	1.0	53	53	1	replace	if(currentOption!=  null)  {  eatTheRest  =  false;  tokens.clear();  eatTheRest  =  false;  tokens.clear();  }	          eatTheRest    =    false;    tokens.clear();    eatTheRest    =    false;    tokens.clear();    	compilable	  [FE]  UnrecognizedOptionException  	2	1	replace
83	[BUG]  [BUGGY]  [FE]  UnrecognizedOptionException  [FE]      UnrecognizedOptionException    [CONTEXT]      private  void  init()  {  eatTheRest  =  false;  tokens.clear();      [BUGGY]  if(currentOption  ==  null)  {  eatTheRest  =  false;  tokens.clear();  eatTheRest  =  false;  tokens.clear();  }  [BUGGY]      currentOption  =  null;  }  [CLASS]  PosixParser  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  ArrayList  tokens  Options  options  Option  currentOption  boolean  eatTheRest  	projects/Cli2/src/java/org/apache/commons/cli/PosixParser.java	1.0	53	53	1	add	if(currentOption  ==  null)  {  eatTheRest  =  false;  tokens.clear();  eatTheRest  =  false;  tokens.clear();  }	          eatTheRest    =    false;    tokens.clear();    eatTheRest    =    false;    tokens.clear();    	compilable	  [FE]  UnrecognizedOptionException  	2	1	replace
84	[BUG]  [BUGGY]  if(currentOption  ==  null)  {  eatTheRest  =  false;  tokens.clear();  eatTheRest  =  false;  tokens.clear();  }  [FE]  UnrecognizedOptionException  [FE]      UnrecognizedOptionException    [CONTEXT]      private  void  init()  {  eatTheRest  =  false;  tokens.clear();      [BUGGY]  if(currentOption  ==  null)  {  eatTheRest  =  false;  tokens.clear();  eatTheRest  =  false;  tokens.clear();  }  [BUGGY]      currentOption  =  null;  }  [CLASS]  PosixParser  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  ArrayList  tokens  Options  options  Option  currentOption  boolean  eatTheRest  	projects/Cli2/src/java/org/apache/commons/cli/PosixParser.java	1.0	53	53	1	replace	if(currentOption  ==  null)  {  eatTheRest  =  false;  tokens.clear();  eatTheRest  =  false;  tokens.clear();  }	          eatTheRest    =    false;    tokens.clear();    eatTheRest    =    false;    tokens.clear();    	compilable	  [FE]  UnrecognizedOptionException  	2	1	replace
85	[BUG]  [BUGGY]  [FE]  UnrecognizedOptionException  [FE]        UnrecognizedOptionException    [CONTEXT]      private  void  init()  {  eatTheRest  =  false;  tokens.clear();      [BUGGY]  if(currentOption!=  null)  {  eatTheRest  =  false;  tokens.clear();  eatTheRest  =  false;  tokens.clear();  }  else  {  currentOption  =  null;  }  [BUGGY]      currentOption  =  null;  }  [CLASS]  PosixParser  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  ArrayList  tokens  Options  options  Option  currentOption  boolean  eatTheRest  	projects/Cli2/src/java/org/apache/commons/cli/PosixParser.java	1.0	53	53	1	add	if(currentOption!=  null)  {  eatTheRest  =  false;  tokens.clear();  eatTheRest  =  false;  tokens.clear();  }  else  {  currentOption  =  null;  }	          eatTheRest    =    false;    tokens.clear();    eatTheRest    =    false;    tokens.clear();    	compilable	  [FE]  UnrecognizedOptionException  	2	1	replace
86	[BUG]  [BUGGY]  if(currentOption!=  null)  {  eatTheRest  =  false;  tokens.clear();  eatTheRest  =  false;  tokens.clear();  }  else  {  currentOption  =  null;  }  [FE]  UnrecognizedOptionException  [FE]        UnrecognizedOptionException    [CONTEXT]      private  void  init()  {  eatTheRest  =  false;  tokens.clear();      [BUGGY]  if(currentOption!=  null)  {  eatTheRest  =  false;  tokens.clear();  eatTheRest  =  false;  tokens.clear();  }  else  {  currentOption  =  null;  }  [BUGGY]      currentOption  =  null;  }  [CLASS]  PosixParser  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  ArrayList  tokens  Options  options  Option  currentOption  boolean  eatTheRest  	projects/Cli2/src/java/org/apache/commons/cli/PosixParser.java	1.0	53	53	1	replace	if(currentOption!=  null)  {  eatTheRest  =  false;  tokens.clear();  eatTheRest  =  false;  tokens.clear();  }  else  {  currentOption  =  null;  }	          eatTheRest    =    false;    tokens.clear();    eatTheRest    =    false;    tokens.clear();    	compilable	  [FE]  UnrecognizedOptionException  	2	1	replace
87	[BUG]  [BUGGY]  [FE]  UnrecognizedOptionException  [FE]          UnrecognizedOptionException    [CONTEXT]      private  void  init()  {  eatTheRest  =  false;  tokens.clear();      [BUGGY]  if(currentOption  ==  null)  {  eatTheRest  =  false;  tokens.clear();  eatTheRest  =  false;  tokens.clear();  }  else  {  currentOption  =  null;  }  [BUGGY]      currentOption  =  null;  }  [CLASS]  PosixParser  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  ArrayList  tokens  Options  options  Option  currentOption  boolean  eatTheRest  	projects/Cli2/src/java/org/apache/commons/cli/PosixParser.java	1.0	53	53	1	add	if(currentOption  ==  null)  {  eatTheRest  =  false;  tokens.clear();  eatTheRest  =  false;  tokens.clear();  }  else  {  currentOption  =  null;  }	          eatTheRest    =    false;    tokens.clear();    eatTheRest    =    false;    tokens.clear();    	compilable	  [FE]  UnrecognizedOptionException  	2	1	replace
88	[BUG]  [BUGGY]  if(currentOption  ==  null)  {  eatTheRest  =  false;  tokens.clear();  eatTheRest  =  false;  tokens.clear();  }  else  {  currentOption  =  null;  }  [FE]  UnrecognizedOptionException  [FE]          UnrecognizedOptionException    [CONTEXT]      private  void  init()  {  eatTheRest  =  false;  tokens.clear();      [BUGGY]  if(currentOption  ==  null)  {  eatTheRest  =  false;  tokens.clear();  eatTheRest  =  false;  tokens.clear();  }  else  {  currentOption  =  null;  }  [BUGGY]      currentOption  =  null;  }  [CLASS]  PosixParser  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  ArrayList  tokens  Options  options  Option  currentOption  boolean  eatTheRest  	projects/Cli2/src/java/org/apache/commons/cli/PosixParser.java	1.0	53	53	1	replace	if(currentOption  ==  null)  {  eatTheRest  =  false;  tokens.clear();  eatTheRest  =  false;  tokens.clear();  }  else  {  currentOption  =  null;  }	          eatTheRest    =    false;    tokens.clear();    eatTheRest    =    false;    tokens.clear();    	compilable	  [FE]  UnrecognizedOptionException  	2	1	replace
89	[BUG]  [BUGGY]  [FE]  UnrecognizedOptionException  [FE]    UnrecognizedOptionException    [CONTEXT]      private  void  init()  {  eatTheRest  =  false;  tokens.clear();      [BUGGY]  if(currentOption!=  null)  {  eatTheRest  =  false;  tokens.clear();  tokens.clear();  eatTheRest  =  false;  tokens.clear();  }  [BUGGY]      currentOption  =  null;  }  [CLASS]  PosixParser  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  ArrayList  tokens  Options  options  Option  currentOption  boolean  eatTheRest  	projects/Cli2/src/java/org/apache/commons/cli/PosixParser.java	1.0	53	53	1	add	if(currentOption!=  null)  {  eatTheRest  =  false;  tokens.clear();  tokens.clear();  eatTheRest  =  false;  tokens.clear();  }	          eatTheRest    =    false;    tokens.clear();    tokens.clear();    eatTheRest    =    false;    tokens.clear();    	compilable	  [FE]  UnrecognizedOptionException  	7	1	replace
90	[BUG]  [BUGGY]  if(currentOption!=  null)  {  eatTheRest  =  false;  tokens.clear();  tokens.clear();  eatTheRest  =  false;  tokens.clear();  }  [FE]  UnrecognizedOptionException  [FE]    UnrecognizedOptionException    [CONTEXT]      private  void  init()  {  eatTheRest  =  false;  tokens.clear();      [BUGGY]  if(currentOption!=  null)  {  eatTheRest  =  false;  tokens.clear();  tokens.clear();  eatTheRest  =  false;  tokens.clear();  }  [BUGGY]      currentOption  =  null;  }  [CLASS]  PosixParser  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  ArrayList  tokens  Options  options  Option  currentOption  boolean  eatTheRest  	projects/Cli2/src/java/org/apache/commons/cli/PosixParser.java	1.0	53	53	1	replace	if(currentOption!=  null)  {  eatTheRest  =  false;  tokens.clear();  tokens.clear();  eatTheRest  =  false;  tokens.clear();  }	          eatTheRest    =    false;    tokens.clear();    tokens.clear();    eatTheRest    =    false;    tokens.clear();    	compilable	  [FE]  UnrecognizedOptionException  	7	1	replace
91	[BUG]  [BUGGY]  [FE]  UnrecognizedOptionException  [FE]      UnrecognizedOptionException    [CONTEXT]      private  void  init()  {  eatTheRest  =  false;  tokens.clear();      [BUGGY]  if(currentOption  ==  null)  {  eatTheRest  =  false;  tokens.clear();  tokens.clear();  eatTheRest  =  false;  tokens.clear();  }  [BUGGY]      currentOption  =  null;  }  [CLASS]  PosixParser  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  ArrayList  tokens  Options  options  Option  currentOption  boolean  eatTheRest  	projects/Cli2/src/java/org/apache/commons/cli/PosixParser.java	1.0	53	53	1	add	if(currentOption  ==  null)  {  eatTheRest  =  false;  tokens.clear();  tokens.clear();  eatTheRest  =  false;  tokens.clear();  }	          eatTheRest    =    false;    tokens.clear();    tokens.clear();    eatTheRest    =    false;    tokens.clear();    	compilable	  [FE]  UnrecognizedOptionException  	7	1	replace
92	[BUG]  [BUGGY]  if(currentOption  ==  null)  {  eatTheRest  =  false;  tokens.clear();  tokens.clear();  eatTheRest  =  false;  tokens.clear();  }  [FE]  UnrecognizedOptionException  [FE]      UnrecognizedOptionException    [CONTEXT]      private  void  init()  {  eatTheRest  =  false;  tokens.clear();      [BUGGY]  if(currentOption  ==  null)  {  eatTheRest  =  false;  tokens.clear();  tokens.clear();  eatTheRest  =  false;  tokens.clear();  }  [BUGGY]      currentOption  =  null;  }  [CLASS]  PosixParser  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  ArrayList  tokens  Options  options  Option  currentOption  boolean  eatTheRest  	projects/Cli2/src/java/org/apache/commons/cli/PosixParser.java	1.0	53	53	1	replace	if(currentOption  ==  null)  {  eatTheRest  =  false;  tokens.clear();  tokens.clear();  eatTheRest  =  false;  tokens.clear();  }	          eatTheRest    =    false;    tokens.clear();    tokens.clear();    eatTheRest    =    false;    tokens.clear();    	compilable	  [FE]  UnrecognizedOptionException  	7	1	replace
93	[BUG]  [BUGGY]  [FE]  UnrecognizedOptionException  [FE]        UnrecognizedOptionException    [CONTEXT]      private  void  init()  {  eatTheRest  =  false;  tokens.clear();      [BUGGY]  if(currentOption!=  null)  {  eatTheRest  =  false;  tokens.clear();  tokens.clear();  }  [BUGGY]      currentOption  =  null;  }  [CLASS]  PosixParser  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  ArrayList  tokens  Options  options  Option  currentOption  boolean  eatTheRest  	projects/Cli2/src/java/org/apache/commons/cli/PosixParser.java	1.0	53	53	1	add	if(currentOption!=  null)  {  eatTheRest  =  false;  tokens.clear();  tokens.clear();  }	          eatTheRest    =    false;    tokens.clear();    tokens.clear();    eatTheRest    =    false;    tokens.clear();    	compilable	  [FE]  UnrecognizedOptionException  	7	1	replace
94	[BUG]  [BUGGY]  if(currentOption!=  null)  {  eatTheRest  =  false;  tokens.clear();  tokens.clear();  }  [FE]  UnrecognizedOptionException  [FE]        UnrecognizedOptionException    [CONTEXT]      private  void  init()  {  eatTheRest  =  false;  tokens.clear();      [BUGGY]  if(currentOption!=  null)  {  eatTheRest  =  false;  tokens.clear();  tokens.clear();  }  [BUGGY]      currentOption  =  null;  }  [CLASS]  PosixParser  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  ArrayList  tokens  Options  options  Option  currentOption  boolean  eatTheRest  	projects/Cli2/src/java/org/apache/commons/cli/PosixParser.java	1.0	53	53	1	replace	if(currentOption!=  null)  {  eatTheRest  =  false;  tokens.clear();  tokens.clear();  }	          eatTheRest    =    false;    tokens.clear();    tokens.clear();    eatTheRest    =    false;    tokens.clear();    	compilable	  [FE]  UnrecognizedOptionException  	7	1	replace
95	[BUG]  [BUGGY]  [FE]  UnrecognizedOptionException  [FE]          UnrecognizedOptionException    [CONTEXT]      private  void  init()  {  eatTheRest  =  false;  tokens.clear();      [BUGGY]  if(currentOption!=  null)  {  eatTheRest  =  false;  tokens.clear();  tokens.clear();  eatTheRest  =  false;  tokens.clear();  }  else  {  currentOption  =  null;  }  [BUGGY]      currentOption  =  null;  }  [CLASS]  PosixParser  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  ArrayList  tokens  Options  options  Option  currentOption  boolean  eatTheRest  	projects/Cli2/src/java/org/apache/commons/cli/PosixParser.java	1.0	53	53	1	add	if(currentOption!=  null)  {  eatTheRest  =  false;  tokens.clear();  tokens.clear();  eatTheRest  =  false;  tokens.clear();  }  else  {  currentOption  =  null;  }	          eatTheRest    =    false;    tokens.clear();    tokens.clear();    eatTheRest    =    false;    tokens.clear();    	compilable	  [FE]  UnrecognizedOptionException  	7	1	replace
96	[BUG]  [BUGGY]  if(currentOption!=  null)  {  eatTheRest  =  false;  tokens.clear();  tokens.clear();  eatTheRest  =  false;  tokens.clear();  }  else  {  currentOption  =  null;  }  [FE]  UnrecognizedOptionException  [FE]          UnrecognizedOptionException    [CONTEXT]      private  void  init()  {  eatTheRest  =  false;  tokens.clear();      [BUGGY]  if(currentOption!=  null)  {  eatTheRest  =  false;  tokens.clear();  tokens.clear();  eatTheRest  =  false;  tokens.clear();  }  else  {  currentOption  =  null;  }  [BUGGY]      currentOption  =  null;  }  [CLASS]  PosixParser  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  ArrayList  tokens  Options  options  Option  currentOption  boolean  eatTheRest  	projects/Cli2/src/java/org/apache/commons/cli/PosixParser.java	1.0	53	53	1	replace	if(currentOption!=  null)  {  eatTheRest  =  false;  tokens.clear();  tokens.clear();  eatTheRest  =  false;  tokens.clear();  }  else  {  currentOption  =  null;  }	          eatTheRest    =    false;    tokens.clear();    tokens.clear();    eatTheRest    =    false;    tokens.clear();    	compilable	  [FE]  UnrecognizedOptionException  	7	1	replace
97	[BUG]  [BUGGY]  [FE]  UnrecognizedOptionException  [FE]    UnrecognizedOptionException    [CONTEXT]      private  void  init()  {  eatTheRest  =  false;  tokens.clear();      [BUGGY]  if(currentOption!=  null)  {  eatTheRest  =  false;  tokens.clear();  eatTheRest  =  false;  tokens.clear();  currentOption  =  null;  }  [BUGGY]      currentOption  =  null;  }  [CLASS]  PosixParser  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  ArrayList  tokens  Options  options  Option  currentOption  boolean  eatTheRest  	projects/Cli2/src/java/org/apache/commons/cli/PosixParser.java	1.0	53	53	1	add	if(currentOption!=  null)  {  eatTheRest  =  false;  tokens.clear();  eatTheRest  =  false;  tokens.clear();  currentOption  =  null;  }	          eatTheRest    =    false;    tokens.clear();    eatTheRest    =    false;    tokens.clear();    currentOption    =    null;    	compilable	  [FE]  UnrecognizedOptionException  	4	1	replace
98	[BUG]  [BUGGY]  if(currentOption!=  null)  {  eatTheRest  =  false;  tokens.clear();  eatTheRest  =  false;  tokens.clear();  currentOption  =  null;  }  [FE]  UnrecognizedOptionException  [FE]    UnrecognizedOptionException    [CONTEXT]      private  void  init()  {  eatTheRest  =  false;  tokens.clear();      [BUGGY]  if(currentOption!=  null)  {  eatTheRest  =  false;  tokens.clear();  eatTheRest  =  false;  tokens.clear();  currentOption  =  null;  }  [BUGGY]      currentOption  =  null;  }  [CLASS]  PosixParser  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  ArrayList  tokens  Options  options  Option  currentOption  boolean  eatTheRest  	projects/Cli2/src/java/org/apache/commons/cli/PosixParser.java	1.0	53	53	1	replace	if(currentOption!=  null)  {  eatTheRest  =  false;  tokens.clear();  eatTheRest  =  false;  tokens.clear();  currentOption  =  null;  }	          eatTheRest    =    false;    tokens.clear();    eatTheRest    =    false;    tokens.clear();    currentOption    =    null;    	compilable	  [FE]  UnrecognizedOptionException  	4	1	replace
99	[BUG]  [BUGGY]  [FE]  UnrecognizedOptionException  [FE]      UnrecognizedOptionException    [CONTEXT]      private  void  init()  {  eatTheRest  =  false;  tokens.clear();      [BUGGY]  if(currentOption  ==  null)  {  eatTheRest  =  false;  tokens.clear();  eatTheRest  =  false;  tokens.clear();  currentOption  =  null;  }  [BUGGY]      currentOption  =  null;  }  [CLASS]  PosixParser  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  ArrayList  tokens  Options  options  Option  currentOption  boolean  eatTheRest  	projects/Cli2/src/java/org/apache/commons/cli/PosixParser.java	1.0	53	53	1	add	if(currentOption  ==  null)  {  eatTheRest  =  false;  tokens.clear();  eatTheRest  =  false;  tokens.clear();  currentOption  =  null;  }	          eatTheRest    =    false;    tokens.clear();    eatTheRest    =    false;    tokens.clear();    currentOption    =    null;    	compilable	  [FE]  UnrecognizedOptionException  	4	1	replace
100	[BUG]  [BUGGY]  if(currentOption  ==  null)  {  eatTheRest  =  false;  tokens.clear();  eatTheRest  =  false;  tokens.clear();  currentOption  =  null;  }  [FE]  UnrecognizedOptionException  [FE]      UnrecognizedOptionException    [CONTEXT]      private  void  init()  {  eatTheRest  =  false;  tokens.clear();      [BUGGY]  if(currentOption  ==  null)  {  eatTheRest  =  false;  tokens.clear();  eatTheRest  =  false;  tokens.clear();  currentOption  =  null;  }  [BUGGY]      currentOption  =  null;  }  [CLASS]  PosixParser  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  ArrayList  tokens  Options  options  Option  currentOption  boolean  eatTheRest  	projects/Cli2/src/java/org/apache/commons/cli/PosixParser.java	1.0	53	53	1	replace	if(currentOption  ==  null)  {  eatTheRest  =  false;  tokens.clear();  eatTheRest  =  false;  tokens.clear();  currentOption  =  null;  }	          eatTheRest    =    false;    tokens.clear();    eatTheRest    =    false;    tokens.clear();    currentOption    =    null;    	compilable	  [FE]  UnrecognizedOptionException  	4	1	replace
101	[BUG]  [BUGGY]  [FE]  UnrecognizedOptionException  [FE]          UnrecognizedOptionException    [CONTEXT]      private  void  init()  {  eatTheRest  =  false;  tokens.clear();      [BUGGY]  if(currentOption!=  null)  {  eatTheRest  =  false;  tokens.clear();  eatTheRest  =  true;  tokens.clear();  currentOption  =  null;  }  [BUGGY]      currentOption  =  null;  }  [CLASS]  PosixParser  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  ArrayList  tokens  Options  options  Option  currentOption  boolean  eatTheRest  	projects/Cli2/src/java/org/apache/commons/cli/PosixParser.java	1.0	53	53	1	add	if(currentOption!=  null)  {  eatTheRest  =  false;  tokens.clear();  eatTheRest  =  true;  tokens.clear();  currentOption  =  null;  }	          eatTheRest    =    false;    tokens.clear();    eatTheRest    =    false;    tokens.clear();    currentOption    =    null;    	compilable	  [FE]  UnrecognizedOptionException  	4	1	replace
102	[BUG]  [BUGGY]  if(currentOption!=  null)  {  eatTheRest  =  false;  tokens.clear();  eatTheRest  =  true;  tokens.clear();  currentOption  =  null;  }  [FE]  UnrecognizedOptionException  [FE]          UnrecognizedOptionException    [CONTEXT]      private  void  init()  {  eatTheRest  =  false;  tokens.clear();      [BUGGY]  if(currentOption!=  null)  {  eatTheRest  =  false;  tokens.clear();  eatTheRest  =  true;  tokens.clear();  currentOption  =  null;  }  [BUGGY]      currentOption  =  null;  }  [CLASS]  PosixParser  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  ArrayList  tokens  Options  options  Option  currentOption  boolean  eatTheRest  	projects/Cli2/src/java/org/apache/commons/cli/PosixParser.java	1.0	53	53	1	replace	if(currentOption!=  null)  {  eatTheRest  =  false;  tokens.clear();  eatTheRest  =  true;  tokens.clear();  currentOption  =  null;  }	          eatTheRest    =    false;    tokens.clear();    eatTheRest    =    false;    tokens.clear();    currentOption    =    null;    	compilable	  [FE]  UnrecognizedOptionException  	4	1	replace
103	[BUG]  [BUGGY]  ArrayList  <  Option>  tokens  =  new  ArrayList  <  Option>(options);  [CE]  no  suitable  constructor  found  for  ArrayList(Options)  [FE]          UnrecognizedOptionException      [CONTEXT]      private  void  init()  {  eatTheRest  =  false;  tokens.clear();      [BUGGY]  ArrayList  <  Option>  tokens  =  new  ArrayList  <  Option>(options);  [BUGGY]      currentOption  =  null;  }  [CLASS]  PosixParser  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  ArrayList  tokens  Options  options  Option  currentOption  boolean  eatTheRest  	projects/Cli2/src/java/org/apache/commons/cli/PosixParser.java	1.0	53	53	1	replace	ArrayList  <  Option>  tokens  =  new  ArrayList  <  Option>(options);	  ArrayList    <    Option>    tokens    =    new    ArrayList    <    Option>(tokens);    	non-compiled	[CE]  no  suitable  constructor  found  for  ArrayList(Options)	51	None	replace
104	[BUG]  [BUGGY]  List  <  Option>  tokens  =  new  ArrayList  <  Option>(tokens);  [CE]  cannot  find  symbol  [FE]            UnrecognizedOptionException      [CONTEXT]      private  void  init()  {  eatTheRest  =  false;  tokens.clear();      [BUGGY]  List  <  Option>  tokens  =  new  ArrayList  <  Option>(tokens);  [BUGGY]      currentOption  =  null;  }  [CLASS]  PosixParser  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  ArrayList  tokens  Options  options  Option  currentOption  boolean  eatTheRest  	projects/Cli2/src/java/org/apache/commons/cli/PosixParser.java	1.0	53	53	1	replace	List  <  Option>  tokens  =  new  ArrayList  <  Option>(tokens);	  ArrayList    <    Option>    tokens    =    new    ArrayList    <    Option>(tokens);    	non-compiled	[CE]  cannot  find  symbol	51	None	replace
105	[BUG]  [BUGGY]          tokens.clear();    ArrayList  <  Option>  tokens  =  new  ArrayList  <  Option>();  tokens.clear();  ArrayList  <  Option>  tokens  =  new  ArrayList  <  Option>();  [CE]  variable  tokens  is  already  defined  in  method  init()  [FE]    UnrecognizedOptionException    [CONTEXT]      private  void  init()  {  eatTheRest  =  false;  tokens.clear();      [BUGGY]          tokens.clear();    ArrayList  <  Option>  tokens  =  new  ArrayList  <  Option>();  tokens.clear();  ArrayList  <  Option>  tokens  =  new  ArrayList  <  Option>();  [BUGGY]      currentOption  =  null;  }  [CLASS]  PosixParser  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  ArrayList  tokens  Options  options  Option  currentOption  boolean  eatTheRest  	projects/Cli2/src/java/org/apache/commons/cli/PosixParser.java	1.0	53	53	1	replace	                tokens.clear();        ArrayList    <    Option>    tokens    =    new    ArrayList    <    Option>();    tokens.clear();  ArrayList  <  Option>  tokens  =  new  ArrayList  <  Option>();	  	non-compiled	[CE]  variable  tokens  is  already  defined  in  method  init()	62	None	add
106	[BUG]  [BUGGY]          tokens.clear();    ArrayList  <  Option>  tokens  =  new  ArrayList  <  Option>();  tokens.clear();  ArrayList  <  Option>>  tokens  =  new  ArrayList  <  Option>();  [CE]  not  a  statement  [FE]      UnrecognizedOptionException    [CONTEXT]      private  void  init()  {  eatTheRest  =  false;  tokens.clear();      [BUGGY]          tokens.clear();    ArrayList  <  Option>  tokens  =  new  ArrayList  <  Option>();  tokens.clear();  ArrayList  <  Option>>  tokens  =  new  ArrayList  <  Option>();  [BUGGY]      currentOption  =  null;  }  [CLASS]  PosixParser  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  ArrayList  tokens  Options  options  Option  currentOption  boolean  eatTheRest  	projects/Cli2/src/java/org/apache/commons/cli/PosixParser.java	1.0	53	53	1	replace	                tokens.clear();        ArrayList    <    Option>    tokens    =    new    ArrayList    <    Option>();    tokens.clear();  ArrayList  <  Option>>  tokens  =  new  ArrayList  <  Option>();	  	non-compiled	[CE]  not  a  statement	62	None	add
107	[BUG]  [BUGGY]          tokens.clear();    ArrayList  <  Option>  tokens  =  new  ArrayList  <  Option>();  ArrayList  <  Option>  tokens  =  new  ArrayList  <  Option>();  [CE]  variable  tokens  is  already  defined  in  method  init()  [FE]        UnrecognizedOptionException    [CONTEXT]      private  void  init()  {  eatTheRest  =  false;  tokens.clear();      [BUGGY]          tokens.clear();    ArrayList  <  Option>  tokens  =  new  ArrayList  <  Option>();  ArrayList  <  Option>  tokens  =  new  ArrayList  <  Option>();  [BUGGY]      currentOption  =  null;  }  [CLASS]  PosixParser  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  ArrayList  tokens  Options  options  Option  currentOption  boolean  eatTheRest  	projects/Cli2/src/java/org/apache/commons/cli/PosixParser.java	1.0	53	53	1	replace	                tokens.clear();        ArrayList    <    Option>    tokens    =    new    ArrayList    <    Option>();    ArrayList  <  Option>  tokens  =  new  ArrayList  <  Option>();	  	non-compiled	[CE]  variable  tokens  is  already  defined  in  method  init()	62	None	add
108	[BUG]  [BUGGY]  [FE]  UnrecognizedOptionException  [FE]          UnrecognizedOptionException    [CONTEXT]      private  void  init()  {  eatTheRest  =  false;  tokens.clear();      [BUGGY]          tokens.clear();    ArrayList  <  Option>  tokens  =  new  ArrayList  <  Option>();  tokens.clear();  [BUGGY]      currentOption  =  null;  }  [CLASS]  PosixParser  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  ArrayList  tokens  Options  options  Option  currentOption  boolean  eatTheRest  	projects/Cli2/src/java/org/apache/commons/cli/PosixParser.java	1.0	53	53	1	add	                tokens.clear();        ArrayList    <    Option>    tokens    =    new    ArrayList    <    Option>();    tokens.clear();	  	compilable	  [FE]  UnrecognizedOptionException  	62	1	add
109	[BUG]  [BUGGY]          tokens.clear();    ArrayList  <  Option>  tokens  =  new  ArrayList  <  Option>();  tokens.clear();  [FE]  UnrecognizedOptionException  [FE]          UnrecognizedOptionException    [CONTEXT]      private  void  init()  {  eatTheRest  =  false;  tokens.clear();      [BUGGY]          tokens.clear();    ArrayList  <  Option>  tokens  =  new  ArrayList  <  Option>();  tokens.clear();  [BUGGY]      currentOption  =  null;  }  [CLASS]  PosixParser  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  ArrayList  tokens  Options  options  Option  currentOption  boolean  eatTheRest  	projects/Cli2/src/java/org/apache/commons/cli/PosixParser.java	1.0	53	53	1	replace	                tokens.clear();        ArrayList    <    Option>    tokens    =    new    ArrayList    <    Option>();    tokens.clear();	  	compilable	  [FE]  UnrecognizedOptionException  	62	1	add
110	[BUG]  [BUGGY]  [FE]  UnrecognizedOptionException  [FE]            UnrecognizedOptionException    [CONTEXT]      private  void  init()  {  eatTheRest  =  false;  tokens.clear();      [BUGGY]          tokens.clear();    ArrayList  <  Option>  tokens  =  new  ArrayList  <  Option>();  tokens.clear();  ArrayList  <  Option>  options  =  new  ArrayList  <  Option>();  [BUGGY]      currentOption  =  null;  }  [CLASS]  PosixParser  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  ArrayList  tokens  Options  options  Option  currentOption  boolean  eatTheRest  	projects/Cli2/src/java/org/apache/commons/cli/PosixParser.java	1.0	53	53	1	add	                tokens.clear();        ArrayList    <    Option>    tokens    =    new    ArrayList    <    Option>();    tokens.clear();  ArrayList  <  Option>  options  =  new  ArrayList  <  Option>();	  	compilable	  [FE]  UnrecognizedOptionException  	62	1	add
111	[BUG]  [BUGGY]          tokens.clear();    ArrayList  <  Option>  tokens  =  new  ArrayList  <  Option>();  tokens.clear();  ArrayList  <  Option>  options  =  new  ArrayList  <  Option>();  [FE]  UnrecognizedOptionException  [FE]            UnrecognizedOptionException    [CONTEXT]      private  void  init()  {  eatTheRest  =  false;  tokens.clear();      [BUGGY]          tokens.clear();    ArrayList  <  Option>  tokens  =  new  ArrayList  <  Option>();  tokens.clear();  ArrayList  <  Option>  options  =  new  ArrayList  <  Option>();  [BUGGY]      currentOption  =  null;  }  [CLASS]  PosixParser  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  ArrayList  tokens  Options  options  Option  currentOption  boolean  eatTheRest  	projects/Cli2/src/java/org/apache/commons/cli/PosixParser.java	1.0	53	53	1	replace	                tokens.clear();        ArrayList    <    Option>    tokens    =    new    ArrayList    <    Option>();    tokens.clear();  ArrayList  <  Option>  options  =  new  ArrayList  <  Option>();	  	compilable	  [FE]  UnrecognizedOptionException  	62	1	add
112	[BUG]  [BUGGY]  [FE]  UnrecognizedOptionException  [FE]    UnrecognizedOptionException    [CONTEXT]      private  void  init()  {  eatTheRest  =  false;  tokens.clear();      [BUGGY]  if(!eatTheRest)  {  eatTheRest  =  false;  tokens.clear();  Option  currentOption  =  null;  }  [BUGGY]      currentOption  =  null;  }  [CLASS]  PosixParser  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  ArrayList  tokens  Options  options  Option  currentOption  boolean  eatTheRest  	projects/Cli2/src/java/org/apache/commons/cli/PosixParser.java	1.0	53	53	1	add	if(!eatTheRest)  {  eatTheRest  =  false;  tokens.clear();  Option  currentOption  =  null;  }	          eatTheRest    =    false;    tokens.clear();    Option    currentOption    =    null;    	compilable	  [FE]  UnrecognizedOptionException  	132	1	replace
113	[BUG]  [BUGGY]  if(!eatTheRest)  {  eatTheRest  =  false;  tokens.clear();  Option  currentOption  =  null;  }  [FE]  UnrecognizedOptionException  [FE]    UnrecognizedOptionException    [CONTEXT]      private  void  init()  {  eatTheRest  =  false;  tokens.clear();      [BUGGY]  if(!eatTheRest)  {  eatTheRest  =  false;  tokens.clear();  Option  currentOption  =  null;  }  [BUGGY]      currentOption  =  null;  }  [CLASS]  PosixParser  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  ArrayList  tokens  Options  options  Option  currentOption  boolean  eatTheRest  	projects/Cli2/src/java/org/apache/commons/cli/PosixParser.java	1.0	53	53	1	replace	if(!eatTheRest)  {  eatTheRest  =  false;  tokens.clear();  Option  currentOption  =  null;  }	          eatTheRest    =    false;    tokens.clear();    Option    currentOption    =    null;    	compilable	  [FE]  UnrecognizedOptionException  	132	1	replace
114	[BUG]  [BUGGY]  [FE]  UnrecognizedOptionException  [FE]      UnrecognizedOptionException    [CONTEXT]      private  void  init()  {  eatTheRest  =  false;  tokens.clear();      [BUGGY]  tokens.clear();  Option  currentOption  =  null;  [BUGGY]      currentOption  =  null;  }  [CLASS]  PosixParser  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  ArrayList  tokens  Options  options  Option  currentOption  boolean  eatTheRest  	projects/Cli2/src/java/org/apache/commons/cli/PosixParser.java	1.0	53	53	1	add	tokens.clear();  Option  currentOption  =  null;	          eatTheRest    =    false;    tokens.clear();    Option    currentOption    =    null;    	compilable	  [FE]  UnrecognizedOptionException  	132	1	replace
115	[BUG]  [BUGGY]  tokens.clear();  Option  currentOption  =  null;  [FE]  UnrecognizedOptionException  [FE]      UnrecognizedOptionException    [CONTEXT]      private  void  init()  {  eatTheRest  =  false;  tokens.clear();      [BUGGY]  tokens.clear();  Option  currentOption  =  null;  [BUGGY]      currentOption  =  null;  }  [CLASS]  PosixParser  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  ArrayList  tokens  Options  options  Option  currentOption  boolean  eatTheRest  	projects/Cli2/src/java/org/apache/commons/cli/PosixParser.java	1.0	53	53	1	replace	tokens.clear();  Option  currentOption  =  null;	          eatTheRest    =    false;    tokens.clear();    Option    currentOption    =    null;    	compilable	  [FE]  UnrecognizedOptionException  	132	1	replace
116	[BUG]  [BUGGY]  [FE]  UnrecognizedOptionException  [FE]        UnrecognizedOptionException    [CONTEXT]      private  void  init()  {  eatTheRest  =  false;  tokens.clear();      [BUGGY]  if(tokens!=  null)  {  eatTheRest  =  false;  tokens.clear();  Option  currentOption  =  null;  }  [BUGGY]      currentOption  =  null;  }  [CLASS]  PosixParser  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  ArrayList  tokens  Options  options  Option  currentOption  boolean  eatTheRest  	projects/Cli2/src/java/org/apache/commons/cli/PosixParser.java	1.0	53	53	1	add	if(tokens!=  null)  {  eatTheRest  =  false;  tokens.clear();  Option  currentOption  =  null;  }	          eatTheRest    =    false;    tokens.clear();    Option    currentOption    =    null;    	compilable	  [FE]  UnrecognizedOptionException  	132	1	replace
117	[BUG]  [BUGGY]  if(tokens!=  null)  {  eatTheRest  =  false;  tokens.clear();  Option  currentOption  =  null;  }  [FE]  UnrecognizedOptionException  [FE]        UnrecognizedOptionException    [CONTEXT]      private  void  init()  {  eatTheRest  =  false;  tokens.clear();      [BUGGY]  if(tokens!=  null)  {  eatTheRest  =  false;  tokens.clear();  Option  currentOption  =  null;  }  [BUGGY]      currentOption  =  null;  }  [CLASS]  PosixParser  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  ArrayList  tokens  Options  options  Option  currentOption  boolean  eatTheRest  	projects/Cli2/src/java/org/apache/commons/cli/PosixParser.java	1.0	53	53	1	replace	if(tokens!=  null)  {  eatTheRest  =  false;  tokens.clear();  Option  currentOption  =  null;  }	          eatTheRest    =    false;    tokens.clear();    Option    currentOption    =    null;    	compilable	  [FE]  UnrecognizedOptionException  	132	1	replace
118	[BUG]  [BUGGY]  Option  currentOption  =  options.getOption(this,  tokens,  eatTheRest);  [CE]  method  getOption  in  class  Options  cannot  be  applied  to  given  types;  [FE]                UnrecognizedOptionException      [CONTEXT]      private  void  init()  {  eatTheRest  =  false;  tokens.clear();      [BUGGY]  Option  currentOption  =  options.getOption(this,  tokens,  eatTheRest);  [BUGGY]      currentOption  =  null;  }  [CLASS]  PosixParser  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  ArrayList  tokens  Options  options  Option  currentOption  boolean  eatTheRest  	projects/Cli2/src/java/org/apache/commons/cli/PosixParser.java	1.0	53	53	1	replace	Option  currentOption  =  options.getOption(this,  tokens,  eatTheRest);	  Option    currentOption    =    options.getOption(this,    tokens);    	non-compiled	[CE]  method  getOption  in  class  Options  cannot  be  applied  to  given  types;	67	None	replace
119	[BUG]  [BUGGY]  Option  currentOption  =  options.getOption(this,  tokens,  false);  [CE]  method  getOption  in  class  Options  cannot  be  applied  to  given  types;  [FE]                  UnrecognizedOptionException      [CONTEXT]      private  void  init()  {  eatTheRest  =  false;  tokens.clear();      [BUGGY]  Option  currentOption  =  options.getOption(this,  tokens,  false);  [BUGGY]      currentOption  =  null;  }  [CLASS]  PosixParser  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  ArrayList  tokens  Options  options  Option  currentOption  boolean  eatTheRest  	projects/Cli2/src/java/org/apache/commons/cli/PosixParser.java	1.0	53	53	1	replace	Option  currentOption  =  options.getOption(this,  tokens,  false);	  Option    currentOption    =    options.getOption(this,    tokens);    	non-compiled	[CE]  method  getOption  in  class  Options  cannot  be  applied  to  given  types;	67	None	replace
120	[BUG]  [BUGGY]  Option  currentOption  =  options.getOption(this,  tokens,  null);  [CE]  method  getOption  in  class  Options  cannot  be  applied  to  given  types;  [FE]                    UnrecognizedOptionException      [CONTEXT]      private  void  init()  {  eatTheRest  =  false;  tokens.clear();      [BUGGY]  Option  currentOption  =  options.getOption(this,  tokens,  null);  [BUGGY]      currentOption  =  null;  }  [CLASS]  PosixParser  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  ArrayList  tokens  Options  options  Option  currentOption  boolean  eatTheRest  	projects/Cli2/src/java/org/apache/commons/cli/PosixParser.java	1.0	53	53	1	replace	Option  currentOption  =  options.getOption(this,  tokens,  null);	  Option    currentOption    =    options.getOption(this,    tokens);    	non-compiled	[CE]  method  getOption  in  class  Options  cannot  be  applied  to  given  types;	67	None	replace
121	[BUG]  [BUGGY]  Option  currentOption  =  options.getOption(this,  tokens,  true);  [CE]  method  getOption  in  class  Options  cannot  be  applied  to  given  types;  [FE]                      UnrecognizedOptionException      [CONTEXT]      private  void  init()  {  eatTheRest  =  false;  tokens.clear();      [BUGGY]  Option  currentOption  =  options.getOption(this,  tokens,  true);  [BUGGY]      currentOption  =  null;  }  [CLASS]  PosixParser  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  ArrayList  tokens  Options  options  Option  currentOption  boolean  eatTheRest  	projects/Cli2/src/java/org/apache/commons/cli/PosixParser.java	1.0	53	53	1	replace	Option  currentOption  =  options.getOption(this,  tokens,  true);	  Option    currentOption    =    options.getOption(this,    tokens);    	non-compiled	[CE]  method  getOption  in  class  Options  cannot  be  applied  to  given  types;	67	None	replace
122	[BUG]  [BUGGY]  ArrayList  <  Option>  tokens  =  new  ArrayList  <  Option>(tokens.size());  new  ArrayList  <  Option>();  [CE]  variable  tokens  might  not  have  been  initialized  [FE]    UnrecognizedOptionException    [CONTEXT]      private  void  init()  {  eatTheRest  =  false;  tokens.clear();      [BUGGY]  ArrayList  <  Option>  tokens  =  new  ArrayList  <  Option>(tokens.size());  new  ArrayList  <  Option>();  [BUGGY]      currentOption  =  null;  }  [CLASS]  PosixParser  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  ArrayList  tokens  Options  options  Option  currentOption  boolean  eatTheRest  	projects/Cli2/src/java/org/apache/commons/cli/PosixParser.java	1.0	53	53	1	replace	ArrayList  <  Option>  tokens  =  new  ArrayList  <  Option>(tokens.size());  new  ArrayList  <  Option>();	          ArrayList    <    Option>    tokens    =    new    ArrayList    <    Option>();    new    ArrayList    <    Option>();    	non-compiled	[CE]  variable  tokens  might  not  have  been  initialized	46	None	replace
123	[BUG]  [BUGGY]  [FE]  UnrecognizedOptionException  [FE]      UnrecognizedOptionException    [CONTEXT]      private  void  init()  {  eatTheRest  =  false;  tokens.clear();      [BUGGY]  ArrayList  <  Option>  tokens  =  new  ArrayList  <  Option>(1);  new  ArrayList  <  Option>();  [BUGGY]      currentOption  =  null;  }  [CLASS]  PosixParser  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  ArrayList  tokens  Options  options  Option  currentOption  boolean  eatTheRest  	projects/Cli2/src/java/org/apache/commons/cli/PosixParser.java	1.0	53	53	1	add	ArrayList  <  Option>  tokens  =  new  ArrayList  <  Option>(1);  new  ArrayList  <  Option>();	          ArrayList    <    Option>    tokens    =    new    ArrayList    <    Option>();    new    ArrayList    <    Option>();    	compilable	  [FE]  UnrecognizedOptionException  	46	1	replace
124	[BUG]  [BUGGY]  ArrayList  <  Option>  tokens  =  new  ArrayList  <  Option>(1);  new  ArrayList  <  Option>();  [FE]  UnrecognizedOptionException  [FE]      UnrecognizedOptionException    [CONTEXT]      private  void  init()  {  eatTheRest  =  false;  tokens.clear();      [BUGGY]  ArrayList  <  Option>  tokens  =  new  ArrayList  <  Option>(1);  new  ArrayList  <  Option>();  [BUGGY]      currentOption  =  null;  }  [CLASS]  PosixParser  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  ArrayList  tokens  Options  options  Option  currentOption  boolean  eatTheRest  	projects/Cli2/src/java/org/apache/commons/cli/PosixParser.java	1.0	53	53	1	replace	ArrayList  <  Option>  tokens  =  new  ArrayList  <  Option>(1);  new  ArrayList  <  Option>();	          ArrayList    <    Option>    tokens    =    new    ArrayList    <    Option>();    new    ArrayList    <    Option>();    	compilable	  [FE]  UnrecognizedOptionException  	46	1	replace
125	[BUG]  [BUGGY]  List  <  Option>  tokens  =  new  ArrayList  <  Option>();  new  ArrayList  <  Option>();  [CE]  cannot  find  symbol  [FE]        UnrecognizedOptionException    [CONTEXT]      private  void  init()  {  eatTheRest  =  false;  tokens.clear();      [BUGGY]  List  <  Option>  tokens  =  new  ArrayList  <  Option>();  new  ArrayList  <  Option>();  [BUGGY]      currentOption  =  null;  }  [CLASS]  PosixParser  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  ArrayList  tokens  Options  options  Option  currentOption  boolean  eatTheRest  	projects/Cli2/src/java/org/apache/commons/cli/PosixParser.java	1.0	53	53	1	replace	List  <  Option>  tokens  =  new  ArrayList  <  Option>();  new  ArrayList  <  Option>();	          ArrayList    <    Option>    tokens    =    new    ArrayList    <    Option>();    new    ArrayList    <    Option>();    	non-compiled	[CE]  cannot  find  symbol	46	None	replace
126	[BUG]  [BUGGY]  [FE]  UnrecognizedOptionException  [FE]    UnrecognizedOptionException    [CONTEXT]      private  void  init()  {  eatTheRest  =  false;  tokens.clear();      [BUGGY]  currentOption    =    Option.OK_STANDARD;    ArrayList  <  Option>  tokens  =  new  ArrayList  <  Option>(tokens.size());  ArrayList  <  Option>  tokens  =  new  ArrayList  <  Option>(tokens.size());  [BUGGY]      }  [CLASS]  PosixParser  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  ArrayList  tokens  Options  options  Option  currentOption  boolean  eatTheRest  	projects/Cli2/src/java/org/apache/commons/cli/PosixParser.java	1.0	53	53	1	add	currentOption        =        Option.OK_STANDARD;        ArrayList    <    Option>    tokens    =    new    ArrayList    <    Option>(tokens.size());    ArrayList  <  Option>  tokens  =  new  ArrayList  <  Option>(tokens.size());	  	compilable	  [FE]  UnrecognizedOptionException  	81	1	add
127	[BUG]  [BUGGY]  currentOption    =    Option.OK_STANDARD;    ArrayList  <  Option>  tokens  =  new  ArrayList  <  Option>(tokens.size());  ArrayList  <  Option>  tokens  =  new  ArrayList  <  Option>(tokens.size());  [FE]  UnrecognizedOptionException  [FE]    UnrecognizedOptionException    [CONTEXT]      private  void  init()  {  eatTheRest  =  false;  tokens.clear();      [BUGGY]  currentOption    =    Option.OK_STANDARD;    ArrayList  <  Option>  tokens  =  new  ArrayList  <  Option>(tokens.size());  ArrayList  <  Option>  tokens  =  new  ArrayList  <  Option>(tokens.size());  [BUGGY]      }  [CLASS]  PosixParser  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  ArrayList  tokens  Options  options  Option  currentOption  boolean  eatTheRest  	projects/Cli2/src/java/org/apache/commons/cli/PosixParser.java	1.0	53	53	1	replace	currentOption        =        Option.OK_STANDARD;        ArrayList    <    Option>    tokens    =    new    ArrayList    <    Option>(tokens.size());    ArrayList  <  Option>  tokens  =  new  ArrayList  <  Option>(tokens.size());	  	compilable	  [FE]  UnrecognizedOptionException  	81	1	add
128	[BUG]  [BUGGY]  [FE]  UnrecognizedOptionException  [FE]      UnrecognizedOptionException    [CONTEXT]      private  void  init()  {  eatTheRest  =  false;  tokens.clear();      [BUGGY]  currentOption    =    Option.OK_STANDARD;    ArrayList  <  Option>  tokens  =  new  ArrayList  <  Option>(tokens.size());  ArrayList  <  Option>  tokens  =  new  ArrayList  <  Option>(tokens.size());  currentOption  =  Option.OK_STANDARD;  [BUGGY]      }  [CLASS]  PosixParser  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  ArrayList  tokens  Options  options  Option  currentOption  boolean  eatTheRest  	projects/Cli2/src/java/org/apache/commons/cli/PosixParser.java	1.0	53	53	1	add	currentOption        =        Option.OK_STANDARD;        ArrayList    <    Option>    tokens    =    new    ArrayList    <    Option>(tokens.size());    ArrayList  <  Option>  tokens  =  new  ArrayList  <  Option>(tokens.size());  currentOption  =  Option.OK_STANDARD;	  	compilable	  [FE]  UnrecognizedOptionException  	81	1	add
129	[BUG]  [BUGGY]  currentOption    =    Option.OK_STANDARD;    ArrayList  <  Option>  tokens  =  new  ArrayList  <  Option>(tokens.size());  ArrayList  <  Option>  tokens  =  new  ArrayList  <  Option>(tokens.size());  currentOption  =  Option.OK_STANDARD;  [FE]  UnrecognizedOptionException  [FE]      UnrecognizedOptionException    [CONTEXT]      private  void  init()  {  eatTheRest  =  false;  tokens.clear();      [BUGGY]  currentOption    =    Option.OK_STANDARD;    ArrayList  <  Option>  tokens  =  new  ArrayList  <  Option>(tokens.size());  ArrayList  <  Option>  tokens  =  new  ArrayList  <  Option>(tokens.size());  currentOption  =  Option.OK_STANDARD;  [BUGGY]      }  [CLASS]  PosixParser  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  ArrayList  tokens  Options  options  Option  currentOption  boolean  eatTheRest  	projects/Cli2/src/java/org/apache/commons/cli/PosixParser.java	1.0	53	53	1	replace	currentOption        =        Option.OK_STANDARD;        ArrayList    <    Option>    tokens    =    new    ArrayList    <    Option>(tokens.size());    ArrayList  <  Option>  tokens  =  new  ArrayList  <  Option>(tokens.size());  currentOption  =  Option.OK_STANDARD;	  	compilable	  [FE]  UnrecognizedOptionException  	81	1	add
130	[BUG]  [BUGGY]  [FE]  UnrecognizedOptionException  [FE]        UnrecognizedOptionException    [CONTEXT]      private  void  init()  {  eatTheRest  =  false;  tokens.clear();      [BUGGY]  currentOption    =    Option.OK_STANDARD;    ArrayList  <  Option>  tokens  =  new  ArrayList  <  Option>(tokens.size());  currentOption  =  Option.OK_STANDARD;  [BUGGY]      }  [CLASS]  PosixParser  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  ArrayList  tokens  Options  options  Option  currentOption  boolean  eatTheRest  	projects/Cli2/src/java/org/apache/commons/cli/PosixParser.java	1.0	53	53	1	add	currentOption        =        Option.OK_STANDARD;        ArrayList    <    Option>    tokens    =    new    ArrayList    <    Option>(tokens.size());    currentOption  =  Option.OK_STANDARD;	  	compilable	  [FE]  UnrecognizedOptionException  	81	1	add
131	[BUG]  [BUGGY]  currentOption    =    Option.OK_STANDARD;    ArrayList  <  Option>  tokens  =  new  ArrayList  <  Option>(tokens.size());  currentOption  =  Option.OK_STANDARD;  [FE]  UnrecognizedOptionException  [FE]        UnrecognizedOptionException    [CONTEXT]      private  void  init()  {  eatTheRest  =  false;  tokens.clear();      [BUGGY]  currentOption    =    Option.OK_STANDARD;    ArrayList  <  Option>  tokens  =  new  ArrayList  <  Option>(tokens.size());  currentOption  =  Option.OK_STANDARD;  [BUGGY]      }  [CLASS]  PosixParser  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  ArrayList  tokens  Options  options  Option  currentOption  boolean  eatTheRest  	projects/Cli2/src/java/org/apache/commons/cli/PosixParser.java	1.0	53	53	1	replace	currentOption        =        Option.OK_STANDARD;        ArrayList    <    Option>    tokens    =    new    ArrayList    <    Option>(tokens.size());    currentOption  =  Option.OK_STANDARD;	  	compilable	  [FE]  UnrecognizedOptionException  	81	1	add
132	[BUG]  [BUGGY]  [FE]  UnrecognizedOptionException  [FE]          UnrecognizedOptionException    [CONTEXT]      private  void  init()  {  eatTheRest  =  false;  tokens.clear();      [BUGGY]  currentOption    =    Option.OK_STANDARD;    ArrayList  <  Option>  tokens  =  new  ArrayList  <  Option>(tokens.size());  if(currentOption!=  null)  {  currentOption  =  Option.OK_STANDARD;  tokens.clear();  }  [BUGGY]      }  [CLASS]  PosixParser  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  ArrayList  tokens  Options  options  Option  currentOption  boolean  eatTheRest  	projects/Cli2/src/java/org/apache/commons/cli/PosixParser.java	1.0	53	53	1	add	currentOption        =        Option.OK_STANDARD;        ArrayList    <    Option>    tokens    =    new    ArrayList    <    Option>(tokens.size());    if(currentOption!=  null)  {  currentOption  =  Option.OK_STANDARD;  tokens.clear();  }	  	compilable	  [FE]  UnrecognizedOptionException  	81	1	add
133	[BUG]  [BUGGY]  currentOption    =    Option.OK_STANDARD;    ArrayList  <  Option>  tokens  =  new  ArrayList  <  Option>(tokens.size());  if(currentOption!=  null)  {  currentOption  =  Option.OK_STANDARD;  tokens.clear();  }  [FE]  UnrecognizedOptionException  [FE]          UnrecognizedOptionException    [CONTEXT]      private  void  init()  {  eatTheRest  =  false;  tokens.clear();      [BUGGY]  currentOption    =    Option.OK_STANDARD;    ArrayList  <  Option>  tokens  =  new  ArrayList  <  Option>(tokens.size());  if(currentOption!=  null)  {  currentOption  =  Option.OK_STANDARD;  tokens.clear();  }  [BUGGY]      }  [CLASS]  PosixParser  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  ArrayList  tokens  Options  options  Option  currentOption  boolean  eatTheRest  	projects/Cli2/src/java/org/apache/commons/cli/PosixParser.java	1.0	53	53	1	replace	currentOption        =        Option.OK_STANDARD;        ArrayList    <    Option>    tokens    =    new    ArrayList    <    Option>(tokens.size());    if(currentOption!=  null)  {  currentOption  =  Option.OK_STANDARD;  tokens.clear();  }	  	compilable	  [FE]  UnrecognizedOptionException  	81	1	add
134	[BUG]  [BUGGY]  [FE]  UnrecognizedOptionException  [FE]            UnrecognizedOptionException    [CONTEXT]      private  void  init()  {  eatTheRest  =  false;  tokens.clear();      [BUGGY]  currentOption    =    Option.OK_STANDARD;    ArrayList  <  Option>  tokens  =  new  ArrayList  <  Option>(tokens.size());  if(currentOption  ==  null)  {  currentOption  =  Option.OK_STANDARD;  tokens.clear();  }  [BUGGY]      }  [CLASS]  PosixParser  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  ArrayList  tokens  Options  options  Option  currentOption  boolean  eatTheRest  	projects/Cli2/src/java/org/apache/commons/cli/PosixParser.java	1.0	53	53	1	add	currentOption        =        Option.OK_STANDARD;        ArrayList    <    Option>    tokens    =    new    ArrayList    <    Option>(tokens.size());    if(currentOption  ==  null)  {  currentOption  =  Option.OK_STANDARD;  tokens.clear();  }	  	compilable	  [FE]  UnrecognizedOptionException  	81	1	add
135	[BUG]  [BUGGY]  currentOption    =    Option.OK_STANDARD;    ArrayList  <  Option>  tokens  =  new  ArrayList  <  Option>(tokens.size());  if(currentOption  ==  null)  {  currentOption  =  Option.OK_STANDARD;  tokens.clear();  }  [FE]  UnrecognizedOptionException  [FE]            UnrecognizedOptionException    [CONTEXT]      private  void  init()  {  eatTheRest  =  false;  tokens.clear();      [BUGGY]  currentOption    =    Option.OK_STANDARD;    ArrayList  <  Option>  tokens  =  new  ArrayList  <  Option>(tokens.size());  if(currentOption  ==  null)  {  currentOption  =  Option.OK_STANDARD;  tokens.clear();  }  [BUGGY]      }  [CLASS]  PosixParser  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  ArrayList  tokens  Options  options  Option  currentOption  boolean  eatTheRest  	projects/Cli2/src/java/org/apache/commons/cli/PosixParser.java	1.0	53	53	1	replace	currentOption        =        Option.OK_STANDARD;        ArrayList    <    Option>    tokens    =    new    ArrayList    <    Option>(tokens.size());    if(currentOption  ==  null)  {  currentOption  =  Option.OK_STANDARD;  tokens.clear();  }	  	compilable	  [FE]  UnrecognizedOptionException  	81	1	add
136	[BUG]  [BUGGY]  ArrayList  <  Option>  tokens  =  new  ArrayList  <  Option>();  currentOption  =  options.getOption(this,  tokens);  [CE]  method  getOption  in  class  Options  cannot  be  applied  to  given  types;  [FE]        UnrecognizedOptionException      [CONTEXT]      private  void  init()  {  eatTheRest  =  false;  tokens.clear();      [BUGGY]  ArrayList  <  Option>  tokens  =  new  ArrayList  <  Option>();  currentOption  =  options.getOption(this,  tokens);  [BUGGY]      currentOption  =  null;  }  [CLASS]  PosixParser  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  ArrayList  tokens  Options  options  Option  currentOption  boolean  eatTheRest  	projects/Cli2/src/java/org/apache/commons/cli/PosixParser.java	1.0	53	53	1	replace	ArrayList  <  Option>  tokens  =  new  ArrayList  <  Option>();  currentOption  =  options.getOption(this,  tokens);	          ArrayList    <    Option>    tokens    =    new    ArrayList    <    Option>();    Option    currentOption    =    options.getOption(this);    	non-compiled	[CE]  method  getOption  in  class  Options  cannot  be  applied  to  given  types;	108	None	replace
137	[BUG]  [BUGGY]  ArrayList  <  Option>  tokens  =  new  ArrayList  <  Option>();  currentOption  =  options.getOption(this);  [CE]  method  getOption  in  class  Options  cannot  be  applied  to  given  types;  [FE]          UnrecognizedOptionException      [CONTEXT]      private  void  init()  {  eatTheRest  =  false;  tokens.clear();      [BUGGY]  ArrayList  <  Option>  tokens  =  new  ArrayList  <  Option>();  currentOption  =  options.getOption(this);  [BUGGY]      currentOption  =  null;  }  [CLASS]  PosixParser  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  ArrayList  tokens  Options  options  Option  currentOption  boolean  eatTheRest  	projects/Cli2/src/java/org/apache/commons/cli/PosixParser.java	1.0	53	53	1	replace	ArrayList  <  Option>  tokens  =  new  ArrayList  <  Option>();  currentOption  =  options.getOption(this);	          ArrayList    <    Option>    tokens    =    new    ArrayList    <    Option>();    Option    currentOption    =    options.getOption(this);    	non-compiled	[CE]  method  getOption  in  class  Options  cannot  be  applied  to  given  types;	108	None	replace
138	[BUG]  [BUGGY]  [FE]  UnrecognizedOptionException  [FE]    UnrecognizedOptionException    [CONTEXT]      private  void  init()  {  eatTheRest  =  false;  tokens.clear();      [BUGGY]          eatTheRest    =    false;    tokens.clear();    tokens.clear();  eatTheRest  =  false;  tokens.clear();  eatTheRest  =  false;  tokens.clear();  tokens.clear();  [BUGGY]      currentOption  =  null;  }  [CLASS]  PosixParser  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  ArrayList  tokens  Options  options  Option  currentOption  boolean  eatTheRest  	projects/Cli2/src/java/org/apache/commons/cli/PosixParser.java	1.0	53	53	1	add	                eatTheRest        =        false;        tokens.clear();        tokens.clear();    eatTheRest    =    false;    tokens.clear();    eatTheRest  =  false;  tokens.clear();  tokens.clear();	  	compilable	  [FE]  UnrecognizedOptionException  	6	1	add
139	[BUG]  [BUGGY]          eatTheRest    =    false;    tokens.clear();    tokens.clear();  eatTheRest  =  false;  tokens.clear();  eatTheRest  =  false;  tokens.clear();  tokens.clear();  [FE]  UnrecognizedOptionException  [FE]    UnrecognizedOptionException    [CONTEXT]      private  void  init()  {  eatTheRest  =  false;  tokens.clear();      [BUGGY]          eatTheRest    =    false;    tokens.clear();    tokens.clear();  eatTheRest  =  false;  tokens.clear();  eatTheRest  =  false;  tokens.clear();  tokens.clear();  [BUGGY]      currentOption  =  null;  }  [CLASS]  PosixParser  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  ArrayList  tokens  Options  options  Option  currentOption  boolean  eatTheRest  	projects/Cli2/src/java/org/apache/commons/cli/PosixParser.java	1.0	53	53	1	replace	                eatTheRest        =        false;        tokens.clear();        tokens.clear();    eatTheRest    =    false;    tokens.clear();    eatTheRest  =  false;  tokens.clear();  tokens.clear();	  	compilable	  [FE]  UnrecognizedOptionException  	6	1	add
140	[BUG]  [BUGGY]  [FE]  UnrecognizedOptionException  [FE]      UnrecognizedOptionException    [CONTEXT]      private  void  init()  {  eatTheRest  =  false;  tokens.clear();      [BUGGY]          eatTheRest    =    false;    tokens.clear();    tokens.clear();  eatTheRest  =  false;  tokens.clear();  eatTheRest  =  false;  tokens.clear();  [BUGGY]      currentOption  =  null;  }  [CLASS]  PosixParser  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  ArrayList  tokens  Options  options  Option  currentOption  boolean  eatTheRest  	projects/Cli2/src/java/org/apache/commons/cli/PosixParser.java	1.0	53	53	1	add	                eatTheRest        =        false;        tokens.clear();        tokens.clear();    eatTheRest    =    false;    tokens.clear();    eatTheRest  =  false;  tokens.clear();	  	compilable	  [FE]  UnrecognizedOptionException  	6	1	add
141	[BUG]  [BUGGY]          eatTheRest    =    false;    tokens.clear();    tokens.clear();  eatTheRest  =  false;  tokens.clear();  eatTheRest  =  false;  tokens.clear();  [FE]  UnrecognizedOptionException  [FE]      UnrecognizedOptionException    [CONTEXT]      private  void  init()  {  eatTheRest  =  false;  tokens.clear();      [BUGGY]          eatTheRest    =    false;    tokens.clear();    tokens.clear();  eatTheRest  =  false;  tokens.clear();  eatTheRest  =  false;  tokens.clear();  [BUGGY]      currentOption  =  null;  }  [CLASS]  PosixParser  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  ArrayList  tokens  Options  options  Option  currentOption  boolean  eatTheRest  	projects/Cli2/src/java/org/apache/commons/cli/PosixParser.java	1.0	53	53	1	replace	                eatTheRest        =        false;        tokens.clear();        tokens.clear();    eatTheRest    =    false;    tokens.clear();    eatTheRest  =  false;  tokens.clear();	  	compilable	  [FE]  UnrecognizedOptionException  	6	1	add
142	[BUG]  [BUGGY]  [FE]  UnrecognizedOptionException  [FE]        UnrecognizedOptionException    [CONTEXT]      private  void  init()  {  eatTheRest  =  false;  tokens.clear();      [BUGGY]          eatTheRest    =    false;    tokens.clear();    tokens.clear();  eatTheRest  =  false;  tokens.clear();  if(currentOption!=  null)  {  eatTheRest  =  false;  tokens.clear();  tokens.clear();  eatTheRest  =  false;  tokens.clear();  }  [BUGGY]      currentOption  =  null;  }  [CLASS]  PosixParser  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  ArrayList  tokens  Options  options  Option  currentOption  boolean  eatTheRest  	projects/Cli2/src/java/org/apache/commons/cli/PosixParser.java	1.0	53	53	1	add	                eatTheRest        =        false;        tokens.clear();        tokens.clear();    eatTheRest    =    false;    tokens.clear();    if(currentOption!=  null)  {  eatTheRest  =  false;  tokens.clear();  tokens.clear();  eatTheRest  =  false;  tokens.clear();  }	  	compilable	  [FE]  UnrecognizedOptionException  	6	1	add
143	[BUG]  [BUGGY]          eatTheRest    =    false;    tokens.clear();    tokens.clear();  eatTheRest  =  false;  tokens.clear();  if(currentOption!=  null)  {  eatTheRest  =  false;  tokens.clear();  tokens.clear();  eatTheRest  =  false;  tokens.clear();  }  [FE]  UnrecognizedOptionException  [FE]        UnrecognizedOptionException    [CONTEXT]      private  void  init()  {  eatTheRest  =  false;  tokens.clear();      [BUGGY]          eatTheRest    =    false;    tokens.clear();    tokens.clear();  eatTheRest  =  false;  tokens.clear();  if(currentOption!=  null)  {  eatTheRest  =  false;  tokens.clear();  tokens.clear();  eatTheRest  =  false;  tokens.clear();  }  [BUGGY]      currentOption  =  null;  }  [CLASS]  PosixParser  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  ArrayList  tokens  Options  options  Option  currentOption  boolean  eatTheRest  	projects/Cli2/src/java/org/apache/commons/cli/PosixParser.java	1.0	53	53	1	replace	                eatTheRest        =        false;        tokens.clear();        tokens.clear();    eatTheRest    =    false;    tokens.clear();    if(currentOption!=  null)  {  eatTheRest  =  false;  tokens.clear();  tokens.clear();  eatTheRest  =  false;  tokens.clear();  }	  	compilable	  [FE]  UnrecognizedOptionException  	6	1	add
144	[BUG]  [BUGGY]  [FE]  UnrecognizedOptionException  [FE]          UnrecognizedOptionException    [CONTEXT]      private  void  init()  {  eatTheRest  =  false;  tokens.clear();      [BUGGY]          eatTheRest    =    false;    tokens.clear();    tokens.clear();  eatTheRest  =  false;  tokens.clear();  eatTheRest  =  false;  tokens.clear();  tokens.clear();  eatTheRest  =  false;  [BUGGY]      currentOption  =  null;  }  [CLASS]  PosixParser  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  ArrayList  tokens  Options  options  Option  currentOption  boolean  eatTheRest  	projects/Cli2/src/java/org/apache/commons/cli/PosixParser.java	1.0	53	53	1	add	                eatTheRest        =        false;        tokens.clear();        tokens.clear();    eatTheRest    =    false;    tokens.clear();    eatTheRest  =  false;  tokens.clear();  tokens.clear();  eatTheRest  =  false;	  	compilable	  [FE]  UnrecognizedOptionException  	6	1	add
145	[BUG]  [BUGGY]          eatTheRest    =    false;    tokens.clear();    tokens.clear();  eatTheRest  =  false;  tokens.clear();  eatTheRest  =  false;  tokens.clear();  tokens.clear();  eatTheRest  =  false;  [FE]  UnrecognizedOptionException  [FE]          UnrecognizedOptionException    [CONTEXT]      private  void  init()  {  eatTheRest  =  false;  tokens.clear();      [BUGGY]          eatTheRest    =    false;    tokens.clear();    tokens.clear();  eatTheRest  =  false;  tokens.clear();  eatTheRest  =  false;  tokens.clear();  tokens.clear();  eatTheRest  =  false;  [BUGGY]      currentOption  =  null;  }  [CLASS]  PosixParser  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  ArrayList  tokens  Options  options  Option  currentOption  boolean  eatTheRest  	projects/Cli2/src/java/org/apache/commons/cli/PosixParser.java	1.0	53	53	1	replace	                eatTheRest        =        false;        tokens.clear();        tokens.clear();    eatTheRest    =    false;    tokens.clear();    eatTheRest  =  false;  tokens.clear();  tokens.clear();  eatTheRest  =  false;	  	compilable	  [FE]  UnrecognizedOptionException  	6	1	add
146	[BUG]  [BUGGY]  [FE]  UnrecognizedOptionException  [FE]            UnrecognizedOptionException    [CONTEXT]      private  void  init()  {  eatTheRest  =  false;  tokens.clear();      [BUGGY]          eatTheRest    =    false;    tokens.clear();    tokens.clear();  eatTheRest  =  false;  tokens.clear();  eatTheRest  =  false;  tokens.clear();  tokens.clear();  currentOption  =  null;  [BUGGY]      currentOption  =  null;  }  [CLASS]  PosixParser  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  ArrayList  tokens  Options  options  Option  currentOption  boolean  eatTheRest  	projects/Cli2/src/java/org/apache/commons/cli/PosixParser.java	1.0	53	53	1	add	                eatTheRest        =        false;        tokens.clear();        tokens.clear();    eatTheRest    =    false;    tokens.clear();    eatTheRest  =  false;  tokens.clear();  tokens.clear();  currentOption  =  null;	  	compilable	  [FE]  UnrecognizedOptionException  	6	1	add
147	[BUG]  [BUGGY]          eatTheRest    =    false;    tokens.clear();    tokens.clear();  eatTheRest  =  false;  tokens.clear();  eatTheRest  =  false;  tokens.clear();  tokens.clear();  currentOption  =  null;  [FE]  UnrecognizedOptionException  [FE]            UnrecognizedOptionException    [CONTEXT]      private  void  init()  {  eatTheRest  =  false;  tokens.clear();      [BUGGY]          eatTheRest    =    false;    tokens.clear();    tokens.clear();  eatTheRest  =  false;  tokens.clear();  eatTheRest  =  false;  tokens.clear();  tokens.clear();  currentOption  =  null;  [BUGGY]      currentOption  =  null;  }  [CLASS]  PosixParser  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  ArrayList  tokens  Options  options  Option  currentOption  boolean  eatTheRest  	projects/Cli2/src/java/org/apache/commons/cli/PosixParser.java	1.0	53	53	1	replace	                eatTheRest        =        false;        tokens.clear();        tokens.clear();    eatTheRest    =    false;    tokens.clear();    eatTheRest  =  false;  tokens.clear();  tokens.clear();  currentOption  =  null;	  	compilable	  [FE]  UnrecognizedOptionException  	6	1	add
148	[BUG]  [BUGGY]  options.clear();  currentOption  =  null;  [CE]  cannot  find  symbol  [FE]          UnrecognizedOptionException      [CONTEXT]      private  void  init()  {  eatTheRest  =  false;  tokens.clear();      [BUGGY]  options.clear();  currentOption  =  null;  [BUGGY]      currentOption  =  null;  }  [CLASS]  PosixParser  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  ArrayList  tokens  Options  options  Option  currentOption  boolean  eatTheRest  	projects/Cli2/src/java/org/apache/commons/cli/PosixParser.java	1.0	53	53	1	replace	options.clear();  currentOption  =  null;	          tokens.clear();    currentOption    =    null;    options.clear();    currentOption    =    null;    	non-compiled	[CE]  cannot  find  symbol	130	None	replace
149	[BUG]  [BUGGY]  tokens.clear();  currentOption  =  null;  options.clear();  [CE]  cannot  find  symbol  [FE]            UnrecognizedOptionException      [CONTEXT]      private  void  init()  {  eatTheRest  =  false;  tokens.clear();      [BUGGY]  tokens.clear();  currentOption  =  null;  options.clear();  [BUGGY]      currentOption  =  null;  }  [CLASS]  PosixParser  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  ArrayList  tokens  Options  options  Option  currentOption  boolean  eatTheRest  	projects/Cli2/src/java/org/apache/commons/cli/PosixParser.java	1.0	53	53	1	replace	tokens.clear();  currentOption  =  null;  options.clear();	          tokens.clear();    currentOption    =    null;    options.clear();    currentOption    =    null;    	non-compiled	[CE]  cannot  find  symbol	130	None	replace
150	[BUG]  [BUGGY]  currentOption  =  Options.newInstance(tokens,  options);  [CE]  cannot  find  symbol  [FE]              UnrecognizedOptionException      [CONTEXT]      private  void  init()  {  eatTheRest  =  false;  tokens.clear();      [BUGGY]  currentOption  =  Options.newInstance(tokens,  options);  [BUGGY]      }  [CLASS]  PosixParser  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  ArrayList  tokens  Options  options  Option  currentOption  boolean  eatTheRest  	projects/Cli2/src/java/org/apache/commons/cli/PosixParser.java	1.0	53	53	1	replace	currentOption  =  Options.newInstance(tokens,  options);	  currentOption    =    Options.newInstance(tokens);    	non-compiled	[CE]  cannot  find  symbol	75	None	replace
151	[BUG]  [BUGGY]  currentOption  =  Options.newInstance(tokens,  eatTheRest);  [CE]  cannot  find  symbol  [FE]                UnrecognizedOptionException      [CONTEXT]      private  void  init()  {  eatTheRest  =  false;  tokens.clear();      [BUGGY]  currentOption  =  Options.newInstance(tokens,  eatTheRest);  [BUGGY]      }  [CLASS]  PosixParser  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  ArrayList  tokens  Options  options  Option  currentOption  boolean  eatTheRest  	projects/Cli2/src/java/org/apache/commons/cli/PosixParser.java	1.0	53	53	1	replace	currentOption  =  Options.newInstance(tokens,  eatTheRest);	  currentOption    =    Options.newInstance(tokens);    	non-compiled	[CE]  cannot  find  symbol	75	None	replace
152	[BUG]  [BUGGY]  currentOption  =  Options.newInstance(tokens,  true);  [CE]  cannot  find  symbol  [FE]                  UnrecognizedOptionException      [CONTEXT]      private  void  init()  {  eatTheRest  =  false;  tokens.clear();      [BUGGY]  currentOption  =  Options.newInstance(tokens,  true);  [BUGGY]      }  [CLASS]  PosixParser  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  ArrayList  tokens  Options  options  Option  currentOption  boolean  eatTheRest  	projects/Cli2/src/java/org/apache/commons/cli/PosixParser.java	1.0	53	53	1	replace	currentOption  =  Options.newInstance(tokens,  true);	  currentOption    =    Options.newInstance(tokens);    	non-compiled	[CE]  cannot  find  symbol	75	None	replace
153	[BUG]  [BUGGY]  [FE]  UnrecognizedOptionException  [FE]    UnrecognizedOptionException    [CONTEXT]      private  void  init()  {  eatTheRest  =  false;  tokens.clear();      [BUGGY]  if(currentOption  ==  null)  {  eatTheRest  =  false;  tokens.clear();  tokens.clear();  }  [BUGGY]      currentOption  =  null;  }  [CLASS]  PosixParser  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  ArrayList  tokens  Options  options  Option  currentOption  boolean  eatTheRest  	projects/Cli2/src/java/org/apache/commons/cli/PosixParser.java	1.0	53	53	1	add	if(currentOption  ==  null)  {  eatTheRest  =  false;  tokens.clear();  tokens.clear();  }	          eatTheRest    =    false;    tokens.clear();    tokens.clear();    	compilable	  [FE]  UnrecognizedOptionException  	134	1	replace
154	[BUG]  [BUGGY]  if(currentOption  ==  null)  {  eatTheRest  =  false;  tokens.clear();  tokens.clear();  }  [FE]  UnrecognizedOptionException  [FE]    UnrecognizedOptionException    [CONTEXT]      private  void  init()  {  eatTheRest  =  false;  tokens.clear();      [BUGGY]  if(currentOption  ==  null)  {  eatTheRest  =  false;  tokens.clear();  tokens.clear();  }  [BUGGY]      currentOption  =  null;  }  [CLASS]  PosixParser  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  ArrayList  tokens  Options  options  Option  currentOption  boolean  eatTheRest  	projects/Cli2/src/java/org/apache/commons/cli/PosixParser.java	1.0	53	53	1	replace	if(currentOption  ==  null)  {  eatTheRest  =  false;  tokens.clear();  tokens.clear();  }	          eatTheRest    =    false;    tokens.clear();    tokens.clear();    	compilable	  [FE]  UnrecognizedOptionException  	134	1	replace
155	[BUG]  [BUGGY]  [FE]  UnrecognizedOptionException  [FE]      UnrecognizedOptionException    [CONTEXT]      private  void  init()  {  eatTheRest  =  false;  tokens.clear();      [BUGGY]  if(currentOption!=  null)  {  eatTheRest  =  false;  tokens.clear();  tokens.clear();  }  else  {  currentOption  =  null;  }  [BUGGY]      currentOption  =  null;  }  [CLASS]  PosixParser  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  ArrayList  tokens  Options  options  Option  currentOption  boolean  eatTheRest  	projects/Cli2/src/java/org/apache/commons/cli/PosixParser.java	1.0	53	53	1	add	if(currentOption!=  null)  {  eatTheRest  =  false;  tokens.clear();  tokens.clear();  }  else  {  currentOption  =  null;  }	          eatTheRest    =    false;    tokens.clear();    tokens.clear();    	compilable	  [FE]  UnrecognizedOptionException  	134	1	replace
156	[BUG]  [BUGGY]  if(currentOption!=  null)  {  eatTheRest  =  false;  tokens.clear();  tokens.clear();  }  else  {  currentOption  =  null;  }  [FE]  UnrecognizedOptionException  [FE]      UnrecognizedOptionException    [CONTEXT]      private  void  init()  {  eatTheRest  =  false;  tokens.clear();      [BUGGY]  if(currentOption!=  null)  {  eatTheRest  =  false;  tokens.clear();  tokens.clear();  }  else  {  currentOption  =  null;  }  [BUGGY]      currentOption  =  null;  }  [CLASS]  PosixParser  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  ArrayList  tokens  Options  options  Option  currentOption  boolean  eatTheRest  	projects/Cli2/src/java/org/apache/commons/cli/PosixParser.java	1.0	53	53	1	replace	if(currentOption!=  null)  {  eatTheRest  =  false;  tokens.clear();  tokens.clear();  }  else  {  currentOption  =  null;  }	          eatTheRest    =    false;    tokens.clear();    tokens.clear();    	compilable	  [FE]  UnrecognizedOptionException  	134	1	replace
157	[BUG]  [BUGGY]  if(!currentOption.isSupported())  {  eatTheRest  =  false;  tokens.clear();  tokens.clear();  }  [CE]  cannot  find  symbol  [FE]        UnrecognizedOptionException    [CONTEXT]      private  void  init()  {  eatTheRest  =  false;  tokens.clear();      [BUGGY]  if(!currentOption.isSupported())  {  eatTheRest  =  false;  tokens.clear();  tokens.clear();  }  [BUGGY]      currentOption  =  null;  }  [CLASS]  PosixParser  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  ArrayList  tokens  Options  options  Option  currentOption  boolean  eatTheRest  	projects/Cli2/src/java/org/apache/commons/cli/PosixParser.java	1.0	53	53	1	replace	if(!currentOption.isSupported())  {  eatTheRest  =  false;  tokens.clear();  tokens.clear();  }	          eatTheRest    =    false;    tokens.clear();    tokens.clear();    	non-compiled	[CE]  cannot  find  symbol	134	None	replace
158	[BUG]  [BUGGY]  [FE]  UnrecognizedOptionException  [FE]    UnrecognizedOptionException    [CONTEXT]      private  void  init()  {  eatTheRest  =  false;  tokens.clear();      [BUGGY]          tokens.add(     "--     ");    tokens.add(   "--     ");  eatTheRest  =  false;  tokens.clear();  [BUGGY]      currentOption  =  null;  }  [CLASS]  PosixParser  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  ArrayList  tokens  Options  options  Option  currentOption  boolean  eatTheRest  	projects/Cli2/src/java/org/apache/commons/cli/PosixParser.java	1.0	53	53	1	add	                tokens.add(       "--       ");        tokens.add(   "--       ");    eatTheRest    =    false;    tokens.clear();	  	compilable	  [FE]  UnrecognizedOptionException  	122	1	add
159	[BUG]  [BUGGY]          tokens.add(     "--     ");    tokens.add(   "--     ");  eatTheRest  =  false;  tokens.clear();  [FE]  UnrecognizedOptionException  [FE]    UnrecognizedOptionException    [CONTEXT]      private  void  init()  {  eatTheRest  =  false;  tokens.clear();      [BUGGY]          tokens.add(     "--     ");    tokens.add(   "--     ");  eatTheRest  =  false;  tokens.clear();  [BUGGY]      currentOption  =  null;  }  [CLASS]  PosixParser  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  ArrayList  tokens  Options  options  Option  currentOption  boolean  eatTheRest  	projects/Cli2/src/java/org/apache/commons/cli/PosixParser.java	1.0	53	53	1	replace	                tokens.add(       "--       ");        tokens.add(   "--       ");    eatTheRest    =    false;    tokens.clear();	  	compilable	  [FE]  UnrecognizedOptionException  	122	1	add
160	[BUG]  [BUGGY]  [FE]  UnrecognizedOptionException  [FE]      UnrecognizedOptionException    [CONTEXT]      private  void  init()  {  eatTheRest  =  false;  tokens.clear();      [BUGGY]          tokens.add(     "--     ");    tokens.add(   "--     ");  eatTheRest  =  false;  tokens.add( "--   ");  tokens.add( "--   ");  eatTheRest  =  false;  [BUGGY]      currentOption  =  null;  }  [CLASS]  PosixParser  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  ArrayList  tokens  Options  options  Option  currentOption  boolean  eatTheRest  	projects/Cli2/src/java/org/apache/commons/cli/PosixParser.java	1.0	53	53	1	add	                tokens.add(       "--       ");        tokens.add(   "--       ");    eatTheRest    =    false;    tokens.add( "--   ");  tokens.add( "--   ");  eatTheRest  =  false;	  	compilable	  [FE]  UnrecognizedOptionException  	122	1	add
161	[BUG]  [BUGGY]          tokens.add(     "--     ");    tokens.add(   "--     ");  eatTheRest  =  false;  tokens.add( "--   ");  tokens.add( "--   ");  eatTheRest  =  false;  [FE]  UnrecognizedOptionException  [FE]      UnrecognizedOptionException    [CONTEXT]      private  void  init()  {  eatTheRest  =  false;  tokens.clear();      [BUGGY]          tokens.add(     "--     ");    tokens.add(   "--     ");  eatTheRest  =  false;  tokens.add( "--   ");  tokens.add( "--   ");  eatTheRest  =  false;  [BUGGY]      currentOption  =  null;  }  [CLASS]  PosixParser  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  ArrayList  tokens  Options  options  Option  currentOption  boolean  eatTheRest  	projects/Cli2/src/java/org/apache/commons/cli/PosixParser.java	1.0	53	53	1	replace	                tokens.add(       "--       ");        tokens.add(   "--       ");    eatTheRest    =    false;    tokens.add( "--   ");  tokens.add( "--   ");  eatTheRest  =  false;	  	compilable	  [FE]  UnrecognizedOptionException  	122	1	add
162	[BUG]  [BUGGY]  [FE]  UnrecognizedOptionException  [FE]        UnrecognizedOptionException    [CONTEXT]      private  void  init()  {  eatTheRest  =  false;  tokens.clear();      [BUGGY]          tokens.add(     "--     ");    tokens.add(   "--     ");  eatTheRest  =  false;  tokens.add( "--   ");  tokens.add( "--   ");  [BUGGY]      currentOption  =  null;  }  [CLASS]  PosixParser  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  ArrayList  tokens  Options  options  Option  currentOption  boolean  eatTheRest  	projects/Cli2/src/java/org/apache/commons/cli/PosixParser.java	1.0	53	53	1	add	                tokens.add(       "--       ");        tokens.add(   "--       ");    eatTheRest    =    false;    tokens.add( "--   ");  tokens.add( "--   ");	  	compilable	  [FE]  UnrecognizedOptionException  	122	1	add
163	[BUG]  [BUGGY]          tokens.add(     "--     ");    tokens.add(   "--     ");  eatTheRest  =  false;  tokens.add( "--   ");  tokens.add( "--   ");  [FE]  UnrecognizedOptionException  [FE]        UnrecognizedOptionException    [CONTEXT]      private  void  init()  {  eatTheRest  =  false;  tokens.clear();      [BUGGY]          tokens.add(     "--     ");    tokens.add(   "--     ");  eatTheRest  =  false;  tokens.add( "--   ");  tokens.add( "--   ");  [BUGGY]      currentOption  =  null;  }  [CLASS]  PosixParser  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  ArrayList  tokens  Options  options  Option  currentOption  boolean  eatTheRest  	projects/Cli2/src/java/org/apache/commons/cli/PosixParser.java	1.0	53	53	1	replace	                tokens.add(       "--       ");        tokens.add(   "--       ");    eatTheRest    =    false;    tokens.add( "--   ");  tokens.add( "--   ");	  	compilable	  [FE]  UnrecognizedOptionException  	122	1	add
164	[BUG]  [BUGGY]  [FE]  UnrecognizedOptionException  [FE]          UnrecognizedOptionException    [CONTEXT]      private  void  init()  {  eatTheRest  =  false;  tokens.clear();      [BUGGY]          tokens.add(     "--     ");    tokens.add(   "--     ");  eatTheRest  =  false;  tokens.add( "--   ");  tokens.add( "--   ");  currentOption  =  null;  [BUGGY]      currentOption  =  null;  }  [CLASS]  PosixParser  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  ArrayList  tokens  Options  options  Option  currentOption  boolean  eatTheRest  	projects/Cli2/src/java/org/apache/commons/cli/PosixParser.java	1.0	53	53	1	add	                tokens.add(       "--       ");        tokens.add(   "--       ");    eatTheRest    =    false;    tokens.add( "--   ");  tokens.add( "--   ");  currentOption  =  null;	  	compilable	  [FE]  UnrecognizedOptionException  	122	1	add
165	[BUG]  [BUGGY]          tokens.add(     "--     ");    tokens.add(   "--     ");  eatTheRest  =  false;  tokens.add( "--   ");  tokens.add( "--   ");  currentOption  =  null;  [FE]  UnrecognizedOptionException  [FE]          UnrecognizedOptionException    [CONTEXT]      private  void  init()  {  eatTheRest  =  false;  tokens.clear();      [BUGGY]          tokens.add(     "--     ");    tokens.add(   "--     ");  eatTheRest  =  false;  tokens.add( "--   ");  tokens.add( "--   ");  currentOption  =  null;  [BUGGY]      currentOption  =  null;  }  [CLASS]  PosixParser  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  ArrayList  tokens  Options  options  Option  currentOption  boolean  eatTheRest  	projects/Cli2/src/java/org/apache/commons/cli/PosixParser.java	1.0	53	53	1	replace	                tokens.add(       "--       ");        tokens.add(   "--       ");    eatTheRest    =    false;    tokens.add( "--   ");  tokens.add( "--   ");  currentOption  =  null;	  	compilable	  [FE]  UnrecognizedOptionException  	122	1	add
166	[BUG]  [BUGGY]  [FE]  UnrecognizedOptionException  [FE]            UnrecognizedOptionException    [CONTEXT]      private  void  init()  {  eatTheRest  =  false;  tokens.clear();      [BUGGY]          tokens.add(     "--     ");    tokens.add(   "--     ");  eatTheRest  =  false;  tokens.remove( "-- ");  tokens.add( "-- ");  eatTheRest  =  false;  [BUGGY]      currentOption  =  null;  }  [CLASS]  PosixParser  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  ArrayList  tokens  Options  options  Option  currentOption  boolean  eatTheRest  	projects/Cli2/src/java/org/apache/commons/cli/PosixParser.java	1.0	53	53	1	add	                tokens.add(       "--       ");        tokens.add(   "--       ");    eatTheRest    =    false;    tokens.remove( "-- ");  tokens.add( "-- ");  eatTheRest  =  false;	  	compilable	  [FE]  UnrecognizedOptionException  	122	1	add
167	[BUG]  [BUGGY]          tokens.add(     "--     ");    tokens.add(   "--     ");  eatTheRest  =  false;  tokens.remove( "-- ");  tokens.add( "-- ");  eatTheRest  =  false;  [FE]  UnrecognizedOptionException  [FE]            UnrecognizedOptionException    [CONTEXT]      private  void  init()  {  eatTheRest  =  false;  tokens.clear();      [BUGGY]          tokens.add(     "--     ");    tokens.add(   "--     ");  eatTheRest  =  false;  tokens.remove( "-- ");  tokens.add( "-- ");  eatTheRest  =  false;  [BUGGY]      currentOption  =  null;  }  [CLASS]  PosixParser  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  ArrayList  tokens  Options  options  Option  currentOption  boolean  eatTheRest  	projects/Cli2/src/java/org/apache/commons/cli/PosixParser.java	1.0	53	53	1	replace	                tokens.add(       "--       ");        tokens.add(   "--       ");    eatTheRest    =    false;    tokens.remove( "-- ");  tokens.add( "-- ");  eatTheRest  =  false;	  	compilable	  [FE]  UnrecognizedOptionException  	122	1	add
168	[BUG]  [BUGGY]  currentOption  =  options.getOption(tokens);  [CE]  method  getOption  in  class  Options  cannot  be  applied  to  given  types;  [FE]                  UnrecognizedOptionException      [CONTEXT]      private  void  init()  {  eatTheRest  =  false;  tokens.clear();      [BUGGY]  currentOption  =  options.getOption(tokens);  [BUGGY]      }  [CLASS]  PosixParser  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  ArrayList  tokens  Options  options  Option  currentOption  boolean  eatTheRest  	projects/Cli2/src/java/org/apache/commons/cli/PosixParser.java	1.0	53	53	1	replace	currentOption  =  options.getOption(tokens);	  currentOption    =    options.getOption(options);    	non-compiled	[CE]  method  getOption  in  class  Options  cannot  be  applied  to  given  types;	31	None	replace
169	[BUG]  [BUGGY]  currentOption  =  options.getOption(tokens,  options);  [CE]  method  getOption  in  class  Options  cannot  be  applied  to  given  types;  [FE]                    UnrecognizedOptionException      [CONTEXT]      private  void  init()  {  eatTheRest  =  false;  tokens.clear();      [BUGGY]  currentOption  =  options.getOption(tokens,  options);  [BUGGY]      }  [CLASS]  PosixParser  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  ArrayList  tokens  Options  options  Option  currentOption  boolean  eatTheRest  	projects/Cli2/src/java/org/apache/commons/cli/PosixParser.java	1.0	53	53	1	replace	currentOption  =  options.getOption(tokens,  options);	  currentOption    =    options.getOption(options);    	non-compiled	[CE]  method  getOption  in  class  Options  cannot  be  applied  to  given  types;	31	None	replace
170	[BUG]  [BUGGY]  currentOption  =  options.getOption(options,  tokens);  [CE]  method  getOption  in  class  Options  cannot  be  applied  to  given  types;  [FE]                      UnrecognizedOptionException      [CONTEXT]      private  void  init()  {  eatTheRest  =  false;  tokens.clear();      [BUGGY]  currentOption  =  options.getOption(options,  tokens);  [BUGGY]      }  [CLASS]  PosixParser  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  ArrayList  tokens  Options  options  Option  currentOption  boolean  eatTheRest  	projects/Cli2/src/java/org/apache/commons/cli/PosixParser.java	1.0	53	53	1	replace	currentOption  =  options.getOption(options,  tokens);	  currentOption    =    options.getOption(options);    	non-compiled	[CE]  method  getOption  in  class  Options  cannot  be  applied  to  given  types;	31	None	replace
171	[BUG]  [BUGGY]  currentOption  =  options.getOption(this.options);  [CE]  method  getOption  in  class  Options  cannot  be  applied  to  given  types;  [FE]                        UnrecognizedOptionException      [CONTEXT]      private  void  init()  {  eatTheRest  =  false;  tokens.clear();      [BUGGY]  currentOption  =  options.getOption(this.options);  [BUGGY]      }  [CLASS]  PosixParser  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  ArrayList  tokens  Options  options  Option  currentOption  boolean  eatTheRest  	projects/Cli2/src/java/org/apache/commons/cli/PosixParser.java	1.0	53	53	1	replace	currentOption  =  options.getOption(this.options);	  currentOption    =    options.getOption(options);    	non-compiled	[CE]  method  getOption  in  class  Options  cannot  be  applied  to  given  types;	31	None	replace
172	[BUG]  [BUGGY]  [FE]  UnrecognizedOptionException  [FE]    UnrecognizedOptionException    [CONTEXT]      private  void  init()  {  eatTheRest  =  false;  tokens.clear();      [BUGGY]  if(!eatTheRest)  {  tokens.clear();  currentOption  =  null;  }  else  {  System.arraycopy(tokens,  0,  currentOption,  0,  tokens.size());  }  [BUGGY]      currentOption  =  null;  }  [CLASS]  PosixParser  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  ArrayList  tokens  Options  options  Option  currentOption  boolean  eatTheRest  	projects/Cli2/src/java/org/apache/commons/cli/PosixParser.java	1.0	53	53	1	add	if(!eatTheRest)  {  tokens.clear();  currentOption  =  null;  }  else  {  System.arraycopy(tokens,  0,  currentOption,  0,  tokens.size());  }	  if(eatTheRest)    {    tokens.clear();    currentOption    =    null;    }    	compilable	  [FE]  UnrecognizedOptionException  	125	1	replace
173	[BUG]  [BUGGY]  if(!eatTheRest)  {  tokens.clear();  currentOption  =  null;  }  else  {  System.arraycopy(tokens,  0,  currentOption,  0,  tokens.size());  }  [FE]  UnrecognizedOptionException  [FE]    UnrecognizedOptionException    [CONTEXT]      private  void  init()  {  eatTheRest  =  false;  tokens.clear();      [BUGGY]  if(!eatTheRest)  {  tokens.clear();  currentOption  =  null;  }  else  {  System.arraycopy(tokens,  0,  currentOption,  0,  tokens.size());  }  [BUGGY]      currentOption  =  null;  }  [CLASS]  PosixParser  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  ArrayList  tokens  Options  options  Option  currentOption  boolean  eatTheRest  	projects/Cli2/src/java/org/apache/commons/cli/PosixParser.java	1.0	53	53	1	replace	if(!eatTheRest)  {  tokens.clear();  currentOption  =  null;  }  else  {  System.arraycopy(tokens,  0,  currentOption,  0,  tokens.size());  }	  if(eatTheRest)    {    tokens.clear();    currentOption    =    null;    }    	compilable	  [FE]  UnrecognizedOptionException  	125	1	replace
174	[BUG]  [BUGGY]  if(!eatTheRest)  {  tokens.remove();  currentOption  =  null;  }  [CE]  no  suitable  method  found  for  remove()  [FE]      UnrecognizedOptionException    [CONTEXT]      private  void  init()  {  eatTheRest  =  false;  tokens.clear();      [BUGGY]  if(!eatTheRest)  {  tokens.remove();  currentOption  =  null;  }  [BUGGY]      currentOption  =  null;  }  [CLASS]  PosixParser  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  ArrayList  tokens  Options  options  Option  currentOption  boolean  eatTheRest  	projects/Cli2/src/java/org/apache/commons/cli/PosixParser.java	1.0	53	53	1	replace	if(!eatTheRest)  {  tokens.remove();  currentOption  =  null;  }	  if(eatTheRest)    {    tokens.clear();    currentOption    =    null;    }    	non-compiled	[CE]  no  suitable  method  found  for  remove()	125	None	replace
175	[BUG]  [BUGGY]  List  tokens  =  new  ArrayList(tokens.size()  +  1);  [CE]  cannot  find  symbol  [FE]              UnrecognizedOptionException      [CONTEXT]      private  void  init()  {  eatTheRest  =  false;  tokens.clear();      [BUGGY]  List  tokens  =  new  ArrayList(tokens.size()  +  1);  [BUGGY]      currentOption  =  null;  }  [CLASS]  PosixParser  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  ArrayList  tokens  Options  options  Option  currentOption  boolean  eatTheRest  	projects/Cli2/src/java/org/apache/commons/cli/PosixParser.java	1.0	53	53	1	replace	List  tokens  =  new  ArrayList(tokens.size()  +  1);	  List    tokens    =    new    ArrayList(tokens.size());    	non-compiled	[CE]  cannot  find  symbol	90	None	replace
176	[BUG]  [BUGGY]  currentOption  =  Option.None  &&  tokens.size()  >  1;  [CE]  cannot  find  symbol  None  [FE]            UnrecognizedOptionException      [CONTEXT]      private  void  init()  {  eatTheRest  =  false;  tokens.clear();      [BUGGY]  currentOption  =  Option.None  &&  tokens.size()  >  1;  [BUGGY]      }  [CLASS]  PosixParser  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  ArrayList  tokens  Options  options  Option  currentOption  boolean  eatTheRest  	projects/Cli2/src/java/org/apache/commons/cli/PosixParser.java	1.0	53	53	1	replace	currentOption  =  Option.None  &&  tokens.size()  >  1;	  currentOption    =    Option.None;    	non-compiled	[CE]  cannot  find  symbol  None	13	None	replace
177	[BUG]  [BUGGY]  currentOption  =  Option.None  ||  eatTheRest;  [CE]  cannot  find  symbol  None  [FE]              UnrecognizedOptionException      [CONTEXT]      private  void  init()  {  eatTheRest  =  false;  tokens.clear();      [BUGGY]  currentOption  =  Option.None  ||  eatTheRest;  [BUGGY]      }  [CLASS]  PosixParser  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  ArrayList  tokens  Options  options  Option  currentOption  boolean  eatTheRest  	projects/Cli2/src/java/org/apache/commons/cli/PosixParser.java	1.0	53	53	1	replace	currentOption  =  Option.None  ||  eatTheRest;	  currentOption    =    Option.None;    	non-compiled	[CE]  cannot  find  symbol  None	13	None	replace
178	[BUG]  [BUGGY]  if(!eatTheRest)  {  if(currentOption!=  null)  {  eatTheRest  =  false;  tokens.clear();  }  else  {  currentOption  =  null;  }  [CE]  illegal  start  of  expression  [FE]    UnrecognizedOptionException    [CONTEXT]      private  void  init()  {  eatTheRest  =  false;  tokens.clear();      [BUGGY]  if(!eatTheRest)  {  if(currentOption!=  null)  {  eatTheRest  =  false;  tokens.clear();  }  else  {  currentOption  =  null;  }  [BUGGY]      currentOption  =  null;  }  [CLASS]  PosixParser  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  ArrayList  tokens  Options  options  Option  currentOption  boolean  eatTheRest  	projects/Cli2/src/java/org/apache/commons/cli/PosixParser.java	1.0	53	53	1	replace	if(!eatTheRest)  {  if(currentOption!=  null)  {  eatTheRest  =  false;  tokens.clear();  }  else  {  currentOption  =  null;  }	  if(currentOption!=    null)    {    eatTheRest    =    false;    tokens.clear();    }    else    {    currentOption    =    null;    }    	non-compiled	[CE]  illegal  start  of  expression	42	None	replace
179	[BUG]  [BUGGY]  if(!eatTheRest)  {  if(currentOption!=  null)  {  eatTheRest  =  false;  tokens.clear();  }  [CE]  illegal  start  of  expression  [FE]      UnrecognizedOptionException    [CONTEXT]      private  void  init()  {  eatTheRest  =  false;  tokens.clear();      [BUGGY]  if(!eatTheRest)  {  if(currentOption!=  null)  {  eatTheRest  =  false;  tokens.clear();  }  [BUGGY]      currentOption  =  null;  }  [CLASS]  PosixParser  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  ArrayList  tokens  Options  options  Option  currentOption  boolean  eatTheRest  	projects/Cli2/src/java/org/apache/commons/cli/PosixParser.java	1.0	53	53	1	replace	if(!eatTheRest)  {  if(currentOption!=  null)  {  eatTheRest  =  false;  tokens.clear();  }	  if(currentOption!=    null)    {    eatTheRest    =    false;    tokens.clear();    }    else    {    currentOption    =    null;    }    	non-compiled	[CE]  illegal  start  of  expression	42	None	replace
180	[BUG]  [BUGGY]  [FE]  UnrecognizedOptionException  [FE]    UnrecognizedOptionException    [CONTEXT]      private  void  init()  {  eatTheRest  =  false;  tokens.clear();      [BUGGY]          eatTheRest    =    false;    tokens.clear();    eatTheRest  =  false;  tokens.clear();  currentOption  =  null;  eatTheRest  =  false;  tokens.clear();  eatTheRest  =  false;  [BUGGY]      currentOption  =  null;  }  [CLASS]  PosixParser  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  ArrayList  tokens  Options  options  Option  currentOption  boolean  eatTheRest  	projects/Cli2/src/java/org/apache/commons/cli/PosixParser.java	1.0	53	53	1	add	                eatTheRest        =        false;        tokens.clear();        eatTheRest    =    false;    tokens.clear();    currentOption    =    null;    eatTheRest  =  false;  tokens.clear();  eatTheRest  =  false;	  	compilable	  [FE]  UnrecognizedOptionException  	3	1	add
181	[BUG]  [BUGGY]          eatTheRest    =    false;    tokens.clear();    eatTheRest  =  false;  tokens.clear();  currentOption  =  null;  eatTheRest  =  false;  tokens.clear();  eatTheRest  =  false;  [FE]  UnrecognizedOptionException  [FE]    UnrecognizedOptionException    [CONTEXT]      private  void  init()  {  eatTheRest  =  false;  tokens.clear();      [BUGGY]          eatTheRest    =    false;    tokens.clear();    eatTheRest  =  false;  tokens.clear();  currentOption  =  null;  eatTheRest  =  false;  tokens.clear();  eatTheRest  =  false;  [BUGGY]      currentOption  =  null;  }  [CLASS]  PosixParser  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  ArrayList  tokens  Options  options  Option  currentOption  boolean  eatTheRest  	projects/Cli2/src/java/org/apache/commons/cli/PosixParser.java	1.0	53	53	1	replace	                eatTheRest        =        false;        tokens.clear();        eatTheRest    =    false;    tokens.clear();    currentOption    =    null;    eatTheRest  =  false;  tokens.clear();  eatTheRest  =  false;	  	compilable	  [FE]  UnrecognizedOptionException  	3	1	add
182	[BUG]  [BUGGY]  [FE]  UnrecognizedOptionException  [FE]      UnrecognizedOptionException    [CONTEXT]      private  void  init()  {  eatTheRest  =  false;  tokens.clear();      [BUGGY]          eatTheRest    =    false;    tokens.clear();    eatTheRest  =  false;  tokens.clear();  currentOption  =  null;  eatTheRest  =  false;  tokens.clear();  eatTheRest  =  false;  currentOption  =  null;  [BUGGY]      currentOption  =  null;  }  [CLASS]  PosixParser  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  ArrayList  tokens  Options  options  Option  currentOption  boolean  eatTheRest  	projects/Cli2/src/java/org/apache/commons/cli/PosixParser.java	1.0	53	53	1	add	                eatTheRest        =        false;        tokens.clear();        eatTheRest    =    false;    tokens.clear();    currentOption    =    null;    eatTheRest  =  false;  tokens.clear();  eatTheRest  =  false;  currentOption  =  null;	  	compilable	  [FE]  UnrecognizedOptionException  	3	1	add
183	[BUG]  [BUGGY]          eatTheRest    =    false;    tokens.clear();    eatTheRest  =  false;  tokens.clear();  currentOption  =  null;  eatTheRest  =  false;  tokens.clear();  eatTheRest  =  false;  currentOption  =  null;  [FE]  UnrecognizedOptionException  [FE]      UnrecognizedOptionException    [CONTEXT]      private  void  init()  {  eatTheRest  =  false;  tokens.clear();      [BUGGY]          eatTheRest    =    false;    tokens.clear();    eatTheRest  =  false;  tokens.clear();  currentOption  =  null;  eatTheRest  =  false;  tokens.clear();  eatTheRest  =  false;  currentOption  =  null;  [BUGGY]      currentOption  =  null;  }  [CLASS]  PosixParser  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  ArrayList  tokens  Options  options  Option  currentOption  boolean  eatTheRest  	projects/Cli2/src/java/org/apache/commons/cli/PosixParser.java	1.0	53	53	1	replace	                eatTheRest        =        false;        tokens.clear();        eatTheRest    =    false;    tokens.clear();    currentOption    =    null;    eatTheRest  =  false;  tokens.clear();  eatTheRest  =  false;  currentOption  =  null;	  	compilable	  [FE]  UnrecognizedOptionException  	3	1	add
184	[BUG]  [BUGGY]  [FE]  UnrecognizedOptionException  [FE]        UnrecognizedOptionException    [CONTEXT]      private  void  init()  {  eatTheRest  =  false;  tokens.clear();      [BUGGY]          eatTheRest    =    false;    tokens.clear();    eatTheRest  =  false;  tokens.clear();  currentOption  =  null;  eatTheRest  =  false;  tokens.clear();  [BUGGY]      currentOption  =  null;  }  [CLASS]  PosixParser  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  ArrayList  tokens  Options  options  Option  currentOption  boolean  eatTheRest  	projects/Cli2/src/java/org/apache/commons/cli/PosixParser.java	1.0	53	53	1	add	                eatTheRest        =        false;        tokens.clear();        eatTheRest    =    false;    tokens.clear();    currentOption    =    null;    eatTheRest  =  false;  tokens.clear();	  	compilable	  [FE]  UnrecognizedOptionException  	3	1	add
185	[BUG]  [BUGGY]          eatTheRest    =    false;    tokens.clear();    eatTheRest  =  false;  tokens.clear();  currentOption  =  null;  eatTheRest  =  false;  tokens.clear();  [FE]  UnrecognizedOptionException  [FE]        UnrecognizedOptionException    [CONTEXT]      private  void  init()  {  eatTheRest  =  false;  tokens.clear();      [BUGGY]          eatTheRest    =    false;    tokens.clear();    eatTheRest  =  false;  tokens.clear();  currentOption  =  null;  eatTheRest  =  false;  tokens.clear();  [BUGGY]      currentOption  =  null;  }  [CLASS]  PosixParser  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  ArrayList  tokens  Options  options  Option  currentOption  boolean  eatTheRest  	projects/Cli2/src/java/org/apache/commons/cli/PosixParser.java	1.0	53	53	1	replace	                eatTheRest        =        false;        tokens.clear();        eatTheRest    =    false;    tokens.clear();    currentOption    =    null;    eatTheRest  =  false;  tokens.clear();	  	compilable	  [FE]  UnrecognizedOptionException  	3	1	add
186	[BUG]  [BUGGY]          eatTheRest    =    false;    tokens.clear();    eatTheRest  =  false;  tokens.clear();  currentOption  =  null;  eatTheRest  =  false;  tokens.clear();  eatTheRest  =  null;  [CE]  incompatible  types  [FE]          UnrecognizedOptionException    [CONTEXT]      private  void  init()  {  eatTheRest  =  false;  tokens.clear();      [BUGGY]          eatTheRest    =    false;    tokens.clear();    eatTheRest  =  false;  tokens.clear();  currentOption  =  null;  eatTheRest  =  false;  tokens.clear();  eatTheRest  =  null;  [BUGGY]      currentOption  =  null;  }  [CLASS]  PosixParser  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  ArrayList  tokens  Options  options  Option  currentOption  boolean  eatTheRest  	projects/Cli2/src/java/org/apache/commons/cli/PosixParser.java	1.0	53	53	1	replace	                eatTheRest        =        false;        tokens.clear();        eatTheRest    =    false;    tokens.clear();    currentOption    =    null;    eatTheRest  =  false;  tokens.clear();  eatTheRest  =  null;	  	non-compiled	[CE]  incompatible  types	3	None	add
187	[BUG]  [BUGGY]  [FE]  UnrecognizedOptionException  [FE]            UnrecognizedOptionException    [CONTEXT]      private  void  init()  {  eatTheRest  =  false;  tokens.clear();      [BUGGY]          eatTheRest    =    false;    tokens.clear();    eatTheRest  =  false;  tokens.clear();  currentOption  =  null;  eatTheRest  =  false;  tokens.clear();  currentOption  =  null;  [BUGGY]      currentOption  =  null;  }  [CLASS]  PosixParser  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  ArrayList  tokens  Options  options  Option  currentOption  boolean  eatTheRest  	projects/Cli2/src/java/org/apache/commons/cli/PosixParser.java	1.0	53	53	1	add	                eatTheRest        =        false;        tokens.clear();        eatTheRest    =    false;    tokens.clear();    currentOption    =    null;    eatTheRest  =  false;  tokens.clear();  currentOption  =  null;	  	compilable	  [FE]  UnrecognizedOptionException  	3	1	add
188	[BUG]  [BUGGY]          eatTheRest    =    false;    tokens.clear();    eatTheRest  =  false;  tokens.clear();  currentOption  =  null;  eatTheRest  =  false;  tokens.clear();  currentOption  =  null;  [FE]  UnrecognizedOptionException  [FE]            UnrecognizedOptionException    [CONTEXT]      private  void  init()  {  eatTheRest  =  false;  tokens.clear();      [BUGGY]          eatTheRest    =    false;    tokens.clear();    eatTheRest  =  false;  tokens.clear();  currentOption  =  null;  eatTheRest  =  false;  tokens.clear();  currentOption  =  null;  [BUGGY]      currentOption  =  null;  }  [CLASS]  PosixParser  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  ArrayList  tokens  Options  options  Option  currentOption  boolean  eatTheRest  	projects/Cli2/src/java/org/apache/commons/cli/PosixParser.java	1.0	53	53	1	replace	                eatTheRest        =        false;        tokens.clear();        eatTheRest    =    false;    tokens.clear();    currentOption    =    null;    eatTheRest  =  false;  tokens.clear();  currentOption  =  null;	  	compilable	  [FE]  UnrecognizedOptionException  	3	1	add
189	[BUG]  [BUGGY]  [FE]  UnrecognizedOptionException  [FE]    UnrecognizedOptionException    [CONTEXT]      private  void  init()  {  eatTheRest  =  false;  tokens.clear();      [BUGGY]  tokens.clear();  currentOption  =  null;  if(eatTheRest)  {  tokens.clear();  }  [BUGGY]      currentOption  =  null;  }  [CLASS]  PosixParser  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  ArrayList  tokens  Options  options  Option  currentOption  boolean  eatTheRest  	projects/Cli2/src/java/org/apache/commons/cli/PosixParser.java	1.0	53	53	1	add	tokens.clear();  currentOption  =  null;  if(eatTheRest)  {  tokens.clear();  }	          tokens.clear();    currentOption    =    null;    if(eatTheRest)    {    tokens.clear();    currentOption    =    null;    }    	compilable	  [FE]  UnrecognizedOptionException  	156	1	replace
190	[BUG]  [BUGGY]  tokens.clear();  currentOption  =  null;  if(eatTheRest)  {  tokens.clear();  }  [FE]  UnrecognizedOptionException  [FE]    UnrecognizedOptionException    [CONTEXT]      private  void  init()  {  eatTheRest  =  false;  tokens.clear();      [BUGGY]  tokens.clear();  currentOption  =  null;  if(eatTheRest)  {  tokens.clear();  }  [BUGGY]      currentOption  =  null;  }  [CLASS]  PosixParser  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  ArrayList  tokens  Options  options  Option  currentOption  boolean  eatTheRest  	projects/Cli2/src/java/org/apache/commons/cli/PosixParser.java	1.0	53	53	1	replace	tokens.clear();  currentOption  =  null;  if(eatTheRest)  {  tokens.clear();  }	          tokens.clear();    currentOption    =    null;    if(eatTheRest)    {    tokens.clear();    currentOption    =    null;    }    	compilable	  [FE]  UnrecognizedOptionException  	156	1	replace
191	[BUG]  [BUGGY]  options.clear();  currentOption  =  null;  if(eatTheRest)  {  tokens.clear();  currentOption  =  null;  }  [CE]  cannot  find  symbol  [FE]      UnrecognizedOptionException    [CONTEXT]      private  void  init()  {  eatTheRest  =  false;  tokens.clear();      [BUGGY]  options.clear();  currentOption  =  null;  if(eatTheRest)  {  tokens.clear();  currentOption  =  null;  }  [BUGGY]      currentOption  =  null;  }  [CLASS]  PosixParser  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  ArrayList  tokens  Options  options  Option  currentOption  boolean  eatTheRest  	projects/Cli2/src/java/org/apache/commons/cli/PosixParser.java	1.0	53	53	1	replace	options.clear();  currentOption  =  null;  if(eatTheRest)  {  tokens.clear();  currentOption  =  null;  }	          tokens.clear();    currentOption    =    null;    if(eatTheRest)    {    tokens.clear();    currentOption    =    null;    }    	non-compiled	[CE]  cannot  find  symbol	156	None	replace
192	[BUG]  [BUGGY]  [FE]  UnrecognizedOptionException  [FE]    UnrecognizedOptionException    [CONTEXT]      private  void  init()  {  eatTheRest  =  false;  tokens.clear();      [BUGGY]  if(tokens!=  null)  {  currentOption  =  Option.OK_STANDARD;  ArrayList  <  Option>  tokens  =  new  ArrayList  <  Option>(tokens.size());  }  [BUGGY]      }  [CLASS]  PosixParser  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  ArrayList  tokens  Options  options  Option  currentOption  boolean  eatTheRest  	projects/Cli2/src/java/org/apache/commons/cli/PosixParser.java	1.0	53	53	1	add	if(tokens!=  null)  {  currentOption  =  Option.OK_STANDARD;  ArrayList  <  Option>  tokens  =  new  ArrayList  <  Option>(tokens.size());  }	  currentOption    =    Option.OK_STANDARD;    ArrayList    <    Option>    tokens    =    new    ArrayList    <    Option>(tokens.size());    	compilable	  [FE]  UnrecognizedOptionException  	82	1	replace
193	[BUG]  [BUGGY]  if(tokens!=  null)  {  currentOption  =  Option.OK_STANDARD;  ArrayList  <  Option>  tokens  =  new  ArrayList  <  Option>(tokens.size());  }  [FE]  UnrecognizedOptionException  [FE]    UnrecognizedOptionException    [CONTEXT]      private  void  init()  {  eatTheRest  =  false;  tokens.clear();      [BUGGY]  if(tokens!=  null)  {  currentOption  =  Option.OK_STANDARD;  ArrayList  <  Option>  tokens  =  new  ArrayList  <  Option>(tokens.size());  }  [BUGGY]      }  [CLASS]  PosixParser  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  ArrayList  tokens  Options  options  Option  currentOption  boolean  eatTheRest  	projects/Cli2/src/java/org/apache/commons/cli/PosixParser.java	1.0	53	53	1	replace	if(tokens!=  null)  {  currentOption  =  Option.OK_STANDARD;  ArrayList  <  Option>  tokens  =  new  ArrayList  <  Option>(tokens.size());  }	  currentOption    =    Option.OK_STANDARD;    ArrayList    <    Option>    tokens    =    new    ArrayList    <    Option>(tokens.size());    	compilable	  [FE]  UnrecognizedOptionException  	82	1	replace
194	[BUG]  [BUGGY]  [FE]  UnrecognizedOptionException  [FE]      UnrecognizedOptionException    [CONTEXT]      private  void  init()  {  eatTheRest  =  false;  tokens.clear();      [BUGGY]  currentOption  =  Option.OK_STANDARD;  tokens  =  new  ArrayList  <  Option>(tokens.size());  [BUGGY]      }  [CLASS]  PosixParser  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  ArrayList  tokens  Options  options  Option  currentOption  boolean  eatTheRest  	projects/Cli2/src/java/org/apache/commons/cli/PosixParser.java	1.0	53	53	1	add	currentOption  =  Option.OK_STANDARD;  tokens  =  new  ArrayList  <  Option>(tokens.size());	  currentOption    =    Option.OK_STANDARD;    ArrayList    <    Option>    tokens    =    new    ArrayList    <    Option>(tokens.size());    	compilable	  [FE]  UnrecognizedOptionException  	82	1	replace
195	[BUG]  [BUGGY]  currentOption  =  Option.OK_STANDARD;  tokens  =  new  ArrayList  <  Option>(tokens.size());  [FE]  UnrecognizedOptionException  [FE]      UnrecognizedOptionException    [CONTEXT]      private  void  init()  {  eatTheRest  =  false;  tokens.clear();      [BUGGY]  currentOption  =  Option.OK_STANDARD;  tokens  =  new  ArrayList  <  Option>(tokens.size());  [BUGGY]      }  [CLASS]  PosixParser  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  ArrayList  tokens  Options  options  Option  currentOption  boolean  eatTheRest  	projects/Cli2/src/java/org/apache/commons/cli/PosixParser.java	1.0	53	53	1	replace	currentOption  =  Option.OK_STANDARD;  tokens  =  new  ArrayList  <  Option>(tokens.size());	  currentOption    =    Option.OK_STANDARD;    ArrayList    <    Option>    tokens    =    new    ArrayList    <    Option>(tokens.size());    	compilable	  [FE]  UnrecognizedOptionException  	82	1	replace
196	[BUG]  [BUGGY]          ArrayList    <    Option>    tokens    =    new    ArrayList    <    Option>();    Option  option  =  options.getOption(null);  ArrayList  <  Option>  tokens  =  new  ArrayList  <  Option>();  [CE]  variable  tokens  is  already  defined  in  method  init()  [FE]    NullPointerException    [CONTEXT]      private  void  init()  {  eatTheRest  =  false;  tokens.clear();      [BUGGY]          ArrayList    <    Option>    tokens    =    new    ArrayList    <    Option>();    Option  option  =  options.getOption(null);  ArrayList  <  Option>  tokens  =  new  ArrayList  <  Option>();  [BUGGY]      currentOption  =  null;  }  [CLASS]  PosixParser  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  ArrayList  tokens  Options  options  Option  currentOption  boolean  eatTheRest  	projects/Cli2/src/java/org/apache/commons/cli/PosixParser.java	1.0	53	53	1	replace	                ArrayList        <        Option>        tokens        =        new        ArrayList        <        Option>();        Option    option    =    options.getOption(null);    ArrayList  <  Option>  tokens  =  new  ArrayList  <  Option>();	  	non-compiled	[CE]  variable  tokens  is  already  defined  in  method  init()	110	None	add
197	[BUG]  [BUGGY]          ArrayList    <    Option>    tokens    =    new    ArrayList    <    Option>();    Option  option  =  options.getOption(null);  ArrayList  <  Option>  tokens  =  new  ArrayList  <  Option>();  option  =  options.getOption(null);  [CE]  variable  tokens  is  already  defined  in  method  init()  [FE]      NullPointerException    [CONTEXT]      private  void  init()  {  eatTheRest  =  false;  tokens.clear();      [BUGGY]          ArrayList    <    Option>    tokens    =    new    ArrayList    <    Option>();    Option  option  =  options.getOption(null);  ArrayList  <  Option>  tokens  =  new  ArrayList  <  Option>();  option  =  options.getOption(null);  [BUGGY]      currentOption  =  null;  }  [CLASS]  PosixParser  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  ArrayList  tokens  Options  options  Option  currentOption  boolean  eatTheRest  	projects/Cli2/src/java/org/apache/commons/cli/PosixParser.java	1.0	53	53	1	replace	                ArrayList        <        Option>        tokens        =        new        ArrayList        <        Option>();        Option    option    =    options.getOption(null);    ArrayList  <  Option>  tokens  =  new  ArrayList  <  Option>();  option  =  options.getOption(null);	  	non-compiled	[CE]  variable  tokens  is  already  defined  in  method  init()	110	None	add
198	[BUG]  [BUGGY]          ArrayList    <    Option>    tokens    =    new    ArrayList    <    Option>();    Option  option  =  options.getOption(null);  ArrayList  <  Option>  tokens  =  new  ArrayList  <  Option>();  options.getOption(null);  [CE]  variable  tokens  is  already  defined  in  method  init()  [FE]        NullPointerException    [CONTEXT]      private  void  init()  {  eatTheRest  =  false;  tokens.clear();      [BUGGY]          ArrayList    <    Option>    tokens    =    new    ArrayList    <    Option>();    Option  option  =  options.getOption(null);  ArrayList  <  Option>  tokens  =  new  ArrayList  <  Option>();  options.getOption(null);  [BUGGY]      currentOption  =  null;  }  [CLASS]  PosixParser  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  ArrayList  tokens  Options  options  Option  currentOption  boolean  eatTheRest  	projects/Cli2/src/java/org/apache/commons/cli/PosixParser.java	1.0	53	53	1	replace	                ArrayList        <        Option>        tokens        =        new        ArrayList        <        Option>();        Option    option    =    options.getOption(null);    ArrayList  <  Option>  tokens  =  new  ArrayList  <  Option>();  options.getOption(null);	  	non-compiled	[CE]  variable  tokens  is  already  defined  in  method  init()	110	None	add
199	[BUG]  [BUGGY]          ArrayList    <    Option>    tokens    =    new    ArrayList    <    Option>();    Option  option  =  options.getOption(null);  ArrayList  <  Option>  tokens  =  new  ArrayList  <  Option>();  options  =  options.getOption(null);  [CE]  variable  tokens  is  already  defined  in  method  init()  [FE]          NullPointerException    [CONTEXT]      private  void  init()  {  eatTheRest  =  false;  tokens.clear();      [BUGGY]          ArrayList    <    Option>    tokens    =    new    ArrayList    <    Option>();    Option  option  =  options.getOption(null);  ArrayList  <  Option>  tokens  =  new  ArrayList  <  Option>();  options  =  options.getOption(null);  [BUGGY]      currentOption  =  null;  }  [CLASS]  PosixParser  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  ArrayList  tokens  Options  options  Option  currentOption  boolean  eatTheRest  	projects/Cli2/src/java/org/apache/commons/cli/PosixParser.java	1.0	53	53	1	replace	                ArrayList        <        Option>        tokens        =        new        ArrayList        <        Option>();        Option    option    =    options.getOption(null);    ArrayList  <  Option>  tokens  =  new  ArrayList  <  Option>();  options  =  options.getOption(null);	  	non-compiled	[CE]  variable  tokens  is  already  defined  in  method  init()	110	None	add
200	[BUG]  [BUGGY]          ArrayList    <    Option>    tokens    =    new    ArrayList    <    Option>();    Option  option  =  options.getOption(null);  ArrayList  <  Option>  tokens  =  new  ArrayList  <  Option>();  currentOption  =  options.getOption(null);  [CE]  variable  tokens  is  already  defined  in  method  init()  [FE]            NullPointerException    [CONTEXT]      private  void  init()  {  eatTheRest  =  false;  tokens.clear();      [BUGGY]          ArrayList    <    Option>    tokens    =    new    ArrayList    <    Option>();    Option  option  =  options.getOption(null);  ArrayList  <  Option>  tokens  =  new  ArrayList  <  Option>();  currentOption  =  options.getOption(null);  [BUGGY]      currentOption  =  null;  }  [CLASS]  PosixParser  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  ArrayList  tokens  Options  options  Option  currentOption  boolean  eatTheRest  	projects/Cli2/src/java/org/apache/commons/cli/PosixParser.java	1.0	53	53	1	replace	                ArrayList        <        Option>        tokens        =        new        ArrayList        <        Option>();        Option    option    =    options.getOption(null);    ArrayList  <  Option>  tokens  =  new  ArrayList  <  Option>();  currentOption  =  options.getOption(null);	  	non-compiled	[CE]  variable  tokens  is  already  defined  in  method  init()	110	None	add
201	[BUG]  [BUGGY]  [FE]  UnrecognizedOptionException  [FE]    UnrecognizedOptionException    [CONTEXT]      private  void  init()  {  eatTheRest  =  false;  tokens.clear();      [BUGGY]  if(this.options!=  null)  {  eatTheRest  =  false;  tokens.clear();  eatTheRest  =  false;  tokens.clear();  this.currentOption  =  null;  }  [BUGGY]      currentOption  =  null;  }  [CLASS]  PosixParser  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  ArrayList  tokens  Options  options  Option  currentOption  boolean  eatTheRest  	projects/Cli2/src/java/org/apache/commons/cli/PosixParser.java	1.0	53	53	1	add	if(this.options!=  null)  {  eatTheRest  =  false;  tokens.clear();  eatTheRest  =  false;  tokens.clear();  this.currentOption  =  null;  }	          eatTheRest    =    false;    tokens.clear();    eatTheRest    =    false;    tokens.clear();    this.currentOption    =    null;    	compilable	  [FE]  UnrecognizedOptionException  	9	1	replace
202	[BUG]  [BUGGY]  if(this.options!=  null)  {  eatTheRest  =  false;  tokens.clear();  eatTheRest  =  false;  tokens.clear();  this.currentOption  =  null;  }  [FE]  UnrecognizedOptionException  [FE]    UnrecognizedOptionException    [CONTEXT]      private  void  init()  {  eatTheRest  =  false;  tokens.clear();      [BUGGY]  if(this.options!=  null)  {  eatTheRest  =  false;  tokens.clear();  eatTheRest  =  false;  tokens.clear();  this.currentOption  =  null;  }  [BUGGY]      currentOption  =  null;  }  [CLASS]  PosixParser  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  ArrayList  tokens  Options  options  Option  currentOption  boolean  eatTheRest  	projects/Cli2/src/java/org/apache/commons/cli/PosixParser.java	1.0	53	53	1	replace	if(this.options!=  null)  {  eatTheRest  =  false;  tokens.clear();  eatTheRest  =  false;  tokens.clear();  this.currentOption  =  null;  }	          eatTheRest    =    false;    tokens.clear();    eatTheRest    =    false;    tokens.clear();    this.currentOption    =    null;    	compilable	  [FE]  UnrecognizedOptionException  	9	1	replace
203	[BUG]  [BUGGY]  [FE]  UnrecognizedOptionException  [FE]      UnrecognizedOptionException    [CONTEXT]      private  void  init()  {  eatTheRest  =  false;  tokens.clear();      [BUGGY]  if(currentOption!=  null)  {  eatTheRest  =  false;  tokens.clear();  eatTheRest  =  false;  tokens.clear();  this.currentOption  =  null;  }  [BUGGY]      currentOption  =  null;  }  [CLASS]  PosixParser  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  ArrayList  tokens  Options  options  Option  currentOption  boolean  eatTheRest  	projects/Cli2/src/java/org/apache/commons/cli/PosixParser.java	1.0	53	53	1	add	if(currentOption!=  null)  {  eatTheRest  =  false;  tokens.clear();  eatTheRest  =  false;  tokens.clear();  this.currentOption  =  null;  }	          eatTheRest    =    false;    tokens.clear();    eatTheRest    =    false;    tokens.clear();    this.currentOption    =    null;    	compilable	  [FE]  UnrecognizedOptionException  	9	1	replace
204	[BUG]  [BUGGY]  if(currentOption!=  null)  {  eatTheRest  =  false;  tokens.clear();  eatTheRest  =  false;  tokens.clear();  this.currentOption  =  null;  }  [FE]  UnrecognizedOptionException  [FE]      UnrecognizedOptionException    [CONTEXT]      private  void  init()  {  eatTheRest  =  false;  tokens.clear();      [BUGGY]  if(currentOption!=  null)  {  eatTheRest  =  false;  tokens.clear();  eatTheRest  =  false;  tokens.clear();  this.currentOption  =  null;  }  [BUGGY]      currentOption  =  null;  }  [CLASS]  PosixParser  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  ArrayList  tokens  Options  options  Option  currentOption  boolean  eatTheRest  	projects/Cli2/src/java/org/apache/commons/cli/PosixParser.java	1.0	53	53	1	replace	if(currentOption!=  null)  {  eatTheRest  =  false;  tokens.clear();  eatTheRest  =  false;  tokens.clear();  this.currentOption  =  null;  }	          eatTheRest    =    false;    tokens.clear();    eatTheRest    =    false;    tokens.clear();    this.currentOption    =    null;    	compilable	  [FE]  UnrecognizedOptionException  	9	1	replace
205	[BUG]  [BUGGY]  [FE]  UnrecognizedOptionException  [FE]        UnrecognizedOptionException    [CONTEXT]      private  void  init()  {  eatTheRest  =  false;  tokens.clear();      [BUGGY]  if(this.currentOption!=  null)  {  eatTheRest  =  false;  tokens.clear();  eatTheRest  =  false;  tokens.clear();  this.currentOption  =  null;  }  [BUGGY]      currentOption  =  null;  }  [CLASS]  PosixParser  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  ArrayList  tokens  Options  options  Option  currentOption  boolean  eatTheRest  	projects/Cli2/src/java/org/apache/commons/cli/PosixParser.java	1.0	53	53	1	add	if(this.currentOption!=  null)  {  eatTheRest  =  false;  tokens.clear();  eatTheRest  =  false;  tokens.clear();  this.currentOption  =  null;  }	          eatTheRest    =    false;    tokens.clear();    eatTheRest    =    false;    tokens.clear();    this.currentOption    =    null;    	compilable	  [FE]  UnrecognizedOptionException  	9	1	replace
206	[BUG]  [BUGGY]  if(this.currentOption!=  null)  {  eatTheRest  =  false;  tokens.clear();  eatTheRest  =  false;  tokens.clear();  this.currentOption  =  null;  }  [FE]  UnrecognizedOptionException  [FE]        UnrecognizedOptionException    [CONTEXT]      private  void  init()  {  eatTheRest  =  false;  tokens.clear();      [BUGGY]  if(this.currentOption!=  null)  {  eatTheRest  =  false;  tokens.clear();  eatTheRest  =  false;  tokens.clear();  this.currentOption  =  null;  }  [BUGGY]      currentOption  =  null;  }  [CLASS]  PosixParser  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  ArrayList  tokens  Options  options  Option  currentOption  boolean  eatTheRest  	projects/Cli2/src/java/org/apache/commons/cli/PosixParser.java	1.0	53	53	1	replace	if(this.currentOption!=  null)  {  eatTheRest  =  false;  tokens.clear();  eatTheRest  =  false;  tokens.clear();  this.currentOption  =  null;  }	          eatTheRest    =    false;    tokens.clear();    eatTheRest    =    false;    tokens.clear();    this.currentOption    =    null;    	compilable	  [FE]  UnrecognizedOptionException  	9	1	replace
207	[BUG]  [BUGGY]  [FE]  UnrecognizedOptionException  [FE]          UnrecognizedOptionException    [CONTEXT]      private  void  init()  {  eatTheRest  =  false;  tokens.clear();      [BUGGY]  if(this.options!=  null)  {  eatTheRest  =  false;  tokens.clear();  eatTheRest  =  true;  tokens.clear();  this.currentOption  =  null;  }  [BUGGY]      currentOption  =  null;  }  [CLASS]  PosixParser  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  ArrayList  tokens  Options  options  Option  currentOption  boolean  eatTheRest  	projects/Cli2/src/java/org/apache/commons/cli/PosixParser.java	1.0	53	53	1	add	if(this.options!=  null)  {  eatTheRest  =  false;  tokens.clear();  eatTheRest  =  true;  tokens.clear();  this.currentOption  =  null;  }	          eatTheRest    =    false;    tokens.clear();    eatTheRest    =    false;    tokens.clear();    this.currentOption    =    null;    	compilable	  [FE]  UnrecognizedOptionException  	9	1	replace
208	[BUG]  [BUGGY]  if(this.options!=  null)  {  eatTheRest  =  false;  tokens.clear();  eatTheRest  =  true;  tokens.clear();  this.currentOption  =  null;  }  [FE]  UnrecognizedOptionException  [FE]          UnrecognizedOptionException    [CONTEXT]      private  void  init()  {  eatTheRest  =  false;  tokens.clear();      [BUGGY]  if(this.options!=  null)  {  eatTheRest  =  false;  tokens.clear();  eatTheRest  =  true;  tokens.clear();  this.currentOption  =  null;  }  [BUGGY]      currentOption  =  null;  }  [CLASS]  PosixParser  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  ArrayList  tokens  Options  options  Option  currentOption  boolean  eatTheRest  	projects/Cli2/src/java/org/apache/commons/cli/PosixParser.java	1.0	53	53	1	replace	if(this.options!=  null)  {  eatTheRest  =  false;  tokens.clear();  eatTheRest  =  true;  tokens.clear();  this.currentOption  =  null;  }	          eatTheRest    =    false;    tokens.clear();    eatTheRest    =    false;    tokens.clear();    this.currentOption    =    null;    	compilable	  [FE]  UnrecognizedOptionException  	9	1	replace
209	[BUG]  [BUGGY]  if(currentOption!=  null)  {  eatTheRest  =  false;  tokens.clear();  eattheRest  =  false;  tokens.clear();  }  [CE]  cannot  find  symbol  eattheRest  [FE]            UnrecognizedOptionException      [CONTEXT]      private  void  init()  {  eatTheRest  =  false;  tokens.clear();      [BUGGY]  if(currentOption!=  null)  {  eatTheRest  =  false;  tokens.clear();  eattheRest  =  false;  tokens.clear();  }  [BUGGY]      currentOption  =  null;  }  [CLASS]  PosixParser  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  ArrayList  tokens  Options  options  Option  currentOption  boolean  eatTheRest  	projects/Cli2/src/java/org/apache/commons/cli/PosixParser.java	1.0	53	53	1	replace	if(currentOption!=  null)  {  eatTheRest  =  false;  tokens.clear();  eattheRest  =  false;  tokens.clear();  }	          eatTheRest    =    false;    tokens.clear();    eattheRest    =    false;    tokens.clear();    	non-compiled	[CE]  cannot  find  symbol  eattheRest	5	None	replace
210	[BUG]  [BUGGY]  if(currentOption  ==  null)  {  eatTheRest  =  false;  tokens.clear();  eattheRest  =  false;  tokens.clear();  }  [CE]  cannot  find  symbol  eattheRest  [FE]              UnrecognizedOptionException      [CONTEXT]      private  void  init()  {  eatTheRest  =  false;  tokens.clear();      [BUGGY]  if(currentOption  ==  null)  {  eatTheRest  =  false;  tokens.clear();  eattheRest  =  false;  tokens.clear();  }  [BUGGY]      currentOption  =  null;  }  [CLASS]  PosixParser  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  ArrayList  tokens  Options  options  Option  currentOption  boolean  eatTheRest  	projects/Cli2/src/java/org/apache/commons/cli/PosixParser.java	1.0	53	53	1	replace	if(currentOption  ==  null)  {  eatTheRest  =  false;  tokens.clear();  eattheRest  =  false;  tokens.clear();  }	          eatTheRest    =    false;    tokens.clear();    eattheRest    =    false;    tokens.clear();    	non-compiled	[CE]  cannot  find  symbol  eattheRest	5	None	replace
211	[BUG]  [BUGGY]  if(currentOption!=  null)  {  eatTheRest  =  false;  tokens.clear();  eattheRest  =  false;  tokens.clear();  }  else  {  currentOption  =  null;  }  [CE]  cannot  find  symbol  eattheRest  [FE]                UnrecognizedOptionException      [CONTEXT]      private  void  init()  {  eatTheRest  =  false;  tokens.clear();      [BUGGY]  if(currentOption!=  null)  {  eatTheRest  =  false;  tokens.clear();  eattheRest  =  false;  tokens.clear();  }  else  {  currentOption  =  null;  }  [BUGGY]      currentOption  =  null;  }  [CLASS]  PosixParser  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  ArrayList  tokens  Options  options  Option  currentOption  boolean  eatTheRest  	projects/Cli2/src/java/org/apache/commons/cli/PosixParser.java	1.0	53	53	1	replace	if(currentOption!=  null)  {  eatTheRest  =  false;  tokens.clear();  eattheRest  =  false;  tokens.clear();  }  else  {  currentOption  =  null;  }	          eatTheRest    =    false;    tokens.clear();    eattheRest    =    false;    tokens.clear();    	non-compiled	[CE]  cannot  find  symbol  eattheRest	5	None	replace
212	[BUG]  [BUGGY]  tokens.add(new  Option( "Position "),  options);  [CE]  no  suitable  constructor  found  for  Option(String)  [FE]          UnrecognizedOptionException      [CONTEXT]      private  void  init()  {  eatTheRest  =  false;  tokens.clear();      [BUGGY]  tokens.add(new  Option( "Position "),  options);  [BUGGY]      currentOption  =  null;  }  [CLASS]  PosixParser  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  ArrayList  tokens  Options  options  Option  currentOption  boolean  eatTheRest  	projects/Cli2/src/java/org/apache/commons/cli/PosixParser.java	1.0	53	53	1	replace	tokens.add(new  Option( "Position "),  options);	  tokens.add(new    Option(   "Position   "));    	non-compiled	[CE]  no  suitable  constructor  found  for  Option(String)	98	None	replace
213	[BUG]  [BUGGY]  tokens.add(new  Option( "Option "));  [CE]  no  suitable  constructor  found  for  Option(String)  [FE]            UnrecognizedOptionException      [CONTEXT]      private  void  init()  {  eatTheRest  =  false;  tokens.clear();      [BUGGY]  tokens.add(new  Option( "Option "));  [BUGGY]      currentOption  =  null;  }  [CLASS]  PosixParser  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  ArrayList  tokens  Options  options  Option  currentOption  boolean  eatTheRest  	projects/Cli2/src/java/org/apache/commons/cli/PosixParser.java	1.0	53	53	1	replace	tokens.add(new  Option( "Option "));	  tokens.add(new    Option(   "Position   "));    	non-compiled	[CE]  no  suitable  constructor  found  for  Option(String)	98	None	replace
214	[BUG]  [BUGGY]  tokens.clear();  TokenBuffer  tokens  =  new  TokenBuffer(tokens.size()  -  1);  tokens.clear();  [CE]  cannot  find  symbol  [FE]        UnrecognizedOptionException      [CONTEXT]      private  void  init()  {  eatTheRest  =  false;  tokens.clear();      [BUGGY]  tokens.clear();  TokenBuffer  tokens  =  new  TokenBuffer(tokens.size()  -  1);  tokens.clear();  [BUGGY]      currentOption  =  null;  }  [CLASS]  PosixParser  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  ArrayList  tokens  Options  options  Option  currentOption  boolean  eatTheRest  	projects/Cli2/src/java/org/apache/commons/cli/PosixParser.java	1.0	53	53	1	replace	tokens.clear();  TokenBuffer  tokens  =  new  TokenBuffer(tokens.size()  -  1);  tokens.clear();	          tokens.clear();    TokenBuffer    tokens    =    new    TokenBuffer(tokens.size());    tokens.clear();    	non-compiled	[CE]  cannot  find  symbol	145	None	replace
215	[BUG]  [BUGGY]  tokens.clear();  TokenBuffer  tokens  =  new  TokenBuffer(tokens.size()  +  1);  tokens.clear();  [CE]  cannot  find  symbol  [FE]          UnrecognizedOptionException      [CONTEXT]      private  void  init()  {  eatTheRest  =  false;  tokens.clear();      [BUGGY]  tokens.clear();  TokenBuffer  tokens  =  new  TokenBuffer(tokens.size()  +  1);  tokens.clear();  [BUGGY]      currentOption  =  null;  }  [CLASS]  PosixParser  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  ArrayList  tokens  Options  options  Option  currentOption  boolean  eatTheRest  	projects/Cli2/src/java/org/apache/commons/cli/PosixParser.java	1.0	53	53	1	replace	tokens.clear();  TokenBuffer  tokens  =  new  TokenBuffer(tokens.size()  +  1);  tokens.clear();	          tokens.clear();    TokenBuffer    tokens    =    new    TokenBuffer(tokens.size());    tokens.clear();    	non-compiled	[CE]  cannot  find  symbol	145	None	replace
216	[BUG]  [BUGGY]  ArrayList  tokens  =  new  ArrayList();  Option  currentOption  =  options.getOption(PREFIX);  [CE]  cannot  find  symbol  PREFIX  [FE]              UnrecognizedOptionException      [CONTEXT]      private  void  init()  {  eatTheRest  =  false;  tokens.clear();      [BUGGY]  ArrayList  tokens  =  new  ArrayList();  Option  currentOption  =  options.getOption(PREFIX);  [BUGGY]      currentOption  =  null;  }  [CLASS]  PosixParser  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  ArrayList  tokens  Options  options  Option  currentOption  boolean  eatTheRest  	projects/Cli2/src/java/org/apache/commons/cli/PosixParser.java	1.0	53	53	1	replace	ArrayList  tokens  =  new  ArrayList();  Option  currentOption  =  options.getOption(PREFIX);	          ArrayList    tokens    =    new    ArrayList();    Option    currentOption    =    options.getOption(OPTIONAL_PREFIX);    	non-compiled	[CE]  cannot  find  symbol  PREFIX	35	None	replace
217	[BUG]  [BUGGY]  ArrayList  tokens  =  new  ArrayList();  Option  currentOption  =  options.getOption(REST_OPTIONAL_PREFIX);  [CE]  cannot  find  symbol  REST_OPTIONAL_PREFIX  [FE]                UnrecognizedOptionException      [CONTEXT]      private  void  init()  {  eatTheRest  =  false;  tokens.clear();      [BUGGY]  ArrayList  tokens  =  new  ArrayList();  Option  currentOption  =  options.getOption(REST_OPTIONAL_PREFIX);  [BUGGY]      currentOption  =  null;  }  [CLASS]  PosixParser  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  ArrayList  tokens  Options  options  Option  currentOption  boolean  eatTheRest  	projects/Cli2/src/java/org/apache/commons/cli/PosixParser.java	1.0	53	53	1	replace	ArrayList  tokens  =  new  ArrayList();  Option  currentOption  =  options.getOption(REST_OPTIONAL_PREFIX);	          ArrayList    tokens    =    new    ArrayList();    Option    currentOption    =    options.getOption(OPTIONAL_PREFIX);    	non-compiled	[CE]  cannot  find  symbol  REST_OPTIONAL_PREFIX	35	None	replace
218	[BUG]  [BUGGY]  [FE]  UnrecognizedOptionException  [FE]    UnrecognizedOptionException    [CONTEXT]      private  void  init()  {  eatTheRest  =  false;  tokens.clear();      [BUGGY]  tokens.remove( "- ");  [BUGGY]      currentOption  =  null;  }  [CLASS]  PosixParser  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  ArrayList  tokens  Options  options  Option  currentOption  boolean  eatTheRest  	projects/Cli2/src/java/org/apache/commons/cli/PosixParser.java	1.0	53	53	1	add	tokens.remove( "- ");	  tokens.add(   "-   ");    	compilable	  [FE]  UnrecognizedOptionException  	100	1	replace
219	[BUG]  [BUGGY]  tokens.remove( "- ");  [FE]  UnrecognizedOptionException  [FE]    UnrecognizedOptionException    [CONTEXT]      private  void  init()  {  eatTheRest  =  false;  tokens.clear();      [BUGGY]  tokens.remove( "- ");  [BUGGY]      currentOption  =  null;  }  [CLASS]  PosixParser  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  ArrayList  tokens  Options  options  Option  currentOption  boolean  eatTheRest  	projects/Cli2/src/java/org/apache/commons/cli/PosixParser.java	1.0	53	53	1	replace	tokens.remove( "- ");	  tokens.add(   "-   ");    	compilable	  [FE]  UnrecognizedOptionException  	100	1	replace
220	[BUG]  [BUGGY]  [FE]  UnrecognizedOptionException  [FE]      UnrecognizedOptionException    [CONTEXT]      private  void  init()  {  eatTheRest  =  false;  tokens.clear();      [BUGGY]  tokens.add( "-n ");  [BUGGY]      currentOption  =  null;  }  [CLASS]  PosixParser  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  ArrayList  tokens  Options  options  Option  currentOption  boolean  eatTheRest  	projects/Cli2/src/java/org/apache/commons/cli/PosixParser.java	1.0	53	53	1	add	tokens.add( "-n ");	  tokens.add(   "-   ");    	compilable	  [FE]  UnrecognizedOptionException  	100	1	replace
221	[BUG]  [BUGGY]  tokens.add( "-n ");  [FE]  UnrecognizedOptionException  [FE]      UnrecognizedOptionException    [CONTEXT]      private  void  init()  {  eatTheRest  =  false;  tokens.clear();      [BUGGY]  tokens.add( "-n ");  [BUGGY]      currentOption  =  null;  }  [CLASS]  PosixParser  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  ArrayList  tokens  Options  options  Option  currentOption  boolean  eatTheRest  	projects/Cli2/src/java/org/apache/commons/cli/PosixParser.java	1.0	53	53	1	replace	tokens.add( "-n ");	  tokens.add(   "-   ");    	compilable	  [FE]  UnrecognizedOptionException  	100	1	replace
222	[BUG]  [BUGGY]  [FE]  UnrecognizedOptionException  [FE]    UnrecognizedOptionException    [CONTEXT]      private  void  init()  {  eatTheRest  =  false;  tokens.clear();      [BUGGY]  currentOption    =    Option.OK_STANDARD;    tokens.clear();  currentOption  =  Option.OK_STANDARD;  tokens.clear();  [BUGGY]      }  [CLASS]  PosixParser  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  ArrayList  tokens  Options  options  Option  currentOption  boolean  eatTheRest  	projects/Cli2/src/java/org/apache/commons/cli/PosixParser.java	1.0	53	53	1	add	currentOption        =        Option.OK_STANDARD;        tokens.clear();    currentOption  =  Option.OK_STANDARD;  tokens.clear();	  	compilable	  [FE]  UnrecognizedOptionException  	151	1	add
223	[BUG]  [BUGGY]  currentOption    =    Option.OK_STANDARD;    tokens.clear();  currentOption  =  Option.OK_STANDARD;  tokens.clear();  [FE]  UnrecognizedOptionException  [FE]    UnrecognizedOptionException    [CONTEXT]      private  void  init()  {  eatTheRest  =  false;  tokens.clear();      [BUGGY]  currentOption    =    Option.OK_STANDARD;    tokens.clear();  currentOption  =  Option.OK_STANDARD;  tokens.clear();  [BUGGY]      }  [CLASS]  PosixParser  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  ArrayList  tokens  Options  options  Option  currentOption  boolean  eatTheRest  	projects/Cli2/src/java/org/apache/commons/cli/PosixParser.java	1.0	53	53	1	replace	currentOption        =        Option.OK_STANDARD;        tokens.clear();    currentOption  =  Option.OK_STANDARD;  tokens.clear();	  	compilable	  [FE]  UnrecognizedOptionException  	151	1	add
224	[BUG]  [BUGGY]  [FE]  UnrecognizedOptionException  [FE]      UnrecognizedOptionException    [CONTEXT]      private  void  init()  {  eatTheRest  =  false;  tokens.clear();      [BUGGY]  currentOption    =    Option.OK_STANDARD;    tokens.clear();  if(currentOption!=  null)  {  currentOption  =  Option.OK_STANDARD;  tokens.clear();  }  [BUGGY]      }  [CLASS]  PosixParser  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  ArrayList  tokens  Options  options  Option  currentOption  boolean  eatTheRest  	projects/Cli2/src/java/org/apache/commons/cli/PosixParser.java	1.0	53	53	1	add	currentOption        =        Option.OK_STANDARD;        tokens.clear();    if(currentOption!=  null)  {  currentOption  =  Option.OK_STANDARD;  tokens.clear();  }	  	compilable	  [FE]  UnrecognizedOptionException  	151	1	add
225	[BUG]  [BUGGY]  currentOption    =    Option.OK_STANDARD;    tokens.clear();  if(currentOption!=  null)  {  currentOption  =  Option.OK_STANDARD;  tokens.clear();  }  [FE]  UnrecognizedOptionException  [FE]      UnrecognizedOptionException    [CONTEXT]      private  void  init()  {  eatTheRest  =  false;  tokens.clear();      [BUGGY]  currentOption    =    Option.OK_STANDARD;    tokens.clear();  if(currentOption!=  null)  {  currentOption  =  Option.OK_STANDARD;  tokens.clear();  }  [BUGGY]      }  [CLASS]  PosixParser  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  ArrayList  tokens  Options  options  Option  currentOption  boolean  eatTheRest  	projects/Cli2/src/java/org/apache/commons/cli/PosixParser.java	1.0	53	53	1	replace	currentOption        =        Option.OK_STANDARD;        tokens.clear();    if(currentOption!=  null)  {  currentOption  =  Option.OK_STANDARD;  tokens.clear();  }	  	compilable	  [FE]  UnrecognizedOptionException  	151	1	add
226	[BUG]  [BUGGY]  [FE]  UnrecognizedOptionException  [FE]        UnrecognizedOptionException    [CONTEXT]      private  void  init()  {  eatTheRest  =  false;  tokens.clear();      [BUGGY]  currentOption    =    Option.OK_STANDARD;    tokens.clear();  Option  currentOption  =  Option.OK_STANDARD;  tokens.clear();  [BUGGY]      }  [CLASS]  PosixParser  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  ArrayList  tokens  Options  options  Option  currentOption  boolean  eatTheRest  	projects/Cli2/src/java/org/apache/commons/cli/PosixParser.java	1.0	53	53	1	add	currentOption        =        Option.OK_STANDARD;        tokens.clear();    Option  currentOption  =  Option.OK_STANDARD;  tokens.clear();	  	compilable	  [FE]  UnrecognizedOptionException  	151	1	add
227	[BUG]  [BUGGY]  currentOption    =    Option.OK_STANDARD;    tokens.clear();  Option  currentOption  =  Option.OK_STANDARD;  tokens.clear();  [FE]  UnrecognizedOptionException  [FE]        UnrecognizedOptionException    [CONTEXT]      private  void  init()  {  eatTheRest  =  false;  tokens.clear();      [BUGGY]  currentOption    =    Option.OK_STANDARD;    tokens.clear();  Option  currentOption  =  Option.OK_STANDARD;  tokens.clear();  [BUGGY]      }  [CLASS]  PosixParser  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  ArrayList  tokens  Options  options  Option  currentOption  boolean  eatTheRest  	projects/Cli2/src/java/org/apache/commons/cli/PosixParser.java	1.0	53	53	1	replace	currentOption        =        Option.OK_STANDARD;        tokens.clear();    Option  currentOption  =  Option.OK_STANDARD;  tokens.clear();	  	compilable	  [FE]  UnrecognizedOptionException  	151	1	add
228	[BUG]  [BUGGY]  [FE]  UnrecognizedOptionException  [FE]          UnrecognizedOptionException    [CONTEXT]      private  void  init()  {  eatTheRest  =  false;  tokens.clear();      [BUGGY]  currentOption    =    Option.OK_STANDARD;    tokens.clear();  tokens.clear();  [BUGGY]      }  [CLASS]  PosixParser  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  ArrayList  tokens  Options  options  Option  currentOption  boolean  eatTheRest  	projects/Cli2/src/java/org/apache/commons/cli/PosixParser.java	1.0	53	53	1	add	currentOption        =        Option.OK_STANDARD;        tokens.clear();    tokens.clear();	  	compilable	  [FE]  UnrecognizedOptionException  	151	1	add
229	[BUG]  [BUGGY]  currentOption    =    Option.OK_STANDARD;    tokens.clear();  tokens.clear();  [FE]  UnrecognizedOptionException  [FE]          UnrecognizedOptionException    [CONTEXT]      private  void  init()  {  eatTheRest  =  false;  tokens.clear();      [BUGGY]  currentOption    =    Option.OK_STANDARD;    tokens.clear();  tokens.clear();  [BUGGY]      }  [CLASS]  PosixParser  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  ArrayList  tokens  Options  options  Option  currentOption  boolean  eatTheRest  	projects/Cli2/src/java/org/apache/commons/cli/PosixParser.java	1.0	53	53	1	replace	currentOption        =        Option.OK_STANDARD;        tokens.clear();    tokens.clear();	  	compilable	  [FE]  UnrecognizedOptionException  	151	1	add
230	[BUG]  [BUGGY]  [FE]  UnrecognizedOptionException  [FE]            UnrecognizedOptionException    [CONTEXT]      private  void  init()  {  eatTheRest  =  false;  tokens.clear();      [BUGGY]  currentOption    =    Option.OK_STANDARD;    tokens.clear();  currentOption  =  Option.OK_FALSE;  tokens.clear();  [BUGGY]      }  [CLASS]  PosixParser  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  ArrayList  tokens  Options  options  Option  currentOption  boolean  eatTheRest  	projects/Cli2/src/java/org/apache/commons/cli/PosixParser.java	1.0	53	53	1	add	currentOption        =        Option.OK_STANDARD;        tokens.clear();    currentOption  =  Option.OK_FALSE;  tokens.clear();	  	compilable	  [FE]  UnrecognizedOptionException  	151	1	add
231	[BUG]  [BUGGY]  currentOption    =    Option.OK_STANDARD;    tokens.clear();  currentOption  =  Option.OK_FALSE;  tokens.clear();  [FE]  UnrecognizedOptionException  [FE]            UnrecognizedOptionException    [CONTEXT]      private  void  init()  {  eatTheRest  =  false;  tokens.clear();      [BUGGY]  currentOption    =    Option.OK_STANDARD;    tokens.clear();  currentOption  =  Option.OK_FALSE;  tokens.clear();  [BUGGY]      }  [CLASS]  PosixParser  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  ArrayList  tokens  Options  options  Option  currentOption  boolean  eatTheRest  	projects/Cli2/src/java/org/apache/commons/cli/PosixParser.java	1.0	53	53	1	replace	currentOption        =        Option.OK_STANDARD;        tokens.clear();    currentOption  =  Option.OK_FALSE;  tokens.clear();	  	compilable	  [FE]  UnrecognizedOptionException  	151	1	add
232	[BUG]  [BUGGY]  [FE]  UnrecognizedOptionException  [FE]    UnrecognizedOptionException    [CONTEXT]      private  void  init()  {  eatTheRest  =  false;  tokens.clear();      [BUGGY]  currentOption  =  Option.OK_STANDARD;  tokens  =  new  ArrayList  <  Option>();  [BUGGY]      }  [CLASS]  PosixParser  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  ArrayList  tokens  Options  options  Option  currentOption  boolean  eatTheRest  	projects/Cli2/src/java/org/apache/commons/cli/PosixParser.java	1.0	53	53	1	add	currentOption  =  Option.OK_STANDARD;  tokens  =  new  ArrayList  <  Option>();	  currentOption    =    Option.OK_STANDARD;    ArrayList    <    Option>    tokens    =    new    ArrayList    <    Option>();    	compilable	  [FE]  UnrecognizedOptionException  	88	1	replace
233	[BUG]  [BUGGY]  currentOption  =  Option.OK_STANDARD;  tokens  =  new  ArrayList  <  Option>();  [FE]  UnrecognizedOptionException  [FE]    UnrecognizedOptionException    [CONTEXT]      private  void  init()  {  eatTheRest  =  false;  tokens.clear();      [BUGGY]  currentOption  =  Option.OK_STANDARD;  tokens  =  new  ArrayList  <  Option>();  [BUGGY]      }  [CLASS]  PosixParser  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  ArrayList  tokens  Options  options  Option  currentOption  boolean  eatTheRest  	projects/Cli2/src/java/org/apache/commons/cli/PosixParser.java	1.0	53	53	1	replace	currentOption  =  Option.OK_STANDARD;  tokens  =  new  ArrayList  <  Option>();	  currentOption    =    Option.OK_STANDARD;    ArrayList    <    Option>    tokens    =    new    ArrayList    <    Option>();    	compilable	  [FE]  UnrecognizedOptionException  	88	1	replace
234	[BUG]  [BUGGY]  [FE]  UnrecognizedOptionException  [FE]      UnrecognizedOptionException    [CONTEXT]      private  void  init()  {  eatTheRest  =  false;  tokens.clear();      [BUGGY]  tokens  =  new  ArrayList  <  Option>();  [BUGGY]      }  [CLASS]  PosixParser  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  ArrayList  tokens  Options  options  Option  currentOption  boolean  eatTheRest  	projects/Cli2/src/java/org/apache/commons/cli/PosixParser.java	1.0	53	53	1	add	tokens  =  new  ArrayList  <  Option>();	  currentOption    =    Option.OK_STANDARD;    ArrayList    <    Option>    tokens    =    new    ArrayList    <    Option>();    	compilable	  [FE]  UnrecognizedOptionException  	88	1	replace
235	[BUG]  [BUGGY]  tokens  =  new  ArrayList  <  Option>();  [FE]  UnrecognizedOptionException  [FE]      UnrecognizedOptionException    [CONTEXT]      private  void  init()  {  eatTheRest  =  false;  tokens.clear();      [BUGGY]  tokens  =  new  ArrayList  <  Option>();  [BUGGY]      }  [CLASS]  PosixParser  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  ArrayList  tokens  Options  options  Option  currentOption  boolean  eatTheRest  	projects/Cli2/src/java/org/apache/commons/cli/PosixParser.java	1.0	53	53	1	replace	tokens  =  new  ArrayList  <  Option>();	  currentOption    =    Option.OK_STANDARD;    ArrayList    <    Option>    tokens    =    new    ArrayList    <    Option>();    	compilable	  [FE]  UnrecognizedOptionException  	88	1	replace
236	[BUG]  [BUGGY]  List  tokens  =  new  ArrayList();  this.eatTheRest  =  true;  [CE]  cannot  find  symbol  [FE]          UnrecognizedOptionException      [CONTEXT]      private  void  init()  {  eatTheRest  =  false;  tokens.clear();      [BUGGY]  List  tokens  =  new  ArrayList();  this.eatTheRest  =  true;  [BUGGY]      currentOption  =  null;  }  [CLASS]  PosixParser  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  ArrayList  tokens  Options  options  Option  currentOption  boolean  eatTheRest  	projects/Cli2/src/java/org/apache/commons/cli/PosixParser.java	1.0	53	53	1	replace	List  tokens  =  new  ArrayList();  this.eatTheRest  =  true;	          ArrayList    tokens    =    new    ArrayList();    ArrayList    tokens    =    new    ArrayList();    this.eatTheRest    =    true;    	non-compiled	[CE]  cannot  find  symbol	150	None	replace
237	[BUG]  [BUGGY]  [FE]  UnrecognizedOptionException  [FE]            UnrecognizedOptionException      [CONTEXT]      private  void  init()  {  eatTheRest  =  false;  tokens.clear();      [BUGGY]  ArrayList  tokens  =  new  ArrayList();  this.eatTheRest  =  false;  [BUGGY]      currentOption  =  null;  }  [CLASS]  PosixParser  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  ArrayList  tokens  Options  options  Option  currentOption  boolean  eatTheRest  	projects/Cli2/src/java/org/apache/commons/cli/PosixParser.java	1.0	53	53	1	add	ArrayList  tokens  =  new  ArrayList();  this.eatTheRest  =  false;	          ArrayList    tokens    =    new    ArrayList();    ArrayList    tokens    =    new    ArrayList();    this.eatTheRest    =    true;    	compilable	  [FE]  UnrecognizedOptionException  	150	1	replace
238	[BUG]  [BUGGY]  ArrayList  tokens  =  new  ArrayList();  this.eatTheRest  =  false;  [FE]  UnrecognizedOptionException  [FE]            UnrecognizedOptionException      [CONTEXT]      private  void  init()  {  eatTheRest  =  false;  tokens.clear();      [BUGGY]  ArrayList  tokens  =  new  ArrayList();  this.eatTheRest  =  false;  [BUGGY]      currentOption  =  null;  }  [CLASS]  PosixParser  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  ArrayList  tokens  Options  options  Option  currentOption  boolean  eatTheRest  	projects/Cli2/src/java/org/apache/commons/cli/PosixParser.java	1.0	53	53	1	replace	ArrayList  tokens  =  new  ArrayList();  this.eatTheRest  =  false;	          ArrayList    tokens    =    new    ArrayList();    ArrayList    tokens    =    new    ArrayList();    this.eatTheRest    =    true;    	compilable	  [FE]  UnrecognizedOptionException  	150	1	replace
239	[BUG]  [BUGGY]  currentOption  =  Option.NEGATIVE  &&  tokens.size()  >  1;  [CE]  cannot  find  symbol  NEGATIVE  [FE]            UnrecognizedOptionException      [CONTEXT]      private  void  init()  {  eatTheRest  =  false;  tokens.clear();      [BUGGY]  currentOption  =  Option.NEGATIVE  &&  tokens.size()  >  1;  [BUGGY]      }  [CLASS]  PosixParser  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  ArrayList  tokens  Options  options  Option  currentOption  boolean  eatTheRest  	projects/Cli2/src/java/org/apache/commons/cli/PosixParser.java	1.0	53	53	1	replace	currentOption  =  Option.NEGATIVE  &&  tokens.size()  >  1;	  currentOption    =    Option.NEGATIVE;    	non-compiled	[CE]  cannot  find  symbol  NEGATIVE	165	None	replace
240	[BUG]  [BUGGY]  [FE]  UnrecognizedOptionException  [FE]    UnrecognizedOptionException    [CONTEXT]      private  void  init()  {  eatTheRest  =  false;  tokens.clear();      [BUGGY]  currentOption    =    Option.OK_STANDARD;    ArrayList  <  Option>  tokens  =  new  ArrayList  <  Option>();  ArrayList  <  Option>  tokens  =  new  ArrayList  <  Option>();  [BUGGY]      }  [CLASS]  PosixParser  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  ArrayList  tokens  Options  options  Option  currentOption  boolean  eatTheRest  	projects/Cli2/src/java/org/apache/commons/cli/PosixParser.java	1.0	53	53	1	add	currentOption        =        Option.OK_STANDARD;        ArrayList    <    Option>    tokens    =    new    ArrayList    <    Option>();    ArrayList  <  Option>  tokens  =  new  ArrayList  <  Option>();	  	compilable	  [FE]  UnrecognizedOptionException  	87	1	add
241	[BUG]  [BUGGY]  currentOption    =    Option.OK_STANDARD;    ArrayList  <  Option>  tokens  =  new  ArrayList  <  Option>();  ArrayList  <  Option>  tokens  =  new  ArrayList  <  Option>();  [FE]  UnrecognizedOptionException  [FE]    UnrecognizedOptionException    [CONTEXT]      private  void  init()  {  eatTheRest  =  false;  tokens.clear();      [BUGGY]  currentOption    =    Option.OK_STANDARD;    ArrayList  <  Option>  tokens  =  new  ArrayList  <  Option>();  ArrayList  <  Option>  tokens  =  new  ArrayList  <  Option>();  [BUGGY]      }  [CLASS]  PosixParser  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  ArrayList  tokens  Options  options  Option  currentOption  boolean  eatTheRest  	projects/Cli2/src/java/org/apache/commons/cli/PosixParser.java	1.0	53	53	1	replace	currentOption        =        Option.OK_STANDARD;        ArrayList    <    Option>    tokens    =    new    ArrayList    <    Option>();    ArrayList  <  Option>  tokens  =  new  ArrayList  <  Option>();	  	compilable	  [FE]  UnrecognizedOptionException  	87	1	add
242	[BUG]  [BUGGY]  [FE]  UnrecognizedOptionException  [FE]      UnrecognizedOptionException    [CONTEXT]      private  void  init()  {  eatTheRest  =  false;  tokens.clear();      [BUGGY]  currentOption    =    Option.OK_STANDARD;    ArrayList  <  Option>  tokens  =  new  ArrayList  <  Option>();  currentOption  =  Option.OK_STANDARD;  [BUGGY]      }  [CLASS]  PosixParser  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  ArrayList  tokens  Options  options  Option  currentOption  boolean  eatTheRest  	projects/Cli2/src/java/org/apache/commons/cli/PosixParser.java	1.0	53	53	1	add	currentOption        =        Option.OK_STANDARD;        ArrayList    <    Option>    tokens    =    new    ArrayList    <    Option>();    currentOption  =  Option.OK_STANDARD;	  	compilable	  [FE]  UnrecognizedOptionException  	87	1	add
243	[BUG]  [BUGGY]  currentOption    =    Option.OK_STANDARD;    ArrayList  <  Option>  tokens  =  new  ArrayList  <  Option>();  currentOption  =  Option.OK_STANDARD;  [FE]  UnrecognizedOptionException  [FE]      UnrecognizedOptionException    [CONTEXT]      private  void  init()  {  eatTheRest  =  false;  tokens.clear();      [BUGGY]  currentOption    =    Option.OK_STANDARD;    ArrayList  <  Option>  tokens  =  new  ArrayList  <  Option>();  currentOption  =  Option.OK_STANDARD;  [BUGGY]      }  [CLASS]  PosixParser  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  ArrayList  tokens  Options  options  Option  currentOption  boolean  eatTheRest  	projects/Cli2/src/java/org/apache/commons/cli/PosixParser.java	1.0	53	53	1	replace	currentOption        =        Option.OK_STANDARD;        ArrayList    <    Option>    tokens    =    new    ArrayList    <    Option>();    currentOption  =  Option.OK_STANDARD;	  	compilable	  [FE]  UnrecognizedOptionException  	87	1	add
244	[BUG]  [BUGGY]  [FE]  UnrecognizedOptionException  [FE]        UnrecognizedOptionException    [CONTEXT]      private  void  init()  {  eatTheRest  =  false;  tokens.clear();      [BUGGY]  currentOption    =    Option.OK_STANDARD;    ArrayList  <  Option>  tokens  =  new  ArrayList  <  Option>();  ArrayList  <  Option>  tokens  =  new  ArrayList  <  Option>();  currentOption  =  Option.OK_STANDARD;  [BUGGY]      }  [CLASS]  PosixParser  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  ArrayList  tokens  Options  options  Option  currentOption  boolean  eatTheRest  	projects/Cli2/src/java/org/apache/commons/cli/PosixParser.java	1.0	53	53	1	add	currentOption        =        Option.OK_STANDARD;        ArrayList    <    Option>    tokens    =    new    ArrayList    <    Option>();    ArrayList  <  Option>  tokens  =  new  ArrayList  <  Option>();  currentOption  =  Option.OK_STANDARD;	  	compilable	  [FE]  UnrecognizedOptionException  	87	1	add
245	[BUG]  [BUGGY]  currentOption    =    Option.OK_STANDARD;    ArrayList  <  Option>  tokens  =  new  ArrayList  <  Option>();  ArrayList  <  Option>  tokens  =  new  ArrayList  <  Option>();  currentOption  =  Option.OK_STANDARD;  [FE]  UnrecognizedOptionException  [FE]        UnrecognizedOptionException    [CONTEXT]      private  void  init()  {  eatTheRest  =  false;  tokens.clear();      [BUGGY]  currentOption    =    Option.OK_STANDARD;    ArrayList  <  Option>  tokens  =  new  ArrayList  <  Option>();  ArrayList  <  Option>  tokens  =  new  ArrayList  <  Option>();  currentOption  =  Option.OK_STANDARD;  [BUGGY]      }  [CLASS]  PosixParser  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  ArrayList  tokens  Options  options  Option  currentOption  boolean  eatTheRest  	projects/Cli2/src/java/org/apache/commons/cli/PosixParser.java	1.0	53	53	1	replace	currentOption        =        Option.OK_STANDARD;        ArrayList    <    Option>    tokens    =    new    ArrayList    <    Option>();    ArrayList  <  Option>  tokens  =  new  ArrayList  <  Option>();  currentOption  =  Option.OK_STANDARD;	  	compilable	  [FE]  UnrecognizedOptionException  	87	1	add
246	[BUG]  [BUGGY]  [FE]  UnrecognizedOptionException  [FE]          UnrecognizedOptionException    [CONTEXT]      private  void  init()  {  eatTheRest  =  false;  tokens.clear();      [BUGGY]  currentOption    =    Option.OK_STANDARD;    ArrayList  <  Option>  tokens  =  new  ArrayList  <  Option>();  if(currentOption!=  null)  {  currentOption  =  Option.OK_STANDARD;  tokens.clear();  }  [BUGGY]      }  [CLASS]  PosixParser  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  ArrayList  tokens  Options  options  Option  currentOption  boolean  eatTheRest  	projects/Cli2/src/java/org/apache/commons/cli/PosixParser.java	1.0	53	53	1	add	currentOption        =        Option.OK_STANDARD;        ArrayList    <    Option>    tokens    =    new    ArrayList    <    Option>();    if(currentOption!=  null)  {  currentOption  =  Option.OK_STANDARD;  tokens.clear();  }	  	compilable	  [FE]  UnrecognizedOptionException  	87	1	add
247	[BUG]  [BUGGY]  currentOption    =    Option.OK_STANDARD;    ArrayList  <  Option>  tokens  =  new  ArrayList  <  Option>();  if(currentOption!=  null)  {  currentOption  =  Option.OK_STANDARD;  tokens.clear();  }  [FE]  UnrecognizedOptionException  [FE]          UnrecognizedOptionException    [CONTEXT]      private  void  init()  {  eatTheRest  =  false;  tokens.clear();      [BUGGY]  currentOption    =    Option.OK_STANDARD;    ArrayList  <  Option>  tokens  =  new  ArrayList  <  Option>();  if(currentOption!=  null)  {  currentOption  =  Option.OK_STANDARD;  tokens.clear();  }  [BUGGY]      }  [CLASS]  PosixParser  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  ArrayList  tokens  Options  options  Option  currentOption  boolean  eatTheRest  	projects/Cli2/src/java/org/apache/commons/cli/PosixParser.java	1.0	53	53	1	replace	currentOption        =        Option.OK_STANDARD;        ArrayList    <    Option>    tokens    =    new    ArrayList    <    Option>();    if(currentOption!=  null)  {  currentOption  =  Option.OK_STANDARD;  tokens.clear();  }	  	compilable	  [FE]  UnrecognizedOptionException  	87	1	add
248	[BUG]  [BUGGY]  [FE]  UnrecognizedOptionException  [FE]            UnrecognizedOptionException    [CONTEXT]      private  void  init()  {  eatTheRest  =  false;  tokens.clear();      [BUGGY]  currentOption    =    Option.OK_STANDARD;    ArrayList  <  Option>  tokens  =  new  ArrayList  <  Option>();  if(currentOption  ==  null)  {  currentOption  =  Option.OK_STANDARD;  tokens.clear();  }  [BUGGY]      }  [CLASS]  PosixParser  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  ArrayList  tokens  Options  options  Option  currentOption  boolean  eatTheRest  	projects/Cli2/src/java/org/apache/commons/cli/PosixParser.java	1.0	53	53	1	add	currentOption        =        Option.OK_STANDARD;        ArrayList    <    Option>    tokens    =    new    ArrayList    <    Option>();    if(currentOption  ==  null)  {  currentOption  =  Option.OK_STANDARD;  tokens.clear();  }	  	compilable	  [FE]  UnrecognizedOptionException  	87	1	add
249	[BUG]  [BUGGY]  currentOption    =    Option.OK_STANDARD;    ArrayList  <  Option>  tokens  =  new  ArrayList  <  Option>();  if(currentOption  ==  null)  {  currentOption  =  Option.OK_STANDARD;  tokens.clear();  }  [FE]  UnrecognizedOptionException  [FE]            UnrecognizedOptionException    [CONTEXT]      private  void  init()  {  eatTheRest  =  false;  tokens.clear();      [BUGGY]  currentOption    =    Option.OK_STANDARD;    ArrayList  <  Option>  tokens  =  new  ArrayList  <  Option>();  if(currentOption  ==  null)  {  currentOption  =  Option.OK_STANDARD;  tokens.clear();  }  [BUGGY]      }  [CLASS]  PosixParser  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  ArrayList  tokens  Options  options  Option  currentOption  boolean  eatTheRest  	projects/Cli2/src/java/org/apache/commons/cli/PosixParser.java	1.0	53	53	1	replace	currentOption        =        Option.OK_STANDARD;        ArrayList    <    Option>    tokens    =    new    ArrayList    <    Option>();    if(currentOption  ==  null)  {  currentOption  =  Option.OK_STANDARD;  tokens.clear();  }	  	compilable	  [FE]  UnrecognizedOptionException  	87	1	add
250	[BUG]  [BUGGY]          tokens.clear();    ArrayList  tokens  =  new  ArrayList  <  Option>();  tokens.clear();  ArrayList  <  Option>>  tokens  =  new  ArrayList  <  Option>();  [CE]  not  a  statement  [FE]    UnrecognizedOptionException    [CONTEXT]      private  void  init()  {  eatTheRest  =  false;  tokens.clear();      [BUGGY]          tokens.clear();    ArrayList  tokens  =  new  ArrayList  <  Option>();  tokens.clear();  ArrayList  <  Option>>  tokens  =  new  ArrayList  <  Option>();  [BUGGY]      currentOption  =  null;  }  [CLASS]  PosixParser  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  ArrayList  tokens  Options  options  Option  currentOption  boolean  eatTheRest  	projects/Cli2/src/java/org/apache/commons/cli/PosixParser.java	1.0	53	53	1	replace	                tokens.clear();        ArrayList    tokens    =    new    ArrayList    <    Option>();    tokens.clear();  ArrayList  <  Option>>  tokens  =  new  ArrayList  <  Option>();	  	non-compiled	[CE]  not  a  statement	105	None	add
251	[BUG]  [BUGGY]          tokens.clear();    ArrayList  tokens  =  new  ArrayList  <  Option>();  ArrayList  <  Option>  tokens  =  new  ArrayList  <  Option>();  [CE]  variable  tokens  is  already  defined  in  method  init()  [FE]      UnrecognizedOptionException    [CONTEXT]      private  void  init()  {  eatTheRest  =  false;  tokens.clear();      [BUGGY]          tokens.clear();    ArrayList  tokens  =  new  ArrayList  <  Option>();  ArrayList  <  Option>  tokens  =  new  ArrayList  <  Option>();  [BUGGY]      currentOption  =  null;  }  [CLASS]  PosixParser  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  ArrayList  tokens  Options  options  Option  currentOption  boolean  eatTheRest  	projects/Cli2/src/java/org/apache/commons/cli/PosixParser.java	1.0	53	53	1	replace	                tokens.clear();        ArrayList    tokens    =    new    ArrayList    <    Option>();    ArrayList  <  Option>  tokens  =  new  ArrayList  <  Option>();	  	non-compiled	[CE]  variable  tokens  is  already  defined  in  method  init()	105	None	add
252	[BUG]  [BUGGY]          tokens.clear();    ArrayList  tokens  =  new  ArrayList  <  Option>();  tokens.clear();  ArrayList  <  Option>  tokens  =  new  ArrayList  <  Option>();  [CE]  variable  tokens  is  already  defined  in  method  init()  [FE]        UnrecognizedOptionException    [CONTEXT]      private  void  init()  {  eatTheRest  =  false;  tokens.clear();      [BUGGY]          tokens.clear();    ArrayList  tokens  =  new  ArrayList  <  Option>();  tokens.clear();  ArrayList  <  Option>  tokens  =  new  ArrayList  <  Option>();  [BUGGY]      currentOption  =  null;  }  [CLASS]  PosixParser  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  ArrayList  tokens  Options  options  Option  currentOption  boolean  eatTheRest  	projects/Cli2/src/java/org/apache/commons/cli/PosixParser.java	1.0	53	53	1	replace	                tokens.clear();        ArrayList    tokens    =    new    ArrayList    <    Option>();    tokens.clear();  ArrayList  <  Option>  tokens  =  new  ArrayList  <  Option>();	  	non-compiled	[CE]  variable  tokens  is  already  defined  in  method  init()	105	None	add
253	[BUG]  [BUGGY]  [FE]  UnrecognizedOptionException  [FE]          UnrecognizedOptionException    [CONTEXT]      private  void  init()  {  eatTheRest  =  false;  tokens.clear();      [BUGGY]          tokens.clear();    ArrayList  tokens  =  new  ArrayList  <  Option>();  tokens.clear();  ArrayList  <  Option>  options  =  new  ArrayList  <  Option>();  [BUGGY]      currentOption  =  null;  }  [CLASS]  PosixParser  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  ArrayList  tokens  Options  options  Option  currentOption  boolean  eatTheRest  	projects/Cli2/src/java/org/apache/commons/cli/PosixParser.java	1.0	53	53	1	add	                tokens.clear();        ArrayList    tokens    =    new    ArrayList    <    Option>();    tokens.clear();  ArrayList  <  Option>  options  =  new  ArrayList  <  Option>();	  	compilable	  [FE]  UnrecognizedOptionException  	105	1	add
254	[BUG]  [BUGGY]          tokens.clear();    ArrayList  tokens  =  new  ArrayList  <  Option>();  tokens.clear();  ArrayList  <  Option>  options  =  new  ArrayList  <  Option>();  [FE]  UnrecognizedOptionException  [FE]          UnrecognizedOptionException    [CONTEXT]      private  void  init()  {  eatTheRest  =  false;  tokens.clear();      [BUGGY]          tokens.clear();    ArrayList  tokens  =  new  ArrayList  <  Option>();  tokens.clear();  ArrayList  <  Option>  options  =  new  ArrayList  <  Option>();  [BUGGY]      currentOption  =  null;  }  [CLASS]  PosixParser  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  ArrayList  tokens  Options  options  Option  currentOption  boolean  eatTheRest  	projects/Cli2/src/java/org/apache/commons/cli/PosixParser.java	1.0	53	53	1	replace	                tokens.clear();        ArrayList    tokens    =    new    ArrayList    <    Option>();    tokens.clear();  ArrayList  <  Option>  options  =  new  ArrayList  <  Option>();	  	compilable	  [FE]  UnrecognizedOptionException  	105	1	add
255	[BUG]  [BUGGY]          tokens.clear();    ArrayList  tokens  =  new  ArrayList  <  Option>();  tokens.clear();  ArrayList  <  Option>)  {  currentOption  =  null;  [CE]  not  a  statement  [FE]            UnrecognizedOptionException    [CONTEXT]      private  void  init()  {  eatTheRest  =  false;  tokens.clear();      [BUGGY]          tokens.clear();    ArrayList  tokens  =  new  ArrayList  <  Option>();  tokens.clear();  ArrayList  <  Option>)  {  currentOption  =  null;  [BUGGY]      currentOption  =  null;  }  [CLASS]  PosixParser  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  ArrayList  tokens  Options  options  Option  currentOption  boolean  eatTheRest  	projects/Cli2/src/java/org/apache/commons/cli/PosixParser.java	1.0	53	53	1	replace	                tokens.clear();        ArrayList    tokens    =    new    ArrayList    <    Option>();    tokens.clear();  ArrayList  <  Option>)  {  currentOption  =  null;	  	non-compiled	[CE]  not  a  statement	105	None	add
256	[BUG]  [BUGGY]  [FE]  UnrecognizedOptionException  [FE]    UnrecognizedOptionException    [CONTEXT]      private  void  init()  {  eatTheRest  =  false;  tokens.clear();      [BUGGY]  if(!eatTheRest)  {  tokens.clear();  ArrayList  tokens  =  new  ArrayList  <  Option>();  }  [BUGGY]      currentOption  =  null;  }  [CLASS]  PosixParser  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  ArrayList  tokens  Options  options  Option  currentOption  boolean  eatTheRest  	projects/Cli2/src/java/org/apache/commons/cli/PosixParser.java	1.0	53	53	1	add	if(!eatTheRest)  {  tokens.clear();  ArrayList  tokens  =  new  ArrayList  <  Option>();  }	          tokens.clear();    ArrayList    tokens    =    new    ArrayList    <    Option>();    	compilable	  [FE]  UnrecognizedOptionException  	106	1	replace
257	[BUG]  [BUGGY]  if(!eatTheRest)  {  tokens.clear();  ArrayList  tokens  =  new  ArrayList  <  Option>();  }  [FE]  UnrecognizedOptionException  [FE]    UnrecognizedOptionException    [CONTEXT]      private  void  init()  {  eatTheRest  =  false;  tokens.clear();      [BUGGY]  if(!eatTheRest)  {  tokens.clear();  ArrayList  tokens  =  new  ArrayList  <  Option>();  }  [BUGGY]      currentOption  =  null;  }  [CLASS]  PosixParser  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  ArrayList  tokens  Options  options  Option  currentOption  boolean  eatTheRest  	projects/Cli2/src/java/org/apache/commons/cli/PosixParser.java	1.0	53	53	1	replace	if(!eatTheRest)  {  tokens.clear();  ArrayList  tokens  =  new  ArrayList  <  Option>();  }	          tokens.clear();    ArrayList    tokens    =    new    ArrayList    <    Option>();    	compilable	  [FE]  UnrecognizedOptionException  	106	1	replace
258	[BUG]  [BUGGY]  null.clear();  ArrayList  <  Option>  tokens  =  new  ArrayList  <  Option>();  [CE]  <null>  cannot  be  dereferenced  [FE]      UnrecognizedOptionException    [CONTEXT]      private  void  init()  {  eatTheRest  =  false;  tokens.clear();      [BUGGY]  null.clear();  ArrayList  <  Option>  tokens  =  new  ArrayList  <  Option>();  [BUGGY]      currentOption  =  null;  }  [CLASS]  PosixParser  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  ArrayList  tokens  Options  options  Option  currentOption  boolean  eatTheRest  	projects/Cli2/src/java/org/apache/commons/cli/PosixParser.java	1.0	53	53	1	replace	null.clear();  ArrayList  <  Option>  tokens  =  new  ArrayList  <  Option>();	          tokens.clear();    ArrayList    tokens    =    new    ArrayList    <    Option>();    	non-compiled	[CE]  <null>  cannot  be  dereferenced	106	None	replace
259	[BUG]  [BUGGY]  [FE]  UnrecognizedOptionException  [FE]        UnrecognizedOptionException    [CONTEXT]      private  void  init()  {  eatTheRest  =  false;  tokens.clear();      [BUGGY]  if(!eatTheRest)  {  tokens.clear();  ArrayList  <  Option>  tokens  =  new  ArrayList  <  Option>();  }  [BUGGY]      currentOption  =  null;  }  [CLASS]  PosixParser  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  ArrayList  tokens  Options  options  Option  currentOption  boolean  eatTheRest  	projects/Cli2/src/java/org/apache/commons/cli/PosixParser.java	1.0	53	53	1	add	if(!eatTheRest)  {  tokens.clear();  ArrayList  <  Option>  tokens  =  new  ArrayList  <  Option>();  }	          tokens.clear();    ArrayList    tokens    =    new    ArrayList    <    Option>();    	compilable	  [FE]  UnrecognizedOptionException  	106	1	replace
260	[BUG]  [BUGGY]  if(!eatTheRest)  {  tokens.clear();  ArrayList  <  Option>  tokens  =  new  ArrayList  <  Option>();  }  [FE]  UnrecognizedOptionException  [FE]        UnrecognizedOptionException    [CONTEXT]      private  void  init()  {  eatTheRest  =  false;  tokens.clear();      [BUGGY]  if(!eatTheRest)  {  tokens.clear();  ArrayList  <  Option>  tokens  =  new  ArrayList  <  Option>();  }  [BUGGY]      currentOption  =  null;  }  [CLASS]  PosixParser  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  ArrayList  tokens  Options  options  Option  currentOption  boolean  eatTheRest  	projects/Cli2/src/java/org/apache/commons/cli/PosixParser.java	1.0	53	53	1	replace	if(!eatTheRest)  {  tokens.clear();  ArrayList  <  Option>  tokens  =  new  ArrayList  <  Option>();  }	          tokens.clear();    ArrayList    tokens    =    new    ArrayList    <    Option>();    	compilable	  [FE]  UnrecognizedOptionException  	106	1	replace
261	[BUG]  [BUGGY]  currentOption  =  Option.NONE  ||  tokens;  [CE]  cannot  find  symbol  NONE  [FE]            UnrecognizedOptionException      [CONTEXT]      private  void  init()  {  eatTheRest  =  false;  tokens.clear();      [BUGGY]  currentOption  =  Option.NONE  ||  tokens;  [BUGGY]      }  [CLASS]  PosixParser  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  ArrayList  tokens  Options  options  Option  currentOption  boolean  eatTheRest  	projects/Cli2/src/java/org/apache/commons/cli/PosixParser.java	1.0	53	53	1	replace	currentOption  =  Option.NONE  ||  tokens;	  currentOption    =    Option.NONE    ||    eatTheRest;    	non-compiled	[CE]  cannot  find  symbol  NONE	141	None	replace
262	[BUG]  [BUGGY]  currentOption  =  Option.NONE  &&  eatTheRest;  [CE]  cannot  find  symbol  NONE  [FE]              UnrecognizedOptionException      [CONTEXT]      private  void  init()  {  eatTheRest  =  false;  tokens.clear();      [BUGGY]  currentOption  =  Option.NONE  &&  eatTheRest;  [BUGGY]      }  [CLASS]  PosixParser  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  ArrayList  tokens  Options  options  Option  currentOption  boolean  eatTheRest  	projects/Cli2/src/java/org/apache/commons/cli/PosixParser.java	1.0	53	53	1	replace	currentOption  =  Option.NONE  &&  eatTheRest;	  currentOption    =    Option.NONE    ||    eatTheRest;    	non-compiled	[CE]  cannot  find  symbol  NONE	141	None	replace
263	[BUG]  [BUGGY]  currentOption  =  Option.None  ||  tokens;  [CE]  cannot  find  symbol  None  [FE]                UnrecognizedOptionException      [CONTEXT]      private  void  init()  {  eatTheRest  =  false;  tokens.clear();      [BUGGY]  currentOption  =  Option.None  ||  tokens;  [BUGGY]      }  [CLASS]  PosixParser  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  ArrayList  tokens  Options  options  Option  currentOption  boolean  eatTheRest  	projects/Cli2/src/java/org/apache/commons/cli/PosixParser.java	1.0	53	53	1	replace	currentOption  =  Option.None  ||  tokens;	  currentOption    =    Option.NONE    ||    eatTheRest;    	non-compiled	[CE]  cannot  find  symbol  None	141	None	replace
264	[BUG]  [BUGGY]  [FE]  UnrecognizedOptionException  [FE]    UnrecognizedOptionException    [CONTEXT]      private  void  init()  {  eatTheRest  =  false;  tokens.clear();      [BUGGY]  if(!eatTheRest)  {  eatTheRest  =  false;  tokens.clear();  }  if(!eatTheRest)  {  eatTheRest  =  false;  tokens.clear();  }  [BUGGY]      currentOption  =  null;  }  [CLASS]  PosixParser  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  ArrayList  tokens  Options  options  Option  currentOption  boolean  eatTheRest  	projects/Cli2/src/java/org/apache/commons/cli/PosixParser.java	1.0	53	53	1	add	if(!eatTheRest)    {    eatTheRest    =    false;    tokens.clear();    }    if(!eatTheRest)  {  eatTheRest  =  false;  tokens.clear();  }	  	compilable	  [FE]  UnrecognizedOptionException  	115	1	add
265	[BUG]  [BUGGY]  if(!eatTheRest)  {  eatTheRest  =  false;  tokens.clear();  }  if(!eatTheRest)  {  eatTheRest  =  false;  tokens.clear();  }  [FE]  UnrecognizedOptionException  [FE]    UnrecognizedOptionException    [CONTEXT]      private  void  init()  {  eatTheRest  =  false;  tokens.clear();      [BUGGY]  if(!eatTheRest)  {  eatTheRest  =  false;  tokens.clear();  }  if(!eatTheRest)  {  eatTheRest  =  false;  tokens.clear();  }  [BUGGY]      currentOption  =  null;  }  [CLASS]  PosixParser  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  ArrayList  tokens  Options  options  Option  currentOption  boolean  eatTheRest  	projects/Cli2/src/java/org/apache/commons/cli/PosixParser.java	1.0	53	53	1	replace	if(!eatTheRest)    {    eatTheRest    =    false;    tokens.clear();    }    if(!eatTheRest)  {  eatTheRest  =  false;  tokens.clear();  }	  	compilable	  [FE]  UnrecognizedOptionException  	115	1	add
266	[BUG]  [BUGGY]  if(!eatTheRest)  {  eatTheRest  =  false;  tokens.clear();  }  if(!eatTheRest)  {  eattheRest  =  false;  tokens.clear();  }  [CE]  cannot  find  symbol  eattheRest  [FE]      UnrecognizedOptionException    [CONTEXT]      private  void  init()  {  eatTheRest  =  false;  tokens.clear();      [BUGGY]  if(!eatTheRest)  {  eatTheRest  =  false;  tokens.clear();  }  if(!eatTheRest)  {  eattheRest  =  false;  tokens.clear();  }  [BUGGY]      currentOption  =  null;  }  [CLASS]  PosixParser  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  ArrayList  tokens  Options  options  Option  currentOption  boolean  eatTheRest  	projects/Cli2/src/java/org/apache/commons/cli/PosixParser.java	1.0	53	53	1	replace	if(!eatTheRest)    {    eatTheRest    =    false;    tokens.clear();    }    if(!eatTheRest)  {  eattheRest  =  false;  tokens.clear();  }	  	non-compiled	[CE]  cannot  find  symbol  eattheRest	115	None	add
267	[BUG]  [BUGGY]  if(!eatTheRest)  {  eatTheRest  =  false;  tokens.clear();  }  if(!eattheRest)  {  eatTheRest  =  false;  tokens.clear();  }  [CE]  cannot  find  symbol  eattheRest  [FE]        UnrecognizedOptionException    [CONTEXT]      private  void  init()  {  eatTheRest  =  false;  tokens.clear();      [BUGGY]  if(!eatTheRest)  {  eatTheRest  =  false;  tokens.clear();  }  if(!eattheRest)  {  eatTheRest  =  false;  tokens.clear();  }  [BUGGY]      currentOption  =  null;  }  [CLASS]  PosixParser  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  ArrayList  tokens  Options  options  Option  currentOption  boolean  eatTheRest  	projects/Cli2/src/java/org/apache/commons/cli/PosixParser.java	1.0	53	53	1	replace	if(!eatTheRest)    {    eatTheRest    =    false;    tokens.clear();    }    if(!eattheRest)  {  eatTheRest  =  false;  tokens.clear();  }	  	non-compiled	[CE]  cannot  find  symbol  eattheRest	115	None	add
268	[BUG]  [BUGGY]  [FE]  UnrecognizedOptionException  [FE]          UnrecognizedOptionException      [CONTEXT]      private  void  init()  {  eatTheRest  =  false;  tokens.clear();      [BUGGY]  ArrayList  tokens  =  new  ArrayList();  currentOption  =  null;  [BUGGY]      currentOption  =  null;  }  [CLASS]  PosixParser  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  ArrayList  tokens  Options  options  Option  currentOption  boolean  eatTheRest  	projects/Cli2/src/java/org/apache/commons/cli/PosixParser.java	1.0	53	53	1	add	ArrayList  tokens  =  new  ArrayList();  currentOption  =  null;	          ArrayList    tokens    =    new    ArrayList();    ArrayList    tokens    =    new    ArrayList();    currentOption    =    null;    	compilable	  [FE]  UnrecognizedOptionException  	33	1	replace
269	[BUG]  [BUGGY]  ArrayList  tokens  =  new  ArrayList();  currentOption  =  null;  [FE]  UnrecognizedOptionException  [FE]          UnrecognizedOptionException      [CONTEXT]      private  void  init()  {  eatTheRest  =  false;  tokens.clear();      [BUGGY]  ArrayList  tokens  =  new  ArrayList();  currentOption  =  null;  [BUGGY]      currentOption  =  null;  }  [CLASS]  PosixParser  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  ArrayList  tokens  Options  options  Option  currentOption  boolean  eatTheRest  	projects/Cli2/src/java/org/apache/commons/cli/PosixParser.java	1.0	53	53	1	replace	ArrayList  tokens  =  new  ArrayList();  currentOption  =  null;	          ArrayList    tokens    =    new    ArrayList();    ArrayList    tokens    =    new    ArrayList();    currentOption    =    null;    	compilable	  [FE]  UnrecognizedOptionException  	33	1	replace
270	[BUG]  [BUGGY]  List  tokens  =  new  ArrayList();  currentOption  =  null;  [CE]  cannot  find  symbol  [FE]            UnrecognizedOptionException      [CONTEXT]      private  void  init()  {  eatTheRest  =  false;  tokens.clear();      [BUGGY]  List  tokens  =  new  ArrayList();  currentOption  =  null;  [BUGGY]      currentOption  =  null;  }  [CLASS]  PosixParser  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  ArrayList  tokens  Options  options  Option  currentOption  boolean  eatTheRest  	projects/Cli2/src/java/org/apache/commons/cli/PosixParser.java	1.0	53	53	1	replace	List  tokens  =  new  ArrayList();  currentOption  =  null;	          ArrayList    tokens    =    new    ArrayList();    ArrayList    tokens    =    new    ArrayList();    currentOption    =    null;    	non-compiled	[CE]  cannot  find  symbol	33	None	replace
271	[BUG]  [BUGGY]  [FE]  UnrecognizedOptionException  [FE]    UnrecognizedOptionException    [CONTEXT]      private  void  init()  {  eatTheRest  =  false;  tokens.clear();      [BUGGY]  currentOption    =    Option.OK_STANDARD;    ArrayList  <  Option>  tokens  =  new  ArrayList  <  Option>(tokens);  ArrayList  <  Option>  tokens  =  new  ArrayList  <  Option>(tokens);  [BUGGY]      }  [CLASS]  PosixParser  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  ArrayList  tokens  Options  options  Option  currentOption  boolean  eatTheRest  	projects/Cli2/src/java/org/apache/commons/cli/PosixParser.java	1.0	53	53	1	add	currentOption        =        Option.OK_STANDARD;        ArrayList    <    Option>    tokens    =    new    ArrayList    <    Option>(tokens);    ArrayList  <  Option>  tokens  =  new  ArrayList  <  Option>(tokens);	  	compilable	  [FE]  UnrecognizedOptionException  	101	1	add
272	[BUG]  [BUGGY]  currentOption    =    Option.OK_STANDARD;    ArrayList  <  Option>  tokens  =  new  ArrayList  <  Option>(tokens);  ArrayList  <  Option>  tokens  =  new  ArrayList  <  Option>(tokens);  [FE]  UnrecognizedOptionException  [FE]    UnrecognizedOptionException    [CONTEXT]      private  void  init()  {  eatTheRest  =  false;  tokens.clear();      [BUGGY]  currentOption    =    Option.OK_STANDARD;    ArrayList  <  Option>  tokens  =  new  ArrayList  <  Option>(tokens);  ArrayList  <  Option>  tokens  =  new  ArrayList  <  Option>(tokens);  [BUGGY]      }  [CLASS]  PosixParser  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  ArrayList  tokens  Options  options  Option  currentOption  boolean  eatTheRest  	projects/Cli2/src/java/org/apache/commons/cli/PosixParser.java	1.0	53	53	1	replace	currentOption        =        Option.OK_STANDARD;        ArrayList    <    Option>    tokens    =    new    ArrayList    <    Option>(tokens);    ArrayList  <  Option>  tokens  =  new  ArrayList  <  Option>(tokens);	  	compilable	  [FE]  UnrecognizedOptionException  	101	1	add
273	[BUG]  [BUGGY]  [FE]  UnrecognizedOptionException  [FE]      UnrecognizedOptionException    [CONTEXT]      private  void  init()  {  eatTheRest  =  false;  tokens.clear();      [BUGGY]  currentOption    =    Option.OK_STANDARD;    ArrayList  <  Option>  tokens  =  new  ArrayList  <  Option>(tokens);  ArrayList  <  Option>  tokens  =  new  ArrayList  <  Option>(tokens);  currentOption  =  Option.OK_STANDARD;  [BUGGY]      }  [CLASS]  PosixParser  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  ArrayList  tokens  Options  options  Option  currentOption  boolean  eatTheRest  	projects/Cli2/src/java/org/apache/commons/cli/PosixParser.java	1.0	53	53	1	add	currentOption        =        Option.OK_STANDARD;        ArrayList    <    Option>    tokens    =    new    ArrayList    <    Option>(tokens);    ArrayList  <  Option>  tokens  =  new  ArrayList  <  Option>(tokens);  currentOption  =  Option.OK_STANDARD;	  	compilable	  [FE]  UnrecognizedOptionException  	101	1	add
274	[BUG]  [BUGGY]  currentOption    =    Option.OK_STANDARD;    ArrayList  <  Option>  tokens  =  new  ArrayList  <  Option>(tokens);  ArrayList  <  Option>  tokens  =  new  ArrayList  <  Option>(tokens);  currentOption  =  Option.OK_STANDARD;  [FE]  UnrecognizedOptionException  [FE]      UnrecognizedOptionException    [CONTEXT]      private  void  init()  {  eatTheRest  =  false;  tokens.clear();      [BUGGY]  currentOption    =    Option.OK_STANDARD;    ArrayList  <  Option>  tokens  =  new  ArrayList  <  Option>(tokens);  ArrayList  <  Option>  tokens  =  new  ArrayList  <  Option>(tokens);  currentOption  =  Option.OK_STANDARD;  [BUGGY]      }  [CLASS]  PosixParser  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  ArrayList  tokens  Options  options  Option  currentOption  boolean  eatTheRest  	projects/Cli2/src/java/org/apache/commons/cli/PosixParser.java	1.0	53	53	1	replace	currentOption        =        Option.OK_STANDARD;        ArrayList    <    Option>    tokens    =    new    ArrayList    <    Option>(tokens);    ArrayList  <  Option>  tokens  =  new  ArrayList  <  Option>(tokens);  currentOption  =  Option.OK_STANDARD;	  	compilable	  [FE]  UnrecognizedOptionException  	101	1	add
275	[BUG]  [BUGGY]  [FE]  UnrecognizedOptionException  [FE]        UnrecognizedOptionException    [CONTEXT]      private  void  init()  {  eatTheRest  =  false;  tokens.clear();      [BUGGY]  currentOption    =    Option.OK_STANDARD;    ArrayList  <  Option>  tokens  =  new  ArrayList  <  Option>(tokens);  currentOption  =  Option.OK_STANDARD;  [BUGGY]      }  [CLASS]  PosixParser  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  ArrayList  tokens  Options  options  Option  currentOption  boolean  eatTheRest  	projects/Cli2/src/java/org/apache/commons/cli/PosixParser.java	1.0	53	53	1	add	currentOption        =        Option.OK_STANDARD;        ArrayList    <    Option>    tokens    =    new    ArrayList    <    Option>(tokens);    currentOption  =  Option.OK_STANDARD;	  	compilable	  [FE]  UnrecognizedOptionException  	101	1	add
276	[BUG]  [BUGGY]  currentOption    =    Option.OK_STANDARD;    ArrayList  <  Option>  tokens  =  new  ArrayList  <  Option>(tokens);  currentOption  =  Option.OK_STANDARD;  [FE]  UnrecognizedOptionException  [FE]        UnrecognizedOptionException    [CONTEXT]      private  void  init()  {  eatTheRest  =  false;  tokens.clear();      [BUGGY]  currentOption    =    Option.OK_STANDARD;    ArrayList  <  Option>  tokens  =  new  ArrayList  <  Option>(tokens);  currentOption  =  Option.OK_STANDARD;  [BUGGY]      }  [CLASS]  PosixParser  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  ArrayList  tokens  Options  options  Option  currentOption  boolean  eatTheRest  	projects/Cli2/src/java/org/apache/commons/cli/PosixParser.java	1.0	53	53	1	replace	currentOption        =        Option.OK_STANDARD;        ArrayList    <    Option>    tokens    =    new    ArrayList    <    Option>(tokens);    currentOption  =  Option.OK_STANDARD;	  	compilable	  [FE]  UnrecognizedOptionException  	101	1	add
277	[BUG]  [BUGGY]  [FE]  UnrecognizedOptionException  [FE]          UnrecognizedOptionException    [CONTEXT]      private  void  init()  {  eatTheRest  =  false;  tokens.clear();      [BUGGY]  currentOption    =    Option.OK_STANDARD;    ArrayList  <  Option>  tokens  =  new  ArrayList  <  Option>(tokens);  if(currentOption!=  null)  {  currentOption  =  Option.OK_STANDARD;  tokens.clear();  }  [BUGGY]      }  [CLASS]  PosixParser  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  ArrayList  tokens  Options  options  Option  currentOption  boolean  eatTheRest  	projects/Cli2/src/java/org/apache/commons/cli/PosixParser.java	1.0	53	53	1	add	currentOption        =        Option.OK_STANDARD;        ArrayList    <    Option>    tokens    =    new    ArrayList    <    Option>(tokens);    if(currentOption!=  null)  {  currentOption  =  Option.OK_STANDARD;  tokens.clear();  }	  	compilable	  [FE]  UnrecognizedOptionException  	101	1	add
278	[BUG]  [BUGGY]  currentOption    =    Option.OK_STANDARD;    ArrayList  <  Option>  tokens  =  new  ArrayList  <  Option>(tokens);  if(currentOption!=  null)  {  currentOption  =  Option.OK_STANDARD;  tokens.clear();  }  [FE]  UnrecognizedOptionException  [FE]          UnrecognizedOptionException    [CONTEXT]      private  void  init()  {  eatTheRest  =  false;  tokens.clear();      [BUGGY]  currentOption    =    Option.OK_STANDARD;    ArrayList  <  Option>  tokens  =  new  ArrayList  <  Option>(tokens);  if(currentOption!=  null)  {  currentOption  =  Option.OK_STANDARD;  tokens.clear();  }  [BUGGY]      }  [CLASS]  PosixParser  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  ArrayList  tokens  Options  options  Option  currentOption  boolean  eatTheRest  	projects/Cli2/src/java/org/apache/commons/cli/PosixParser.java	1.0	53	53	1	replace	currentOption        =        Option.OK_STANDARD;        ArrayList    <    Option>    tokens    =    new    ArrayList    <    Option>(tokens);    if(currentOption!=  null)  {  currentOption  =  Option.OK_STANDARD;  tokens.clear();  }	  	compilable	  [FE]  UnrecognizedOptionException  	101	1	add
279	[BUG]  [BUGGY]  [FE]  UnrecognizedOptionException  [FE]            UnrecognizedOptionException    [CONTEXT]      private  void  init()  {  eatTheRest  =  false;  tokens.clear();      [BUGGY]  currentOption    =    Option.OK_STANDARD;    ArrayList  <  Option>  tokens  =  new  ArrayList  <  Option>(tokens);  if(currentOption!=  null)  {  currentOption  =  Option.OK_STANDARD;  tokens.add(tokens);  }  [BUGGY]      }  [CLASS]  PosixParser  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  ArrayList  tokens  Options  options  Option  currentOption  boolean  eatTheRest  	projects/Cli2/src/java/org/apache/commons/cli/PosixParser.java	1.0	53	53	1	add	currentOption        =        Option.OK_STANDARD;        ArrayList    <    Option>    tokens    =    new    ArrayList    <    Option>(tokens);    if(currentOption!=  null)  {  currentOption  =  Option.OK_STANDARD;  tokens.add(tokens);  }	  	compilable	  [FE]  UnrecognizedOptionException  	101	1	add
280	[BUG]  [BUGGY]  currentOption    =    Option.OK_STANDARD;    ArrayList  <  Option>  tokens  =  new  ArrayList  <  Option>(tokens);  if(currentOption!=  null)  {  currentOption  =  Option.OK_STANDARD;  tokens.add(tokens);  }  [FE]  UnrecognizedOptionException  [FE]            UnrecognizedOptionException    [CONTEXT]      private  void  init()  {  eatTheRest  =  false;  tokens.clear();      [BUGGY]  currentOption    =    Option.OK_STANDARD;    ArrayList  <  Option>  tokens  =  new  ArrayList  <  Option>(tokens);  if(currentOption!=  null)  {  currentOption  =  Option.OK_STANDARD;  tokens.add(tokens);  }  [BUGGY]      }  [CLASS]  PosixParser  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  ArrayList  tokens  Options  options  Option  currentOption  boolean  eatTheRest  	projects/Cli2/src/java/org/apache/commons/cli/PosixParser.java	1.0	53	53	1	replace	currentOption        =        Option.OK_STANDARD;        ArrayList    <    Option>    tokens    =    new    ArrayList    <    Option>(tokens);    if(currentOption!=  null)  {  currentOption  =  Option.OK_STANDARD;  tokens.add(tokens);  }	  	compilable	  [FE]  UnrecognizedOptionException  	101	1	add
281	[BUG]  [BUGGY]  [FE]  UnrecognizedOptionException  [FE]    UnrecognizedOptionException    [CONTEXT]      private  void  init()  {  eatTheRest  =  false;  tokens.clear();      [BUGGY]  currentOption  =  Option.OK_OPTIONAL  ||  eatTheRest;  [BUGGY]      }  [CLASS]  PosixParser  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  ArrayList  tokens  Options  options  Option  currentOption  boolean  eatTheRest  	projects/Cli2/src/java/org/apache/commons/cli/PosixParser.java	1.0	53	53	1	add	currentOption  =  Option.OK_OPTIONAL  ||  eatTheRest;	  currentOption    =    Option.OK_OPTIONAL;    	compilable	  [FE]  UnrecognizedOptionException  	119	1	replace
282	[BUG]  [BUGGY]  currentOption  =  Option.OK_OPTIONAL  ||  eatTheRest;  [FE]  UnrecognizedOptionException  [FE]    UnrecognizedOptionException    [CONTEXT]      private  void  init()  {  eatTheRest  =  false;  tokens.clear();      [BUGGY]  currentOption  =  Option.OK_OPTIONAL  ||  eatTheRest;  [BUGGY]      }  [CLASS]  PosixParser  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  ArrayList  tokens  Options  options  Option  currentOption  boolean  eatTheRest  	projects/Cli2/src/java/org/apache/commons/cli/PosixParser.java	1.0	53	53	1	replace	currentOption  =  Option.OK_OPTIONAL  ||  eatTheRest;	  currentOption    =    Option.OK_OPTIONAL;    	compilable	  [FE]  UnrecognizedOptionException  	119	1	replace
283	[BUG]  [BUGGY]  [FE]  UnrecognizedOptionException  [FE]      UnrecognizedOptionException    [CONTEXT]      private  void  init()  {  eatTheRest  =  false;  tokens.clear();      [BUGGY]  currentOption  =  Option.OK_FALSE;  [BUGGY]      }  [CLASS]  PosixParser  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  ArrayList  tokens  Options  options  Option  currentOption  boolean  eatTheRest  	projects/Cli2/src/java/org/apache/commons/cli/PosixParser.java	1.0	53	53	1	add	currentOption  =  Option.OK_FALSE;	  currentOption    =    Option.OK_OPTIONAL;    	compilable	  [FE]  UnrecognizedOptionException  	119	1	replace
284	[BUG]  [BUGGY]  currentOption  =  Option.OK_FALSE;  [FE]  UnrecognizedOptionException  [FE]      UnrecognizedOptionException    [CONTEXT]      private  void  init()  {  eatTheRest  =  false;  tokens.clear();      [BUGGY]  currentOption  =  Option.OK_FALSE;  [BUGGY]      }  [CLASS]  PosixParser  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  ArrayList  tokens  Options  options  Option  currentOption  boolean  eatTheRest  	projects/Cli2/src/java/org/apache/commons/cli/PosixParser.java	1.0	53	53	1	replace	currentOption  =  Option.OK_FALSE;	  currentOption    =    Option.OK_OPTIONAL;    	compilable	  [FE]  UnrecognizedOptionException  	119	1	replace
285	[BUG]  [BUGGY]  [FE]  UnrecognizedOptionException  [FE]    UnrecognizedOptionException    [CONTEXT]      private  void  init()  {  eatTheRest  =  false;  tokens.clear();      [BUGGY]  if(!eatTheRest)  {  tokens.clear();  currentOption  =  null;  ArrayList  <  Option>  tokens  =  new  ArrayList  <  Option>();  }  [BUGGY]      currentOption  =  null;  }  [CLASS]  PosixParser  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  ArrayList  tokens  Options  options  Option  currentOption  boolean  eatTheRest  	projects/Cli2/src/java/org/apache/commons/cli/PosixParser.java	1.0	53	53	1	add	if(!eatTheRest)  {  tokens.clear();  currentOption  =  null;  ArrayList  <  Option>  tokens  =  new  ArrayList  <  Option>();  }	          tokens.clear();    currentOption    =    null;    ArrayList    <    Option>    tokens    =    new    ArrayList    <    Option>();    	compilable	  [FE]  UnrecognizedOptionException  	56	1	replace
286	[BUG]  [BUGGY]  if(!eatTheRest)  {  tokens.clear();  currentOption  =  null;  ArrayList  <  Option>  tokens  =  new  ArrayList  <  Option>();  }  [FE]  UnrecognizedOptionException  [FE]    UnrecognizedOptionException    [CONTEXT]      private  void  init()  {  eatTheRest  =  false;  tokens.clear();      [BUGGY]  if(!eatTheRest)  {  tokens.clear();  currentOption  =  null;  ArrayList  <  Option>  tokens  =  new  ArrayList  <  Option>();  }  [BUGGY]      currentOption  =  null;  }  [CLASS]  PosixParser  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  ArrayList  tokens  Options  options  Option  currentOption  boolean  eatTheRest  	projects/Cli2/src/java/org/apache/commons/cli/PosixParser.java	1.0	53	53	1	replace	if(!eatTheRest)  {  tokens.clear();  currentOption  =  null;  ArrayList  <  Option>  tokens  =  new  ArrayList  <  Option>();  }	          tokens.clear();    currentOption    =    null;    ArrayList    <    Option>    tokens    =    new    ArrayList    <    Option>();    	compilable	  [FE]  UnrecognizedOptionException  	56	1	replace
287	[BUG]  [BUGGY]  [FE]  UnrecognizedOptionException  [FE]    UnrecognizedOptionException    [CONTEXT]      private  void  init()  {  eatTheRest  =  false;  tokens.clear();      [BUGGY]  if(currentOption!=  null)  {  eatTheRest  =  false;  tokens.clear();  }  if(currentOption!=  null)  {  eatTheRest  =  false;  tokens.clear();  }  [BUGGY]      currentOption  =  null;  }  [CLASS]  PosixParser  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  ArrayList  tokens  Options  options  Option  currentOption  boolean  eatTheRest  	projects/Cli2/src/java/org/apache/commons/cli/PosixParser.java	1.0	53	53	1	add	if(currentOption!=    null)    {    eatTheRest    =    false;    tokens.clear();    }    if(currentOption!=  null)  {  eatTheRest  =  false;  tokens.clear();  }	  	compilable	  [FE]  UnrecognizedOptionException  	37	1	add
288	[BUG]  [BUGGY]  if(currentOption!=  null)  {  eatTheRest  =  false;  tokens.clear();  }  if(currentOption!=  null)  {  eatTheRest  =  false;  tokens.clear();  }  [FE]  UnrecognizedOptionException  [FE]    UnrecognizedOptionException    [CONTEXT]      private  void  init()  {  eatTheRest  =  false;  tokens.clear();      [BUGGY]  if(currentOption!=  null)  {  eatTheRest  =  false;  tokens.clear();  }  if(currentOption!=  null)  {  eatTheRest  =  false;  tokens.clear();  }  [BUGGY]      currentOption  =  null;  }  [CLASS]  PosixParser  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  ArrayList  tokens  Options  options  Option  currentOption  boolean  eatTheRest  	projects/Cli2/src/java/org/apache/commons/cli/PosixParser.java	1.0	53	53	1	replace	if(currentOption!=    null)    {    eatTheRest    =    false;    tokens.clear();    }    if(currentOption!=  null)  {  eatTheRest  =  false;  tokens.clear();  }	  	compilable	  [FE]  UnrecognizedOptionException  	37	1	add
289	[BUG]  [BUGGY]  [FE]  UnrecognizedOptionException  [FE]      UnrecognizedOptionException    [CONTEXT]      private  void  init()  {  eatTheRest  =  false;  tokens.clear();      [BUGGY]  if(currentOption!=  null)  {  eatTheRest  =  false;  tokens.clear();  }  if(currentOption  ==  null)  {  eatTheRest  =  false;  tokens.clear();  }  [BUGGY]      currentOption  =  null;  }  [CLASS]  PosixParser  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  ArrayList  tokens  Options  options  Option  currentOption  boolean  eatTheRest  	projects/Cli2/src/java/org/apache/commons/cli/PosixParser.java	1.0	53	53	1	add	if(currentOption!=    null)    {    eatTheRest    =    false;    tokens.clear();    }    if(currentOption  ==  null)  {  eatTheRest  =  false;  tokens.clear();  }	  	compilable	  [FE]  UnrecognizedOptionException  	37	1	add
290	[BUG]  [BUGGY]  if(currentOption!=  null)  {  eatTheRest  =  false;  tokens.clear();  }  if(currentOption  ==  null)  {  eatTheRest  =  false;  tokens.clear();  }  [FE]  UnrecognizedOptionException  [FE]      UnrecognizedOptionException    [CONTEXT]      private  void  init()  {  eatTheRest  =  false;  tokens.clear();      [BUGGY]  if(currentOption!=  null)  {  eatTheRest  =  false;  tokens.clear();  }  if(currentOption  ==  null)  {  eatTheRest  =  false;  tokens.clear();  }  [BUGGY]      currentOption  =  null;  }  [CLASS]  PosixParser  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  ArrayList  tokens  Options  options  Option  currentOption  boolean  eatTheRest  	projects/Cli2/src/java/org/apache/commons/cli/PosixParser.java	1.0	53	53	1	replace	if(currentOption!=    null)    {    eatTheRest    =    false;    tokens.clear();    }    if(currentOption  ==  null)  {  eatTheRest  =  false;  tokens.clear();  }	  	compilable	  [FE]  UnrecognizedOptionException  	37	1	add
291	[BUG]  [BUGGY]  if(currentOption!=  null)  {  eatTheRest  =  false;  tokens.clear();  }  if(currentOption!=  null)  {  eattheRest  =  false;  tokens.clear();  }  [CE]  cannot  find  symbol  eattheRest  [FE]        UnrecognizedOptionException    [CONTEXT]      private  void  init()  {  eatTheRest  =  false;  tokens.clear();      [BUGGY]  if(currentOption!=  null)  {  eatTheRest  =  false;  tokens.clear();  }  if(currentOption!=  null)  {  eattheRest  =  false;  tokens.clear();  }  [BUGGY]      currentOption  =  null;  }  [CLASS]  PosixParser  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  ArrayList  tokens  Options  options  Option  currentOption  boolean  eatTheRest  	projects/Cli2/src/java/org/apache/commons/cli/PosixParser.java	1.0	53	53	1	replace	if(currentOption!=    null)    {    eatTheRest    =    false;    tokens.clear();    }    if(currentOption!=  null)  {  eattheRest  =  false;  tokens.clear();  }	  	non-compiled	[CE]  cannot  find  symbol  eattheRest	37	None	add
292	[BUG]  [BUGGY]  if(currentOption!=  null)  {  eatTheRest  =  false;  tokens.clear();  }  if(currentOption  >=  null)  {  eatTheRest  =  false;  tokens.clear();  }  [CE]  bad  operand  types  for  binary  operator  '>='  [FE]          UnrecognizedOptionException    [CONTEXT]      private  void  init()  {  eatTheRest  =  false;  tokens.clear();      [BUGGY]  if(currentOption!=  null)  {  eatTheRest  =  false;  tokens.clear();  }  if(currentOption  >=  null)  {  eatTheRest  =  false;  tokens.clear();  }  [BUGGY]      currentOption  =  null;  }  [CLASS]  PosixParser  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  ArrayList  tokens  Options  options  Option  currentOption  boolean  eatTheRest  	projects/Cli2/src/java/org/apache/commons/cli/PosixParser.java	1.0	53	53	1	replace	if(currentOption!=    null)    {    eatTheRest    =    false;    tokens.clear();    }    if(currentOption  >=  null)  {  eatTheRest  =  false;  tokens.clear();  }	  	non-compiled	[CE]  bad  operand  types  for  binary  operator  '>='	37	None	add
293	[BUG]  [BUGGY]  [FE]  UnrecognizedOptionException  [FE]    UnrecognizedOptionException    [CONTEXT]      private  void  init()  {  eatTheRest  =  false;  tokens.clear();      [BUGGY]  if(currentOption!=  null)  {  eatTheRest  =  true;  tokens.clear();  }  [BUGGY]      currentOption  =  null;  }  [CLASS]  PosixParser  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  ArrayList  tokens  Options  options  Option  currentOption  boolean  eatTheRest  	projects/Cli2/src/java/org/apache/commons/cli/PosixParser.java	1.0	53	53	1	add	if(currentOption!=  null)  {  eatTheRest  =  true;  tokens.clear();  }	  if(currentOption!=    null)    {    eatTheRest    =    false;    tokens.clear();    }    	compilable	  [FE]  UnrecognizedOptionException  	38	1	replace
294	[BUG]  [BUGGY]  if(currentOption!=  null)  {  eatTheRest  =  true;  tokens.clear();  }  [FE]  UnrecognizedOptionException  [FE]    UnrecognizedOptionException    [CONTEXT]      private  void  init()  {  eatTheRest  =  false;  tokens.clear();      [BUGGY]  if(currentOption!=  null)  {  eatTheRest  =  true;  tokens.clear();  }  [BUGGY]      currentOption  =  null;  }  [CLASS]  PosixParser  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  ArrayList  tokens  Options  options  Option  currentOption  boolean  eatTheRest  	projects/Cli2/src/java/org/apache/commons/cli/PosixParser.java	1.0	53	53	1	replace	if(currentOption!=  null)  {  eatTheRest  =  true;  tokens.clear();  }	  if(currentOption!=    null)    {    eatTheRest    =    false;    tokens.clear();    }    	compilable	  [FE]  UnrecognizedOptionException  	38	1	replace
295	[BUG]  [BUGGY]  [FE]  UnrecognizedOptionException  [FE]    UnrecognizedOptionException    [CONTEXT]      private  void  init()  {  eatTheRest  =  false;  tokens.clear();      [BUGGY]          eatTheRest    =    false;    tokens.clear();    eatTheRest  =  false;  tokens.clear();  eatTheRest  =  false;  tokens.clear();  eatTheRest  =  false;  [BUGGY]      currentOption  =  null;  }  [CLASS]  PosixParser  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  ArrayList  tokens  Options  options  Option  currentOption  boolean  eatTheRest  	projects/Cli2/src/java/org/apache/commons/cli/PosixParser.java	1.0	53	53	1	add	                eatTheRest        =        false;        tokens.clear();        eatTheRest    =    false;    tokens.clear();    eatTheRest  =  false;  tokens.clear();  eatTheRest  =  false;	  	compilable	  [FE]  UnrecognizedOptionException  	1	1	add
296	[BUG]  [BUGGY]          eatTheRest    =    false;    tokens.clear();    eatTheRest  =  false;  tokens.clear();  eatTheRest  =  false;  tokens.clear();  eatTheRest  =  false;  [FE]  UnrecognizedOptionException  [FE]    UnrecognizedOptionException    [CONTEXT]      private  void  init()  {  eatTheRest  =  false;  tokens.clear();      [BUGGY]          eatTheRest    =    false;    tokens.clear();    eatTheRest  =  false;  tokens.clear();  eatTheRest  =  false;  tokens.clear();  eatTheRest  =  false;  [BUGGY]      currentOption  =  null;  }  [CLASS]  PosixParser  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  ArrayList  tokens  Options  options  Option  currentOption  boolean  eatTheRest  	projects/Cli2/src/java/org/apache/commons/cli/PosixParser.java	1.0	53	53	1	replace	                eatTheRest        =        false;        tokens.clear();        eatTheRest    =    false;    tokens.clear();    eatTheRest  =  false;  tokens.clear();  eatTheRest  =  false;	  	compilable	  [FE]  UnrecognizedOptionException  	1	1	add
297	[BUG]  [BUGGY]  [FE]  UnrecognizedOptionException  [FE]      UnrecognizedOptionException    [CONTEXT]      private  void  init()  {  eatTheRest  =  false;  tokens.clear();      [BUGGY]          eatTheRest    =    false;    tokens.clear();    eatTheRest  =  false;  tokens.clear();  eatTheRest  =  false;  tokens.clear();  eatTheRest  =  false;  tokens.clear();  [BUGGY]      currentOption  =  null;  }  [CLASS]  PosixParser  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  ArrayList  tokens  Options  options  Option  currentOption  boolean  eatTheRest  	projects/Cli2/src/java/org/apache/commons/cli/PosixParser.java	1.0	53	53	1	add	                eatTheRest        =        false;        tokens.clear();        eatTheRest    =    false;    tokens.clear();    eatTheRest  =  false;  tokens.clear();  eatTheRest  =  false;  tokens.clear();	  	compilable	  [FE]  UnrecognizedOptionException  	1	1	add
298	[BUG]  [BUGGY]          eatTheRest    =    false;    tokens.clear();    eatTheRest  =  false;  tokens.clear();  eatTheRest  =  false;  tokens.clear();  eatTheRest  =  false;  tokens.clear();  [FE]  UnrecognizedOptionException  [FE]      UnrecognizedOptionException    [CONTEXT]      private  void  init()  {  eatTheRest  =  false;  tokens.clear();      [BUGGY]          eatTheRest    =    false;    tokens.clear();    eatTheRest  =  false;  tokens.clear();  eatTheRest  =  false;  tokens.clear();  eatTheRest  =  false;  tokens.clear();  [BUGGY]      currentOption  =  null;  }  [CLASS]  PosixParser  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  ArrayList  tokens  Options  options  Option  currentOption  boolean  eatTheRest  	projects/Cli2/src/java/org/apache/commons/cli/PosixParser.java	1.0	53	53	1	replace	                eatTheRest        =        false;        tokens.clear();        eatTheRest    =    false;    tokens.clear();    eatTheRest  =  false;  tokens.clear();  eatTheRest  =  false;  tokens.clear();	  	compilable	  [FE]  UnrecognizedOptionException  	1	1	add
299	[BUG]  [BUGGY]  [FE]  UnrecognizedOptionException  [FE]        UnrecognizedOptionException    [CONTEXT]      private  void  init()  {  eatTheRest  =  false;  tokens.clear();      [BUGGY]          eatTheRest    =    false;    tokens.clear();    eatTheRest  =  false;  tokens.clear();  eatTheRest  =  false;  tokens.clear();  [BUGGY]      currentOption  =  null;  }  [CLASS]  PosixParser  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  ArrayList  tokens  Options  options  Option  currentOption  boolean  eatTheRest  	projects/Cli2/src/java/org/apache/commons/cli/PosixParser.java	1.0	53	53	1	add	                eatTheRest        =        false;        tokens.clear();        eatTheRest    =    false;    tokens.clear();    eatTheRest  =  false;  tokens.clear();	  	compilable	  [FE]  UnrecognizedOptionException  	1	1	add
300	[BUG]  [BUGGY]          eatTheRest    =    false;    tokens.clear();    eatTheRest  =  false;  tokens.clear();  eatTheRest  =  false;  tokens.clear();  [FE]  UnrecognizedOptionException  [FE]        UnrecognizedOptionException    [CONTEXT]      private  void  init()  {  eatTheRest  =  false;  tokens.clear();      [BUGGY]          eatTheRest    =    false;    tokens.clear();    eatTheRest  =  false;  tokens.clear();  eatTheRest  =  false;  tokens.clear();  [BUGGY]      currentOption  =  null;  }  [CLASS]  PosixParser  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  ArrayList  tokens  Options  options  Option  currentOption  boolean  eatTheRest  	projects/Cli2/src/java/org/apache/commons/cli/PosixParser.java	1.0	53	53	1	replace	                eatTheRest        =        false;        tokens.clear();        eatTheRest    =    false;    tokens.clear();    eatTheRest  =  false;  tokens.clear();	  	compilable	  [FE]  UnrecognizedOptionException  	1	1	add
301	[BUG]  [BUGGY]          eatTheRest    =    false;    tokens.clear();    eatTheRest  =  false;  tokens.clear();  eatTheRest  =  false;  tokens.clear();  eattheRest  =  false;  tokens.clear();  [CE]  cannot  find  symbol  eattheRest  [FE]          UnrecognizedOptionException    [CONTEXT]      private  void  init()  {  eatTheRest  =  false;  tokens.clear();      [BUGGY]          eatTheRest    =    false;    tokens.clear();    eatTheRest  =  false;  tokens.clear();  eatTheRest  =  false;  tokens.clear();  eattheRest  =  false;  tokens.clear();  [BUGGY]      currentOption  =  null;  }  [CLASS]  PosixParser  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  ArrayList  tokens  Options  options  Option  currentOption  boolean  eatTheRest  	projects/Cli2/src/java/org/apache/commons/cli/PosixParser.java	1.0	53	53	1	replace	                eatTheRest        =        false;        tokens.clear();        eatTheRest    =    false;    tokens.clear();    eatTheRest  =  false;  tokens.clear();  eattheRest  =  false;  tokens.clear();	  	non-compiled	[CE]  cannot  find  symbol  eattheRest	1	None	add
302	[BUG]  [BUGGY]          eatTheRest    =    false;    tokens.clear();    eatTheRest  =  false;  tokens.clear();  eatTheRest  =  false;  tokens.clear();  eattheRest  =  false;  [CE]  cannot  find  symbol  eattheRest  [FE]            UnrecognizedOptionException    [CONTEXT]      private  void  init()  {  eatTheRest  =  false;  tokens.clear();      [BUGGY]          eatTheRest    =    false;    tokens.clear();    eatTheRest  =  false;  tokens.clear();  eatTheRest  =  false;  tokens.clear();  eattheRest  =  false;  [BUGGY]      currentOption  =  null;  }  [CLASS]  PosixParser  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  ArrayList  tokens  Options  options  Option  currentOption  boolean  eatTheRest  	projects/Cli2/src/java/org/apache/commons/cli/PosixParser.java	1.0	53	53	1	replace	                eatTheRest        =        false;        tokens.clear();        eatTheRest    =    false;    tokens.clear();    eatTheRest  =  false;  tokens.clear();  eattheRest  =  false;	  	non-compiled	[CE]  cannot  find  symbol  eattheRest	1	None	add
303	[BUG]  [BUGGY]  [FE]  UnrecognizedOptionException  [FE]    UnrecognizedOptionException    [CONTEXT]      private  void  init()  {  eatTheRest  =  false;  tokens.clear();      [BUGGY]  tokens.add( "null ");  [BUGGY]      currentOption  =  null;  }  [CLASS]  PosixParser  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  ArrayList  tokens  Options  options  Option  currentOption  boolean  eatTheRest  	projects/Cli2/src/java/org/apache/commons/cli/PosixParser.java	1.0	53	53	1	add	tokens.add( "null ");	  tokens.add(   "n   ");    	compilable	  [FE]  UnrecognizedOptionException  	97	1	replace
304	[BUG]  [BUGGY]  tokens.add( "null ");  [FE]  UnrecognizedOptionException  [FE]    UnrecognizedOptionException    [CONTEXT]      private  void  init()  {  eatTheRest  =  false;  tokens.clear();      [BUGGY]  tokens.add( "null ");  [BUGGY]      currentOption  =  null;  }  [CLASS]  PosixParser  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  ArrayList  tokens  Options  options  Option  currentOption  boolean  eatTheRest  	projects/Cli2/src/java/org/apache/commons/cli/PosixParser.java	1.0	53	53	1	replace	tokens.add( "null ");	  tokens.add(   "n   ");    	compilable	  [FE]  UnrecognizedOptionException  	97	1	replace
305	[BUG]  [BUGGY]  [FE]  UnrecognizedOptionException  [FE]      UnrecognizedOptionException    [CONTEXT]      private  void  init()  {  eatTheRest  =  false;  tokens.clear();      [BUGGY]  tokens.add( "0 ");  [BUGGY]      currentOption  =  null;  }  [CLASS]  PosixParser  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  ArrayList  tokens  Options  options  Option  currentOption  boolean  eatTheRest  	projects/Cli2/src/java/org/apache/commons/cli/PosixParser.java	1.0	53	53	1	add	tokens.add( "0 ");	  tokens.add(   "n   ");    	compilable	  [FE]  UnrecognizedOptionException  	97	1	replace
306	[BUG]  [BUGGY]  tokens.add( "0 ");  [FE]  UnrecognizedOptionException  [FE]      UnrecognizedOptionException    [CONTEXT]      private  void  init()  {  eatTheRest  =  false;  tokens.clear();      [BUGGY]  tokens.add( "0 ");  [BUGGY]      currentOption  =  null;  }  [CLASS]  PosixParser  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  ArrayList  tokens  Options  options  Option  currentOption  boolean  eatTheRest  	projects/Cli2/src/java/org/apache/commons/cli/PosixParser.java	1.0	53	53	1	replace	tokens.add( "0 ");	  tokens.add(   "n   ");    	compilable	  [FE]  UnrecognizedOptionException  	97	1	replace
307	[BUG]  [BUGGY]  List  <  Option>  tokens  =  new  LinkedList  <  Option>();  [CE]  cannot  find  symbol  [FE]        UnrecognizedOptionException      [CONTEXT]      private  void  init()  {  eatTheRest  =  false;  tokens.clear();      [BUGGY]  List  <  Option>  tokens  =  new  LinkedList  <  Option>();  [BUGGY]      currentOption  =  null;  }  [CLASS]  PosixParser  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  ArrayList  tokens  Options  options  Option  currentOption  boolean  eatTheRest  	projects/Cli2/src/java/org/apache/commons/cli/PosixParser.java	1.0	53	53	1	replace	List  <  Option>  tokens  =  new  LinkedList  <  Option>();	  List    <    Option>    tokens    =    new    ArrayList    <    Option>();    	non-compiled	[CE]  cannot  find  symbol	50	None	replace
308	[BUG]  [BUGGY]  ArrayList  <  Option>  tokens  =  new  ArrayList  <  Option>(tokens.size());  currentOption  =  null;  [CE]  variable  tokens  might  not  have  been  initialized  [FE]        UnrecognizedOptionException      [CONTEXT]      private  void  init()  {  eatTheRest  =  false;  tokens.clear();      [BUGGY]  ArrayList  <  Option>  tokens  =  new  ArrayList  <  Option>(tokens.size());  currentOption  =  null;  [BUGGY]      currentOption  =  null;  }  [CLASS]  PosixParser  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  ArrayList  tokens  Options  options  Option  currentOption  boolean  eatTheRest  	projects/Cli2/src/java/org/apache/commons/cli/PosixParser.java	1.0	53	53	1	replace	ArrayList  <  Option>  tokens  =  new  ArrayList  <  Option>(tokens.size());  currentOption  =  null;	  if(eatTheRest)    {    tokens.clear();    currentOption    =    null;    }    else    {    options.addOption(options);    }    	non-compiled	[CE]  variable  tokens  might  not  have  been  initialized	159	None	replace
309	[BUG]  [BUGGY]  [FE]  UnrecognizedOptionException  [FE]    UnrecognizedOptionException    [CONTEXT]      private  void  init()  {  eatTheRest  =  false;  tokens.clear();      [BUGGY]          tokens.clear();    currentOption    =    null;    tokens.clear();  currentOption  =  null;  tokens.clear();  currentOption  =  null;  [BUGGY]      currentOption  =  null;  }  [CLASS]  PosixParser  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  ArrayList  tokens  Options  options  Option  currentOption  boolean  eatTheRest  	projects/Cli2/src/java/org/apache/commons/cli/PosixParser.java	1.0	53	53	1	add	                tokens.clear();        currentOption        =        null;        tokens.clear();    currentOption    =    null;    tokens.clear();  currentOption  =  null;	  	compilable	  [FE]  UnrecognizedOptionException  	52	1	add
310	[BUG]  [BUGGY]          tokens.clear();    currentOption    =    null;    tokens.clear();  currentOption  =  null;  tokens.clear();  currentOption  =  null;  [FE]  UnrecognizedOptionException  [FE]    UnrecognizedOptionException    [CONTEXT]      private  void  init()  {  eatTheRest  =  false;  tokens.clear();      [BUGGY]          tokens.clear();    currentOption    =    null;    tokens.clear();  currentOption  =  null;  tokens.clear();  currentOption  =  null;  [BUGGY]      currentOption  =  null;  }  [CLASS]  PosixParser  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  ArrayList  tokens  Options  options  Option  currentOption  boolean  eatTheRest  	projects/Cli2/src/java/org/apache/commons/cli/PosixParser.java	1.0	53	53	1	replace	                tokens.clear();        currentOption        =        null;        tokens.clear();    currentOption    =    null;    tokens.clear();  currentOption  =  null;	  	compilable	  [FE]  UnrecognizedOptionException  	52	1	add
311	[BUG]  [BUGGY]  [FE]  UnrecognizedOptionException  [FE]      UnrecognizedOptionException    [CONTEXT]      private  void  init()  {  eatTheRest  =  false;  tokens.clear();      [BUGGY]          tokens.clear();    currentOption    =    null;    tokens.clear();  currentOption  =  null;  if(!eatTheRest)  {  tokens.clear();  currentOption  =  null;  }  [BUGGY]      currentOption  =  null;  }  [CLASS]  PosixParser  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  ArrayList  tokens  Options  options  Option  currentOption  boolean  eatTheRest  	projects/Cli2/src/java/org/apache/commons/cli/PosixParser.java	1.0	53	53	1	add	                tokens.clear();        currentOption        =        null;        tokens.clear();    currentOption    =    null;    if(!eatTheRest)  {  tokens.clear();  currentOption  =  null;  }	  	compilable	  [FE]  UnrecognizedOptionException  	52	1	add
312	[BUG]  [BUGGY]          tokens.clear();    currentOption    =    null;    tokens.clear();  currentOption  =  null;  if(!eatTheRest)  {  tokens.clear();  currentOption  =  null;  }  [FE]  UnrecognizedOptionException  [FE]      UnrecognizedOptionException    [CONTEXT]      private  void  init()  {  eatTheRest  =  false;  tokens.clear();      [BUGGY]          tokens.clear();    currentOption    =    null;    tokens.clear();  currentOption  =  null;  if(!eatTheRest)  {  tokens.clear();  currentOption  =  null;  }  [BUGGY]      currentOption  =  null;  }  [CLASS]  PosixParser  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  ArrayList  tokens  Options  options  Option  currentOption  boolean  eatTheRest  	projects/Cli2/src/java/org/apache/commons/cli/PosixParser.java	1.0	53	53	1	replace	                tokens.clear();        currentOption        =        null;        tokens.clear();    currentOption    =    null;    if(!eatTheRest)  {  tokens.clear();  currentOption  =  null;  }	  	compilable	  [FE]  UnrecognizedOptionException  	52	1	add
313	[BUG]  [BUGGY]  [FE]  UnrecognizedOptionException  [FE]        UnrecognizedOptionException    [CONTEXT]      private  void  init()  {  eatTheRest  =  false;  tokens.clear();      [BUGGY]          tokens.clear();    currentOption    =    null;    tokens.clear();  currentOption  =  null;  tokens.clear();  [BUGGY]      currentOption  =  null;  }  [CLASS]  PosixParser  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  ArrayList  tokens  Options  options  Option  currentOption  boolean  eatTheRest  	projects/Cli2/src/java/org/apache/commons/cli/PosixParser.java	1.0	53	53	1	add	                tokens.clear();        currentOption        =        null;        tokens.clear();    currentOption    =    null;    tokens.clear();	  	compilable	  [FE]  UnrecognizedOptionException  	52	1	add
314	[BUG]  [BUGGY]          tokens.clear();    currentOption    =    null;    tokens.clear();  currentOption  =  null;  tokens.clear();  [FE]  UnrecognizedOptionException  [FE]        UnrecognizedOptionException    [CONTEXT]      private  void  init()  {  eatTheRest  =  false;  tokens.clear();      [BUGGY]          tokens.clear();    currentOption    =    null;    tokens.clear();  currentOption  =  null;  tokens.clear();  [BUGGY]      currentOption  =  null;  }  [CLASS]  PosixParser  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  ArrayList  tokens  Options  options  Option  currentOption  boolean  eatTheRest  	projects/Cli2/src/java/org/apache/commons/cli/PosixParser.java	1.0	53	53	1	replace	                tokens.clear();        currentOption        =        null;        tokens.clear();    currentOption    =    null;    tokens.clear();	  	compilable	  [FE]  UnrecognizedOptionException  	52	1	add
315	[BUG]  [BUGGY]          tokens.clear();    currentOption    =    null;    tokens.clear();  currentOption  =  null;  ArrayList  <  Option>  tokens  =  new  ArrayList  <  Option>(tokens.size());  [CE]  variable  tokens  might  not  have  been  initialized  [FE]          UnrecognizedOptionException    [CONTEXT]      private  void  init()  {  eatTheRest  =  false;  tokens.clear();      [BUGGY]          tokens.clear();    currentOption    =    null;    tokens.clear();  currentOption  =  null;  ArrayList  <  Option>  tokens  =  new  ArrayList  <  Option>(tokens.size());  [BUGGY]      currentOption  =  null;  }  [CLASS]  PosixParser  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  ArrayList  tokens  Options  options  Option  currentOption  boolean  eatTheRest  	projects/Cli2/src/java/org/apache/commons/cli/PosixParser.java	1.0	53	53	1	replace	                tokens.clear();        currentOption        =        null;        tokens.clear();    currentOption    =    null;    ArrayList  <  Option>  tokens  =  new  ArrayList  <  Option>(tokens.size());	  	non-compiled	[CE]  variable  tokens  might  not  have  been  initialized	52	None	add
316	[BUG]  [BUGGY]  [FE]  UnrecognizedOptionException  [FE]            UnrecognizedOptionException    [CONTEXT]      private  void  init()  {  eatTheRest  =  false;  tokens.clear();      [BUGGY]          tokens.clear();    currentOption    =    null;    tokens.clear();  currentOption  =  null;  ArrayList  <  Option>  tokens  =  new  ArrayList  <  Option>();  [BUGGY]      currentOption  =  null;  }  [CLASS]  PosixParser  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  ArrayList  tokens  Options  options  Option  currentOption  boolean  eatTheRest  	projects/Cli2/src/java/org/apache/commons/cli/PosixParser.java	1.0	53	53	1	add	                tokens.clear();        currentOption        =        null;        tokens.clear();    currentOption    =    null;    ArrayList  <  Option>  tokens  =  new  ArrayList  <  Option>();	  	compilable	  [FE]  UnrecognizedOptionException  	52	1	add
317	[BUG]  [BUGGY]          tokens.clear();    currentOption    =    null;    tokens.clear();  currentOption  =  null;  ArrayList  <  Option>  tokens  =  new  ArrayList  <  Option>();  [FE]  UnrecognizedOptionException  [FE]            UnrecognizedOptionException    [CONTEXT]      private  void  init()  {  eatTheRest  =  false;  tokens.clear();      [BUGGY]          tokens.clear();    currentOption    =    null;    tokens.clear();  currentOption  =  null;  ArrayList  <  Option>  tokens  =  new  ArrayList  <  Option>();  [BUGGY]      currentOption  =  null;  }  [CLASS]  PosixParser  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  ArrayList  tokens  Options  options  Option  currentOption  boolean  eatTheRest  	projects/Cli2/src/java/org/apache/commons/cli/PosixParser.java	1.0	53	53	1	replace	                tokens.clear();        currentOption        =        null;        tokens.clear();    currentOption    =    null;    ArrayList  <  Option>  tokens  =  new  ArrayList  <  Option>();	  	compilable	  [FE]  UnrecognizedOptionException  	52	1	add
318	[BUG]  [BUGGY]          ArrayList    tokens    =    new    ArrayList();    Option  currentOption  =  options.getOption(null);  ArrayList  tokens  =  new  ArrayList();  [CE]  variable  tokens  is  already  defined  in  method  init()  [FE]    NullPointerException    [CONTEXT]      private  void  init()  {  eatTheRest  =  false;  tokens.clear();      [BUGGY]          ArrayList    tokens    =    new    ArrayList();    Option  currentOption  =  options.getOption(null);  ArrayList  tokens  =  new  ArrayList();  [BUGGY]      currentOption  =  null;  }  [CLASS]  PosixParser  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  ArrayList  tokens  Options  options  Option  currentOption  boolean  eatTheRest  	projects/Cli2/src/java/org/apache/commons/cli/PosixParser.java	1.0	53	53	1	replace	                ArrayList        tokens        =        new        ArrayList();        Option    currentOption    =    options.getOption(null);    ArrayList  tokens  =  new  ArrayList();	  	non-compiled	[CE]  variable  tokens  is  already  defined  in  method  init()	139	None	add
319	[BUG]  [BUGGY]          ArrayList    tokens    =    new    ArrayList();    Option  currentOption  =  options.getOption(null);  ArrayList  tokens  =  new  ArrayList();  Option  currentOption  =  options.getOption(null);  [CE]  variable  tokens  is  already  defined  in  method  init()  [FE]      NullPointerException    [CONTEXT]      private  void  init()  {  eatTheRest  =  false;  tokens.clear();      [BUGGY]          ArrayList    tokens    =    new    ArrayList();    Option  currentOption  =  options.getOption(null);  ArrayList  tokens  =  new  ArrayList();  Option  currentOption  =  options.getOption(null);  [BUGGY]      currentOption  =  null;  }  [CLASS]  PosixParser  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  ArrayList  tokens  Options  options  Option  currentOption  boolean  eatTheRest  	projects/Cli2/src/java/org/apache/commons/cli/PosixParser.java	1.0	53	53	1	replace	                ArrayList        tokens        =        new        ArrayList();        Option    currentOption    =    options.getOption(null);    ArrayList  tokens  =  new  ArrayList();  Option  currentOption  =  options.getOption(null);	  	non-compiled	[CE]  variable  tokens  is  already  defined  in  method  init()	139	None	add
320	[BUG]  [BUGGY]          ArrayList    tokens    =    new    ArrayList();    Option  currentOption  =  options.getOption(null);  Option  options  =  options.getOption(null);  [CE]  cannot  find  symbol  [FE]        NullPointerException    [CONTEXT]      private  void  init()  {  eatTheRest  =  false;  tokens.clear();      [BUGGY]          ArrayList    tokens    =    new    ArrayList();    Option  currentOption  =  options.getOption(null);  Option  options  =  options.getOption(null);  [BUGGY]      currentOption  =  null;  }  [CLASS]  PosixParser  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  ArrayList  tokens  Options  options  Option  currentOption  boolean  eatTheRest  	projects/Cli2/src/java/org/apache/commons/cli/PosixParser.java	1.0	53	53	1	replace	                ArrayList        tokens        =        new        ArrayList();        Option    currentOption    =    options.getOption(null);    Option  options  =  options.getOption(null);	  	non-compiled	[CE]  cannot  find  symbol	139	None	add
321	[BUG]  [BUGGY]          ArrayList    tokens    =    new    ArrayList();    Option  currentOption  =  options.getOption(null);  ArrayList  tokens  =  new  ArrayList();  Option  options  =  options.getOption(null);  [CE]  variable  tokens  is  already  defined  in  method  init()  [FE]          NullPointerException    [CONTEXT]      private  void  init()  {  eatTheRest  =  false;  tokens.clear();      [BUGGY]          ArrayList    tokens    =    new    ArrayList();    Option  currentOption  =  options.getOption(null);  ArrayList  tokens  =  new  ArrayList();  Option  options  =  options.getOption(null);  [BUGGY]      currentOption  =  null;  }  [CLASS]  PosixParser  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  ArrayList  tokens  Options  options  Option  currentOption  boolean  eatTheRest  	projects/Cli2/src/java/org/apache/commons/cli/PosixParser.java	1.0	53	53	1	replace	                ArrayList        tokens        =        new        ArrayList();        Option    currentOption    =    options.getOption(null);    ArrayList  tokens  =  new  ArrayList();  Option  options  =  options.getOption(null);	  	non-compiled	[CE]  variable  tokens  is  already  defined  in  method  init()	139	None	add
322	[BUG]  [BUGGY]          ArrayList    tokens    =    new    ArrayList();    Option  currentOption  =  options.getOption(null);  ArrayList  tokens  =  new  ArrayList();  currentOption  =  options.getOption(null);  [CE]  variable  tokens  is  already  defined  in  method  init()  [FE]            NullPointerException    [CONTEXT]      private  void  init()  {  eatTheRest  =  false;  tokens.clear();      [BUGGY]          ArrayList    tokens    =    new    ArrayList();    Option  currentOption  =  options.getOption(null);  ArrayList  tokens  =  new  ArrayList();  currentOption  =  options.getOption(null);  [BUGGY]      currentOption  =  null;  }  [CLASS]  PosixParser  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  ArrayList  tokens  Options  options  Option  currentOption  boolean  eatTheRest  	projects/Cli2/src/java/org/apache/commons/cli/PosixParser.java	1.0	53	53	1	replace	                ArrayList        tokens        =        new        ArrayList();        Option    currentOption    =    options.getOption(null);    ArrayList  tokens  =  new  ArrayList();  currentOption  =  options.getOption(null);	  	non-compiled	[CE]  variable  tokens  is  already  defined  in  method  init()	139	None	add
323	[BUG]  [BUGGY]  if(currentOption!=  null)  {  if(tokens!=  null)  {  eatTheRest  =  false;  tokens.clear();  }  [CE]  illegal  start  of  expression  [FE]    UnrecognizedOptionException    [CONTEXT]      private  void  init()  {  eatTheRest  =  false;  tokens.clear();      [BUGGY]  if(currentOption!=  null)  {  if(tokens!=  null)  {  eatTheRest  =  false;  tokens.clear();  }  [BUGGY]      currentOption  =  null;  }  [CLASS]  PosixParser  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  ArrayList  tokens  Options  options  Option  currentOption  boolean  eatTheRest  	projects/Cli2/src/java/org/apache/commons/cli/PosixParser.java	1.0	53	53	1	replace	if(currentOption!=  null)  {  if(tokens!=  null)  {  eatTheRest  =  false;  tokens.clear();  }	  if(tokens!=    null)    {    eatTheRest    =    false;    tokens.clear();    }    	non-compiled	[CE]  illegal  start  of  expression	114	None	replace
324	[BUG]  [BUGGY]  if(currentOption!=  null)  {  if(tokens!=  null)  {  eatTheRest  =  true;  tokens.clear();  }  [CE]  illegal  start  of  expression  [FE]      UnrecognizedOptionException    [CONTEXT]      private  void  init()  {  eatTheRest  =  false;  tokens.clear();      [BUGGY]  if(currentOption!=  null)  {  if(tokens!=  null)  {  eatTheRest  =  true;  tokens.clear();  }  [BUGGY]      currentOption  =  null;  }  [CLASS]  PosixParser  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  ArrayList  tokens  Options  options  Option  currentOption  boolean  eatTheRest  	projects/Cli2/src/java/org/apache/commons/cli/PosixParser.java	1.0	53	53	1	replace	if(currentOption!=  null)  {  if(tokens!=  null)  {  eatTheRest  =  true;  tokens.clear();  }	  if(tokens!=    null)    {    eatTheRest    =    false;    tokens.clear();    }    	non-compiled	[CE]  illegal  start  of  expression	114	None	replace
325	[BUG]  [BUGGY]  [FE]  UnrecognizedOptionException  [FE]    NullPointerException    [CONTEXT]      private  void  init()  {  eatTheRest  =  false;  tokens.clear();      [BUGGY]  if(options!=  null)  {  ArrayList  <  Option>  tokens  =  new  ArrayList  <  Option>();  Option  option  =  options.getOption(null);  }  [BUGGY]      currentOption  =  null;  }  [CLASS]  PosixParser  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  ArrayList  tokens  Options  options  Option  currentOption  boolean  eatTheRest  	projects/Cli2/src/java/org/apache/commons/cli/PosixParser.java	1.0	53	53	1	add	if(options!=  null)  {  ArrayList  <  Option>  tokens  =  new  ArrayList  <  Option>();  Option  option  =  options.getOption(null);  }	          ArrayList    <    Option>    tokens    =    new    ArrayList    <    Option>();    Option    option    =    options.getOption(null);    	compilable	  [FE]  UnrecognizedOptionException  	111	1	replace
326	[BUG]  [BUGGY]  if(options!=  null)  {  ArrayList  <  Option>  tokens  =  new  ArrayList  <  Option>();  Option  option  =  options.getOption(null);  }  [FE]  UnrecognizedOptionException  [FE]    NullPointerException    [CONTEXT]      private  void  init()  {  eatTheRest  =  false;  tokens.clear();      [BUGGY]  if(options!=  null)  {  ArrayList  <  Option>  tokens  =  new  ArrayList  <  Option>();  Option  option  =  options.getOption(null);  }  [BUGGY]      currentOption  =  null;  }  [CLASS]  PosixParser  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  ArrayList  tokens  Options  options  Option  currentOption  boolean  eatTheRest  	projects/Cli2/src/java/org/apache/commons/cli/PosixParser.java	1.0	53	53	1	replace	if(options!=  null)  {  ArrayList  <  Option>  tokens  =  new  ArrayList  <  Option>();  Option  option  =  options.getOption(null);  }	          ArrayList    <    Option>    tokens    =    new    ArrayList    <    Option>();    Option    option    =    options.getOption(null);    	compilable	  [FE]  UnrecognizedOptionException  	111	1	replace
327	[BUG]  [BUGGY]  ArrayList  <  Option>  tokens  =  new  ArrayList  <  Option>();  Options  option  =  options.getOption(null);  [CE]  incompatible  types  [FE]      NullPointerException    [CONTEXT]      private  void  init()  {  eatTheRest  =  false;  tokens.clear();      [BUGGY]  ArrayList  <  Option>  tokens  =  new  ArrayList  <  Option>();  Options  option  =  options.getOption(null);  [BUGGY]      currentOption  =  null;  }  [CLASS]  PosixParser  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  ArrayList  tokens  Options  options  Option  currentOption  boolean  eatTheRest  	projects/Cli2/src/java/org/apache/commons/cli/PosixParser.java	1.0	53	53	1	replace	ArrayList  <  Option>  tokens  =  new  ArrayList  <  Option>();  Options  option  =  options.getOption(null);	          ArrayList    <    Option>    tokens    =    new    ArrayList    <    Option>();    Option    option    =    options.getOption(null);    	non-compiled	[CE]  incompatible  types	111	None	replace
328	[BUG]  [BUGGY]  if(options!=  null)  {  ArrayList  <  Option>  tokens  =  new  ArrayList  <  Option>();  option  =  options.getOption(null);  }  [CE]  cannot  find  symbol  option  [FE]        NullPointerException    [CONTEXT]      private  void  init()  {  eatTheRest  =  false;  tokens.clear();      [BUGGY]  if(options!=  null)  {  ArrayList  <  Option>  tokens  =  new  ArrayList  <  Option>();  option  =  options.getOption(null);  }  [BUGGY]      currentOption  =  null;  }  [CLASS]  PosixParser  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  ArrayList  tokens  Options  options  Option  currentOption  boolean  eatTheRest  	projects/Cli2/src/java/org/apache/commons/cli/PosixParser.java	1.0	53	53	1	replace	if(options!=  null)  {  ArrayList  <  Option>  tokens  =  new  ArrayList  <  Option>();  option  =  options.getOption(null);  }	          ArrayList    <    Option>    tokens    =    new    ArrayList    <    Option>();    Option    option    =    options.getOption(null);    	non-compiled	[CE]  cannot  find  symbol  option	111	None	replace
329	[BUG]  [BUGGY]  List  tokens  =  new  ArrayList(options.size());  [CE]  cannot  find  symbol  [FE]            UnrecognizedOptionException      [CONTEXT]      private  void  init()  {  eatTheRest  =  false;  tokens.clear();      [BUGGY]  List  tokens  =  new  ArrayList(options.size());  [BUGGY]      currentOption  =  null;  }  [CLASS]  PosixParser  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  ArrayList  tokens  Options  options  Option  currentOption  boolean  eatTheRest  	projects/Cli2/src/java/org/apache/commons/cli/PosixParser.java	1.0	53	53	1	replace	List  tokens  =  new  ArrayList(options.size());	  ArrayList    tokens    =    new    ArrayList(options.size());    	non-compiled	[CE]  cannot  find  symbol	89	None	replace
330	[BUG]  [BUGGY]  ArrayList  tokens  =  new  ArrayList(options.size()  -  1);  [CE]  cannot  find  symbol  [FE]              UnrecognizedOptionException      [CONTEXT]      private  void  init()  {  eatTheRest  =  false;  tokens.clear();      [BUGGY]  ArrayList  tokens  =  new  ArrayList(options.size()  -  1);  [BUGGY]      currentOption  =  null;  }  [CLASS]  PosixParser  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  ArrayList  tokens  Options  options  Option  currentOption  boolean  eatTheRest  	projects/Cli2/src/java/org/apache/commons/cli/PosixParser.java	1.0	53	53	1	replace	ArrayList  tokens  =  new  ArrayList(options.size()  -  1);	  ArrayList    tokens    =    new    ArrayList(options.size());    	non-compiled	[CE]  cannot  find  symbol	89	None	replace
331	[BUG]  [BUGGY]  ArrayList  tokens  =  new  ArrayList(options.size()  +  1);  [CE]  cannot  find  symbol  [FE]                UnrecognizedOptionException      [CONTEXT]      private  void  init()  {  eatTheRest  =  false;  tokens.clear();      [BUGGY]  ArrayList  tokens  =  new  ArrayList(options.size()  +  1);  [BUGGY]      currentOption  =  null;  }  [CLASS]  PosixParser  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  ArrayList  tokens  Options  options  Option  currentOption  boolean  eatTheRest  	projects/Cli2/src/java/org/apache/commons/cli/PosixParser.java	1.0	53	53	1	replace	ArrayList  tokens  =  new  ArrayList(options.size()  +  1);	  ArrayList    tokens    =    new    ArrayList(options.size());    	non-compiled	[CE]  cannot  find  symbol	89	None	replace
332	[BUG]  [BUGGY]  tokens.clear();  ArrayList  <  Option>  tokens  =  new  ArrayList  <  Option>(options);  [CE]  no  suitable  constructor  found  for  ArrayList(Options)  [FE]          UnrecognizedOptionException      [CONTEXT]      private  void  init()  {  eatTheRest  =  false;  tokens.clear();      [BUGGY]  tokens.clear();  ArrayList  <  Option>  tokens  =  new  ArrayList  <  Option>(options);  [BUGGY]      currentOption  =  null;  }  [CLASS]  PosixParser  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  ArrayList  tokens  Options  options  Option  currentOption  boolean  eatTheRest  	projects/Cli2/src/java/org/apache/commons/cli/PosixParser.java	1.0	53	53	1	replace	tokens.clear();  ArrayList  <  Option>  tokens  =  new  ArrayList  <  Option>(options);	          tokens.clear();    ArrayList    <    Option>    tokens    =    new    ArrayList    <    Option>(tokens);    	non-compiled	[CE]  no  suitable  constructor  found  for  ArrayList(Options)	107	None	replace
333	[BUG]  [BUGGY]  [FE]  UnrecognizedOptionException  [FE]    UnrecognizedOptionException    [CONTEXT]      private  void  init()  {  eatTheRest  =  false;  tokens.clear();      [BUGGY]  currentOption  =  Option.OK_STANDARD?  null  :  Option.OK_STANDARD  +  1;  [BUGGY]      }  [CLASS]  PosixParser  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  ArrayList  tokens  Options  options  Option  currentOption  boolean  eatTheRest  	projects/Cli2/src/java/org/apache/commons/cli/PosixParser.java	1.0	53	53	1	add	currentOption  =  Option.OK_STANDARD?  null  :  Option.OK_STANDARD  +  1;	  currentOption    =    Option.OK_STANDARD?    null    :    Option.OK_STANDARD;    	compilable	  [FE]  UnrecognizedOptionException  	19	1	replace
334	[BUG]  [BUGGY]  currentOption  =  Option.OK_STANDARD?  null  :  Option.OK_STANDARD  +  1;  [FE]  UnrecognizedOptionException  [FE]    UnrecognizedOptionException    [CONTEXT]      private  void  init()  {  eatTheRest  =  false;  tokens.clear();      [BUGGY]  currentOption  =  Option.OK_STANDARD?  null  :  Option.OK_STANDARD  +  1;  [BUGGY]      }  [CLASS]  PosixParser  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  ArrayList  tokens  Options  options  Option  currentOption  boolean  eatTheRest  	projects/Cli2/src/java/org/apache/commons/cli/PosixParser.java	1.0	53	53	1	replace	currentOption  =  Option.OK_STANDARD?  null  :  Option.OK_STANDARD  +  1;	  currentOption    =    Option.OK_STANDARD?    null    :    Option.OK_STANDARD;    	compilable	  [FE]  UnrecognizedOptionException  	19	1	replace
335	[BUG]  [BUGGY]  currentOption  =  Option.OPTIONAL_OPTION  &&  tokens.size()  >  1;  [CE]  cannot  find  symbol  OPTIONAL_OPTION  [FE]              UnrecognizedOptionException      [CONTEXT]      private  void  init()  {  eatTheRest  =  false;  tokens.clear();      [BUGGY]  currentOption  =  Option.OPTIONAL_OPTION  &&  tokens.size()  >  1;  [BUGGY]      }  [CLASS]  PosixParser  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  ArrayList  tokens  Options  options  Option  currentOption  boolean  eatTheRest  	projects/Cli2/src/java/org/apache/commons/cli/PosixParser.java	1.0	53	53	1	replace	currentOption  =  Option.OPTIONAL_OPTION  &&  tokens.size()  >  1;	  currentOption    =    Option.OPTIONAL_OPTION;    	non-compiled	[CE]  cannot  find  symbol  OPTIONAL_OPTION	95	None	replace
336	[BUG]  [BUGGY]  currentOption  =  Option.OPTIONAL_OPTION  ||  eatTheRest;  [CE]  cannot  find  symbol  OPTIONAL_OPTION  [FE]                UnrecognizedOptionException      [CONTEXT]      private  void  init()  {  eatTheRest  =  false;  tokens.clear();      [BUGGY]  currentOption  =  Option.OPTIONAL_OPTION  ||  eatTheRest;  [BUGGY]      }  [CLASS]  PosixParser  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  ArrayList  tokens  Options  options  Option  currentOption  boolean  eatTheRest  	projects/Cli2/src/java/org/apache/commons/cli/PosixParser.java	1.0	53	53	1	replace	currentOption  =  Option.OPTIONAL_OPTION  ||  eatTheRest;	  currentOption    =    Option.OPTIONAL_OPTION;    	non-compiled	[CE]  cannot  find  symbol  OPTIONAL_OPTION	95	None	replace
337	[BUG]  [BUGGY]  [FE]  UnrecognizedOptionException  [FE]    UnrecognizedOptionException    [CONTEXT]      private  void  init()  {  eatTheRest  =  false;  tokens.clear();      [BUGGY]          tokens.clear();    currentOption    =    null;    ArrayList  <  Option>  tokens  =  new  ArrayList  <  Option>();  tokens.clear();  currentOption  =  null;  [BUGGY]      currentOption  =  null;  }  [CLASS]  PosixParser  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  ArrayList  tokens  Options  options  Option  currentOption  boolean  eatTheRest  	projects/Cli2/src/java/org/apache/commons/cli/PosixParser.java	1.0	53	53	1	add	                tokens.clear();        currentOption        =        null;        ArrayList    <    Option>    tokens    =    new    ArrayList    <    Option>();    tokens.clear();  currentOption  =  null;	  	compilable	  [FE]  UnrecognizedOptionException  	55	1	add
338	[BUG]  [BUGGY]          tokens.clear();    currentOption    =    null;    ArrayList  <  Option>  tokens  =  new  ArrayList  <  Option>();  tokens.clear();  currentOption  =  null;  [FE]  UnrecognizedOptionException  [FE]    UnrecognizedOptionException    [CONTEXT]      private  void  init()  {  eatTheRest  =  false;  tokens.clear();      [BUGGY]          tokens.clear();    currentOption    =    null;    ArrayList  <  Option>  tokens  =  new  ArrayList  <  Option>();  tokens.clear();  currentOption  =  null;  [BUGGY]      currentOption  =  null;  }  [CLASS]  PosixParser  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  ArrayList  tokens  Options  options  Option  currentOption  boolean  eatTheRest  	projects/Cli2/src/java/org/apache/commons/cli/PosixParser.java	1.0	53	53	1	replace	                tokens.clear();        currentOption        =        null;        ArrayList    <    Option>    tokens    =    new    ArrayList    <    Option>();    tokens.clear();  currentOption  =  null;	  	compilable	  [FE]  UnrecognizedOptionException  	55	1	add
339	[BUG]  [BUGGY]  [FE]  UnrecognizedOptionException  [FE]      UnrecognizedOptionException    [CONTEXT]      private  void  init()  {  eatTheRest  =  false;  tokens.clear();      [BUGGY]          tokens.clear();    currentOption    =    null;    ArrayList  <  Option>  tokens  =  new  ArrayList  <  Option>();  tokens.clear();  [BUGGY]      currentOption  =  null;  }  [CLASS]  PosixParser  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  ArrayList  tokens  Options  options  Option  currentOption  boolean  eatTheRest  	projects/Cli2/src/java/org/apache/commons/cli/PosixParser.java	1.0	53	53	1	add	                tokens.clear();        currentOption        =        null;        ArrayList    <    Option>    tokens    =    new    ArrayList    <    Option>();    tokens.clear();	  	compilable	  [FE]  UnrecognizedOptionException  	55	1	add
340	[BUG]  [BUGGY]          tokens.clear();    currentOption    =    null;    ArrayList  <  Option>  tokens  =  new  ArrayList  <  Option>();  tokens.clear();  [FE]  UnrecognizedOptionException  [FE]      UnrecognizedOptionException    [CONTEXT]      private  void  init()  {  eatTheRest  =  false;  tokens.clear();      [BUGGY]          tokens.clear();    currentOption    =    null;    ArrayList  <  Option>  tokens  =  new  ArrayList  <  Option>();  tokens.clear();  [BUGGY]      currentOption  =  null;  }  [CLASS]  PosixParser  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  ArrayList  tokens  Options  options  Option  currentOption  boolean  eatTheRest  	projects/Cli2/src/java/org/apache/commons/cli/PosixParser.java	1.0	53	53	1	replace	                tokens.clear();        currentOption        =        null;        ArrayList    <    Option>    tokens    =    new    ArrayList    <    Option>();    tokens.clear();	  	compilable	  [FE]  UnrecognizedOptionException  	55	1	add
341	[BUG]  [BUGGY]          tokens.clear();    currentOption    =    null;    ArrayList  <  Option>  tokens  =  new  ArrayList  <  Option>();  ArrayList  <  Option>  tokens  =  new  ArrayList  <  Option>();  [CE]  variable  tokens  is  already  defined  in  method  init()  [FE]        UnrecognizedOptionException    [CONTEXT]      private  void  init()  {  eatTheRest  =  false;  tokens.clear();      [BUGGY]          tokens.clear();    currentOption    =    null;    ArrayList  <  Option>  tokens  =  new  ArrayList  <  Option>();  ArrayList  <  Option>  tokens  =  new  ArrayList  <  Option>();  [BUGGY]      currentOption  =  null;  }  [CLASS]  PosixParser  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  ArrayList  tokens  Options  options  Option  currentOption  boolean  eatTheRest  	projects/Cli2/src/java/org/apache/commons/cli/PosixParser.java	1.0	53	53	1	replace	                tokens.clear();        currentOption        =        null;        ArrayList    <    Option>    tokens    =    new    ArrayList    <    Option>();    ArrayList  <  Option>  tokens  =  new  ArrayList  <  Option>();	  	non-compiled	[CE]  variable  tokens  is  already  defined  in  method  init()	55	None	add
342	[BUG]  [BUGGY]          tokens.clear();    currentOption    =    null;    ArrayList  <  Option>  tokens  =  new  ArrayList  <  Option>();  tokens.clear();  currentOption  =  null;  ArrayList  <  Option>  tokens  =  new  ArrayList  <  Option>();  [CE]  variable  tokens  is  already  defined  in  method  init()  [FE]          UnrecognizedOptionException    [CONTEXT]      private  void  init()  {  eatTheRest  =  false;  tokens.clear();      [BUGGY]          tokens.clear();    currentOption    =    null;    ArrayList  <  Option>  tokens  =  new  ArrayList  <  Option>();  tokens.clear();  currentOption  =  null;  ArrayList  <  Option>  tokens  =  new  ArrayList  <  Option>();  [BUGGY]      currentOption  =  null;  }  [CLASS]  PosixParser  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  ArrayList  tokens  Options  options  Option  currentOption  boolean  eatTheRest  	projects/Cli2/src/java/org/apache/commons/cli/PosixParser.java	1.0	53	53	1	replace	                tokens.clear();        currentOption        =        null;        ArrayList    <    Option>    tokens    =    new    ArrayList    <    Option>();    tokens.clear();  currentOption  =  null;  ArrayList  <  Option>  tokens  =  new  ArrayList  <  Option>();	  	non-compiled	[CE]  variable  tokens  is  already  defined  in  method  init()	55	None	add
343	[BUG]  [BUGGY]  [FE]  UnrecognizedOptionException  [FE]            UnrecognizedOptionException    [CONTEXT]      private  void  init()  {  eatTheRest  =  false;  tokens.clear();      [BUGGY]          tokens.clear();    currentOption    =    null;    ArrayList  <  Option>  tokens  =  new  ArrayList  <  Option>();  if(!eatTheRest)  {  tokens.clear();  currentOption  =  null;  }  [BUGGY]      currentOption  =  null;  }  [CLASS]  PosixParser  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  ArrayList  tokens  Options  options  Option  currentOption  boolean  eatTheRest  	projects/Cli2/src/java/org/apache/commons/cli/PosixParser.java	1.0	53	53	1	add	                tokens.clear();        currentOption        =        null;        ArrayList    <    Option>    tokens    =    new    ArrayList    <    Option>();    if(!eatTheRest)  {  tokens.clear();  currentOption  =  null;  }	  	compilable	  [FE]  UnrecognizedOptionException  	55	1	add
344	[BUG]  [BUGGY]          tokens.clear();    currentOption    =    null;    ArrayList  <  Option>  tokens  =  new  ArrayList  <  Option>();  if(!eatTheRest)  {  tokens.clear();  currentOption  =  null;  }  [FE]  UnrecognizedOptionException  [FE]            UnrecognizedOptionException    [CONTEXT]      private  void  init()  {  eatTheRest  =  false;  tokens.clear();      [BUGGY]          tokens.clear();    currentOption    =    null;    ArrayList  <  Option>  tokens  =  new  ArrayList  <  Option>();  if(!eatTheRest)  {  tokens.clear();  currentOption  =  null;  }  [BUGGY]      currentOption  =  null;  }  [CLASS]  PosixParser  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  ArrayList  tokens  Options  options  Option  currentOption  boolean  eatTheRest  	projects/Cli2/src/java/org/apache/commons/cli/PosixParser.java	1.0	53	53	1	replace	                tokens.clear();        currentOption        =        null;        ArrayList    <    Option>    tokens    =    new    ArrayList    <    Option>();    if(!eatTheRest)  {  tokens.clear();  currentOption  =  null;  }	  	compilable	  [FE]  UnrecognizedOptionException  	55	1	add
345	[BUG]  [BUGGY]  [FE]  UnrecognizedOptionException  [FE]    UnrecognizedOptionException    [CONTEXT]      private  void  init()  {  eatTheRest  =  false;  tokens.clear();      [BUGGY]          tokens.add(     "--     ");    tokens.add(   "--     ");  currentOption  =  null;  tokens.add( "--   ");  tokens.add( "--   ");  currentOption  =  null;  [BUGGY]      currentOption  =  null;  }  [CLASS]  PosixParser  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  ArrayList  tokens  Options  options  Option  currentOption  boolean  eatTheRest  	projects/Cli2/src/java/org/apache/commons/cli/PosixParser.java	1.0	53	53	1	add	                tokens.add(       "--       ");        tokens.add(   "--       ");    currentOption    =    null;    tokens.add( "--   ");  tokens.add( "--   ");  currentOption  =  null;	  	compilable	  [FE]  UnrecognizedOptionException  	24	1	add
346	[BUG]  [BUGGY]          tokens.add(     "--     ");    tokens.add(   "--     ");  currentOption  =  null;  tokens.add( "--   ");  tokens.add( "--   ");  currentOption  =  null;  [FE]  UnrecognizedOptionException  [FE]    UnrecognizedOptionException    [CONTEXT]      private  void  init()  {  eatTheRest  =  false;  tokens.clear();      [BUGGY]          tokens.add(     "--     ");    tokens.add(   "--     ");  currentOption  =  null;  tokens.add( "--   ");  tokens.add( "--   ");  currentOption  =  null;  [BUGGY]      currentOption  =  null;  }  [CLASS]  PosixParser  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  ArrayList  tokens  Options  options  Option  currentOption  boolean  eatTheRest  	projects/Cli2/src/java/org/apache/commons/cli/PosixParser.java	1.0	53	53	1	replace	                tokens.add(       "--       ");        tokens.add(   "--       ");    currentOption    =    null;    tokens.add( "--   ");  tokens.add( "--   ");  currentOption  =  null;	  	compilable	  [FE]  UnrecognizedOptionException  	24	1	add
347	[BUG]  [BUGGY]  [FE]  UnrecognizedOptionException  [FE]      UnrecognizedOptionException    [CONTEXT]      private  void  init()  {  eatTheRest  =  false;  tokens.clear();      [BUGGY]          tokens.add(     "--     ");    tokens.add(   "--     ");  currentOption  =  null;  tokens.remove( "-- ");  tokens.add( "-- ");  currentOption  =  null;  [BUGGY]      currentOption  =  null;  }  [CLASS]  PosixParser  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  ArrayList  tokens  Options  options  Option  currentOption  boolean  eatTheRest  	projects/Cli2/src/java/org/apache/commons/cli/PosixParser.java	1.0	53	53	1	add	                tokens.add(       "--       ");        tokens.add(   "--       ");    currentOption    =    null;    tokens.remove( "-- ");  tokens.add( "-- ");  currentOption  =  null;	  	compilable	  [FE]  UnrecognizedOptionException  	24	1	add
348	[BUG]  [BUGGY]          tokens.add(     "--     ");    tokens.add(   "--     ");  currentOption  =  null;  tokens.remove( "-- ");  tokens.add( "-- ");  currentOption  =  null;  [FE]  UnrecognizedOptionException  [FE]      UnrecognizedOptionException    [CONTEXT]      private  void  init()  {  eatTheRest  =  false;  tokens.clear();      [BUGGY]          tokens.add(     "--     ");    tokens.add(   "--     ");  currentOption  =  null;  tokens.remove( "-- ");  tokens.add( "-- ");  currentOption  =  null;  [BUGGY]      currentOption  =  null;  }  [CLASS]  PosixParser  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  ArrayList  tokens  Options  options  Option  currentOption  boolean  eatTheRest  	projects/Cli2/src/java/org/apache/commons/cli/PosixParser.java	1.0	53	53	1	replace	                tokens.add(       "--       ");        tokens.add(   "--       ");    currentOption    =    null;    tokens.remove( "-- ");  tokens.add( "-- ");  currentOption  =  null;	  	compilable	  [FE]  UnrecognizedOptionException  	24	1	add
349	[BUG]  [BUGGY]  [FE]  UnrecognizedOptionException  [FE]        UnrecognizedOptionException    [CONTEXT]      private  void  init()  {  eatTheRest  =  false;  tokens.clear();      [BUGGY]          tokens.add(     "--     ");    tokens.add(   "--     ");  currentOption  =  null;  tokens.clear();  [BUGGY]      currentOption  =  null;  }  [CLASS]  PosixParser  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  ArrayList  tokens  Options  options  Option  currentOption  boolean  eatTheRest  	projects/Cli2/src/java/org/apache/commons/cli/PosixParser.java	1.0	53	53	1	add	                tokens.add(       "--       ");        tokens.add(   "--       ");    currentOption    =    null;    tokens.clear();	  	compilable	  [FE]  UnrecognizedOptionException  	24	1	add
350	[BUG]  [BUGGY]          tokens.add(     "--     ");    tokens.add(   "--     ");  currentOption  =  null;  tokens.clear();  [FE]  UnrecognizedOptionException  [FE]        UnrecognizedOptionException    [CONTEXT]      private  void  init()  {  eatTheRest  =  false;  tokens.clear();      [BUGGY]          tokens.add(     "--     ");    tokens.add(   "--     ");  currentOption  =  null;  tokens.clear();  [BUGGY]      currentOption  =  null;  }  [CLASS]  PosixParser  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  ArrayList  tokens  Options  options  Option  currentOption  boolean  eatTheRest  	projects/Cli2/src/java/org/apache/commons/cli/PosixParser.java	1.0	53	53	1	replace	                tokens.add(       "--       ");        tokens.add(   "--       ");    currentOption    =    null;    tokens.clear();	  	compilable	  [FE]  UnrecognizedOptionException  	24	1	add
351	[BUG]  [BUGGY]  [FE]  UnrecognizedOptionException  [FE]    UnrecognizedOptionException    [CONTEXT]      private  void  init()  {  eatTheRest  =  false;  tokens.clear();      [BUGGY]  currentOption  =  Option.OK_STANDARD  ||  tokens.size()  >  1;  [BUGGY]      }  [CLASS]  PosixParser  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  ArrayList  tokens  Options  options  Option  currentOption  boolean  eatTheRest  	projects/Cli2/src/java/org/apache/commons/cli/PosixParser.java	1.0	53	53	1	add	currentOption  =  Option.OK_STANDARD  ||  tokens.size()  >  1;	  currentOption    =    Option.OK_STANDARD    &&    tokens.size()    >    1;    	compilable	  [FE]  UnrecognizedOptionException  	21	1	replace
352	[BUG]  [BUGGY]  currentOption  =  Option.OK_STANDARD  ||  tokens.size()  >  1;  [FE]  UnrecognizedOptionException  [FE]    UnrecognizedOptionException    [CONTEXT]      private  void  init()  {  eatTheRest  =  false;  tokens.clear();      [BUGGY]  currentOption  =  Option.OK_STANDARD  ||  tokens.size()  >  1;  [BUGGY]      }  [CLASS]  PosixParser  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  ArrayList  tokens  Options  options  Option  currentOption  boolean  eatTheRest  	projects/Cli2/src/java/org/apache/commons/cli/PosixParser.java	1.0	53	53	1	replace	currentOption  =  Option.OK_STANDARD  ||  tokens.size()  >  1;	  currentOption    =    Option.OK_STANDARD    &&    tokens.size()    >    1;    	compilable	  [FE]  UnrecognizedOptionException  	21	1	replace
353	[BUG]  [BUGGY]  [FE]  UnrecognizedOptionException  [FE]      UnrecognizedOptionException    [CONTEXT]      private  void  init()  {  eatTheRest  =  false;  tokens.clear();      [BUGGY]  currentOption  =  Option.OK_STANDARD  &&  tokens.size()  ==  1;  [BUGGY]      }  [CLASS]  PosixParser  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  ArrayList  tokens  Options  options  Option  currentOption  boolean  eatTheRest  	projects/Cli2/src/java/org/apache/commons/cli/PosixParser.java	1.0	53	53	1	add	currentOption  =  Option.OK_STANDARD  &&  tokens.size()  ==  1;	  currentOption    =    Option.OK_STANDARD    &&    tokens.size()    >    1;    	compilable	  [FE]  UnrecognizedOptionException  	21	1	replace
354	[BUG]  [BUGGY]  currentOption  =  Option.OK_STANDARD  &&  tokens.size()  ==  1;  [FE]  UnrecognizedOptionException  [FE]      UnrecognizedOptionException    [CONTEXT]      private  void  init()  {  eatTheRest  =  false;  tokens.clear();      [BUGGY]  currentOption  =  Option.OK_STANDARD  &&  tokens.size()  ==  1;  [BUGGY]      }  [CLASS]  PosixParser  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  ArrayList  tokens  Options  options  Option  currentOption  boolean  eatTheRest  	projects/Cli2/src/java/org/apache/commons/cli/PosixParser.java	1.0	53	53	1	replace	currentOption  =  Option.OK_STANDARD  &&  tokens.size()  ==  1;	  currentOption    =    Option.OK_STANDARD    &&    tokens.size()    >    1;    	compilable	  [FE]  UnrecognizedOptionException  	21	1	replace
355	[BUG]  [BUGGY]  [FE]  UnrecognizedOptionException  [FE]        UnrecognizedOptionException    [CONTEXT]      private  void  init()  {  eatTheRest  =  false;  tokens.clear();      [BUGGY]  currentOption  =  Option.OK_STANDARD  &&  tokens.size()  >  2;  [BUGGY]      }  [CLASS]  PosixParser  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  ArrayList  tokens  Options  options  Option  currentOption  boolean  eatTheRest  	projects/Cli2/src/java/org/apache/commons/cli/PosixParser.java	1.0	53	53	1	add	currentOption  =  Option.OK_STANDARD  &&  tokens.size()  >  2;	  currentOption    =    Option.OK_STANDARD    &&    tokens.size()    >    1;    	compilable	  [FE]  UnrecognizedOptionException  	21	1	replace
356	[BUG]  [BUGGY]  currentOption  =  Option.OK_STANDARD  &&  tokens.size()  >  2;  [FE]  UnrecognizedOptionException  [FE]        UnrecognizedOptionException    [CONTEXT]      private  void  init()  {  eatTheRest  =  false;  tokens.clear();      [BUGGY]  currentOption  =  Option.OK_STANDARD  &&  tokens.size()  >  2;  [BUGGY]      }  [CLASS]  PosixParser  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  ArrayList  tokens  Options  options  Option  currentOption  boolean  eatTheRest  	projects/Cli2/src/java/org/apache/commons/cli/PosixParser.java	1.0	53	53	1	replace	currentOption  =  Option.OK_STANDARD  &&  tokens.size()  >  2;	  currentOption    =    Option.OK_STANDARD    &&    tokens.size()    >    1;    	compilable	  [FE]  UnrecognizedOptionException  	21	1	replace
357	[BUG]  [BUGGY]  null  tokens.clear();  ArrayList  <  Option>  tokens  =  new  ArrayList  <  Option>(tokens.size());  [CE]  not  a  statement  [FE]          UnrecognizedOptionException      [CONTEXT]      private  void  init()  {  eatTheRest  =  false;  tokens.clear();      [BUGGY]  null  tokens.clear();  ArrayList  <  Option>  tokens  =  new  ArrayList  <  Option>(tokens.size());  [BUGGY]      currentOption  =  null;  }  [CLASS]  PosixParser  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  ArrayList  tokens  Options  options  Option  currentOption  boolean  eatTheRest  	projects/Cli2/src/java/org/apache/commons/cli/PosixParser.java	1.0	53	53	1	replace	null  tokens.clear();  ArrayList  <  Option>  tokens  =  new  ArrayList  <  Option>(tokens.size());	          tokens.clear();    ArrayList    <    Option>    tokens    =    new    ArrayList    <    Option>(tokens.size());    	non-compiled	[CE]  not  a  statement	61	None	replace
358	[BUG]  [BUGGY]  Option  currentOption  =  options.getOption(this,  eatTheRest,  tokens);  [CE]  method  getOption  in  class  Options  cannot  be  applied  to  given  types;  [FE]                  UnrecognizedOptionException      [CONTEXT]      private  void  init()  {  eatTheRest  =  false;  tokens.clear();      [BUGGY]  Option  currentOption  =  options.getOption(this,  eatTheRest,  tokens);  [BUGGY]      currentOption  =  null;  }  [CLASS]  PosixParser  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  ArrayList  tokens  Options  options  Option  currentOption  boolean  eatTheRest  	projects/Cli2/src/java/org/apache/commons/cli/PosixParser.java	1.0	53	53	1	replace	Option  currentOption  =  options.getOption(this,  eatTheRest,  tokens);	  Option    currentOption    =    options.getOption(this,    eatTheRest);    	non-compiled	[CE]  method  getOption  in  class  Options  cannot  be  applied  to  given  types;	68	None	replace
359	[BUG]  [BUGGY]  options.getOption(this,  eatTheRest,  tokens);  [CE]  method  getOption  in  class  Options  cannot  be  applied  to  given  types;  [FE]                    UnrecognizedOptionException      [CONTEXT]      private  void  init()  {  eatTheRest  =  false;  tokens.clear();      [BUGGY]  options.getOption(this,  eatTheRest,  tokens);  [BUGGY]      currentOption  =  null;  }  [CLASS]  PosixParser  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  ArrayList  tokens  Options  options  Option  currentOption  boolean  eatTheRest  	projects/Cli2/src/java/org/apache/commons/cli/PosixParser.java	1.0	53	53	1	replace	options.getOption(this,  eatTheRest,  tokens);	  Option    currentOption    =    options.getOption(this,    eatTheRest);    	non-compiled	[CE]  method  getOption  in  class  Options  cannot  be  applied  to  given  types;	68	None	replace
360	[BUG]  [BUGGY]  if(!eatTheRest)  {  tokens.remove();  currentOption  =  null;  }  else  {  options.setOption(null);  }  [CE]  no  suitable  method  found  for  remove()  [FE]          UnrecognizedOptionException      [CONTEXT]      private  void  init()  {  eatTheRest  =  false;  tokens.clear();      [BUGGY]  if(!eatTheRest)  {  tokens.remove();  currentOption  =  null;  }  else  {  options.setOption(null);  }  [BUGGY]      currentOption  =  null;  }  [CLASS]  PosixParser  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  ArrayList  tokens  Options  options  Option  currentOption  boolean  eatTheRest  	projects/Cli2/src/java/org/apache/commons/cli/PosixParser.java	1.0	53	53	1	replace	if(!eatTheRest)  {  tokens.remove();  currentOption  =  null;  }  else  {  options.setOption(null);  }	  if(!eatTheRest)    {    tokens.clear();    currentOption    =    null;    }    else    {    options.setOption(null);    }    	non-compiled	[CE]  no  suitable  method  found  for  remove()	12	None	replace
361	[BUG]  [BUGGY]  [FE]  UnrecognizedOptionException  [FE]    UnrecognizedOptionException    [CONTEXT]      private  void  init()  {  eatTheRest  =  false;  tokens.clear();      [BUGGY]  ArrayList  <  Option>  tokens  =  new  ArrayList  <  Option>();  currentOption  =  null;  [BUGGY]      currentOption  =  null;  }  [CLASS]  PosixParser  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  ArrayList  tokens  Options  options  Option  currentOption  boolean  eatTheRest  	projects/Cli2/src/java/org/apache/commons/cli/PosixParser.java	1.0	53	53	1	add	ArrayList  <  Option>  tokens  =  new  ArrayList  <  Option>();  currentOption  =  null;	          tokens.clear();    currentOption    =    null;    ArrayList    <    Option>    tokens    =    new    ArrayList    <    Option>();    currentOption    =    null;    	compilable	  [FE]  UnrecognizedOptionException  	58	1	replace
362	[BUG]  [BUGGY]  ArrayList  <  Option>  tokens  =  new  ArrayList  <  Option>();  currentOption  =  null;  [FE]  UnrecognizedOptionException  [FE]    UnrecognizedOptionException    [CONTEXT]      private  void  init()  {  eatTheRest  =  false;  tokens.clear();      [BUGGY]  ArrayList  <  Option>  tokens  =  new  ArrayList  <  Option>();  currentOption  =  null;  [BUGGY]      currentOption  =  null;  }  [CLASS]  PosixParser  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  ArrayList  tokens  Options  options  Option  currentOption  boolean  eatTheRest  	projects/Cli2/src/java/org/apache/commons/cli/PosixParser.java	1.0	53	53	1	replace	ArrayList  <  Option>  tokens  =  new  ArrayList  <  Option>();  currentOption  =  null;	          tokens.clear();    currentOption    =    null;    ArrayList    <    Option>    tokens    =    new    ArrayList    <    Option>();    currentOption    =    null;    	compilable	  [FE]  UnrecognizedOptionException  	58	1	replace
363	[BUG]  [BUGGY]  tokens.clear();  currentOption  =  new  ArrayList  <  Option>();  [CE]  incompatible  types  [FE]      UnrecognizedOptionException    [CONTEXT]      private  void  init()  {  eatTheRest  =  false;  tokens.clear();      [BUGGY]  tokens.clear();  currentOption  =  new  ArrayList  <  Option>();  [BUGGY]      currentOption  =  null;  }  [CLASS]  PosixParser  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  ArrayList  tokens  Options  options  Option  currentOption  boolean  eatTheRest  	projects/Cli2/src/java/org/apache/commons/cli/PosixParser.java	1.0	53	53	1	replace	tokens.clear();  currentOption  =  new  ArrayList  <  Option>();	          tokens.clear();    currentOption    =    null;    ArrayList    <    Option>    tokens    =    new    ArrayList    <    Option>();    currentOption    =    null;    	non-compiled	[CE]  incompatible  types	58	None	replace
364	[BUG]  [BUGGY]  Option  currentOption  =  options.getOption(tokens,  null);  [CE]  method  getOption  in  class  Options  cannot  be  applied  to  given  types;  [FE]                UnrecognizedOptionException      [CONTEXT]      private  void  init()  {  eatTheRest  =  false;  tokens.clear();      [BUGGY]  Option  currentOption  =  options.getOption(tokens,  null);  [BUGGY]      currentOption  =  null;  }  [CLASS]  PosixParser  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  ArrayList  tokens  Options  options  Option  currentOption  boolean  eatTheRest  	projects/Cli2/src/java/org/apache/commons/cli/PosixParser.java	1.0	53	53	1	replace	Option  currentOption  =  options.getOption(tokens,  null);	  Option    currentOption    =    options.getOption(tokens,    this);    	non-compiled	[CE]  method  getOption  in  class  Options  cannot  be  applied  to  given  types;	142	None	replace
365	[BUG]  [BUGGY]  Option  currentOption  =  options.getOption(tokens,  this,  eatTheRest);  [CE]  method  getOption  in  class  Options  cannot  be  applied  to  given  types;  [FE]                  UnrecognizedOptionException      [CONTEXT]      private  void  init()  {  eatTheRest  =  false;  tokens.clear();      [BUGGY]  Option  currentOption  =  options.getOption(tokens,  this,  eatTheRest);  [BUGGY]      currentOption  =  null;  }  [CLASS]  PosixParser  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  ArrayList  tokens  Options  options  Option  currentOption  boolean  eatTheRest  	projects/Cli2/src/java/org/apache/commons/cli/PosixParser.java	1.0	53	53	1	replace	Option  currentOption  =  options.getOption(tokens,  this,  eatTheRest);	  Option    currentOption    =    options.getOption(tokens,    this);    	non-compiled	[CE]  method  getOption  in  class  Options  cannot  be  applied  to  given  types;	142	None	replace
366	[BUG]  [BUGGY]  Option  currentOption  =  options.getOption(tokens,  this,  null);  [CE]  method  getOption  in  class  Options  cannot  be  applied  to  given  types;  [FE]                    UnrecognizedOptionException      [CONTEXT]      private  void  init()  {  eatTheRest  =  false;  tokens.clear();      [BUGGY]  Option  currentOption  =  options.getOption(tokens,  this,  null);  [BUGGY]      currentOption  =  null;  }  [CLASS]  PosixParser  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  ArrayList  tokens  Options  options  Option  currentOption  boolean  eatTheRest  	projects/Cli2/src/java/org/apache/commons/cli/PosixParser.java	1.0	53	53	1	replace	Option  currentOption  =  options.getOption(tokens,  this,  null);	  Option    currentOption    =    options.getOption(tokens,    this);    	non-compiled	[CE]  method  getOption  in  class  Options  cannot  be  applied  to  given  types;	142	None	replace
367	[BUG]  [BUGGY]  Option  currentOption  =  options.getOption(tokens,  this,  tokens);  [CE]  method  getOption  in  class  Options  cannot  be  applied  to  given  types;  [FE]                      UnrecognizedOptionException      [CONTEXT]      private  void  init()  {  eatTheRest  =  false;  tokens.clear();      [BUGGY]  Option  currentOption  =  options.getOption(tokens,  this,  tokens);  [BUGGY]      currentOption  =  null;  }  [CLASS]  PosixParser  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  ArrayList  tokens  Options  options  Option  currentOption  boolean  eatTheRest  	projects/Cli2/src/java/org/apache/commons/cli/PosixParser.java	1.0	53	53	1	replace	Option  currentOption  =  options.getOption(tokens,  this,  tokens);	  Option    currentOption    =    options.getOption(tokens,    this);    	non-compiled	[CE]  method  getOption  in  class  Options  cannot  be  applied  to  given  types;	142	None	replace
368	[BUG]  [BUGGY]  List  tokens  =  new  LinkedList();  [CE]  cannot  find  symbol  [FE]          UnrecognizedOptionException      [CONTEXT]      private  void  init()  {  eatTheRest  =  false;  tokens.clear();      [BUGGY]  List  tokens  =  new  LinkedList();  [BUGGY]      currentOption  =  null;  }  [CLASS]  PosixParser  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  ArrayList  tokens  Options  options  Option  currentOption  boolean  eatTheRest  	projects/Cli2/src/java/org/apache/commons/cli/PosixParser.java	1.0	53	53	1	replace	List  tokens  =  new  LinkedList();	  List    tokens    =    new    ArrayList();    	non-compiled	[CE]  cannot  find  symbol	94	None	replace
369	[BUG]  [BUGGY]  ArrayList  tokens  =  new  ArrayList(options);  [CE]  no  suitable  constructor  found  for  ArrayList(Options)  [FE]        UnrecognizedOptionException      [CONTEXT]      private  void  init()  {  eatTheRest  =  false;  tokens.clear();      [BUGGY]  ArrayList  tokens  =  new  ArrayList(options);  [BUGGY]      currentOption  =  null;  }  [CLASS]  PosixParser  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  ArrayList  tokens  Options  options  Option  currentOption  boolean  eatTheRest  	projects/Cli2/src/java/org/apache/commons/cli/PosixParser.java	1.0	53	53	1	replace	ArrayList  tokens  =  new  ArrayList(options);	  ArrayList    tokens    =    new    ArrayList(tokens);    	non-compiled	[CE]  no  suitable  constructor  found  for  ArrayList(Options)	135	None	replace
370	[BUG]  [BUGGY]  ArrayList  tokens  =  new  ArrayList(tokens.length);  [CE]  cannot  find  symbol  length  [FE]          UnrecognizedOptionException      [CONTEXT]      private  void  init()  {  eatTheRest  =  false;  tokens.clear();      [BUGGY]  ArrayList  tokens  =  new  ArrayList(tokens.length);  [BUGGY]      currentOption  =  null;  }  [CLASS]  PosixParser  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  ArrayList  tokens  Options  options  Option  currentOption  boolean  eatTheRest  	projects/Cli2/src/java/org/apache/commons/cli/PosixParser.java	1.0	53	53	1	replace	ArrayList  tokens  =  new  ArrayList(tokens.length);	  ArrayList    tokens    =    new    ArrayList(tokens);    	non-compiled	[CE]  cannot  find  symbol  length	135	None	replace
371	[BUG]  [BUGGY]  [FE]  UnrecognizedOptionException  [FE]    UnrecognizedOptionException    [CONTEXT]      private  void  init()  {  eatTheRest  =  false;  tokens.clear();      [BUGGY]  currentOption  =  Option.OK_STANDARD  &&  tokens.size()  >  1;  currentOption  =  Option.OK_STANDARD  &&  tokens.size()  >  1;  [BUGGY]      }  [CLASS]  PosixParser  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  ArrayList  tokens  Options  options  Option  currentOption  boolean  eatTheRest  	projects/Cli2/src/java/org/apache/commons/cli/PosixParser.java	1.0	53	53	1	add	currentOption    =    Option.OK_STANDARD    &&    tokens.size()    >    1;    currentOption  =  Option.OK_STANDARD  &&  tokens.size()  >  1;	  	compilable	  [FE]  UnrecognizedOptionException  	20	1	add
372	[BUG]  [BUGGY]  currentOption  =  Option.OK_STANDARD  &&  tokens.size()  >  1;  currentOption  =  Option.OK_STANDARD  &&  tokens.size()  >  1;  [FE]  UnrecognizedOptionException  [FE]    UnrecognizedOptionException    [CONTEXT]      private  void  init()  {  eatTheRest  =  false;  tokens.clear();      [BUGGY]  currentOption  =  Option.OK_STANDARD  &&  tokens.size()  >  1;  currentOption  =  Option.OK_STANDARD  &&  tokens.size()  >  1;  [BUGGY]      }  [CLASS]  PosixParser  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  ArrayList  tokens  Options  options  Option  currentOption  boolean  eatTheRest  	projects/Cli2/src/java/org/apache/commons/cli/PosixParser.java	1.0	53	53	1	replace	currentOption    =    Option.OK_STANDARD    &&    tokens.size()    >    1;    currentOption  =  Option.OK_STANDARD  &&  tokens.size()  >  1;	  	compilable	  [FE]  UnrecognizedOptionException  	20	1	add
373	[BUG]  [BUGGY]  [FE]  UnrecognizedOptionException  [FE]      UnrecognizedOptionException    [CONTEXT]      private  void  init()  {  eatTheRest  =  false;  tokens.clear();      [BUGGY]  currentOption  =  Option.OK_STANDARD  &&  tokens.size()  >  1;  Option  currentOption  =  Option.OK_STANDARD  &&  tokens.size()  >  1;  [BUGGY]      }  [CLASS]  PosixParser  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  ArrayList  tokens  Options  options  Option  currentOption  boolean  eatTheRest  	projects/Cli2/src/java/org/apache/commons/cli/PosixParser.java	1.0	53	53	1	add	currentOption    =    Option.OK_STANDARD    &&    tokens.size()    >    1;    Option  currentOption  =  Option.OK_STANDARD  &&  tokens.size()  >  1;	  	compilable	  [FE]  UnrecognizedOptionException  	20	1	add
374	[BUG]  [BUGGY]  currentOption  =  Option.OK_STANDARD  &&  tokens.size()  >  1;  Option  currentOption  =  Option.OK_STANDARD  &&  tokens.size()  >  1;  [FE]  UnrecognizedOptionException  [FE]      UnrecognizedOptionException    [CONTEXT]      private  void  init()  {  eatTheRest  =  false;  tokens.clear();      [BUGGY]  currentOption  =  Option.OK_STANDARD  &&  tokens.size()  >  1;  Option  currentOption  =  Option.OK_STANDARD  &&  tokens.size()  >  1;  [BUGGY]      }  [CLASS]  PosixParser  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  ArrayList  tokens  Options  options  Option  currentOption  boolean  eatTheRest  	projects/Cli2/src/java/org/apache/commons/cli/PosixParser.java	1.0	53	53	1	replace	currentOption    =    Option.OK_STANDARD    &&    tokens.size()    >    1;    Option  currentOption  =  Option.OK_STANDARD  &&  tokens.size()  >  1;	  	compilable	  [FE]  UnrecognizedOptionException  	20	1	add
375	[BUG]  [BUGGY]  [FE]  UnrecognizedOptionException  [FE]        UnrecognizedOptionException    [CONTEXT]      private  void  init()  {  eatTheRest  =  false;  tokens.clear();      [BUGGY]  currentOption  =  Option.OK_STANDARD  &&  tokens.size()  >  1;  tokens.clear();  currentOption  =  Option.OK_STANDARD  &&  tokens.size()  >  1;  [BUGGY]      }  [CLASS]  PosixParser  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  ArrayList  tokens  Options  options  Option  currentOption  boolean  eatTheRest  	projects/Cli2/src/java/org/apache/commons/cli/PosixParser.java	1.0	53	53	1	add	currentOption    =    Option.OK_STANDARD    &&    tokens.size()    >    1;    tokens.clear();  currentOption  =  Option.OK_STANDARD  &&  tokens.size()  >  1;	  	compilable	  [FE]  UnrecognizedOptionException  	20	1	add
376	[BUG]  [BUGGY]  currentOption  =  Option.OK_STANDARD  &&  tokens.size()  >  1;  tokens.clear();  currentOption  =  Option.OK_STANDARD  &&  tokens.size()  >  1;  [FE]  UnrecognizedOptionException  [FE]        UnrecognizedOptionException    [CONTEXT]      private  void  init()  {  eatTheRest  =  false;  tokens.clear();      [BUGGY]  currentOption  =  Option.OK_STANDARD  &&  tokens.size()  >  1;  tokens.clear();  currentOption  =  Option.OK_STANDARD  &&  tokens.size()  >  1;  [BUGGY]      }  [CLASS]  PosixParser  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  ArrayList  tokens  Options  options  Option  currentOption  boolean  eatTheRest  	projects/Cli2/src/java/org/apache/commons/cli/PosixParser.java	1.0	53	53	1	replace	currentOption    =    Option.OK_STANDARD    &&    tokens.size()    >    1;    tokens.clear();  currentOption  =  Option.OK_STANDARD  &&  tokens.size()  >  1;	  	compilable	  [FE]  UnrecognizedOptionException  	20	1	add
377	[BUG]  [BUGGY]  [FE]  UnrecognizedOptionException  [FE]          UnrecognizedOptionException    [CONTEXT]      private  void  init()  {  eatTheRest  =  false;  tokens.clear();      [BUGGY]  currentOption  =  Option.OK_STANDARD  &&  tokens.size()  >  1;  if(currentOption!=  null)  {  currentOption  =  Option.OK_STANDARD  &&  tokens.size()  >  1;  }  [BUGGY]      }  [CLASS]  PosixParser  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  ArrayList  tokens  Options  options  Option  currentOption  boolean  eatTheRest  	projects/Cli2/src/java/org/apache/commons/cli/PosixParser.java	1.0	53	53	1	add	currentOption    =    Option.OK_STANDARD    &&    tokens.size()    >    1;    if(currentOption!=  null)  {  currentOption  =  Option.OK_STANDARD  &&  tokens.size()  >  1;  }	  	compilable	  [FE]  UnrecognizedOptionException  	20	1	add
378	[BUG]  [BUGGY]  currentOption  =  Option.OK_STANDARD  &&  tokens.size()  >  1;  if(currentOption!=  null)  {  currentOption  =  Option.OK_STANDARD  &&  tokens.size()  >  1;  }  [FE]  UnrecognizedOptionException  [FE]          UnrecognizedOptionException    [CONTEXT]      private  void  init()  {  eatTheRest  =  false;  tokens.clear();      [BUGGY]  currentOption  =  Option.OK_STANDARD  &&  tokens.size()  >  1;  if(currentOption!=  null)  {  currentOption  =  Option.OK_STANDARD  &&  tokens.size()  >  1;  }  [BUGGY]      }  [CLASS]  PosixParser  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  ArrayList  tokens  Options  options  Option  currentOption  boolean  eatTheRest  	projects/Cli2/src/java/org/apache/commons/cli/PosixParser.java	1.0	53	53	1	replace	currentOption    =    Option.OK_STANDARD    &&    tokens.size()    >    1;    if(currentOption!=  null)  {  currentOption  =  Option.OK_STANDARD  &&  tokens.size()  >  1;  }	  	compilable	  [FE]  UnrecognizedOptionException  	20	1	add
379	[BUG]  [BUGGY]  [FE]  UnrecognizedOptionException  [FE]            UnrecognizedOptionException    [CONTEXT]      private  void  init()  {  eatTheRest  =  false;  tokens.clear();      [BUGGY]  currentOption  =  Option.OK_STANDARD  &&  tokens.size()  >  1;  currentOption  =  Option.OK_STANDARD  &&  tokens.size()  >  2;  [BUGGY]      }  [CLASS]  PosixParser  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  ArrayList  tokens  Options  options  Option  currentOption  boolean  eatTheRest  	projects/Cli2/src/java/org/apache/commons/cli/PosixParser.java	1.0	53	53	1	add	currentOption    =    Option.OK_STANDARD    &&    tokens.size()    >    1;    currentOption  =  Option.OK_STANDARD  &&  tokens.size()  >  2;	  	compilable	  [FE]  UnrecognizedOptionException  	20	1	add
380	[BUG]  [BUGGY]  currentOption  =  Option.OK_STANDARD  &&  tokens.size()  >  1;  currentOption  =  Option.OK_STANDARD  &&  tokens.size()  >  2;  [FE]  UnrecognizedOptionException  [FE]            UnrecognizedOptionException    [CONTEXT]      private  void  init()  {  eatTheRest  =  false;  tokens.clear();      [BUGGY]  currentOption  =  Option.OK_STANDARD  &&  tokens.size()  >  1;  currentOption  =  Option.OK_STANDARD  &&  tokens.size()  >  2;  [BUGGY]      }  [CLASS]  PosixParser  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  ArrayList  tokens  Options  options  Option  currentOption  boolean  eatTheRest  	projects/Cli2/src/java/org/apache/commons/cli/PosixParser.java	1.0	53	53	1	replace	currentOption    =    Option.OK_STANDARD    &&    tokens.size()    >    1;    currentOption  =  Option.OK_STANDARD  &&  tokens.size()  >  2;	  	compilable	  [FE]  UnrecognizedOptionException  	20	1	add
381	[BUG]  [BUGGY]  [FE]  UnrecognizedOptionException  [FE]    UnrecognizedOptionException    [CONTEXT]      private  void  init()  {  eatTheRest  =  false;  tokens.clear();      [BUGGY]  if(!eatTheRest)  {  tokens.clear();  tokens.clear();  currentOption  =  null;  }  [BUGGY]      currentOption  =  null;  }  [CLASS]  PosixParser  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  ArrayList  tokens  Options  options  Option  currentOption  boolean  eatTheRest  	projects/Cli2/src/java/org/apache/commons/cli/PosixParser.java	1.0	53	53	1	add	if(!eatTheRest)  {  tokens.clear();  tokens.clear();  currentOption  =  null;  }	          tokens.clear();    tokens.clear();    currentOption    =    null;    	compilable	  [FE]  UnrecognizedOptionException  	66	1	replace
382	[BUG]  [BUGGY]  if(!eatTheRest)  {  tokens.clear();  tokens.clear();  currentOption  =  null;  }  [FE]  UnrecognizedOptionException  [FE]    UnrecognizedOptionException    [CONTEXT]      private  void  init()  {  eatTheRest  =  false;  tokens.clear();      [BUGGY]  if(!eatTheRest)  {  tokens.clear();  tokens.clear();  currentOption  =  null;  }  [BUGGY]      currentOption  =  null;  }  [CLASS]  PosixParser  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  ArrayList  tokens  Options  options  Option  currentOption  boolean  eatTheRest  	projects/Cli2/src/java/org/apache/commons/cli/PosixParser.java	1.0	53	53	1	replace	if(!eatTheRest)  {  tokens.clear();  tokens.clear();  currentOption  =  null;  }	          tokens.clear();    tokens.clear();    currentOption    =    null;    	compilable	  [FE]  UnrecognizedOptionException  	66	1	replace
383	[BUG]  [BUGGY]  null.clear();  tokens.clear();  currentOption  =  null;  [CE]  <null>  cannot  be  dereferenced  [FE]      UnrecognizedOptionException    [CONTEXT]      private  void  init()  {  eatTheRest  =  false;  tokens.clear();      [BUGGY]  null.clear();  tokens.clear();  currentOption  =  null;  [BUGGY]      currentOption  =  null;  }  [CLASS]  PosixParser  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  ArrayList  tokens  Options  options  Option  currentOption  boolean  eatTheRest  	projects/Cli2/src/java/org/apache/commons/cli/PosixParser.java	1.0	53	53	1	replace	null.clear();  tokens.clear();  currentOption  =  null;	          tokens.clear();    tokens.clear();    currentOption    =    null;    	non-compiled	[CE]  <null>  cannot  be  dereferenced	66	None	replace
384	[BUG]  [BUGGY]  if(!eatTheRest)  {  tokens.clear();  tokens.clear();  currentOption  =  null;  }  else  {  options.setOption(null);  }  [CE]  cannot  find  symbol  [FE]        UnrecognizedOptionException    [CONTEXT]      private  void  init()  {  eatTheRest  =  false;  tokens.clear();      [BUGGY]  if(!eatTheRest)  {  tokens.clear();  tokens.clear();  currentOption  =  null;  }  else  {  options.setOption(null);  }  [BUGGY]      currentOption  =  null;  }  [CLASS]  PosixParser  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  ArrayList  tokens  Options  options  Option  currentOption  boolean  eatTheRest  	projects/Cli2/src/java/org/apache/commons/cli/PosixParser.java	1.0	53	53	1	replace	if(!eatTheRest)  {  tokens.clear();  tokens.clear();  currentOption  =  null;  }  else  {  options.setOption(null);  }	          tokens.clear();    tokens.clear();    currentOption    =    null;    	non-compiled	[CE]  cannot  find  symbol	66	None	replace
385	[BUG]  [BUGGY]  tokens.clear();  currentOption  =  new  ArrayList  <  Option>(tokens.size());  [CE]  incompatible  types  [FE]          UnrecognizedOptionException      [CONTEXT]      private  void  init()  {  eatTheRest  =  false;  tokens.clear();      [BUGGY]  tokens.clear();  currentOption  =  new  ArrayList  <  Option>(tokens.size());  [BUGGY]      currentOption  =  null;  }  [CLASS]  PosixParser  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  ArrayList  tokens  Options  options  Option  currentOption  boolean  eatTheRest  	projects/Cli2/src/java/org/apache/commons/cli/PosixParser.java	1.0	53	53	1	replace	tokens.clear();  currentOption  =  new  ArrayList  <  Option>(tokens.size());	          tokens.clear();    currentOption    =    null;    ArrayList    <    Option>    tokens    =    new    ArrayList    <    Option>(tokens.size());    	non-compiled	[CE]  incompatible  types	54	None	replace
386	[BUG]  [BUGGY]  Option  currentOption  =  options.getOption(tokens,  eatTheRest);  [CE]  method  getOption  in  class  Options  cannot  be  applied  to  given  types;  [FE]                    UnrecognizedOptionException      [CONTEXT]      private  void  init()  {  eatTheRest  =  false;  tokens.clear();      [BUGGY]  Option  currentOption  =  options.getOption(tokens,  eatTheRest);  [BUGGY]      currentOption  =  null;  }  [CLASS]  PosixParser  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  ArrayList  tokens  Options  options  Option  currentOption  boolean  eatTheRest  	projects/Cli2/src/java/org/apache/commons/cli/PosixParser.java	1.0	53	53	1	replace	Option  currentOption  =  options.getOption(tokens,  eatTheRest);	  Option    currentOption    =    options.getOption(tokens);    	non-compiled	[CE]  method  getOption  in  class  Options  cannot  be  applied  to  given  types;	69	None	replace
387	[BUG]  [BUGGY]  Option  currentOption  =  options.getOption(tokens,  false);  [CE]  method  getOption  in  class  Options  cannot  be  applied  to  given  types;  [FE]                      UnrecognizedOptionException      [CONTEXT]      private  void  init()  {  eatTheRest  =  false;  tokens.clear();      [BUGGY]  Option  currentOption  =  options.getOption(tokens,  false);  [BUGGY]      currentOption  =  null;  }  [CLASS]  PosixParser  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  ArrayList  tokens  Options  options  Option  currentOption  boolean  eatTheRest  	projects/Cli2/src/java/org/apache/commons/cli/PosixParser.java	1.0	53	53	1	replace	Option  currentOption  =  options.getOption(tokens,  false);	  Option    currentOption    =    options.getOption(tokens);    	non-compiled	[CE]  method  getOption  in  class  Options  cannot  be  applied  to  given  types;	69	None	replace
388	[BUG]  [BUGGY]  Option  currentOption  =  options.getOption(tokens,  tokens.size());  [CE]  method  getOption  in  class  Options  cannot  be  applied  to  given  types;  [FE]                        UnrecognizedOptionException      [CONTEXT]      private  void  init()  {  eatTheRest  =  false;  tokens.clear();      [BUGGY]  Option  currentOption  =  options.getOption(tokens,  tokens.size());  [BUGGY]      currentOption  =  null;  }  [CLASS]  PosixParser  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  ArrayList  tokens  Options  options  Option  currentOption  boolean  eatTheRest  	projects/Cli2/src/java/org/apache/commons/cli/PosixParser.java	1.0	53	53	1	replace	Option  currentOption  =  options.getOption(tokens,  tokens.size());	  Option    currentOption    =    options.getOption(tokens);    	non-compiled	[CE]  method  getOption  in  class  Options  cannot  be  applied  to  given  types;	69	None	replace
389	[BUG]  [BUGGY]  [FE]  UnrecognizedOptionException  [FE]    UnrecognizedOptionException    [CONTEXT]      private  void  init()  {  eatTheRest  =  false;  tokens.clear();      [BUGGY]  currentOption  =  Option.OK_STANDARD  /  1;  [BUGGY]      }  [CLASS]  PosixParser  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  ArrayList  tokens  Options  options  Option  currentOption  boolean  eatTheRest  	projects/Cli2/src/java/org/apache/commons/cli/PosixParser.java	1.0	53	53	1	add	currentOption  =  Option.OK_STANDARD  /  1;	  currentOption    =    Option.OK_STANDARD    +    1;    	compilable	  [FE]  UnrecognizedOptionException  	17	1	replace
390	[BUG]  [BUGGY]  currentOption  =  Option.OK_STANDARD  /  1;  [FE]  UnrecognizedOptionException  [FE]    UnrecognizedOptionException    [CONTEXT]      private  void  init()  {  eatTheRest  =  false;  tokens.clear();      [BUGGY]  currentOption  =  Option.OK_STANDARD  /  1;  [BUGGY]      }  [CLASS]  PosixParser  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  ArrayList  tokens  Options  options  Option  currentOption  boolean  eatTheRest  	projects/Cli2/src/java/org/apache/commons/cli/PosixParser.java	1.0	53	53	1	replace	currentOption  =  Option.OK_STANDARD  /  1;	  currentOption    =    Option.OK_STANDARD    +    1;    	compilable	  [FE]  UnrecognizedOptionException  	17	1	replace
391	[BUG]  [BUGGY]  [FE]  UnrecognizedOptionException  [FE]      UnrecognizedOptionException    [CONTEXT]      private  void  init()  {  eatTheRest  =  false;  tokens.clear();      [BUGGY]  currentOption  =  Option.OK_STANDARD  -  1;  [BUGGY]      }  [CLASS]  PosixParser  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  ArrayList  tokens  Options  options  Option  currentOption  boolean  eatTheRest  	projects/Cli2/src/java/org/apache/commons/cli/PosixParser.java	1.0	53	53	1	add	currentOption  =  Option.OK_STANDARD  -  1;	  currentOption    =    Option.OK_STANDARD    +    1;    	compilable	  [FE]  UnrecognizedOptionException  	17	1	replace
392	[BUG]  [BUGGY]  currentOption  =  Option.OK_STANDARD  -  1;  [FE]  UnrecognizedOptionException  [FE]      UnrecognizedOptionException    [CONTEXT]      private  void  init()  {  eatTheRest  =  false;  tokens.clear();      [BUGGY]  currentOption  =  Option.OK_STANDARD  -  1;  [BUGGY]      }  [CLASS]  PosixParser  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  ArrayList  tokens  Options  options  Option  currentOption  boolean  eatTheRest  	projects/Cli2/src/java/org/apache/commons/cli/PosixParser.java	1.0	53	53	1	replace	currentOption  =  Option.OK_STANDARD  -  1;	  currentOption    =    Option.OK_STANDARD    +    1;    	compilable	  [FE]  UnrecognizedOptionException  	17	1	replace
393	[BUG]  [BUGGY]  [FE]  UnrecognizedOptionException  [FE]    UnrecognizedOptionException    [CONTEXT]      private  void  init()  {  eatTheRest  =  false;  tokens.clear();      [BUGGY]  if(!eatTheRest)  {  tokens.clear();  currentOption  =  null;  }  if(!eatTheRest)  {  tokens.clear();  currentOption  =  null;  }  [BUGGY]      currentOption  =  null;  }  [CLASS]  PosixParser  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  ArrayList  tokens  Options  options  Option  currentOption  boolean  eatTheRest  	projects/Cli2/src/java/org/apache/commons/cli/PosixParser.java	1.0	53	53	1	add	if(!eatTheRest)    {    tokens.clear();    currentOption    =    null;    }    if(!eatTheRest)  {  tokens.clear();  currentOption  =  null;  }	  	compilable	  [FE]  UnrecognizedOptionException  	10	1	add
394	[BUG]  [BUGGY]  if(!eatTheRest)  {  tokens.clear();  currentOption  =  null;  }  if(!eatTheRest)  {  tokens.clear();  currentOption  =  null;  }  [FE]  UnrecognizedOptionException  [FE]    UnrecognizedOptionException    [CONTEXT]      private  void  init()  {  eatTheRest  =  false;  tokens.clear();      [BUGGY]  if(!eatTheRest)  {  tokens.clear();  currentOption  =  null;  }  if(!eatTheRest)  {  tokens.clear();  currentOption  =  null;  }  [BUGGY]      currentOption  =  null;  }  [CLASS]  PosixParser  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  ArrayList  tokens  Options  options  Option  currentOption  boolean  eatTheRest  	projects/Cli2/src/java/org/apache/commons/cli/PosixParser.java	1.0	53	53	1	replace	if(!eatTheRest)    {    tokens.clear();    currentOption    =    null;    }    if(!eatTheRest)  {  tokens.clear();  currentOption  =  null;  }	  	compilable	  [FE]  UnrecognizedOptionException  	10	1	add
395	[BUG]  [BUGGY]  if(!eatTheRest)  {  tokens.clear();  currentOption  =  null;  }  if(!eattheRest)  {  tokens.clear();  currentOption  =  null;  }  [CE]  cannot  find  symbol  eattheRest  [FE]      UnrecognizedOptionException    [CONTEXT]      private  void  init()  {  eatTheRest  =  false;  tokens.clear();      [BUGGY]  if(!eatTheRest)  {  tokens.clear();  currentOption  =  null;  }  if(!eattheRest)  {  tokens.clear();  currentOption  =  null;  }  [BUGGY]      currentOption  =  null;  }  [CLASS]  PosixParser  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  ArrayList  tokens  Options  options  Option  currentOption  boolean  eatTheRest  	projects/Cli2/src/java/org/apache/commons/cli/PosixParser.java	1.0	53	53	1	replace	if(!eatTheRest)    {    tokens.clear();    currentOption    =    null;    }    if(!eattheRest)  {  tokens.clear();  currentOption  =  null;  }	  	non-compiled	[CE]  cannot  find  symbol  eattheRest	10	None	add
396	[BUG]  [BUGGY]  if(!eatTheRest)  {  tokens.clear();  currentOption  =  null;  }  If(!eatTheRest)  {  tokens.clear();  currentOption  =  null;  }  [CE]  ';'  expected  [FE]        UnrecognizedOptionException    [CONTEXT]      private  void  init()  {  eatTheRest  =  false;  tokens.clear();      [BUGGY]  if(!eatTheRest)  {  tokens.clear();  currentOption  =  null;  }  If(!eatTheRest)  {  tokens.clear();  currentOption  =  null;  }  [BUGGY]      currentOption  =  null;  }  [CLASS]  PosixParser  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  ArrayList  tokens  Options  options  Option  currentOption  boolean  eatTheRest  	projects/Cli2/src/java/org/apache/commons/cli/PosixParser.java	1.0	53	53	1	replace	if(!eatTheRest)    {    tokens.clear();    currentOption    =    null;    }    If(!eatTheRest)  {  tokens.clear();  currentOption  =  null;  }	  	non-compiled	[CE]  ';'  expected	10	None	add
397	[BUG]  [BUGGY]  ArrayList  tokens  =  new  ArrayList  <  Option>();  ArrayList  <  Option>  tokens  =  new  ArrayList  <  Option>();  [CE]  variable  tokens  is  already  defined  in  method  init()  [FE]    UnrecognizedOptionException    [CONTEXT]      private  void  init()  {  eatTheRest  =  false;  tokens.clear();      [BUGGY]  ArrayList  tokens  =  new  ArrayList  <  Option>();  ArrayList  <  Option>  tokens  =  new  ArrayList  <  Option>();  [BUGGY]      currentOption  =  null;  }  [CLASS]  PosixParser  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  ArrayList  tokens  Options  options  Option  currentOption  boolean  eatTheRest  	projects/Cli2/src/java/org/apache/commons/cli/PosixParser.java	1.0	53	53	1	replace	ArrayList    tokens    =    new    ArrayList    <    Option>();    ArrayList  <  Option>  tokens  =  new  ArrayList  <  Option>();	  	non-compiled	[CE]  variable  tokens  is  already  defined  in  method  init()	92	None	add
398	[BUG]  [BUGGY]  ArrayList  tokens  =  new  ArrayList  <  Option>();  List  <  Option>  tokens  =  new  ArrayList  <  Option>();  [CE]  cannot  find  symbol  [FE]      UnrecognizedOptionException    [CONTEXT]      private  void  init()  {  eatTheRest  =  false;  tokens.clear();      [BUGGY]  ArrayList  tokens  =  new  ArrayList  <  Option>();  List  <  Option>  tokens  =  new  ArrayList  <  Option>();  [BUGGY]      currentOption  =  null;  }  [CLASS]  PosixParser  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  ArrayList  tokens  Options  options  Option  currentOption  boolean  eatTheRest  	projects/Cli2/src/java/org/apache/commons/cli/PosixParser.java	1.0	53	53	1	replace	ArrayList    tokens    =    new    ArrayList    <    Option>();    List  <  Option>  tokens  =  new  ArrayList  <  Option>();	  	non-compiled	[CE]  cannot  find  symbol	92	None	add
399	[BUG]  [BUGGY]  ArrayList  tokens  =  new  ArrayList  <  Option>();  ArrayList  <  Option>  tokens  =  new  ArrayList  <  Option>();  currentOption  =  null;  [CE]  variable  tokens  is  already  defined  in  method  init()  [FE]        UnrecognizedOptionException    [CONTEXT]      private  void  init()  {  eatTheRest  =  false;  tokens.clear();      [BUGGY]  ArrayList  tokens  =  new  ArrayList  <  Option>();  ArrayList  <  Option>  tokens  =  new  ArrayList  <  Option>();  currentOption  =  null;  [BUGGY]      currentOption  =  null;  }  [CLASS]  PosixParser  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  ArrayList  tokens  Options  options  Option  currentOption  boolean  eatTheRest  	projects/Cli2/src/java/org/apache/commons/cli/PosixParser.java	1.0	53	53	1	replace	ArrayList    tokens    =    new    ArrayList    <    Option>();    ArrayList  <  Option>  tokens  =  new  ArrayList  <  Option>();  currentOption  =  null;	  	non-compiled	[CE]  variable  tokens  is  already  defined  in  method  init()	92	None	add
400	[BUG]  [BUGGY]  ArrayList  tokens  =  new  ArrayList  <  Option>();  ArrayList  <  Option>  tokens  =  new  ArrayList  <  Option>();  System.arraycopy(tokens,  0,  tokens,  0,  tokens.size());  [CE]  variable  tokens  is  already  defined  in  method  init()  [FE]          UnrecognizedOptionException    [CONTEXT]      private  void  init()  {  eatTheRest  =  false;  tokens.clear();      [BUGGY]  ArrayList  tokens  =  new  ArrayList  <  Option>();  ArrayList  <  Option>  tokens  =  new  ArrayList  <  Option>();  System.arraycopy(tokens,  0,  tokens,  0,  tokens.size());  [BUGGY]      currentOption  =  null;  }  [CLASS]  PosixParser  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  ArrayList  tokens  Options  options  Option  currentOption  boolean  eatTheRest  	projects/Cli2/src/java/org/apache/commons/cli/PosixParser.java	1.0	53	53	1	replace	ArrayList    tokens    =    new    ArrayList    <    Option>();    ArrayList  <  Option>  tokens  =  new  ArrayList  <  Option>();  System.arraycopy(tokens,  0,  tokens,  0,  tokens.size());	  	non-compiled	[CE]  variable  tokens  is  already  defined  in  method  init()	92	None	add
401	[BUG]  [BUGGY]  ArrayList  tokens  =  new  ArrayList  <  Option>();  ArrayList  <  Option>  tokens  =  new  ArrayList  <  Option>();  System.arraycopy(tokens,  0,  tokens,  0,  currentOption.size());  [CE]  variable  tokens  is  already  defined  in  method  init()  [FE]            UnrecognizedOptionException    [CONTEXT]      private  void  init()  {  eatTheRest  =  false;  tokens.clear();      [BUGGY]  ArrayList  tokens  =  new  ArrayList  <  Option>();  ArrayList  <  Option>  tokens  =  new  ArrayList  <  Option>();  System.arraycopy(tokens,  0,  tokens,  0,  currentOption.size());  [BUGGY]      currentOption  =  null;  }  [CLASS]  PosixParser  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  ArrayList  tokens  Options  options  Option  currentOption  boolean  eatTheRest  	projects/Cli2/src/java/org/apache/commons/cli/PosixParser.java	1.0	53	53	1	replace	ArrayList    tokens    =    new    ArrayList    <    Option>();    ArrayList  <  Option>  tokens  =  new  ArrayList  <  Option>();  System.arraycopy(tokens,  0,  tokens,  0,  currentOption.size());	  	non-compiled	[CE]  variable  tokens  is  already  defined  in  method  init()	92	None	add
402	[BUG]  [BUGGY]  currentOption  =  tokens.options;  [CE]  cannot  find  symbol  options  [FE]                UnrecognizedOptionException      [CONTEXT]      private  void  init()  {  eatTheRest  =  false;  tokens.clear();      [BUGGY]  currentOption  =  tokens.options;  [BUGGY]      }  [CLASS]  PosixParser  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  ArrayList  tokens  Options  options  Option  currentOption  boolean  eatTheRest  	projects/Cli2/src/java/org/apache/commons/cli/PosixParser.java	1.0	53	53	1	replace	currentOption  =  tokens.options;	  currentOption    =    options.options;    	non-compiled	[CE]  cannot  find  symbol  options	30	None	replace
403	[BUG]  [BUGGY]  currentOption  =  Options.options;  [CE]  cannot  find  symbol  options  [FE]                  UnrecognizedOptionException      [CONTEXT]      private  void  init()  {  eatTheRest  =  false;  tokens.clear();      [BUGGY]  currentOption  =  Options.options;  [BUGGY]      }  [CLASS]  PosixParser  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  ArrayList  tokens  Options  options  Option  currentOption  boolean  eatTheRest  	projects/Cli2/src/java/org/apache/commons/cli/PosixParser.java	1.0	53	53	1	replace	currentOption  =  Options.options;	  currentOption    =    options.options;    	non-compiled	[CE]  cannot  find  symbol  options	30	None	replace
404	[BUG]  [BUGGY]  [FE]  UnrecognizedOptionException  [FE]    UnrecognizedOptionException    [CONTEXT]      private  void  init()  {  eatTheRest  =  false;  tokens.clear();      [BUGGY]          tokens.clear();    currentOption    =    null;    ArrayList  <  Option>  tokens  =  new  ArrayList  <  Option>();  currentOption  =  null;  tokens.clear();  currentOption  =  null;  [BUGGY]      currentOption  =  null;  }  [CLASS]  PosixParser  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  ArrayList  tokens  Options  options  Option  currentOption  boolean  eatTheRest  	projects/Cli2/src/java/org/apache/commons/cli/PosixParser.java	1.0	53	53	1	add	                tokens.clear();        currentOption        =        null;        ArrayList    <    Option>    tokens    =    new    ArrayList    <    Option>();    currentOption    =    null;    tokens.clear();  currentOption  =  null;	  	compilable	  [FE]  UnrecognizedOptionException  	57	1	add
405	[BUG]  [BUGGY]          tokens.clear();    currentOption    =    null;    ArrayList  <  Option>  tokens  =  new  ArrayList  <  Option>();  currentOption  =  null;  tokens.clear();  currentOption  =  null;  [FE]  UnrecognizedOptionException  [FE]    UnrecognizedOptionException    [CONTEXT]      private  void  init()  {  eatTheRest  =  false;  tokens.clear();      [BUGGY]          tokens.clear();    currentOption    =    null;    ArrayList  <  Option>  tokens  =  new  ArrayList  <  Option>();  currentOption  =  null;  tokens.clear();  currentOption  =  null;  [BUGGY]      currentOption  =  null;  }  [CLASS]  PosixParser  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  ArrayList  tokens  Options  options  Option  currentOption  boolean  eatTheRest  	projects/Cli2/src/java/org/apache/commons/cli/PosixParser.java	1.0	53	53	1	replace	                tokens.clear();        currentOption        =        null;        ArrayList    <    Option>    tokens    =    new    ArrayList    <    Option>();    currentOption    =    null;    tokens.clear();  currentOption  =  null;	  	compilable	  [FE]  UnrecognizedOptionException  	57	1	add
406	[BUG]  [BUGGY]  [FE]  UnrecognizedOptionException  [FE]      UnrecognizedOptionException    [CONTEXT]      private  void  init()  {  eatTheRest  =  false;  tokens.clear();      [BUGGY]          tokens.clear();    currentOption    =    null;    ArrayList  <  Option>  tokens  =  new  ArrayList  <  Option>();  currentOption  =  null;  tokens.clear();  [BUGGY]      currentOption  =  null;  }  [CLASS]  PosixParser  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  ArrayList  tokens  Options  options  Option  currentOption  boolean  eatTheRest  	projects/Cli2/src/java/org/apache/commons/cli/PosixParser.java	1.0	53	53	1	add	                tokens.clear();        currentOption        =        null;        ArrayList    <    Option>    tokens    =    new    ArrayList    <    Option>();    currentOption    =    null;    tokens.clear();	  	compilable	  [FE]  UnrecognizedOptionException  	57	1	add
407	[BUG]  [BUGGY]          tokens.clear();    currentOption    =    null;    ArrayList  <  Option>  tokens  =  new  ArrayList  <  Option>();  currentOption  =  null;  tokens.clear();  [FE]  UnrecognizedOptionException  [FE]      UnrecognizedOptionException    [CONTEXT]      private  void  init()  {  eatTheRest  =  false;  tokens.clear();      [BUGGY]          tokens.clear();    currentOption    =    null;    ArrayList  <  Option>  tokens  =  new  ArrayList  <  Option>();  currentOption  =  null;  tokens.clear();  [BUGGY]      currentOption  =  null;  }  [CLASS]  PosixParser  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  ArrayList  tokens  Options  options  Option  currentOption  boolean  eatTheRest  	projects/Cli2/src/java/org/apache/commons/cli/PosixParser.java	1.0	53	53	1	replace	                tokens.clear();        currentOption        =        null;        ArrayList    <    Option>    tokens    =    new    ArrayList    <    Option>();    currentOption    =    null;    tokens.clear();	  	compilable	  [FE]  UnrecognizedOptionException  	57	1	add
408	[BUG]  [BUGGY]          tokens.clear();    currentOption    =    null;    ArrayList  <  Option>  tokens  =  new  ArrayList  <  Option>();  currentOption  =  null;  ArrayList  <  Option>  tokens  =  new  ArrayList  <  Option>();  currentOption  =  null;  [CE]  variable  tokens  is  already  defined  in  method  init()  [FE]        UnrecognizedOptionException    [CONTEXT]      private  void  init()  {  eatTheRest  =  false;  tokens.clear();      [BUGGY]          tokens.clear();    currentOption    =    null;    ArrayList  <  Option>  tokens  =  new  ArrayList  <  Option>();  currentOption  =  null;  ArrayList  <  Option>  tokens  =  new  ArrayList  <  Option>();  currentOption  =  null;  [BUGGY]      currentOption  =  null;  }  [CLASS]  PosixParser  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  ArrayList  tokens  Options  options  Option  currentOption  boolean  eatTheRest  	projects/Cli2/src/java/org/apache/commons/cli/PosixParser.java	1.0	53	53	1	replace	                tokens.clear();        currentOption        =        null;        ArrayList    <    Option>    tokens    =    new    ArrayList    <    Option>();    currentOption    =    null;    ArrayList  <  Option>  tokens  =  new  ArrayList  <  Option>();  currentOption  =  null;	  	non-compiled	[CE]  variable  tokens  is  already  defined  in  method  init()	57	None	add
409	[BUG]  [BUGGY]          tokens.clear();    currentOption    =    null;    ArrayList  <  Option>  tokens  =  new  ArrayList  <  Option>();  currentOption  =  null;  ArrayList  <  Option>  tokens  =  new  ArrayList  <  Option>();  [CE]  variable  tokens  is  already  defined  in  method  init()  [FE]          UnrecognizedOptionException    [CONTEXT]      private  void  init()  {  eatTheRest  =  false;  tokens.clear();      [BUGGY]          tokens.clear();    currentOption    =    null;    ArrayList  <  Option>  tokens  =  new  ArrayList  <  Option>();  currentOption  =  null;  ArrayList  <  Option>  tokens  =  new  ArrayList  <  Option>();  [BUGGY]      currentOption  =  null;  }  [CLASS]  PosixParser  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  ArrayList  tokens  Options  options  Option  currentOption  boolean  eatTheRest  	projects/Cli2/src/java/org/apache/commons/cli/PosixParser.java	1.0	53	53	1	replace	                tokens.clear();        currentOption        =        null;        ArrayList    <    Option>    tokens    =    new    ArrayList    <    Option>();    currentOption    =    null;    ArrayList  <  Option>  tokens  =  new  ArrayList  <  Option>();	  	non-compiled	[CE]  variable  tokens  is  already  defined  in  method  init()	57	None	add
410	[BUG]  [BUGGY]  [FE]  UnrecognizedOptionException  [FE]            UnrecognizedOptionException    [CONTEXT]      private  void  init()  {  eatTheRest  =  false;  tokens.clear();      [BUGGY]          tokens.clear();    currentOption    =    null;    ArrayList  <  Option>  tokens  =  new  ArrayList  <  Option>();  currentOption  =  null;  if(!eatTheRest)  {  tokens.clear();  currentOption  =  null;  }  [BUGGY]      currentOption  =  null;  }  [CLASS]  PosixParser  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  ArrayList  tokens  Options  options  Option  currentOption  boolean  eatTheRest  	projects/Cli2/src/java/org/apache/commons/cli/PosixParser.java	1.0	53	53	1	add	                tokens.clear();        currentOption        =        null;        ArrayList    <    Option>    tokens    =    new    ArrayList    <    Option>();    currentOption    =    null;    if(!eatTheRest)  {  tokens.clear();  currentOption  =  null;  }	  	compilable	  [FE]  UnrecognizedOptionException  	57	1	add
411	[BUG]  [BUGGY]          tokens.clear();    currentOption    =    null;    ArrayList  <  Option>  tokens  =  new  ArrayList  <  Option>();  currentOption  =  null;  if(!eatTheRest)  {  tokens.clear();  currentOption  =  null;  }  [FE]  UnrecognizedOptionException  [FE]            UnrecognizedOptionException    [CONTEXT]      private  void  init()  {  eatTheRest  =  false;  tokens.clear();      [BUGGY]          tokens.clear();    currentOption    =    null;    ArrayList  <  Option>  tokens  =  new  ArrayList  <  Option>();  currentOption  =  null;  if(!eatTheRest)  {  tokens.clear();  currentOption  =  null;  }  [BUGGY]      currentOption  =  null;  }  [CLASS]  PosixParser  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  ArrayList  tokens  Options  options  Option  currentOption  boolean  eatTheRest  	projects/Cli2/src/java/org/apache/commons/cli/PosixParser.java	1.0	53	53	1	replace	                tokens.clear();        currentOption        =        null;        ArrayList    <    Option>    tokens    =    new    ArrayList    <    Option>();    currentOption    =    null;    if(!eatTheRest)  {  tokens.clear();  currentOption  =  null;  }	  	compilable	  [FE]  UnrecognizedOptionException  	57	1	add
412	[BUG]  [BUGGY]  [FE]  UnrecognizedOptionException  [FE]    UnrecognizedOptionException    [CONTEXT]      private  void  init()  {  eatTheRest  =  false;  tokens.clear();      [BUGGY]          tokens.clear();    tokens.clear();  tokens.clear();  tokens.clear();  [BUGGY]      currentOption  =  null;  }  [CLASS]  PosixParser  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  ArrayList  tokens  Options  options  Option  currentOption  boolean  eatTheRest  	projects/Cli2/src/java/org/apache/commons/cli/PosixParser.java	1.0	53	53	1	add	                tokens.clear();        tokens.clear();    tokens.clear();  tokens.clear();	  	compilable	  [FE]  UnrecognizedOptionException  	59	1	add
413	[BUG]  [BUGGY]          tokens.clear();    tokens.clear();  tokens.clear();  tokens.clear();  [FE]  UnrecognizedOptionException  [FE]    UnrecognizedOptionException    [CONTEXT]      private  void  init()  {  eatTheRest  =  false;  tokens.clear();      [BUGGY]          tokens.clear();    tokens.clear();  tokens.clear();  tokens.clear();  [BUGGY]      currentOption  =  null;  }  [CLASS]  PosixParser  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  ArrayList  tokens  Options  options  Option  currentOption  boolean  eatTheRest  	projects/Cli2/src/java/org/apache/commons/cli/PosixParser.java	1.0	53	53	1	replace	                tokens.clear();        tokens.clear();    tokens.clear();  tokens.clear();	  	compilable	  [FE]  UnrecognizedOptionException  	59	1	add
414	[BUG]  [BUGGY]  [FE]  UnrecognizedOptionException  [FE]      UnrecognizedOptionException    [CONTEXT]      private  void  init()  {  eatTheRest  =  false;  tokens.clear();      [BUGGY]          tokens.clear();    tokens.clear();  if(currentOption!=  null)  {  tokens.clear();  tokens.clear();  }  [BUGGY]      currentOption  =  null;  }  [CLASS]  PosixParser  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  ArrayList  tokens  Options  options  Option  currentOption  boolean  eatTheRest  	projects/Cli2/src/java/org/apache/commons/cli/PosixParser.java	1.0	53	53	1	add	                tokens.clear();        tokens.clear();    if(currentOption!=  null)  {  tokens.clear();  tokens.clear();  }	  	compilable	  [FE]  UnrecognizedOptionException  	59	1	add
415	[BUG]  [BUGGY]          tokens.clear();    tokens.clear();  if(currentOption!=  null)  {  tokens.clear();  tokens.clear();  }  [FE]  UnrecognizedOptionException  [FE]      UnrecognizedOptionException    [CONTEXT]      private  void  init()  {  eatTheRest  =  false;  tokens.clear();      [BUGGY]          tokens.clear();    tokens.clear();  if(currentOption!=  null)  {  tokens.clear();  tokens.clear();  }  [BUGGY]      currentOption  =  null;  }  [CLASS]  PosixParser  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  ArrayList  tokens  Options  options  Option  currentOption  boolean  eatTheRest  	projects/Cli2/src/java/org/apache/commons/cli/PosixParser.java	1.0	53	53	1	replace	                tokens.clear();        tokens.clear();    if(currentOption!=  null)  {  tokens.clear();  tokens.clear();  }	  	compilable	  [FE]  UnrecognizedOptionException  	59	1	add
416	[BUG]  [BUGGY]  [FE]  UnrecognizedOptionException  [FE]        UnrecognizedOptionException    [CONTEXT]      private  void  init()  {  eatTheRest  =  false;  tokens.clear();      [BUGGY]          tokens.clear();    tokens.clear();  if(!eatTheRest)  {  tokens.clear();  tokens.clear();  }  [BUGGY]      currentOption  =  null;  }  [CLASS]  PosixParser  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  ArrayList  tokens  Options  options  Option  currentOption  boolean  eatTheRest  	projects/Cli2/src/java/org/apache/commons/cli/PosixParser.java	1.0	53	53	1	add	                tokens.clear();        tokens.clear();    if(!eatTheRest)  {  tokens.clear();  tokens.clear();  }	  	compilable	  [FE]  UnrecognizedOptionException  	59	1	add
417	[BUG]  [BUGGY]          tokens.clear();    tokens.clear();  if(!eatTheRest)  {  tokens.clear();  tokens.clear();  }  [FE]  UnrecognizedOptionException  [FE]        UnrecognizedOptionException    [CONTEXT]      private  void  init()  {  eatTheRest  =  false;  tokens.clear();      [BUGGY]          tokens.clear();    tokens.clear();  if(!eatTheRest)  {  tokens.clear();  tokens.clear();  }  [BUGGY]      currentOption  =  null;  }  [CLASS]  PosixParser  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  ArrayList  tokens  Options  options  Option  currentOption  boolean  eatTheRest  	projects/Cli2/src/java/org/apache/commons/cli/PosixParser.java	1.0	53	53	1	replace	                tokens.clear();        tokens.clear();    if(!eatTheRest)  {  tokens.clear();  tokens.clear();  }	  	compilable	  [FE]  UnrecognizedOptionException  	59	1	add
418	[BUG]  [BUGGY]  [FE]  UnrecognizedOptionException  [FE]          UnrecognizedOptionException    [CONTEXT]      private  void  init()  {  eatTheRest  =  false;  tokens.clear();      [BUGGY]          tokens.clear();    tokens.clear();  tokens.clear();  tokens.clear();  currentOption  =  null;  [BUGGY]      currentOption  =  null;  }  [CLASS]  PosixParser  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  ArrayList  tokens  Options  options  Option  currentOption  boolean  eatTheRest  	projects/Cli2/src/java/org/apache/commons/cli/PosixParser.java	1.0	53	53	1	add	                tokens.clear();        tokens.clear();    tokens.clear();  tokens.clear();  currentOption  =  null;	  	compilable	  [FE]  UnrecognizedOptionException  	59	1	add
419	[BUG]  [BUGGY]          tokens.clear();    tokens.clear();  tokens.clear();  tokens.clear();  currentOption  =  null;  [FE]  UnrecognizedOptionException  [FE]          UnrecognizedOptionException    [CONTEXT]      private  void  init()  {  eatTheRest  =  false;  tokens.clear();      [BUGGY]          tokens.clear();    tokens.clear();  tokens.clear();  tokens.clear();  currentOption  =  null;  [BUGGY]      currentOption  =  null;  }  [CLASS]  PosixParser  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  ArrayList  tokens  Options  options  Option  currentOption  boolean  eatTheRest  	projects/Cli2/src/java/org/apache/commons/cli/PosixParser.java	1.0	53	53	1	replace	                tokens.clear();        tokens.clear();    tokens.clear();  tokens.clear();  currentOption  =  null;	  	compilable	  [FE]  UnrecognizedOptionException  	59	1	add
420	[BUG]  [BUGGY]          tokens.clear();    tokens.clear();  ArrayList  <  Option>  tokens  =  new  ArrayList  <  Option>(tokens.size());  [CE]  variable  tokens  might  not  have  been  initialized  [FE]            UnrecognizedOptionException    [CONTEXT]      private  void  init()  {  eatTheRest  =  false;  tokens.clear();      [BUGGY]          tokens.clear();    tokens.clear();  ArrayList  <  Option>  tokens  =  new  ArrayList  <  Option>(tokens.size());  [BUGGY]      currentOption  =  null;  }  [CLASS]  PosixParser  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  ArrayList  tokens  Options  options  Option  currentOption  boolean  eatTheRest  	projects/Cli2/src/java/org/apache/commons/cli/PosixParser.java	1.0	53	53	1	replace	                tokens.clear();        tokens.clear();    ArrayList  <  Option>  tokens  =  new  ArrayList  <  Option>(tokens.size());	  	non-compiled	[CE]  variable  tokens  might  not  have  been  initialized	59	None	add
421	[BUG]  [BUGGY]  [FE]  UnrecognizedOptionException  [FE]    UnrecognizedOptionException    [CONTEXT]      private  void  init()  {  eatTheRest  =  false;  tokens.clear();      [BUGGY]          eatTheRest    =    false;    tokens.clear();    eatTheRest  =  false;  tokens.clear();  this.currentOption  =  null;  eatTheRest  =  false;  tokens.clear();  eatTheRest  =  false;  [BUGGY]      currentOption  =  null;  }  [CLASS]  PosixParser  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  ArrayList  tokens  Options  options  Option  currentOption  boolean  eatTheRest  	projects/Cli2/src/java/org/apache/commons/cli/PosixParser.java	1.0	53	53	1	add	                eatTheRest        =        false;        tokens.clear();        eatTheRest    =    false;    tokens.clear();    this.currentOption    =    null;    eatTheRest  =  false;  tokens.clear();  eatTheRest  =  false;	  	compilable	  [FE]  UnrecognizedOptionException  	8	1	add
422	[BUG]  [BUGGY]          eatTheRest    =    false;    tokens.clear();    eatTheRest  =  false;  tokens.clear();  this.currentOption  =  null;  eatTheRest  =  false;  tokens.clear();  eatTheRest  =  false;  [FE]  UnrecognizedOptionException  [FE]    UnrecognizedOptionException    [CONTEXT]      private  void  init()  {  eatTheRest  =  false;  tokens.clear();      [BUGGY]          eatTheRest    =    false;    tokens.clear();    eatTheRest  =  false;  tokens.clear();  this.currentOption  =  null;  eatTheRest  =  false;  tokens.clear();  eatTheRest  =  false;  [BUGGY]      currentOption  =  null;  }  [CLASS]  PosixParser  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  ArrayList  tokens  Options  options  Option  currentOption  boolean  eatTheRest  	projects/Cli2/src/java/org/apache/commons/cli/PosixParser.java	1.0	53	53	1	replace	                eatTheRest        =        false;        tokens.clear();        eatTheRest    =    false;    tokens.clear();    this.currentOption    =    null;    eatTheRest  =  false;  tokens.clear();  eatTheRest  =  false;	  	compilable	  [FE]  UnrecognizedOptionException  	8	1	add
423	[BUG]  [BUGGY]  [FE]  UnrecognizedOptionException  [FE]      UnrecognizedOptionException    [CONTEXT]      private  void  init()  {  eatTheRest  =  false;  tokens.clear();      [BUGGY]          eatTheRest    =    false;    tokens.clear();    eatTheRest  =  false;  tokens.clear();  this.currentOption  =  null;  eatTheRest  =  false;  tokens.clear();  eatTheRest  =  false;  tokens.clear();  this.currentOption  =  null;  [BUGGY]      currentOption  =  null;  }  [CLASS]  PosixParser  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  ArrayList  tokens  Options  options  Option  currentOption  boolean  eatTheRest  	projects/Cli2/src/java/org/apache/commons/cli/PosixParser.java	1.0	53	53	1	add	                eatTheRest        =        false;        tokens.clear();        eatTheRest    =    false;    tokens.clear();    this.currentOption    =    null;    eatTheRest  =  false;  tokens.clear();  eatTheRest  =  false;  tokens.clear();  this.currentOption  =  null;	  	compilable	  [FE]  UnrecognizedOptionException  	8	1	add
424	[BUG]  [BUGGY]          eatTheRest    =    false;    tokens.clear();    eatTheRest  =  false;  tokens.clear();  this.currentOption  =  null;  eatTheRest  =  false;  tokens.clear();  eatTheRest  =  false;  tokens.clear();  this.currentOption  =  null;  [FE]  UnrecognizedOptionException  [FE]      UnrecognizedOptionException    [CONTEXT]      private  void  init()  {  eatTheRest  =  false;  tokens.clear();      [BUGGY]          eatTheRest    =    false;    tokens.clear();    eatTheRest  =  false;  tokens.clear();  this.currentOption  =  null;  eatTheRest  =  false;  tokens.clear();  eatTheRest  =  false;  tokens.clear();  this.currentOption  =  null;  [BUGGY]      currentOption  =  null;  }  [CLASS]  PosixParser  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  ArrayList  tokens  Options  options  Option  currentOption  boolean  eatTheRest  	projects/Cli2/src/java/org/apache/commons/cli/PosixParser.java	1.0	53	53	1	replace	                eatTheRest        =        false;        tokens.clear();        eatTheRest    =    false;    tokens.clear();    this.currentOption    =    null;    eatTheRest  =  false;  tokens.clear();  eatTheRest  =  false;  tokens.clear();  this.currentOption  =  null;	  	compilable	  [FE]  UnrecognizedOptionException  	8	1	add
425	[BUG]  [BUGGY]  [FE]  UnrecognizedOptionException  [FE]        UnrecognizedOptionException    [CONTEXT]      private  void  init()  {  eatTheRest  =  false;  tokens.clear();      [BUGGY]          eatTheRest    =    false;    tokens.clear();    eatTheRest  =  false;  tokens.clear();  this.currentOption  =  null;  eatTheRest  =  false;  tokens.clear();  [BUGGY]      currentOption  =  null;  }  [CLASS]  PosixParser  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  ArrayList  tokens  Options  options  Option  currentOption  boolean  eatTheRest  	projects/Cli2/src/java/org/apache/commons/cli/PosixParser.java	1.0	53	53	1	add	                eatTheRest        =        false;        tokens.clear();        eatTheRest    =    false;    tokens.clear();    this.currentOption    =    null;    eatTheRest  =  false;  tokens.clear();	  	compilable	  [FE]  UnrecognizedOptionException  	8	1	add
426	[BUG]  [BUGGY]          eatTheRest    =    false;    tokens.clear();    eatTheRest  =  false;  tokens.clear();  this.currentOption  =  null;  eatTheRest  =  false;  tokens.clear();  [FE]  UnrecognizedOptionException  [FE]        UnrecognizedOptionException    [CONTEXT]      private  void  init()  {  eatTheRest  =  false;  tokens.clear();      [BUGGY]          eatTheRest    =    false;    tokens.clear();    eatTheRest  =  false;  tokens.clear();  this.currentOption  =  null;  eatTheRest  =  false;  tokens.clear();  [BUGGY]      currentOption  =  null;  }  [CLASS]  PosixParser  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  ArrayList  tokens  Options  options  Option  currentOption  boolean  eatTheRest  	projects/Cli2/src/java/org/apache/commons/cli/PosixParser.java	1.0	53	53	1	replace	                eatTheRest        =        false;        tokens.clear();        eatTheRest    =    false;    tokens.clear();    this.currentOption    =    null;    eatTheRest  =  false;  tokens.clear();	  	compilable	  [FE]  UnrecognizedOptionException  	8	1	add
427	[BUG]  [BUGGY]  [FE]  UnrecognizedOptionException  [FE]          UnrecognizedOptionException    [CONTEXT]      private  void  init()  {  eatTheRest  =  false;  tokens.clear();      [BUGGY]          eatTheRest    =    false;    tokens.clear();    eatTheRest  =  false;  tokens.clear();  this.currentOption  =  null;  eatTheRest  =  false;  tokens.clear();  eatTheRest  =  false;  this.currentOption  =  null;  [BUGGY]      currentOption  =  null;  }  [CLASS]  PosixParser  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  ArrayList  tokens  Options  options  Option  currentOption  boolean  eatTheRest  	projects/Cli2/src/java/org/apache/commons/cli/PosixParser.java	1.0	53	53	1	add	                eatTheRest        =        false;        tokens.clear();        eatTheRest    =    false;    tokens.clear();    this.currentOption    =    null;    eatTheRest  =  false;  tokens.clear();  eatTheRest  =  false;  this.currentOption  =  null;	  	compilable	  [FE]  UnrecognizedOptionException  	8	1	add
428	[BUG]  [BUGGY]          eatTheRest    =    false;    tokens.clear();    eatTheRest  =  false;  tokens.clear();  this.currentOption  =  null;  eatTheRest  =  false;  tokens.clear();  eatTheRest  =  false;  this.currentOption  =  null;  [FE]  UnrecognizedOptionException  [FE]          UnrecognizedOptionException    [CONTEXT]      private  void  init()  {  eatTheRest  =  false;  tokens.clear();      [BUGGY]          eatTheRest    =    false;    tokens.clear();    eatTheRest  =  false;  tokens.clear();  this.currentOption  =  null;  eatTheRest  =  false;  tokens.clear();  eatTheRest  =  false;  this.currentOption  =  null;  [BUGGY]      currentOption  =  null;  }  [CLASS]  PosixParser  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  ArrayList  tokens  Options  options  Option  currentOption  boolean  eatTheRest  	projects/Cli2/src/java/org/apache/commons/cli/PosixParser.java	1.0	53	53	1	replace	                eatTheRest        =        false;        tokens.clear();        eatTheRest    =    false;    tokens.clear();    this.currentOption    =    null;    eatTheRest  =  false;  tokens.clear();  eatTheRest  =  false;  this.currentOption  =  null;	  	compilable	  [FE]  UnrecognizedOptionException  	8	1	add
429	[BUG]  [BUGGY]  [FE]  UnrecognizedOptionException  [FE]            UnrecognizedOptionException    [CONTEXT]      private  void  init()  {  eatTheRest  =  false;  tokens.clear();      [BUGGY]          eatTheRest    =    false;    tokens.clear();    eatTheRest  =  false;  tokens.clear();  this.currentOption  =  null;  eatTheRest  =  false;  tokens.clear();  this.currentOption  =  null;  [BUGGY]      currentOption  =  null;  }  [CLASS]  PosixParser  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  ArrayList  tokens  Options  options  Option  currentOption  boolean  eatTheRest  	projects/Cli2/src/java/org/apache/commons/cli/PosixParser.java	1.0	53	53	1	add	                eatTheRest        =        false;        tokens.clear();        eatTheRest    =    false;    tokens.clear();    this.currentOption    =    null;    eatTheRest  =  false;  tokens.clear();  this.currentOption  =  null;	  	compilable	  [FE]  UnrecognizedOptionException  	8	1	add
430	[BUG]  [BUGGY]          eatTheRest    =    false;    tokens.clear();    eatTheRest  =  false;  tokens.clear();  this.currentOption  =  null;  eatTheRest  =  false;  tokens.clear();  this.currentOption  =  null;  [FE]  UnrecognizedOptionException  [FE]            UnrecognizedOptionException    [CONTEXT]      private  void  init()  {  eatTheRest  =  false;  tokens.clear();      [BUGGY]          eatTheRest    =    false;    tokens.clear();    eatTheRest  =  false;  tokens.clear();  this.currentOption  =  null;  eatTheRest  =  false;  tokens.clear();  this.currentOption  =  null;  [BUGGY]      currentOption  =  null;  }  [CLASS]  PosixParser  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  ArrayList  tokens  Options  options  Option  currentOption  boolean  eatTheRest  	projects/Cli2/src/java/org/apache/commons/cli/PosixParser.java	1.0	53	53	1	replace	                eatTheRest        =        false;        tokens.clear();        eatTheRest    =    false;    tokens.clear();    this.currentOption    =    null;    eatTheRest  =  false;  tokens.clear();  this.currentOption  =  null;	  	compilable	  [FE]  UnrecognizedOptionException  	8	1	add
431	[BUG]  [BUGGY]  currentOption  =  Option.UNKNOWN  &&  tokens.size()  >  1;  [CE]  cannot  find  symbol  UNKNOWN  [FE]              UnrecognizedOptionException      [CONTEXT]      private  void  init()  {  eatTheRest  =  false;  tokens.clear();      [BUGGY]  currentOption  =  Option.UNKNOWN  &&  tokens.size()  >  1;  [BUGGY]      }  [CLASS]  PosixParser  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  ArrayList  tokens  Options  options  Option  currentOption  boolean  eatTheRest  	projects/Cli2/src/java/org/apache/commons/cli/PosixParser.java	1.0	53	53	1	replace	currentOption  =  Option.UNKNOWN  &&  tokens.size()  >  1;	  currentOption    =    Option.UNKNOWN;    	non-compiled	[CE]  cannot  find  symbol  UNKNOWN	14	None	replace
432	[BUG]  [BUGGY]  currentOption  =  Option.UNKNOWN;  tokens.clear();  [CE]  cannot  find  symbol  UNKNOWN  [FE]                UnrecognizedOptionException      [CONTEXT]      private  void  init()  {  eatTheRest  =  false;  tokens.clear();      [BUGGY]  currentOption  =  Option.UNKNOWN;  tokens.clear();  [BUGGY]      }  [CLASS]  PosixParser  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  ArrayList  tokens  Options  options  Option  currentOption  boolean  eatTheRest  	projects/Cli2/src/java/org/apache/commons/cli/PosixParser.java	1.0	53	53	1	replace	currentOption  =  Option.UNKNOWN;  tokens.clear();	  currentOption    =    Option.UNKNOWN;    	non-compiled	[CE]  cannot  find  symbol  UNKNOWN	14	None	replace
433	[BUG]  [BUGGY]  [FE]  UnrecognizedOptionException  [FE]    UnrecognizedOptionException    [CONTEXT]      private  void  init()  {  eatTheRest  =  false;  tokens.clear();      [BUGGY]  currentOption    =    Option.OK_STANDARD;    if(currentOption!=  null)  {  currentOption  =  Option.OK_STANDARD;  }  tokens.clear();  [BUGGY]      }  [CLASS]  PosixParser  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  ArrayList  tokens  Options  options  Option  currentOption  boolean  eatTheRest  	projects/Cli2/src/java/org/apache/commons/cli/PosixParser.java	1.0	53	53	1	add	currentOption        =        Option.OK_STANDARD;        if(currentOption!=    null)    {    currentOption    =    Option.OK_STANDARD;    }    tokens.clear();	  	compilable	  [FE]  UnrecognizedOptionException  	85	1	add
434	[BUG]  [BUGGY]  currentOption    =    Option.OK_STANDARD;    if(currentOption!=  null)  {  currentOption  =  Option.OK_STANDARD;  }  tokens.clear();  [FE]  UnrecognizedOptionException  [FE]    UnrecognizedOptionException    [CONTEXT]      private  void  init()  {  eatTheRest  =  false;  tokens.clear();      [BUGGY]  currentOption    =    Option.OK_STANDARD;    if(currentOption!=  null)  {  currentOption  =  Option.OK_STANDARD;  }  tokens.clear();  [BUGGY]      }  [CLASS]  PosixParser  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  ArrayList  tokens  Options  options  Option  currentOption  boolean  eatTheRest  	projects/Cli2/src/java/org/apache/commons/cli/PosixParser.java	1.0	53	53	1	replace	currentOption        =        Option.OK_STANDARD;        if(currentOption!=    null)    {    currentOption    =    Option.OK_STANDARD;    }    tokens.clear();	  	compilable	  [FE]  UnrecognizedOptionException  	85	1	add
435	[BUG]  [BUGGY]  [FE]  UnrecognizedOptionException  [FE]      UnrecognizedOptionException    [CONTEXT]      private  void  init()  {  eatTheRest  =  false;  tokens.clear();      [BUGGY]  currentOption    =    Option.OK_STANDARD;    if(currentOption!=  null)  {  currentOption  =  Option.OK_STANDARD;  }  ArrayList  <  Option>  tokens  =  new  ArrayList  <  Option>(tokens.size());  [BUGGY]      }  [CLASS]  PosixParser  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  ArrayList  tokens  Options  options  Option  currentOption  boolean  eatTheRest  	projects/Cli2/src/java/org/apache/commons/cli/PosixParser.java	1.0	53	53	1	add	currentOption        =        Option.OK_STANDARD;        if(currentOption!=    null)    {    currentOption    =    Option.OK_STANDARD;    }    ArrayList  <  Option>  tokens  =  new  ArrayList  <  Option>(tokens.size());	  	compilable	  [FE]  UnrecognizedOptionException  	85	1	add
436	[BUG]  [BUGGY]  currentOption    =    Option.OK_STANDARD;    if(currentOption!=  null)  {  currentOption  =  Option.OK_STANDARD;  }  ArrayList  <  Option>  tokens  =  new  ArrayList  <  Option>(tokens.size());  [FE]  UnrecognizedOptionException  [FE]      UnrecognizedOptionException    [CONTEXT]      private  void  init()  {  eatTheRest  =  false;  tokens.clear();      [BUGGY]  currentOption    =    Option.OK_STANDARD;    if(currentOption!=  null)  {  currentOption  =  Option.OK_STANDARD;  }  ArrayList  <  Option>  tokens  =  new  ArrayList  <  Option>(tokens.size());  [BUGGY]      }  [CLASS]  PosixParser  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  ArrayList  tokens  Options  options  Option  currentOption  boolean  eatTheRest  	projects/Cli2/src/java/org/apache/commons/cli/PosixParser.java	1.0	53	53	1	replace	currentOption        =        Option.OK_STANDARD;        if(currentOption!=    null)    {    currentOption    =    Option.OK_STANDARD;    }    ArrayList  <  Option>  tokens  =  new  ArrayList  <  Option>(tokens.size());	  	compilable	  [FE]  UnrecognizedOptionException  	85	1	add
437	[BUG]  [BUGGY]  [FE]  UnrecognizedOptionException  [FE]        UnrecognizedOptionException    [CONTEXT]      private  void  init()  {  eatTheRest  =  false;  tokens.clear();      [BUGGY]  currentOption    =    Option.OK_STANDARD;    if(currentOption!=  null)  {  currentOption  =  Option.OK_STANDARD;  }  ArrayList  <  Option>  tokens  =  new  ArrayList  <  Option>();  [BUGGY]      }  [CLASS]  PosixParser  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  ArrayList  tokens  Options  options  Option  currentOption  boolean  eatTheRest  	projects/Cli2/src/java/org/apache/commons/cli/PosixParser.java	1.0	53	53	1	add	currentOption        =        Option.OK_STANDARD;        if(currentOption!=    null)    {    currentOption    =    Option.OK_STANDARD;    }    ArrayList  <  Option>  tokens  =  new  ArrayList  <  Option>();	  	compilable	  [FE]  UnrecognizedOptionException  	85	1	add
438	[BUG]  [BUGGY]  currentOption    =    Option.OK_STANDARD;    if(currentOption!=  null)  {  currentOption  =  Option.OK_STANDARD;  }  ArrayList  <  Option>  tokens  =  new  ArrayList  <  Option>();  [FE]  UnrecognizedOptionException  [FE]        UnrecognizedOptionException    [CONTEXT]      private  void  init()  {  eatTheRest  =  false;  tokens.clear();      [BUGGY]  currentOption    =    Option.OK_STANDARD;    if(currentOption!=  null)  {  currentOption  =  Option.OK_STANDARD;  }  ArrayList  <  Option>  tokens  =  new  ArrayList  <  Option>();  [BUGGY]      }  [CLASS]  PosixParser  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  ArrayList  tokens  Options  options  Option  currentOption  boolean  eatTheRest  	projects/Cli2/src/java/org/apache/commons/cli/PosixParser.java	1.0	53	53	1	replace	currentOption        =        Option.OK_STANDARD;        if(currentOption!=    null)    {    currentOption    =    Option.OK_STANDARD;    }    ArrayList  <  Option>  tokens  =  new  ArrayList  <  Option>();	  	compilable	  [FE]  UnrecognizedOptionException  	85	1	add
439	[BUG]  [BUGGY]  [FE]  UnrecognizedOptionException  [FE]          UnrecognizedOptionException    [CONTEXT]      private  void  init()  {  eatTheRest  =  false;  tokens.clear();      [BUGGY]  currentOption    =    Option.OK_STANDARD;    if(currentOption!=  null)  {  currentOption  =  Option.OK_STANDARD;  }  ArrayList  <  Option>  tokens  =  Lists.newArrayList();  [BUGGY]      }  [CLASS]  PosixParser  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  ArrayList  tokens  Options  options  Option  currentOption  boolean  eatTheRest  	projects/Cli2/src/java/org/apache/commons/cli/PosixParser.java	1.0	53	53	1	add	currentOption        =        Option.OK_STANDARD;        if(currentOption!=    null)    {    currentOption    =    Option.OK_STANDARD;    }    ArrayList  <  Option>  tokens  =  Lists.newArrayList();	  	compilable	  [FE]  UnrecognizedOptionException  	85	1	add
440	[BUG]  [BUGGY]  currentOption    =    Option.OK_STANDARD;    if(currentOption!=  null)  {  currentOption  =  Option.OK_STANDARD;  }  ArrayList  <  Option>  tokens  =  Lists.newArrayList();  [FE]  UnrecognizedOptionException  [FE]          UnrecognizedOptionException    [CONTEXT]      private  void  init()  {  eatTheRest  =  false;  tokens.clear();      [BUGGY]  currentOption    =    Option.OK_STANDARD;    if(currentOption!=  null)  {  currentOption  =  Option.OK_STANDARD;  }  ArrayList  <  Option>  tokens  =  Lists.newArrayList();  [BUGGY]      }  [CLASS]  PosixParser  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  ArrayList  tokens  Options  options  Option  currentOption  boolean  eatTheRest  	projects/Cli2/src/java/org/apache/commons/cli/PosixParser.java	1.0	53	53	1	replace	currentOption        =        Option.OK_STANDARD;        if(currentOption!=    null)    {    currentOption    =    Option.OK_STANDARD;    }    ArrayList  <  Option>  tokens  =  Lists.newArrayList();	  	compilable	  [FE]  UnrecognizedOptionException  	85	1	add
441	[BUG]  [BUGGY]  [FE]  UnrecognizedOptionException  [FE]            UnrecognizedOptionException    [CONTEXT]      private  void  init()  {  eatTheRest  =  false;  tokens.clear();      [BUGGY]  currentOption    =    Option.OK_STANDARD;    if(currentOption!=  null)  {  currentOption  =  Option.OK_STANDARD;  }  ArrayList  <  Option>  tokens  =  new  ArrayList  <  Option>(tokens.size()  +  1);  [BUGGY]      }  [CLASS]  PosixParser  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  ArrayList  tokens  Options  options  Option  currentOption  boolean  eatTheRest  	projects/Cli2/src/java/org/apache/commons/cli/PosixParser.java	1.0	53	53	1	add	currentOption        =        Option.OK_STANDARD;        if(currentOption!=    null)    {    currentOption    =    Option.OK_STANDARD;    }    ArrayList  <  Option>  tokens  =  new  ArrayList  <  Option>(tokens.size()  +  1);	  	compilable	  [FE]  UnrecognizedOptionException  	85	1	add
442	[BUG]  [BUGGY]  currentOption    =    Option.OK_STANDARD;    if(currentOption!=  null)  {  currentOption  =  Option.OK_STANDARD;  }  ArrayList  <  Option>  tokens  =  new  ArrayList  <  Option>(tokens.size()  +  1);  [FE]  UnrecognizedOptionException  [FE]            UnrecognizedOptionException    [CONTEXT]      private  void  init()  {  eatTheRest  =  false;  tokens.clear();      [BUGGY]  currentOption    =    Option.OK_STANDARD;    if(currentOption!=  null)  {  currentOption  =  Option.OK_STANDARD;  }  ArrayList  <  Option>  tokens  =  new  ArrayList  <  Option>(tokens.size()  +  1);  [BUGGY]      }  [CLASS]  PosixParser  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  ArrayList  tokens  Options  options  Option  currentOption  boolean  eatTheRest  	projects/Cli2/src/java/org/apache/commons/cli/PosixParser.java	1.0	53	53	1	replace	currentOption        =        Option.OK_STANDARD;        if(currentOption!=    null)    {    currentOption    =    Option.OK_STANDARD;    }    ArrayList  <  Option>  tokens  =  new  ArrayList  <  Option>(tokens.size()  +  1);	  	compilable	  [FE]  UnrecognizedOptionException  	85	1	add
443	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]    UnrecognizedOptionException    [CONTEXT]      private  void  init()  {  eatTheRest  =  false;  tokens.clear();      [BUGGY]  if(!eatTheRest)  {  tokens.add( "-- ");  tokens.add( "-- ");  eatTheRest  =  true;  }  [BUGGY]      currentOption  =  null;  }  [CLASS]  PosixParser  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  ArrayList  tokens  Options  options  Option  currentOption  boolean  eatTheRest  	projects/Cli2/src/java/org/apache/commons/cli/PosixParser.java	1.0	53	53	1	add	if(!eatTheRest)  {  tokens.add( "-- ");  tokens.add( "-- ");  eatTheRest  =  true;  }	          tokens.add(       "--       ");    tokens.add(   "--       ");    eatTheRest    =    true;    	compilable	  [FE]  ComparisonFailure  	27	1	replace
444	[BUG]  [BUGGY]  if(!eatTheRest)  {  tokens.add( "-- ");  tokens.add( "-- ");  eatTheRest  =  true;  }  [FE]  ComparisonFailure  [FE]    UnrecognizedOptionException    [CONTEXT]      private  void  init()  {  eatTheRest  =  false;  tokens.clear();      [BUGGY]  if(!eatTheRest)  {  tokens.add( "-- ");  tokens.add( "-- ");  eatTheRest  =  true;  }  [BUGGY]      currentOption  =  null;  }  [CLASS]  PosixParser  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  ArrayList  tokens  Options  options  Option  currentOption  boolean  eatTheRest  	projects/Cli2/src/java/org/apache/commons/cli/PosixParser.java	1.0	53	53	1	replace	if(!eatTheRest)  {  tokens.add( "-- ");  tokens.add( "-- ");  eatTheRest  =  true;  }	          tokens.add(       "--       ");    tokens.add(   "--       ");    eatTheRest    =    true;    	compilable	  [FE]  ComparisonFailure  	27	1	replace
445	[BUG]  [BUGGY]  [FE]  UnrecognizedOptionException  [FE]      UnrecognizedOptionException    [CONTEXT]      private  void  init()  {  eatTheRest  =  false;  tokens.clear();      [BUGGY]  if(currentOption!=  null)  {  tokens.add( "-- ");  tokens.add( "-- ");  eatTheRest  =  true;  }  [BUGGY]      currentOption  =  null;  }  [CLASS]  PosixParser  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  ArrayList  tokens  Options  options  Option  currentOption  boolean  eatTheRest  	projects/Cli2/src/java/org/apache/commons/cli/PosixParser.java	1.0	53	53	1	add	if(currentOption!=  null)  {  tokens.add( "-- ");  tokens.add( "-- ");  eatTheRest  =  true;  }	          tokens.add(       "--       ");    tokens.add(   "--       ");    eatTheRest    =    true;    	compilable	  [FE]  UnrecognizedOptionException  	27	1	replace
446	[BUG]  [BUGGY]  if(currentOption!=  null)  {  tokens.add( "-- ");  tokens.add( "-- ");  eatTheRest  =  true;  }  [FE]  UnrecognizedOptionException  [FE]      UnrecognizedOptionException    [CONTEXT]      private  void  init()  {  eatTheRest  =  false;  tokens.clear();      [BUGGY]  if(currentOption!=  null)  {  tokens.add( "-- ");  tokens.add( "-- ");  eatTheRest  =  true;  }  [BUGGY]      currentOption  =  null;  }  [CLASS]  PosixParser  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  ArrayList  tokens  Options  options  Option  currentOption  boolean  eatTheRest  	projects/Cli2/src/java/org/apache/commons/cli/PosixParser.java	1.0	53	53	1	replace	if(currentOption!=  null)  {  tokens.add( "-- ");  tokens.add( "-- ");  eatTheRest  =  true;  }	          tokens.add(       "--       ");    tokens.add(   "--       ");    eatTheRest    =    true;    	compilable	  [FE]  UnrecognizedOptionException  	27	1	replace
447	[BUG]  [BUGGY]  [FE]  UnrecognizedOptionException  [FE]        UnrecognizedOptionException    [CONTEXT]      private  void  init()  {  eatTheRest  =  false;  tokens.clear();      [BUGGY]  if(currentOption!=  null)  {  tokens.add( "-- ");  tokens.add( "-- ");  eatTheRest  =  false;  }  [BUGGY]      currentOption  =  null;  }  [CLASS]  PosixParser  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  ArrayList  tokens  Options  options  Option  currentOption  boolean  eatTheRest  	projects/Cli2/src/java/org/apache/commons/cli/PosixParser.java	1.0	53	53	1	add	if(currentOption!=  null)  {  tokens.add( "-- ");  tokens.add( "-- ");  eatTheRest  =  false;  }	          tokens.add(       "--       ");    tokens.add(   "--       ");    eatTheRest    =    true;    	compilable	  [FE]  UnrecognizedOptionException  	27	1	replace
448	[BUG]  [BUGGY]  if(currentOption!=  null)  {  tokens.add( "-- ");  tokens.add( "-- ");  eatTheRest  =  false;  }  [FE]  UnrecognizedOptionException  [FE]        UnrecognizedOptionException    [CONTEXT]      private  void  init()  {  eatTheRest  =  false;  tokens.clear();      [BUGGY]  if(currentOption!=  null)  {  tokens.add( "-- ");  tokens.add( "-- ");  eatTheRest  =  false;  }  [BUGGY]      currentOption  =  null;  }  [CLASS]  PosixParser  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  ArrayList  tokens  Options  options  Option  currentOption  boolean  eatTheRest  	projects/Cli2/src/java/org/apache/commons/cli/PosixParser.java	1.0	53	53	1	replace	if(currentOption!=  null)  {  tokens.add( "-- ");  tokens.add( "-- ");  eatTheRest  =  false;  }	          tokens.add(       "--       ");    tokens.add(   "--       ");    eatTheRest    =    true;    	compilable	  [FE]  UnrecognizedOptionException  	27	1	replace
449	[BUG]  [BUGGY]  ArrayList  tokens  =  new  ArrayList();  Option  currentOption  =  options.getOption(this,  tokens);  [CE]  method  getOption  in  class  Options  cannot  be  applied  to  given  types;  [FE]          UnrecognizedOptionException      [CONTEXT]      private  void  init()  {  eatTheRest  =  false;  tokens.clear();      [BUGGY]  ArrayList  tokens  =  new  ArrayList();  Option  currentOption  =  options.getOption(this,  tokens);  [BUGGY]      currentOption  =  null;  }  [CLASS]  PosixParser  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  ArrayList  tokens  Options  options  Option  currentOption  boolean  eatTheRest  	projects/Cli2/src/java/org/apache/commons/cli/PosixParser.java	1.0	53	53	1	replace	ArrayList  tokens  =  new  ArrayList();  Option  currentOption  =  options.getOption(this,  tokens);	          ArrayList    tokens    =    new    ArrayList();    Option    currentOption    =    options.getOption(this);    	non-compiled	[CE]  method  getOption  in  class  Options  cannot  be  applied  to  given  types;	137	None	replace
450	[BUG]  [BUGGY]  ArrayList  tokens  =  new  ArrayList(tokens.size());  Option  currentOption  =  options.getOption(this);  [CE]  method  getOption  in  class  Options  cannot  be  applied  to  given  types;  [FE]            UnrecognizedOptionException      [CONTEXT]      private  void  init()  {  eatTheRest  =  false;  tokens.clear();      [BUGGY]  ArrayList  tokens  =  new  ArrayList(tokens.size());  Option  currentOption  =  options.getOption(this);  [BUGGY]      currentOption  =  null;  }  [CLASS]  PosixParser  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  ArrayList  tokens  Options  options  Option  currentOption  boolean  eatTheRest  	projects/Cli2/src/java/org/apache/commons/cli/PosixParser.java	1.0	53	53	1	replace	ArrayList  tokens  =  new  ArrayList(tokens.size());  Option  currentOption  =  options.getOption(this);	          ArrayList    tokens    =    new    ArrayList();    Option    currentOption    =    options.getOption(this);    	non-compiled	[CE]  method  getOption  in  class  Options  cannot  be  applied  to  given  types;	137	None	replace
451	[BUG]  [BUGGY]  List  tokens  =  new  ArrayList();  Option  currentOption  =  options.getOption(this,  tokens);  [CE]  cannot  find  symbol  [FE]              UnrecognizedOptionException      [CONTEXT]      private  void  init()  {  eatTheRest  =  false;  tokens.clear();      [BUGGY]  List  tokens  =  new  ArrayList();  Option  currentOption  =  options.getOption(this,  tokens);  [BUGGY]      currentOption  =  null;  }  [CLASS]  PosixParser  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  ArrayList  tokens  Options  options  Option  currentOption  boolean  eatTheRest  	projects/Cli2/src/java/org/apache/commons/cli/PosixParser.java	1.0	53	53	1	replace	List  tokens  =  new  ArrayList();  Option  currentOption  =  options.getOption(this,  tokens);	          ArrayList    tokens    =    new    ArrayList();    Option    currentOption    =    options.getOption(this);    	non-compiled	[CE]  cannot  find  symbol	137	None	replace
452	[BUG]  [BUGGY]  ArrayList  tokens  =  new  ArrayList();  Option  currentOption  =  options.getOption(tokens);  [CE]  method  getOption  in  class  Options  cannot  be  applied  to  given  types;  [FE]            UnrecognizedOptionException      [CONTEXT]      private  void  init()  {  eatTheRest  =  false;  tokens.clear();      [BUGGY]  ArrayList  tokens  =  new  ArrayList();  Option  currentOption  =  options.getOption(tokens);  [BUGGY]      currentOption  =  null;  }  [CLASS]  PosixParser  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  ArrayList  tokens  Options  options  Option  currentOption  boolean  eatTheRest  	projects/Cli2/src/java/org/apache/commons/cli/PosixParser.java	1.0	53	53	1	replace	ArrayList  tokens  =  new  ArrayList();  Option  currentOption  =  options.getOption(tokens);	          ArrayList    tokens    =    new    ArrayList();    Option    currentOption    =    options.getOption(options);    	non-compiled	[CE]  method  getOption  in  class  Options  cannot  be  applied  to  given  types;	138	None	replace
453	[BUG]  [BUGGY]  List  tokens  =  new  ArrayList();  Option  currentOption  =  options.getOption(options);  [CE]  cannot  find  symbol  [FE]              UnrecognizedOptionException      [CONTEXT]      private  void  init()  {  eatTheRest  =  false;  tokens.clear();      [BUGGY]  List  tokens  =  new  ArrayList();  Option  currentOption  =  options.getOption(options);  [BUGGY]      currentOption  =  null;  }  [CLASS]  PosixParser  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  ArrayList  tokens  Options  options  Option  currentOption  boolean  eatTheRest  	projects/Cli2/src/java/org/apache/commons/cli/PosixParser.java	1.0	53	53	1	replace	List  tokens  =  new  ArrayList();  Option  currentOption  =  options.getOption(options);	          ArrayList    tokens    =    new    ArrayList();    Option    currentOption    =    options.getOption(options);    	non-compiled	[CE]  cannot  find  symbol	138	None	replace
454	[BUG]  [BUGGY]  [FE]  UnrecognizedOptionException  [FE]              UnrecognizedOptionException      [CONTEXT]      private  void  init()  {  eatTheRest  =  false;  tokens.clear();      [BUGGY]  ArrayList  <  Option>  tokens  =  new  ArrayList  <  Option>();  this.currentOption  =  null;  [BUGGY]      currentOption  =  null;  }  [CLASS]  PosixParser  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  ArrayList  tokens  Options  options  Option  currentOption  boolean  eatTheRest  	projects/Cli2/src/java/org/apache/commons/cli/PosixParser.java	1.0	53	53	1	add	ArrayList  <  Option>  tokens  =  new  ArrayList  <  Option>();  this.currentOption  =  null;	          ArrayList    <    Option>    tokens    =    new    ArrayList    <    Option>();    ArrayList    <    Option>    tokens    =    new    ArrayList    <    Option>();    this.currentOption    =    null;    	compilable	  [FE]  UnrecognizedOptionException  	47	1	replace
455	[BUG]  [BUGGY]  ArrayList  <  Option>  tokens  =  new  ArrayList  <  Option>();  this.currentOption  =  null;  [FE]  UnrecognizedOptionException  [FE]              UnrecognizedOptionException      [CONTEXT]      private  void  init()  {  eatTheRest  =  false;  tokens.clear();      [BUGGY]  ArrayList  <  Option>  tokens  =  new  ArrayList  <  Option>();  this.currentOption  =  null;  [BUGGY]      currentOption  =  null;  }  [CLASS]  PosixParser  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  ArrayList  tokens  Options  options  Option  currentOption  boolean  eatTheRest  	projects/Cli2/src/java/org/apache/commons/cli/PosixParser.java	1.0	53	53	1	replace	ArrayList  <  Option>  tokens  =  new  ArrayList  <  Option>();  this.currentOption  =  null;	          ArrayList    <    Option>    tokens    =    new    ArrayList    <    Option>();    ArrayList    <    Option>    tokens    =    new    ArrayList    <    Option>();    this.currentOption    =    null;    	compilable	  [FE]  UnrecognizedOptionException  	47	1	replace
456	[BUG]  [BUGGY]  if(!eatTheRest)  {  ArrayList  <  Option>  tokens  =  new  ArrayList  <  Option>();  ArrayList  <  Option>  tokens  =  new  ArrayList  <  Option>();  this.currentOption  =  null;  }  [CE]  variable  tokens  is  already  defined  in  method  init()  [FE]                UnrecognizedOptionException      [CONTEXT]      private  void  init()  {  eatTheRest  =  false;  tokens.clear();      [BUGGY]  if(!eatTheRest)  {  ArrayList  <  Option>  tokens  =  new  ArrayList  <  Option>();  ArrayList  <  Option>  tokens  =  new  ArrayList  <  Option>();  this.currentOption  =  null;  }  [BUGGY]      currentOption  =  null;  }  [CLASS]  PosixParser  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  ArrayList  tokens  Options  options  Option  currentOption  boolean  eatTheRest  	projects/Cli2/src/java/org/apache/commons/cli/PosixParser.java	1.0	53	53	1	replace	if(!eatTheRest)  {  ArrayList  <  Option>  tokens  =  new  ArrayList  <  Option>();  ArrayList  <  Option>  tokens  =  new  ArrayList  <  Option>();  this.currentOption  =  null;  }	          ArrayList    <    Option>    tokens    =    new    ArrayList    <    Option>();    ArrayList    <    Option>    tokens    =    new    ArrayList    <    Option>();    this.currentOption    =    null;    	non-compiled	[CE]  variable  tokens  is  already  defined  in  method  init()	47	None	replace
457	[BUG]  [BUGGY]  List  <  Option>  tokens  =  new  ArrayList  <  Option>();  this.currentOption  =  null;  [CE]  cannot  find  symbol  [FE]                  UnrecognizedOptionException      [CONTEXT]      private  void  init()  {  eatTheRest  =  false;  tokens.clear();      [BUGGY]  List  <  Option>  tokens  =  new  ArrayList  <  Option>();  this.currentOption  =  null;  [BUGGY]      currentOption  =  null;  }  [CLASS]  PosixParser  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  ArrayList  tokens  Options  options  Option  currentOption  boolean  eatTheRest  	projects/Cli2/src/java/org/apache/commons/cli/PosixParser.java	1.0	53	53	1	replace	List  <  Option>  tokens  =  new  ArrayList  <  Option>();  this.currentOption  =  null;	          ArrayList    <    Option>    tokens    =    new    ArrayList    <    Option>();    ArrayList    <    Option>    tokens    =    new    ArrayList    <    Option>();    this.currentOption    =    null;    	non-compiled	[CE]  cannot  find  symbol	47	None	replace
458	[BUG]  [BUGGY]          eatTheRest    =    false;    tokens.clear();    Option  currentOption  =  null;  eatTheRest  =  false;  tokens.clear();  Option  currentOption  =  null;  [CE]  variable  currentOption  is  already  defined  in  method  init()  [FE]    UnrecognizedOptionException    [CONTEXT]      private  void  init()  {  eatTheRest  =  false;  tokens.clear();      [BUGGY]          eatTheRest    =    false;    tokens.clear();    Option  currentOption  =  null;  eatTheRest  =  false;  tokens.clear();  Option  currentOption  =  null;  [BUGGY]      currentOption  =  null;  }  [CLASS]  PosixParser  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  ArrayList  tokens  Options  options  Option  currentOption  boolean  eatTheRest  	projects/Cli2/src/java/org/apache/commons/cli/PosixParser.java	1.0	53	53	1	replace	                eatTheRest        =        false;        tokens.clear();        Option    currentOption    =    null;    eatTheRest  =  false;  tokens.clear();  Option  currentOption  =  null;	  	non-compiled	[CE]  variable  currentOption  is  already  defined  in  method  init()	131	None	add
459	[BUG]  [BUGGY]          eatTheRest    =    false;    tokens.clear();    Option  currentOption  =  null;  eattheRest  =  false;  tokens.clear();  Option  currentOption  =  null;  [CE]  cannot  find  symbol  eattheRest  [FE]      UnrecognizedOptionException    [CONTEXT]      private  void  init()  {  eatTheRest  =  false;  tokens.clear();      [BUGGY]          eatTheRest    =    false;    tokens.clear();    Option  currentOption  =  null;  eattheRest  =  false;  tokens.clear();  Option  currentOption  =  null;  [BUGGY]      currentOption  =  null;  }  [CLASS]  PosixParser  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  ArrayList  tokens  Options  options  Option  currentOption  boolean  eatTheRest  	projects/Cli2/src/java/org/apache/commons/cli/PosixParser.java	1.0	53	53	1	replace	                eatTheRest        =        false;        tokens.clear();        Option    currentOption    =    null;    eattheRest  =  false;  tokens.clear();  Option  currentOption  =  null;	  	non-compiled	[CE]  cannot  find  symbol  eattheRest	131	None	add
460	[BUG]  [BUGGY]  [FE]  UnrecognizedOptionException  [FE]        UnrecognizedOptionException    [CONTEXT]      private  void  init()  {  eatTheRest  =  false;  tokens.clear();      [BUGGY]          eatTheRest    =    false;    tokens.clear();    Option  currentOption  =  null;  eatTheRest  =  false;  tokens.clear();  [BUGGY]      currentOption  =  null;  }  [CLASS]  PosixParser  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  ArrayList  tokens  Options  options  Option  currentOption  boolean  eatTheRest  	projects/Cli2/src/java/org/apache/commons/cli/PosixParser.java	1.0	53	53	1	add	                eatTheRest        =        false;        tokens.clear();        Option    currentOption    =    null;    eatTheRest  =  false;  tokens.clear();	  	compilable	  [FE]  UnrecognizedOptionException  	131	1	add
461	[BUG]  [BUGGY]          eatTheRest    =    false;    tokens.clear();    Option  currentOption  =  null;  eatTheRest  =  false;  tokens.clear();  [FE]  UnrecognizedOptionException  [FE]        UnrecognizedOptionException    [CONTEXT]      private  void  init()  {  eatTheRest  =  false;  tokens.clear();      [BUGGY]          eatTheRest    =    false;    tokens.clear();    Option  currentOption  =  null;  eatTheRest  =  false;  tokens.clear();  [BUGGY]      currentOption  =  null;  }  [CLASS]  PosixParser  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  ArrayList  tokens  Options  options  Option  currentOption  boolean  eatTheRest  	projects/Cli2/src/java/org/apache/commons/cli/PosixParser.java	1.0	53	53	1	replace	                eatTheRest        =        false;        tokens.clear();        Option    currentOption    =    null;    eatTheRest  =  false;  tokens.clear();	  	compilable	  [FE]  UnrecognizedOptionException  	131	1	add
462	[BUG]  [BUGGY]          eatTheRest    =    false;    tokens.clear();    Option  currentOption  =  null;  eatTheRest  =  true;  tokens.clear();  Option  currentOption  =  null;  [CE]  variable  currentOption  is  already  defined  in  method  init()  [FE]          UnrecognizedOptionException    [CONTEXT]      private  void  init()  {  eatTheRest  =  false;  tokens.clear();      [BUGGY]          eatTheRest    =    false;    tokens.clear();    Option  currentOption  =  null;  eatTheRest  =  true;  tokens.clear();  Option  currentOption  =  null;  [BUGGY]      currentOption  =  null;  }  [CLASS]  PosixParser  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  ArrayList  tokens  Options  options  Option  currentOption  boolean  eatTheRest  	projects/Cli2/src/java/org/apache/commons/cli/PosixParser.java	1.0	53	53	1	replace	                eatTheRest        =        false;        tokens.clear();        Option    currentOption    =    null;    eatTheRest  =  true;  tokens.clear();  Option  currentOption  =  null;	  	non-compiled	[CE]  variable  currentOption  is  already  defined  in  method  init()	131	None	add
463	[BUG]  [BUGGY]          eatTheRest    =    false;    tokens.clear();    Option  currentOption  =  null;  eatTheRest  =  false;  tokens.clear();  Options  currentOption  =  null;  [CE]  variable  currentOption  is  already  defined  in  method  init()  [FE]            UnrecognizedOptionException    [CONTEXT]      private  void  init()  {  eatTheRest  =  false;  tokens.clear();      [BUGGY]          eatTheRest    =    false;    tokens.clear();    Option  currentOption  =  null;  eatTheRest  =  false;  tokens.clear();  Options  currentOption  =  null;  [BUGGY]      currentOption  =  null;  }  [CLASS]  PosixParser  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  ArrayList  tokens  Options  options  Option  currentOption  boolean  eatTheRest  	projects/Cli2/src/java/org/apache/commons/cli/PosixParser.java	1.0	53	53	1	replace	                eatTheRest        =        false;        tokens.clear();        Option    currentOption    =    null;    eatTheRest  =  false;  tokens.clear();  Options  currentOption  =  null;	  	non-compiled	[CE]  variable  currentOption  is  already  defined  in  method  init()	131	None	add
464	[BUG]  [BUGGY]  [FE]  UnrecognizedOptionException  [FE]    UnrecognizedOptionException    [CONTEXT]      private  void  init()  {  eatTheRest  =  false;  tokens.clear();      [BUGGY]  tokens.clear();  currentOption  =  null;  eatTheRest  =  false;  tokens.clear();  [BUGGY]      currentOption  =  null;  }  [CLASS]  PosixParser  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  ArrayList  tokens  Options  options  Option  currentOption  boolean  eatTheRest  	projects/Cli2/src/java/org/apache/commons/cli/PosixParser.java	1.0	53	53	1	add	tokens.clear();  currentOption  =  null;  eatTheRest  =  false;  tokens.clear();	          tokens.clear();    currentOption    =    null;    eatTheRest    =    false;    tokens.clear();    currentOption    =    null;    	compilable	  [FE]  UnrecognizedOptionException  	158	1	replace
465	[BUG]  [BUGGY]  tokens.clear();  currentOption  =  null;  eatTheRest  =  false;  tokens.clear();  [FE]  UnrecognizedOptionException  [FE]    UnrecognizedOptionException    [CONTEXT]      private  void  init()  {  eatTheRest  =  false;  tokens.clear();      [BUGGY]  tokens.clear();  currentOption  =  null;  eatTheRest  =  false;  tokens.clear();  [BUGGY]      currentOption  =  null;  }  [CLASS]  PosixParser  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  ArrayList  tokens  Options  options  Option  currentOption  boolean  eatTheRest  	projects/Cli2/src/java/org/apache/commons/cli/PosixParser.java	1.0	53	53	1	replace	tokens.clear();  currentOption  =  null;  eatTheRest  =  false;  tokens.clear();	          tokens.clear();    currentOption    =    null;    eatTheRest    =    false;    tokens.clear();    currentOption    =    null;    	compilable	  [FE]  UnrecognizedOptionException  	158	1	replace
466	[BUG]  [BUGGY]  options.clear();  currentOption  =  null;  eatTheRest  =  false;  tokens.clear();  currentOption  =  null;  [CE]  cannot  find  symbol  [FE]      UnrecognizedOptionException    [CONTEXT]      private  void  init()  {  eatTheRest  =  false;  tokens.clear();      [BUGGY]  options.clear();  currentOption  =  null;  eatTheRest  =  false;  tokens.clear();  currentOption  =  null;  [BUGGY]      currentOption  =  null;  }  [CLASS]  PosixParser  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  ArrayList  tokens  Options  options  Option  currentOption  boolean  eatTheRest  	projects/Cli2/src/java/org/apache/commons/cli/PosixParser.java	1.0	53	53	1	replace	options.clear();  currentOption  =  null;  eatTheRest  =  false;  tokens.clear();  currentOption  =  null;	          tokens.clear();    currentOption    =    null;    eatTheRest    =    false;    tokens.clear();    currentOption    =    null;    	non-compiled	[CE]  cannot  find  symbol	158	None	replace
467	[BUG]  [BUGGY]  if(!eatTheRest)  {  ArrayList  <  Option>  tokens  =  new  ArrayList  <  Option>();  ArrayList  <  Option>  tokens  =  new  ArrayList  <  Option>();  currentOption  =  null;  }  [CE]  variable  tokens  is  already  defined  in  method  init()  [FE]          UnrecognizedOptionException      [CONTEXT]      private  void  init()  {  eatTheRest  =  false;  tokens.clear();      [BUGGY]  if(!eatTheRest)  {  ArrayList  <  Option>  tokens  =  new  ArrayList  <  Option>();  ArrayList  <  Option>  tokens  =  new  ArrayList  <  Option>();  currentOption  =  null;  }  [BUGGY]      currentOption  =  null;  }  [CLASS]  PosixParser  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  ArrayList  tokens  Options  options  Option  currentOption  boolean  eatTheRest  	projects/Cli2/src/java/org/apache/commons/cli/PosixParser.java	1.0	53	53	1	replace	if(!eatTheRest)  {  ArrayList  <  Option>  tokens  =  new  ArrayList  <  Option>();  ArrayList  <  Option>  tokens  =  new  ArrayList  <  Option>();  currentOption  =  null;  }	          ArrayList    <    Option>    tokens    =    new    ArrayList    <    Option>();    ArrayList    <    Option>    tokens    =    new    ArrayList    <    Option>();    currentOption    =    null;    	non-compiled	[CE]  variable  tokens  is  already  defined  in  method  init()	44	None	replace
468	[BUG]  [BUGGY]  List  <  Option>  tokens  =  new  ArrayList  <  Option>();  currentOption  =  null;  [CE]  cannot  find  symbol  [FE]            UnrecognizedOptionException      [CONTEXT]      private  void  init()  {  eatTheRest  =  false;  tokens.clear();      [BUGGY]  List  <  Option>  tokens  =  new  ArrayList  <  Option>();  currentOption  =  null;  [BUGGY]      currentOption  =  null;  }  [CLASS]  PosixParser  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  ArrayList  tokens  Options  options  Option  currentOption  boolean  eatTheRest  	projects/Cli2/src/java/org/apache/commons/cli/PosixParser.java	1.0	53	53	1	replace	List  <  Option>  tokens  =  new  ArrayList  <  Option>();  currentOption  =  null;	          ArrayList    <    Option>    tokens    =    new    ArrayList    <    Option>();    ArrayList    <    Option>    tokens    =    new    ArrayList    <    Option>();    currentOption    =    null;    	non-compiled	[CE]  cannot  find  symbol	44	None	replace
469	[BUG]  [BUGGY]          ArrayList    <    Option>    tokens    =    new    ArrayList    <    Option>();    Option  currentOption  =  null;  ArrayList  <  Option>  tokens  =  new  ArrayList  <  Option>();  [CE]  variable  tokens  is  already  defined  in  method  init()  [FE]    UnrecognizedOptionException    [CONTEXT]      private  void  init()  {  eatTheRest  =  false;  tokens.clear();      [BUGGY]          ArrayList    <    Option>    tokens    =    new    ArrayList    <    Option>();    Option  currentOption  =  null;  ArrayList  <  Option>  tokens  =  new  ArrayList  <  Option>();  [BUGGY]      currentOption  =  null;  }  [CLASS]  PosixParser  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  ArrayList  tokens  Options  options  Option  currentOption  boolean  eatTheRest  	projects/Cli2/src/java/org/apache/commons/cli/PosixParser.java	1.0	53	53	1	replace	                ArrayList        <        Option>        tokens        =        new        ArrayList        <        Option>();        Option    currentOption    =    null;    ArrayList  <  Option>  tokens  =  new  ArrayList  <  Option>();	  	non-compiled	[CE]  variable  tokens  is  already  defined  in  method  init()	48	None	add
470	[BUG]  [BUGGY]          ArrayList    <    Option>    tokens    =    new    ArrayList    <    Option>();    Option  currentOption  =  null;  ArrayList  <  Option>  tokens  =  new  ArrayList  <  Option>();  currentOption  =  null;  [CE]  variable  tokens  is  already  defined  in  method  init()  [FE]      UnrecognizedOptionException    [CONTEXT]      private  void  init()  {  eatTheRest  =  false;  tokens.clear();      [BUGGY]          ArrayList    <    Option>    tokens    =    new    ArrayList    <    Option>();    Option  currentOption  =  null;  ArrayList  <  Option>  tokens  =  new  ArrayList  <  Option>();  currentOption  =  null;  [BUGGY]      currentOption  =  null;  }  [CLASS]  PosixParser  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  ArrayList  tokens  Options  options  Option  currentOption  boolean  eatTheRest  	projects/Cli2/src/java/org/apache/commons/cli/PosixParser.java	1.0	53	53	1	replace	                ArrayList        <        Option>        tokens        =        new        ArrayList        <        Option>();        Option    currentOption    =    null;    ArrayList  <  Option>  tokens  =  new  ArrayList  <  Option>();  currentOption  =  null;	  	non-compiled	[CE]  variable  tokens  is  already  defined  in  method  init()	48	None	add
471	[BUG]  [BUGGY]          ArrayList    <    Option>    tokens    =    new    ArrayList    <    Option>();    Option  currentOption  =  null;  ArrayList  <  Option>  tokens  =  new  ArrayList  <  Option>();  System.arraycopy(tokens,  0,  currentOption,  0,  tokens.size());  [CE]  variable  tokens  is  already  defined  in  method  init()  [FE]        UnrecognizedOptionException    [CONTEXT]      private  void  init()  {  eatTheRest  =  false;  tokens.clear();      [BUGGY]          ArrayList    <    Option>    tokens    =    new    ArrayList    <    Option>();    Option  currentOption  =  null;  ArrayList  <  Option>  tokens  =  new  ArrayList  <  Option>();  System.arraycopy(tokens,  0,  currentOption,  0,  tokens.size());  [BUGGY]      currentOption  =  null;  }  [CLASS]  PosixParser  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  ArrayList  tokens  Options  options  Option  currentOption  boolean  eatTheRest  	projects/Cli2/src/java/org/apache/commons/cli/PosixParser.java	1.0	53	53	1	replace	                ArrayList        <        Option>        tokens        =        new        ArrayList        <        Option>();        Option    currentOption    =    null;    ArrayList  <  Option>  tokens  =  new  ArrayList  <  Option>();  System.arraycopy(tokens,  0,  currentOption,  0,  tokens.size());	  	non-compiled	[CE]  variable  tokens  is  already  defined  in  method  init()	48	None	add
472	[BUG]  [BUGGY]          ArrayList    <    Option>    tokens    =    new    ArrayList    <    Option>();    Option  currentOption  =  null;  ArrayList  <  Option>  tokens  =  new  ArrayList  <  Option>();  System.arraycopy(tokens,  0,  tokens,  0,  tokens.size());  [CE]  variable  tokens  is  already  defined  in  method  init()  [FE]          UnrecognizedOptionException    [CONTEXT]      private  void  init()  {  eatTheRest  =  false;  tokens.clear();      [BUGGY]          ArrayList    <    Option>    tokens    =    new    ArrayList    <    Option>();    Option  currentOption  =  null;  ArrayList  <  Option>  tokens  =  new  ArrayList  <  Option>();  System.arraycopy(tokens,  0,  tokens,  0,  tokens.size());  [BUGGY]      currentOption  =  null;  }  [CLASS]  PosixParser  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  ArrayList  tokens  Options  options  Option  currentOption  boolean  eatTheRest  	projects/Cli2/src/java/org/apache/commons/cli/PosixParser.java	1.0	53	53	1	replace	                ArrayList        <        Option>        tokens        =        new        ArrayList        <        Option>();        Option    currentOption    =    null;    ArrayList  <  Option>  tokens  =  new  ArrayList  <  Option>();  System.arraycopy(tokens,  0,  tokens,  0,  tokens.size());	  	non-compiled	[CE]  variable  tokens  is  already  defined  in  method  init()	48	None	add
473	[BUG]  [BUGGY]          ArrayList    <    Option>    tokens    =    new    ArrayList    <    Option>();    Option  currentOption  =  null;  ArrayList  <  Option>  tokens  =  new  ArrayList  <  Option>();  System.arraycopy(tokens,  0,  tokens,  0,  currentOption.size());  [CE]  variable  tokens  is  already  defined  in  method  init()  [FE]            UnrecognizedOptionException    [CONTEXT]      private  void  init()  {  eatTheRest  =  false;  tokens.clear();      [BUGGY]          ArrayList    <    Option>    tokens    =    new    ArrayList    <    Option>();    Option  currentOption  =  null;  ArrayList  <  Option>  tokens  =  new  ArrayList  <  Option>();  System.arraycopy(tokens,  0,  tokens,  0,  currentOption.size());  [BUGGY]      currentOption  =  null;  }  [CLASS]  PosixParser  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  ArrayList  tokens  Options  options  Option  currentOption  boolean  eatTheRest  	projects/Cli2/src/java/org/apache/commons/cli/PosixParser.java	1.0	53	53	1	replace	                ArrayList        <        Option>        tokens        =        new        ArrayList        <        Option>();        Option    currentOption    =    null;    ArrayList  <  Option>  tokens  =  new  ArrayList  <  Option>();  System.arraycopy(tokens,  0,  tokens,  0,  currentOption.size());	  	non-compiled	[CE]  variable  tokens  is  already  defined  in  method  init()	48	None	add
474	[BUG]  [BUGGY]  [FE]  UnrecognizedOptionException  [FE]    UnrecognizedOptionException    [CONTEXT]      private  void  init()  {  eatTheRest  =  false;  tokens.clear();      [BUGGY]  if(tokens  ==  null)  {  eatTheRest  =  false;  tokens.clear();  }  if(tokens  ==  null)  {  eatTheRest  =  false;  tokens.clear();  }  [BUGGY]      currentOption  =  null;  }  [CLASS]  PosixParser  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  ArrayList  tokens  Options  options  Option  currentOption  boolean  eatTheRest  	projects/Cli2/src/java/org/apache/commons/cli/PosixParser.java	1.0	53	53	1	add	if(tokens    ==    null)    {    eatTheRest    =    false;    tokens.clear();    }    if(tokens  ==  null)  {  eatTheRest  =  false;  tokens.clear();  }	  	compilable	  [FE]  UnrecognizedOptionException  	162	1	add
475	[BUG]  [BUGGY]  if(tokens  ==  null)  {  eatTheRest  =  false;  tokens.clear();  }  if(tokens  ==  null)  {  eatTheRest  =  false;  tokens.clear();  }  [FE]  UnrecognizedOptionException  [FE]    UnrecognizedOptionException    [CONTEXT]      private  void  init()  {  eatTheRest  =  false;  tokens.clear();      [BUGGY]  if(tokens  ==  null)  {  eatTheRest  =  false;  tokens.clear();  }  if(tokens  ==  null)  {  eatTheRest  =  false;  tokens.clear();  }  [BUGGY]      currentOption  =  null;  }  [CLASS]  PosixParser  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  ArrayList  tokens  Options  options  Option  currentOption  boolean  eatTheRest  	projects/Cli2/src/java/org/apache/commons/cli/PosixParser.java	1.0	53	53	1	replace	if(tokens    ==    null)    {    eatTheRest    =    false;    tokens.clear();    }    if(tokens  ==  null)  {  eatTheRest  =  false;  tokens.clear();  }	  	compilable	  [FE]  UnrecognizedOptionException  	162	1	add
476	[BUG]  [BUGGY]  [FE]  UnrecognizedOptionException  [FE]      UnrecognizedOptionException    [CONTEXT]      private  void  init()  {  eatTheRest  =  false;  tokens.clear();      [BUGGY]  if(tokens  ==  null)  {  eatTheRest  =  false;  tokens.clear();  }  if(tokens!=  null)  {  eatTheRest  =  false;  tokens.clear();  }  [BUGGY]      currentOption  =  null;  }  [CLASS]  PosixParser  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  ArrayList  tokens  Options  options  Option  currentOption  boolean  eatTheRest  	projects/Cli2/src/java/org/apache/commons/cli/PosixParser.java	1.0	53	53	1	add	if(tokens    ==    null)    {    eatTheRest    =    false;    tokens.clear();    }    if(tokens!=  null)  {  eatTheRest  =  false;  tokens.clear();  }	  	compilable	  [FE]  UnrecognizedOptionException  	162	1	add
477	[BUG]  [BUGGY]  if(tokens  ==  null)  {  eatTheRest  =  false;  tokens.clear();  }  if(tokens!=  null)  {  eatTheRest  =  false;  tokens.clear();  }  [FE]  UnrecognizedOptionException  [FE]      UnrecognizedOptionException    [CONTEXT]      private  void  init()  {  eatTheRest  =  false;  tokens.clear();      [BUGGY]  if(tokens  ==  null)  {  eatTheRest  =  false;  tokens.clear();  }  if(tokens!=  null)  {  eatTheRest  =  false;  tokens.clear();  }  [BUGGY]      currentOption  =  null;  }  [CLASS]  PosixParser  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  ArrayList  tokens  Options  options  Option  currentOption  boolean  eatTheRest  	projects/Cli2/src/java/org/apache/commons/cli/PosixParser.java	1.0	53	53	1	replace	if(tokens    ==    null)    {    eatTheRest    =    false;    tokens.clear();    }    if(tokens!=  null)  {  eatTheRest  =  false;  tokens.clear();  }	  	compilable	  [FE]  UnrecognizedOptionException  	162	1	add
478	[BUG]  [BUGGY]  if(tokens  ==  null)  {  eatTheRest  =  false;  tokens.clear();  }  if(tokens  ==  null)  {  eattheRest  =  false;  tokens.clear();  }  [CE]  cannot  find  symbol  eattheRest  [FE]        UnrecognizedOptionException    [CONTEXT]      private  void  init()  {  eatTheRest  =  false;  tokens.clear();      [BUGGY]  if(tokens  ==  null)  {  eatTheRest  =  false;  tokens.clear();  }  if(tokens  ==  null)  {  eattheRest  =  false;  tokens.clear();  }  [BUGGY]      currentOption  =  null;  }  [CLASS]  PosixParser  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  ArrayList  tokens  Options  options  Option  currentOption  boolean  eatTheRest  	projects/Cli2/src/java/org/apache/commons/cli/PosixParser.java	1.0	53	53	1	replace	if(tokens    ==    null)    {    eatTheRest    =    false;    tokens.clear();    }    if(tokens  ==  null)  {  eattheRest  =  false;  tokens.clear();  }	  	non-compiled	[CE]  cannot  find  symbol  eattheRest	162	None	add
479	[BUG]  [BUGGY]  if(tokens  ==  null)  {  eatTheRest  =  false;  tokens.clear();  }  If(tokens  ==  null)  {  eatTheRest  =  false;  tokens.clear();  }  [CE]  ';'  expected  [FE]          UnrecognizedOptionException    [CONTEXT]      private  void  init()  {  eatTheRest  =  false;  tokens.clear();      [BUGGY]  if(tokens  ==  null)  {  eatTheRest  =  false;  tokens.clear();  }  If(tokens  ==  null)  {  eatTheRest  =  false;  tokens.clear();  }  [BUGGY]      currentOption  =  null;  }  [CLASS]  PosixParser  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  ArrayList  tokens  Options  options  Option  currentOption  boolean  eatTheRest  	projects/Cli2/src/java/org/apache/commons/cli/PosixParser.java	1.0	53	53	1	replace	if(tokens    ==    null)    {    eatTheRest    =    false;    tokens.clear();    }    If(tokens  ==  null)  {  eatTheRest  =  false;  tokens.clear();  }	  	non-compiled	[CE]  ';'  expected	162	None	add
480	[BUG]  [BUGGY]  if(currentOption!=  null)  {  if(tokens  ==  null)  {  eatTheRest  =  false;  tokens.clear();  }  [CE]  illegal  start  of  expression  [FE]    UnrecognizedOptionException    [CONTEXT]      private  void  init()  {  eatTheRest  =  false;  tokens.clear();      [BUGGY]  if(currentOption!=  null)  {  if(tokens  ==  null)  {  eatTheRest  =  false;  tokens.clear();  }  [BUGGY]      currentOption  =  null;  }  [CLASS]  PosixParser  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  ArrayList  tokens  Options  options  Option  currentOption  boolean  eatTheRest  	projects/Cli2/src/java/org/apache/commons/cli/PosixParser.java	1.0	53	53	1	replace	if(currentOption!=  null)  {  if(tokens  ==  null)  {  eatTheRest  =  false;  tokens.clear();  }	  if(tokens    ==    null)    {    eatTheRest    =    false;    tokens.clear();    }    	non-compiled	[CE]  illegal  start  of  expression	163	None	replace
481	[BUG]  [BUGGY]  [FE]  UnrecognizedOptionException  [FE]    UnrecognizedOptionException    [CONTEXT]      private  void  init()  {  eatTheRest  =  false;  tokens.clear();      [BUGGY]  if(eatTheRest)  {  tokens.clear();  currentOption  =  null;  }  if(eatTheRest)  {  tokens.clear();  currentOption  =  null;  }  [BUGGY]      currentOption  =  null;  }  [CLASS]  PosixParser  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  ArrayList  tokens  Options  options  Option  currentOption  boolean  eatTheRest  	projects/Cli2/src/java/org/apache/commons/cli/PosixParser.java	1.0	53	53	1	add	if(eatTheRest)    {    tokens.clear();    currentOption    =    null;    }    if(eatTheRest)  {  tokens.clear();  currentOption  =  null;  }	  	compilable	  [FE]  UnrecognizedOptionException  	124	1	add
482	[BUG]  [BUGGY]  if(eatTheRest)  {  tokens.clear();  currentOption  =  null;  }  if(eatTheRest)  {  tokens.clear();  currentOption  =  null;  }  [FE]  UnrecognizedOptionException  [FE]    UnrecognizedOptionException    [CONTEXT]      private  void  init()  {  eatTheRest  =  false;  tokens.clear();      [BUGGY]  if(eatTheRest)  {  tokens.clear();  currentOption  =  null;  }  if(eatTheRest)  {  tokens.clear();  currentOption  =  null;  }  [BUGGY]      currentOption  =  null;  }  [CLASS]  PosixParser  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  ArrayList  tokens  Options  options  Option  currentOption  boolean  eatTheRest  	projects/Cli2/src/java/org/apache/commons/cli/PosixParser.java	1.0	53	53	1	replace	if(eatTheRest)    {    tokens.clear();    currentOption    =    null;    }    if(eatTheRest)  {  tokens.clear();  currentOption  =  null;  }	  	compilable	  [FE]  UnrecognizedOptionException  	124	1	add
483	[BUG]  [BUGGY]  if(eatTheRest)  {  tokens.clear();  currentOption  =  null;  }  if(eattheRest)  {  tokens.clear();  currentOption  =  null;  }  [CE]  cannot  find  symbol  eattheRest  [FE]      UnrecognizedOptionException    [CONTEXT]      private  void  init()  {  eatTheRest  =  false;  tokens.clear();      [BUGGY]  if(eatTheRest)  {  tokens.clear();  currentOption  =  null;  }  if(eattheRest)  {  tokens.clear();  currentOption  =  null;  }  [BUGGY]      currentOption  =  null;  }  [CLASS]  PosixParser  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  ArrayList  tokens  Options  options  Option  currentOption  boolean  eatTheRest  	projects/Cli2/src/java/org/apache/commons/cli/PosixParser.java	1.0	53	53	1	replace	if(eatTheRest)    {    tokens.clear();    currentOption    =    null;    }    if(eattheRest)  {  tokens.clear();  currentOption  =  null;  }	  	non-compiled	[CE]  cannot  find  symbol  eattheRest	124	None	add
484	[BUG]  [BUGGY]  if(eatTheRest)  {  tokens.clear();  currentOption  =  null;  }  If(eatTheRest)  {  tokens.clear();  currentOption  =  null;  }  [CE]  ';'  expected  [FE]        UnrecognizedOptionException    [CONTEXT]      private  void  init()  {  eatTheRest  =  false;  tokens.clear();      [BUGGY]  if(eatTheRest)  {  tokens.clear();  currentOption  =  null;  }  If(eatTheRest)  {  tokens.clear();  currentOption  =  null;  }  [BUGGY]      currentOption  =  null;  }  [CLASS]  PosixParser  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  ArrayList  tokens  Options  options  Option  currentOption  boolean  eatTheRest  	projects/Cli2/src/java/org/apache/commons/cli/PosixParser.java	1.0	53	53	1	replace	if(eatTheRest)    {    tokens.clear();    currentOption    =    null;    }    If(eatTheRest)  {  tokens.clear();  currentOption  =  null;  }	  	non-compiled	[CE]  ';'  expected	124	None	add
485	[BUG]  [BUGGY]  List  <  Option>  tokens  =  new  ArrayList  <  Option>();  Options  options  =  options.getOptions();  [CE]  cannot  find  symbol  [FE]          UnrecognizedOptionException      [CONTEXT]      private  void  init()  {  eatTheRest  =  false;  tokens.clear();      [BUGGY]  List  <  Option>  tokens  =  new  ArrayList  <  Option>();  Options  options  =  options.getOptions();  [BUGGY]      currentOption  =  null;  }  [CLASS]  PosixParser  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  ArrayList  tokens  Options  options  Option  currentOption  boolean  eatTheRest  	projects/Cli2/src/java/org/apache/commons/cli/PosixParser.java	1.0	53	53	1	replace	List  <  Option>  tokens  =  new  ArrayList  <  Option>();  Options  options  =  options.getOptions();	          ArrayList    <    Option>    tokens    =    new    ArrayList    <    Option>();    Options    options    =    options.getOptions();    	non-compiled	[CE]  cannot  find  symbol	109	None	replace
486	[BUG]  [BUGGY]  ArrayList  <  Option>  tokens  =  new  ArrayList  <  Option>();  options  =  options.getOptions();  [CE]  incompatible  types  [FE]            UnrecognizedOptionException      [CONTEXT]      private  void  init()  {  eatTheRest  =  false;  tokens.clear();      [BUGGY]  ArrayList  <  Option>  tokens  =  new  ArrayList  <  Option>();  options  =  options.getOptions();  [BUGGY]      currentOption  =  null;  }  [CLASS]  PosixParser  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  ArrayList  tokens  Options  options  Option  currentOption  boolean  eatTheRest  	projects/Cli2/src/java/org/apache/commons/cli/PosixParser.java	1.0	53	53	1	replace	ArrayList  <  Option>  tokens  =  new  ArrayList  <  Option>();  options  =  options.getOptions();	          ArrayList    <    Option>    tokens    =    new    ArrayList    <    Option>();    Options    options    =    options.getOptions();    	non-compiled	[CE]  incompatible  types	109	None	replace
487	[BUG]  [BUGGY]  ArrayList  <  Option>  tokens  =  options.values();  [CE]  cannot  find  symbol  [FE]    UnrecognizedOptionException    [CONTEXT]      private  void  init()  {  eatTheRest  =  false;  tokens.clear();      [BUGGY]  ArrayList  <  Option>  tokens  =  options.values();  [BUGGY]      }  [CLASS]  PosixParser  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  ArrayList  tokens  Options  options  Option  currentOption  boolean  eatTheRest  	projects/Cli2/src/java/org/apache/commons/cli/PosixParser.java	1.0	53	53	1	replace	ArrayList  <  Option>  tokens  =  options.values();	  currentOption    =    Option.OK_STANDARD;    ArrayList    <    Option>    tokens    =    options.values();    	non-compiled	[CE]  cannot  find  symbol	104	None	replace
488	[BUG]  [BUGGY]  tokens  =  options.values();  [CE]  cannot  find  symbol  [FE]      UnrecognizedOptionException    [CONTEXT]      private  void  init()  {  eatTheRest  =  false;  tokens.clear();      [BUGGY]  tokens  =  options.values();  [BUGGY]      }  [CLASS]  PosixParser  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  ArrayList  tokens  Options  options  Option  currentOption  boolean  eatTheRest  	projects/Cli2/src/java/org/apache/commons/cli/PosixParser.java	1.0	53	53	1	replace	tokens  =  options.values();	  currentOption    =    Option.OK_STANDARD;    ArrayList    <    Option>    tokens    =    options.values();    	non-compiled	[CE]  cannot  find  symbol	104	None	replace
489	[BUG]  [BUGGY]  ArrayList  <  Option>  tokens  =  options.keySet();  [CE]  cannot  find  symbol  [FE]        UnrecognizedOptionException    [CONTEXT]      private  void  init()  {  eatTheRest  =  false;  tokens.clear();      [BUGGY]  ArrayList  <  Option>  tokens  =  options.keySet();  [BUGGY]      }  [CLASS]  PosixParser  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  ArrayList  tokens  Options  options  Option  currentOption  boolean  eatTheRest  	projects/Cli2/src/java/org/apache/commons/cli/PosixParser.java	1.0	53	53	1	replace	ArrayList  <  Option>  tokens  =  options.keySet();	  currentOption    =    Option.OK_STANDARD;    ArrayList    <    Option>    tokens    =    options.values();    	non-compiled	[CE]  cannot  find  symbol	104	None	replace
490	[BUG]  [BUGGY]  Option  options  =  options.getOptions();  [CE]  cannot  find  symbol  [FE]          UnrecognizedOptionException    [CONTEXT]      private  void  init()  {  eatTheRest  =  false;  tokens.clear();      [BUGGY]  Option  options  =  options.getOptions();  [BUGGY]      }  [CLASS]  PosixParser  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  ArrayList  tokens  Options  options  Option  currentOption  boolean  eatTheRest  	projects/Cli2/src/java/org/apache/commons/cli/PosixParser.java	1.0	53	53	1	replace	Option  options  =  options.getOptions();	  currentOption    =    Option.OK_STANDARD;    ArrayList    <    Option>    tokens    =    options.values();    	non-compiled	[CE]  cannot  find  symbol	104	None	replace
491	[BUG]  [BUGGY]  [FE]  UnrecognizedOptionException  [FE]    UnrecognizedOptionException    [CONTEXT]      private  void  init()  {  eatTheRest  =  false;  tokens.clear();      [BUGGY]  tokens.add(   "u00   ");  tokens.add( "u00   ");  [BUGGY]      currentOption  =  null;  }  [CLASS]  PosixParser  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  ArrayList  tokens  Options  options  Option  currentOption  boolean  eatTheRest  	projects/Cli2/src/java/org/apache/commons/cli/PosixParser.java	1.0	53	53	1	add	tokens.add(   "u00   ");    tokens.add( "u00   ");	  	compilable	  [FE]  UnrecognizedOptionException  	148	1	add
492	[BUG]  [BUGGY]  tokens.add(   "u00   ");  tokens.add( "u00   ");  [FE]  UnrecognizedOptionException  [FE]    UnrecognizedOptionException    [CONTEXT]      private  void  init()  {  eatTheRest  =  false;  tokens.clear();      [BUGGY]  tokens.add(   "u00   ");  tokens.add( "u00   ");  [BUGGY]      currentOption  =  null;  }  [CLASS]  PosixParser  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  ArrayList  tokens  Options  options  Option  currentOption  boolean  eatTheRest  	projects/Cli2/src/java/org/apache/commons/cli/PosixParser.java	1.0	53	53	1	replace	tokens.add(   "u00   ");    tokens.add( "u00   ");	  	compilable	  [FE]  UnrecognizedOptionException  	148	1	add
493	[BUG]  [BUGGY]  [FE]  UnrecognizedOptionException  [FE]      UnrecognizedOptionException    [CONTEXT]      private  void  init()  {  eatTheRest  =  false;  tokens.clear();      [BUGGY]  tokens.add(   "u00   ");  tokens.add( ",u00 ");  [BUGGY]      currentOption  =  null;  }  [CLASS]  PosixParser  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  ArrayList  tokens  Options  options  Option  currentOption  boolean  eatTheRest  	projects/Cli2/src/java/org/apache/commons/cli/PosixParser.java	1.0	53	53	1	add	tokens.add(   "u00   ");    tokens.add( ",u00 ");	  	compilable	  [FE]  UnrecognizedOptionException  	148	1	add
494	[BUG]  [BUGGY]  tokens.add(   "u00   ");  tokens.add( ",u00 ");  [FE]  UnrecognizedOptionException  [FE]      UnrecognizedOptionException    [CONTEXT]      private  void  init()  {  eatTheRest  =  false;  tokens.clear();      [BUGGY]  tokens.add(   "u00   ");  tokens.add( ",u00 ");  [BUGGY]      currentOption  =  null;  }  [CLASS]  PosixParser  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  ArrayList  tokens  Options  options  Option  currentOption  boolean  eatTheRest  	projects/Cli2/src/java/org/apache/commons/cli/PosixParser.java	1.0	53	53	1	replace	tokens.add(   "u00   ");    tokens.add( ",u00 ");	  	compilable	  [FE]  UnrecognizedOptionException  	148	1	add
495	[BUG]  [BUGGY]  [FE]  UnrecognizedOptionException  [FE]        UnrecognizedOptionException    [CONTEXT]      private  void  init()  {  eatTheRest  =  false;  tokens.clear();      [BUGGY]  tokens.add(   "u00   ");  tokens.add( ".u00 ");  [BUGGY]      currentOption  =  null;  }  [CLASS]  PosixParser  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  ArrayList  tokens  Options  options  Option  currentOption  boolean  eatTheRest  	projects/Cli2/src/java/org/apache/commons/cli/PosixParser.java	1.0	53	53	1	add	tokens.add(   "u00   ");    tokens.add( ".u00 ");	  	compilable	  [FE]  UnrecognizedOptionException  	148	1	add
496	[BUG]  [BUGGY]  tokens.add(   "u00   ");  tokens.add( ".u00 ");  [FE]  UnrecognizedOptionException  [FE]        UnrecognizedOptionException    [CONTEXT]      private  void  init()  {  eatTheRest  =  false;  tokens.clear();      [BUGGY]  tokens.add(   "u00   ");  tokens.add( ".u00 ");  [BUGGY]      currentOption  =  null;  }  [CLASS]  PosixParser  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  ArrayList  tokens  Options  options  Option  currentOption  boolean  eatTheRest  	projects/Cli2/src/java/org/apache/commons/cli/PosixParser.java	1.0	53	53	1	replace	tokens.add(   "u00   ");    tokens.add( ".u00 ");	  	compilable	  [FE]  UnrecognizedOptionException  	148	1	add
497	[BUG]  [BUGGY]  if(currentOption!=  null)  {  if(!eatTheRest)  {  eatTheRest  =  false;  tokens.clear();  }  [CE]  illegal  start  of  expression  [FE]    UnrecognizedOptionException    [CONTEXT]      private  void  init()  {  eatTheRest  =  false;  tokens.clear();      [BUGGY]  if(currentOption!=  null)  {  if(!eatTheRest)  {  eatTheRest  =  false;  tokens.clear();  }  [BUGGY]      currentOption  =  null;  }  [CLASS]  PosixParser  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  ArrayList  tokens  Options  options  Option  currentOption  boolean  eatTheRest  	projects/Cli2/src/java/org/apache/commons/cli/PosixParser.java	1.0	53	53	1	replace	if(currentOption!=  null)  {  if(!eatTheRest)  {  eatTheRest  =  false;  tokens.clear();  }	  if(!eatTheRest)    {    eatTheRest    =    false;    tokens.clear();    }    	non-compiled	[CE]  illegal  start  of  expression	116	None	replace
498	[BUG]  [BUGGY]  if(currentOption  ==  null)  {  if(!eatTheRest)  {  eatTheRest  =  false;  tokens.clear();  }  [CE]  illegal  start  of  expression  [FE]      UnrecognizedOptionException    [CONTEXT]      private  void  init()  {  eatTheRest  =  false;  tokens.clear();      [BUGGY]  if(currentOption  ==  null)  {  if(!eatTheRest)  {  eatTheRest  =  false;  tokens.clear();  }  [BUGGY]      currentOption  =  null;  }  [CLASS]  PosixParser  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  ArrayList  tokens  Options  options  Option  currentOption  boolean  eatTheRest  	projects/Cli2/src/java/org/apache/commons/cli/PosixParser.java	1.0	53	53	1	replace	if(currentOption  ==  null)  {  if(!eatTheRest)  {  eatTheRest  =  false;  tokens.clear();  }	  if(!eatTheRest)    {    eatTheRest    =    false;    tokens.clear();    }    	non-compiled	[CE]  illegal  start  of  expression	116	None	replace
499	[BUG]  [BUGGY]  if(currentOption!=  null)  {  if(!eatTheRest)  {  eatTheRest  =  false;  }  [CE]  illegal  start  of  expression  [FE]        UnrecognizedOptionException    [CONTEXT]      private  void  init()  {  eatTheRest  =  false;  tokens.clear();      [BUGGY]  if(currentOption!=  null)  {  if(!eatTheRest)  {  eatTheRest  =  false;  }  [BUGGY]      currentOption  =  null;  }  [CLASS]  PosixParser  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  ArrayList  tokens  Options  options  Option  currentOption  boolean  eatTheRest  	projects/Cli2/src/java/org/apache/commons/cli/PosixParser.java	1.0	53	53	1	replace	if(currentOption!=  null)  {  if(!eatTheRest)  {  eatTheRest  =  false;  }	  if(!eatTheRest)    {    eatTheRest    =    false;    tokens.clear();    }    	non-compiled	[CE]  illegal  start  of  expression	116	None	replace
500	[BUG]  [BUGGY]  [FE]  UnrecognizedOptionException  [FE]    UnrecognizedOptionException    [CONTEXT]      private  void  init()  {  eatTheRest  =  false;  tokens.clear();      [BUGGY]  if(tokens!=  null)  {  ArrayList  <  Option>  tokens  =  new  ArrayList  <  Option>();  Option  currentOption  =  null;  }  [BUGGY]      currentOption  =  null;  }  [CLASS]  PosixParser  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  ArrayList  tokens  Options  options  Option  currentOption  boolean  eatTheRest  	projects/Cli2/src/java/org/apache/commons/cli/PosixParser.java	1.0	53	53	1	add	if(tokens!=  null)  {  ArrayList  <  Option>  tokens  =  new  ArrayList  <  Option>();  Option  currentOption  =  null;  }	          ArrayList    <    Option>    tokens    =    new    ArrayList    <    Option>();    Option    currentOption    =    null;    	compilable	  [FE]  UnrecognizedOptionException  	49	1	replace
501	[BUG]  [BUGGY]  if(tokens!=  null)  {  ArrayList  <  Option>  tokens  =  new  ArrayList  <  Option>();  Option  currentOption  =  null;  }  [FE]  UnrecognizedOptionException  [FE]    UnrecognizedOptionException    [CONTEXT]      private  void  init()  {  eatTheRest  =  false;  tokens.clear();      [BUGGY]  if(tokens!=  null)  {  ArrayList  <  Option>  tokens  =  new  ArrayList  <  Option>();  Option  currentOption  =  null;  }  [BUGGY]      currentOption  =  null;  }  [CLASS]  PosixParser  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  ArrayList  tokens  Options  options  Option  currentOption  boolean  eatTheRest  	projects/Cli2/src/java/org/apache/commons/cli/PosixParser.java	1.0	53	53	1	replace	if(tokens!=  null)  {  ArrayList  <  Option>  tokens  =  new  ArrayList  <  Option>();  Option  currentOption  =  null;  }	          ArrayList    <    Option>    tokens    =    new    ArrayList    <    Option>();    Option    currentOption    =    null;    	compilable	  [FE]  UnrecognizedOptionException  	49	1	replace
502	[BUG]  [BUGGY]  ArrayList  <  Option>  tokens  =  new  ArrayList  <  Option>(tokens.size());  Option  currentOption  =  null;  [CE]  variable  tokens  might  not  have  been  initialized  [FE]      UnrecognizedOptionException    [CONTEXT]      private  void  init()  {  eatTheRest  =  false;  tokens.clear();      [BUGGY]  ArrayList  <  Option>  tokens  =  new  ArrayList  <  Option>(tokens.size());  Option  currentOption  =  null;  [BUGGY]      currentOption  =  null;  }  [CLASS]  PosixParser  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  ArrayList  tokens  Options  options  Option  currentOption  boolean  eatTheRest  	projects/Cli2/src/java/org/apache/commons/cli/PosixParser.java	1.0	53	53	1	replace	ArrayList  <  Option>  tokens  =  new  ArrayList  <  Option>(tokens.size());  Option  currentOption  =  null;	          ArrayList    <    Option>    tokens    =    new    ArrayList    <    Option>();    Option    currentOption    =    null;    	non-compiled	[CE]  variable  tokens  might  not  have  been  initialized	49	None	replace
503	[BUG]  [BUGGY]  [FE]  UnrecognizedOptionException  [FE]    UnrecognizedOptionException    [CONTEXT]      private  void  init()  {  eatTheRest  =  false;  tokens.clear();      [BUGGY]  tokens.add( "--null ");  [BUGGY]      currentOption  =  null;  }  [CLASS]  PosixParser  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  ArrayList  tokens  Options  options  Option  currentOption  boolean  eatTheRest  	projects/Cli2/src/java/org/apache/commons/cli/PosixParser.java	1.0	53	53	1	add	tokens.add( "--null ");	  tokens.add(   "--n   ");    	compilable	  [FE]  UnrecognizedOptionException  	74	1	replace
504	[BUG]  [BUGGY]  tokens.add( "--null ");  [FE]  UnrecognizedOptionException  [FE]    UnrecognizedOptionException    [CONTEXT]      private  void  init()  {  eatTheRest  =  false;  tokens.clear();      [BUGGY]  tokens.add( "--null ");  [BUGGY]      currentOption  =  null;  }  [CLASS]  PosixParser  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  ArrayList  tokens  Options  options  Option  currentOption  boolean  eatTheRest  	projects/Cli2/src/java/org/apache/commons/cli/PosixParser.java	1.0	53	53	1	replace	tokens.add( "--null ");	  tokens.add(   "--n   ");    	compilable	  [FE]  UnrecognizedOptionException  	74	1	replace
505	[BUG]  [BUGGY]  currentOption  =  options.toArray(new  Option[tokens.size()  ]);  [CE]  cannot  find  symbol  [FE]            UnrecognizedOptionException      [CONTEXT]      private  void  init()  {  eatTheRest  =  false;  tokens.clear();      [BUGGY]  currentOption  =  options.toArray(new  Option[tokens.size()  ]);  [BUGGY]      }  [CLASS]  PosixParser  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  ArrayList  tokens  Options  options  Option  currentOption  boolean  eatTheRest  	projects/Cli2/src/java/org/apache/commons/cli/PosixParser.java	1.0	53	53	1	replace	currentOption  =  options.toArray(new  Option[tokens.size()  ]);	  currentOption    =    options.toArray(new    Option[options.size()    ]);    	non-compiled	[CE]  cannot  find  symbol	28	None	replace
506	[BUG]  [BUGGY]  currentOption  =  options.toArray(new  Option[compilerOptions.size()  ]);  [CE]  cannot  find  symbol  compilerOptions  [FE]              UnrecognizedOptionException      [CONTEXT]      private  void  init()  {  eatTheRest  =  false;  tokens.clear();      [BUGGY]  currentOption  =  options.toArray(new  Option[compilerOptions.size()  ]);  [BUGGY]      }  [CLASS]  PosixParser  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  ArrayList  tokens  Options  options  Option  currentOption  boolean  eatTheRest  	projects/Cli2/src/java/org/apache/commons/cli/PosixParser.java	1.0	53	53	1	replace	currentOption  =  options.toArray(new  Option[compilerOptions.size()  ]);	  currentOption    =    options.toArray(new    Option[options.size()    ]);    	non-compiled	[CE]  cannot  find  symbol  compilerOptions	28	None	replace
507	[BUG]  [BUGGY]  currentOption  =  options.toArray(new  Option[currentOptions.size()  ]);  [CE]  cannot  find  symbol  currentOptions  [FE]                UnrecognizedOptionException      [CONTEXT]      private  void  init()  {  eatTheRest  =  false;  tokens.clear();      [BUGGY]  currentOption  =  options.toArray(new  Option[currentOptions.size()  ]);  [BUGGY]      }  [CLASS]  PosixParser  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  ArrayList  tokens  Options  options  Option  currentOption  boolean  eatTheRest  	projects/Cli2/src/java/org/apache/commons/cli/PosixParser.java	1.0	53	53	1	replace	currentOption  =  options.toArray(new  Option[currentOptions.size()  ]);	  currentOption    =    options.toArray(new    Option[options.size()    ]);    	non-compiled	[CE]  cannot  find  symbol  currentOptions	28	None	replace
508	[BUG]  [BUGGY]  currentOption  =  Option.None.valueOf(tokens,  options);  [CE]  cannot  find  symbol  None  [FE]                UnrecognizedOptionException      [CONTEXT]      private  void  init()  {  eatTheRest  =  false;  tokens.clear();      [BUGGY]  currentOption  =  Option.None.valueOf(tokens,  options);  [BUGGY]      }  [CLASS]  PosixParser  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  ArrayList  tokens  Options  options  Option  currentOption  boolean  eatTheRest  	projects/Cli2/src/java/org/apache/commons/cli/PosixParser.java	1.0	53	53	1	replace	currentOption  =  Option.None.valueOf(tokens,  options);	  currentOption    =    Option.None.valueOf(tokens);    	non-compiled	[CE]  cannot  find  symbol  None	126	None	replace
509	[BUG]  [BUGGY]  currentOption  =  Option.None.valueOf(tokens,  null);  [CE]  cannot  find  symbol  None  [FE]                  UnrecognizedOptionException      [CONTEXT]      private  void  init()  {  eatTheRest  =  false;  tokens.clear();      [BUGGY]  currentOption  =  Option.None.valueOf(tokens,  null);  [BUGGY]      }  [CLASS]  PosixParser  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  ArrayList  tokens  Options  options  Option  currentOption  boolean  eatTheRest  	projects/Cli2/src/java/org/apache/commons/cli/PosixParser.java	1.0	53	53	1	replace	currentOption  =  Option.None.valueOf(tokens,  null);	  currentOption    =    Option.None.valueOf(tokens);    	non-compiled	[CE]  cannot  find  symbol  None	126	None	replace
510	[BUG]  [BUGGY]  currentOption  =  Option.None.valueOf(tokens,  true);  [CE]  cannot  find  symbol  None  [FE]                    UnrecognizedOptionException      [CONTEXT]      private  void  init()  {  eatTheRest  =  false;  tokens.clear();      [BUGGY]  currentOption  =  Option.None.valueOf(tokens,  true);  [BUGGY]      }  [CLASS]  PosixParser  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  ArrayList  tokens  Options  options  Option  currentOption  boolean  eatTheRest  	projects/Cli2/src/java/org/apache/commons/cli/PosixParser.java	1.0	53	53	1	replace	currentOption  =  Option.None.valueOf(tokens,  true);	  currentOption    =    Option.None.valueOf(tokens);    	non-compiled	[CE]  cannot  find  symbol  None	126	None	replace
511	[BUG]  [BUGGY]  [FE]  UnrecognizedOptionException  [FE]    UnrecognizedOptionException    [CONTEXT]      private  void  init()  {  eatTheRest  =  false;  tokens.clear();      [BUGGY]  if(tokens!=  null)  {  currentOption  =  Option.OK_STANDARD;  }  [BUGGY]      }  [CLASS]  PosixParser  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  ArrayList  tokens  Options  options  Option  currentOption  boolean  eatTheRest  	projects/Cli2/src/java/org/apache/commons/cli/PosixParser.java	1.0	53	53	1	add	if(tokens!=  null)  {  currentOption  =  Option.OK_STANDARD;  }	  currentOption    =    Option.OK_STANDARD;    if(currentOption!=    null)    {    currentOption    =    Option.OK_STANDARD;    }    	compilable	  [FE]  UnrecognizedOptionException  	86	1	replace
512	[BUG]  [BUGGY]  if(tokens!=  null)  {  currentOption  =  Option.OK_STANDARD;  }  [FE]  UnrecognizedOptionException  [FE]    UnrecognizedOptionException    [CONTEXT]      private  void  init()  {  eatTheRest  =  false;  tokens.clear();      [BUGGY]  if(tokens!=  null)  {  currentOption  =  Option.OK_STANDARD;  }  [BUGGY]      }  [CLASS]  PosixParser  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  ArrayList  tokens  Options  options  Option  currentOption  boolean  eatTheRest  	projects/Cli2/src/java/org/apache/commons/cli/PosixParser.java	1.0	53	53	1	replace	if(tokens!=  null)  {  currentOption  =  Option.OK_STANDARD;  }	  currentOption    =    Option.OK_STANDARD;    if(currentOption!=    null)    {    currentOption    =    Option.OK_STANDARD;    }    	compilable	  [FE]  UnrecognizedOptionException  	86	1	replace
513	[BUG]  [BUGGY]  if(tokens!=  null)  {  currentOption  =  Option.OK_STANDARD;  if(currentOption!=  null)  {  currentOption  =  Option.OK_STANDARD;  }  [CE]  illegal  start  of  expression  [FE]      UnrecognizedOptionException    [CONTEXT]      private  void  init()  {  eatTheRest  =  false;  tokens.clear();      [BUGGY]  if(tokens!=  null)  {  currentOption  =  Option.OK_STANDARD;  if(currentOption!=  null)  {  currentOption  =  Option.OK_STANDARD;  }  [BUGGY]      }  [CLASS]  PosixParser  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  ArrayList  tokens  Options  options  Option  currentOption  boolean  eatTheRest  	projects/Cli2/src/java/org/apache/commons/cli/PosixParser.java	1.0	53	53	1	replace	if(tokens!=  null)  {  currentOption  =  Option.OK_STANDARD;  if(currentOption!=  null)  {  currentOption  =  Option.OK_STANDARD;  }	  currentOption    =    Option.OK_STANDARD;    if(currentOption!=    null)    {    currentOption    =    Option.OK_STANDARD;    }    	non-compiled	[CE]  illegal  start  of  expression	86	None	replace
514	[BUG]  [BUGGY]  [FE]  UnrecognizedOptionException  [FE]        UnrecognizedOptionException    [CONTEXT]      private  void  init()  {  eatTheRest  =  false;  tokens.clear();      [BUGGY]  if(tokens!=  null)  {  currentOption  =  Option.OK_STANDARD;  }  else  {  tokens.clear();  }  [BUGGY]      }  [CLASS]  PosixParser  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  ArrayList  tokens  Options  options  Option  currentOption  boolean  eatTheRest  	projects/Cli2/src/java/org/apache/commons/cli/PosixParser.java	1.0	53	53	1	add	if(tokens!=  null)  {  currentOption  =  Option.OK_STANDARD;  }  else  {  tokens.clear();  }	  currentOption    =    Option.OK_STANDARD;    if(currentOption!=    null)    {    currentOption    =    Option.OK_STANDARD;    }    	compilable	  [FE]  UnrecognizedOptionException  	86	1	replace
515	[BUG]  [BUGGY]  if(tokens!=  null)  {  currentOption  =  Option.OK_STANDARD;  }  else  {  tokens.clear();  }  [FE]  UnrecognizedOptionException  [FE]        UnrecognizedOptionException    [CONTEXT]      private  void  init()  {  eatTheRest  =  false;  tokens.clear();      [BUGGY]  if(tokens!=  null)  {  currentOption  =  Option.OK_STANDARD;  }  else  {  tokens.clear();  }  [BUGGY]      }  [CLASS]  PosixParser  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  ArrayList  tokens  Options  options  Option  currentOption  boolean  eatTheRest  	projects/Cli2/src/java/org/apache/commons/cli/PosixParser.java	1.0	53	53	1	replace	if(tokens!=  null)  {  currentOption  =  Option.OK_STANDARD;  }  else  {  tokens.clear();  }	  currentOption    =    Option.OK_STANDARD;    if(currentOption!=    null)    {    currentOption    =    Option.OK_STANDARD;    }    	compilable	  [FE]  UnrecognizedOptionException  	86	1	replace
516	[BUG]  [BUGGY]  currentOption  =  Options.newInstance(options,  tokens);  [CE]  cannot  find  symbol  [FE]              UnrecognizedOptionException      [CONTEXT]      private  void  init()  {  eatTheRest  =  false;  tokens.clear();      [BUGGY]  currentOption  =  Options.newInstance(options,  tokens);  [BUGGY]      }  [CLASS]  PosixParser  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  ArrayList  tokens  Options  options  Option  currentOption  boolean  eatTheRest  	projects/Cli2/src/java/org/apache/commons/cli/PosixParser.java	1.0	53	53	1	replace	currentOption  =  Options.newInstance(options,  tokens);	  currentOption    =    Options.newInstance(options);    	non-compiled	[CE]  cannot  find  symbol	128	None	replace
517	[BUG]  [BUGGY]  currentOption  =  Options.newInstance(options,  options);  [CE]  cannot  find  symbol  [FE]                UnrecognizedOptionException      [CONTEXT]      private  void  init()  {  eatTheRest  =  false;  tokens.clear();      [BUGGY]  currentOption  =  Options.newInstance(options,  options);  [BUGGY]      }  [CLASS]  PosixParser  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  ArrayList  tokens  Options  options  Option  currentOption  boolean  eatTheRest  	projects/Cli2/src/java/org/apache/commons/cli/PosixParser.java	1.0	53	53	1	replace	currentOption  =  Options.newInstance(options,  options);	  currentOption    =    Options.newInstance(options);    	non-compiled	[CE]  cannot  find  symbol	128	None	replace
518	[BUG]  [BUGGY]  [FE]  UnrecognizedOptionException  [FE]              UnrecognizedOptionException      [CONTEXT]      private  void  init()  {  eatTheRest  =  false;  tokens.clear();      [BUGGY]  currentOption  =  Option.OK;  [BUGGY]      }  [CLASS]  PosixParser  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  ArrayList  tokens  Options  options  Option  currentOption  boolean  eatTheRest  	projects/Cli2/src/java/org/apache/commons/cli/PosixParser.java	1.0	53	53	1	add	currentOption  =  Option.OK;	  currentOption    =    Option.OPTIONAL;    	compilable	  [FE]  UnrecognizedOptionException  	147	1	replace
519	[BUG]  [BUGGY]  currentOption  =  Option.OK;  [FE]  UnrecognizedOptionException  [FE]              UnrecognizedOptionException      [CONTEXT]      private  void  init()  {  eatTheRest  =  false;  tokens.clear();      [BUGGY]  currentOption  =  Option.OK;  [BUGGY]      }  [CLASS]  PosixParser  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  ArrayList  tokens  Options  options  Option  currentOption  boolean  eatTheRest  	projects/Cli2/src/java/org/apache/commons/cli/PosixParser.java	1.0	53	53	1	replace	currentOption  =  Option.OK;	  currentOption    =    Option.OPTIONAL;    	compilable	  [FE]  UnrecognizedOptionException  	147	1	replace
520	[BUG]  [BUGGY]  [FE]  UnrecognizedOptionException  [FE]    UnrecognizedOptionException    [CONTEXT]      private  void  init()  {  eatTheRest  =  false;  tokens.clear();      [BUGGY]  if(!eatTheRest)  {  currentOption  =  Option.OK_STANDARD;  currentOption  =  Option.OK_STANDARD;  }  [BUGGY]      }  [CLASS]  PosixParser  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  ArrayList  tokens  Options  options  Option  currentOption  boolean  eatTheRest  	projects/Cli2/src/java/org/apache/commons/cli/PosixParser.java	1.0	53	53	1	add	if(!eatTheRest)  {  currentOption  =  Option.OK_STANDARD;  currentOption  =  Option.OK_STANDARD;  }	  currentOption    =    Option.OK_STANDARD;    currentOption    =    Option.OK_STANDARD;    	compilable	  [FE]  UnrecognizedOptionException  	80	1	replace
521	[BUG]  [BUGGY]  if(!eatTheRest)  {  currentOption  =  Option.OK_STANDARD;  currentOption  =  Option.OK_STANDARD;  }  [FE]  UnrecognizedOptionException  [FE]    UnrecognizedOptionException    [CONTEXT]      private  void  init()  {  eatTheRest  =  false;  tokens.clear();      [BUGGY]  if(!eatTheRest)  {  currentOption  =  Option.OK_STANDARD;  currentOption  =  Option.OK_STANDARD;  }  [BUGGY]      }  [CLASS]  PosixParser  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  ArrayList  tokens  Options  options  Option  currentOption  boolean  eatTheRest  	projects/Cli2/src/java/org/apache/commons/cli/PosixParser.java	1.0	53	53	1	replace	if(!eatTheRest)  {  currentOption  =  Option.OK_STANDARD;  currentOption  =  Option.OK_STANDARD;  }	  currentOption    =    Option.OK_STANDARD;    currentOption    =    Option.OK_STANDARD;    	compilable	  [FE]  UnrecognizedOptionException  	80	1	replace
522	[BUG]  [BUGGY]  [FE]  UnrecognizedOptionException  [FE]      UnrecognizedOptionException    [CONTEXT]      private  void  init()  {  eatTheRest  =  false;  tokens.clear();      [BUGGY]  if(!eatTheRest)  {  currentOption  =  Option.OK_STANDARD;  currentOption  =  Option.OK_STANDARD;  }  else  {  tokens.clear();  }  [BUGGY]      }  [CLASS]  PosixParser  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  ArrayList  tokens  Options  options  Option  currentOption  boolean  eatTheRest  	projects/Cli2/src/java/org/apache/commons/cli/PosixParser.java	1.0	53	53	1	add	if(!eatTheRest)  {  currentOption  =  Option.OK_STANDARD;  currentOption  =  Option.OK_STANDARD;  }  else  {  tokens.clear();  }	  currentOption    =    Option.OK_STANDARD;    currentOption    =    Option.OK_STANDARD;    	compilable	  [FE]  UnrecognizedOptionException  	80	1	replace
523	[BUG]  [BUGGY]  if(!eatTheRest)  {  currentOption  =  Option.OK_STANDARD;  currentOption  =  Option.OK_STANDARD;  }  else  {  tokens.clear();  }  [FE]  UnrecognizedOptionException  [FE]      UnrecognizedOptionException    [CONTEXT]      private  void  init()  {  eatTheRest  =  false;  tokens.clear();      [BUGGY]  if(!eatTheRest)  {  currentOption  =  Option.OK_STANDARD;  currentOption  =  Option.OK_STANDARD;  }  else  {  tokens.clear();  }  [BUGGY]      }  [CLASS]  PosixParser  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  ArrayList  tokens  Options  options  Option  currentOption  boolean  eatTheRest  	projects/Cli2/src/java/org/apache/commons/cli/PosixParser.java	1.0	53	53	1	replace	if(!eatTheRest)  {  currentOption  =  Option.OK_STANDARD;  currentOption  =  Option.OK_STANDARD;  }  else  {  tokens.clear();  }	  currentOption    =    Option.OK_STANDARD;    currentOption    =    Option.OK_STANDARD;    	compilable	  [FE]  UnrecognizedOptionException  	80	1	replace
524	[BUG]  [BUGGY]  [FE]  UnrecognizedOptionException  [FE]        UnrecognizedOptionException    [CONTEXT]      private  void  init()  {  eatTheRest  =  false;  tokens.clear();      [BUGGY]  if(!eatTheRest)  {  currentOption  =  Option.OK_STANDARD;  currentOption  =  Option.OK_STANDARD;  }  else  {  tokens.add(option);  }  [BUGGY]      }  [CLASS]  PosixParser  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  ArrayList  tokens  Options  options  Option  currentOption  boolean  eatTheRest  	projects/Cli2/src/java/org/apache/commons/cli/PosixParser.java	1.0	53	53	1	add	if(!eatTheRest)  {  currentOption  =  Option.OK_STANDARD;  currentOption  =  Option.OK_STANDARD;  }  else  {  tokens.add(option);  }	  currentOption    =    Option.OK_STANDARD;    currentOption    =    Option.OK_STANDARD;    	compilable	  [FE]  UnrecognizedOptionException  	80	1	replace
525	[BUG]  [BUGGY]  if(!eatTheRest)  {  currentOption  =  Option.OK_STANDARD;  currentOption  =  Option.OK_STANDARD;  }  else  {  tokens.add(option);  }  [FE]  UnrecognizedOptionException  [FE]        UnrecognizedOptionException    [CONTEXT]      private  void  init()  {  eatTheRest  =  false;  tokens.clear();      [BUGGY]  if(!eatTheRest)  {  currentOption  =  Option.OK_STANDARD;  currentOption  =  Option.OK_STANDARD;  }  else  {  tokens.add(option);  }  [BUGGY]      }  [CLASS]  PosixParser  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  ArrayList  tokens  Options  options  Option  currentOption  boolean  eatTheRest  	projects/Cli2/src/java/org/apache/commons/cli/PosixParser.java	1.0	53	53	1	replace	if(!eatTheRest)  {  currentOption  =  Option.OK_STANDARD;  currentOption  =  Option.OK_STANDARD;  }  else  {  tokens.add(option);  }	  currentOption    =    Option.OK_STANDARD;    currentOption    =    Option.OK_STANDARD;    	compilable	  [FE]  UnrecognizedOptionException  	80	1	replace
526	[BUG]  [BUGGY]  ArrayList  <  Option>  tokens  =  Lists.newArrayList(tokens.size());  [CE]  cannot  find  symbol  Lists  [FE]                    UnrecognizedOptionException      [CONTEXT]      private  void  init()  {  eatTheRest  =  false;  tokens.clear();      [BUGGY]  ArrayList  <  Option>  tokens  =  Lists.newArrayList(tokens.size());  [BUGGY]      currentOption  =  null;  }  [CLASS]  PosixParser  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  ArrayList  tokens  Options  options  Option  currentOption  boolean  eatTheRest  	projects/Cli2/src/java/org/apache/commons/cli/PosixParser.java	1.0	53	53	1	replace	ArrayList  <  Option>  tokens  =  Lists.newArrayList(tokens.size());	  ArrayList    <    Option>    tokens    =    Lists.newArrayList(tokens);    	non-compiled	[CE]  cannot  find  symbol  Lists	120	None	replace
527	[BUG]  [BUGGY]  ArrayList  <  Option>  tokens  =  Lists.newArrayList(tokens,  options);  [CE]  cannot  find  symbol  Lists  [FE]                      UnrecognizedOptionException      [CONTEXT]      private  void  init()  {  eatTheRest  =  false;  tokens.clear();      [BUGGY]  ArrayList  <  Option>  tokens  =  Lists.newArrayList(tokens,  options);  [BUGGY]      currentOption  =  null;  }  [CLASS]  PosixParser  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  ArrayList  tokens  Options  options  Option  currentOption  boolean  eatTheRest  	projects/Cli2/src/java/org/apache/commons/cli/PosixParser.java	1.0	53	53	1	replace	ArrayList  <  Option>  tokens  =  Lists.newArrayList(tokens,  options);	  ArrayList    <    Option>    tokens    =    Lists.newArrayList(tokens);    	non-compiled	[CE]  cannot  find  symbol  Lists	120	None	replace
528	[BUG]  [BUGGY]  [FE]  UnrecognizedOptionException  [FE]    UnrecognizedOptionException    [CONTEXT]      private  void  init()  {  eatTheRest  =  false;  tokens.clear();      [BUGGY]  tokens.remove( "-- ");  tokens.add( ",-- ");  [BUGGY]      currentOption  =  null;  }  [CLASS]  PosixParser  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  ArrayList  tokens  Options  options  Option  currentOption  boolean  eatTheRest  	projects/Cli2/src/java/org/apache/commons/cli/PosixParser.java	1.0	53	53	1	add	tokens.remove( "-- ");  tokens.add( ",-- ");	          tokens.add(       "--       ");    tokens.add(   ",--       ");    	compilable	  [FE]  UnrecognizedOptionException  	144	1	replace
529	[BUG]  [BUGGY]  tokens.remove( "-- ");  tokens.add( ",-- ");  [FE]  UnrecognizedOptionException  [FE]    UnrecognizedOptionException    [CONTEXT]      private  void  init()  {  eatTheRest  =  false;  tokens.clear();      [BUGGY]  tokens.remove( "-- ");  tokens.add( ",-- ");  [BUGGY]      currentOption  =  null;  }  [CLASS]  PosixParser  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  ArrayList  tokens  Options  options  Option  currentOption  boolean  eatTheRest  	projects/Cli2/src/java/org/apache/commons/cli/PosixParser.java	1.0	53	53	1	replace	tokens.remove( "-- ");  tokens.add( ",-- ");	          tokens.add(       "--       ");    tokens.add(   ",--       ");    	compilable	  [FE]  UnrecognizedOptionException  	144	1	replace
530	[BUG]  [BUGGY]  [FE]  UnrecognizedOptionException  [FE]    UnrecognizedOptionException    [CONTEXT]      private  void  init()  {  eatTheRest  =  false;  tokens.clear();      [BUGGY]          tokens.clear();    tokens.clear();  currentOption  =  null;  tokens.clear();  tokens.clear();  currentOption  =  null;  [BUGGY]      currentOption  =  null;  }  [CLASS]  PosixParser  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  ArrayList  tokens  Options  options  Option  currentOption  boolean  eatTheRest  	projects/Cli2/src/java/org/apache/commons/cli/PosixParser.java	1.0	53	53	1	add	                tokens.clear();        tokens.clear();    currentOption    =    null;    tokens.clear();  tokens.clear();  currentOption  =  null;	  	compilable	  [FE]  UnrecognizedOptionException  	65	1	add
531	[BUG]  [BUGGY]          tokens.clear();    tokens.clear();  currentOption  =  null;  tokens.clear();  tokens.clear();  currentOption  =  null;  [FE]  UnrecognizedOptionException  [FE]    UnrecognizedOptionException    [CONTEXT]      private  void  init()  {  eatTheRest  =  false;  tokens.clear();      [BUGGY]          tokens.clear();    tokens.clear();  currentOption  =  null;  tokens.clear();  tokens.clear();  currentOption  =  null;  [BUGGY]      currentOption  =  null;  }  [CLASS]  PosixParser  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  ArrayList  tokens  Options  options  Option  currentOption  boolean  eatTheRest  	projects/Cli2/src/java/org/apache/commons/cli/PosixParser.java	1.0	53	53	1	replace	                tokens.clear();        tokens.clear();    currentOption    =    null;    tokens.clear();  tokens.clear();  currentOption  =  null;	  	compilable	  [FE]  UnrecognizedOptionException  	65	1	add
532	[BUG]  [BUGGY]  [FE]  UnrecognizedOptionException  [FE]      UnrecognizedOptionException    [CONTEXT]      private  void  init()  {  eatTheRest  =  false;  tokens.clear();      [BUGGY]          tokens.clear();    tokens.clear();  currentOption  =  null;  if(!eatTheRest)  {  tokens.clear();  tokens.clear();  currentOption  =  null;  }  [BUGGY]      currentOption  =  null;  }  [CLASS]  PosixParser  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  ArrayList  tokens  Options  options  Option  currentOption  boolean  eatTheRest  	projects/Cli2/src/java/org/apache/commons/cli/PosixParser.java	1.0	53	53	1	add	                tokens.clear();        tokens.clear();    currentOption    =    null;    if(!eatTheRest)  {  tokens.clear();  tokens.clear();  currentOption  =  null;  }	  	compilable	  [FE]  UnrecognizedOptionException  	65	1	add
533	[BUG]  [BUGGY]          tokens.clear();    tokens.clear();  currentOption  =  null;  if(!eatTheRest)  {  tokens.clear();  tokens.clear();  currentOption  =  null;  }  [FE]  UnrecognizedOptionException  [FE]      UnrecognizedOptionException    [CONTEXT]      private  void  init()  {  eatTheRest  =  false;  tokens.clear();      [BUGGY]          tokens.clear();    tokens.clear();  currentOption  =  null;  if(!eatTheRest)  {  tokens.clear();  tokens.clear();  currentOption  =  null;  }  [BUGGY]      currentOption  =  null;  }  [CLASS]  PosixParser  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  ArrayList  tokens  Options  options  Option  currentOption  boolean  eatTheRest  	projects/Cli2/src/java/org/apache/commons/cli/PosixParser.java	1.0	53	53	1	replace	                tokens.clear();        tokens.clear();    currentOption    =    null;    if(!eatTheRest)  {  tokens.clear();  tokens.clear();  currentOption  =  null;  }	  	compilable	  [FE]  UnrecognizedOptionException  	65	1	add
534	[BUG]  [BUGGY]  [FE]  UnrecognizedOptionException  [FE]        UnrecognizedOptionException    [CONTEXT]      private  void  init()  {  eatTheRest  =  false;  tokens.clear();      [BUGGY]          tokens.clear();    tokens.clear();  currentOption  =  null;  tokens.clear();  tokens.clear();  [BUGGY]      currentOption  =  null;  }  [CLASS]  PosixParser  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  ArrayList  tokens  Options  options  Option  currentOption  boolean  eatTheRest  	projects/Cli2/src/java/org/apache/commons/cli/PosixParser.java	1.0	53	53	1	add	                tokens.clear();        tokens.clear();    currentOption    =    null;    tokens.clear();  tokens.clear();	  	compilable	  [FE]  UnrecognizedOptionException  	65	1	add
535	[BUG]  [BUGGY]          tokens.clear();    tokens.clear();  currentOption  =  null;  tokens.clear();  tokens.clear();  [FE]  UnrecognizedOptionException  [FE]        UnrecognizedOptionException    [CONTEXT]      private  void  init()  {  eatTheRest  =  false;  tokens.clear();      [BUGGY]          tokens.clear();    tokens.clear();  currentOption  =  null;  tokens.clear();  tokens.clear();  [BUGGY]      currentOption  =  null;  }  [CLASS]  PosixParser  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  ArrayList  tokens  Options  options  Option  currentOption  boolean  eatTheRest  	projects/Cli2/src/java/org/apache/commons/cli/PosixParser.java	1.0	53	53	1	replace	                tokens.clear();        tokens.clear();    currentOption    =    null;    tokens.clear();  tokens.clear();	  	compilable	  [FE]  UnrecognizedOptionException  	65	1	add
536	[BUG]  [BUGGY]          tokens.clear();    tokens.clear();  currentOption  =  null;  tokens.remove();  tokens.clear();  currentOption  =  null;  [CE]  no  suitable  method  found  for  remove()  [FE]          UnrecognizedOptionException    [CONTEXT]      private  void  init()  {  eatTheRest  =  false;  tokens.clear();      [BUGGY]          tokens.clear();    tokens.clear();  currentOption  =  null;  tokens.remove();  tokens.clear();  currentOption  =  null;  [BUGGY]      currentOption  =  null;  }  [CLASS]  PosixParser  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  ArrayList  tokens  Options  options  Option  currentOption  boolean  eatTheRest  	projects/Cli2/src/java/org/apache/commons/cli/PosixParser.java	1.0	53	53	1	replace	                tokens.clear();        tokens.clear();    currentOption    =    null;    tokens.remove();  tokens.clear();  currentOption  =  null;	  	non-compiled	[CE]  no  suitable  method  found  for  remove()	65	None	add
537	[BUG]  [BUGGY]          tokens.clear();    tokens.clear();  currentOption  =  null;  ArrayList  <  Option>  tokens  =  new  ArrayList  <  Option>(tokens.size());  [CE]  variable  tokens  might  not  have  been  initialized  [FE]            UnrecognizedOptionException    [CONTEXT]      private  void  init()  {  eatTheRest  =  false;  tokens.clear();      [BUGGY]          tokens.clear();    tokens.clear();  currentOption  =  null;  ArrayList  <  Option>  tokens  =  new  ArrayList  <  Option>(tokens.size());  [BUGGY]      currentOption  =  null;  }  [CLASS]  PosixParser  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  ArrayList  tokens  Options  options  Option  currentOption  boolean  eatTheRest  	projects/Cli2/src/java/org/apache/commons/cli/PosixParser.java	1.0	53	53	1	replace	                tokens.clear();        tokens.clear();    currentOption    =    null;    ArrayList  <  Option>  tokens  =  new  ArrayList  <  Option>(tokens.size());	  	non-compiled	[CE]  variable  tokens  might  not  have  been  initialized	65	None	add
538	[BUG]  [BUGGY]  [FE]  UnrecognizedOptionException  [FE]    UnrecognizedOptionException    [CONTEXT]      private  void  init()  {  eatTheRest  =  false;  tokens.clear();      [BUGGY]          tokens.clear();    currentOption    =    null;    if(eatTheRest)  {  tokens.clear();  currentOption  =  null;  }  tokens.clear();  currentOption  =  null;  [BUGGY]      currentOption  =  null;  }  [CLASS]  PosixParser  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  ArrayList  tokens  Options  options  Option  currentOption  boolean  eatTheRest  	projects/Cli2/src/java/org/apache/commons/cli/PosixParser.java	1.0	53	53	1	add	                tokens.clear();        currentOption        =        null;        if(eatTheRest)    {    tokens.clear();    currentOption    =    null;    }    tokens.clear();  currentOption  =  null;	  	compilable	  [FE]  UnrecognizedOptionException  	155	1	add
539	[BUG]  [BUGGY]          tokens.clear();    currentOption    =    null;    if(eatTheRest)  {  tokens.clear();  currentOption  =  null;  }  tokens.clear();  currentOption  =  null;  [FE]  UnrecognizedOptionException  [FE]    UnrecognizedOptionException    [CONTEXT]      private  void  init()  {  eatTheRest  =  false;  tokens.clear();      [BUGGY]          tokens.clear();    currentOption    =    null;    if(eatTheRest)  {  tokens.clear();  currentOption  =  null;  }  tokens.clear();  currentOption  =  null;  [BUGGY]      currentOption  =  null;  }  [CLASS]  PosixParser  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  ArrayList  tokens  Options  options  Option  currentOption  boolean  eatTheRest  	projects/Cli2/src/java/org/apache/commons/cli/PosixParser.java	1.0	53	53	1	replace	                tokens.clear();        currentOption        =        null;        if(eatTheRest)    {    tokens.clear();    currentOption    =    null;    }    tokens.clear();  currentOption  =  null;	  	compilable	  [FE]  UnrecognizedOptionException  	155	1	add
540	[BUG]  [BUGGY]  [FE]  UnrecognizedOptionException  [FE]      UnrecognizedOptionException    [CONTEXT]      private  void  init()  {  eatTheRest  =  false;  tokens.clear();      [BUGGY]          tokens.clear();    currentOption    =    null;    if(eatTheRest)  {  tokens.clear();  currentOption  =  null;  }  tokens.clear();  currentOption  =  null;  if(eatTheRest)  {  tokens.clear();  currentOption  =  null;  }  [BUGGY]      currentOption  =  null;  }  [CLASS]  PosixParser  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  ArrayList  tokens  Options  options  Option  currentOption  boolean  eatTheRest  	projects/Cli2/src/java/org/apache/commons/cli/PosixParser.java	1.0	53	53	1	add	                tokens.clear();        currentOption        =        null;        if(eatTheRest)    {    tokens.clear();    currentOption    =    null;    }    tokens.clear();  currentOption  =  null;  if(eatTheRest)  {  tokens.clear();  currentOption  =  null;  }	  	compilable	  [FE]  UnrecognizedOptionException  	155	1	add
541	[BUG]  [BUGGY]          tokens.clear();    currentOption    =    null;    if(eatTheRest)  {  tokens.clear();  currentOption  =  null;  }  tokens.clear();  currentOption  =  null;  if(eatTheRest)  {  tokens.clear();  currentOption  =  null;  }  [FE]  UnrecognizedOptionException  [FE]      UnrecognizedOptionException    [CONTEXT]      private  void  init()  {  eatTheRest  =  false;  tokens.clear();      [BUGGY]          tokens.clear();    currentOption    =    null;    if(eatTheRest)  {  tokens.clear();  currentOption  =  null;  }  tokens.clear();  currentOption  =  null;  if(eatTheRest)  {  tokens.clear();  currentOption  =  null;  }  [BUGGY]      currentOption  =  null;  }  [CLASS]  PosixParser  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  ArrayList  tokens  Options  options  Option  currentOption  boolean  eatTheRest  	projects/Cli2/src/java/org/apache/commons/cli/PosixParser.java	1.0	53	53	1	replace	                tokens.clear();        currentOption        =        null;        if(eatTheRest)    {    tokens.clear();    currentOption    =    null;    }    tokens.clear();  currentOption  =  null;  if(eatTheRest)  {  tokens.clear();  currentOption  =  null;  }	  	compilable	  [FE]  UnrecognizedOptionException  	155	1	add
542	[BUG]  [BUGGY]  [FE]  UnrecognizedOptionException  [FE]        UnrecognizedOptionException    [CONTEXT]      private  void  init()  {  eatTheRest  =  false;  tokens.clear();      [BUGGY]          tokens.clear();    currentOption    =    null;    if(eatTheRest)  {  tokens.clear();  currentOption  =  null;  }  if(eatTheRest)  {  tokens.clear();  currentOption  =  null;  }  [BUGGY]      currentOption  =  null;  }  [CLASS]  PosixParser  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  ArrayList  tokens  Options  options  Option  currentOption  boolean  eatTheRest  	projects/Cli2/src/java/org/apache/commons/cli/PosixParser.java	1.0	53	53	1	add	                tokens.clear();        currentOption        =        null;        if(eatTheRest)    {    tokens.clear();    currentOption    =    null;    }    if(eatTheRest)  {  tokens.clear();  currentOption  =  null;  }	  	compilable	  [FE]  UnrecognizedOptionException  	155	1	add
543	[BUG]  [BUGGY]          tokens.clear();    currentOption    =    null;    if(eatTheRest)  {  tokens.clear();  currentOption  =  null;  }  if(eatTheRest)  {  tokens.clear();  currentOption  =  null;  }  [FE]  UnrecognizedOptionException  [FE]        UnrecognizedOptionException    [CONTEXT]      private  void  init()  {  eatTheRest  =  false;  tokens.clear();      [BUGGY]          tokens.clear();    currentOption    =    null;    if(eatTheRest)  {  tokens.clear();  currentOption  =  null;  }  if(eatTheRest)  {  tokens.clear();  currentOption  =  null;  }  [BUGGY]      currentOption  =  null;  }  [CLASS]  PosixParser  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  ArrayList  tokens  Options  options  Option  currentOption  boolean  eatTheRest  	projects/Cli2/src/java/org/apache/commons/cli/PosixParser.java	1.0	53	53	1	replace	                tokens.clear();        currentOption        =        null;        if(eatTheRest)    {    tokens.clear();    currentOption    =    null;    }    if(eatTheRest)  {  tokens.clear();  currentOption  =  null;  }	  	compilable	  [FE]  UnrecognizedOptionException  	155	1	add
544	[BUG]  [BUGGY]  [FE]  UnrecognizedOptionException  [FE]          UnrecognizedOptionException    [CONTEXT]      private  void  init()  {  eatTheRest  =  false;  tokens.clear();      [BUGGY]          tokens.clear();    currentOption    =    null;    if(eatTheRest)  {  tokens.clear();  currentOption  =  null;  }  tokens.clear();  [BUGGY]      currentOption  =  null;  }  [CLASS]  PosixParser  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  ArrayList  tokens  Options  options  Option  currentOption  boolean  eatTheRest  	projects/Cli2/src/java/org/apache/commons/cli/PosixParser.java	1.0	53	53	1	add	                tokens.clear();        currentOption        =        null;        if(eatTheRest)    {    tokens.clear();    currentOption    =    null;    }    tokens.clear();	  	compilable	  [FE]  UnrecognizedOptionException  	155	1	add
545	[BUG]  [BUGGY]          tokens.clear();    currentOption    =    null;    if(eatTheRest)  {  tokens.clear();  currentOption  =  null;  }  tokens.clear();  [FE]  UnrecognizedOptionException  [FE]          UnrecognizedOptionException    [CONTEXT]      private  void  init()  {  eatTheRest  =  false;  tokens.clear();      [BUGGY]          tokens.clear();    currentOption    =    null;    if(eatTheRest)  {  tokens.clear();  currentOption  =  null;  }  tokens.clear();  [BUGGY]      currentOption  =  null;  }  [CLASS]  PosixParser  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  ArrayList  tokens  Options  options  Option  currentOption  boolean  eatTheRest  	projects/Cli2/src/java/org/apache/commons/cli/PosixParser.java	1.0	53	53	1	replace	                tokens.clear();        currentOption        =        null;        if(eatTheRest)    {    tokens.clear();    currentOption    =    null;    }    tokens.clear();	  	compilable	  [FE]  UnrecognizedOptionException  	155	1	add
546	[BUG]  [BUGGY]  [FE]  UnrecognizedOptionException  [FE]            UnrecognizedOptionException    [CONTEXT]      private  void  init()  {  eatTheRest  =  false;  tokens.clear();      [BUGGY]          tokens.clear();    currentOption    =    null;    if(eatTheRest)  {  tokens.clear();  currentOption  =  null;  }  if(!eatTheRest)  {  tokens.clear();  currentOption  =  null;  }  [BUGGY]      currentOption  =  null;  }  [CLASS]  PosixParser  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  ArrayList  tokens  Options  options  Option  currentOption  boolean  eatTheRest  	projects/Cli2/src/java/org/apache/commons/cli/PosixParser.java	1.0	53	53	1	add	                tokens.clear();        currentOption        =        null;        if(eatTheRest)    {    tokens.clear();    currentOption    =    null;    }    if(!eatTheRest)  {  tokens.clear();  currentOption  =  null;  }	  	compilable	  [FE]  UnrecognizedOptionException  	155	1	add
547	[BUG]  [BUGGY]          tokens.clear();    currentOption    =    null;    if(eatTheRest)  {  tokens.clear();  currentOption  =  null;  }  if(!eatTheRest)  {  tokens.clear();  currentOption  =  null;  }  [FE]  UnrecognizedOptionException  [FE]            UnrecognizedOptionException    [CONTEXT]      private  void  init()  {  eatTheRest  =  false;  tokens.clear();      [BUGGY]          tokens.clear();    currentOption    =    null;    if(eatTheRest)  {  tokens.clear();  currentOption  =  null;  }  if(!eatTheRest)  {  tokens.clear();  currentOption  =  null;  }  [BUGGY]      currentOption  =  null;  }  [CLASS]  PosixParser  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  ArrayList  tokens  Options  options  Option  currentOption  boolean  eatTheRest  	projects/Cli2/src/java/org/apache/commons/cli/PosixParser.java	1.0	53	53	1	replace	                tokens.clear();        currentOption        =        null;        if(eatTheRest)    {    tokens.clear();    currentOption    =    null;    }    if(!eatTheRest)  {  tokens.clear();  currentOption  =  null;  }	  	compilable	  [FE]  UnrecognizedOptionException  	155	1	add
548	[BUG]  [BUGGY]  ArrayList  <  Option>  tokens  =  Lists.newArrayList(options,  options);  [CE]  cannot  find  symbol  Lists  [FE]                      UnrecognizedOptionException      [CONTEXT]      private  void  init()  {  eatTheRest  =  false;  tokens.clear();      [BUGGY]  ArrayList  <  Option>  tokens  =  Lists.newArrayList(options,  options);  [BUGGY]      currentOption  =  null;  }  [CLASS]  PosixParser  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  ArrayList  tokens  Options  options  Option  currentOption  boolean  eatTheRest  	projects/Cli2/src/java/org/apache/commons/cli/PosixParser.java	1.0	53	53	1	replace	ArrayList  <  Option>  tokens  =  Lists.newArrayList(options,  options);	  ArrayList    <    Option>    tokens    =    Lists.newArrayList(options);    	non-compiled	[CE]  cannot  find  symbol  Lists	121	None	replace
549	[BUG]  [BUGGY]  ArrayList  <  Option>  tokens  =  new  ArrayList  <  Option>();  currentOption  =  options.getOption(options);  [CE]  method  getOption  in  class  Options  cannot  be  applied  to  given  types;  [FE]              UnrecognizedOptionException      [CONTEXT]      private  void  init()  {  eatTheRest  =  false;  tokens.clear();      [BUGGY]  ArrayList  <  Option>  tokens  =  new  ArrayList  <  Option>();  currentOption  =  options.getOption(options);  [BUGGY]      currentOption  =  null;  }  [CLASS]  PosixParser  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  ArrayList  tokens  Options  options  Option  currentOption  boolean  eatTheRest  	projects/Cli2/src/java/org/apache/commons/cli/PosixParser.java	1.0	53	53	1	replace	ArrayList  <  Option>  tokens  =  new  ArrayList  <  Option>();  currentOption  =  options.getOption(options);	          ArrayList    <    Option>    tokens    =    new    ArrayList    <    Option>();    Option    currentOption    =    options.getOption(options);    	non-compiled	[CE]  method  getOption  in  class  Options  cannot  be  applied  to  given  types;	112	None	replace
550	[BUG]  [BUGGY]  [FE]  UnrecognizedOptionException  [FE]    UnrecognizedOptionException    [CONTEXT]      private  void  init()  {  eatTheRest  =  false;  tokens.clear();      [BUGGY]  currentOption    =    Option.OK_STANDARD;    tokens.clear();  currentOption  =  Option.OK_STANDARD;  currentOption  =  Option.OK_STANDARD;  tokens.clear();  currentOption  =  Option.OK_STANDARD;  [BUGGY]      }  [CLASS]  PosixParser  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  ArrayList  tokens  Options  options  Option  currentOption  boolean  eatTheRest  	projects/Cli2/src/java/org/apache/commons/cli/PosixParser.java	1.0	53	53	1	add	currentOption        =        Option.OK_STANDARD;        tokens.clear();    currentOption    =    Option.OK_STANDARD;    currentOption  =  Option.OK_STANDARD;  tokens.clear();  currentOption  =  Option.OK_STANDARD;	  	compilable	  [FE]  UnrecognizedOptionException  	83	1	add
551	[BUG]  [BUGGY]  currentOption    =    Option.OK_STANDARD;    tokens.clear();  currentOption  =  Option.OK_STANDARD;  currentOption  =  Option.OK_STANDARD;  tokens.clear();  currentOption  =  Option.OK_STANDARD;  [FE]  UnrecognizedOptionException  [FE]    UnrecognizedOptionException    [CONTEXT]      private  void  init()  {  eatTheRest  =  false;  tokens.clear();      [BUGGY]  currentOption    =    Option.OK_STANDARD;    tokens.clear();  currentOption  =  Option.OK_STANDARD;  currentOption  =  Option.OK_STANDARD;  tokens.clear();  currentOption  =  Option.OK_STANDARD;  [BUGGY]      }  [CLASS]  PosixParser  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  ArrayList  tokens  Options  options  Option  currentOption  boolean  eatTheRest  	projects/Cli2/src/java/org/apache/commons/cli/PosixParser.java	1.0	53	53	1	replace	currentOption        =        Option.OK_STANDARD;        tokens.clear();    currentOption    =    Option.OK_STANDARD;    currentOption  =  Option.OK_STANDARD;  tokens.clear();  currentOption  =  Option.OK_STANDARD;	  	compilable	  [FE]  UnrecognizedOptionException  	83	1	add
552	[BUG]  [BUGGY]  [FE]  UnrecognizedOptionException  [FE]      UnrecognizedOptionException    [CONTEXT]      private  void  init()  {  eatTheRest  =  false;  tokens.clear();      [BUGGY]  currentOption    =    Option.OK_STANDARD;    tokens.clear();  currentOption  =  Option.OK_STANDARD;  tokens.clear();  currentOption  =  Option.OK_STANDARD;  [BUGGY]      }  [CLASS]  PosixParser  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  ArrayList  tokens  Options  options  Option  currentOption  boolean  eatTheRest  	projects/Cli2/src/java/org/apache/commons/cli/PosixParser.java	1.0	53	53	1	add	currentOption        =        Option.OK_STANDARD;        tokens.clear();    currentOption    =    Option.OK_STANDARD;    tokens.clear();  currentOption  =  Option.OK_STANDARD;	  	compilable	  [FE]  UnrecognizedOptionException  	83	1	add
553	[BUG]  [BUGGY]  currentOption    =    Option.OK_STANDARD;    tokens.clear();  currentOption  =  Option.OK_STANDARD;  tokens.clear();  currentOption  =  Option.OK_STANDARD;  [FE]  UnrecognizedOptionException  [FE]      UnrecognizedOptionException    [CONTEXT]      private  void  init()  {  eatTheRest  =  false;  tokens.clear();      [BUGGY]  currentOption    =    Option.OK_STANDARD;    tokens.clear();  currentOption  =  Option.OK_STANDARD;  tokens.clear();  currentOption  =  Option.OK_STANDARD;  [BUGGY]      }  [CLASS]  PosixParser  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  ArrayList  tokens  Options  options  Option  currentOption  boolean  eatTheRest  	projects/Cli2/src/java/org/apache/commons/cli/PosixParser.java	1.0	53	53	1	replace	currentOption        =        Option.OK_STANDARD;        tokens.clear();    currentOption    =    Option.OK_STANDARD;    tokens.clear();  currentOption  =  Option.OK_STANDARD;	  	compilable	  [FE]  UnrecognizedOptionException  	83	1	add
554	[BUG]  [BUGGY]  [FE]  UnrecognizedOptionException  [FE]        UnrecognizedOptionException    [CONTEXT]      private  void  init()  {  eatTheRest  =  false;  tokens.clear();      [BUGGY]  currentOption    =    Option.OK_STANDARD;    tokens.clear();  currentOption  =  Option.OK_STANDARD;  currentOption  =  Option.OK_STANDARD;  tokens.clear();  [BUGGY]      }  [CLASS]  PosixParser  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  ArrayList  tokens  Options  options  Option  currentOption  boolean  eatTheRest  	projects/Cli2/src/java/org/apache/commons/cli/PosixParser.java	1.0	53	53	1	add	currentOption        =        Option.OK_STANDARD;        tokens.clear();    currentOption    =    Option.OK_STANDARD;    currentOption  =  Option.OK_STANDARD;  tokens.clear();	  	compilable	  [FE]  UnrecognizedOptionException  	83	1	add
555	[BUG]  [BUGGY]  currentOption    =    Option.OK_STANDARD;    tokens.clear();  currentOption  =  Option.OK_STANDARD;  currentOption  =  Option.OK_STANDARD;  tokens.clear();  [FE]  UnrecognizedOptionException  [FE]        UnrecognizedOptionException    [CONTEXT]      private  void  init()  {  eatTheRest  =  false;  tokens.clear();      [BUGGY]  currentOption    =    Option.OK_STANDARD;    tokens.clear();  currentOption  =  Option.OK_STANDARD;  currentOption  =  Option.OK_STANDARD;  tokens.clear();  [BUGGY]      }  [CLASS]  PosixParser  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  ArrayList  tokens  Options  options  Option  currentOption  boolean  eatTheRest  	projects/Cli2/src/java/org/apache/commons/cli/PosixParser.java	1.0	53	53	1	replace	currentOption        =        Option.OK_STANDARD;        tokens.clear();    currentOption    =    Option.OK_STANDARD;    currentOption  =  Option.OK_STANDARD;  tokens.clear();	  	compilable	  [FE]  UnrecognizedOptionException  	83	1	add
556	[BUG]  [BUGGY]  [FE]  UnrecognizedOptionException  [FE]          UnrecognizedOptionException    [CONTEXT]      private  void  init()  {  eatTheRest  =  false;  tokens.clear();      [BUGGY]  currentOption    =    Option.OK_STANDARD;    tokens.clear();  currentOption  =  Option.OK_STANDARD;  eatTheRest  =  false;  tokens.clear();  currentOption  =  Option.OK_STANDARD;  [BUGGY]      }  [CLASS]  PosixParser  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  ArrayList  tokens  Options  options  Option  currentOption  boolean  eatTheRest  	projects/Cli2/src/java/org/apache/commons/cli/PosixParser.java	1.0	53	53	1	add	currentOption        =        Option.OK_STANDARD;        tokens.clear();    currentOption    =    Option.OK_STANDARD;    eatTheRest  =  false;  tokens.clear();  currentOption  =  Option.OK_STANDARD;	  	compilable	  [FE]  UnrecognizedOptionException  	83	1	add
557	[BUG]  [BUGGY]  currentOption    =    Option.OK_STANDARD;    tokens.clear();  currentOption  =  Option.OK_STANDARD;  eatTheRest  =  false;  tokens.clear();  currentOption  =  Option.OK_STANDARD;  [FE]  UnrecognizedOptionException  [FE]          UnrecognizedOptionException    [CONTEXT]      private  void  init()  {  eatTheRest  =  false;  tokens.clear();      [BUGGY]  currentOption    =    Option.OK_STANDARD;    tokens.clear();  currentOption  =  Option.OK_STANDARD;  eatTheRest  =  false;  tokens.clear();  currentOption  =  Option.OK_STANDARD;  [BUGGY]      }  [CLASS]  PosixParser  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  ArrayList  tokens  Options  options  Option  currentOption  boolean  eatTheRest  	projects/Cli2/src/java/org/apache/commons/cli/PosixParser.java	1.0	53	53	1	replace	currentOption        =        Option.OK_STANDARD;        tokens.clear();    currentOption    =    Option.OK_STANDARD;    eatTheRest  =  false;  tokens.clear();  currentOption  =  Option.OK_STANDARD;	  	compilable	  [FE]  UnrecognizedOptionException  	83	1	add
558	[BUG]  [BUGGY]  ArrayList  <  Option>  tokens  =  new  ArrayList  <  Option>(tokens.size());  Option  option  =  options.getOption(this);  [CE]  method  getOption  in  class  Options  cannot  be  applied  to  given  types;  [FE]          UnrecognizedOptionException      [CONTEXT]      private  void  init()  {  eatTheRest  =  false;  tokens.clear();      [BUGGY]  ArrayList  <  Option>  tokens  =  new  ArrayList  <  Option>(tokens.size());  Option  option  =  options.getOption(this);  [BUGGY]      currentOption  =  null;  }  [CLASS]  PosixParser  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  ArrayList  tokens  Options  options  Option  currentOption  boolean  eatTheRest  	projects/Cli2/src/java/org/apache/commons/cli/PosixParser.java	1.0	53	53	1	replace	ArrayList  <  Option>  tokens  =  new  ArrayList  <  Option>(tokens.size());  Option  option  =  options.getOption(this);	          ArrayList    <    Option>    tokens    =    new    ArrayList    <    Option>();    Option    option    =    options.getOption(this);    	non-compiled	[CE]  method  getOption  in  class  Options  cannot  be  applied  to  given  types;	161	None	replace
559	[BUG]  [BUGGY]  ArrayList  <  Option>  tokens  =  new  ArrayList  <  Option>();  Options  option  =  options.getOption(this,  options);  [CE]  method  getOption  in  class  Options  cannot  be  applied  to  given  types;  [FE]            UnrecognizedOptionException      [CONTEXT]      private  void  init()  {  eatTheRest  =  false;  tokens.clear();      [BUGGY]  ArrayList  <  Option>  tokens  =  new  ArrayList  <  Option>();  Options  option  =  options.getOption(this,  options);  [BUGGY]      currentOption  =  null;  }  [CLASS]  PosixParser  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  ArrayList  tokens  Options  options  Option  currentOption  boolean  eatTheRest  	projects/Cli2/src/java/org/apache/commons/cli/PosixParser.java	1.0	53	53	1	replace	ArrayList  <  Option>  tokens  =  new  ArrayList  <  Option>();  Options  option  =  options.getOption(this,  options);	          ArrayList    <    Option>    tokens    =    new    ArrayList    <    Option>();    Option    option    =    options.getOption(this);    	non-compiled	[CE]  method  getOption  in  class  Options  cannot  be  applied  to  given  types;	161	None	replace
560	[BUG]  [BUGGY]  ArrayList  <  Option>  tokens  =  new  ArrayList  <  Option>();  options.getOption(this,  options);  [CE]  method  getOption  in  class  Options  cannot  be  applied  to  given  types;  [FE]              UnrecognizedOptionException      [CONTEXT]      private  void  init()  {  eatTheRest  =  false;  tokens.clear();      [BUGGY]  ArrayList  <  Option>  tokens  =  new  ArrayList  <  Option>();  options.getOption(this,  options);  [BUGGY]      currentOption  =  null;  }  [CLASS]  PosixParser  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  ArrayList  tokens  Options  options  Option  currentOption  boolean  eatTheRest  	projects/Cli2/src/java/org/apache/commons/cli/PosixParser.java	1.0	53	53	1	replace	ArrayList  <  Option>  tokens  =  new  ArrayList  <  Option>();  options.getOption(this,  options);	          ArrayList    <    Option>    tokens    =    new    ArrayList    <    Option>();    Option    option    =    options.getOption(this);    	non-compiled	[CE]  method  getOption  in  class  Options  cannot  be  applied  to  given  types;	161	None	replace
561	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]    UnrecognizedOptionException    [CONTEXT]      private  void  init()  {  eatTheRest  =  false;  tokens.clear();      [BUGGY]  if(!eatTheRest)  {  tokens.add( "-- ");  tokens.add( "-- ");  eatTheRest  =  false;  }  [BUGGY]      currentOption  =  null;  }  [CLASS]  PosixParser  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  ArrayList  tokens  Options  options  Option  currentOption  boolean  eatTheRest  	projects/Cli2/src/java/org/apache/commons/cli/PosixParser.java	1.0	53	53	1	add	if(!eatTheRest)  {  tokens.add( "-- ");  tokens.add( "-- ");  eatTheRest  =  false;  }	          tokens.add(       "--       ");    tokens.add(   "--       ");    eatTheRest    =    false;    	compilable	  [FE]  ComparisonFailure  	123	1	replace
562	[BUG]  [BUGGY]  if(!eatTheRest)  {  tokens.add( "-- ");  tokens.add( "-- ");  eatTheRest  =  false;  }  [FE]  ComparisonFailure  [FE]    UnrecognizedOptionException    [CONTEXT]      private  void  init()  {  eatTheRest  =  false;  tokens.clear();      [BUGGY]  if(!eatTheRest)  {  tokens.add( "-- ");  tokens.add( "-- ");  eatTheRest  =  false;  }  [BUGGY]      currentOption  =  null;  }  [CLASS]  PosixParser  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  ArrayList  tokens  Options  options  Option  currentOption  boolean  eatTheRest  	projects/Cli2/src/java/org/apache/commons/cli/PosixParser.java	1.0	53	53	1	replace	if(!eatTheRest)  {  tokens.add( "-- ");  tokens.add( "-- ");  eatTheRest  =  false;  }	          tokens.add(       "--       ");    tokens.add(   "--       ");    eatTheRest    =    false;    	compilable	  [FE]  ComparisonFailure  	123	1	replace
563	[BUG]  [BUGGY]  currentOption  =  options.size()  -  1;  [CE]  cannot  find  symbol  [FE]              UnrecognizedOptionException      [CONTEXT]      private  void  init()  {  eatTheRest  =  false;  tokens.clear();      [BUGGY]  currentOption  =  options.size()  -  1;  [BUGGY]      }  [CLASS]  PosixParser  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  ArrayList  tokens  Options  options  Option  currentOption  boolean  eatTheRest  	projects/Cli2/src/java/org/apache/commons/cli/PosixParser.java	1.0	53	53	1	replace	currentOption  =  options.size()  -  1;	  currentOption    =    options.size();    	non-compiled	[CE]  cannot  find  symbol	29	None	replace
564	[BUG]  [BUGGY]  currentOption  =  options.size()  +  1;  [CE]  cannot  find  symbol  [FE]                UnrecognizedOptionException      [CONTEXT]      private  void  init()  {  eatTheRest  =  false;  tokens.clear();      [BUGGY]  currentOption  =  options.size()  +  1;  [BUGGY]      }  [CLASS]  PosixParser  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  ArrayList  tokens  Options  options  Option  currentOption  boolean  eatTheRest  	projects/Cli2/src/java/org/apache/commons/cli/PosixParser.java	1.0	53	53	1	replace	currentOption  =  options.size()  +  1;	  currentOption    =    options.size();    	non-compiled	[CE]  cannot  find  symbol	29	None	replace
565	[BUG]  [BUGGY]  currentOption  =  tokens.size();  [CE]  incompatible  types  [FE]                  UnrecognizedOptionException      [CONTEXT]      private  void  init()  {  eatTheRest  =  false;  tokens.clear();      [BUGGY]  currentOption  =  tokens.size();  [BUGGY]      }  [CLASS]  PosixParser  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  ArrayList  tokens  Options  options  Option  currentOption  boolean  eatTheRest  	projects/Cli2/src/java/org/apache/commons/cli/PosixParser.java	1.0	53	53	1	replace	currentOption  =  tokens.size();	  currentOption    =    options.size();    	non-compiled	[CE]  incompatible  types	29	None	replace
566	[BUG]  [BUGGY]  List  <  Option>  tokens  =  new  LinkedList  <  Option>(tokens.size());  [CE]  cannot  find  symbol  [FE]                  UnrecognizedOptionException      [CONTEXT]      private  void  init()  {  eatTheRest  =  false;  tokens.clear();      [BUGGY]  List  <  Option>  tokens  =  new  LinkedList  <  Option>(tokens.size());  [BUGGY]      currentOption  =  null;  }  [CLASS]  PosixParser  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  ArrayList  tokens  Options  options  Option  currentOption  boolean  eatTheRest  	projects/Cli2/src/java/org/apache/commons/cli/PosixParser.java	1.0	53	53	1	replace	List  <  Option>  tokens  =  new  LinkedList  <  Option>(tokens.size());	  List    <    Option>    tokens    =    new    ArrayList    <    Option>(tokens.size());    	non-compiled	[CE]  cannot  find  symbol	77	None	replace
567	[BUG]  [BUGGY]  Set  <  Option>  tokens  =  new  HashSet  <  Option>(tokens.size());  [CE]  cannot  find  symbol  [FE]                    UnrecognizedOptionException      [CONTEXT]      private  void  init()  {  eatTheRest  =  false;  tokens.clear();      [BUGGY]  Set  <  Option>  tokens  =  new  HashSet  <  Option>(tokens.size());  [BUGGY]      currentOption  =  null;  }  [CLASS]  PosixParser  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  ArrayList  tokens  Options  options  Option  currentOption  boolean  eatTheRest  	projects/Cli2/src/java/org/apache/commons/cli/PosixParser.java	1.0	53	53	1	replace	Set  <  Option>  tokens  =  new  HashSet  <  Option>(tokens.size());	  List    <    Option>    tokens    =    new    ArrayList    <    Option>(tokens.size());    	non-compiled	[CE]  cannot  find  symbol	77	None	replace
568	[BUG]  [BUGGY]  [FE]  UnrecognizedOptionException  [FE]    UnrecognizedOptionException    [CONTEXT]      private  void  init()  {  eatTheRest  =  false;  tokens.clear();      [BUGGY]  if(currentOption!=  null)  {  eatTheRest  =  false;  tokens.clear();  }  else  {  currentOption  =  null;  }  if(currentOption!=  null)  {  eatTheRest  =  false;  tokens.clear();  }  else  {  currentOption  =  null;  }  [BUGGY]      currentOption  =  null;  }  [CLASS]  PosixParser  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  ArrayList  tokens  Options  options  Option  currentOption  boolean  eatTheRest  	projects/Cli2/src/java/org/apache/commons/cli/PosixParser.java	1.0	53	53	1	add	if(currentOption!=    null)    {    eatTheRest    =    false;    tokens.clear();    }    else    {    currentOption    =    null;    }    if(currentOption!=  null)  {  eatTheRest  =  false;  tokens.clear();  }  else  {  currentOption  =  null;  }	  	compilable	  [FE]  UnrecognizedOptionException  	41	1	add
569	[BUG]  [BUGGY]  if(currentOption!=  null)  {  eatTheRest  =  false;  tokens.clear();  }  else  {  currentOption  =  null;  }  if(currentOption!=  null)  {  eatTheRest  =  false;  tokens.clear();  }  else  {  currentOption  =  null;  }  [FE]  UnrecognizedOptionException  [FE]    UnrecognizedOptionException    [CONTEXT]      private  void  init()  {  eatTheRest  =  false;  tokens.clear();      [BUGGY]  if(currentOption!=  null)  {  eatTheRest  =  false;  tokens.clear();  }  else  {  currentOption  =  null;  }  if(currentOption!=  null)  {  eatTheRest  =  false;  tokens.clear();  }  else  {  currentOption  =  null;  }  [BUGGY]      currentOption  =  null;  }  [CLASS]  PosixParser  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  ArrayList  tokens  Options  options  Option  currentOption  boolean  eatTheRest  	projects/Cli2/src/java/org/apache/commons/cli/PosixParser.java	1.0	53	53	1	replace	if(currentOption!=    null)    {    eatTheRest    =    false;    tokens.clear();    }    else    {    currentOption    =    null;    }    if(currentOption!=  null)  {  eatTheRest  =  false;  tokens.clear();  }  else  {  currentOption  =  null;  }	  	compilable	  [FE]  UnrecognizedOptionException  	41	1	add
570	[BUG]  [BUGGY]  [FE]  UnrecognizedOptionException  [FE]      UnrecognizedOptionException    [CONTEXT]      private  void  init()  {  eatTheRest  =  false;  tokens.clear();      [BUGGY]  if(currentOption!=  null)  {  eatTheRest  =  false;  tokens.clear();  }  else  {  currentOption  =  null;  }  if(currentOption  ==  null)  {  eatTheRest  =  false;  tokens.clear();  }  else  {  currentOption  =  null;  }  [BUGGY]      currentOption  =  null;  }  [CLASS]  PosixParser  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  ArrayList  tokens  Options  options  Option  currentOption  boolean  eatTheRest  	projects/Cli2/src/java/org/apache/commons/cli/PosixParser.java	1.0	53	53	1	add	if(currentOption!=    null)    {    eatTheRest    =    false;    tokens.clear();    }    else    {    currentOption    =    null;    }    if(currentOption  ==  null)  {  eatTheRest  =  false;  tokens.clear();  }  else  {  currentOption  =  null;  }	  	compilable	  [FE]  UnrecognizedOptionException  	41	1	add
571	[BUG]  [BUGGY]  if(currentOption!=  null)  {  eatTheRest  =  false;  tokens.clear();  }  else  {  currentOption  =  null;  }  if(currentOption  ==  null)  {  eatTheRest  =  false;  tokens.clear();  }  else  {  currentOption  =  null;  }  [FE]  UnrecognizedOptionException  [FE]      UnrecognizedOptionException    [CONTEXT]      private  void  init()  {  eatTheRest  =  false;  tokens.clear();      [BUGGY]  if(currentOption!=  null)  {  eatTheRest  =  false;  tokens.clear();  }  else  {  currentOption  =  null;  }  if(currentOption  ==  null)  {  eatTheRest  =  false;  tokens.clear();  }  else  {  currentOption  =  null;  }  [BUGGY]      currentOption  =  null;  }  [CLASS]  PosixParser  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  ArrayList  tokens  Options  options  Option  currentOption  boolean  eatTheRest  	projects/Cli2/src/java/org/apache/commons/cli/PosixParser.java	1.0	53	53	1	replace	if(currentOption!=    null)    {    eatTheRest    =    false;    tokens.clear();    }    else    {    currentOption    =    null;    }    if(currentOption  ==  null)  {  eatTheRest  =  false;  tokens.clear();  }  else  {  currentOption  =  null;  }	  	compilable	  [FE]  UnrecognizedOptionException  	41	1	add
572	[BUG]  [BUGGY]  if(currentOption!=  null)  {  eatTheRest  =  false;  tokens.clear();  }  else  {  currentOption  =  null;  }  if(currentOption!=  null)  {  eattheRest  =  false;  tokens.clear();  }  else  {  currentOption  =  null;  }  [CE]  cannot  find  symbol  eattheRest  [FE]        UnrecognizedOptionException    [CONTEXT]      private  void  init()  {  eatTheRest  =  false;  tokens.clear();      [BUGGY]  if(currentOption!=  null)  {  eatTheRest  =  false;  tokens.clear();  }  else  {  currentOption  =  null;  }  if(currentOption!=  null)  {  eattheRest  =  false;  tokens.clear();  }  else  {  currentOption  =  null;  }  [BUGGY]      currentOption  =  null;  }  [CLASS]  PosixParser  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  ArrayList  tokens  Options  options  Option  currentOption  boolean  eatTheRest  	projects/Cli2/src/java/org/apache/commons/cli/PosixParser.java	1.0	53	53	1	replace	if(currentOption!=    null)    {    eatTheRest    =    false;    tokens.clear();    }    else    {    currentOption    =    null;    }    if(currentOption!=  null)  {  eattheRest  =  false;  tokens.clear();  }  else  {  currentOption  =  null;  }	  	non-compiled	[CE]  cannot  find  symbol  eattheRest	41	None	add
573	[BUG]  [BUGGY]  [FE]  UnrecognizedOptionException  [FE]          UnrecognizedOptionException    [CONTEXT]      private  void  init()  {  eatTheRest  =  false;  tokens.clear();      [BUGGY]  if(currentOption!=  null)  {  eatTheRest  =  false;  tokens.clear();  }  else  {  currentOption  =  null;  }  if(currentOption!=  null)  {  eatTheRest  =  false;  tokens.clear();  }  [BUGGY]      currentOption  =  null;  }  [CLASS]  PosixParser  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  ArrayList  tokens  Options  options  Option  currentOption  boolean  eatTheRest  	projects/Cli2/src/java/org/apache/commons/cli/PosixParser.java	1.0	53	53	1	add	if(currentOption!=    null)    {    eatTheRest    =    false;    tokens.clear();    }    else    {    currentOption    =    null;    }    if(currentOption!=  null)  {  eatTheRest  =  false;  tokens.clear();  }	  	compilable	  [FE]  UnrecognizedOptionException  	41	1	add
574	[BUG]  [BUGGY]  if(currentOption!=  null)  {  eatTheRest  =  false;  tokens.clear();  }  else  {  currentOption  =  null;  }  if(currentOption!=  null)  {  eatTheRest  =  false;  tokens.clear();  }  [FE]  UnrecognizedOptionException  [FE]          UnrecognizedOptionException    [CONTEXT]      private  void  init()  {  eatTheRest  =  false;  tokens.clear();      [BUGGY]  if(currentOption!=  null)  {  eatTheRest  =  false;  tokens.clear();  }  else  {  currentOption  =  null;  }  if(currentOption!=  null)  {  eatTheRest  =  false;  tokens.clear();  }  [BUGGY]      currentOption  =  null;  }  [CLASS]  PosixParser  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  ArrayList  tokens  Options  options  Option  currentOption  boolean  eatTheRest  	projects/Cli2/src/java/org/apache/commons/cli/PosixParser.java	1.0	53	53	1	replace	if(currentOption!=    null)    {    eatTheRest    =    false;    tokens.clear();    }    else    {    currentOption    =    null;    }    if(currentOption!=  null)  {  eatTheRest  =  false;  tokens.clear();  }	  	compilable	  [FE]  UnrecognizedOptionException  	41	1	add
575	[BUG]  [BUGGY]  [FE]  UnrecognizedOptionException  [FE]    UnrecognizedOptionException    [CONTEXT]      private  void  init()  {  eatTheRest  =  false;  tokens.clear();      [BUGGY]  currentOption    =    Option.OK_STANDARD;    ArrayList  <  Option>  tokens  =  options.values();  ArrayList  <  Option>  tokens  =  options.values();  [BUGGY]      }  [CLASS]  PosixParser  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  ArrayList  tokens  Options  options  Option  currentOption  boolean  eatTheRest  	projects/Cli2/src/java/org/apache/commons/cli/PosixParser.java	1.0	53	53	1	add	currentOption        =        Option.OK_STANDARD;        ArrayList    <    Option>    tokens    =    options.values();    ArrayList  <  Option>  tokens  =  options.values();	  	compilable	  [FE]  UnrecognizedOptionException  	103	1	add
576	[BUG]  [BUGGY]  currentOption    =    Option.OK_STANDARD;    ArrayList  <  Option>  tokens  =  options.values();  ArrayList  <  Option>  tokens  =  options.values();  [FE]  UnrecognizedOptionException  [FE]    UnrecognizedOptionException    [CONTEXT]      private  void  init()  {  eatTheRest  =  false;  tokens.clear();      [BUGGY]  currentOption    =    Option.OK_STANDARD;    ArrayList  <  Option>  tokens  =  options.values();  ArrayList  <  Option>  tokens  =  options.values();  [BUGGY]      }  [CLASS]  PosixParser  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  ArrayList  tokens  Options  options  Option  currentOption  boolean  eatTheRest  	projects/Cli2/src/java/org/apache/commons/cli/PosixParser.java	1.0	53	53	1	replace	currentOption        =        Option.OK_STANDARD;        ArrayList    <    Option>    tokens    =    options.values();    ArrayList  <  Option>  tokens  =  options.values();	  	compilable	  [FE]  UnrecognizedOptionException  	103	1	add
577	[BUG]  [BUGGY]  [FE]  UnrecognizedOptionException  [FE]      UnrecognizedOptionException    [CONTEXT]      private  void  init()  {  eatTheRest  =  false;  tokens.clear();      [BUGGY]  currentOption    =    Option.OK_STANDARD;    ArrayList  <  Option>  tokens  =  options.values();  currentOption  =  Option.OK_STANDARD;  ArrayList  <  Option>  tokens  =  options.values();  [BUGGY]      }  [CLASS]  PosixParser  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  ArrayList  tokens  Options  options  Option  currentOption  boolean  eatTheRest  	projects/Cli2/src/java/org/apache/commons/cli/PosixParser.java	1.0	53	53	1	add	currentOption        =        Option.OK_STANDARD;        ArrayList    <    Option>    tokens    =    options.values();    currentOption  =  Option.OK_STANDARD;  ArrayList  <  Option>  tokens  =  options.values();	  	compilable	  [FE]  UnrecognizedOptionException  	103	1	add
578	[BUG]  [BUGGY]  currentOption    =    Option.OK_STANDARD;    ArrayList  <  Option>  tokens  =  options.values();  currentOption  =  Option.OK_STANDARD;  ArrayList  <  Option>  tokens  =  options.values();  [FE]  UnrecognizedOptionException  [FE]      UnrecognizedOptionException    [CONTEXT]      private  void  init()  {  eatTheRest  =  false;  tokens.clear();      [BUGGY]  currentOption    =    Option.OK_STANDARD;    ArrayList  <  Option>  tokens  =  options.values();  currentOption  =  Option.OK_STANDARD;  ArrayList  <  Option>  tokens  =  options.values();  [BUGGY]      }  [CLASS]  PosixParser  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  ArrayList  tokens  Options  options  Option  currentOption  boolean  eatTheRest  	projects/Cli2/src/java/org/apache/commons/cli/PosixParser.java	1.0	53	53	1	replace	currentOption        =        Option.OK_STANDARD;        ArrayList    <    Option>    tokens    =    options.values();    currentOption  =  Option.OK_STANDARD;  ArrayList  <  Option>  tokens  =  options.values();	  	compilable	  [FE]  UnrecognizedOptionException  	103	1	add
579	[BUG]  [BUGGY]  [FE]  UnrecognizedOptionException  [FE]        UnrecognizedOptionException    [CONTEXT]      private  void  init()  {  eatTheRest  =  false;  tokens.clear();      [BUGGY]  currentOption    =    Option.OK_STANDARD;    ArrayList  <  Option>  tokens  =  options.values();  ArrayList  <  Option>  options  =  options.values();  [BUGGY]      }  [CLASS]  PosixParser  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  ArrayList  tokens  Options  options  Option  currentOption  boolean  eatTheRest  	projects/Cli2/src/java/org/apache/commons/cli/PosixParser.java	1.0	53	53	1	add	currentOption        =        Option.OK_STANDARD;        ArrayList    <    Option>    tokens    =    options.values();    ArrayList  <  Option>  options  =  options.values();	  	compilable	  [FE]  UnrecognizedOptionException  	103	1	add
580	[BUG]  [BUGGY]  currentOption    =    Option.OK_STANDARD;    ArrayList  <  Option>  tokens  =  options.values();  ArrayList  <  Option>  options  =  options.values();  [FE]  UnrecognizedOptionException  [FE]        UnrecognizedOptionException    [CONTEXT]      private  void  init()  {  eatTheRest  =  false;  tokens.clear();      [BUGGY]  currentOption    =    Option.OK_STANDARD;    ArrayList  <  Option>  tokens  =  options.values();  ArrayList  <  Option>  options  =  options.values();  [BUGGY]      }  [CLASS]  PosixParser  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  ArrayList  tokens  Options  options  Option  currentOption  boolean  eatTheRest  	projects/Cli2/src/java/org/apache/commons/cli/PosixParser.java	1.0	53	53	1	replace	currentOption        =        Option.OK_STANDARD;        ArrayList    <    Option>    tokens    =    options.values();    ArrayList  <  Option>  options  =  options.values();	  	compilable	  [FE]  UnrecognizedOptionException  	103	1	add
581	[BUG]  [BUGGY]  [FE]  UnrecognizedOptionException  [FE]          UnrecognizedOptionException    [CONTEXT]      private  void  init()  {  eatTheRest  =  false;  tokens.clear();      [BUGGY]  currentOption    =    Option.OK_STANDARD;    ArrayList  <  Option>  tokens  =  options.values();  ArrayList  <  Option>  tokens  =  options.values();  currentOption  =  Option.OK_STANDARD;  [BUGGY]      }  [CLASS]  PosixParser  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  ArrayList  tokens  Options  options  Option  currentOption  boolean  eatTheRest  	projects/Cli2/src/java/org/apache/commons/cli/PosixParser.java	1.0	53	53	1	add	currentOption        =        Option.OK_STANDARD;        ArrayList    <    Option>    tokens    =    options.values();    ArrayList  <  Option>  tokens  =  options.values();  currentOption  =  Option.OK_STANDARD;	  	compilable	  [FE]  UnrecognizedOptionException  	103	1	add
582	[BUG]  [BUGGY]  currentOption    =    Option.OK_STANDARD;    ArrayList  <  Option>  tokens  =  options.values();  ArrayList  <  Option>  tokens  =  options.values();  currentOption  =  Option.OK_STANDARD;  [FE]  UnrecognizedOptionException  [FE]          UnrecognizedOptionException    [CONTEXT]      private  void  init()  {  eatTheRest  =  false;  tokens.clear();      [BUGGY]  currentOption    =    Option.OK_STANDARD;    ArrayList  <  Option>  tokens  =  options.values();  ArrayList  <  Option>  tokens  =  options.values();  currentOption  =  Option.OK_STANDARD;  [BUGGY]      }  [CLASS]  PosixParser  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  ArrayList  tokens  Options  options  Option  currentOption  boolean  eatTheRest  	projects/Cli2/src/java/org/apache/commons/cli/PosixParser.java	1.0	53	53	1	replace	currentOption        =        Option.OK_STANDARD;        ArrayList    <    Option>    tokens    =    options.values();    ArrayList  <  Option>  tokens  =  options.values();  currentOption  =  Option.OK_STANDARD;	  	compilable	  [FE]  UnrecognizedOptionException  	103	1	add
583	[BUG]  [BUGGY]  [FE]  UnrecognizedOptionException  [FE]            UnrecognizedOptionException    [CONTEXT]      private  void  init()  {  eatTheRest  =  false;  tokens.clear();      [BUGGY]  currentOption    =    Option.OK_STANDARD;    ArrayList  <  Option>  tokens  =  options.values();  currentOption  =  Option.OK_STANDARD;  tokens  =  options.values();  [BUGGY]      }  [CLASS]  PosixParser  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  ArrayList  tokens  Options  options  Option  currentOption  boolean  eatTheRest  	projects/Cli2/src/java/org/apache/commons/cli/PosixParser.java	1.0	53	53	1	add	currentOption        =        Option.OK_STANDARD;        ArrayList    <    Option>    tokens    =    options.values();    currentOption  =  Option.OK_STANDARD;  tokens  =  options.values();	  	compilable	  [FE]  UnrecognizedOptionException  	103	1	add
584	[BUG]  [BUGGY]  currentOption    =    Option.OK_STANDARD;    ArrayList  <  Option>  tokens  =  options.values();  currentOption  =  Option.OK_STANDARD;  tokens  =  options.values();  [FE]  UnrecognizedOptionException  [FE]            UnrecognizedOptionException    [CONTEXT]      private  void  init()  {  eatTheRest  =  false;  tokens.clear();      [BUGGY]  currentOption    =    Option.OK_STANDARD;    ArrayList  <  Option>  tokens  =  options.values();  currentOption  =  Option.OK_STANDARD;  tokens  =  options.values();  [BUGGY]      }  [CLASS]  PosixParser  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  ArrayList  tokens  Options  options  Option  currentOption  boolean  eatTheRest  	projects/Cli2/src/java/org/apache/commons/cli/PosixParser.java	1.0	53	53	1	replace	currentOption        =        Option.OK_STANDARD;        ArrayList    <    Option>    tokens    =    options.values();    currentOption  =  Option.OK_STANDARD;  tokens  =  options.values();	  	compilable	  [FE]  UnrecognizedOptionException  	103	1	add
585	[BUG]  [BUGGY]  currentOption  =  options.cloneOption(this,  tokens);  [CE]  cannot  find  symbol  [FE]            UnrecognizedOptionException      [CONTEXT]      private  void  init()  {  eatTheRest  =  false;  tokens.clear();      [BUGGY]  currentOption  =  options.cloneOption(this,  tokens);  [BUGGY]      }  [CLASS]  PosixParser  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  ArrayList  tokens  Options  options  Option  currentOption  boolean  eatTheRest  	projects/Cli2/src/java/org/apache/commons/cli/PosixParser.java	1.0	53	53	1	replace	currentOption  =  options.cloneOption(this,  tokens);	  currentOption    =    options.cloneOption(this);    	non-compiled	[CE]  cannot  find  symbol	153	None	replace
586	[BUG]  [BUGGY]  currentOption  =  options.cloneOption(this,  eatTheRest);  [CE]  cannot  find  symbol  [FE]              UnrecognizedOptionException      [CONTEXT]      private  void  init()  {  eatTheRest  =  false;  tokens.clear();      [BUGGY]  currentOption  =  options.cloneOption(this,  eatTheRest);  [BUGGY]      }  [CLASS]  PosixParser  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  ArrayList  tokens  Options  options  Option  currentOption  boolean  eatTheRest  	projects/Cli2/src/java/org/apache/commons/cli/PosixParser.java	1.0	53	53	1	replace	currentOption  =  options.cloneOption(this,  eatTheRest);	  currentOption    =    options.cloneOption(this);    	non-compiled	[CE]  cannot  find  symbol	153	None	replace
587	[BUG]  [BUGGY]  [FE]  UnrecognizedOptionException  [FE]    UnrecognizedOptionException    [CONTEXT]      private  void  init()  {  eatTheRest  =  false;  tokens.clear();      [BUGGY]          tokens.add(     "--     ");    tokens.add(   "--     ");  tokens.add( "--   ");  tokens.add( "-- ");  [BUGGY]      currentOption  =  null;  }  [CLASS]  PosixParser  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  ArrayList  tokens  Options  options  Option  currentOption  boolean  eatTheRest  	projects/Cli2/src/java/org/apache/commons/cli/PosixParser.java	1.0	53	53	1	add	                tokens.add(       "--       ");        tokens.add(   "--       ");    tokens.add( "--   ");  tokens.add( "-- ");	  	compilable	  [FE]  UnrecognizedOptionException  	22	1	add
588	[BUG]  [BUGGY]          tokens.add(     "--     ");    tokens.add(   "--     ");  tokens.add( "--   ");  tokens.add( "-- ");  [FE]  UnrecognizedOptionException  [FE]    UnrecognizedOptionException    [CONTEXT]      private  void  init()  {  eatTheRest  =  false;  tokens.clear();      [BUGGY]          tokens.add(     "--     ");    tokens.add(   "--     ");  tokens.add( "--   ");  tokens.add( "-- ");  [BUGGY]      currentOption  =  null;  }  [CLASS]  PosixParser  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  ArrayList  tokens  Options  options  Option  currentOption  boolean  eatTheRest  	projects/Cli2/src/java/org/apache/commons/cli/PosixParser.java	1.0	53	53	1	replace	                tokens.add(       "--       ");        tokens.add(   "--       ");    tokens.add( "--   ");  tokens.add( "-- ");	  	compilable	  [FE]  UnrecognizedOptionException  	22	1	add
589	[BUG]  [BUGGY]  [FE]  UnrecognizedOptionException  [FE]      UnrecognizedOptionException    [CONTEXT]      private  void  init()  {  eatTheRest  =  false;  tokens.clear();      [BUGGY]          tokens.add(     "--     ");    tokens.add(   "--     ");  tokens.remove( "-- ");  tokens.add( "-- ");  [BUGGY]      currentOption  =  null;  }  [CLASS]  PosixParser  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  ArrayList  tokens  Options  options  Option  currentOption  boolean  eatTheRest  	projects/Cli2/src/java/org/apache/commons/cli/PosixParser.java	1.0	53	53	1	add	                tokens.add(       "--       ");        tokens.add(   "--       ");    tokens.remove( "-- ");  tokens.add( "-- ");	  	compilable	  [FE]  UnrecognizedOptionException  	22	1	add
590	[BUG]  [BUGGY]          tokens.add(     "--     ");    tokens.add(   "--     ");  tokens.remove( "-- ");  tokens.add( "-- ");  [FE]  UnrecognizedOptionException  [FE]      UnrecognizedOptionException    [CONTEXT]      private  void  init()  {  eatTheRest  =  false;  tokens.clear();      [BUGGY]          tokens.add(     "--     ");    tokens.add(   "--     ");  tokens.remove( "-- ");  tokens.add( "-- ");  [BUGGY]      currentOption  =  null;  }  [CLASS]  PosixParser  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  ArrayList  tokens  Options  options  Option  currentOption  boolean  eatTheRest  	projects/Cli2/src/java/org/apache/commons/cli/PosixParser.java	1.0	53	53	1	replace	                tokens.add(       "--       ");        tokens.add(   "--       ");    tokens.remove( "-- ");  tokens.add( "-- ");	  	compilable	  [FE]  UnrecognizedOptionException  	22	1	add
591	[BUG]  [BUGGY]  [FE]  UnrecognizedOptionException  [FE]    UnrecognizedOptionException    [CONTEXT]      private  void  init()  {  eatTheRest  =  false;  tokens.clear();      [BUGGY]  tokens.remove(   "--   ");  tokens.remove( "--   ");  [BUGGY]      currentOption  =  null;  }  [CLASS]  PosixParser  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  ArrayList  tokens  Options  options  Option  currentOption  boolean  eatTheRest  	projects/Cli2/src/java/org/apache/commons/cli/PosixParser.java	1.0	53	53	1	add	tokens.remove(   "--   ");    tokens.remove( "--   ");	  	compilable	  [FE]  UnrecognizedOptionException  	71	1	add
592	[BUG]  [BUGGY]  tokens.remove(   "--   ");  tokens.remove( "--   ");  [FE]  UnrecognizedOptionException  [FE]    UnrecognizedOptionException    [CONTEXT]      private  void  init()  {  eatTheRest  =  false;  tokens.clear();      [BUGGY]  tokens.remove(   "--   ");  tokens.remove( "--   ");  [BUGGY]      currentOption  =  null;  }  [CLASS]  PosixParser  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  ArrayList  tokens  Options  options  Option  currentOption  boolean  eatTheRest  	projects/Cli2/src/java/org/apache/commons/cli/PosixParser.java	1.0	53	53	1	replace	tokens.remove(   "--   ");    tokens.remove( "--   ");	  	compilable	  [FE]  UnrecognizedOptionException  	71	1	add
593	[BUG]  [BUGGY]  [FE]  UnrecognizedOptionException  [FE]      UnrecognizedOptionException    [CONTEXT]      private  void  init()  {  eatTheRest  =  false;  tokens.clear();      [BUGGY]  tokens.remove(   "--   ");  tokens.remove( "--   ");  currentOption  =  null;  [BUGGY]      currentOption  =  null;  }  [CLASS]  PosixParser  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  ArrayList  tokens  Options  options  Option  currentOption  boolean  eatTheRest  	projects/Cli2/src/java/org/apache/commons/cli/PosixParser.java	1.0	53	53	1	add	tokens.remove(   "--   ");    tokens.remove( "--   ");  currentOption  =  null;	  	compilable	  [FE]  UnrecognizedOptionException  	71	1	add
594	[BUG]  [BUGGY]  tokens.remove(   "--   ");  tokens.remove( "--   ");  currentOption  =  null;  [FE]  UnrecognizedOptionException  [FE]      UnrecognizedOptionException    [CONTEXT]      private  void  init()  {  eatTheRest  =  false;  tokens.clear();      [BUGGY]  tokens.remove(   "--   ");  tokens.remove( "--   ");  currentOption  =  null;  [BUGGY]      currentOption  =  null;  }  [CLASS]  PosixParser  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  ArrayList  tokens  Options  options  Option  currentOption  boolean  eatTheRest  	projects/Cli2/src/java/org/apache/commons/cli/PosixParser.java	1.0	53	53	1	replace	tokens.remove(   "--   ");    tokens.remove( "--   ");  currentOption  =  null;	  	compilable	  [FE]  UnrecognizedOptionException  	71	1	add
595	[BUG]  [BUGGY]  [FE]  UnrecognizedOptionException  [FE]        UnrecognizedOptionException    [CONTEXT]      private  void  init()  {  eatTheRest  =  false;  tokens.clear();      [BUGGY]  tokens.remove(   "--   ");  tokens.remove( ".-- ");  [BUGGY]      currentOption  =  null;  }  [CLASS]  PosixParser  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  ArrayList  tokens  Options  options  Option  currentOption  boolean  eatTheRest  	projects/Cli2/src/java/org/apache/commons/cli/PosixParser.java	1.0	53	53	1	add	tokens.remove(   "--   ");    tokens.remove( ".-- ");	  	compilable	  [FE]  UnrecognizedOptionException  	71	1	add
596	[BUG]  [BUGGY]  tokens.remove(   "--   ");  tokens.remove( ".-- ");  [FE]  UnrecognizedOptionException  [FE]        UnrecognizedOptionException    [CONTEXT]      private  void  init()  {  eatTheRest  =  false;  tokens.clear();      [BUGGY]  tokens.remove(   "--   ");  tokens.remove( ".-- ");  [BUGGY]      currentOption  =  null;  }  [CLASS]  PosixParser  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  ArrayList  tokens  Options  options  Option  currentOption  boolean  eatTheRest  	projects/Cli2/src/java/org/apache/commons/cli/PosixParser.java	1.0	53	53	1	replace	tokens.remove(   "--   ");    tokens.remove( ".-- ");	  	compilable	  [FE]  UnrecognizedOptionException  	71	1	add
597	[BUG]  [BUGGY]  [FE]  java.lang.IndexOutOfBoundsException:  Index:  0  [FE]    UnrecognizedOptionException    [CONTEXT]      private  void  init()  {  eatTheRest  =  false;  tokens.clear();      [BUGGY]  tokens.remove(0);  [BUGGY]      currentOption  =  null;  }  [CLASS]  PosixParser  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  ArrayList  tokens  Options  options  Option  currentOption  boolean  eatTheRest  	projects/Cli2/src/java/org/apache/commons/cli/PosixParser.java	1.0	53	53	1	add	tokens.remove(0);	  tokens.remove(   "--   ");    	compilable	  [FE]  java.lang.IndexOutOfBoundsException:  Index:  0  	72	1	replace
598	[BUG]  [BUGGY]  tokens.remove(0);  [FE]  java.lang.IndexOutOfBoundsException:  Index:  0  [FE]    UnrecognizedOptionException    [CONTEXT]      private  void  init()  {  eatTheRest  =  false;  tokens.clear();      [BUGGY]  tokens.remove(0);  [BUGGY]      currentOption  =  null;  }  [CLASS]  PosixParser  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  ArrayList  tokens  Options  options  Option  currentOption  boolean  eatTheRest  	projects/Cli2/src/java/org/apache/commons/cli/PosixParser.java	1.0	53	53	1	replace	tokens.remove(0);	  tokens.remove(   "--   ");    	compilable	  [FE]  java.lang.IndexOutOfBoundsException:  Index:  0  	72	1	replace
599	[BUG]  [BUGGY]  tokens.add(new  Option( "options "));  [CE]  no  suitable  constructor  found  for  Option(String)  [FE]        UnrecognizedOptionException      [CONTEXT]      private  void  init()  {  eatTheRest  =  false;  tokens.clear();      [BUGGY]  tokens.add(new  Option( "options "));  [BUGGY]      currentOption  =  null;  }  [CLASS]  PosixParser  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  ArrayList  tokens  Options  options  Option  currentOption  boolean  eatTheRest  	projects/Cli2/src/java/org/apache/commons/cli/PosixParser.java	1.0	53	53	1	replace	tokens.add(new  Option( "options "));	  tokens.add(new    Option(   "   "));    	non-compiled	[CE]  no  suitable  constructor  found  for  Option(String)	127	None	replace
600	[BUG]  [BUGGY]  tokens.add(new  Option( "- "));  [CE]  no  suitable  constructor  found  for  Option(String)  [FE]          UnrecognizedOptionException      [CONTEXT]      private  void  init()  {  eatTheRest  =  false;  tokens.clear();      [BUGGY]  tokens.add(new  Option( "- "));  [BUGGY]      currentOption  =  null;  }  [CLASS]  PosixParser  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  ArrayList  tokens  Options  options  Option  currentOption  boolean  eatTheRest  	projects/Cli2/src/java/org/apache/commons/cli/PosixParser.java	1.0	53	53	1	replace	tokens.add(new  Option( "- "));	  tokens.add(new    Option(   "   "));    	non-compiled	[CE]  no  suitable  constructor  found  for  Option(String)	127	None	replace
601	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]    UnrecognizedOptionException    [CONTEXT]      private  void  init()  {  eatTheRest  =  false;  tokens.clear();      [BUGGY]  if(!eatTheRest)  {  tokens.add( "-- ");  tokens.add( "-- ");  currentOption  =  null;  }  [BUGGY]      currentOption  =  null;  }  [CLASS]  PosixParser  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  ArrayList  tokens  Options  options  Option  currentOption  boolean  eatTheRest  	projects/Cli2/src/java/org/apache/commons/cli/PosixParser.java	1.0	53	53	1	add	if(!eatTheRest)  {  tokens.add( "-- ");  tokens.add( "-- ");  currentOption  =  null;  }	          tokens.add(       "--       ");    tokens.add(   "--       ");    currentOption    =    null;    	compilable	  [FE]  ComparisonFailure  	25	1	replace
602	[BUG]  [BUGGY]  if(!eatTheRest)  {  tokens.add( "-- ");  tokens.add( "-- ");  currentOption  =  null;  }  [FE]  ComparisonFailure  [FE]    UnrecognizedOptionException    [CONTEXT]      private  void  init()  {  eatTheRest  =  false;  tokens.clear();      [BUGGY]  if(!eatTheRest)  {  tokens.add( "-- ");  tokens.add( "-- ");  currentOption  =  null;  }  [BUGGY]      currentOption  =  null;  }  [CLASS]  PosixParser  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  ArrayList  tokens  Options  options  Option  currentOption  boolean  eatTheRest  	projects/Cli2/src/java/org/apache/commons/cli/PosixParser.java	1.0	53	53	1	replace	if(!eatTheRest)  {  tokens.add( "-- ");  tokens.add( "-- ");  currentOption  =  null;  }	          tokens.add(       "--       ");    tokens.add(   "--       ");    currentOption    =    null;    	compilable	  [FE]  ComparisonFailure  	25	1	replace
603	[BUG]  [BUGGY]  [FE]  UnrecognizedOptionException  [FE]      UnrecognizedOptionException    [CONTEXT]      private  void  init()  {  eatTheRest  =  false;  tokens.clear();      [BUGGY]  if(eatTheRest)  {  tokens.add( "-- ");  tokens.add( "-- ");  currentOption  =  null;  }  [BUGGY]      currentOption  =  null;  }  [CLASS]  PosixParser  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  ArrayList  tokens  Options  options  Option  currentOption  boolean  eatTheRest  	projects/Cli2/src/java/org/apache/commons/cli/PosixParser.java	1.0	53	53	1	add	if(eatTheRest)  {  tokens.add( "-- ");  tokens.add( "-- ");  currentOption  =  null;  }	          tokens.add(       "--       ");    tokens.add(   "--       ");    currentOption    =    null;    	compilable	  [FE]  UnrecognizedOptionException  	25	1	replace
604	[BUG]  [BUGGY]  if(eatTheRest)  {  tokens.add( "-- ");  tokens.add( "-- ");  currentOption  =  null;  }  [FE]  UnrecognizedOptionException  [FE]      UnrecognizedOptionException    [CONTEXT]      private  void  init()  {  eatTheRest  =  false;  tokens.clear();      [BUGGY]  if(eatTheRest)  {  tokens.add( "-- ");  tokens.add( "-- ");  currentOption  =  null;  }  [BUGGY]      currentOption  =  null;  }  [CLASS]  PosixParser  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  ArrayList  tokens  Options  options  Option  currentOption  boolean  eatTheRest  	projects/Cli2/src/java/org/apache/commons/cli/PosixParser.java	1.0	53	53	1	replace	if(eatTheRest)  {  tokens.add( "-- ");  tokens.add( "-- ");  currentOption  =  null;  }	          tokens.add(       "--       ");    tokens.add(   "--       ");    currentOption    =    null;    	compilable	  [FE]  UnrecognizedOptionException  	25	1	replace
605	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]        UnrecognizedOptionException    [CONTEXT]      private  void  init()  {  eatTheRest  =  false;  tokens.clear();      [BUGGY]  tokens.add( "-- ");  currentOption  =  null;  [BUGGY]      currentOption  =  null;  }  [CLASS]  PosixParser  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  ArrayList  tokens  Options  options  Option  currentOption  boolean  eatTheRest  	projects/Cli2/src/java/org/apache/commons/cli/PosixParser.java	1.0	53	53	1	add	tokens.add( "-- ");  currentOption  =  null;	          tokens.add(       "--       ");    tokens.add(   "--       ");    currentOption    =    null;    	compilable	  [FE]  ComparisonFailure  	25	1	replace
606	[BUG]  [BUGGY]  tokens.add( "-- ");  currentOption  =  null;  [FE]  ComparisonFailure  [FE]        UnrecognizedOptionException    [CONTEXT]      private  void  init()  {  eatTheRest  =  false;  tokens.clear();      [BUGGY]  tokens.add( "-- ");  currentOption  =  null;  [BUGGY]      currentOption  =  null;  }  [CLASS]  PosixParser  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  ArrayList  tokens  Options  options  Option  currentOption  boolean  eatTheRest  	projects/Cli2/src/java/org/apache/commons/cli/PosixParser.java	1.0	53	53	1	replace	tokens.add( "-- ");  currentOption  =  null;	          tokens.add(       "--       ");    tokens.add(   "--       ");    currentOption    =    null;    	compilable	  [FE]  ComparisonFailure  	25	1	replace
607	[BUG]  [BUGGY]  [FE]  UnrecognizedOptionException  [FE]    UnrecognizedOptionException    [CONTEXT]      private  void  init()  {  eatTheRest  =  false;  tokens.clear();      [BUGGY]  tokens.add(   "--n   ");  tokens.add( "--n   ");  [BUGGY]      currentOption  =  null;  }  [CLASS]  PosixParser  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  ArrayList  tokens  Options  options  Option  currentOption  boolean  eatTheRest  	projects/Cli2/src/java/org/apache/commons/cli/PosixParser.java	1.0	53	53	1	add	tokens.add(   "--n   ");    tokens.add( "--n   ");	  	compilable	  [FE]  UnrecognizedOptionException  	73	1	add
608	[BUG]  [BUGGY]  tokens.add(   "--n   ");  tokens.add( "--n   ");  [FE]  UnrecognizedOptionException  [FE]    UnrecognizedOptionException    [CONTEXT]      private  void  init()  {  eatTheRest  =  false;  tokens.clear();      [BUGGY]  tokens.add(   "--n   ");  tokens.add( "--n   ");  [BUGGY]      currentOption  =  null;  }  [CLASS]  PosixParser  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  ArrayList  tokens  Options  options  Option  currentOption  boolean  eatTheRest  	projects/Cli2/src/java/org/apache/commons/cli/PosixParser.java	1.0	53	53	1	replace	tokens.add(   "--n   ");    tokens.add( "--n   ");	  	compilable	  [FE]  UnrecognizedOptionException  	73	1	add
609	[BUG]  [BUGGY]  [FE]  UnrecognizedOptionException  [FE]      UnrecognizedOptionException    [CONTEXT]      private  void  init()  {  eatTheRest  =  false;  tokens.clear();      [BUGGY]  tokens.add(   "--n   ");  tokens.add( "--n   ");  currentOption  =  null;  [BUGGY]      currentOption  =  null;  }  [CLASS]  PosixParser  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  ArrayList  tokens  Options  options  Option  currentOption  boolean  eatTheRest  	projects/Cli2/src/java/org/apache/commons/cli/PosixParser.java	1.0	53	53	1	add	tokens.add(   "--n   ");    tokens.add( "--n   ");  currentOption  =  null;	  	compilable	  [FE]  UnrecognizedOptionException  	73	1	add
610	[BUG]  [BUGGY]  tokens.add(   "--n   ");  tokens.add( "--n   ");  currentOption  =  null;  [FE]  UnrecognizedOptionException  [FE]      UnrecognizedOptionException    [CONTEXT]      private  void  init()  {  eatTheRest  =  false;  tokens.clear();      [BUGGY]  tokens.add(   "--n   ");  tokens.add( "--n   ");  currentOption  =  null;  [BUGGY]      currentOption  =  null;  }  [CLASS]  PosixParser  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  ArrayList  tokens  Options  options  Option  currentOption  boolean  eatTheRest  	projects/Cli2/src/java/org/apache/commons/cli/PosixParser.java	1.0	53	53	1	replace	tokens.add(   "--n   ");    tokens.add( "--n   ");  currentOption  =  null;	  	compilable	  [FE]  UnrecognizedOptionException  	73	1	add
611	[BUG]  [BUGGY]  tokens.add(   "--n   ");  tokens.add( "--n');  [CE]  unclosed  string  literal  [FE]        UnrecognizedOptionException    [CONTEXT]      private  void  init()  {  eatTheRest  =  false;  tokens.clear();      [BUGGY]  tokens.add(   "--n   ");  tokens.add( "--n');  [BUGGY]      currentOption  =  null;  }  [CLASS]  PosixParser  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  ArrayList  tokens  Options  options  Option  currentOption  boolean  eatTheRest  	projects/Cli2/src/java/org/apache/commons/cli/PosixParser.java	1.0	53	53	1	replace	tokens.add(   "--n   ");    tokens.add( "--n');	  	non-compiled	[CE]  unclosed  string  literal	73	None	add
612	[BUG]  [BUGGY]  [FE]  UnrecognizedOptionException  [FE]          UnrecognizedOptionException    [CONTEXT]      private  void  init()  {  eatTheRest  =  false;  tokens.clear();      [BUGGY]  tokens.add(   "--n   ");  tokens.add( "--n   ");  eatTheRest  =  true;  [BUGGY]      currentOption  =  null;  }  [CLASS]  PosixParser  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  ArrayList  tokens  Options  options  Option  currentOption  boolean  eatTheRest  	projects/Cli2/src/java/org/apache/commons/cli/PosixParser.java	1.0	53	53	1	add	tokens.add(   "--n   ");    tokens.add( "--n   ");  eatTheRest  =  true;	  	compilable	  [FE]  UnrecognizedOptionException  	73	1	add
613	[BUG]  [BUGGY]  tokens.add(   "--n   ");  tokens.add( "--n   ");  eatTheRest  =  true;  [FE]  UnrecognizedOptionException  [FE]          UnrecognizedOptionException    [CONTEXT]      private  void  init()  {  eatTheRest  =  false;  tokens.clear();      [BUGGY]  tokens.add(   "--n   ");  tokens.add( "--n   ");  eatTheRest  =  true;  [BUGGY]      currentOption  =  null;  }  [CLASS]  PosixParser  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  ArrayList  tokens  Options  options  Option  currentOption  boolean  eatTheRest  	projects/Cli2/src/java/org/apache/commons/cli/PosixParser.java	1.0	53	53	1	replace	tokens.add(   "--n   ");    tokens.add( "--n   ");  eatTheRest  =  true;	  	compilable	  [FE]  UnrecognizedOptionException  	73	1	add
614	[BUG]  [BUGGY]  [FE]  UnrecognizedOptionException  [FE]    UnrecognizedOptionException    [CONTEXT]      private  void  init()  {  eatTheRest  =  false;  tokens.clear();      [BUGGY]  if(tokens!=  null)  {  eatTheRest  =  false;  tokens.clear();  }  if(tokens!=  null)  {  eatTheRest  =  false;  tokens.clear();  }  [BUGGY]      currentOption  =  null;  }  [CLASS]  PosixParser  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  ArrayList  tokens  Options  options  Option  currentOption  boolean  eatTheRest  	projects/Cli2/src/java/org/apache/commons/cli/PosixParser.java	1.0	53	53	1	add	if(tokens!=    null)    {    eatTheRest    =    false;    tokens.clear();    }    if(tokens!=  null)  {  eatTheRest  =  false;  tokens.clear();  }	  	compilable	  [FE]  UnrecognizedOptionException  	113	1	add
615	[BUG]  [BUGGY]  if(tokens!=  null)  {  eatTheRest  =  false;  tokens.clear();  }  if(tokens!=  null)  {  eatTheRest  =  false;  tokens.clear();  }  [FE]  UnrecognizedOptionException  [FE]    UnrecognizedOptionException    [CONTEXT]      private  void  init()  {  eatTheRest  =  false;  tokens.clear();      [BUGGY]  if(tokens!=  null)  {  eatTheRest  =  false;  tokens.clear();  }  if(tokens!=  null)  {  eatTheRest  =  false;  tokens.clear();  }  [BUGGY]      currentOption  =  null;  }  [CLASS]  PosixParser  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  ArrayList  tokens  Options  options  Option  currentOption  boolean  eatTheRest  	projects/Cli2/src/java/org/apache/commons/cli/PosixParser.java	1.0	53	53	1	replace	if(tokens!=    null)    {    eatTheRest    =    false;    tokens.clear();    }    if(tokens!=  null)  {  eatTheRest  =  false;  tokens.clear();  }	  	compilable	  [FE]  UnrecognizedOptionException  	113	1	add
616	[BUG]  [BUGGY]  [FE]  UnrecognizedOptionException  [FE]      UnrecognizedOptionException    [CONTEXT]      private  void  init()  {  eatTheRest  =  false;  tokens.clear();      [BUGGY]  if(tokens!=  null)  {  eatTheRest  =  false;  tokens.clear();  }  if(tokens  ==  null)  {  eatTheRest  =  false;  tokens.clear();  }  [BUGGY]      currentOption  =  null;  }  [CLASS]  PosixParser  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  ArrayList  tokens  Options  options  Option  currentOption  boolean  eatTheRest  	projects/Cli2/src/java/org/apache/commons/cli/PosixParser.java	1.0	53	53	1	add	if(tokens!=    null)    {    eatTheRest    =    false;    tokens.clear();    }    if(tokens  ==  null)  {  eatTheRest  =  false;  tokens.clear();  }	  	compilable	  [FE]  UnrecognizedOptionException  	113	1	add
617	[BUG]  [BUGGY]  if(tokens!=  null)  {  eatTheRest  =  false;  tokens.clear();  }  if(tokens  ==  null)  {  eatTheRest  =  false;  tokens.clear();  }  [FE]  UnrecognizedOptionException  [FE]      UnrecognizedOptionException    [CONTEXT]      private  void  init()  {  eatTheRest  =  false;  tokens.clear();      [BUGGY]  if(tokens!=  null)  {  eatTheRest  =  false;  tokens.clear();  }  if(tokens  ==  null)  {  eatTheRest  =  false;  tokens.clear();  }  [BUGGY]      currentOption  =  null;  }  [CLASS]  PosixParser  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  ArrayList  tokens  Options  options  Option  currentOption  boolean  eatTheRest  	projects/Cli2/src/java/org/apache/commons/cli/PosixParser.java	1.0	53	53	1	replace	if(tokens!=    null)    {    eatTheRest    =    false;    tokens.clear();    }    if(tokens  ==  null)  {  eatTheRest  =  false;  tokens.clear();  }	  	compilable	  [FE]  UnrecognizedOptionException  	113	1	add
618	[BUG]  [BUGGY]  if(tokens!=  null)  {  eatTheRest  =  false;  tokens.clear();  }  if(tokens!=  null)  {  eattheRest  =  false;  tokens.clear();  }  [CE]  cannot  find  symbol  eattheRest  [FE]        UnrecognizedOptionException    [CONTEXT]      private  void  init()  {  eatTheRest  =  false;  tokens.clear();      [BUGGY]  if(tokens!=  null)  {  eatTheRest  =  false;  tokens.clear();  }  if(tokens!=  null)  {  eattheRest  =  false;  tokens.clear();  }  [BUGGY]      currentOption  =  null;  }  [CLASS]  PosixParser  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  ArrayList  tokens  Options  options  Option  currentOption  boolean  eatTheRest  	projects/Cli2/src/java/org/apache/commons/cli/PosixParser.java	1.0	53	53	1	replace	if(tokens!=    null)    {    eatTheRest    =    false;    tokens.clear();    }    if(tokens!=  null)  {  eattheRest  =  false;  tokens.clear();  }	  	non-compiled	[CE]  cannot  find  symbol  eattheRest	113	None	add
619	[BUG]  [BUGGY]  if(tokens!=  null)  {  eatTheRest  =  false;  tokens.clear();  }  if(tokens  >=  null)  {  eatTheRest  =  false;  tokens.clear();  }  [CE]  bad  operand  types  for  binary  operator  '>='  [FE]          UnrecognizedOptionException    [CONTEXT]      private  void  init()  {  eatTheRest  =  false;  tokens.clear();      [BUGGY]  if(tokens!=  null)  {  eatTheRest  =  false;  tokens.clear();  }  if(tokens  >=  null)  {  eatTheRest  =  false;  tokens.clear();  }  [BUGGY]      currentOption  =  null;  }  [CLASS]  PosixParser  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  ArrayList  tokens  Options  options  Option  currentOption  boolean  eatTheRest  	projects/Cli2/src/java/org/apache/commons/cli/PosixParser.java	1.0	53	53	1	replace	if(tokens!=    null)    {    eatTheRest    =    false;    tokens.clear();    }    if(tokens  >=  null)  {  eatTheRest  =  false;  tokens.clear();  }	  	non-compiled	[CE]  bad  operand  types  for  binary  operator  '>='	113	None	add
620	[BUG]  [BUGGY]  currentOption  =  Option.newInstance(tokens);  [CE]  cannot  find  symbol  [FE]              UnrecognizedOptionException      [CONTEXT]      private  void  init()  {  eatTheRest  =  false;  tokens.clear();      [BUGGY]  currentOption  =  Option.newInstance(tokens);  [BUGGY]      }  [CLASS]  PosixParser  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  ArrayList  tokens  Options  options  Option  currentOption  boolean  eatTheRest  	projects/Cli2/src/java/org/apache/commons/cli/PosixParser.java	1.0	53	53	1	replace	currentOption  =  Option.newInstance(tokens);	  currentOption    =    Option.newInstance();    	non-compiled	[CE]  cannot  find  symbol	154	None	replace
621	[BUG]  [BUGGY]  currentOption  =  OptionUtil.newInstance();  [CE]  cannot  find  symbol  OptionUtil  [FE]                UnrecognizedOptionException      [CONTEXT]      private  void  init()  {  eatTheRest  =  false;  tokens.clear();      [BUGGY]  currentOption  =  OptionUtil.newInstance();  [BUGGY]      }  [CLASS]  PosixParser  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  ArrayList  tokens  Options  options  Option  currentOption  boolean  eatTheRest  	projects/Cli2/src/java/org/apache/commons/cli/PosixParser.java	1.0	53	53	1	replace	currentOption  =  OptionUtil.newInstance();	  currentOption    =    Option.newInstance();    	non-compiled	[CE]  cannot  find  symbol  OptionUtil	154	None	replace
622	[BUG]  [BUGGY]  [FE]  UnrecognizedOptionException  [FE]    UnrecognizedOptionException    [CONTEXT]      private  void  init()  {  eatTheRest  =  false;  tokens.clear();      [BUGGY]          eatTheRest    =    false;    tokens.clear();    tokens.clear();  eatTheRest  =  false;  tokens.clear();  tokens.clear();  [BUGGY]      currentOption  =  null;  }  [CLASS]  PosixParser  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  ArrayList  tokens  Options  options  Option  currentOption  boolean  eatTheRest  	projects/Cli2/src/java/org/apache/commons/cli/PosixParser.java	1.0	53	53	1	add	                eatTheRest        =        false;        tokens.clear();        tokens.clear();    eatTheRest  =  false;  tokens.clear();  tokens.clear();	  	compilable	  [FE]  UnrecognizedOptionException  	133	1	add
623	[BUG]  [BUGGY]          eatTheRest    =    false;    tokens.clear();    tokens.clear();  eatTheRest  =  false;  tokens.clear();  tokens.clear();  [FE]  UnrecognizedOptionException  [FE]    UnrecognizedOptionException    [CONTEXT]      private  void  init()  {  eatTheRest  =  false;  tokens.clear();      [BUGGY]          eatTheRest    =    false;    tokens.clear();    tokens.clear();  eatTheRest  =  false;  tokens.clear();  tokens.clear();  [BUGGY]      currentOption  =  null;  }  [CLASS]  PosixParser  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  ArrayList  tokens  Options  options  Option  currentOption  boolean  eatTheRest  	projects/Cli2/src/java/org/apache/commons/cli/PosixParser.java	1.0	53	53	1	replace	                eatTheRest        =        false;        tokens.clear();        tokens.clear();    eatTheRest  =  false;  tokens.clear();  tokens.clear();	  	compilable	  [FE]  UnrecognizedOptionException  	133	1	add
624	[BUG]  [BUGGY]          eatTheRest    =    false;    tokens.clear();    tokens.clear();  eattheRest  =  false;  tokens.clear();  tokens.clear();  [CE]  cannot  find  symbol  eattheRest  [FE]      UnrecognizedOptionException    [CONTEXT]      private  void  init()  {  eatTheRest  =  false;  tokens.clear();      [BUGGY]          eatTheRest    =    false;    tokens.clear();    tokens.clear();  eattheRest  =  false;  tokens.clear();  tokens.clear();  [BUGGY]      currentOption  =  null;  }  [CLASS]  PosixParser  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  ArrayList  tokens  Options  options  Option  currentOption  boolean  eatTheRest  	projects/Cli2/src/java/org/apache/commons/cli/PosixParser.java	1.0	53	53	1	replace	                eatTheRest        =        false;        tokens.clear();        tokens.clear();    eattheRest  =  false;  tokens.clear();  tokens.clear();	  	non-compiled	[CE]  cannot  find  symbol  eattheRest	133	None	add
625	[BUG]  [BUGGY]  [FE]  UnrecognizedOptionException  [FE]        UnrecognizedOptionException    [CONTEXT]      private  void  init()  {  eatTheRest  =  false;  tokens.clear();      [BUGGY]          eatTheRest    =    false;    tokens.clear();    tokens.clear();  eatTheRest  =  false;  tokens.clear();  tokens.clear();  currentOption  =  null;  [BUGGY]      currentOption  =  null;  }  [CLASS]  PosixParser  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  ArrayList  tokens  Options  options  Option  currentOption  boolean  eatTheRest  	projects/Cli2/src/java/org/apache/commons/cli/PosixParser.java	1.0	53	53	1	add	                eatTheRest        =        false;        tokens.clear();        tokens.clear();    eatTheRest  =  false;  tokens.clear();  tokens.clear();  currentOption  =  null;	  	compilable	  [FE]  UnrecognizedOptionException  	133	1	add
626	[BUG]  [BUGGY]          eatTheRest    =    false;    tokens.clear();    tokens.clear();  eatTheRest  =  false;  tokens.clear();  tokens.clear();  currentOption  =  null;  [FE]  UnrecognizedOptionException  [FE]        UnrecognizedOptionException    [CONTEXT]      private  void  init()  {  eatTheRest  =  false;  tokens.clear();      [BUGGY]          eatTheRest    =    false;    tokens.clear();    tokens.clear();  eatTheRest  =  false;  tokens.clear();  tokens.clear();  currentOption  =  null;  [BUGGY]      currentOption  =  null;  }  [CLASS]  PosixParser  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  ArrayList  tokens  Options  options  Option  currentOption  boolean  eatTheRest  	projects/Cli2/src/java/org/apache/commons/cli/PosixParser.java	1.0	53	53	1	replace	                eatTheRest        =        false;        tokens.clear();        tokens.clear();    eatTheRest  =  false;  tokens.clear();  tokens.clear();  currentOption  =  null;	  	compilable	  [FE]  UnrecognizedOptionException  	133	1	add
627	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]    UnrecognizedOptionException    [CONTEXT]      private  void  init()  {  eatTheRest  =  false;  tokens.clear();      [BUGGY]  if(!eatTheRest)  {  tokens.add( "-- ");  tokens.add( "-- ");  }  [BUGGY]      currentOption  =  null;  }  [CLASS]  PosixParser  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  ArrayList  tokens  Options  options  Option  currentOption  boolean  eatTheRest  	projects/Cli2/src/java/org/apache/commons/cli/PosixParser.java	1.0	53	53	1	add	if(!eatTheRest)  {  tokens.add( "-- ");  tokens.add( "-- ");  }	          tokens.add(       "--       ");    tokens.add(   "--       ");    	compilable	  [FE]  ComparisonFailure  	23	1	replace
628	[BUG]  [BUGGY]  if(!eatTheRest)  {  tokens.add( "-- ");  tokens.add( "-- ");  }  [FE]  ComparisonFailure  [FE]    UnrecognizedOptionException    [CONTEXT]      private  void  init()  {  eatTheRest  =  false;  tokens.clear();      [BUGGY]  if(!eatTheRest)  {  tokens.add( "-- ");  tokens.add( "-- ");  }  [BUGGY]      currentOption  =  null;  }  [CLASS]  PosixParser  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  ArrayList  tokens  Options  options  Option  currentOption  boolean  eatTheRest  	projects/Cli2/src/java/org/apache/commons/cli/PosixParser.java	1.0	53	53	1	replace	if(!eatTheRest)  {  tokens.add( "-- ");  tokens.add( "-- ");  }	          tokens.add(       "--       ");    tokens.add(   "--       ");    	compilable	  [FE]  ComparisonFailure  	23	1	replace
629	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]      UnrecognizedOptionException    [CONTEXT]      private  void  init()  {  eatTheRest  =  false;  tokens.clear();      [BUGGY]  if(!eatTheRest)  {  tokens.add( "-- ");  tokens.add( "-- ");  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      currentOption  =  null;  }  [CLASS]  PosixParser  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  ArrayList  tokens  Options  options  Option  currentOption  boolean  eatTheRest  	projects/Cli2/src/java/org/apache/commons/cli/PosixParser.java	1.0	53	53	1	add	if(!eatTheRest)  {  tokens.add( "-- ");  tokens.add( "-- ");  }  else  {  throw  new  IllegalArgumentException( " ");  }	          tokens.add(       "--       ");    tokens.add(   "--       ");    	compilable	  [FE]  ComparisonFailure  	23	1	replace
630	[BUG]  [BUGGY]  if(!eatTheRest)  {  tokens.add( "-- ");  tokens.add( "-- ");  }  else  {  throw  new  IllegalArgumentException( " ");  }  [FE]  ComparisonFailure  [FE]      UnrecognizedOptionException    [CONTEXT]      private  void  init()  {  eatTheRest  =  false;  tokens.clear();      [BUGGY]  if(!eatTheRest)  {  tokens.add( "-- ");  tokens.add( "-- ");  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      currentOption  =  null;  }  [CLASS]  PosixParser  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  ArrayList  tokens  Options  options  Option  currentOption  boolean  eatTheRest  	projects/Cli2/src/java/org/apache/commons/cli/PosixParser.java	1.0	53	53	1	replace	if(!eatTheRest)  {  tokens.add( "-- ");  tokens.add( "-- ");  }  else  {  throw  new  IllegalArgumentException( " ");  }	          tokens.add(       "--       ");    tokens.add(   "--       ");    	compilable	  [FE]  ComparisonFailure  	23	1	replace
631	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]        UnrecognizedOptionException    [CONTEXT]      private  void  init()  {  eatTheRest  =  false;  tokens.clear();      [BUGGY]  if(!eatTheRest)  {  tokens.add( "-- ");  tokens.add( "-- ");  }  else  {  currentOption  =  null;  }  [BUGGY]      currentOption  =  null;  }  [CLASS]  PosixParser  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  ArrayList  tokens  Options  options  Option  currentOption  boolean  eatTheRest  	projects/Cli2/src/java/org/apache/commons/cli/PosixParser.java	1.0	53	53	1	add	if(!eatTheRest)  {  tokens.add( "-- ");  tokens.add( "-- ");  }  else  {  currentOption  =  null;  }	          tokens.add(       "--       ");    tokens.add(   "--       ");    	compilable	  [FE]  ComparisonFailure  	23	1	replace
632	[BUG]  [BUGGY]  if(!eatTheRest)  {  tokens.add( "-- ");  tokens.add( "-- ");  }  else  {  currentOption  =  null;  }  [FE]  ComparisonFailure  [FE]        UnrecognizedOptionException    [CONTEXT]      private  void  init()  {  eatTheRest  =  false;  tokens.clear();      [BUGGY]  if(!eatTheRest)  {  tokens.add( "-- ");  tokens.add( "-- ");  }  else  {  currentOption  =  null;  }  [BUGGY]      currentOption  =  null;  }  [CLASS]  PosixParser  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  ArrayList  tokens  Options  options  Option  currentOption  boolean  eatTheRest  	projects/Cli2/src/java/org/apache/commons/cli/PosixParser.java	1.0	53	53	1	replace	if(!eatTheRest)  {  tokens.add( "-- ");  tokens.add( "-- ");  }  else  {  currentOption  =  null;  }	          tokens.add(       "--       ");    tokens.add(   "--       ");    	compilable	  [FE]  ComparisonFailure  	23	1	replace
633	[BUG]  [BUGGY]  [FE]  UnrecognizedOptionException  [FE]    UnrecognizedOptionException    [CONTEXT]      private  void  init()  {  eatTheRest  =  false;  tokens.clear();      [BUGGY]  if(!eatTheRest)  {  tokens.clear();  tokens.clear();  }  [BUGGY]      currentOption  =  null;  }  [CLASS]  PosixParser  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  ArrayList  tokens  Options  options  Option  currentOption  boolean  eatTheRest  	projects/Cli2/src/java/org/apache/commons/cli/PosixParser.java	1.0	53	53	1	add	if(!eatTheRest)  {  tokens.clear();  tokens.clear();  }	          tokens.clear();    tokens.clear();    	compilable	  [FE]  UnrecognizedOptionException  	60	1	replace
634	[BUG]  [BUGGY]  if(!eatTheRest)  {  tokens.clear();  tokens.clear();  }  [FE]  UnrecognizedOptionException  [FE]    UnrecognizedOptionException    [CONTEXT]      private  void  init()  {  eatTheRest  =  false;  tokens.clear();      [BUGGY]  if(!eatTheRest)  {  tokens.clear();  tokens.clear();  }  [BUGGY]      currentOption  =  null;  }  [CLASS]  PosixParser  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  ArrayList  tokens  Options  options  Option  currentOption  boolean  eatTheRest  	projects/Cli2/src/java/org/apache/commons/cli/PosixParser.java	1.0	53	53	1	replace	if(!eatTheRest)  {  tokens.clear();  tokens.clear();  }	          tokens.clear();    tokens.clear();    	compilable	  [FE]  UnrecognizedOptionException  	60	1	replace
635	[BUG]  [BUGGY]  if(!eatTheRest)  {  tokens.clear();  tokens.clear();  }  else  {  System.arraycopy(tokens,  0,  tokens,  0,  tokens.length);  }  [CE]  cannot  find  symbol  length  [FE]      UnrecognizedOptionException    [CONTEXT]      private  void  init()  {  eatTheRest  =  false;  tokens.clear();      [BUGGY]  if(!eatTheRest)  {  tokens.clear();  tokens.clear();  }  else  {  System.arraycopy(tokens,  0,  tokens,  0,  tokens.length);  }  [BUGGY]      currentOption  =  null;  }  [CLASS]  PosixParser  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  ArrayList  tokens  Options  options  Option  currentOption  boolean  eatTheRest  	projects/Cli2/src/java/org/apache/commons/cli/PosixParser.java	1.0	53	53	1	replace	if(!eatTheRest)  {  tokens.clear();  tokens.clear();  }  else  {  System.arraycopy(tokens,  0,  tokens,  0,  tokens.length);  }	          tokens.clear();    tokens.clear();    	non-compiled	[CE]  cannot  find  symbol  length	60	None	replace
636	[BUG]  [BUGGY]  [FE]  UnrecognizedOptionException  [FE]        UnrecognizedOptionException    [CONTEXT]      private  void  init()  {  eatTheRest  =  false;  tokens.clear();      [BUGGY]  if(!eatTheRest)  {  tokens.clear();  tokens.clear();  }  else  {  System.arraycopy(tokens,  0,  tokens,  0,  tokens.size());  }  [BUGGY]      currentOption  =  null;  }  [CLASS]  PosixParser  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  ArrayList  tokens  Options  options  Option  currentOption  boolean  eatTheRest  	projects/Cli2/src/java/org/apache/commons/cli/PosixParser.java	1.0	53	53	1	add	if(!eatTheRest)  {  tokens.clear();  tokens.clear();  }  else  {  System.arraycopy(tokens,  0,  tokens,  0,  tokens.size());  }	          tokens.clear();    tokens.clear();    	compilable	  [FE]  UnrecognizedOptionException  	60	1	replace
637	[BUG]  [BUGGY]  if(!eatTheRest)  {  tokens.clear();  tokens.clear();  }  else  {  System.arraycopy(tokens,  0,  tokens,  0,  tokens.size());  }  [FE]  UnrecognizedOptionException  [FE]        UnrecognizedOptionException    [CONTEXT]      private  void  init()  {  eatTheRest  =  false;  tokens.clear();      [BUGGY]  if(!eatTheRest)  {  tokens.clear();  tokens.clear();  }  else  {  System.arraycopy(tokens,  0,  tokens,  0,  tokens.size());  }  [BUGGY]      currentOption  =  null;  }  [CLASS]  PosixParser  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  ArrayList  tokens  Options  options  Option  currentOption  boolean  eatTheRest  	projects/Cli2/src/java/org/apache/commons/cli/PosixParser.java	1.0	53	53	1	replace	if(!eatTheRest)  {  tokens.clear();  tokens.clear();  }  else  {  System.arraycopy(tokens,  0,  tokens,  0,  tokens.size());  }	          tokens.clear();    tokens.clear();    	compilable	  [FE]  UnrecognizedOptionException  	60	1	replace
638	[BUG]  [BUGGY]  [FE]  UnrecognizedOptionException  [FE]    UnrecognizedOptionException    [CONTEXT]      private  void  init()  {  eatTheRest  =  false;  tokens.clear();      [BUGGY]          tokens.add(     "--     ");    tokens.add(   "--     ");  eatTheRest  =  true;  tokens.add( "--   ");  tokens.add( "--   ");  [BUGGY]      currentOption  =  null;  }  [CLASS]  PosixParser  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  ArrayList  tokens  Options  options  Option  currentOption  boolean  eatTheRest  	projects/Cli2/src/java/org/apache/commons/cli/PosixParser.java	1.0	53	53	1	add	                tokens.add(       "--       ");        tokens.add(   "--       ");    eatTheRest    =    true;    tokens.add( "--   ");  tokens.add( "--   ");	  	compilable	  [FE]  UnrecognizedOptionException  	26	1	add
639	[BUG]  [BUGGY]          tokens.add(     "--     ");    tokens.add(   "--     ");  eatTheRest  =  true;  tokens.add( "--   ");  tokens.add( "--   ");  [FE]  UnrecognizedOptionException  [FE]    UnrecognizedOptionException    [CONTEXT]      private  void  init()  {  eatTheRest  =  false;  tokens.clear();      [BUGGY]          tokens.add(     "--     ");    tokens.add(   "--     ");  eatTheRest  =  true;  tokens.add( "--   ");  tokens.add( "--   ");  [BUGGY]      currentOption  =  null;  }  [CLASS]  PosixParser  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  ArrayList  tokens  Options  options  Option  currentOption  boolean  eatTheRest  	projects/Cli2/src/java/org/apache/commons/cli/PosixParser.java	1.0	53	53	1	replace	                tokens.add(       "--       ");        tokens.add(   "--       ");    eatTheRest    =    true;    tokens.add( "--   ");  tokens.add( "--   ");	  	compilable	  [FE]  UnrecognizedOptionException  	26	1	add
640	[BUG]  [BUGGY]  [FE]  UnrecognizedOptionException  [FE]      UnrecognizedOptionException    [CONTEXT]      private  void  init()  {  eatTheRest  =  false;  tokens.clear();      [BUGGY]          tokens.add(     "--     ");    tokens.add(   "--     ");  eatTheRest  =  true;  tokens.add( "--   ");  tokens.add( "--   ");  eatTheRest  =  true;  [BUGGY]      currentOption  =  null;  }  [CLASS]  PosixParser  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  ArrayList  tokens  Options  options  Option  currentOption  boolean  eatTheRest  	projects/Cli2/src/java/org/apache/commons/cli/PosixParser.java	1.0	53	53	1	add	                tokens.add(       "--       ");        tokens.add(   "--       ");    eatTheRest    =    true;    tokens.add( "--   ");  tokens.add( "--   ");  eatTheRest  =  true;	  	compilable	  [FE]  UnrecognizedOptionException  	26	1	add
641	[BUG]  [BUGGY]          tokens.add(     "--     ");    tokens.add(   "--     ");  eatTheRest  =  true;  tokens.add( "--   ");  tokens.add( "--   ");  eatTheRest  =  true;  [FE]  UnrecognizedOptionException  [FE]      UnrecognizedOptionException    [CONTEXT]      private  void  init()  {  eatTheRest  =  false;  tokens.clear();      [BUGGY]          tokens.add(     "--     ");    tokens.add(   "--     ");  eatTheRest  =  true;  tokens.add( "--   ");  tokens.add( "--   ");  eatTheRest  =  true;  [BUGGY]      currentOption  =  null;  }  [CLASS]  PosixParser  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  ArrayList  tokens  Options  options  Option  currentOption  boolean  eatTheRest  	projects/Cli2/src/java/org/apache/commons/cli/PosixParser.java	1.0	53	53	1	replace	                tokens.add(       "--       ");        tokens.add(   "--       ");    eatTheRest    =    true;    tokens.add( "--   ");  tokens.add( "--   ");  eatTheRest  =  true;	  	compilable	  [FE]  UnrecognizedOptionException  	26	1	add
642	[BUG]  [BUGGY]  [FE]  UnrecognizedOptionException  [FE]          UnrecognizedOptionException    [CONTEXT]      private  void  init()  {  eatTheRest  =  false;  tokens.clear();      [BUGGY]          tokens.add(     "--     ");    tokens.add(   "--     ");  eatTheRest  =  true;  tokens.add( "--   ");  tokens.add( "--   ");  currentOption  =  null;  [BUGGY]      currentOption  =  null;  }  [CLASS]  PosixParser  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  ArrayList  tokens  Options  options  Option  currentOption  boolean  eatTheRest  	projects/Cli2/src/java/org/apache/commons/cli/PosixParser.java	1.0	53	53	1	add	                tokens.add(       "--       ");        tokens.add(   "--       ");    eatTheRest    =    true;    tokens.add( "--   ");  tokens.add( "--   ");  currentOption  =  null;	  	compilable	  [FE]  UnrecognizedOptionException  	26	1	add
643	[BUG]  [BUGGY]          tokens.add(     "--     ");    tokens.add(   "--     ");  eatTheRest  =  true;  tokens.add( "--   ");  tokens.add( "--   ");  currentOption  =  null;  [FE]  UnrecognizedOptionException  [FE]          UnrecognizedOptionException    [CONTEXT]      private  void  init()  {  eatTheRest  =  false;  tokens.clear();      [BUGGY]          tokens.add(     "--     ");    tokens.add(   "--     ");  eatTheRest  =  true;  tokens.add( "--   ");  tokens.add( "--   ");  currentOption  =  null;  [BUGGY]      currentOption  =  null;  }  [CLASS]  PosixParser  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  ArrayList  tokens  Options  options  Option  currentOption  boolean  eatTheRest  	projects/Cli2/src/java/org/apache/commons/cli/PosixParser.java	1.0	53	53	1	replace	                tokens.add(       "--       ");        tokens.add(   "--       ");    eatTheRest    =    true;    tokens.add( "--   ");  tokens.add( "--   ");  currentOption  =  null;	  	compilable	  [FE]  UnrecognizedOptionException  	26	1	add
644	[BUG]  [BUGGY]  [FE]  UnrecognizedOptionException  [FE]            UnrecognizedOptionException    [CONTEXT]      private  void  init()  {  eatTheRest  =  false;  tokens.clear();      [BUGGY]          tokens.add(     "--     ");    tokens.add(   "--     ");  eatTheRest  =  true;  tokens.remove( "-- ");  tokens.add( "-- ");  [BUGGY]      currentOption  =  null;  }  [CLASS]  PosixParser  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  ArrayList  tokens  Options  options  Option  currentOption  boolean  eatTheRest  	projects/Cli2/src/java/org/apache/commons/cli/PosixParser.java	1.0	53	53	1	add	                tokens.add(       "--       ");        tokens.add(   "--       ");    eatTheRest    =    true;    tokens.remove( "-- ");  tokens.add( "-- ");	  	compilable	  [FE]  UnrecognizedOptionException  	26	1	add
645	[BUG]  [BUGGY]          tokens.add(     "--     ");    tokens.add(   "--     ");  eatTheRest  =  true;  tokens.remove( "-- ");  tokens.add( "-- ");  [FE]  UnrecognizedOptionException  [FE]            UnrecognizedOptionException    [CONTEXT]      private  void  init()  {  eatTheRest  =  false;  tokens.clear();      [BUGGY]          tokens.add(     "--     ");    tokens.add(   "--     ");  eatTheRest  =  true;  tokens.remove( "-- ");  tokens.add( "-- ");  [BUGGY]      currentOption  =  null;  }  [CLASS]  PosixParser  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  ArrayList  tokens  Options  options  Option  currentOption  boolean  eatTheRest  	projects/Cli2/src/java/org/apache/commons/cli/PosixParser.java	1.0	53	53	1	replace	                tokens.add(       "--       ");        tokens.add(   "--       ");    eatTheRest    =    true;    tokens.remove( "-- ");  tokens.add( "-- ");	  	compilable	  [FE]  UnrecognizedOptionException  	26	1	add
646	[BUG]  [BUGGY]  [FE]  UnrecognizedOptionException  [FE]    UnrecognizedOptionException    [CONTEXT]      private  void  init()  {  eatTheRest  =  false;  tokens.clear();      [BUGGY]  currentOption  =  Option.OK_STANDARD?  null  :  Option.OK_STANDARD;  currentOption  =  Option.OK_STANDARD?  null  :  Option.OK_STANDARD;  [BUGGY]      }  [CLASS]  PosixParser  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  ArrayList  tokens  Options  options  Option  currentOption  boolean  eatTheRest  	projects/Cli2/src/java/org/apache/commons/cli/PosixParser.java	1.0	53	53	1	add	currentOption    =    Option.OK_STANDARD?    null    :    Option.OK_STANDARD;    currentOption  =  Option.OK_STANDARD?  null  :  Option.OK_STANDARD;	  	compilable	  [FE]  UnrecognizedOptionException  	18	1	add
647	[BUG]  [BUGGY]  currentOption  =  Option.OK_STANDARD?  null  :  Option.OK_STANDARD;  currentOption  =  Option.OK_STANDARD?  null  :  Option.OK_STANDARD;  [FE]  UnrecognizedOptionException  [FE]    UnrecognizedOptionException    [CONTEXT]      private  void  init()  {  eatTheRest  =  false;  tokens.clear();      [BUGGY]  currentOption  =  Option.OK_STANDARD?  null  :  Option.OK_STANDARD;  currentOption  =  Option.OK_STANDARD?  null  :  Option.OK_STANDARD;  [BUGGY]      }  [CLASS]  PosixParser  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  ArrayList  tokens  Options  options  Option  currentOption  boolean  eatTheRest  	projects/Cli2/src/java/org/apache/commons/cli/PosixParser.java	1.0	53	53	1	replace	currentOption    =    Option.OK_STANDARD?    null    :    Option.OK_STANDARD;    currentOption  =  Option.OK_STANDARD?  null  :  Option.OK_STANDARD;	  	compilable	  [FE]  UnrecognizedOptionException  	18	1	add
648	[BUG]  [BUGGY]  [FE]  UnrecognizedOptionException  [FE]      UnrecognizedOptionException    [CONTEXT]      private  void  init()  {  eatTheRest  =  false;  tokens.clear();      [BUGGY]  currentOption  =  Option.OK_STANDARD?  null  :  Option.OK_STANDARD;  tokens.clear();  currentOption  =  Option.OK_STANDARD?  null  :  Option.OK_STANDARD;  [BUGGY]      }  [CLASS]  PosixParser  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  ArrayList  tokens  Options  options  Option  currentOption  boolean  eatTheRest  	projects/Cli2/src/java/org/apache/commons/cli/PosixParser.java	1.0	53	53	1	add	currentOption    =    Option.OK_STANDARD?    null    :    Option.OK_STANDARD;    tokens.clear();  currentOption  =  Option.OK_STANDARD?  null  :  Option.OK_STANDARD;	  	compilable	  [FE]  UnrecognizedOptionException  	18	1	add
649	[BUG]  [BUGGY]  currentOption  =  Option.OK_STANDARD?  null  :  Option.OK_STANDARD;  tokens.clear();  currentOption  =  Option.OK_STANDARD?  null  :  Option.OK_STANDARD;  [FE]  UnrecognizedOptionException  [FE]      UnrecognizedOptionException    [CONTEXT]      private  void  init()  {  eatTheRest  =  false;  tokens.clear();      [BUGGY]  currentOption  =  Option.OK_STANDARD?  null  :  Option.OK_STANDARD;  tokens.clear();  currentOption  =  Option.OK_STANDARD?  null  :  Option.OK_STANDARD;  [BUGGY]      }  [CLASS]  PosixParser  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  ArrayList  tokens  Options  options  Option  currentOption  boolean  eatTheRest  	projects/Cli2/src/java/org/apache/commons/cli/PosixParser.java	1.0	53	53	1	replace	currentOption    =    Option.OK_STANDARD?    null    :    Option.OK_STANDARD;    tokens.clear();  currentOption  =  Option.OK_STANDARD?  null  :  Option.OK_STANDARD;	  	compilable	  [FE]  UnrecognizedOptionException  	18	1	add
650	[BUG]  [BUGGY]  [FE]  UnrecognizedOptionException  [FE]        UnrecognizedOptionException    [CONTEXT]      private  void  init()  {  eatTheRest  =  false;  tokens.clear();      [BUGGY]  currentOption  =  Option.OK_STANDARD?  null  :  Option.OK_STANDARD;  Option  currentOption  =  Option.OK_STANDARD?  null  :  Option.OK_STANDARD;  [BUGGY]      }  [CLASS]  PosixParser  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  ArrayList  tokens  Options  options  Option  currentOption  boolean  eatTheRest  	projects/Cli2/src/java/org/apache/commons/cli/PosixParser.java	1.0	53	53	1	add	currentOption    =    Option.OK_STANDARD?    null    :    Option.OK_STANDARD;    Option  currentOption  =  Option.OK_STANDARD?  null  :  Option.OK_STANDARD;	  	compilable	  [FE]  UnrecognizedOptionException  	18	1	add
651	[BUG]  [BUGGY]  currentOption  =  Option.OK_STANDARD?  null  :  Option.OK_STANDARD;  Option  currentOption  =  Option.OK_STANDARD?  null  :  Option.OK_STANDARD;  [FE]  UnrecognizedOptionException  [FE]        UnrecognizedOptionException    [CONTEXT]      private  void  init()  {  eatTheRest  =  false;  tokens.clear();      [BUGGY]  currentOption  =  Option.OK_STANDARD?  null  :  Option.OK_STANDARD;  Option  currentOption  =  Option.OK_STANDARD?  null  :  Option.OK_STANDARD;  [BUGGY]      }  [CLASS]  PosixParser  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  ArrayList  tokens  Options  options  Option  currentOption  boolean  eatTheRest  	projects/Cli2/src/java/org/apache/commons/cli/PosixParser.java	1.0	53	53	1	replace	currentOption    =    Option.OK_STANDARD?    null    :    Option.OK_STANDARD;    Option  currentOption  =  Option.OK_STANDARD?  null  :  Option.OK_STANDARD;	  	compilable	  [FE]  UnrecognizedOptionException  	18	1	add
652	[BUG]  [BUGGY]  [FE]  UnrecognizedOptionException  [FE]          UnrecognizedOptionException    [CONTEXT]      private  void  init()  {  eatTheRest  =  false;  tokens.clear();      [BUGGY]  currentOption  =  Option.OK_STANDARD?  null  :  Option.OK_STANDARD;  currentOption  =  Option.OK_STANDARD?  null  :  Option.OK_STANDARD;  tokens.clear();  [BUGGY]      }  [CLASS]  PosixParser  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  ArrayList  tokens  Options  options  Option  currentOption  boolean  eatTheRest  	projects/Cli2/src/java/org/apache/commons/cli/PosixParser.java	1.0	53	53	1	add	currentOption    =    Option.OK_STANDARD?    null    :    Option.OK_STANDARD;    currentOption  =  Option.OK_STANDARD?  null  :  Option.OK_STANDARD;  tokens.clear();	  	compilable	  [FE]  UnrecognizedOptionException  	18	1	add
653	[BUG]  [BUGGY]  currentOption  =  Option.OK_STANDARD?  null  :  Option.OK_STANDARD;  currentOption  =  Option.OK_STANDARD?  null  :  Option.OK_STANDARD;  tokens.clear();  [FE]  UnrecognizedOptionException  [FE]          UnrecognizedOptionException    [CONTEXT]      private  void  init()  {  eatTheRest  =  false;  tokens.clear();      [BUGGY]  currentOption  =  Option.OK_STANDARD?  null  :  Option.OK_STANDARD;  currentOption  =  Option.OK_STANDARD?  null  :  Option.OK_STANDARD;  tokens.clear();  [BUGGY]      }  [CLASS]  PosixParser  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  ArrayList  tokens  Options  options  Option  currentOption  boolean  eatTheRest  	projects/Cli2/src/java/org/apache/commons/cli/PosixParser.java	1.0	53	53	1	replace	currentOption    =    Option.OK_STANDARD?    null    :    Option.OK_STANDARD;    currentOption  =  Option.OK_STANDARD?  null  :  Option.OK_STANDARD;  tokens.clear();	  	compilable	  [FE]  UnrecognizedOptionException  	18	1	add
654	[BUG]  [BUGGY]  [FE]  UnrecognizedOptionException  [FE]    UnrecognizedOptionException    [CONTEXT]      private  void  init()  {  eatTheRest  =  false;  tokens.clear();      [BUGGY]  tokens.clear();  currentOption  =  Option.OK_STANDARD;  [BUGGY]      }  [CLASS]  PosixParser  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  ArrayList  tokens  Options  options  Option  currentOption  boolean  eatTheRest  	projects/Cli2/src/java/org/apache/commons/cli/PosixParser.java	1.0	53	53	1	add	tokens.clear();  currentOption  =  Option.OK_STANDARD;	  currentOption    =    Option.OK_STANDARD;    tokens.clear();    currentOption    =    Option.OK_STANDARD;    	compilable	  [FE]  UnrecognizedOptionException  	84	1	replace
655	[BUG]  [BUGGY]  tokens.clear();  currentOption  =  Option.OK_STANDARD;  [FE]  UnrecognizedOptionException  [FE]    UnrecognizedOptionException    [CONTEXT]      private  void  init()  {  eatTheRest  =  false;  tokens.clear();      [BUGGY]  tokens.clear();  currentOption  =  Option.OK_STANDARD;  [BUGGY]      }  [CLASS]  PosixParser  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  ArrayList  tokens  Options  options  Option  currentOption  boolean  eatTheRest  	projects/Cli2/src/java/org/apache/commons/cli/PosixParser.java	1.0	53	53	1	replace	tokens.clear();  currentOption  =  Option.OK_STANDARD;	  currentOption    =    Option.OK_STANDARD;    tokens.clear();    currentOption    =    Option.OK_STANDARD;    	compilable	  [FE]  UnrecognizedOptionException  	84	1	replace
656	[BUG]  [BUGGY]  [FE]  UnrecognizedOptionException  [FE]      UnrecognizedOptionException    [CONTEXT]      private  void  init()  {  eatTheRest  =  false;  tokens.clear();      [BUGGY]  if(!eatTheRest)  {  currentOption  =  Option.OK_STANDARD;  tokens.clear();  currentOption  =  Option.OK_STANDARD;  }  [BUGGY]      }  [CLASS]  PosixParser  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  ArrayList  tokens  Options  options  Option  currentOption  boolean  eatTheRest  	projects/Cli2/src/java/org/apache/commons/cli/PosixParser.java	1.0	53	53	1	add	if(!eatTheRest)  {  currentOption  =  Option.OK_STANDARD;  tokens.clear();  currentOption  =  Option.OK_STANDARD;  }	  currentOption    =    Option.OK_STANDARD;    tokens.clear();    currentOption    =    Option.OK_STANDARD;    	compilable	  [FE]  UnrecognizedOptionException  	84	1	replace
657	[BUG]  [BUGGY]  if(!eatTheRest)  {  currentOption  =  Option.OK_STANDARD;  tokens.clear();  currentOption  =  Option.OK_STANDARD;  }  [FE]  UnrecognizedOptionException  [FE]      UnrecognizedOptionException    [CONTEXT]      private  void  init()  {  eatTheRest  =  false;  tokens.clear();      [BUGGY]  if(!eatTheRest)  {  currentOption  =  Option.OK_STANDARD;  tokens.clear();  currentOption  =  Option.OK_STANDARD;  }  [BUGGY]      }  [CLASS]  PosixParser  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  ArrayList  tokens  Options  options  Option  currentOption  boolean  eatTheRest  	projects/Cli2/src/java/org/apache/commons/cli/PosixParser.java	1.0	53	53	1	replace	if(!eatTheRest)  {  currentOption  =  Option.OK_STANDARD;  tokens.clear();  currentOption  =  Option.OK_STANDARD;  }	  currentOption    =    Option.OK_STANDARD;    tokens.clear();    currentOption    =    Option.OK_STANDARD;    	compilable	  [FE]  UnrecognizedOptionException  	84	1	replace
658	[BUG]  [BUGGY]  [FE]  UnrecognizedOptionException  [FE]        UnrecognizedOptionException    [CONTEXT]      private  void  init()  {  eatTheRest  =  false;  tokens.clear();      [BUGGY]  if(eatTheRest)  {  currentOption  =  Option.OK_STANDARD;  tokens.clear();  currentOption  =  Option.OK_STANDARD;  }  [BUGGY]      }  [CLASS]  PosixParser  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  ArrayList  tokens  Options  options  Option  currentOption  boolean  eatTheRest  	projects/Cli2/src/java/org/apache/commons/cli/PosixParser.java	1.0	53	53	1	add	if(eatTheRest)  {  currentOption  =  Option.OK_STANDARD;  tokens.clear();  currentOption  =  Option.OK_STANDARD;  }	  currentOption    =    Option.OK_STANDARD;    tokens.clear();    currentOption    =    Option.OK_STANDARD;    	compilable	  [FE]  UnrecognizedOptionException  	84	1	replace
659	[BUG]  [BUGGY]  if(eatTheRest)  {  currentOption  =  Option.OK_STANDARD;  tokens.clear();  currentOption  =  Option.OK_STANDARD;  }  [FE]  UnrecognizedOptionException  [FE]        UnrecognizedOptionException    [CONTEXT]      private  void  init()  {  eatTheRest  =  false;  tokens.clear();      [BUGGY]  if(eatTheRest)  {  currentOption  =  Option.OK_STANDARD;  tokens.clear();  currentOption  =  Option.OK_STANDARD;  }  [BUGGY]      }  [CLASS]  PosixParser  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  ArrayList  tokens  Options  options  Option  currentOption  boolean  eatTheRest  	projects/Cli2/src/java/org/apache/commons/cli/PosixParser.java	1.0	53	53	1	replace	if(eatTheRest)  {  currentOption  =  Option.OK_STANDARD;  tokens.clear();  currentOption  =  Option.OK_STANDARD;  }	  currentOption    =    Option.OK_STANDARD;    tokens.clear();    currentOption    =    Option.OK_STANDARD;    	compilable	  [FE]  UnrecognizedOptionException  	84	1	replace
660	[BUG]  [BUGGY]  [FE]  UnrecognizedOptionException  [FE]          UnrecognizedOptionException    [CONTEXT]      private  void  init()  {  eatTheRest  =  false;  tokens.clear();      [BUGGY]  float  currentOption  =  Option.OK_STANDARD;  tokens.clear();  currentOption  =  Option.OK_STANDARD;  [BUGGY]      }  [CLASS]  PosixParser  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  ArrayList  tokens  Options  options  Option  currentOption  boolean  eatTheRest  	projects/Cli2/src/java/org/apache/commons/cli/PosixParser.java	1.0	53	53	1	add	float  currentOption  =  Option.OK_STANDARD;  tokens.clear();  currentOption  =  Option.OK_STANDARD;	  currentOption    =    Option.OK_STANDARD;    tokens.clear();    currentOption    =    Option.OK_STANDARD;    	compilable	  [FE]  UnrecognizedOptionException  	84	1	replace
661	[BUG]  [BUGGY]  float  currentOption  =  Option.OK_STANDARD;  tokens.clear();  currentOption  =  Option.OK_STANDARD;  [FE]  UnrecognizedOptionException  [FE]          UnrecognizedOptionException    [CONTEXT]      private  void  init()  {  eatTheRest  =  false;  tokens.clear();      [BUGGY]  float  currentOption  =  Option.OK_STANDARD;  tokens.clear();  currentOption  =  Option.OK_STANDARD;  [BUGGY]      }  [CLASS]  PosixParser  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  ArrayList  tokens  Options  options  Option  currentOption  boolean  eatTheRest  	projects/Cli2/src/java/org/apache/commons/cli/PosixParser.java	1.0	53	53	1	replace	float  currentOption  =  Option.OK_STANDARD;  tokens.clear();  currentOption  =  Option.OK_STANDARD;	  currentOption    =    Option.OK_STANDARD;    tokens.clear();    currentOption    =    Option.OK_STANDARD;    	compilable	  [FE]  UnrecognizedOptionException  	84	1	replace
662	[BUG]  [BUGGY]  [FE]  UnrecognizedOptionException  [FE]    UnrecognizedOptionException    [CONTEXT]      private  void  init()  {  eatTheRest  =  false;  tokens.clear();      [BUGGY]  tokens.add(   "n   ");  tokens.add( "n   ");  [BUGGY]      currentOption  =  null;  }  [CLASS]  PosixParser  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  ArrayList  tokens  Options  options  Option  currentOption  boolean  eatTheRest  	projects/Cli2/src/java/org/apache/commons/cli/PosixParser.java	1.0	53	53	1	add	tokens.add(   "n   ");    tokens.add( "n   ");	  	compilable	  [FE]  UnrecognizedOptionException  	96	1	add
663	[BUG]  [BUGGY]  tokens.add(   "n   ");  tokens.add( "n   ");  [FE]  UnrecognizedOptionException  [FE]    UnrecognizedOptionException    [CONTEXT]      private  void  init()  {  eatTheRest  =  false;  tokens.clear();      [BUGGY]  tokens.add(   "n   ");  tokens.add( "n   ");  [BUGGY]      currentOption  =  null;  }  [CLASS]  PosixParser  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  ArrayList  tokens  Options  options  Option  currentOption  boolean  eatTheRest  	projects/Cli2/src/java/org/apache/commons/cli/PosixParser.java	1.0	53	53	1	replace	tokens.add(   "n   ");    tokens.add( "n   ");	  	compilable	  [FE]  UnrecognizedOptionException  	96	1	add
664	[BUG]  [BUGGY]  [FE]  UnrecognizedOptionException  [FE]      UnrecognizedOptionException    [CONTEXT]      private  void  init()  {  eatTheRest  =  false;  tokens.clear();      [BUGGY]  tokens.add(   "n   ");  tokens.add( "n   ");  currentOption  =  null;  [BUGGY]      currentOption  =  null;  }  [CLASS]  PosixParser  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  ArrayList  tokens  Options  options  Option  currentOption  boolean  eatTheRest  	projects/Cli2/src/java/org/apache/commons/cli/PosixParser.java	1.0	53	53	1	add	tokens.add(   "n   ");    tokens.add( "n   ");  currentOption  =  null;	  	compilable	  [FE]  UnrecognizedOptionException  	96	1	add
665	[BUG]  [BUGGY]  tokens.add(   "n   ");  tokens.add( "n   ");  currentOption  =  null;  [FE]  UnrecognizedOptionException  [FE]      UnrecognizedOptionException    [CONTEXT]      private  void  init()  {  eatTheRest  =  false;  tokens.clear();      [BUGGY]  tokens.add(   "n   ");  tokens.add( "n   ");  currentOption  =  null;  [BUGGY]      currentOption  =  null;  }  [CLASS]  PosixParser  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  ArrayList  tokens  Options  options  Option  currentOption  boolean  eatTheRest  	projects/Cli2/src/java/org/apache/commons/cli/PosixParser.java	1.0	53	53	1	replace	tokens.add(   "n   ");    tokens.add( "n   ");  currentOption  =  null;	  	compilable	  [FE]  UnrecognizedOptionException  	96	1	add
666	[BUG]  [BUGGY]  [FE]  UnrecognizedOptionException  [FE]        UnrecognizedOptionException    [CONTEXT]      private  void  init()  {  eatTheRest  =  false;  tokens.clear();      [BUGGY]  tokens.add(   "n   ");  tokens.add( ",n   ");  [BUGGY]      currentOption  =  null;  }  [CLASS]  PosixParser  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  ArrayList  tokens  Options  options  Option  currentOption  boolean  eatTheRest  	projects/Cli2/src/java/org/apache/commons/cli/PosixParser.java	1.0	53	53	1	add	tokens.add(   "n   ");    tokens.add( ",n   ");	  	compilable	  [FE]  UnrecognizedOptionException  	96	1	add
667	[BUG]  [BUGGY]  tokens.add(   "n   ");  tokens.add( ",n   ");  [FE]  UnrecognizedOptionException  [FE]        UnrecognizedOptionException    [CONTEXT]      private  void  init()  {  eatTheRest  =  false;  tokens.clear();      [BUGGY]  tokens.add(   "n   ");  tokens.add( ",n   ");  [BUGGY]      currentOption  =  null;  }  [CLASS]  PosixParser  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  ArrayList  tokens  Options  options  Option  currentOption  boolean  eatTheRest  	projects/Cli2/src/java/org/apache/commons/cli/PosixParser.java	1.0	53	53	1	replace	tokens.add(   "n   ");    tokens.add( ",n   ");	  	compilable	  [FE]  UnrecognizedOptionException  	96	1	add
668	[BUG]  [BUGGY]  ArrayList  <  Option>  tokens  =  new  ArrayList  <  Option>(size());  [CE]  cannot  find  symbol  [FE]          UnrecognizedOptionException      [CONTEXT]      private  void  init()  {  eatTheRest  =  false;  tokens.clear();      [BUGGY]  ArrayList  <  Option>  tokens  =  new  ArrayList  <  Option>(size());  [BUGGY]      currentOption  =  null;  }  [CLASS]  PosixParser  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  ArrayList  tokens  Options  options  Option  currentOption  boolean  eatTheRest  	projects/Cli2/src/java/org/apache/commons/cli/PosixParser.java	1.0	53	53	1	replace	ArrayList  <  Option>  tokens  =  new  ArrayList  <  Option>(size());	          tokens.clear();    ArrayList    <    Option>    tokens    =    new    ArrayList    <    Option>(size());    	non-compiled	[CE]  cannot  find  symbol	146	None	replace
669	[BUG]  [BUGGY]  tokens.clear();  List  <  Option>  tokens  =  new  ArrayList  <  Option>(size());  [CE]  cannot  find  symbol  [FE]            UnrecognizedOptionException      [CONTEXT]      private  void  init()  {  eatTheRest  =  false;  tokens.clear();      [BUGGY]  tokens.clear();  List  <  Option>  tokens  =  new  ArrayList  <  Option>(size());  [BUGGY]      currentOption  =  null;  }  [CLASS]  PosixParser  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  ArrayList  tokens  Options  options  Option  currentOption  boolean  eatTheRest  	projects/Cli2/src/java/org/apache/commons/cli/PosixParser.java	1.0	53	53	1	replace	tokens.clear();  List  <  Option>  tokens  =  new  ArrayList  <  Option>(size());	          tokens.clear();    ArrayList    <    Option>    tokens    =    new    ArrayList    <    Option>(size());    	non-compiled	[CE]  cannot  find  symbol	146	None	replace
670	[BUG]  [BUGGY]  [FE]  UnrecognizedOptionException  [FE]    UnrecognizedOptionException    [CONTEXT]      private  void  init()  {  eatTheRest  =  false;  tokens.clear();      [BUGGY]  tokens.add( "00 ");  [BUGGY]      currentOption  =  null;  }  [CLASS]  PosixParser  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  ArrayList  tokens  Options  options  Option  currentOption  boolean  eatTheRest  	projects/Cli2/src/java/org/apache/commons/cli/PosixParser.java	1.0	53	53	1	add	tokens.add( "00 ");	  tokens.add(   "u00   ");    	compilable	  [FE]  UnrecognizedOptionException  	149	1	replace
671	[BUG]  [BUGGY]  tokens.add( "00 ");  [FE]  UnrecognizedOptionException  [FE]    UnrecognizedOptionException    [CONTEXT]      private  void  init()  {  eatTheRest  =  false;  tokens.clear();      [BUGGY]  tokens.add( "00 ");  [BUGGY]      currentOption  =  null;  }  [CLASS]  PosixParser  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  ArrayList  tokens  Options  options  Option  currentOption  boolean  eatTheRest  	projects/Cli2/src/java/org/apache/commons/cli/PosixParser.java	1.0	53	53	1	replace	tokens.add( "00 ");	  tokens.add(   "u00   ");    	compilable	  [FE]  UnrecognizedOptionException  	149	1	replace
672	[BUG]  [BUGGY]  [FE]  UnrecognizedOptionException  [FE]      UnrecognizedOptionException    [CONTEXT]      private  void  init()  {  eatTheRest  =  false;  tokens.clear();      [BUGGY]  tokens.add( "-00 ");  [BUGGY]      currentOption  =  null;  }  [CLASS]  PosixParser  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  ArrayList  tokens  Options  options  Option  currentOption  boolean  eatTheRest  	projects/Cli2/src/java/org/apache/commons/cli/PosixParser.java	1.0	53	53	1	add	tokens.add( "-00 ");	  tokens.add(   "u00   ");    	compilable	  [FE]  UnrecognizedOptionException  	149	1	replace
673	[BUG]  [BUGGY]  tokens.add( "-00 ");  [FE]  UnrecognizedOptionException  [FE]      UnrecognizedOptionException    [CONTEXT]      private  void  init()  {  eatTheRest  =  false;  tokens.clear();      [BUGGY]  tokens.add( "-00 ");  [BUGGY]      currentOption  =  null;  }  [CLASS]  PosixParser  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  ArrayList  tokens  Options  options  Option  currentOption  boolean  eatTheRest  	projects/Cli2/src/java/org/apache/commons/cli/PosixParser.java	1.0	53	53	1	replace	tokens.add( "-00 ");	  tokens.add(   "u00   ");    	compilable	  [FE]  UnrecognizedOptionException  	149	1	replace
674	[BUG]  [BUGGY]  [FE]  UnrecognizedOptionException  [FE]        UnrecognizedOptionException    [CONTEXT]      private  void  init()  {  eatTheRest  =  false;  tokens.clear();      [BUGGY]  tokens.add( "$00 ");  [BUGGY]      currentOption  =  null;  }  [CLASS]  PosixParser  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  ArrayList  tokens  Options  options  Option  currentOption  boolean  eatTheRest  	projects/Cli2/src/java/org/apache/commons/cli/PosixParser.java	1.0	53	53	1	add	tokens.add( "$00 ");	  tokens.add(   "u00   ");    	compilable	  [FE]  UnrecognizedOptionException  	149	1	replace
675	[BUG]  [BUGGY]  tokens.add( "$00 ");  [FE]  UnrecognizedOptionException  [FE]        UnrecognizedOptionException    [CONTEXT]      private  void  init()  {  eatTheRest  =  false;  tokens.clear();      [BUGGY]  tokens.add( "$00 ");  [BUGGY]      currentOption  =  null;  }  [CLASS]  PosixParser  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  ArrayList  tokens  Options  options  Option  currentOption  boolean  eatTheRest  	projects/Cli2/src/java/org/apache/commons/cli/PosixParser.java	1.0	53	53	1	replace	tokens.add( "$00 ");	  tokens.add(   "u00   ");    	compilable	  [FE]  UnrecognizedOptionException  	149	1	replace
676	[BUG]  [BUGGY]  CurrentOption  currentOption  =  options.newInstance();  [CE]  cannot  find  symbol  [FE]                UnrecognizedOptionException      [CONTEXT]      private  void  init()  {  eatTheRest  =  false;  tokens.clear();      [BUGGY]  CurrentOption  currentOption  =  options.newInstance();  [BUGGY]      }  [CLASS]  PosixParser  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  ArrayList  tokens  Options  options  Option  currentOption  boolean  eatTheRest  	projects/Cli2/src/java/org/apache/commons/cli/PosixParser.java	1.0	53	53	1	replace	CurrentOption  currentOption  =  options.newInstance();	  currentOption    =    options.newInstance();    	non-compiled	[CE]  cannot  find  symbol	76	None	replace
677	[BUG]  [BUGGY]  currentOption  =  options.newInstance(),  tokens);  [CE]  ';'  expected  [FE]                  UnrecognizedOptionException      [CONTEXT]      private  void  init()  {  eatTheRest  =  false;  tokens.clear();      [BUGGY]  currentOption  =  options.newInstance(),  tokens);  [BUGGY]      }  [CLASS]  PosixParser  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  ArrayList  tokens  Options  options  Option  currentOption  boolean  eatTheRest  	projects/Cli2/src/java/org/apache/commons/cli/PosixParser.java	1.0	53	53	1	replace	currentOption  =  options.newInstance(),  tokens);	  currentOption    =    options.newInstance();    	non-compiled	[CE]  ';'  expected	76	None	replace
678	[BUG]  [BUGGY]  currentOption  =  options.clone();  [CE]  clone()  has  protected  access  in  Object  [FE]            UnrecognizedOptionException      [CONTEXT]      private  void  init()  {  eatTheRest  =  false;  tokens.clear();      [BUGGY]  currentOption  =  options.clone();  [BUGGY]      }  [CLASS]  PosixParser  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  ArrayList  tokens  Options  options  Option  currentOption  boolean  eatTheRest  	projects/Cli2/src/java/org/apache/commons/cli/PosixParser.java	1.0	53	53	1	replace	currentOption  =  options.clone();	  currentOption    =    options.cloneOption();    	non-compiled	[CE]  clone()  has  protected  access  in  Object	117	None	replace
679	[BUG]  [BUGGY]  currentOption  =  options.clonePosition();  [CE]  cannot  find  symbol  [FE]              UnrecognizedOptionException      [CONTEXT]      private  void  init()  {  eatTheRest  =  false;  tokens.clear();      [BUGGY]  currentOption  =  options.clonePosition();  [BUGGY]      }  [CLASS]  PosixParser  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  ArrayList  tokens  Options  options  Option  currentOption  boolean  eatTheRest  	projects/Cli2/src/java/org/apache/commons/cli/PosixParser.java	1.0	53	53	1	replace	currentOption  =  options.clonePosition();	  currentOption    =    options.cloneOption();    	non-compiled	[CE]  cannot  find  symbol	117	None	replace
680	[BUG]  [BUGGY]  Set  <  Option>  tokens  =  new  HashSet  <  Option>();  [CE]  cannot  find  symbol  [FE]        UnrecognizedOptionException      [CONTEXT]      private  void  init()  {  eatTheRest  =  false;  tokens.clear();      [BUGGY]  Set  <  Option>  tokens  =  new  HashSet  <  Option>();  [BUGGY]      currentOption  =  null;  }  [CLASS]  PosixParser  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  ArrayList  tokens  Options  options  Option  currentOption  boolean  eatTheRest  	projects/Cli2/src/java/org/apache/commons/cli/PosixParser.java	1.0	53	53	1	replace	Set  <  Option>  tokens  =  new  HashSet  <  Option>();	          ArrayList    <    Option>    tokens    =    new    ArrayList    <    Option>();    List    <    Option>    tokens    =    new    ArrayList    <    Option>();    	non-compiled	[CE]  cannot  find  symbol	160	None	replace
681	[BUG]  [BUGGY]  tokens.clear();  currentOption  =  null;  tokens  =  new  TokenBuffer(tokens.size());  [CE]  cannot  find  symbol  [FE]        UnrecognizedOptionException      [CONTEXT]      private  void  init()  {  eatTheRest  =  false;  tokens.clear();      [BUGGY]  tokens.clear();  currentOption  =  null;  tokens  =  new  TokenBuffer(tokens.size());  [BUGGY]      currentOption  =  null;  }  [CLASS]  PosixParser  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  ArrayList  tokens  Options  options  Option  currentOption  boolean  eatTheRest  	projects/Cli2/src/java/org/apache/commons/cli/PosixParser.java	1.0	53	53	1	replace	tokens.clear();  currentOption  =  null;  tokens  =  new  TokenBuffer(tokens.size());	          tokens.clear();    currentOption    =    null;    TokenBuffer    tokens    =    new    TokenBuffer(tokens.size());    	non-compiled	[CE]  cannot  find  symbol	129	None	replace
682	[BUG]  [BUGGY]  [FE]  UnrecognizedOptionException  [FE]    UnrecognizedOptionException    [CONTEXT]      private  void  init()  {  eatTheRest  =  false;  tokens.clear();      [BUGGY]  currentOption    =    Option.OK_STANDARD;    ArrayList  <  Option>  tokens  =  new  ArrayList  <  Option>(tokens.size());  ArrayList  <  Option>  tokens  =  new  ArrayList  <  Option>(tokens.size());  currentOption  =  Option.OK_STANDARD;  tokens.clear();  [BUGGY]      }  [CLASS]  PosixParser  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  ArrayList  tokens  Options  options  Option  currentOption  boolean  eatTheRest  	projects/Cli2/src/java/org/apache/commons/cli/PosixParser.java	1.0	53	53	1	add	currentOption        =        Option.OK_STANDARD;        ArrayList    <    Option>    tokens    =    new    ArrayList    <    Option>(tokens.size());    ArrayList  <  Option>  tokens  =  new  ArrayList  <  Option>(tokens.size());  currentOption  =  Option.OK_STANDARD;  tokens.clear();	  	compilable	  [FE]  UnrecognizedOptionException  	81	1	add
683	[BUG]  [BUGGY]  currentOption    =    Option.OK_STANDARD;    ArrayList  <  Option>  tokens  =  new  ArrayList  <  Option>(tokens.size());  ArrayList  <  Option>  tokens  =  new  ArrayList  <  Option>(tokens.size());  currentOption  =  Option.OK_STANDARD;  tokens.clear();  [FE]  UnrecognizedOptionException  [FE]    UnrecognizedOptionException    [CONTEXT]      private  void  init()  {  eatTheRest  =  false;  tokens.clear();      [BUGGY]  currentOption    =    Option.OK_STANDARD;    ArrayList  <  Option>  tokens  =  new  ArrayList  <  Option>(tokens.size());  ArrayList  <  Option>  tokens  =  new  ArrayList  <  Option>(tokens.size());  currentOption  =  Option.OK_STANDARD;  tokens.clear();  [BUGGY]      }  [CLASS]  PosixParser  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  ArrayList  tokens  Options  options  Option  currentOption  boolean  eatTheRest  	projects/Cli2/src/java/org/apache/commons/cli/PosixParser.java	1.0	53	53	1	replace	currentOption        =        Option.OK_STANDARD;        ArrayList    <    Option>    tokens    =    new    ArrayList    <    Option>(tokens.size());    ArrayList  <  Option>  tokens  =  new  ArrayList  <  Option>(tokens.size());  currentOption  =  Option.OK_STANDARD;  tokens.clear();	  	compilable	  [FE]  UnrecognizedOptionException  	81	1	add
684	[BUG]  [BUGGY]  [FE]  UnrecognizedOptionException  [FE]      UnrecognizedOptionException    [CONTEXT]      private  void  init()  {  eatTheRest  =  false;  tokens.clear();      [BUGGY]  currentOption    =    Option.OK_STANDARD;    ArrayList  <  Option>  tokens  =  new  ArrayList  <  Option>(tokens.size());  currentOption  =  Option.OK_STANDARD;  tokens.clear();  [BUGGY]      }  [CLASS]  PosixParser  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  ArrayList  tokens  Options  options  Option  currentOption  boolean  eatTheRest  	projects/Cli2/src/java/org/apache/commons/cli/PosixParser.java	1.0	53	53	1	add	currentOption        =        Option.OK_STANDARD;        ArrayList    <    Option>    tokens    =    new    ArrayList    <    Option>(tokens.size());    currentOption  =  Option.OK_STANDARD;  tokens.clear();	  	compilable	  [FE]  UnrecognizedOptionException  	81	1	add
685	[BUG]  [BUGGY]  currentOption    =    Option.OK_STANDARD;    ArrayList  <  Option>  tokens  =  new  ArrayList  <  Option>(tokens.size());  currentOption  =  Option.OK_STANDARD;  tokens.clear();  [FE]  UnrecognizedOptionException  [FE]      UnrecognizedOptionException    [CONTEXT]      private  void  init()  {  eatTheRest  =  false;  tokens.clear();      [BUGGY]  currentOption    =    Option.OK_STANDARD;    ArrayList  <  Option>  tokens  =  new  ArrayList  <  Option>(tokens.size());  currentOption  =  Option.OK_STANDARD;  tokens.clear();  [BUGGY]      }  [CLASS]  PosixParser  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  ArrayList  tokens  Options  options  Option  currentOption  boolean  eatTheRest  	projects/Cli2/src/java/org/apache/commons/cli/PosixParser.java	1.0	53	53	1	replace	currentOption        =        Option.OK_STANDARD;        ArrayList    <    Option>    tokens    =    new    ArrayList    <    Option>(tokens.size());    currentOption  =  Option.OK_STANDARD;  tokens.clear();	  	compilable	  [FE]  UnrecognizedOptionException  	81	1	add
686	[BUG]  [BUGGY]  [FE]  UnrecognizedOptionException  [FE]        UnrecognizedOptionException    [CONTEXT]      private  void  init()  {  eatTheRest  =  false;  tokens.clear();      [BUGGY]  currentOption    =    Option.OK_STANDARD;    ArrayList  <  Option>  tokens  =  new  ArrayList  <  Option>(tokens.size());  if(currentOption!=  null)  {  tokens.add(currentOption);  currentOption  =  Option.OK_STANDARD;  tokens.add(currentOption);  }  [BUGGY]      }  [CLASS]  PosixParser  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  ArrayList  tokens  Options  options  Option  currentOption  boolean  eatTheRest  	projects/Cli2/src/java/org/apache/commons/cli/PosixParser.java	1.0	53	53	1	add	currentOption        =        Option.OK_STANDARD;        ArrayList    <    Option>    tokens    =    new    ArrayList    <    Option>(tokens.size());    if(currentOption!=  null)  {  tokens.add(currentOption);  currentOption  =  Option.OK_STANDARD;  tokens.add(currentOption);  }	  	compilable	  [FE]  UnrecognizedOptionException  	81	1	add
687	[BUG]  [BUGGY]  currentOption    =    Option.OK_STANDARD;    ArrayList  <  Option>  tokens  =  new  ArrayList  <  Option>(tokens.size());  if(currentOption!=  null)  {  tokens.add(currentOption);  currentOption  =  Option.OK_STANDARD;  tokens.add(currentOption);  }  [FE]  UnrecognizedOptionException  [FE]        UnrecognizedOptionException    [CONTEXT]      private  void  init()  {  eatTheRest  =  false;  tokens.clear();      [BUGGY]  currentOption    =    Option.OK_STANDARD;    ArrayList  <  Option>  tokens  =  new  ArrayList  <  Option>(tokens.size());  if(currentOption!=  null)  {  tokens.add(currentOption);  currentOption  =  Option.OK_STANDARD;  tokens.add(currentOption);  }  [BUGGY]      }  [CLASS]  PosixParser  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  ArrayList  tokens  Options  options  Option  currentOption  boolean  eatTheRest  	projects/Cli2/src/java/org/apache/commons/cli/PosixParser.java	1.0	53	53	1	replace	currentOption        =        Option.OK_STANDARD;        ArrayList    <    Option>    tokens    =    new    ArrayList    <    Option>(tokens.size());    if(currentOption!=  null)  {  tokens.add(currentOption);  currentOption  =  Option.OK_STANDARD;  tokens.add(currentOption);  }	  	compilable	  [FE]  UnrecognizedOptionException  	81	1	add
688	[BUG]  [BUGGY]  Option  currentOption  =  options.getOption(tokens,  true);  [CE]  method  getOption  in  class  Options  cannot  be  applied  to  given  types;  [FE]                    UnrecognizedOptionException      [CONTEXT]      private  void  init()  {  eatTheRest  =  false;  tokens.clear();      [BUGGY]  Option  currentOption  =  options.getOption(tokens,  true);  [BUGGY]      currentOption  =  null;  }  [CLASS]  PosixParser  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  ArrayList  tokens  Options  options  Option  currentOption  boolean  eatTheRest  	projects/Cli2/src/java/org/apache/commons/cli/PosixParser.java	1.0	53	53	1	replace	Option  currentOption  =  options.getOption(tokens,  true);	  Option    currentOption    =    options.getOption(tokens);    	non-compiled	[CE]  method  getOption  in  class  Options  cannot  be  applied  to  given  types;	69	None	replace
689	[BUG]  [BUGGY]  [FE]  UnrecognizedOptionException  [FE]    UnrecognizedOptionException    [CONTEXT]      private  void  init()  {  eatTheRest  =  false;  tokens.clear();      [BUGGY]  currentOption  =  Option.OK_STANDARD;  ArrayList  <  Option>  tokens  =  new  ArrayList  <  Option>(tokens.size()  +  1);  [BUGGY]      }  [CLASS]  PosixParser  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  ArrayList  tokens  Options  options  Option  currentOption  boolean  eatTheRest  	projects/Cli2/src/java/org/apache/commons/cli/PosixParser.java	1.0	53	53	1	add	currentOption  =  Option.OK_STANDARD;  ArrayList  <  Option>  tokens  =  new  ArrayList  <  Option>(tokens.size()  +  1);	  currentOption    =    Option.OK_STANDARD;    ArrayList    <    Option>    tokens    =    new    ArrayList    <    Option>(tokens.size());    	compilable	  [FE]  UnrecognizedOptionException  	82	1	replace
690	[BUG]  [BUGGY]  currentOption  =  Option.OK_STANDARD;  ArrayList  <  Option>  tokens  =  new  ArrayList  <  Option>(tokens.size()  +  1);  [FE]  UnrecognizedOptionException  [FE]    UnrecognizedOptionException    [CONTEXT]      private  void  init()  {  eatTheRest  =  false;  tokens.clear();      [BUGGY]  currentOption  =  Option.OK_STANDARD;  ArrayList  <  Option>  tokens  =  new  ArrayList  <  Option>(tokens.size()  +  1);  [BUGGY]      }  [CLASS]  PosixParser  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  ArrayList  tokens  Options  options  Option  currentOption  boolean  eatTheRest  	projects/Cli2/src/java/org/apache/commons/cli/PosixParser.java	1.0	53	53	1	replace	currentOption  =  Option.OK_STANDARD;  ArrayList  <  Option>  tokens  =  new  ArrayList  <  Option>(tokens.size()  +  1);	  currentOption    =    Option.OK_STANDARD;    ArrayList    <    Option>    tokens    =    new    ArrayList    <    Option>(tokens.size());    	compilable	  [FE]  UnrecognizedOptionException  	82	1	replace
691	[BUG]  [BUGGY]  if(!eatTheRest)  {  tokens.clear();  currentOption  =  null;  }  else  {  options.addOption(options);  }  [CE]  no  suitable  method  found  for  addOption(Options)  [FE]        UnrecognizedOptionException      [CONTEXT]      private  void  init()  {  eatTheRest  =  false;  tokens.clear();      [BUGGY]  if(!eatTheRest)  {  tokens.clear();  currentOption  =  null;  }  else  {  options.addOption(options);  }  [BUGGY]      currentOption  =  null;  }  [CLASS]  PosixParser  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  ArrayList  tokens  Options  options  Option  currentOption  boolean  eatTheRest  	projects/Cli2/src/java/org/apache/commons/cli/PosixParser.java	1.0	53	53	1	replace	if(!eatTheRest)  {  tokens.clear();  currentOption  =  null;  }  else  {  options.addOption(options);  }	  if(eatTheRest)    {    tokens.clear();    currentOption    =    null;    }    else    {    options.addOption(options);    }    	non-compiled	[CE]  no  suitable  method  found  for  addOption(Options)	159	None	replace
692	[BUG]  [BUGGY]  [FE]  UnrecognizedOptionException  [FE]    UnrecognizedOptionException    [CONTEXT]      private  void  init()  {  eatTheRest  =  false;  tokens.clear();      [BUGGY]          ArrayList    <    Option>    tokens    =    new    ArrayList    <    Option>();    new  ArrayList  <  Option>();  new  ArrayList  <  Option>();  [BUGGY]      currentOption  =  null;  }  [CLASS]  PosixParser  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  ArrayList  tokens  Options  options  Option  currentOption  boolean  eatTheRest  	projects/Cli2/src/java/org/apache/commons/cli/PosixParser.java	1.0	53	53	1	add	                ArrayList        <        Option>        tokens        =        new        ArrayList        <        Option>();        new    ArrayList    <    Option>();    new  ArrayList  <  Option>();	  	compilable	  [FE]  UnrecognizedOptionException  	45	1	add
693	[BUG]  [BUGGY]          ArrayList    <    Option>    tokens    =    new    ArrayList    <    Option>();    new  ArrayList  <  Option>();  new  ArrayList  <  Option>();  [FE]  UnrecognizedOptionException  [FE]    UnrecognizedOptionException    [CONTEXT]      private  void  init()  {  eatTheRest  =  false;  tokens.clear();      [BUGGY]          ArrayList    <    Option>    tokens    =    new    ArrayList    <    Option>();    new  ArrayList  <  Option>();  new  ArrayList  <  Option>();  [BUGGY]      currentOption  =  null;  }  [CLASS]  PosixParser  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  ArrayList  tokens  Options  options  Option  currentOption  boolean  eatTheRest  	projects/Cli2/src/java/org/apache/commons/cli/PosixParser.java	1.0	53	53	1	replace	                ArrayList        <        Option>        tokens        =        new        ArrayList        <        Option>();        new    ArrayList    <    Option>();    new  ArrayList  <  Option>();	  	compilable	  [FE]  UnrecognizedOptionException  	45	1	add
694	[BUG]  [BUGGY]          ArrayList    <    Option>    tokens    =    new    ArrayList    <    Option>();    new  ArrayList  <  Option>();  ArrayList  <  Option>  tokens  =  new  ArrayList  <  Option>();  currentOption  =  null;  [CE]  variable  tokens  is  already  defined  in  method  init()  [FE]      UnrecognizedOptionException    [CONTEXT]      private  void  init()  {  eatTheRest  =  false;  tokens.clear();      [BUGGY]          ArrayList    <    Option>    tokens    =    new    ArrayList    <    Option>();    new  ArrayList  <  Option>();  ArrayList  <  Option>  tokens  =  new  ArrayList  <  Option>();  currentOption  =  null;  [BUGGY]      currentOption  =  null;  }  [CLASS]  PosixParser  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  ArrayList  tokens  Options  options  Option  currentOption  boolean  eatTheRest  	projects/Cli2/src/java/org/apache/commons/cli/PosixParser.java	1.0	53	53	1	replace	                ArrayList        <        Option>        tokens        =        new        ArrayList        <        Option>();        new    ArrayList    <    Option>();    ArrayList  <  Option>  tokens  =  new  ArrayList  <  Option>();  currentOption  =  null;	  	non-compiled	[CE]  variable  tokens  is  already  defined  in  method  init()	45	None	add
695	[BUG]  [BUGGY]  [FE]  UnrecognizedOptionException  [FE]    UnrecognizedOptionException    [CONTEXT]      private  void  init()  {  eatTheRest  =  false;  tokens.clear();      [BUGGY]  if(currentOption!=  null)  {  eatTheRest  =  false;  tokens.clear();  }  if(currentOption!=  null)  {  currentOption  =  null;  tokens.clear();  }  [BUGGY]      currentOption  =  null;  }  [CLASS]  PosixParser  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  ArrayList  tokens  Options  options  Option  currentOption  boolean  eatTheRest  	projects/Cli2/src/java/org/apache/commons/cli/PosixParser.java	1.0	53	53	1	add	if(currentOption!=    null)    {    eatTheRest    =    false;    tokens.clear();    }    if(currentOption!=  null)  {  currentOption  =  null;  tokens.clear();  }	  	compilable	  [FE]  UnrecognizedOptionException  	37	1	add
696	[BUG]  [BUGGY]  if(currentOption!=  null)  {  eatTheRest  =  false;  tokens.clear();  }  if(currentOption!=  null)  {  currentOption  =  null;  tokens.clear();  }  [FE]  UnrecognizedOptionException  [FE]    UnrecognizedOptionException    [CONTEXT]      private  void  init()  {  eatTheRest  =  false;  tokens.clear();      [BUGGY]  if(currentOption!=  null)  {  eatTheRest  =  false;  tokens.clear();  }  if(currentOption!=  null)  {  currentOption  =  null;  tokens.clear();  }  [BUGGY]      currentOption  =  null;  }  [CLASS]  PosixParser  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  ArrayList  tokens  Options  options  Option  currentOption  boolean  eatTheRest  	projects/Cli2/src/java/org/apache/commons/cli/PosixParser.java	1.0	53	53	1	replace	if(currentOption!=    null)    {    eatTheRest    =    false;    tokens.clear();    }    if(currentOption!=  null)  {  currentOption  =  null;  tokens.clear();  }	  	compilable	  [FE]  UnrecognizedOptionException  	37	1	add
697	[BUG]  [BUGGY]  [FE]  UnrecognizedOptionException  [FE]    UnrecognizedOptionException    [CONTEXT]      private  void  init()  {  eatTheRest  =  false;  tokens.clear();      [BUGGY]  if(currentOption!=  null)  {  tokens.clear();  tokens.clear();  }  [BUGGY]      currentOption  =  null;  }  [CLASS]  PosixParser  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  ArrayList  tokens  Options  options  Option  currentOption  boolean  eatTheRest  	projects/Cli2/src/java/org/apache/commons/cli/PosixParser.java	1.0	53	53	1	add	if(currentOption!=  null)  {  tokens.clear();  tokens.clear();  }	          tokens.clear();    tokens.clear();    	compilable	  [FE]  UnrecognizedOptionException  	60	1	replace
698	[BUG]  [BUGGY]  if(currentOption!=  null)  {  tokens.clear();  tokens.clear();  }  [FE]  UnrecognizedOptionException  [FE]    UnrecognizedOptionException    [CONTEXT]      private  void  init()  {  eatTheRest  =  false;  tokens.clear();      [BUGGY]  if(currentOption!=  null)  {  tokens.clear();  tokens.clear();  }  [BUGGY]      currentOption  =  null;  }  [CLASS]  PosixParser  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  ArrayList  tokens  Options  options  Option  currentOption  boolean  eatTheRest  	projects/Cli2/src/java/org/apache/commons/cli/PosixParser.java	1.0	53	53	1	replace	if(currentOption!=  null)  {  tokens.clear();  tokens.clear();  }	          tokens.clear();    tokens.clear();    	compilable	  [FE]  UnrecognizedOptionException  	60	1	replace
699	[BUG]  [BUGGY]  [FE]  UnrecognizedOptionException  [FE]      UnrecognizedOptionException    [CONTEXT]      private  void  init()  {  eatTheRest  =  false;  tokens.clear();      [BUGGY]  if(currentOption  ==  null)  {  tokens.clear();  tokens.clear();  }  [BUGGY]      currentOption  =  null;  }  [CLASS]  PosixParser  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  ArrayList  tokens  Options  options  Option  currentOption  boolean  eatTheRest  	projects/Cli2/src/java/org/apache/commons/cli/PosixParser.java	1.0	53	53	1	add	if(currentOption  ==  null)  {  tokens.clear();  tokens.clear();  }	          tokens.clear();    tokens.clear();    	compilable	  [FE]  UnrecognizedOptionException  	60	1	replace
700	[BUG]  [BUGGY]  if(currentOption  ==  null)  {  tokens.clear();  tokens.clear();  }  [FE]  UnrecognizedOptionException  [FE]      UnrecognizedOptionException    [CONTEXT]      private  void  init()  {  eatTheRest  =  false;  tokens.clear();      [BUGGY]  if(currentOption  ==  null)  {  tokens.clear();  tokens.clear();  }  [BUGGY]      currentOption  =  null;  }  [CLASS]  PosixParser  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  ArrayList  tokens  Options  options  Option  currentOption  boolean  eatTheRest  	projects/Cli2/src/java/org/apache/commons/cli/PosixParser.java	1.0	53	53	1	replace	if(currentOption  ==  null)  {  tokens.clear();  tokens.clear();  }	          tokens.clear();    tokens.clear();    	compilable	  [FE]  UnrecognizedOptionException  	60	1	replace
701	[BUG]  [BUGGY]  [FE]  UnrecognizedOptionException  [FE]    UnrecognizedOptionException    [CONTEXT]      private  void  init()  {  eatTheRest  =  false;  tokens.clear();      [BUGGY]  tokens.add(   "-   ");  tokens.add( ".- ");  [BUGGY]      currentOption  =  null;  }  [CLASS]  PosixParser  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  ArrayList  tokens  Options  options  Option  currentOption  boolean  eatTheRest  	projects/Cli2/src/java/org/apache/commons/cli/PosixParser.java	1.0	53	53	1	add	tokens.add(   "-   ");    tokens.add( ".- ");	  	compilable	  [FE]  UnrecognizedOptionException  	99	1	add
702	[BUG]  [BUGGY]  tokens.add(   "-   ");  tokens.add( ".- ");  [FE]  UnrecognizedOptionException  [FE]    UnrecognizedOptionException    [CONTEXT]      private  void  init()  {  eatTheRest  =  false;  tokens.clear();      [BUGGY]  tokens.add(   "-   ");  tokens.add( ".- ");  [BUGGY]      currentOption  =  null;  }  [CLASS]  PosixParser  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  ArrayList  tokens  Options  options  Option  currentOption  boolean  eatTheRest  	projects/Cli2/src/java/org/apache/commons/cli/PosixParser.java	1.0	53	53	1	replace	tokens.add(   "-   ");    tokens.add( ".- ");	  	compilable	  [FE]  UnrecognizedOptionException  	99	1	add
703	[BUG]  [BUGGY]  [FE]  UnrecognizedOptionException  [FE]      UnrecognizedOptionException    [CONTEXT]      private  void  init()  {  eatTheRest  =  false;  tokens.clear();      [BUGGY]  tokens.add(   "-   ");  tokens.add( "-  -   ");  [BUGGY]      currentOption  =  null;  }  [CLASS]  PosixParser  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  ArrayList  tokens  Options  options  Option  currentOption  boolean  eatTheRest  	projects/Cli2/src/java/org/apache/commons/cli/PosixParser.java	1.0	53	53	1	add	tokens.add(   "-   ");    tokens.add( "-  -   ");	  	compilable	  [FE]  UnrecognizedOptionException  	99	1	add
704	[BUG]  [BUGGY]  tokens.add(   "-   ");  tokens.add( "-  -   ");  [FE]  UnrecognizedOptionException  [FE]      UnrecognizedOptionException    [CONTEXT]      private  void  init()  {  eatTheRest  =  false;  tokens.clear();      [BUGGY]  tokens.add(   "-   ");  tokens.add( "-  -   ");  [BUGGY]      currentOption  =  null;  }  [CLASS]  PosixParser  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  ArrayList  tokens  Options  options  Option  currentOption  boolean  eatTheRest  	projects/Cli2/src/java/org/apache/commons/cli/PosixParser.java	1.0	53	53	1	replace	tokens.add(   "-   ");    tokens.add( "-  -   ");	  	compilable	  [FE]  UnrecognizedOptionException  	99	1	add
705	[BUG]  [BUGGY]  if(!eatTheRest)  {  tokens.clear();  ArrayList  <  Option>  tokens  =  new  ArrayList  <  Option>();  System.arraycopy(options,  0,  tokens,  0,  tokens.length);  }  [CE]  cannot  find  symbol  length  [FE]    UnrecognizedOptionException    [CONTEXT]      private  void  init()  {  eatTheRest  =  false;  tokens.clear();      [BUGGY]  if(!eatTheRest)  {  tokens.clear();  ArrayList  <  Option>  tokens  =  new  ArrayList  <  Option>();  System.arraycopy(options,  0,  tokens,  0,  tokens.length);  }  [BUGGY]      currentOption  =  null;  }  [CLASS]  PosixParser  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  ArrayList  tokens  Options  options  Option  currentOption  boolean  eatTheRest  	projects/Cli2/src/java/org/apache/commons/cli/PosixParser.java	1.0	53	53	1	replace	if(!eatTheRest)  {  tokens.clear();  ArrayList  <  Option>  tokens  =  new  ArrayList  <  Option>();  System.arraycopy(options,  0,  tokens,  0,  tokens.length);  }	          tokens.clear();    ArrayList    <    Option>    tokens    =    new    ArrayList    <    Option>();    	non-compiled	[CE]  cannot  find  symbol  length	63	None	replace
706	[BUG]  [BUGGY]  [FE]  NullPointerException  [FE]      UnrecognizedOptionException    [CONTEXT]      private  void  init()  {  eatTheRest  =  false;  tokens.clear();      [BUGGY]  if(!eatTheRest)  {  tokens.clear();  ArrayList  <  Option>  tokens  =  new  ArrayList  <  Option>();  System.arraycopy(options,  0,  tokens,  0,  tokens.size());  }  [BUGGY]      currentOption  =  null;  }  [CLASS]  PosixParser  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  ArrayList  tokens  Options  options  Option  currentOption  boolean  eatTheRest  	projects/Cli2/src/java/org/apache/commons/cli/PosixParser.java	1.0	53	53	1	add	if(!eatTheRest)  {  tokens.clear();  ArrayList  <  Option>  tokens  =  new  ArrayList  <  Option>();  System.arraycopy(options,  0,  tokens,  0,  tokens.size());  }	          tokens.clear();    ArrayList    <    Option>    tokens    =    new    ArrayList    <    Option>();    	compilable	  [FE]  NullPointerException  	63	1	replace
707	[BUG]  [BUGGY]  if(!eatTheRest)  {  tokens.clear();  ArrayList  <  Option>  tokens  =  new  ArrayList  <  Option>();  System.arraycopy(options,  0,  tokens,  0,  tokens.size());  }  [FE]  NullPointerException  [FE]      UnrecognizedOptionException    [CONTEXT]      private  void  init()  {  eatTheRest  =  false;  tokens.clear();      [BUGGY]  if(!eatTheRest)  {  tokens.clear();  ArrayList  <  Option>  tokens  =  new  ArrayList  <  Option>();  System.arraycopy(options,  0,  tokens,  0,  tokens.size());  }  [BUGGY]      currentOption  =  null;  }  [CLASS]  PosixParser  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  ArrayList  tokens  Options  options  Option  currentOption  boolean  eatTheRest  	projects/Cli2/src/java/org/apache/commons/cli/PosixParser.java	1.0	53	53	1	replace	if(!eatTheRest)  {  tokens.clear();  ArrayList  <  Option>  tokens  =  new  ArrayList  <  Option>();  System.arraycopy(options,  0,  tokens,  0,  tokens.size());  }	          tokens.clear();    ArrayList    <    Option>    tokens    =    new    ArrayList    <    Option>();    	compilable	  [FE]  NullPointerException  	63	1	replace
708	[BUG]  [BUGGY]  [FE]  UnrecognizedOptionException  [FE]    UnrecognizedOptionException    [CONTEXT]      private  void  init()  {  eatTheRest  =  false;  tokens.clear();      [BUGGY]          tokens.clear();    currentOption    =    null;    eatTheRest  =  false;  tokens.clear();  currentOption  =  null;  ArrayList  <  Option>  tokens  =  new  ArrayList  <  Option>();  [BUGGY]      currentOption  =  null;  }  [CLASS]  PosixParser  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  ArrayList  tokens  Options  options  Option  currentOption  boolean  eatTheRest  	projects/Cli2/src/java/org/apache/commons/cli/PosixParser.java	1.0	53	53	1	add	                tokens.clear();        currentOption        =        null;        eatTheRest    =    false;    tokens.clear();    currentOption    =    null;    ArrayList  <  Option>  tokens  =  new  ArrayList  <  Option>();	  	compilable	  [FE]  UnrecognizedOptionException  	157	1	add
709	[BUG]  [BUGGY]          tokens.clear();    currentOption    =    null;    eatTheRest  =  false;  tokens.clear();  currentOption  =  null;  ArrayList  <  Option>  tokens  =  new  ArrayList  <  Option>();  [FE]  UnrecognizedOptionException  [FE]    UnrecognizedOptionException    [CONTEXT]      private  void  init()  {  eatTheRest  =  false;  tokens.clear();      [BUGGY]          tokens.clear();    currentOption    =    null;    eatTheRest  =  false;  tokens.clear();  currentOption  =  null;  ArrayList  <  Option>  tokens  =  new  ArrayList  <  Option>();  [BUGGY]      currentOption  =  null;  }  [CLASS]  PosixParser  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  ArrayList  tokens  Options  options  Option  currentOption  boolean  eatTheRest  	projects/Cli2/src/java/org/apache/commons/cli/PosixParser.java	1.0	53	53	1	replace	                tokens.clear();        currentOption        =        null;        eatTheRest    =    false;    tokens.clear();    currentOption    =    null;    ArrayList  <  Option>  tokens  =  new  ArrayList  <  Option>();	  	compilable	  [FE]  UnrecognizedOptionException  	157	1	add
710	[BUG]  [BUGGY]          tokens.clear();    currentOption    =    null;    eatTheRest  =  false;  tokens.clear();  currentOption  =  null;  ArrayList  <  Option>  tokens  =  new  ArrayList  <  Option>(tokens.size());  [CE]  variable  tokens  might  not  have  been  initialized  [FE]      UnrecognizedOptionException    [CONTEXT]      private  void  init()  {  eatTheRest  =  false;  tokens.clear();      [BUGGY]          tokens.clear();    currentOption    =    null;    eatTheRest  =  false;  tokens.clear();  currentOption  =  null;  ArrayList  <  Option>  tokens  =  new  ArrayList  <  Option>(tokens.size());  [BUGGY]      currentOption  =  null;  }  [CLASS]  PosixParser  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  ArrayList  tokens  Options  options  Option  currentOption  boolean  eatTheRest  	projects/Cli2/src/java/org/apache/commons/cli/PosixParser.java	1.0	53	53	1	replace	                tokens.clear();        currentOption        =        null;        eatTheRest    =    false;    tokens.clear();    currentOption    =    null;    ArrayList  <  Option>  tokens  =  new  ArrayList  <  Option>(tokens.size());	  	non-compiled	[CE]  variable  tokens  might  not  have  been  initialized	157	None	add
711	[BUG]  [BUGGY]          tokens.clear();    currentOption    =    null;    eatTheRest  =  false;  tokens.clear();  currentOption  =  null;  ArrayList  <  Option>  tokens  =  options.values();  [CE]  cannot  find  symbol  [FE]        UnrecognizedOptionException    [CONTEXT]      private  void  init()  {  eatTheRest  =  false;  tokens.clear();      [BUGGY]          tokens.clear();    currentOption    =    null;    eatTheRest  =  false;  tokens.clear();  currentOption  =  null;  ArrayList  <  Option>  tokens  =  options.values();  [BUGGY]      currentOption  =  null;  }  [CLASS]  PosixParser  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  ArrayList  tokens  Options  options  Option  currentOption  boolean  eatTheRest  	projects/Cli2/src/java/org/apache/commons/cli/PosixParser.java	1.0	53	53	1	replace	                tokens.clear();        currentOption        =        null;        eatTheRest    =    false;    tokens.clear();    currentOption    =    null;    ArrayList  <  Option>  tokens  =  options.values();	  	non-compiled	[CE]  cannot  find  symbol	157	None	add
712	[BUG]  [BUGGY]  [FE]  UnrecognizedOptionException  [FE]    UnrecognizedOptionException    [CONTEXT]      private  void  init()  {  eatTheRest  =  false;  tokens.clear();      [BUGGY]          tokens.clear();    currentOption    =    null;    ArrayList  <  Option>  tokens  =  new  ArrayList  <  Option>();  currentOption  =  null;  if(eatTheRest)  {  tokens.clear();  currentOption  =  null;  }  [BUGGY]      currentOption  =  null;  }  [CLASS]  PosixParser  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  ArrayList  tokens  Options  options  Option  currentOption  boolean  eatTheRest  	projects/Cli2/src/java/org/apache/commons/cli/PosixParser.java	1.0	53	53	1	add	                tokens.clear();        currentOption        =        null;        ArrayList    <    Option>    tokens    =    new    ArrayList    <    Option>();    currentOption    =    null;    if(eatTheRest)  {  tokens.clear();  currentOption  =  null;  }	  	compilable	  [FE]  UnrecognizedOptionException  	57	1	add
713	[BUG]  [BUGGY]          tokens.clear();    currentOption    =    null;    ArrayList  <  Option>  tokens  =  new  ArrayList  <  Option>();  currentOption  =  null;  if(eatTheRest)  {  tokens.clear();  currentOption  =  null;  }  [FE]  UnrecognizedOptionException  [FE]    UnrecognizedOptionException    [CONTEXT]      private  void  init()  {  eatTheRest  =  false;  tokens.clear();      [BUGGY]          tokens.clear();    currentOption    =    null;    ArrayList  <  Option>  tokens  =  new  ArrayList  <  Option>();  currentOption  =  null;  if(eatTheRest)  {  tokens.clear();  currentOption  =  null;  }  [BUGGY]      currentOption  =  null;  }  [CLASS]  PosixParser  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  ArrayList  tokens  Options  options  Option  currentOption  boolean  eatTheRest  	projects/Cli2/src/java/org/apache/commons/cli/PosixParser.java	1.0	53	53	1	replace	                tokens.clear();        currentOption        =        null;        ArrayList    <    Option>    tokens    =    new    ArrayList    <    Option>();    currentOption    =    null;    if(eatTheRest)  {  tokens.clear();  currentOption  =  null;  }	  	compilable	  [FE]  UnrecognizedOptionException  	57	1	add
714	[BUG]  [BUGGY]  [FE]  UnrecognizedOptionException  [FE]    UnrecognizedOptionException    [CONTEXT]      private  void  init()  {  eatTheRest  =  false;  tokens.clear();      [BUGGY]  currentOption    =    Option.OK_STANDARD;    if(currentOption!=  null)  {  currentOption  =  Option.OK_STANDARD;  }  if(tokens!=  null)  {  tokens  =  new  ArrayList  <  Option>();  }  [BUGGY]      }  [CLASS]  PosixParser  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  ArrayList  tokens  Options  options  Option  currentOption  boolean  eatTheRest  	projects/Cli2/src/java/org/apache/commons/cli/PosixParser.java	1.0	53	53	1	add	currentOption        =        Option.OK_STANDARD;        if(currentOption!=    null)    {    currentOption    =    Option.OK_STANDARD;    }    if(tokens!=  null)  {  tokens  =  new  ArrayList  <  Option>();  }	  	compilable	  [FE]  UnrecognizedOptionException  	85	1	add
715	[BUG]  [BUGGY]  currentOption    =    Option.OK_STANDARD;    if(currentOption!=  null)  {  currentOption  =  Option.OK_STANDARD;  }  if(tokens!=  null)  {  tokens  =  new  ArrayList  <  Option>();  }  [FE]  UnrecognizedOptionException  [FE]    UnrecognizedOptionException    [CONTEXT]      private  void  init()  {  eatTheRest  =  false;  tokens.clear();      [BUGGY]  currentOption    =    Option.OK_STANDARD;    if(currentOption!=  null)  {  currentOption  =  Option.OK_STANDARD;  }  if(tokens!=  null)  {  tokens  =  new  ArrayList  <  Option>();  }  [BUGGY]      }  [CLASS]  PosixParser  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  ArrayList  tokens  Options  options  Option  currentOption  boolean  eatTheRest  	projects/Cli2/src/java/org/apache/commons/cli/PosixParser.java	1.0	53	53	1	replace	currentOption        =        Option.OK_STANDARD;        if(currentOption!=    null)    {    currentOption    =    Option.OK_STANDARD;    }    if(tokens!=  null)  {  tokens  =  new  ArrayList  <  Option>();  }	  	compilable	  [FE]  UnrecognizedOptionException  	85	1	add
716	[BUG]  [BUGGY]  [FE]  UnrecognizedOptionException  [FE]    UnrecognizedOptionException    [CONTEXT]      private  void  init()  {  eatTheRest  =  false;  tokens.clear();      [BUGGY]  currentOption  =  Option.OK_STANDARD;  ArrayList  <  Option>  tokens  =  options.keySet();  [BUGGY]      }  [CLASS]  PosixParser  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  ArrayList  tokens  Options  options  Option  currentOption  boolean  eatTheRest  	projects/Cli2/src/java/org/apache/commons/cli/PosixParser.java	1.0	53	53	1	add	currentOption  =  Option.OK_STANDARD;  ArrayList  <  Option>  tokens  =  options.keySet();	  currentOption    =    Option.OK_STANDARD;    ArrayList    <    Option>    tokens    =    options.values();    	compilable	  [FE]  UnrecognizedOptionException  	104	1	replace
717	[BUG]  [BUGGY]  currentOption  =  Option.OK_STANDARD;  ArrayList  <  Option>  tokens  =  options.keySet();  [FE]  UnrecognizedOptionException  [FE]    UnrecognizedOptionException    [CONTEXT]      private  void  init()  {  eatTheRest  =  false;  tokens.clear();      [BUGGY]  currentOption  =  Option.OK_STANDARD;  ArrayList  <  Option>  tokens  =  options.keySet();  [BUGGY]      }  [CLASS]  PosixParser  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  ArrayList  tokens  Options  options  Option  currentOption  boolean  eatTheRest  	projects/Cli2/src/java/org/apache/commons/cli/PosixParser.java	1.0	53	53	1	replace	currentOption  =  Option.OK_STANDARD;  ArrayList  <  Option>  tokens  =  options.keySet();	  currentOption    =    Option.OK_STANDARD;    ArrayList    <    Option>    tokens    =    options.values();    	compilable	  [FE]  UnrecognizedOptionException  	104	1	replace
718	[BUG]  [BUGGY]  [FE]  UnrecognizedOptionException  [FE]      UnrecognizedOptionException    [CONTEXT]      private  void  init()  {  eatTheRest  =  false;  tokens.clear();      [BUGGY]  currentOption  =  Option.OK_STANDARD;  List  <  Option>  tokens  =  options.values();  [BUGGY]      }  [CLASS]  PosixParser  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  ArrayList  tokens  Options  options  Option  currentOption  boolean  eatTheRest  	projects/Cli2/src/java/org/apache/commons/cli/PosixParser.java	1.0	53	53	1	add	currentOption  =  Option.OK_STANDARD;  List  <  Option>  tokens  =  options.values();	  currentOption    =    Option.OK_STANDARD;    ArrayList    <    Option>    tokens    =    options.values();    	compilable	  [FE]  UnrecognizedOptionException  	104	1	replace
719	[BUG]  [BUGGY]  currentOption  =  Option.OK_STANDARD;  List  <  Option>  tokens  =  options.values();  [FE]  UnrecognizedOptionException  [FE]      UnrecognizedOptionException    [CONTEXT]      private  void  init()  {  eatTheRest  =  false;  tokens.clear();      [BUGGY]  currentOption  =  Option.OK_STANDARD;  List  <  Option>  tokens  =  options.values();  [BUGGY]      }  [CLASS]  PosixParser  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  ArrayList  tokens  Options  options  Option  currentOption  boolean  eatTheRest  	projects/Cli2/src/java/org/apache/commons/cli/PosixParser.java	1.0	53	53	1	replace	currentOption  =  Option.OK_STANDARD;  List  <  Option>  tokens  =  options.values();	  currentOption    =    Option.OK_STANDARD;    ArrayList    <    Option>    tokens    =    options.values();    	compilable	  [FE]  UnrecognizedOptionException  	104	1	replace
720	[BUG]  [BUGGY]  [FE]  UnrecognizedOptionException  [FE]    UnrecognizedOptionException    [CONTEXT]      private  void  init()  {  eatTheRest  =  false;  tokens.clear();      [BUGGY]  tokens.add( "000 ");  [BUGGY]      currentOption  =  null;  }  [CLASS]  PosixParser  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  ArrayList  tokens  Options  options  Option  currentOption  boolean  eatTheRest  	projects/Cli2/src/java/org/apache/commons/cli/PosixParser.java	1.0	53	53	1	add	tokens.add( "000 ");	  tokens.add(   "u00   ");    	compilable	  [FE]  UnrecognizedOptionException  	149	1	replace
721	[BUG]  [BUGGY]  tokens.add( "000 ");  [FE]  UnrecognizedOptionException  [FE]    UnrecognizedOptionException    [CONTEXT]      private  void  init()  {  eatTheRest  =  false;  tokens.clear();      [BUGGY]  tokens.add( "000 ");  [BUGGY]      currentOption  =  null;  }  [CLASS]  PosixParser  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  ArrayList  tokens  Options  options  Option  currentOption  boolean  eatTheRest  	projects/Cli2/src/java/org/apache/commons/cli/PosixParser.java	1.0	53	53	1	replace	tokens.add( "000 ");	  tokens.add(   "u00   ");    	compilable	  [FE]  UnrecognizedOptionException  	149	1	replace
722	[BUG]  [BUGGY]  currentOption  =  Option.UNKNOWN  +  1;  [CE]  cannot  find  symbol  UNKNOWN  [FE]              UnrecognizedOptionException      [CONTEXT]      private  void  init()  {  eatTheRest  =  false;  tokens.clear();      [BUGGY]  currentOption  =  Option.UNKNOWN  +  1;  [BUGGY]      }  [CLASS]  PosixParser  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  ArrayList  tokens  Options  options  Option  currentOption  boolean  eatTheRest  	projects/Cli2/src/java/org/apache/commons/cli/PosixParser.java	1.0	53	53	1	replace	currentOption  =  Option.UNKNOWN  +  1;	  currentOption    =    Option.UNKNOWN;    	non-compiled	[CE]  cannot  find  symbol  UNKNOWN	14	None	replace
723	[BUG]  [BUGGY]  ArrayList  tokens  =  new  ArrayList();  Option  currentOption  =  options.getOption(options,  currentOption);  [CE]  method  getOption  in  class  Options  cannot  be  applied  to  given  types;  [FE]            UnrecognizedOptionException      [CONTEXT]      private  void  init()  {  eatTheRest  =  false;  tokens.clear();      [BUGGY]  ArrayList  tokens  =  new  ArrayList();  Option  currentOption  =  options.getOption(options,  currentOption);  [BUGGY]      currentOption  =  null;  }  [CLASS]  PosixParser  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  ArrayList  tokens  Options  options  Option  currentOption  boolean  eatTheRest  	projects/Cli2/src/java/org/apache/commons/cli/PosixParser.java	1.0	53	53	1	replace	ArrayList  tokens  =  new  ArrayList();  Option  currentOption  =  options.getOption(options,  currentOption);	          ArrayList    tokens    =    new    ArrayList();    Option    currentOption    =    options.getOption(options);    	non-compiled	[CE]  method  getOption  in  class  Options  cannot  be  applied  to  given  types;	138	None	replace
724	[BUG]  [BUGGY]  [FE]  UnrecognizedOptionException  [FE]    UnrecognizedOptionException    [CONTEXT]      private  void  init()  {  eatTheRest  =  false;  tokens.clear();      [BUGGY]  if(currentOption!=  null)  {  tokens.clear();  }  [BUGGY]      currentOption  =  null;  }  [CLASS]  PosixParser  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  ArrayList  tokens  Options  options  Option  currentOption  boolean  eatTheRest  	projects/Cli2/src/java/org/apache/commons/cli/PosixParser.java	1.0	53	53	1	add	if(currentOption!=  null)  {  tokens.clear();  }	  if(currentOption!=    null)    {    eatTheRest    =    false;    tokens.clear();    }    	compilable	  [FE]  UnrecognizedOptionException  	38	1	replace
725	[BUG]  [BUGGY]  if(currentOption!=  null)  {  tokens.clear();  }  [FE]  UnrecognizedOptionException  [FE]    UnrecognizedOptionException    [CONTEXT]      private  void  init()  {  eatTheRest  =  false;  tokens.clear();      [BUGGY]  if(currentOption!=  null)  {  tokens.clear();  }  [BUGGY]      currentOption  =  null;  }  [CLASS]  PosixParser  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  ArrayList  tokens  Options  options  Option  currentOption  boolean  eatTheRest  	projects/Cli2/src/java/org/apache/commons/cli/PosixParser.java	1.0	53	53	1	replace	if(currentOption!=  null)  {  tokens.clear();  }	  if(currentOption!=    null)    {    eatTheRest    =    false;    tokens.clear();    }    	compilable	  [FE]  UnrecognizedOptionException  	38	1	replace
726	[BUG]  [BUGGY]  [FE]  UnrecognizedOptionException  [FE]    UnrecognizedOptionException    [CONTEXT]      private  void  init()  {  eatTheRest  =  false;  tokens.clear();      [BUGGY]  if(currentOption!=  null)  {  eatTheRest  =  true;  tokens.clear();  }  else  {  currentOption  =  null;  }  [BUGGY]      currentOption  =  null;  }  [CLASS]  PosixParser  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  ArrayList  tokens  Options  options  Option  currentOption  boolean  eatTheRest  	projects/Cli2/src/java/org/apache/commons/cli/PosixParser.java	1.0	53	53	1	add	if(currentOption!=  null)  {  eatTheRest  =  true;  tokens.clear();  }  else  {  currentOption  =  null;  }	  if(currentOption!=    null)    {    eatTheRest    =    false;    tokens.clear();    }    else    {    currentOption    =    null;    }    	compilable	  [FE]  UnrecognizedOptionException  	42	1	replace
727	[BUG]  [BUGGY]  if(currentOption!=  null)  {  eatTheRest  =  true;  tokens.clear();  }  else  {  currentOption  =  null;  }  [FE]  UnrecognizedOptionException  [FE]    UnrecognizedOptionException    [CONTEXT]      private  void  init()  {  eatTheRest  =  false;  tokens.clear();      [BUGGY]  if(currentOption!=  null)  {  eatTheRest  =  true;  tokens.clear();  }  else  {  currentOption  =  null;  }  [BUGGY]      currentOption  =  null;  }  [CLASS]  PosixParser  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  ArrayList  tokens  Options  options  Option  currentOption  boolean  eatTheRest  	projects/Cli2/src/java/org/apache/commons/cli/PosixParser.java	1.0	53	53	1	replace	if(currentOption!=  null)  {  eatTheRest  =  true;  tokens.clear();  }  else  {  currentOption  =  null;  }	  if(currentOption!=    null)    {    eatTheRest    =    false;    tokens.clear();    }    else    {    currentOption    =    null;    }    	compilable	  [FE]  UnrecognizedOptionException  	42	1	replace
728	[BUG]  [BUGGY]  tokens.clear();  currentOption  =  null;  TokenBuffer  tokens  =  new  TokenBuffer(tokens.size()  -  1);  [CE]  cannot  find  symbol  [FE]        UnrecognizedOptionException      [CONTEXT]      private  void  init()  {  eatTheRest  =  false;  tokens.clear();      [BUGGY]  tokens.clear();  currentOption  =  null;  TokenBuffer  tokens  =  new  TokenBuffer(tokens.size()  -  1);  [BUGGY]      currentOption  =  null;  }  [CLASS]  PosixParser  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  ArrayList  tokens  Options  options  Option  currentOption  boolean  eatTheRest  	projects/Cli2/src/java/org/apache/commons/cli/PosixParser.java	1.0	53	53	1	replace	tokens.clear();  currentOption  =  null;  TokenBuffer  tokens  =  new  TokenBuffer(tokens.size()  -  1);	          tokens.clear();    currentOption    =    null;    TokenBuffer    tokens    =    new    TokenBuffer(tokens.size());    	non-compiled	[CE]  cannot  find  symbol	129	None	replace
729	[BUG]  [BUGGY]  [FE]  UnrecognizedOptionException  [FE]    UnrecognizedOptionException    [CONTEXT]      private  void  init()  {  eatTheRest  =  false;  tokens.clear();      [BUGGY]  currentOption  =  Option.OK_STANDARD;  tokens.addAll(tokens);  [BUGGY]      }  [CLASS]  PosixParser  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  ArrayList  tokens  Options  options  Option  currentOption  boolean  eatTheRest  	projects/Cli2/src/java/org/apache/commons/cli/PosixParser.java	1.0	53	53	1	add	currentOption  =  Option.OK_STANDARD;  tokens.addAll(tokens);	  currentOption    =    Option.OK_STANDARD;    ArrayList    <    Option>    tokens    =    new    ArrayList    <    Option>();    	compilable	  [FE]  UnrecognizedOptionException  	88	1	replace
730	[BUG]  [BUGGY]  currentOption  =  Option.OK_STANDARD;  tokens.addAll(tokens);  [FE]  UnrecognizedOptionException  [FE]    UnrecognizedOptionException    [CONTEXT]      private  void  init()  {  eatTheRest  =  false;  tokens.clear();      [BUGGY]  currentOption  =  Option.OK_STANDARD;  tokens.addAll(tokens);  [BUGGY]      }  [CLASS]  PosixParser  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  ArrayList  tokens  Options  options  Option  currentOption  boolean  eatTheRest  	projects/Cli2/src/java/org/apache/commons/cli/PosixParser.java	1.0	53	53	1	replace	currentOption  =  Option.OK_STANDARD;  tokens.addAll(tokens);	  currentOption    =    Option.OK_STANDARD;    ArrayList    <    Option>    tokens    =    new    ArrayList    <    Option>();    	compilable	  [FE]  UnrecognizedOptionException  	88	1	replace
731	[BUG]  [BUGGY]  ArrayList  <  Option>  tokens  =  new  ArrayList  <  Option>(tokens.length);  [CE]  cannot  find  symbol  length  [FE]          UnrecognizedOptionException      [CONTEXT]      private  void  init()  {  eatTheRest  =  false;  tokens.clear();      [BUGGY]  ArrayList  <  Option>  tokens  =  new  ArrayList  <  Option>(tokens.length);  [BUGGY]      currentOption  =  null;  }  [CLASS]  PosixParser  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  ArrayList  tokens  Options  options  Option  currentOption  boolean  eatTheRest  	projects/Cli2/src/java/org/apache/commons/cli/PosixParser.java	1.0	53	53	1	replace	ArrayList  <  Option>  tokens  =  new  ArrayList  <  Option>(tokens.length);	  ArrayList    <    Option>    tokens    =    new    ArrayList    <    Option>(tokens);    	non-compiled	[CE]  cannot  find  symbol  length	51	None	replace
732	[BUG]  [BUGGY]  [FE]  UnrecognizedOptionException  [FE]    UnrecognizedOptionException    [CONTEXT]      private  void  init()  {  eatTheRest  =  false;  tokens.clear();      [BUGGY]          eatTheRest    =    false;    tokens.clear();    tokens.clear();  eatTheRest  =  false;  tokens.clear();  if(currentOption!=  null)  {  currentOption  =  null;  }  [BUGGY]      currentOption  =  null;  }  [CLASS]  PosixParser  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  ArrayList  tokens  Options  options  Option  currentOption  boolean  eatTheRest  	projects/Cli2/src/java/org/apache/commons/cli/PosixParser.java	1.0	53	53	1	add	                eatTheRest        =        false;        tokens.clear();        tokens.clear();    eatTheRest    =    false;    tokens.clear();    if(currentOption!=  null)  {  currentOption  =  null;  }	  	compilable	  [FE]  UnrecognizedOptionException  	6	1	add
733	[BUG]  [BUGGY]          eatTheRest    =    false;    tokens.clear();    tokens.clear();  eatTheRest  =  false;  tokens.clear();  if(currentOption!=  null)  {  currentOption  =  null;  }  [FE]  UnrecognizedOptionException  [FE]    UnrecognizedOptionException    [CONTEXT]      private  void  init()  {  eatTheRest  =  false;  tokens.clear();      [BUGGY]          eatTheRest    =    false;    tokens.clear();    tokens.clear();  eatTheRest  =  false;  tokens.clear();  if(currentOption!=  null)  {  currentOption  =  null;  }  [BUGGY]      currentOption  =  null;  }  [CLASS]  PosixParser  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  ArrayList  tokens  Options  options  Option  currentOption  boolean  eatTheRest  	projects/Cli2/src/java/org/apache/commons/cli/PosixParser.java	1.0	53	53	1	replace	                eatTheRest        =        false;        tokens.clear();        tokens.clear();    eatTheRest    =    false;    tokens.clear();    if(currentOption!=  null)  {  currentOption  =  null;  }	  	compilable	  [FE]  UnrecognizedOptionException  	6	1	add
734	[BUG]  [BUGGY]          eatTheRest    =    false;    tokens.clear();    tokens.clear();  eatTheRest  =  false;  tokens.clear();  if(currentOption!=  null)  {  options.clear();  }  [CE]  cannot  find  symbol  [FE]      UnrecognizedOptionException    [CONTEXT]      private  void  init()  {  eatTheRest  =  false;  tokens.clear();      [BUGGY]          eatTheRest    =    false;    tokens.clear();    tokens.clear();  eatTheRest  =  false;  tokens.clear();  if(currentOption!=  null)  {  options.clear();  }  [BUGGY]      currentOption  =  null;  }  [CLASS]  PosixParser  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  ArrayList  tokens  Options  options  Option  currentOption  boolean  eatTheRest  	projects/Cli2/src/java/org/apache/commons/cli/PosixParser.java	1.0	53	53	1	replace	                eatTheRest        =        false;        tokens.clear();        tokens.clear();    eatTheRest    =    false;    tokens.clear();    if(currentOption!=  null)  {  options.clear();  }	  	non-compiled	[CE]  cannot  find  symbol	6	None	add
735	[BUG]  [BUGGY]  [FE]  UnrecognizedOptionException  [FE]        UnrecognizedOptionException    [CONTEXT]      private  void  init()  {  eatTheRest  =  false;  tokens.clear();      [BUGGY]          eatTheRest    =    false;    tokens.clear();    tokens.clear();  eatTheRest  =  false;  tokens.clear();  Option  currentOption  =  null;  [BUGGY]      currentOption  =  null;  }  [CLASS]  PosixParser  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  ArrayList  tokens  Options  options  Option  currentOption  boolean  eatTheRest  	projects/Cli2/src/java/org/apache/commons/cli/PosixParser.java	1.0	53	53	1	add	                eatTheRest        =        false;        tokens.clear();        tokens.clear();    eatTheRest    =    false;    tokens.clear();    Option  currentOption  =  null;	  	compilable	  [FE]  UnrecognizedOptionException  	6	1	add
736	[BUG]  [BUGGY]          eatTheRest    =    false;    tokens.clear();    tokens.clear();  eatTheRest  =  false;  tokens.clear();  Option  currentOption  =  null;  [FE]  UnrecognizedOptionException  [FE]        UnrecognizedOptionException    [CONTEXT]      private  void  init()  {  eatTheRest  =  false;  tokens.clear();      [BUGGY]          eatTheRest    =    false;    tokens.clear();    tokens.clear();  eatTheRest  =  false;  tokens.clear();  Option  currentOption  =  null;  [BUGGY]      currentOption  =  null;  }  [CLASS]  PosixParser  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  ArrayList  tokens  Options  options  Option  currentOption  boolean  eatTheRest  	projects/Cli2/src/java/org/apache/commons/cli/PosixParser.java	1.0	53	53	1	replace	                eatTheRest        =        false;        tokens.clear();        tokens.clear();    eatTheRest    =    false;    tokens.clear();    Option  currentOption  =  null;	  	compilable	  [FE]  UnrecognizedOptionException  	6	1	add
737	[BUG]  [BUGGY]  [FE]  UnrecognizedOptionException  [FE]          UnrecognizedOptionException    [CONTEXT]      private  void  init()  {  eatTheRest  =  false;  tokens.clear();      [BUGGY]          eatTheRest    =    false;    tokens.clear();    tokens.clear();  eatTheRest  =  false;  tokens.clear();  if(currentOption!=  null)  {  tokens.clear();  }  [BUGGY]      currentOption  =  null;  }  [CLASS]  PosixParser  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  ArrayList  tokens  Options  options  Option  currentOption  boolean  eatTheRest  	projects/Cli2/src/java/org/apache/commons/cli/PosixParser.java	1.0	53	53	1	add	                eatTheRest        =        false;        tokens.clear();        tokens.clear();    eatTheRest    =    false;    tokens.clear();    if(currentOption!=  null)  {  tokens.clear();  }	  	compilable	  [FE]  UnrecognizedOptionException  	6	1	add
738	[BUG]  [BUGGY]          eatTheRest    =    false;    tokens.clear();    tokens.clear();  eatTheRest  =  false;  tokens.clear();  if(currentOption!=  null)  {  tokens.clear();  }  [FE]  UnrecognizedOptionException  [FE]          UnrecognizedOptionException    [CONTEXT]      private  void  init()  {  eatTheRest  =  false;  tokens.clear();      [BUGGY]          eatTheRest    =    false;    tokens.clear();    tokens.clear();  eatTheRest  =  false;  tokens.clear();  if(currentOption!=  null)  {  tokens.clear();  }  [BUGGY]      currentOption  =  null;  }  [CLASS]  PosixParser  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  ArrayList  tokens  Options  options  Option  currentOption  boolean  eatTheRest  	projects/Cli2/src/java/org/apache/commons/cli/PosixParser.java	1.0	53	53	1	replace	                eatTheRest        =        false;        tokens.clear();        tokens.clear();    eatTheRest    =    false;    tokens.clear();    if(currentOption!=  null)  {  tokens.clear();  }	  	compilable	  [FE]  UnrecognizedOptionException  	6	1	add
739	[BUG]  [BUGGY]  currentOption  =  Option.NONE  ||  tokens.size();  [CE]  cannot  find  symbol  NONE  [FE]            UnrecognizedOptionException      [CONTEXT]      private  void  init()  {  eatTheRest  =  false;  tokens.clear();      [BUGGY]  currentOption  =  Option.NONE  ||  tokens.size();  [BUGGY]      }  [CLASS]  PosixParser  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  ArrayList  tokens  Options  options  Option  currentOption  boolean  eatTheRest  	projects/Cli2/src/java/org/apache/commons/cli/PosixParser.java	1.0	53	53	1	replace	currentOption  =  Option.NONE  ||  tokens.size();	  currentOption    =    Option.NONE    ||    eatTheRest;    	non-compiled	[CE]  cannot  find  symbol  NONE	141	None	replace
740	[BUG]  [BUGGY]  [FE]  UnrecognizedOptionException  [FE]    UnrecognizedOptionException    [CONTEXT]      private  void  init()  {  eatTheRest  =  false;  tokens.clear();      [BUGGY]          eatTheRest    =    false;    tokens.clear();    eatTheRest  =  false;  tokens.clear();  this.currentOption  =  null;  if(this.currentOption!=  null)  {  this.currentOption  =  null;  }  [BUGGY]      currentOption  =  null;  }  [CLASS]  PosixParser  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  ArrayList  tokens  Options  options  Option  currentOption  boolean  eatTheRest  	projects/Cli2/src/java/org/apache/commons/cli/PosixParser.java	1.0	53	53	1	add	                eatTheRest        =        false;        tokens.clear();        eatTheRest    =    false;    tokens.clear();    this.currentOption    =    null;    if(this.currentOption!=  null)  {  this.currentOption  =  null;  }	  	compilable	  [FE]  UnrecognizedOptionException  	8	1	add
741	[BUG]  [BUGGY]          eatTheRest    =    false;    tokens.clear();    eatTheRest  =  false;  tokens.clear();  this.currentOption  =  null;  if(this.currentOption!=  null)  {  this.currentOption  =  null;  }  [FE]  UnrecognizedOptionException  [FE]    UnrecognizedOptionException    [CONTEXT]      private  void  init()  {  eatTheRest  =  false;  tokens.clear();      [BUGGY]          eatTheRest    =    false;    tokens.clear();    eatTheRest  =  false;  tokens.clear();  this.currentOption  =  null;  if(this.currentOption!=  null)  {  this.currentOption  =  null;  }  [BUGGY]      currentOption  =  null;  }  [CLASS]  PosixParser  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  ArrayList  tokens  Options  options  Option  currentOption  boolean  eatTheRest  	projects/Cli2/src/java/org/apache/commons/cli/PosixParser.java	1.0	53	53	1	replace	                eatTheRest        =        false;        tokens.clear();        eatTheRest    =    false;    tokens.clear();    this.currentOption    =    null;    if(this.currentOption!=  null)  {  this.currentOption  =  null;  }	  	compilable	  [FE]  UnrecognizedOptionException  	8	1	add
742	[BUG]  [BUGGY]  [FE]  UnrecognizedOptionException  [FE]      UnrecognizedOptionException    [CONTEXT]      private  void  init()  {  eatTheRest  =  false;  tokens.clear();      [BUGGY]          eatTheRest    =    false;    tokens.clear();    eatTheRest  =  false;  tokens.clear();  this.currentOption  =  null;  this.currentOption  =  null;  [BUGGY]      currentOption  =  null;  }  [CLASS]  PosixParser  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  ArrayList  tokens  Options  options  Option  currentOption  boolean  eatTheRest  	projects/Cli2/src/java/org/apache/commons/cli/PosixParser.java	1.0	53	53	1	add	                eatTheRest        =        false;        tokens.clear();        eatTheRest    =    false;    tokens.clear();    this.currentOption    =    null;    this.currentOption  =  null;	  	compilable	  [FE]  UnrecognizedOptionException  	8	1	add
743	[BUG]  [BUGGY]          eatTheRest    =    false;    tokens.clear();    eatTheRest  =  false;  tokens.clear();  this.currentOption  =  null;  this.currentOption  =  null;  [FE]  UnrecognizedOptionException  [FE]      UnrecognizedOptionException    [CONTEXT]      private  void  init()  {  eatTheRest  =  false;  tokens.clear();      [BUGGY]          eatTheRest    =    false;    tokens.clear();    eatTheRest  =  false;  tokens.clear();  this.currentOption  =  null;  this.currentOption  =  null;  [BUGGY]      currentOption  =  null;  }  [CLASS]  PosixParser  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  ArrayList  tokens  Options  options  Option  currentOption  boolean  eatTheRest  	projects/Cli2/src/java/org/apache/commons/cli/PosixParser.java	1.0	53	53	1	replace	                eatTheRest        =        false;        tokens.clear();        eatTheRest    =    false;    tokens.clear();    this.currentOption    =    null;    this.currentOption  =  null;	  	compilable	  [FE]  UnrecognizedOptionException  	8	1	add
744	[BUG]  [BUGGY]          ArrayList    <    Option>    tokens    =    new    ArrayList    <    Option>();    Option  currentOption  =  null;  ArrayList  <  Option>  tokens  =  new  ArrayList  <  Option>();  System.arraycopy(tokens,  0,  tokens,  0,  tokens.length);  [CE]  variable  tokens  is  already  defined  in  method  init()  [FE]    UnrecognizedOptionException    [CONTEXT]      private  void  init()  {  eatTheRest  =  false;  tokens.clear();      [BUGGY]          ArrayList    <    Option>    tokens    =    new    ArrayList    <    Option>();    Option  currentOption  =  null;  ArrayList  <  Option>  tokens  =  new  ArrayList  <  Option>();  System.arraycopy(tokens,  0,  tokens,  0,  tokens.length);  [BUGGY]      currentOption  =  null;  }  [CLASS]  PosixParser  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  ArrayList  tokens  Options  options  Option  currentOption  boolean  eatTheRest  	projects/Cli2/src/java/org/apache/commons/cli/PosixParser.java	1.0	53	53	1	replace	                ArrayList        <        Option>        tokens        =        new        ArrayList        <        Option>();        Option    currentOption    =    null;    ArrayList  <  Option>  tokens  =  new  ArrayList  <  Option>();  System.arraycopy(tokens,  0,  tokens,  0,  tokens.length);	  	non-compiled	[CE]  variable  tokens  is  already  defined  in  method  init()	48	None	add
745	[BUG]  [BUGGY]          ArrayList    <    Option>    tokens    =    new    ArrayList    <    Option>();    Option  currentOption  =  null;  ArrayList  <  Option>  tokens  =  new  ArrayList  <  Option>();  System.arraycopy(tokens,  0,  tokens,  1,  tokens.size());  [CE]  variable  tokens  is  already  defined  in  method  init()  [FE]      UnrecognizedOptionException    [CONTEXT]      private  void  init()  {  eatTheRest  =  false;  tokens.clear();      [BUGGY]          ArrayList    <    Option>    tokens    =    new    ArrayList    <    Option>();    Option  currentOption  =  null;  ArrayList  <  Option>  tokens  =  new  ArrayList  <  Option>();  System.arraycopy(tokens,  0,  tokens,  1,  tokens.size());  [BUGGY]      currentOption  =  null;  }  [CLASS]  PosixParser  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  ArrayList  tokens  Options  options  Option  currentOption  boolean  eatTheRest  	projects/Cli2/src/java/org/apache/commons/cli/PosixParser.java	1.0	53	53	1	replace	                ArrayList        <        Option>        tokens        =        new        ArrayList        <        Option>();        Option    currentOption    =    null;    ArrayList  <  Option>  tokens  =  new  ArrayList  <  Option>();  System.arraycopy(tokens,  0,  tokens,  1,  tokens.size());	  	non-compiled	[CE]  variable  tokens  is  already  defined  in  method  init()	48	None	add
746	[BUG]  [BUGGY]  Set  <  Option>  tokens  =  new  HashSet  <  Option>();  new  ArrayList  <  Option>();  [CE]  cannot  find  symbol  [FE]    UnrecognizedOptionException    [CONTEXT]      private  void  init()  {  eatTheRest  =  false;  tokens.clear();      [BUGGY]  Set  <  Option>  tokens  =  new  HashSet  <  Option>();  new  ArrayList  <  Option>();  [BUGGY]      currentOption  =  null;  }  [CLASS]  PosixParser  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  ArrayList  tokens  Options  options  Option  currentOption  boolean  eatTheRest  	projects/Cli2/src/java/org/apache/commons/cli/PosixParser.java	1.0	53	53	1	replace	Set  <  Option>  tokens  =  new  HashSet  <  Option>();  new  ArrayList  <  Option>();	          ArrayList    <    Option>    tokens    =    new    ArrayList    <    Option>();    new    ArrayList    <    Option>();    	non-compiled	[CE]  cannot  find  symbol	46	None	replace
747	[BUG]  [BUGGY]  [FE]  UnrecognizedOptionException  [FE]    UnrecognizedOptionException    [CONTEXT]      private  void  init()  {  eatTheRest  =  false;  tokens.clear();      [BUGGY]  currentOption  =  Option.OK_STANDARD?  null  :  Option.OK_STANDARD;  ArrayList  <  Option>  tokens  =  new  ArrayList  <  Option>();  currentOption  =  Option.OK_STANDARD?  null  :  Option.OK_STANDARD;  [BUGGY]      }  [CLASS]  PosixParser  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  ArrayList  tokens  Options  options  Option  currentOption  boolean  eatTheRest  	projects/Cli2/src/java/org/apache/commons/cli/PosixParser.java	1.0	53	53	1	add	currentOption    =    Option.OK_STANDARD?    null    :    Option.OK_STANDARD;    ArrayList  <  Option>  tokens  =  new  ArrayList  <  Option>();  currentOption  =  Option.OK_STANDARD?  null  :  Option.OK_STANDARD;	  	compilable	  [FE]  UnrecognizedOptionException  	18	1	add
748	[BUG]  [BUGGY]  currentOption  =  Option.OK_STANDARD?  null  :  Option.OK_STANDARD;  ArrayList  <  Option>  tokens  =  new  ArrayList  <  Option>();  currentOption  =  Option.OK_STANDARD?  null  :  Option.OK_STANDARD;  [FE]  UnrecognizedOptionException  [FE]    UnrecognizedOptionException    [CONTEXT]      private  void  init()  {  eatTheRest  =  false;  tokens.clear();      [BUGGY]  currentOption  =  Option.OK_STANDARD?  null  :  Option.OK_STANDARD;  ArrayList  <  Option>  tokens  =  new  ArrayList  <  Option>();  currentOption  =  Option.OK_STANDARD?  null  :  Option.OK_STANDARD;  [BUGGY]      }  [CLASS]  PosixParser  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  ArrayList  tokens  Options  options  Option  currentOption  boolean  eatTheRest  	projects/Cli2/src/java/org/apache/commons/cli/PosixParser.java	1.0	53	53	1	replace	currentOption    =    Option.OK_STANDARD?    null    :    Option.OK_STANDARD;    ArrayList  <  Option>  tokens  =  new  ArrayList  <  Option>();  currentOption  =  Option.OK_STANDARD?  null  :  Option.OK_STANDARD;	  	compilable	  [FE]  UnrecognizedOptionException  	18	1	add
749	[BUG]  [BUGGY]  [FE]  UnrecognizedOptionException  [FE]      UnrecognizedOptionException    [CONTEXT]      private  void  init()  {  eatTheRest  =  false;  tokens.clear();      [BUGGY]  currentOption  =  Option.OK_STANDARD?  null  :  Option.OK_STANDARD;  ArrayList  <  Option>  tokens  =  new  ArrayList  <  Option>(tokens.size());  currentOption  =  Option.OK_STANDARD?  null  :  Option.OK_STANDARD;  [BUGGY]      }  [CLASS]  PosixParser  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  ArrayList  tokens  Options  options  Option  currentOption  boolean  eatTheRest  	projects/Cli2/src/java/org/apache/commons/cli/PosixParser.java	1.0	53	53	1	add	currentOption    =    Option.OK_STANDARD?    null    :    Option.OK_STANDARD;    ArrayList  <  Option>  tokens  =  new  ArrayList  <  Option>(tokens.size());  currentOption  =  Option.OK_STANDARD?  null  :  Option.OK_STANDARD;	  	compilable	  [FE]  UnrecognizedOptionException  	18	1	add
750	[BUG]  [BUGGY]  currentOption  =  Option.OK_STANDARD?  null  :  Option.OK_STANDARD;  ArrayList  <  Option>  tokens  =  new  ArrayList  <  Option>(tokens.size());  currentOption  =  Option.OK_STANDARD?  null  :  Option.OK_STANDARD;  [FE]  UnrecognizedOptionException  [FE]      UnrecognizedOptionException    [CONTEXT]      private  void  init()  {  eatTheRest  =  false;  tokens.clear();      [BUGGY]  currentOption  =  Option.OK_STANDARD?  null  :  Option.OK_STANDARD;  ArrayList  <  Option>  tokens  =  new  ArrayList  <  Option>(tokens.size());  currentOption  =  Option.OK_STANDARD?  null  :  Option.OK_STANDARD;  [BUGGY]      }  [CLASS]  PosixParser  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  ArrayList  tokens  Options  options  Option  currentOption  boolean  eatTheRest  	projects/Cli2/src/java/org/apache/commons/cli/PosixParser.java	1.0	53	53	1	replace	currentOption    =    Option.OK_STANDARD?    null    :    Option.OK_STANDARD;    ArrayList  <  Option>  tokens  =  new  ArrayList  <  Option>(tokens.size());  currentOption  =  Option.OK_STANDARD?  null  :  Option.OK_STANDARD;	  	compilable	  [FE]  UnrecognizedOptionException  	18	1	add
751	[BUG]  [BUGGY]  [FE]  UnrecognizedOptionException  [FE]        UnrecognizedOptionException    [CONTEXT]      private  void  init()  {  eatTheRest  =  false;  tokens.clear();      [BUGGY]  currentOption  =  Option.OK_STANDARD?  null  :  Option.OK_STANDARD;  ArrayList  <  Option>  tokens  =  new  ArrayList  <  Option>();  [BUGGY]      }  [CLASS]  PosixParser  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  ArrayList  tokens  Options  options  Option  currentOption  boolean  eatTheRest  	projects/Cli2/src/java/org/apache/commons/cli/PosixParser.java	1.0	53	53	1	add	currentOption    =    Option.OK_STANDARD?    null    :    Option.OK_STANDARD;    ArrayList  <  Option>  tokens  =  new  ArrayList  <  Option>();	  	compilable	  [FE]  UnrecognizedOptionException  	18	1	add
752	[BUG]  [BUGGY]  currentOption  =  Option.OK_STANDARD?  null  :  Option.OK_STANDARD;  ArrayList  <  Option>  tokens  =  new  ArrayList  <  Option>();  [FE]  UnrecognizedOptionException  [FE]        UnrecognizedOptionException    [CONTEXT]      private  void  init()  {  eatTheRest  =  false;  tokens.clear();      [BUGGY]  currentOption  =  Option.OK_STANDARD?  null  :  Option.OK_STANDARD;  ArrayList  <  Option>  tokens  =  new  ArrayList  <  Option>();  [BUGGY]      }  [CLASS]  PosixParser  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  ArrayList  tokens  Options  options  Option  currentOption  boolean  eatTheRest  	projects/Cli2/src/java/org/apache/commons/cli/PosixParser.java	1.0	53	53	1	replace	currentOption    =    Option.OK_STANDARD?    null    :    Option.OK_STANDARD;    ArrayList  <  Option>  tokens  =  new  ArrayList  <  Option>();	  	compilable	  [FE]  UnrecognizedOptionException  	18	1	add
753	[BUG]  [BUGGY]  [FE]  UnrecognizedOptionException  [FE]    UnrecognizedOptionException    [CONTEXT]      private  void  init()  {  eatTheRest  =  false;  tokens.clear();      [BUGGY]  if(currentOption!=  null)  {  eatTheRest  =  false;  tokens.clear();  tokens.clear();  eatTheRest  =  true;  tokens.clear();  }  [BUGGY]      currentOption  =  null;  }  [CLASS]  PosixParser  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  ArrayList  tokens  Options  options  Option  currentOption  boolean  eatTheRest  	projects/Cli2/src/java/org/apache/commons/cli/PosixParser.java	1.0	53	53	1	add	if(currentOption!=  null)  {  eatTheRest  =  false;  tokens.clear();  tokens.clear();  eatTheRest  =  true;  tokens.clear();  }	          eatTheRest    =    false;    tokens.clear();    tokens.clear();    eatTheRest    =    false;    tokens.clear();    	compilable	  [FE]  UnrecognizedOptionException  	7	1	replace
754	[BUG]  [BUGGY]  if(currentOption!=  null)  {  eatTheRest  =  false;  tokens.clear();  tokens.clear();  eatTheRest  =  true;  tokens.clear();  }  [FE]  UnrecognizedOptionException  [FE]    UnrecognizedOptionException    [CONTEXT]      private  void  init()  {  eatTheRest  =  false;  tokens.clear();      [BUGGY]  if(currentOption!=  null)  {  eatTheRest  =  false;  tokens.clear();  tokens.clear();  eatTheRest  =  true;  tokens.clear();  }  [BUGGY]      currentOption  =  null;  }  [CLASS]  PosixParser  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  ArrayList  tokens  Options  options  Option  currentOption  boolean  eatTheRest  	projects/Cli2/src/java/org/apache/commons/cli/PosixParser.java	1.0	53	53	1	replace	if(currentOption!=  null)  {  eatTheRest  =  false;  tokens.clear();  tokens.clear();  eatTheRest  =  true;  tokens.clear();  }	          eatTheRest    =    false;    tokens.clear();    tokens.clear();    eatTheRest    =    false;    tokens.clear();    	compilable	  [FE]  UnrecognizedOptionException  	7	1	replace
755	[BUG]  [BUGGY]  currentOption  =  options.cloneOptions();  [CE]  cannot  find  symbol  [FE]                UnrecognizedOptionException      [CONTEXT]      private  void  init()  {  eatTheRest  =  false;  tokens.clear();      [BUGGY]  currentOption  =  options.cloneOptions();  [BUGGY]      }  [CLASS]  PosixParser  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  ArrayList  tokens  Options  options  Option  currentOption  boolean  eatTheRest  	projects/Cli2/src/java/org/apache/commons/cli/PosixParser.java	1.0	53	53	1	replace	currentOption  =  options.cloneOptions();	  currentOption    =    options.options;    	non-compiled	[CE]  cannot  find  symbol	30	None	replace
756	[BUG]  [BUGGY]  [FE]  UnrecognizedOptionException  [FE]    UnrecognizedOptionException    [CONTEXT]      private  void  init()  {  eatTheRest  =  false;  tokens.clear();      [BUGGY]          eatTheRest    =    false;    tokens.clear();    eatTheRest  =  false;  tokens.clear();  if(currentOption!=  null)  {  tokens  =  new  ArrayList  <  Option>();  }  [BUGGY]      currentOption  =  null;  }  [CLASS]  PosixParser  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  ArrayList  tokens  Options  options  Option  currentOption  boolean  eatTheRest  	projects/Cli2/src/java/org/apache/commons/cli/PosixParser.java	1.0	53	53	1	add	                eatTheRest        =        false;        tokens.clear();        eatTheRest    =    false;    tokens.clear();    if(currentOption!=  null)  {  tokens  =  new  ArrayList  <  Option>();  }	  	compilable	  [FE]  UnrecognizedOptionException  	1	1	add
757	[BUG]  [BUGGY]          eatTheRest    =    false;    tokens.clear();    eatTheRest  =  false;  tokens.clear();  if(currentOption!=  null)  {  tokens  =  new  ArrayList  <  Option>();  }  [FE]  UnrecognizedOptionException  [FE]    UnrecognizedOptionException    [CONTEXT]      private  void  init()  {  eatTheRest  =  false;  tokens.clear();      [BUGGY]          eatTheRest    =    false;    tokens.clear();    eatTheRest  =  false;  tokens.clear();  if(currentOption!=  null)  {  tokens  =  new  ArrayList  <  Option>();  }  [BUGGY]      currentOption  =  null;  }  [CLASS]  PosixParser  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  ArrayList  tokens  Options  options  Option  currentOption  boolean  eatTheRest  	projects/Cli2/src/java/org/apache/commons/cli/PosixParser.java	1.0	53	53	1	replace	                eatTheRest        =        false;        tokens.clear();        eatTheRest    =    false;    tokens.clear();    if(currentOption!=  null)  {  tokens  =  new  ArrayList  <  Option>();  }	  	compilable	  [FE]  UnrecognizedOptionException  	1	1	add
758	[BUG]  [BUGGY]  [FE]  UnrecognizedOptionException  [FE]      UnrecognizedOptionException    [CONTEXT]      private  void  init()  {  eatTheRest  =  false;  tokens.clear();      [BUGGY]          eatTheRest    =    false;    tokens.clear();    eatTheRest  =  false;  tokens.clear();  if(currentOption!=  null)  {  currentOption  =  null;  tokens.clear();  }  [BUGGY]      currentOption  =  null;  }  [CLASS]  PosixParser  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  ArrayList  tokens  Options  options  Option  currentOption  boolean  eatTheRest  	projects/Cli2/src/java/org/apache/commons/cli/PosixParser.java	1.0	53	53	1	add	                eatTheRest        =        false;        tokens.clear();        eatTheRest    =    false;    tokens.clear();    if(currentOption!=  null)  {  currentOption  =  null;  tokens.clear();  }	  	compilable	  [FE]  UnrecognizedOptionException  	1	1	add
759	[BUG]  [BUGGY]          eatTheRest    =    false;    tokens.clear();    eatTheRest  =  false;  tokens.clear();  if(currentOption!=  null)  {  currentOption  =  null;  tokens.clear();  }  [FE]  UnrecognizedOptionException  [FE]      UnrecognizedOptionException    [CONTEXT]      private  void  init()  {  eatTheRest  =  false;  tokens.clear();      [BUGGY]          eatTheRest    =    false;    tokens.clear();    eatTheRest  =  false;  tokens.clear();  if(currentOption!=  null)  {  currentOption  =  null;  tokens.clear();  }  [BUGGY]      currentOption  =  null;  }  [CLASS]  PosixParser  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  ArrayList  tokens  Options  options  Option  currentOption  boolean  eatTheRest  	projects/Cli2/src/java/org/apache/commons/cli/PosixParser.java	1.0	53	53	1	replace	                eatTheRest        =        false;        tokens.clear();        eatTheRest    =    false;    tokens.clear();    if(currentOption!=  null)  {  currentOption  =  null;  tokens.clear();  }	  	compilable	  [FE]  UnrecognizedOptionException  	1	1	add
760	[BUG]  [BUGGY]  if(eatTheRest)  {  tokens.clear();  currentOption  =  null;  tokens.clear();  currentOption  =  null;  }  else  {  [CE]  illegal  start  of  expression  [FE]    UnrecognizedOptionException    [CONTEXT]      private  void  init()  {  eatTheRest  =  false;  tokens.clear();      [BUGGY]  if(eatTheRest)  {  tokens.clear();  currentOption  =  null;  tokens.clear();  currentOption  =  null;  }  else  {  [BUGGY]      currentOption  =  null;  }  [CLASS]  PosixParser  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  ArrayList  tokens  Options  options  Option  currentOption  boolean  eatTheRest  	projects/Cli2/src/java/org/apache/commons/cli/PosixParser.java	1.0	53	53	1	replace	if(eatTheRest)  {  tokens.clear();  currentOption  =  null;  tokens.clear();  currentOption  =  null;  }  else  {	          tokens.clear();    currentOption    =    null;    tokens.clear();    currentOption    =    null;    	non-compiled	[CE]  illegal  start  of  expression	53	None	replace
761	[BUG]  [BUGGY]  currentOption  =  Option.None.valueOf(tokens,  eatTheRest);  [CE]  cannot  find  symbol  None  [FE]                UnrecognizedOptionException      [CONTEXT]      private  void  init()  {  eatTheRest  =  false;  tokens.clear();      [BUGGY]  currentOption  =  Option.None.valueOf(tokens,  eatTheRest);  [BUGGY]      }  [CLASS]  PosixParser  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  ArrayList  tokens  Options  options  Option  currentOption  boolean  eatTheRest  	projects/Cli2/src/java/org/apache/commons/cli/PosixParser.java	1.0	53	53	1	replace	currentOption  =  Option.None.valueOf(tokens,  eatTheRest);	  currentOption    =    Option.None.valueOf(tokens);    	non-compiled	[CE]  cannot  find  symbol  None	126	None	replace
762	[BUG]  [BUGGY]  [FE]  UnrecognizedOptionException  [FE]    UnrecognizedOptionException    [CONTEXT]      private  void  init()  {  eatTheRest  =  false;  tokens.clear();      [BUGGY]  currentOption    =    Option.OK_STANDARD;    tokens.clear();  ArrayList  <  Option>  tokens  =  new  ArrayList  <  Option>();  [BUGGY]      }  [CLASS]  PosixParser  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  ArrayList  tokens  Options  options  Option  currentOption  boolean  eatTheRest  	projects/Cli2/src/java/org/apache/commons/cli/PosixParser.java	1.0	53	53	1	add	currentOption        =        Option.OK_STANDARD;        tokens.clear();    ArrayList  <  Option>  tokens  =  new  ArrayList  <  Option>();	  	compilable	  [FE]  UnrecognizedOptionException  	151	1	add
763	[BUG]  [BUGGY]  currentOption    =    Option.OK_STANDARD;    tokens.clear();  ArrayList  <  Option>  tokens  =  new  ArrayList  <  Option>();  [FE]  UnrecognizedOptionException  [FE]    UnrecognizedOptionException    [CONTEXT]      private  void  init()  {  eatTheRest  =  false;  tokens.clear();      [BUGGY]  currentOption    =    Option.OK_STANDARD;    tokens.clear();  ArrayList  <  Option>  tokens  =  new  ArrayList  <  Option>();  [BUGGY]      }  [CLASS]  PosixParser  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  ArrayList  tokens  Options  options  Option  currentOption  boolean  eatTheRest  	projects/Cli2/src/java/org/apache/commons/cli/PosixParser.java	1.0	53	53	1	replace	currentOption        =        Option.OK_STANDARD;        tokens.clear();    ArrayList  <  Option>  tokens  =  new  ArrayList  <  Option>();	  	compilable	  [FE]  UnrecognizedOptionException  	151	1	add
764	[BUG]  [BUGGY]  [FE]  UnrecognizedOptionException  [FE]      UnrecognizedOptionException    [CONTEXT]      private  void  init()  {  eatTheRest  =  false;  tokens.clear();      [BUGGY]  currentOption    =    Option.OK_STANDARD;    tokens.clear();  if(currentOption!=  null)  {  tokens.clear();  }  [BUGGY]      }  [CLASS]  PosixParser  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  ArrayList  tokens  Options  options  Option  currentOption  boolean  eatTheRest  	projects/Cli2/src/java/org/apache/commons/cli/PosixParser.java	1.0	53	53	1	add	currentOption        =        Option.OK_STANDARD;        tokens.clear();    if(currentOption!=  null)  {  tokens.clear();  }	  	compilable	  [FE]  UnrecognizedOptionException  	151	1	add
765	[BUG]  [BUGGY]  currentOption    =    Option.OK_STANDARD;    tokens.clear();  if(currentOption!=  null)  {  tokens.clear();  }  [FE]  UnrecognizedOptionException  [FE]      UnrecognizedOptionException    [CONTEXT]      private  void  init()  {  eatTheRest  =  false;  tokens.clear();      [BUGGY]  currentOption    =    Option.OK_STANDARD;    tokens.clear();  if(currentOption!=  null)  {  tokens.clear();  }  [BUGGY]      }  [CLASS]  PosixParser  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  ArrayList  tokens  Options  options  Option  currentOption  boolean  eatTheRest  	projects/Cli2/src/java/org/apache/commons/cli/PosixParser.java	1.0	53	53	1	replace	currentOption        =        Option.OK_STANDARD;        tokens.clear();    if(currentOption!=  null)  {  tokens.clear();  }	  	compilable	  [FE]  UnrecognizedOptionException  	151	1	add
766	[BUG]  [BUGGY]  Set  tokens  =  new  ArrayList(tokens.size());  [CE]  cannot  find  symbol  [FE]              UnrecognizedOptionException      [CONTEXT]      private  void  init()  {  eatTheRest  =  false;  tokens.clear();      [BUGGY]  Set  tokens  =  new  ArrayList(tokens.size());  [BUGGY]      currentOption  =  null;  }  [CLASS]  PosixParser  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  ArrayList  tokens  Options  options  Option  currentOption  boolean  eatTheRest  	projects/Cli2/src/java/org/apache/commons/cli/PosixParser.java	1.0	53	53	1	replace	Set  tokens  =  new  ArrayList(tokens.size());	  List    tokens    =    new    ArrayList(tokens.size());    	non-compiled	[CE]  cannot  find  symbol	90	None	replace
767	[BUG]  [BUGGY]  [FE]  UnrecognizedOptionException  [FE]    UnrecognizedOptionException    [CONTEXT]      private  void  init()  {  eatTheRest  =  false;  tokens.clear();      [BUGGY]  if(this.options!=  null)  {  eatTheRest  =  false;  tokens.clear();  tokens.clear();  }  [BUGGY]      currentOption  =  null;  }  [CLASS]  PosixParser  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  ArrayList  tokens  Options  options  Option  currentOption  boolean  eatTheRest  	projects/Cli2/src/java/org/apache/commons/cli/PosixParser.java	1.0	53	53	1	add	if(this.options!=  null)  {  eatTheRest  =  false;  tokens.clear();  tokens.clear();  }	          eatTheRest    =    false;    tokens.clear();    tokens.clear();    	compilable	  [FE]  UnrecognizedOptionException  	134	1	replace
768	[BUG]  [BUGGY]  if(this.options!=  null)  {  eatTheRest  =  false;  tokens.clear();  tokens.clear();  }  [FE]  UnrecognizedOptionException  [FE]    UnrecognizedOptionException    [CONTEXT]      private  void  init()  {  eatTheRest  =  false;  tokens.clear();      [BUGGY]  if(this.options!=  null)  {  eatTheRest  =  false;  tokens.clear();  tokens.clear();  }  [BUGGY]      currentOption  =  null;  }  [CLASS]  PosixParser  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  ArrayList  tokens  Options  options  Option  currentOption  boolean  eatTheRest  	projects/Cli2/src/java/org/apache/commons/cli/PosixParser.java	1.0	53	53	1	replace	if(this.options!=  null)  {  eatTheRest  =  false;  tokens.clear();  tokens.clear();  }	          eatTheRest    =    false;    tokens.clear();    tokens.clear();    	compilable	  [FE]  UnrecognizedOptionException  	134	1	replace
769	[BUG]  [BUGGY]  [FE]  UnrecognizedOptionException  [FE]    UnrecognizedOptionException    [CONTEXT]      private  void  init()  {  eatTheRest  =  false;  tokens.clear();      [BUGGY]  currentOption    =    Option.OK_STANDARD;    tokens.clear();  currentOption  =  Option.OK_STANDARD;  ArrayList  <  Option>  tokens  =  new  ArrayList  <  Option>();  [BUGGY]      }  [CLASS]  PosixParser  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  ArrayList  tokens  Options  options  Option  currentOption  boolean  eatTheRest  	projects/Cli2/src/java/org/apache/commons/cli/PosixParser.java	1.0	53	53	1	add	currentOption        =        Option.OK_STANDARD;        tokens.clear();    currentOption    =    Option.OK_STANDARD;    ArrayList  <  Option>  tokens  =  new  ArrayList  <  Option>();	  	compilable	  [FE]  UnrecognizedOptionException  	83	1	add
770	[BUG]  [BUGGY]  currentOption    =    Option.OK_STANDARD;    tokens.clear();  currentOption  =  Option.OK_STANDARD;  ArrayList  <  Option>  tokens  =  new  ArrayList  <  Option>();  [FE]  UnrecognizedOptionException  [FE]    UnrecognizedOptionException    [CONTEXT]      private  void  init()  {  eatTheRest  =  false;  tokens.clear();      [BUGGY]  currentOption    =    Option.OK_STANDARD;    tokens.clear();  currentOption  =  Option.OK_STANDARD;  ArrayList  <  Option>  tokens  =  new  ArrayList  <  Option>();  [BUGGY]      }  [CLASS]  PosixParser  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  ArrayList  tokens  Options  options  Option  currentOption  boolean  eatTheRest  	projects/Cli2/src/java/org/apache/commons/cli/PosixParser.java	1.0	53	53	1	replace	currentOption        =        Option.OK_STANDARD;        tokens.clear();    currentOption    =    Option.OK_STANDARD;    ArrayList  <  Option>  tokens  =  new  ArrayList  <  Option>();	  	compilable	  [FE]  UnrecognizedOptionException  	83	1	add
771	[BUG]  [BUGGY]  currentOption  =  Option.newInstance(options);  [CE]  cannot  find  symbol  [FE]              UnrecognizedOptionException      [CONTEXT]      private  void  init()  {  eatTheRest  =  false;  tokens.clear();      [BUGGY]  currentOption  =  Option.newInstance(options);  [BUGGY]      }  [CLASS]  PosixParser  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  ArrayList  tokens  Options  options  Option  currentOption  boolean  eatTheRest  	projects/Cli2/src/java/org/apache/commons/cli/PosixParser.java	1.0	53	53	1	replace	currentOption  =  Option.newInstance(options);	  currentOption    =    Option.newInstance();    	non-compiled	[CE]  cannot  find  symbol	154	None	replace
772	[BUG]  [BUGGY]  currentOption  =  OptionUtil.newInstance(options);  [CE]  cannot  find  symbol  OptionUtil  [FE]                UnrecognizedOptionException      [CONTEXT]      private  void  init()  {  eatTheRest  =  false;  tokens.clear();      [BUGGY]  currentOption  =  OptionUtil.newInstance(options);  [BUGGY]      }  [CLASS]  PosixParser  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  ArrayList  tokens  Options  options  Option  currentOption  boolean  eatTheRest  	projects/Cli2/src/java/org/apache/commons/cli/PosixParser.java	1.0	53	53	1	replace	currentOption  =  OptionUtil.newInstance(options);	  currentOption    =    Option.newInstance();    	non-compiled	[CE]  cannot  find  symbol  OptionUtil	154	None	replace
773	[BUG]  [BUGGY]  [FE]  UnrecognizedOptionException  [FE]    UnrecognizedOptionException    [CONTEXT]      private  void  init()  {  eatTheRest  =  false;  tokens.clear();      [BUGGY]  tokens.add( "none ");  [BUGGY]      currentOption  =  null;  }  [CLASS]  PosixParser  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  ArrayList  tokens  Options  options  Option  currentOption  boolean  eatTheRest  	projects/Cli2/src/java/org/apache/commons/cli/PosixParser.java	1.0	53	53	1	add	tokens.add( "none ");	  tokens.add(   "n   ");    	compilable	  [FE]  UnrecognizedOptionException  	97	1	replace
774	[BUG]  [BUGGY]  tokens.add( "none ");  [FE]  UnrecognizedOptionException  [FE]    UnrecognizedOptionException    [CONTEXT]      private  void  init()  {  eatTheRest  =  false;  tokens.clear();      [BUGGY]  tokens.add( "none ");  [BUGGY]      currentOption  =  null;  }  [CLASS]  PosixParser  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  ArrayList  tokens  Options  options  Option  currentOption  boolean  eatTheRest  	projects/Cli2/src/java/org/apache/commons/cli/PosixParser.java	1.0	53	53	1	replace	tokens.add( "none ");	  tokens.add(   "n   ");    	compilable	  [FE]  UnrecognizedOptionException  	97	1	replace
775	[BUG]  [BUGGY]  [FE]  UnrecognizedOptionException  [FE]    UnrecognizedOptionException    [CONTEXT]      private  void  init()  {  eatTheRest  =  false;  tokens.clear();      [BUGGY]  if(currentOption!=  null)  {  eatTheRest  =  false;  tokens.clear();  }  else  {  currentOption  =  null;  }  if(currentOption!=  null)  {  currentOption  =  null;  }  [BUGGY]      currentOption  =  null;  }  [CLASS]  PosixParser  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  ArrayList  tokens  Options  options  Option  currentOption  boolean  eatTheRest  	projects/Cli2/src/java/org/apache/commons/cli/PosixParser.java	1.0	53	53	1	add	if(currentOption!=    null)    {    eatTheRest    =    false;    tokens.clear();    }    else    {    currentOption    =    null;    }    if(currentOption!=  null)  {  currentOption  =  null;  }	  	compilable	  [FE]  UnrecognizedOptionException  	41	1	add
776	[BUG]  [BUGGY]  if(currentOption!=  null)  {  eatTheRest  =  false;  tokens.clear();  }  else  {  currentOption  =  null;  }  if(currentOption!=  null)  {  currentOption  =  null;  }  [FE]  UnrecognizedOptionException  [FE]    UnrecognizedOptionException    [CONTEXT]      private  void  init()  {  eatTheRest  =  false;  tokens.clear();      [BUGGY]  if(currentOption!=  null)  {  eatTheRest  =  false;  tokens.clear();  }  else  {  currentOption  =  null;  }  if(currentOption!=  null)  {  currentOption  =  null;  }  [BUGGY]      currentOption  =  null;  }  [CLASS]  PosixParser  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  ArrayList  tokens  Options  options  Option  currentOption  boolean  eatTheRest  	projects/Cli2/src/java/org/apache/commons/cli/PosixParser.java	1.0	53	53	1	replace	if(currentOption!=    null)    {    eatTheRest    =    false;    tokens.clear();    }    else    {    currentOption    =    null;    }    if(currentOption!=  null)  {  currentOption  =  null;  }	  	compilable	  [FE]  UnrecognizedOptionException  	41	1	add
777	[BUG]  [BUGGY]  ArrayList  <  Option>  tokens  =  new  ArrayList  <  Option>(options,  options.size());  [CE]  cannot  find  symbol  [FE]                    UnrecognizedOptionException      [CONTEXT]      private  void  init()  {  eatTheRest  =  false;  tokens.clear();      [BUGGY]  ArrayList  <  Option>  tokens  =  new  ArrayList  <  Option>(options,  options.size());  [BUGGY]      currentOption  =  null;  }  [CLASS]  PosixParser  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  ArrayList  tokens  Options  options  Option  currentOption  boolean  eatTheRest  	projects/Cli2/src/java/org/apache/commons/cli/PosixParser.java	1.0	53	53	1	replace	ArrayList  <  Option>  tokens  =  new  ArrayList  <  Option>(options,  options.size());	  ArrayList    <    Option>    tokens    =    new    ArrayList    <    Option>(options.size());    	non-compiled	[CE]  cannot  find  symbol	78	None	replace
778	[BUG]  [BUGGY]  [FE]  UnrecognizedOptionException  [FE]    UnrecognizedOptionException    [CONTEXT]      private  void  init()  {  eatTheRest  =  false;  tokens.clear();      [BUGGY]  currentOption  =  Option.OK_STANDARD  +  2;  [BUGGY]      }  [CLASS]  PosixParser  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  ArrayList  tokens  Options  options  Option  currentOption  boolean  eatTheRest  	projects/Cli2/src/java/org/apache/commons/cli/PosixParser.java	1.0	53	53	1	add	currentOption  =  Option.OK_STANDARD  +  2;	  currentOption    =    Option.OK_STANDARD    +    1;    	compilable	  [FE]  UnrecognizedOptionException  	17	1	replace
779	[BUG]  [BUGGY]  currentOption  =  Option.OK_STANDARD  +  2;  [FE]  UnrecognizedOptionException  [FE]    UnrecognizedOptionException    [CONTEXT]      private  void  init()  {  eatTheRest  =  false;  tokens.clear();      [BUGGY]  currentOption  =  Option.OK_STANDARD  +  2;  [BUGGY]      }  [CLASS]  PosixParser  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  ArrayList  tokens  Options  options  Option  currentOption  boolean  eatTheRest  	projects/Cli2/src/java/org/apache/commons/cli/PosixParser.java	1.0	53	53	1	replace	currentOption  =  Option.OK_STANDARD  +  2;	  currentOption    =    Option.OK_STANDARD    +    1;    	compilable	  [FE]  UnrecognizedOptionException  	17	1	replace
780	[BUG]  [BUGGY]  if(!eatTheRest)  {  currentOption  =  Option.OK_STANDARD;  if(currentOption!=  null)  {  currentOption  =  Option.OK_STANDARD;  }  [CE]  illegal  start  of  expression  [FE]    UnrecognizedOptionException    [CONTEXT]      private  void  init()  {  eatTheRest  =  false;  tokens.clear();      [BUGGY]  if(!eatTheRest)  {  currentOption  =  Option.OK_STANDARD;  if(currentOption!=  null)  {  currentOption  =  Option.OK_STANDARD;  }  [BUGGY]      }  [CLASS]  PosixParser  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  ArrayList  tokens  Options  options  Option  currentOption  boolean  eatTheRest  	projects/Cli2/src/java/org/apache/commons/cli/PosixParser.java	1.0	53	53	1	replace	if(!eatTheRest)  {  currentOption  =  Option.OK_STANDARD;  if(currentOption!=  null)  {  currentOption  =  Option.OK_STANDARD;  }	  currentOption    =    Option.OK_STANDARD;    if(currentOption!=    null)    {    currentOption    =    Option.OK_STANDARD;    }    	non-compiled	[CE]  illegal  start  of  expression	86	None	replace
781	[BUG]  [BUGGY]  if(!eatTheRest)  {  currentOption  =  Option.OK_STANDARD;  if(currentOption  ==  null)  {  currentOption  =  Option.OK_STANDARD;  }  [CE]  illegal  start  of  expression  [FE]      UnrecognizedOptionException    [CONTEXT]      private  void  init()  {  eatTheRest  =  false;  tokens.clear();      [BUGGY]  if(!eatTheRest)  {  currentOption  =  Option.OK_STANDARD;  if(currentOption  ==  null)  {  currentOption  =  Option.OK_STANDARD;  }  [BUGGY]      }  [CLASS]  PosixParser  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  ArrayList  tokens  Options  options  Option  currentOption  boolean  eatTheRest  	projects/Cli2/src/java/org/apache/commons/cli/PosixParser.java	1.0	53	53	1	replace	if(!eatTheRest)  {  currentOption  =  Option.OK_STANDARD;  if(currentOption  ==  null)  {  currentOption  =  Option.OK_STANDARD;  }	  currentOption    =    Option.OK_STANDARD;    if(currentOption!=    null)    {    currentOption    =    Option.OK_STANDARD;    }    	non-compiled	[CE]  illegal  start  of  expression	86	None	replace
782	[BUG]  [BUGGY]  [FE]  UnrecognizedOptionException  [FE]    UnrecognizedOptionException    [CONTEXT]      private  void  init()  {  eatTheRest  =  false;  tokens.clear();      [BUGGY]  tokens.add( "--? ");  [BUGGY]      currentOption  =  null;  }  [CLASS]  PosixParser  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  ArrayList  tokens  Options  options  Option  currentOption  boolean  eatTheRest  	projects/Cli2/src/java/org/apache/commons/cli/PosixParser.java	1.0	53	53	1	add	tokens.add( "--? ");	  tokens.add(   "--n   ");    	compilable	  [FE]  UnrecognizedOptionException  	74	1	replace
783	[BUG]  [BUGGY]  tokens.add( "--? ");  [FE]  UnrecognizedOptionException  [FE]    UnrecognizedOptionException    [CONTEXT]      private  void  init()  {  eatTheRest  =  false;  tokens.clear();      [BUGGY]  tokens.add( "--? ");  [BUGGY]      currentOption  =  null;  }  [CLASS]  PosixParser  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  ArrayList  tokens  Options  options  Option  currentOption  boolean  eatTheRest  	projects/Cli2/src/java/org/apache/commons/cli/PosixParser.java	1.0	53	53	1	replace	tokens.add( "--? ");	  tokens.add(   "--n   ");    	compilable	  [FE]  UnrecognizedOptionException  	74	1	replace
784	[BUG]  [BUGGY]  if(!eatTheRest)  {  tokens.add(options);  currentOption  =  null;  }  else  {  options.setOption(null);  }  [CE]  cannot  find  symbol  [FE]          UnrecognizedOptionException      [CONTEXT]      private  void  init()  {  eatTheRest  =  false;  tokens.clear();      [BUGGY]  if(!eatTheRest)  {  tokens.add(options);  currentOption  =  null;  }  else  {  options.setOption(null);  }  [BUGGY]      currentOption  =  null;  }  [CLASS]  PosixParser  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  ArrayList  tokens  Options  options  Option  currentOption  boolean  eatTheRest  	projects/Cli2/src/java/org/apache/commons/cli/PosixParser.java	1.0	53	53	1	replace	if(!eatTheRest)  {  tokens.add(options);  currentOption  =  null;  }  else  {  options.setOption(null);  }	  if(!eatTheRest)    {    tokens.clear();    currentOption    =    null;    }    else    {    options.setOption(null);    }    	non-compiled	[CE]  cannot  find  symbol	12	None	replace
785	[BUG]  [BUGGY]  [FE]  UnrecognizedOptionException  [FE]    UnrecognizedOptionException    [CONTEXT]      private  void  init()  {  eatTheRest  =  false;  tokens.clear();      [BUGGY]  if(!eatTheRest)  {  tokens.clear();  currentOption  =  null;  eatTheRest  =  false;  tokens.clear();  currentOption  =  null;  }  [BUGGY]      currentOption  =  null;  }  [CLASS]  PosixParser  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  ArrayList  tokens  Options  options  Option  currentOption  boolean  eatTheRest  	projects/Cli2/src/java/org/apache/commons/cli/PosixParser.java	1.0	53	53	1	add	if(!eatTheRest)  {  tokens.clear();  currentOption  =  null;  eatTheRest  =  false;  tokens.clear();  currentOption  =  null;  }	          tokens.clear();    currentOption    =    null;    eatTheRest    =    false;    tokens.clear();    currentOption    =    null;    	compilable	  [FE]  UnrecognizedOptionException  	158	1	replace
786	[BUG]  [BUGGY]  if(!eatTheRest)  {  tokens.clear();  currentOption  =  null;  eatTheRest  =  false;  tokens.clear();  currentOption  =  null;  }  [FE]  UnrecognizedOptionException  [FE]    UnrecognizedOptionException    [CONTEXT]      private  void  init()  {  eatTheRest  =  false;  tokens.clear();      [BUGGY]  if(!eatTheRest)  {  tokens.clear();  currentOption  =  null;  eatTheRest  =  false;  tokens.clear();  currentOption  =  null;  }  [BUGGY]      currentOption  =  null;  }  [CLASS]  PosixParser  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  ArrayList  tokens  Options  options  Option  currentOption  boolean  eatTheRest  	projects/Cli2/src/java/org/apache/commons/cli/PosixParser.java	1.0	53	53	1	replace	if(!eatTheRest)  {  tokens.clear();  currentOption  =  null;  eatTheRest  =  false;  tokens.clear();  currentOption  =  null;  }	          tokens.clear();    currentOption    =    null;    eatTheRest    =    false;    tokens.clear();    currentOption    =    null;    	compilable	  [FE]  UnrecognizedOptionException  	158	1	replace
787	[BUG]  [BUGGY]  [FE]  UnrecognizedOptionException  [FE]      UnrecognizedOptionException    [CONTEXT]      private  void  init()  {  eatTheRest  =  false;  tokens.clear();      [BUGGY]  if(options!=  null)  {  tokens.clear();  currentOption  =  null;  eatTheRest  =  false;  tokens.clear();  currentOption  =  null;  }  [BUGGY]      currentOption  =  null;  }  [CLASS]  PosixParser  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  ArrayList  tokens  Options  options  Option  currentOption  boolean  eatTheRest  	projects/Cli2/src/java/org/apache/commons/cli/PosixParser.java	1.0	53	53	1	add	if(options!=  null)  {  tokens.clear();  currentOption  =  null;  eatTheRest  =  false;  tokens.clear();  currentOption  =  null;  }	          tokens.clear();    currentOption    =    null;    eatTheRest    =    false;    tokens.clear();    currentOption    =    null;    	compilable	  [FE]  UnrecognizedOptionException  	158	1	replace
788	[BUG]  [BUGGY]  if(options!=  null)  {  tokens.clear();  currentOption  =  null;  eatTheRest  =  false;  tokens.clear();  currentOption  =  null;  }  [FE]  UnrecognizedOptionException  [FE]      UnrecognizedOptionException    [CONTEXT]      private  void  init()  {  eatTheRest  =  false;  tokens.clear();      [BUGGY]  if(options!=  null)  {  tokens.clear();  currentOption  =  null;  eatTheRest  =  false;  tokens.clear();  currentOption  =  null;  }  [BUGGY]      currentOption  =  null;  }  [CLASS]  PosixParser  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  ArrayList  tokens  Options  options  Option  currentOption  boolean  eatTheRest  	projects/Cli2/src/java/org/apache/commons/cli/PosixParser.java	1.0	53	53	1	replace	if(options!=  null)  {  tokens.clear();  currentOption  =  null;  eatTheRest  =  false;  tokens.clear();  currentOption  =  null;  }	          tokens.clear();    currentOption    =    null;    eatTheRest    =    false;    tokens.clear();    currentOption    =    null;    	compilable	  [FE]  UnrecognizedOptionException  	158	1	replace
789	[BUG]  [BUGGY]  CurrentOption  currentOption  =  options.cloneOption();  [CE]  cannot  find  symbol  [FE]            UnrecognizedOptionException      [CONTEXT]      private  void  init()  {  eatTheRest  =  false;  tokens.clear();      [BUGGY]  CurrentOption  currentOption  =  options.cloneOption();  [BUGGY]      }  [CLASS]  PosixParser  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  ArrayList  tokens  Options  options  Option  currentOption  boolean  eatTheRest  	projects/Cli2/src/java/org/apache/commons/cli/PosixParser.java	1.0	53	53	1	replace	CurrentOption  currentOption  =  options.cloneOption();	  currentOption    =    options.cloneOption();    	non-compiled	[CE]  cannot  find  symbol	117	None	replace
790	[BUG]  [BUGGY]  [FE]  UnrecognizedOptionException  [FE]    UnrecognizedOptionException    [CONTEXT]      private  void  init()  {  eatTheRest  =  false;  tokens.clear();      [BUGGY]  if(options!=  null)  {  eatTheRest  =  false;  tokens.clear();  eatTheRest  =  false;  tokens.clear();  this.currentOption  =  null;  }  [BUGGY]      currentOption  =  null;  }  [CLASS]  PosixParser  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  ArrayList  tokens  Options  options  Option  currentOption  boolean  eatTheRest  	projects/Cli2/src/java/org/apache/commons/cli/PosixParser.java	1.0	53	53	1	add	if(options!=  null)  {  eatTheRest  =  false;  tokens.clear();  eatTheRest  =  false;  tokens.clear();  this.currentOption  =  null;  }	          eatTheRest    =    false;    tokens.clear();    eatTheRest    =    false;    tokens.clear();    this.currentOption    =    null;    	compilable	  [FE]  UnrecognizedOptionException  	9	1	replace
791	[BUG]  [BUGGY]  if(options!=  null)  {  eatTheRest  =  false;  tokens.clear();  eatTheRest  =  false;  tokens.clear();  this.currentOption  =  null;  }  [FE]  UnrecognizedOptionException  [FE]    UnrecognizedOptionException    [CONTEXT]      private  void  init()  {  eatTheRest  =  false;  tokens.clear();      [BUGGY]  if(options!=  null)  {  eatTheRest  =  false;  tokens.clear();  eatTheRest  =  false;  tokens.clear();  this.currentOption  =  null;  }  [BUGGY]      currentOption  =  null;  }  [CLASS]  PosixParser  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  ArrayList  tokens  Options  options  Option  currentOption  boolean  eatTheRest  	projects/Cli2/src/java/org/apache/commons/cli/PosixParser.java	1.0	53	53	1	replace	if(options!=  null)  {  eatTheRest  =  false;  tokens.clear();  eatTheRest  =  false;  tokens.clear();  this.currentOption  =  null;  }	          eatTheRest    =    false;    tokens.clear();    eatTheRest    =    false;    tokens.clear();    this.currentOption    =    null;    	compilable	  [FE]  UnrecognizedOptionException  	9	1	replace
792	[BUG]  [BUGGY]  tokens.addAll( "-- "  +  this.currentOption);  [CE]  no  suitable  method  found  for  addAll(String)  [FE]        ComparisonFailure      [CONTEXT]      private  void  init()  {  eatTheRest  =  false;  tokens.clear();      [BUGGY]  tokens.addAll( "-- "  +  this.currentOption);  [BUGGY]      currentOption  =  null;  }  [CLASS]  PosixParser  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  ArrayList  tokens  Options  options  Option  currentOption  boolean  eatTheRest  	projects/Cli2/src/java/org/apache/commons/cli/PosixParser.java	1.0	53	53	1	replace	tokens.addAll( "-- "  +  this.currentOption);	  tokens.addAll(   "--   ");    	non-compiled	[CE]  no  suitable  method  found  for  addAll(String)	164	None	replace
793	[BUG]  [BUGGY]  if(!eatTheRest)  {  ArrayList  <  Option>  tokens  =  new  ArrayList  <  Option>();  ArrayList  <  Option>  tokens  =  new  ArrayList  <  Option>();  }  [CE]  variable  tokens  is  already  defined  in  method  init()  [FE]        UnrecognizedOptionException      [CONTEXT]      private  void  init()  {  eatTheRest  =  false;  tokens.clear();      [BUGGY]  if(!eatTheRest)  {  ArrayList  <  Option>  tokens  =  new  ArrayList  <  Option>();  ArrayList  <  Option>  tokens  =  new  ArrayList  <  Option>();  }  [BUGGY]      currentOption  =  null;  }  [CLASS]  PosixParser  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  ArrayList  tokens  Options  options  Option  currentOption  boolean  eatTheRest  	projects/Cli2/src/java/org/apache/commons/cli/PosixParser.java	1.0	53	53	1	replace	if(!eatTheRest)  {  ArrayList  <  Option>  tokens  =  new  ArrayList  <  Option>();  ArrayList  <  Option>  tokens  =  new  ArrayList  <  Option>();  }	          ArrayList    <    Option>    tokens    =    new    ArrayList    <    Option>();    ArrayList    <    Option>    tokens    =    new    ArrayList    <    Option>();    	non-compiled	[CE]  variable  tokens  is  already  defined  in  method  init()	43	None	replace
794	[BUG]  [BUGGY]  if(!eatTheRest)  {  ArrayList  <  Option>  tokens  =  new  ArrayList  <  Option>();  ArrayList  <  Option>  tokens  =  new  ArrayList  <  Option>();  }  else  {  tokens.addAll(options);  }  [CE]  variable  tokens  is  already  defined  in  method  init()  [FE]          UnrecognizedOptionException      [CONTEXT]      private  void  init()  {  eatTheRest  =  false;  tokens.clear();      [BUGGY]  if(!eatTheRest)  {  ArrayList  <  Option>  tokens  =  new  ArrayList  <  Option>();  ArrayList  <  Option>  tokens  =  new  ArrayList  <  Option>();  }  else  {  tokens.addAll(options);  }  [BUGGY]      currentOption  =  null;  }  [CLASS]  PosixParser  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  ArrayList  tokens  Options  options  Option  currentOption  boolean  eatTheRest  	projects/Cli2/src/java/org/apache/commons/cli/PosixParser.java	1.0	53	53	1	replace	if(!eatTheRest)  {  ArrayList  <  Option>  tokens  =  new  ArrayList  <  Option>();  ArrayList  <  Option>  tokens  =  new  ArrayList  <  Option>();  }  else  {  tokens.addAll(options);  }	          ArrayList    <    Option>    tokens    =    new    ArrayList    <    Option>();    ArrayList    <    Option>    tokens    =    new    ArrayList    <    Option>();    	non-compiled	[CE]  variable  tokens  is  already  defined  in  method  init()	43	None	replace
795	[BUG]  [BUGGY]  if(!eatTheRest)  {  ArrayList  <  Option>  tokens  =  new  ArrayList  <  Option>();  ArrayList  <  Option>  tokens  =  new  ArrayList  <  Option>();  }  else  {  [CE]  illegal  start  of  expression  [FE]            UnrecognizedOptionException      [CONTEXT]      private  void  init()  {  eatTheRest  =  false;  tokens.clear();      [BUGGY]  if(!eatTheRest)  {  ArrayList  <  Option>  tokens  =  new  ArrayList  <  Option>();  ArrayList  <  Option>  tokens  =  new  ArrayList  <  Option>();  }  else  {  [BUGGY]      currentOption  =  null;  }  [CLASS]  PosixParser  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  ArrayList  tokens  Options  options  Option  currentOption  boolean  eatTheRest  	projects/Cli2/src/java/org/apache/commons/cli/PosixParser.java	1.0	53	53	1	replace	if(!eatTheRest)  {  ArrayList  <  Option>  tokens  =  new  ArrayList  <  Option>();  ArrayList  <  Option>  tokens  =  new  ArrayList  <  Option>();  }  else  {	          ArrayList    <    Option>    tokens    =    new    ArrayList    <    Option>();    ArrayList    <    Option>    tokens    =    new    ArrayList    <    Option>();    	non-compiled	[CE]  illegal  start  of  expression	43	None	replace
796	[BUG]  [BUGGY]  [FE]  UnrecognizedOptionException  [FE]    UnrecognizedOptionException    [CONTEXT]      private  void  init()  {  eatTheRest  =  false;  tokens.clear();      [BUGGY]  if(eatTheRest)  {  currentOption  =  Option.OK_STANDARD;  tokens.clear();  currentOption  =  Option.OK_STANDARD;  }  else  {  options.add(option);  }  [BUGGY]      }  [CLASS]  PosixParser  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  ArrayList  tokens  Options  options  Option  currentOption  boolean  eatTheRest  	projects/Cli2/src/java/org/apache/commons/cli/PosixParser.java	1.0	53	53	1	add	if(eatTheRest)  {  currentOption  =  Option.OK_STANDARD;  tokens.clear();  currentOption  =  Option.OK_STANDARD;  }  else  {  options.add(option);  }	  currentOption    =    Option.OK_STANDARD;    tokens.clear();    currentOption    =    Option.OK_STANDARD;    	compilable	  [FE]  UnrecognizedOptionException  	84	1	replace
797	[BUG]  [BUGGY]  if(eatTheRest)  {  currentOption  =  Option.OK_STANDARD;  tokens.clear();  currentOption  =  Option.OK_STANDARD;  }  else  {  options.add(option);  }  [FE]  UnrecognizedOptionException  [FE]    UnrecognizedOptionException    [CONTEXT]      private  void  init()  {  eatTheRest  =  false;  tokens.clear();      [BUGGY]  if(eatTheRest)  {  currentOption  =  Option.OK_STANDARD;  tokens.clear();  currentOption  =  Option.OK_STANDARD;  }  else  {  options.add(option);  }  [BUGGY]      }  [CLASS]  PosixParser  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  ArrayList  tokens  Options  options  Option  currentOption  boolean  eatTheRest  	projects/Cli2/src/java/org/apache/commons/cli/PosixParser.java	1.0	53	53	1	replace	if(eatTheRest)  {  currentOption  =  Option.OK_STANDARD;  tokens.clear();  currentOption  =  Option.OK_STANDARD;  }  else  {  options.add(option);  }	  currentOption    =    Option.OK_STANDARD;    tokens.clear();    currentOption    =    Option.OK_STANDARD;    	compilable	  [FE]  UnrecognizedOptionException  	84	1	replace
798	[BUG]  [BUGGY]  if(tokens  ==  null)  {  eatTheRest  =  false;  tokens.clear();  }  if(tokens  ==  null)  {  tokens  =  false;  tokens.clear();  }  [CE]  incompatible  types  [FE]    UnrecognizedOptionException    [CONTEXT]      private  void  init()  {  eatTheRest  =  false;  tokens.clear();      [BUGGY]  if(tokens  ==  null)  {  eatTheRest  =  false;  tokens.clear();  }  if(tokens  ==  null)  {  tokens  =  false;  tokens.clear();  }  [BUGGY]      currentOption  =  null;  }  [CLASS]  PosixParser  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  ArrayList  tokens  Options  options  Option  currentOption  boolean  eatTheRest  	projects/Cli2/src/java/org/apache/commons/cli/PosixParser.java	1.0	53	53	1	replace	if(tokens    ==    null)    {    eatTheRest    =    false;    tokens.clear();    }    if(tokens  ==  null)  {  tokens  =  false;  tokens.clear();  }	  	non-compiled	[CE]  incompatible  types	162	None	add
799	[BUG]  [BUGGY]  [FE]  UnrecognizedOptionException  [FE]    UnrecognizedOptionException    [CONTEXT]      private  void  init()  {  eatTheRest  =  false;  tokens.clear();      [BUGGY]          tokens.clear();    tokens.clear();  currentOption  =  null;  tokens.clear();  [BUGGY]      currentOption  =  null;  }  [CLASS]  PosixParser  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  ArrayList  tokens  Options  options  Option  currentOption  boolean  eatTheRest  	projects/Cli2/src/java/org/apache/commons/cli/PosixParser.java	1.0	53	53	1	add	                tokens.clear();        tokens.clear();    currentOption    =    null;    tokens.clear();	  	compilable	  [FE]  UnrecognizedOptionException  	65	1	add
800	[BUG]  [BUGGY]          tokens.clear();    tokens.clear();  currentOption  =  null;  tokens.clear();  [FE]  UnrecognizedOptionException  [FE]    UnrecognizedOptionException    [CONTEXT]      private  void  init()  {  eatTheRest  =  false;  tokens.clear();      [BUGGY]          tokens.clear();    tokens.clear();  currentOption  =  null;  tokens.clear();  [BUGGY]      currentOption  =  null;  }  [CLASS]  PosixParser  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  ArrayList  tokens  Options  options  Option  currentOption  boolean  eatTheRest  	projects/Cli2/src/java/org/apache/commons/cli/PosixParser.java	1.0	53	53	1	replace	                tokens.clear();        tokens.clear();    currentOption    =    null;    tokens.clear();	  	compilable	  [FE]  UnrecognizedOptionException  	65	1	add
801	[BUG]  [BUGGY]  [FE]  UnrecognizedOptionException  [FE]      UnrecognizedOptionException    [CONTEXT]      private  void  init()  {  eatTheRest  =  false;  tokens.clear();      [BUGGY]          tokens.clear();    tokens.clear();  currentOption  =  null;  ArrayList  <  Option>  tokens  =  new  ArrayList  <  Option>();  [BUGGY]      currentOption  =  null;  }  [CLASS]  PosixParser  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  ArrayList  tokens  Options  options  Option  currentOption  boolean  eatTheRest  	projects/Cli2/src/java/org/apache/commons/cli/PosixParser.java	1.0	53	53	1	add	                tokens.clear();        tokens.clear();    currentOption    =    null;    ArrayList  <  Option>  tokens  =  new  ArrayList  <  Option>();	  	compilable	  [FE]  UnrecognizedOptionException  	65	1	add
802	[BUG]  [BUGGY]          tokens.clear();    tokens.clear();  currentOption  =  null;  ArrayList  <  Option>  tokens  =  new  ArrayList  <  Option>();  [FE]  UnrecognizedOptionException  [FE]      UnrecognizedOptionException    [CONTEXT]      private  void  init()  {  eatTheRest  =  false;  tokens.clear();      [BUGGY]          tokens.clear();    tokens.clear();  currentOption  =  null;  ArrayList  <  Option>  tokens  =  new  ArrayList  <  Option>();  [BUGGY]      currentOption  =  null;  }  [CLASS]  PosixParser  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  ArrayList  tokens  Options  options  Option  currentOption  boolean  eatTheRest  	projects/Cli2/src/java/org/apache/commons/cli/PosixParser.java	1.0	53	53	1	replace	                tokens.clear();        tokens.clear();    currentOption    =    null;    ArrayList  <  Option>  tokens  =  new  ArrayList  <  Option>();	  	compilable	  [FE]  UnrecognizedOptionException  	65	1	add
803	[BUG]  [BUGGY]  Set  tokens  =  new  HashSet();  [CE]  cannot  find  symbol  [FE]          UnrecognizedOptionException      [CONTEXT]      private  void  init()  {  eatTheRest  =  false;  tokens.clear();      [BUGGY]  Set  tokens  =  new  HashSet();  [BUGGY]      currentOption  =  null;  }  [CLASS]  PosixParser  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  ArrayList  tokens  Options  options  Option  currentOption  boolean  eatTheRest  	projects/Cli2/src/java/org/apache/commons/cli/PosixParser.java	1.0	53	53	1	replace	Set  tokens  =  new  HashSet();	  List    tokens    =    new    ArrayList();    	non-compiled	[CE]  cannot  find  symbol	94	None	replace
804	[BUG]  [BUGGY]  [FE]  UnrecognizedOptionException  [FE]    UnrecognizedOptionException    [CONTEXT]      private  void  init()  {  eatTheRest  =  false;  tokens.clear();      [BUGGY]          eatTheRest    =    false;    tokens.clear();    eatTheRest  =  false;  tokens.clear();  currentOption  =  null;  if(currentOption!=  null)  {  currentOption  =  null;  }  [BUGGY]      currentOption  =  null;  }  [CLASS]  PosixParser  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  ArrayList  tokens  Options  options  Option  currentOption  boolean  eatTheRest  	projects/Cli2/src/java/org/apache/commons/cli/PosixParser.java	1.0	53	53	1	add	                eatTheRest        =        false;        tokens.clear();        eatTheRest    =    false;    tokens.clear();    currentOption    =    null;    if(currentOption!=  null)  {  currentOption  =  null;  }	  	compilable	  [FE]  UnrecognizedOptionException  	3	1	add
805	[BUG]  [BUGGY]          eatTheRest    =    false;    tokens.clear();    eatTheRest  =  false;  tokens.clear();  currentOption  =  null;  if(currentOption!=  null)  {  currentOption  =  null;  }  [FE]  UnrecognizedOptionException  [FE]    UnrecognizedOptionException    [CONTEXT]      private  void  init()  {  eatTheRest  =  false;  tokens.clear();      [BUGGY]          eatTheRest    =    false;    tokens.clear();    eatTheRest  =  false;  tokens.clear();  currentOption  =  null;  if(currentOption!=  null)  {  currentOption  =  null;  }  [BUGGY]      currentOption  =  null;  }  [CLASS]  PosixParser  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  ArrayList  tokens  Options  options  Option  currentOption  boolean  eatTheRest  	projects/Cli2/src/java/org/apache/commons/cli/PosixParser.java	1.0	53	53	1	replace	                eatTheRest        =        false;        tokens.clear();        eatTheRest    =    false;    tokens.clear();    currentOption    =    null;    if(currentOption!=  null)  {  currentOption  =  null;  }	  	compilable	  [FE]  UnrecognizedOptionException  	3	1	add
806	[BUG]  [BUGGY]  [FE]  UnrecognizedOptionException  [FE]    UnrecognizedOptionException    [CONTEXT]      private  void  init()  {  eatTheRest  =  false;  tokens.clear();      [BUGGY]  if(eatTheRest)  {  tokens.clear();  currentOption  =  null;  tokens  =  new  ArrayList  <  Option>();  }  [BUGGY]      currentOption  =  null;  }  [CLASS]  PosixParser  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  ArrayList  tokens  Options  options  Option  currentOption  boolean  eatTheRest  	projects/Cli2/src/java/org/apache/commons/cli/PosixParser.java	1.0	53	53	1	add	if(eatTheRest)  {  tokens.clear();  currentOption  =  null;  tokens  =  new  ArrayList  <  Option>();  }	          tokens.clear();    currentOption    =    null;    ArrayList    <    Option>    tokens    =    new    ArrayList    <    Option>();    	compilable	  [FE]  UnrecognizedOptionException  	56	1	replace
807	[BUG]  [BUGGY]  if(eatTheRest)  {  tokens.clear();  currentOption  =  null;  tokens  =  new  ArrayList  <  Option>();  }  [FE]  UnrecognizedOptionException  [FE]    UnrecognizedOptionException    [CONTEXT]      private  void  init()  {  eatTheRest  =  false;  tokens.clear();      [BUGGY]  if(eatTheRest)  {  tokens.clear();  currentOption  =  null;  tokens  =  new  ArrayList  <  Option>();  }  [BUGGY]      currentOption  =  null;  }  [CLASS]  PosixParser  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  ArrayList  tokens  Options  options  Option  currentOption  boolean  eatTheRest  	projects/Cli2/src/java/org/apache/commons/cli/PosixParser.java	1.0	53	53	1	replace	if(eatTheRest)  {  tokens.clear();  currentOption  =  null;  tokens  =  new  ArrayList  <  Option>();  }	          tokens.clear();    currentOption    =    null;    ArrayList    <    Option>    tokens    =    new    ArrayList    <    Option>();    	compilable	  [FE]  UnrecognizedOptionException  	56	1	replace
808	[BUG]  [BUGGY]  [FE]  UnrecognizedOptionException  [FE]      UnrecognizedOptionException    [CONTEXT]      private  void  init()  {  eatTheRest  =  false;  tokens.clear();      [BUGGY]  if(eatTheRest)  {  tokens.clear();  currentOption  =  null;  ArrayList  <  Option>  tokens  =  new  ArrayList  <  Option>();  }  [BUGGY]      currentOption  =  null;  }  [CLASS]  PosixParser  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  ArrayList  tokens  Options  options  Option  currentOption  boolean  eatTheRest  	projects/Cli2/src/java/org/apache/commons/cli/PosixParser.java	1.0	53	53	1	add	if(eatTheRest)  {  tokens.clear();  currentOption  =  null;  ArrayList  <  Option>  tokens  =  new  ArrayList  <  Option>();  }	          tokens.clear();    currentOption    =    null;    ArrayList    <    Option>    tokens    =    new    ArrayList    <    Option>();    	compilable	  [FE]  UnrecognizedOptionException  	56	1	replace
809	[BUG]  [BUGGY]  if(eatTheRest)  {  tokens.clear();  currentOption  =  null;  ArrayList  <  Option>  tokens  =  new  ArrayList  <  Option>();  }  [FE]  UnrecognizedOptionException  [FE]      UnrecognizedOptionException    [CONTEXT]      private  void  init()  {  eatTheRest  =  false;  tokens.clear();      [BUGGY]  if(eatTheRest)  {  tokens.clear();  currentOption  =  null;  ArrayList  <  Option>  tokens  =  new  ArrayList  <  Option>();  }  [BUGGY]      currentOption  =  null;  }  [CLASS]  PosixParser  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  ArrayList  tokens  Options  options  Option  currentOption  boolean  eatTheRest  	projects/Cli2/src/java/org/apache/commons/cli/PosixParser.java	1.0	53	53	1	replace	if(eatTheRest)  {  tokens.clear();  currentOption  =  null;  ArrayList  <  Option>  tokens  =  new  ArrayList  <  Option>();  }	          tokens.clear();    currentOption    =    null;    ArrayList    <    Option>    tokens    =    new    ArrayList    <    Option>();    	compilable	  [FE]  UnrecognizedOptionException  	56	1	replace
810	[BUG]  [BUGGY]  [FE]  UnrecognizedOptionException  [FE]    UnrecognizedOptionException    [CONTEXT]      private  void  init()  {  eatTheRest  =  false;  tokens.clear();      [BUGGY]  if(!eatTheRest)  {  eatTheRest  =  false;  tokens.clear();  }  if(!eatTheRest)  {  currentOption  =  null;  tokens.clear();  }  [BUGGY]      currentOption  =  null;  }  [CLASS]  PosixParser  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  ArrayList  tokens  Options  options  Option  currentOption  boolean  eatTheRest  	projects/Cli2/src/java/org/apache/commons/cli/PosixParser.java	1.0	53	53	1	add	if(!eatTheRest)    {    eatTheRest    =    false;    tokens.clear();    }    if(!eatTheRest)  {  currentOption  =  null;  tokens.clear();  }	  	compilable	  [FE]  UnrecognizedOptionException  	115	1	add
811	[BUG]  [BUGGY]  if(!eatTheRest)  {  eatTheRest  =  false;  tokens.clear();  }  if(!eatTheRest)  {  currentOption  =  null;  tokens.clear();  }  [FE]  UnrecognizedOptionException  [FE]    UnrecognizedOptionException    [CONTEXT]      private  void  init()  {  eatTheRest  =  false;  tokens.clear();      [BUGGY]  if(!eatTheRest)  {  eatTheRest  =  false;  tokens.clear();  }  if(!eatTheRest)  {  currentOption  =  null;  tokens.clear();  }  [BUGGY]      currentOption  =  null;  }  [CLASS]  PosixParser  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  ArrayList  tokens  Options  options  Option  currentOption  boolean  eatTheRest  	projects/Cli2/src/java/org/apache/commons/cli/PosixParser.java	1.0	53	53	1	replace	if(!eatTheRest)    {    eatTheRest    =    false;    tokens.clear();    }    if(!eatTheRest)  {  currentOption  =  null;  tokens.clear();  }	  	compilable	  [FE]  UnrecognizedOptionException  	115	1	add
812	[BUG]  [BUGGY]  [FE]  UnrecognizedOptionException  [FE]    UnrecognizedOptionException    [CONTEXT]      private  void  init()  {  eatTheRest  =  false;  tokens.clear();      [BUGGY]  if(tokens!=  null)  {  currentOption  =  Option.OK_STANDARD;  currentOption  =  Option.OK_STANDARD;  }  [BUGGY]      }  [CLASS]  PosixParser  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  ArrayList  tokens  Options  options  Option  currentOption  boolean  eatTheRest  	projects/Cli2/src/java/org/apache/commons/cli/PosixParser.java	1.0	53	53	1	add	if(tokens!=  null)  {  currentOption  =  Option.OK_STANDARD;  currentOption  =  Option.OK_STANDARD;  }	  currentOption    =    Option.OK_STANDARD;    currentOption    =    Option.OK_STANDARD;    	compilable	  [FE]  UnrecognizedOptionException  	80	1	replace
813	[BUG]  [BUGGY]  if(tokens!=  null)  {  currentOption  =  Option.OK_STANDARD;  currentOption  =  Option.OK_STANDARD;  }  [FE]  UnrecognizedOptionException  [FE]    UnrecognizedOptionException    [CONTEXT]      private  void  init()  {  eatTheRest  =  false;  tokens.clear();      [BUGGY]  if(tokens!=  null)  {  currentOption  =  Option.OK_STANDARD;  currentOption  =  Option.OK_STANDARD;  }  [BUGGY]      }  [CLASS]  PosixParser  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  ArrayList  tokens  Options  options  Option  currentOption  boolean  eatTheRest  	projects/Cli2/src/java/org/apache/commons/cli/PosixParser.java	1.0	53	53	1	replace	if(tokens!=  null)  {  currentOption  =  Option.OK_STANDARD;  currentOption  =  Option.OK_STANDARD;  }	  currentOption    =    Option.OK_STANDARD;    currentOption    =    Option.OK_STANDARD;    	compilable	  [FE]  UnrecognizedOptionException  	80	1	replace
814	[BUG]  [BUGGY]  [FE]  UnrecognizedOptionException  [FE]      UnrecognizedOptionException    [CONTEXT]      private  void  init()  {  eatTheRest  =  false;  tokens.clear();      [BUGGY]  if(eatTheRest)  {  currentOption  =  Option.OK_STANDARD;  currentOption  =  Option.OK_STANDARD;  }  [BUGGY]      }  [CLASS]  PosixParser  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  ArrayList  tokens  Options  options  Option  currentOption  boolean  eatTheRest  	projects/Cli2/src/java/org/apache/commons/cli/PosixParser.java	1.0	53	53	1	add	if(eatTheRest)  {  currentOption  =  Option.OK_STANDARD;  currentOption  =  Option.OK_STANDARD;  }	  currentOption    =    Option.OK_STANDARD;    currentOption    =    Option.OK_STANDARD;    	compilable	  [FE]  UnrecognizedOptionException  	80	1	replace
815	[BUG]  [BUGGY]  if(eatTheRest)  {  currentOption  =  Option.OK_STANDARD;  currentOption  =  Option.OK_STANDARD;  }  [FE]  UnrecognizedOptionException  [FE]      UnrecognizedOptionException    [CONTEXT]      private  void  init()  {  eatTheRest  =  false;  tokens.clear();      [BUGGY]  if(eatTheRest)  {  currentOption  =  Option.OK_STANDARD;  currentOption  =  Option.OK_STANDARD;  }  [BUGGY]      }  [CLASS]  PosixParser  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  ArrayList  tokens  Options  options  Option  currentOption  boolean  eatTheRest  	projects/Cli2/src/java/org/apache/commons/cli/PosixParser.java	1.0	53	53	1	replace	if(eatTheRest)  {  currentOption  =  Option.OK_STANDARD;  currentOption  =  Option.OK_STANDARD;  }	  currentOption    =    Option.OK_STANDARD;    currentOption    =    Option.OK_STANDARD;    	compilable	  [FE]  UnrecognizedOptionException  	80	1	replace
816	[BUG]  [BUGGY]  currentOption  =  Option.NEGATIVE  &&  tokens.size()  ==  1;  [CE]  cannot  find  symbol  NEGATIVE  [FE]            UnrecognizedOptionException      [CONTEXT]      private  void  init()  {  eatTheRest  =  false;  tokens.clear();      [BUGGY]  currentOption  =  Option.NEGATIVE  &&  tokens.size()  ==  1;  [BUGGY]      }  [CLASS]  PosixParser  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  ArrayList  tokens  Options  options  Option  currentOption  boolean  eatTheRest  	projects/Cli2/src/java/org/apache/commons/cli/PosixParser.java	1.0	53	53	1	replace	currentOption  =  Option.NEGATIVE  &&  tokens.size()  ==  1;	  currentOption    =    Option.NEGATIVE;    	non-compiled	[CE]  cannot  find  symbol  NEGATIVE	165	None	replace
817	[BUG]  [BUGGY]  if(currentOption!=  null)  {  ArrayList  tokens  =  new  ArrayList();  ArrayList  tokens  =  new  ArrayList();  this.eatTheRest  =  true;  }  [CE]  variable  tokens  is  already  defined  in  method  init()  [FE]        UnrecognizedOptionException      [CONTEXT]      private  void  init()  {  eatTheRest  =  false;  tokens.clear();      [BUGGY]  if(currentOption!=  null)  {  ArrayList  tokens  =  new  ArrayList();  ArrayList  tokens  =  new  ArrayList();  this.eatTheRest  =  true;  }  [BUGGY]      currentOption  =  null;  }  [CLASS]  PosixParser  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  ArrayList  tokens  Options  options  Option  currentOption  boolean  eatTheRest  	projects/Cli2/src/java/org/apache/commons/cli/PosixParser.java	1.0	53	53	1	replace	if(currentOption!=  null)  {  ArrayList  tokens  =  new  ArrayList();  ArrayList  tokens  =  new  ArrayList();  this.eatTheRest  =  true;  }	          ArrayList    tokens    =    new    ArrayList();    ArrayList    tokens    =    new    ArrayList();    this.eatTheRest    =    true;    	non-compiled	[CE]  variable  tokens  is  already  defined  in  method  init()	150	None	replace
818	[BUG]  [BUGGY]  if(options!=  null)  {  ArrayList  <  Option>  tokens  =  new  ArrayList  <  Option>();  Options  option  =  options.getOption(null);  }  [CE]  incompatible  types  [FE]    NullPointerException    [CONTEXT]      private  void  init()  {  eatTheRest  =  false;  tokens.clear();      [BUGGY]  if(options!=  null)  {  ArrayList  <  Option>  tokens  =  new  ArrayList  <  Option>();  Options  option  =  options.getOption(null);  }  [BUGGY]      currentOption  =  null;  }  [CLASS]  PosixParser  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  ArrayList  tokens  Options  options  Option  currentOption  boolean  eatTheRest  	projects/Cli2/src/java/org/apache/commons/cli/PosixParser.java	1.0	53	53	1	replace	if(options!=  null)  {  ArrayList  <  Option>  tokens  =  new  ArrayList  <  Option>();  Options  option  =  options.getOption(null);  }	          ArrayList    <    Option>    tokens    =    new    ArrayList    <    Option>();    Option    option    =    options.getOption(null);    	non-compiled	[CE]  incompatible  types	111	None	replace
819	[BUG]  [BUGGY]  currentOption  =  options.newInstance(tokens);  [CE]  cannot  find  symbol  [FE]                UnrecognizedOptionException      [CONTEXT]      private  void  init()  {  eatTheRest  =  false;  tokens.clear();      [BUGGY]  currentOption  =  options.newInstance(tokens);  [BUGGY]      }  [CLASS]  PosixParser  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  ArrayList  tokens  Options  options  Option  currentOption  boolean  eatTheRest  	projects/Cli2/src/java/org/apache/commons/cli/PosixParser.java	1.0	53	53	1	replace	currentOption  =  options.newInstance(tokens);	  currentOption    =    options.newInstance();    	non-compiled	[CE]  cannot  find  symbol	76	None	replace
820	[BUG]  [BUGGY]  [FE]  UnrecognizedOptionException  [FE]    UnrecognizedOptionException    [CONTEXT]      private  void  init()  {  eatTheRest  =  false;  tokens.clear();      [BUGGY]  if(tokens!=  null)  {  tokens.clear();  currentOption  =  null;  }  [BUGGY]      currentOption  =  null;  }  [CLASS]  PosixParser  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  ArrayList  tokens  Options  options  Option  currentOption  boolean  eatTheRest  	projects/Cli2/src/java/org/apache/commons/cli/PosixParser.java	1.0	53	53	1	add	if(tokens!=  null)  {  tokens.clear();  currentOption  =  null;  }	  if(eatTheRest)    {    tokens.clear();    currentOption    =    null;    }    	compilable	  [FE]  UnrecognizedOptionException  	125	1	replace
821	[BUG]  [BUGGY]  if(tokens!=  null)  {  tokens.clear();  currentOption  =  null;  }  [FE]  UnrecognizedOptionException  [FE]    UnrecognizedOptionException    [CONTEXT]      private  void  init()  {  eatTheRest  =  false;  tokens.clear();      [BUGGY]  if(tokens!=  null)  {  tokens.clear();  currentOption  =  null;  }  [BUGGY]      currentOption  =  null;  }  [CLASS]  PosixParser  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  ArrayList  tokens  Options  options  Option  currentOption  boolean  eatTheRest  	projects/Cli2/src/java/org/apache/commons/cli/PosixParser.java	1.0	53	53	1	replace	if(tokens!=  null)  {  tokens.clear();  currentOption  =  null;  }	  if(eatTheRest)    {    tokens.clear();    currentOption    =    null;    }    	compilable	  [FE]  UnrecognizedOptionException  	125	1	replace
822	[BUG]  [BUGGY]  [FE]  UnrecognizedOptionException  [FE]    UnrecognizedOptionException    [CONTEXT]      private  void  init()  {  eatTheRest  =  false;  tokens.clear();      [BUGGY]  if(currentOption!=  null)  {  tokens  =  new  ArrayList  <  Option>();  tokens.clear();  }  [BUGGY]      currentOption  =  null;  }  [CLASS]  PosixParser  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  ArrayList  tokens  Options  options  Option  currentOption  boolean  eatTheRest  	projects/Cli2/src/java/org/apache/commons/cli/PosixParser.java	1.0	53	53	1	add	if(currentOption!=  null)  {  tokens  =  new  ArrayList  <  Option>();  tokens.clear();  }	  if(currentOption    ==    null)    {    eatTheRest    =    false;    tokens.clear();    }    	compilable	  [FE]  UnrecognizedOptionException  	40	1	replace
823	[BUG]  [BUGGY]  if(currentOption!=  null)  {  tokens  =  new  ArrayList  <  Option>();  tokens.clear();  }  [FE]  UnrecognizedOptionException  [FE]    UnrecognizedOptionException    [CONTEXT]      private  void  init()  {  eatTheRest  =  false;  tokens.clear();      [BUGGY]  if(currentOption!=  null)  {  tokens  =  new  ArrayList  <  Option>();  tokens.clear();  }  [BUGGY]      currentOption  =  null;  }  [CLASS]  PosixParser  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  ArrayList  tokens  Options  options  Option  currentOption  boolean  eatTheRest  	projects/Cli2/src/java/org/apache/commons/cli/PosixParser.java	1.0	53	53	1	replace	if(currentOption!=  null)  {  tokens  =  new  ArrayList  <  Option>();  tokens.clear();  }	  if(currentOption    ==    null)    {    eatTheRest    =    false;    tokens.clear();    }    	compilable	  [FE]  UnrecognizedOptionException  	40	1	replace
824	[BUG]  [BUGGY]          eatTheRest    =    false;    tokens.clear();    Option  currentOption  =  null;  tokens.clear();  eatTheRest  =  false;  tokens.clear();  Option  currentOption  =  null;  [CE]  variable  currentOption  is  already  defined  in  method  init()  [FE]    UnrecognizedOptionException    [CONTEXT]      private  void  init()  {  eatTheRest  =  false;  tokens.clear();      [BUGGY]          eatTheRest    =    false;    tokens.clear();    Option  currentOption  =  null;  tokens.clear();  eatTheRest  =  false;  tokens.clear();  Option  currentOption  =  null;  [BUGGY]      currentOption  =  null;  }  [CLASS]  PosixParser  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  ArrayList  tokens  Options  options  Option  currentOption  boolean  eatTheRest  	projects/Cli2/src/java/org/apache/commons/cli/PosixParser.java	1.0	53	53	1	replace	                eatTheRest        =        false;        tokens.clear();        Option    currentOption    =    null;    tokens.clear();  eatTheRest  =  false;  tokens.clear();  Option  currentOption  =  null;	  	non-compiled	[CE]  variable  currentOption  is  already  defined  in  method  init()	131	None	add
825	[BUG]  [BUGGY]          eatTheRest    =    false;    tokens.clear();    Option  currentOption  =  null;  Option  currentOption  =  null;  [CE]  variable  currentOption  is  already  defined  in  method  init()  [FE]      UnrecognizedOptionException    [CONTEXT]      private  void  init()  {  eatTheRest  =  false;  tokens.clear();      [BUGGY]          eatTheRest    =    false;    tokens.clear();    Option  currentOption  =  null;  Option  currentOption  =  null;  [BUGGY]      currentOption  =  null;  }  [CLASS]  PosixParser  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  ArrayList  tokens  Options  options  Option  currentOption  boolean  eatTheRest  	projects/Cli2/src/java/org/apache/commons/cli/PosixParser.java	1.0	53	53	1	replace	                eatTheRest        =        false;        tokens.clear();        Option    currentOption    =    null;    Option  currentOption  =  null;	  	non-compiled	[CE]  variable  currentOption  is  already  defined  in  method  init()	131	None	add
826	[BUG]  [BUGGY]  ArrayList  tokens  =  new  ArrayList();  Option  currentOption  =  options.getOption(this,  options);  [CE]  method  getOption  in  class  Options  cannot  be  applied  to  given  types;  [FE]          UnrecognizedOptionException      [CONTEXT]      private  void  init()  {  eatTheRest  =  false;  tokens.clear();      [BUGGY]  ArrayList  tokens  =  new  ArrayList();  Option  currentOption  =  options.getOption(this,  options);  [BUGGY]      currentOption  =  null;  }  [CLASS]  PosixParser  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  ArrayList  tokens  Options  options  Option  currentOption  boolean  eatTheRest  	projects/Cli2/src/java/org/apache/commons/cli/PosixParser.java	1.0	53	53	1	replace	ArrayList  tokens  =  new  ArrayList();  Option  currentOption  =  options.getOption(this,  options);	          ArrayList    tokens    =    new    ArrayList();    Option    currentOption    =    options.getOption(this);    	non-compiled	[CE]  method  getOption  in  class  Options  cannot  be  applied  to  given  types;	137	None	replace
827	[BUG]  [BUGGY]          tokens.clear();    ArrayList  <  Option>  tokens  =  new  ArrayList  <  Option>();  TokenBuffer  tokens  =  new  TokenBuffer(tokens.size());  [CE]  cannot  find  symbol  [FE]    UnrecognizedOptionException    [CONTEXT]      private  void  init()  {  eatTheRest  =  false;  tokens.clear();      [BUGGY]          tokens.clear();    ArrayList  <  Option>  tokens  =  new  ArrayList  <  Option>();  TokenBuffer  tokens  =  new  TokenBuffer(tokens.size());  [BUGGY]      currentOption  =  null;  }  [CLASS]  PosixParser  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  ArrayList  tokens  Options  options  Option  currentOption  boolean  eatTheRest  	projects/Cli2/src/java/org/apache/commons/cli/PosixParser.java	1.0	53	53	1	replace	                tokens.clear();        ArrayList    <    Option>    tokens    =    new    ArrayList    <    Option>();    TokenBuffer  tokens  =  new  TokenBuffer(tokens.size());	  	non-compiled	[CE]  cannot  find  symbol	62	None	add
828	[BUG]  [BUGGY]  currentOption  =  Option.None();  [CE]  cannot  find  symbol  [FE]            UnrecognizedOptionException      [CONTEXT]      private  void  init()  {  eatTheRest  =  false;  tokens.clear();      [BUGGY]  currentOption  =  Option.None();  [BUGGY]      }  [CLASS]  PosixParser  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  ArrayList  tokens  Options  options  Option  currentOption  boolean  eatTheRest  	projects/Cli2/src/java/org/apache/commons/cli/PosixParser.java	1.0	53	53	1	replace	currentOption  =  Option.None();	  currentOption    =    Option.None;    	non-compiled	[CE]  cannot  find  symbol	13	None	replace
829	[BUG]  [BUGGY]  [FE]  UnrecognizedOptionException  [FE]    UnrecognizedOptionException    [CONTEXT]      private  void  init()  {  eatTheRest  =  false;  tokens.clear();      [BUGGY]  currentOption    =    Option.OK_STANDARD;    ArrayList  <  Option>  tokens  =  options.values();  Option  options  =  options.values();  [BUGGY]      }  [CLASS]  PosixParser  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  ArrayList  tokens  Options  options  Option  currentOption  boolean  eatTheRest  	projects/Cli2/src/java/org/apache/commons/cli/PosixParser.java	1.0	53	53	1	add	currentOption        =        Option.OK_STANDARD;        ArrayList    <    Option>    tokens    =    options.values();    Option  options  =  options.values();	  	compilable	  [FE]  UnrecognizedOptionException  	103	1	add
830	[BUG]  [BUGGY]  currentOption    =    Option.OK_STANDARD;    ArrayList  <  Option>  tokens  =  options.values();  Option  options  =  options.values();  [FE]  UnrecognizedOptionException  [FE]    UnrecognizedOptionException    [CONTEXT]      private  void  init()  {  eatTheRest  =  false;  tokens.clear();      [BUGGY]  currentOption    =    Option.OK_STANDARD;    ArrayList  <  Option>  tokens  =  options.values();  Option  options  =  options.values();  [BUGGY]      }  [CLASS]  PosixParser  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  ArrayList  tokens  Options  options  Option  currentOption  boolean  eatTheRest  	projects/Cli2/src/java/org/apache/commons/cli/PosixParser.java	1.0	53	53	1	replace	currentOption        =        Option.OK_STANDARD;        ArrayList    <    Option>    tokens    =    options.values();    Option  options  =  options.values();	  	compilable	  [FE]  UnrecognizedOptionException  	103	1	add
831	[BUG]  [BUGGY]  [FE]  UnrecognizedOptionException  [FE]      UnrecognizedOptionException    [CONTEXT]      private  void  init()  {  eatTheRest  =  false;  tokens.clear();      [BUGGY]  currentOption    =    Option.OK_STANDARD;    ArrayList  <  Option>  tokens  =  options.values();  currentOption  =  Option.OK_STANDARD;  [BUGGY]      }  [CLASS]  PosixParser  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  ArrayList  tokens  Options  options  Option  currentOption  boolean  eatTheRest  	projects/Cli2/src/java/org/apache/commons/cli/PosixParser.java	1.0	53	53	1	add	currentOption        =        Option.OK_STANDARD;        ArrayList    <    Option>    tokens    =    options.values();    currentOption  =  Option.OK_STANDARD;	  	compilable	  [FE]  UnrecognizedOptionException  	103	1	add
832	[BUG]  [BUGGY]  currentOption    =    Option.OK_STANDARD;    ArrayList  <  Option>  tokens  =  options.values();  currentOption  =  Option.OK_STANDARD;  [FE]  UnrecognizedOptionException  [FE]      UnrecognizedOptionException    [CONTEXT]      private  void  init()  {  eatTheRest  =  false;  tokens.clear();      [BUGGY]  currentOption    =    Option.OK_STANDARD;    ArrayList  <  Option>  tokens  =  options.values();  currentOption  =  Option.OK_STANDARD;  [BUGGY]      }  [CLASS]  PosixParser  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  ArrayList  tokens  Options  options  Option  currentOption  boolean  eatTheRest  	projects/Cli2/src/java/org/apache/commons/cli/PosixParser.java	1.0	53	53	1	replace	currentOption        =        Option.OK_STANDARD;        ArrayList    <    Option>    tokens    =    options.values();    currentOption  =  Option.OK_STANDARD;	  	compilable	  [FE]  UnrecognizedOptionException  	103	1	add
833	[BUG]  [BUGGY]  [FE]  UnrecognizedOptionException  [FE]        UnrecognizedOptionException    [CONTEXT]      private  void  init()  {  eatTheRest  =  false;  tokens.clear();      [BUGGY]  currentOption    =    Option.OK_STANDARD;    ArrayList  <  Option>  tokens  =  options.values();  Option  option  =  options.values();  [BUGGY]      }  [CLASS]  PosixParser  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  ArrayList  tokens  Options  options  Option  currentOption  boolean  eatTheRest  	projects/Cli2/src/java/org/apache/commons/cli/PosixParser.java	1.0	53	53	1	add	currentOption        =        Option.OK_STANDARD;        ArrayList    <    Option>    tokens    =    options.values();    Option  option  =  options.values();	  	compilable	  [FE]  UnrecognizedOptionException  	103	1	add
834	[BUG]  [BUGGY]  currentOption    =    Option.OK_STANDARD;    ArrayList  <  Option>  tokens  =  options.values();  Option  option  =  options.values();  [FE]  UnrecognizedOptionException  [FE]        UnrecognizedOptionException    [CONTEXT]      private  void  init()  {  eatTheRest  =  false;  tokens.clear();      [BUGGY]  currentOption    =    Option.OK_STANDARD;    ArrayList  <  Option>  tokens  =  options.values();  Option  option  =  options.values();  [BUGGY]      }  [CLASS]  PosixParser  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  ArrayList  tokens  Options  options  Option  currentOption  boolean  eatTheRest  	projects/Cli2/src/java/org/apache/commons/cli/PosixParser.java	1.0	53	53	1	replace	currentOption        =        Option.OK_STANDARD;        ArrayList    <    Option>    tokens    =    options.values();    Option  option  =  options.values();	  	compilable	  [FE]  UnrecognizedOptionException  	103	1	add
835	[BUG]  [BUGGY]          ArrayList    tokens    =    new    ArrayList();    Option  currentOption  =  options.getOption(null);  Options  options  =  options.getOption(null);  [CE]  incompatible  types  [FE]    NullPointerException    [CONTEXT]      private  void  init()  {  eatTheRest  =  false;  tokens.clear();      [BUGGY]          ArrayList    tokens    =    new    ArrayList();    Option  currentOption  =  options.getOption(null);  Options  options  =  options.getOption(null);  [BUGGY]      currentOption  =  null;  }  [CLASS]  PosixParser  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  ArrayList  tokens  Options  options  Option  currentOption  boolean  eatTheRest  	projects/Cli2/src/java/org/apache/commons/cli/PosixParser.java	1.0	53	53	1	replace	                ArrayList        tokens        =        new        ArrayList();        Option    currentOption    =    options.getOption(null);    Options  options  =  options.getOption(null);	  	non-compiled	[CE]  incompatible  types	139	None	add
836	[BUG]  [BUGGY]  [FE]  UnrecognizedOptionException  [FE]    UnrecognizedOptionException    [CONTEXT]      private  void  init()  {  eatTheRest  =  false;  tokens.clear();      [BUGGY]  currentOption    =    Option.OK_STANDARD;    currentOption  =  Option.OK_STANDARD;  ArrayList  <  Option>  tokens  =  new  ArrayList  <  Option>();  [BUGGY]      }  [CLASS]  PosixParser  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  ArrayList  tokens  Options  options  Option  currentOption  boolean  eatTheRest  	projects/Cli2/src/java/org/apache/commons/cli/PosixParser.java	1.0	53	53	1	add	currentOption        =        Option.OK_STANDARD;        currentOption    =    Option.OK_STANDARD;    ArrayList  <  Option>  tokens  =  new  ArrayList  <  Option>();	  	compilable	  [FE]  UnrecognizedOptionException  	79	1	add
837	[BUG]  [BUGGY]  currentOption    =    Option.OK_STANDARD;    currentOption  =  Option.OK_STANDARD;  ArrayList  <  Option>  tokens  =  new  ArrayList  <  Option>();  [FE]  UnrecognizedOptionException  [FE]    UnrecognizedOptionException    [CONTEXT]      private  void  init()  {  eatTheRest  =  false;  tokens.clear();      [BUGGY]  currentOption    =    Option.OK_STANDARD;    currentOption  =  Option.OK_STANDARD;  ArrayList  <  Option>  tokens  =  new  ArrayList  <  Option>();  [BUGGY]      }  [CLASS]  PosixParser  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  ArrayList  tokens  Options  options  Option  currentOption  boolean  eatTheRest  	projects/Cli2/src/java/org/apache/commons/cli/PosixParser.java	1.0	53	53	1	replace	currentOption        =        Option.OK_STANDARD;        currentOption    =    Option.OK_STANDARD;    ArrayList  <  Option>  tokens  =  new  ArrayList  <  Option>();	  	compilable	  [FE]  UnrecognizedOptionException  	79	1	add
838	[BUG]  [BUGGY]  ArrayList  tokens  =  new  ArrayList(options,  options.size());  [CE]  cannot  find  symbol  [FE]            UnrecognizedOptionException      [CONTEXT]      private  void  init()  {  eatTheRest  =  false;  tokens.clear();      [BUGGY]  ArrayList  tokens  =  new  ArrayList(options,  options.size());  [BUGGY]      currentOption  =  null;  }  [CLASS]  PosixParser  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  ArrayList  tokens  Options  options  Option  currentOption  boolean  eatTheRest  	projects/Cli2/src/java/org/apache/commons/cli/PosixParser.java	1.0	53	53	1	replace	ArrayList  tokens  =  new  ArrayList(options,  options.size());	  ArrayList    tokens    =    new    ArrayList(options.size());    	non-compiled	[CE]  cannot  find  symbol	89	None	replace
839	[BUG]  [BUGGY]  currentOption  =  options.cloneOption(this,  options);  [CE]  cannot  find  symbol  [FE]            UnrecognizedOptionException      [CONTEXT]      private  void  init()  {  eatTheRest  =  false;  tokens.clear();      [BUGGY]  currentOption  =  options.cloneOption(this,  options);  [BUGGY]      }  [CLASS]  PosixParser  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  ArrayList  tokens  Options  options  Option  currentOption  boolean  eatTheRest  	projects/Cli2/src/java/org/apache/commons/cli/PosixParser.java	1.0	53	53	1	replace	currentOption  =  options.cloneOption(this,  options);	  currentOption    =    options.cloneOption(this);    	non-compiled	[CE]  cannot  find  symbol	153	None	replace
840	[BUG]  [BUGGY]  [FE]  UnrecognizedOptionException  [FE]    UnrecognizedOptionException    [CONTEXT]      private  void  init()  {  eatTheRest  =  false;  tokens.clear();      [BUGGY]  if(eatTheRest)  {  tokens.clear();  tokens.clear();  currentOption  =  null;  }  [BUGGY]      currentOption  =  null;  }  [CLASS]  PosixParser  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  ArrayList  tokens  Options  options  Option  currentOption  boolean  eatTheRest  	projects/Cli2/src/java/org/apache/commons/cli/PosixParser.java	1.0	53	53	1	add	if(eatTheRest)  {  tokens.clear();  tokens.clear();  currentOption  =  null;  }	          tokens.clear();    tokens.clear();    currentOption    =    null;    	compilable	  [FE]  UnrecognizedOptionException  	66	1	replace
841	[BUG]  [BUGGY]  if(eatTheRest)  {  tokens.clear();  tokens.clear();  currentOption  =  null;  }  [FE]  UnrecognizedOptionException  [FE]    UnrecognizedOptionException    [CONTEXT]      private  void  init()  {  eatTheRest  =  false;  tokens.clear();      [BUGGY]  if(eatTheRest)  {  tokens.clear();  tokens.clear();  currentOption  =  null;  }  [BUGGY]      currentOption  =  null;  }  [CLASS]  PosixParser  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  ArrayList  tokens  Options  options  Option  currentOption  boolean  eatTheRest  	projects/Cli2/src/java/org/apache/commons/cli/PosixParser.java	1.0	53	53	1	replace	if(eatTheRest)  {  tokens.clear();  tokens.clear();  currentOption  =  null;  }	          tokens.clear();    tokens.clear();    currentOption    =    null;    	compilable	  [FE]  UnrecognizedOptionException  	66	1	replace
842	[BUG]  [BUGGY]  if(eatTheRest)  {  tokens.clear();  tokens.clear();  currentOption  =  null;  }  else  {  [CE]  illegal  start  of  expression  [FE]      UnrecognizedOptionException    [CONTEXT]      private  void  init()  {  eatTheRest  =  false;  tokens.clear();      [BUGGY]  if(eatTheRest)  {  tokens.clear();  tokens.clear();  currentOption  =  null;  }  else  {  [BUGGY]      currentOption  =  null;  }  [CLASS]  PosixParser  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  ArrayList  tokens  Options  options  Option  currentOption  boolean  eatTheRest  	projects/Cli2/src/java/org/apache/commons/cli/PosixParser.java	1.0	53	53	1	replace	if(eatTheRest)  {  tokens.clear();  tokens.clear();  currentOption  =  null;  }  else  {	          tokens.clear();    tokens.clear();    currentOption    =    null;    	non-compiled	[CE]  illegal  start  of  expression	66	None	replace
843	[BUG]  [BUGGY]          tokens.clear();    currentOption    =    null;    ArrayList  <  Option>  tokens  =  new  ArrayList  <  Option>();  TokenBuffer  tokens  =  new  TokenBuffer(tokens.size());  [CE]  cannot  find  symbol  [FE]    UnrecognizedOptionException    [CONTEXT]      private  void  init()  {  eatTheRest  =  false;  tokens.clear();      [BUGGY]          tokens.clear();    currentOption    =    null;    ArrayList  <  Option>  tokens  =  new  ArrayList  <  Option>();  TokenBuffer  tokens  =  new  TokenBuffer(tokens.size());  [BUGGY]      currentOption  =  null;  }  [CLASS]  PosixParser  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  ArrayList  tokens  Options  options  Option  currentOption  boolean  eatTheRest  	projects/Cli2/src/java/org/apache/commons/cli/PosixParser.java	1.0	53	53	1	replace	                tokens.clear();        currentOption        =        null;        ArrayList    <    Option>    tokens    =    new    ArrayList    <    Option>();    TokenBuffer  tokens  =  new  TokenBuffer(tokens.size());	  	non-compiled	[CE]  cannot  find  symbol	55	None	add
844	[BUG]  [BUGGY]  [FE]  UnrecognizedOptionException  [FE]    UnrecognizedOptionException    [CONTEXT]      private  void  init()  {  eatTheRest  =  false;  tokens.clear();      [BUGGY]  currentOption  =  Option.OK_OBJECT;  [BUGGY]      }  [CLASS]  PosixParser  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  ArrayList  tokens  Options  options  Option  currentOption  boolean  eatTheRest  	projects/Cli2/src/java/org/apache/commons/cli/PosixParser.java	1.0	53	53	1	add	currentOption  =  Option.OK_OBJECT;	  currentOption    =    Option.OK_OPTIONAL;    	compilable	  [FE]  UnrecognizedOptionException  	119	1	replace
845	[BUG]  [BUGGY]  currentOption  =  Option.OK_OBJECT;  [FE]  UnrecognizedOptionException  [FE]    UnrecognizedOptionException    [CONTEXT]      private  void  init()  {  eatTheRest  =  false;  tokens.clear();      [BUGGY]  currentOption  =  Option.OK_OBJECT;  [BUGGY]      }  [CLASS]  PosixParser  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  ArrayList  tokens  Options  options  Option  currentOption  boolean  eatTheRest  	projects/Cli2/src/java/org/apache/commons/cli/PosixParser.java	1.0	53	53	1	replace	currentOption  =  Option.OK_OBJECT;	  currentOption    =    Option.OK_OPTIONAL;    	compilable	  [FE]  UnrecognizedOptionException  	119	1	replace
846	[BUG]  [BUGGY]  [FE]  UnrecognizedOptionException  [FE]    UnrecognizedOptionException    [CONTEXT]      private  void  init()  {  eatTheRest  =  false;  tokens.clear();      [BUGGY]          tokens.add(     "--     ");    tokens.add(   "--     ");  tokens.clear();  [BUGGY]      currentOption  =  null;  }  [CLASS]  PosixParser  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  ArrayList  tokens  Options  options  Option  currentOption  boolean  eatTheRest  	projects/Cli2/src/java/org/apache/commons/cli/PosixParser.java	1.0	53	53	1	add	                tokens.add(       "--       ");        tokens.add(   "--       ");    tokens.clear();	  	compilable	  [FE]  UnrecognizedOptionException  	22	1	add
847	[BUG]  [BUGGY]          tokens.add(     "--     ");    tokens.add(   "--     ");  tokens.clear();  [FE]  UnrecognizedOptionException  [FE]    UnrecognizedOptionException    [CONTEXT]      private  void  init()  {  eatTheRest  =  false;  tokens.clear();      [BUGGY]          tokens.add(     "--     ");    tokens.add(   "--     ");  tokens.clear();  [BUGGY]      currentOption  =  null;  }  [CLASS]  PosixParser  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  ArrayList  tokens  Options  options  Option  currentOption  boolean  eatTheRest  	projects/Cli2/src/java/org/apache/commons/cli/PosixParser.java	1.0	53	53	1	replace	                tokens.add(       "--       ");        tokens.add(   "--       ");    tokens.clear();	  	compilable	  [FE]  UnrecognizedOptionException  	22	1	add
848	[BUG]  [BUGGY]  [FE]  UnrecognizedOptionException  [FE]    UnrecognizedOptionException    [CONTEXT]      private  void  init()  {  eatTheRest  =  false;  tokens.clear();      [BUGGY]  currentOption    =    Option.OK_STANDARD;    ArrayList  <  Option>  tokens  =  new  ArrayList  <  Option>();  currentOption  =  Option.OK_STANDARD;  tokens.clear();  [BUGGY]      }  [CLASS]  PosixParser  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  ArrayList  tokens  Options  options  Option  currentOption  boolean  eatTheRest  	projects/Cli2/src/java/org/apache/commons/cli/PosixParser.java	1.0	53	53	1	add	currentOption        =        Option.OK_STANDARD;        ArrayList    <    Option>    tokens    =    new    ArrayList    <    Option>();    currentOption  =  Option.OK_STANDARD;  tokens.clear();	  	compilable	  [FE]  UnrecognizedOptionException  	87	1	add
849	[BUG]  [BUGGY]  currentOption    =    Option.OK_STANDARD;    ArrayList  <  Option>  tokens  =  new  ArrayList  <  Option>();  currentOption  =  Option.OK_STANDARD;  tokens.clear();  [FE]  UnrecognizedOptionException  [FE]    UnrecognizedOptionException    [CONTEXT]      private  void  init()  {  eatTheRest  =  false;  tokens.clear();      [BUGGY]  currentOption    =    Option.OK_STANDARD;    ArrayList  <  Option>  tokens  =  new  ArrayList  <  Option>();  currentOption  =  Option.OK_STANDARD;  tokens.clear();  [BUGGY]      }  [CLASS]  PosixParser  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  ArrayList  tokens  Options  options  Option  currentOption  boolean  eatTheRest  	projects/Cli2/src/java/org/apache/commons/cli/PosixParser.java	1.0	53	53	1	replace	currentOption        =        Option.OK_STANDARD;        ArrayList    <    Option>    tokens    =    new    ArrayList    <    Option>();    currentOption  =  Option.OK_STANDARD;  tokens.clear();	  	compilable	  [FE]  UnrecognizedOptionException  	87	1	add
850	[BUG]  [BUGGY]  Option  tokens  =  new  Option[tokens.size()  ];  [CE]  cannot  find  symbol  [FE]          UnrecognizedOptionException      [CONTEXT]      private  void  init()  {  eatTheRest  =  false;  tokens.clear();      [BUGGY]  Option  tokens  =  new  Option[tokens.size()  ];  [BUGGY]      currentOption  =  null;  }  [CLASS]  PosixParser  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  ArrayList  tokens  Options  options  Option  currentOption  boolean  eatTheRest  	projects/Cli2/src/java/org/apache/commons/cli/PosixParser.java	1.0	53	53	1	replace	Option  tokens  =  new  Option[tokens.size()  ];	          tokens.clear();    currentOption    =    null;    ArrayList    <    Option>    tokens    =    new    ArrayList    <    Option>(tokens.size());    	non-compiled	[CE]  cannot  find  symbol	54	None	replace
851	[BUG]  [BUGGY]  [FE]  UnrecognizedOptionException  [FE]    UnrecognizedOptionException    [CONTEXT]      private  void  init()  {  eatTheRest  =  false;  tokens.clear();      [BUGGY]          tokens.clear();    currentOption    =    null;    if(eatTheRest)  {  tokens.clear();  currentOption  =  null;  }  ArrayList  <  Option>  tokens  =  new  ArrayList  <  Option>();  [BUGGY]      currentOption  =  null;  }  [CLASS]  PosixParser  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  ArrayList  tokens  Options  options  Option  currentOption  boolean  eatTheRest  	projects/Cli2/src/java/org/apache/commons/cli/PosixParser.java	1.0	53	53	1	add	                tokens.clear();        currentOption        =        null;        if(eatTheRest)    {    tokens.clear();    currentOption    =    null;    }    ArrayList  <  Option>  tokens  =  new  ArrayList  <  Option>();	  	compilable	  [FE]  UnrecognizedOptionException  	155	1	add
852	[BUG]  [BUGGY]          tokens.clear();    currentOption    =    null;    if(eatTheRest)  {  tokens.clear();  currentOption  =  null;  }  ArrayList  <  Option>  tokens  =  new  ArrayList  <  Option>();  [FE]  UnrecognizedOptionException  [FE]    UnrecognizedOptionException    [CONTEXT]      private  void  init()  {  eatTheRest  =  false;  tokens.clear();      [BUGGY]          tokens.clear();    currentOption    =    null;    if(eatTheRest)  {  tokens.clear();  currentOption  =  null;  }  ArrayList  <  Option>  tokens  =  new  ArrayList  <  Option>();  [BUGGY]      currentOption  =  null;  }  [CLASS]  PosixParser  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  ArrayList  tokens  Options  options  Option  currentOption  boolean  eatTheRest  	projects/Cli2/src/java/org/apache/commons/cli/PosixParser.java	1.0	53	53	1	replace	                tokens.clear();        currentOption        =        null;        if(eatTheRest)    {    tokens.clear();    currentOption    =    null;    }    ArrayList  <  Option>  tokens  =  new  ArrayList  <  Option>();	  	compilable	  [FE]  UnrecognizedOptionException  	155	1	add
853	[BUG]  [BUGGY]          tokens.clear();    currentOption    =    null;    if(eatTheRest)  {  tokens.clear();  currentOption  =  null;  }  ArrayList  <  Option>  tokens  =  options.values();  [CE]  cannot  find  symbol  [FE]      UnrecognizedOptionException    [CONTEXT]      private  void  init()  {  eatTheRest  =  false;  tokens.clear();      [BUGGY]          tokens.clear();    currentOption    =    null;    if(eatTheRest)  {  tokens.clear();  currentOption  =  null;  }  ArrayList  <  Option>  tokens  =  options.values();  [BUGGY]      currentOption  =  null;  }  [CLASS]  PosixParser  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  ArrayList  tokens  Options  options  Option  currentOption  boolean  eatTheRest  	projects/Cli2/src/java/org/apache/commons/cli/PosixParser.java	1.0	53	53	1	replace	                tokens.clear();        currentOption        =        null;        if(eatTheRest)    {    tokens.clear();    currentOption    =    null;    }    ArrayList  <  Option>  tokens  =  options.values();	  	non-compiled	[CE]  cannot  find  symbol	155	None	add
854	[BUG]  [BUGGY]          tokens.clear();    currentOption    =    null;    if(eatTheRest)  {  tokens.clear();  currentOption  =  null;  }  ArrayList  <  Option>  tokens  =  new  ArrayList  <  Option>(tokens.size());  [CE]  variable  tokens  might  not  have  been  initialized  [FE]        UnrecognizedOptionException    [CONTEXT]      private  void  init()  {  eatTheRest  =  false;  tokens.clear();      [BUGGY]          tokens.clear();    currentOption    =    null;    if(eatTheRest)  {  tokens.clear();  currentOption  =  null;  }  ArrayList  <  Option>  tokens  =  new  ArrayList  <  Option>(tokens.size());  [BUGGY]      currentOption  =  null;  }  [CLASS]  PosixParser  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  ArrayList  tokens  Options  options  Option  currentOption  boolean  eatTheRest  	projects/Cli2/src/java/org/apache/commons/cli/PosixParser.java	1.0	53	53	1	replace	                tokens.clear();        currentOption        =        null;        if(eatTheRest)    {    tokens.clear();    currentOption    =    null;    }    ArrayList  <  Option>  tokens  =  new  ArrayList  <  Option>(tokens.size());	  	non-compiled	[CE]  variable  tokens  might  not  have  been  initialized	155	None	add
855	[BUG]  [BUGGY]  ArrayList  tokens  =  new  ArrayList  <  Option>();  Option  options  =  options.getOptions();  [CE]  cannot  find  symbol  [FE]    UnrecognizedOptionException    [CONTEXT]      private  void  init()  {  eatTheRest  =  false;  tokens.clear();      [BUGGY]  ArrayList  tokens  =  new  ArrayList  <  Option>();  Option  options  =  options.getOptions();  [BUGGY]      currentOption  =  null;  }  [CLASS]  PosixParser  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  ArrayList  tokens  Options  options  Option  currentOption  boolean  eatTheRest  	projects/Cli2/src/java/org/apache/commons/cli/PosixParser.java	1.0	53	53	1	replace	ArrayList    tokens    =    new    ArrayList    <    Option>();    Option  options  =  options.getOptions();	  	non-compiled	[CE]  cannot  find  symbol	92	None	add
856	[BUG]  [BUGGY]  ArrayList  tokens  =  new  ArrayList  <  Option>();  Options  options  =  options.getOptions();  [CE]  incompatible  types  [FE]      UnrecognizedOptionException    [CONTEXT]      private  void  init()  {  eatTheRest  =  false;  tokens.clear();      [BUGGY]  ArrayList  tokens  =  new  ArrayList  <  Option>();  Options  options  =  options.getOptions();  [BUGGY]      currentOption  =  null;  }  [CLASS]  PosixParser  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  ArrayList  tokens  Options  options  Option  currentOption  boolean  eatTheRest  	projects/Cli2/src/java/org/apache/commons/cli/PosixParser.java	1.0	53	53	1	replace	ArrayList    tokens    =    new    ArrayList    <    Option>();    Options  options  =  options.getOptions();	  	non-compiled	[CE]  incompatible  types	92	None	add
857	[BUG]  [BUGGY]  [FE]  UnrecognizedOptionException  [FE]    UnrecognizedOptionException    [CONTEXT]      private  void  init()  {  eatTheRest  =  false;  tokens.clear();      [BUGGY]  currentOption  =  Option.OK_STANDARD  +  1;  if(currentOption!=  null)  {  tokens.clear();  currentOption  =  Option.OK_STANDARD  +  1;  }  [BUGGY]      }  [CLASS]  PosixParser  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  ArrayList  tokens  Options  options  Option  currentOption  boolean  eatTheRest  	projects/Cli2/src/java/org/apache/commons/cli/PosixParser.java	1.0	53	53	1	add	currentOption    =    Option.OK_STANDARD    +    1;    if(currentOption!=  null)  {  tokens.clear();  currentOption  =  Option.OK_STANDARD  +  1;  }	  	compilable	  [FE]  UnrecognizedOptionException  	16	1	add
858	[BUG]  [BUGGY]  currentOption  =  Option.OK_STANDARD  +  1;  if(currentOption!=  null)  {  tokens.clear();  currentOption  =  Option.OK_STANDARD  +  1;  }  [FE]  UnrecognizedOptionException  [FE]    UnrecognizedOptionException    [CONTEXT]      private  void  init()  {  eatTheRest  =  false;  tokens.clear();      [BUGGY]  currentOption  =  Option.OK_STANDARD  +  1;  if(currentOption!=  null)  {  tokens.clear();  currentOption  =  Option.OK_STANDARD  +  1;  }  [BUGGY]      }  [CLASS]  PosixParser  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  ArrayList  tokens  Options  options  Option  currentOption  boolean  eatTheRest  	projects/Cli2/src/java/org/apache/commons/cli/PosixParser.java	1.0	53	53	1	replace	currentOption    =    Option.OK_STANDARD    +    1;    if(currentOption!=  null)  {  tokens.clear();  currentOption  =  Option.OK_STANDARD  +  1;  }	  	compilable	  [FE]  UnrecognizedOptionException  	16	1	add
859	[BUG]  [BUGGY]  [FE]  UnrecognizedOptionException  [FE]      UnrecognizedOptionException    [CONTEXT]      private  void  init()  {  eatTheRest  =  false;  tokens.clear();      [BUGGY]  currentOption  =  Option.OK_STANDARD  +  1;  ArrayList  <  Option>  tokens  =  new  ArrayList  <  Option>();  [BUGGY]      }  [CLASS]  PosixParser  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  ArrayList  tokens  Options  options  Option  currentOption  boolean  eatTheRest  	projects/Cli2/src/java/org/apache/commons/cli/PosixParser.java	1.0	53	53	1	add	currentOption    =    Option.OK_STANDARD    +    1;    ArrayList  <  Option>  tokens  =  new  ArrayList  <  Option>();	  	compilable	  [FE]  UnrecognizedOptionException  	16	1	add
860	[BUG]  [BUGGY]  currentOption  =  Option.OK_STANDARD  +  1;  ArrayList  <  Option>  tokens  =  new  ArrayList  <  Option>();  [FE]  UnrecognizedOptionException  [FE]      UnrecognizedOptionException    [CONTEXT]      private  void  init()  {  eatTheRest  =  false;  tokens.clear();      [BUGGY]  currentOption  =  Option.OK_STANDARD  +  1;  ArrayList  <  Option>  tokens  =  new  ArrayList  <  Option>();  [BUGGY]      }  [CLASS]  PosixParser  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  ArrayList  tokens  Options  options  Option  currentOption  boolean  eatTheRest  	projects/Cli2/src/java/org/apache/commons/cli/PosixParser.java	1.0	53	53	1	replace	currentOption    =    Option.OK_STANDARD    +    1;    ArrayList  <  Option>  tokens  =  new  ArrayList  <  Option>();	  	compilable	  [FE]  UnrecognizedOptionException  	16	1	add
861	[BUG]  [BUGGY]  [FE]  UnrecognizedOptionException  [FE]    UnrecognizedOptionException    [CONTEXT]      private  void  init()  {  eatTheRest  =  false;  tokens.clear();      [BUGGY]  if(tokens!=  null)  {  eatTheRest  =  false;  tokens.clear();  eatTheRest  =  false;  tokens.clear();  currentOption  =  null;  }  [BUGGY]      currentOption  =  null;  }  [CLASS]  PosixParser  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  ArrayList  tokens  Options  options  Option  currentOption  boolean  eatTheRest  	projects/Cli2/src/java/org/apache/commons/cli/PosixParser.java	1.0	53	53	1	add	if(tokens!=  null)  {  eatTheRest  =  false;  tokens.clear();  eatTheRest  =  false;  tokens.clear();  currentOption  =  null;  }	          eatTheRest    =    false;    tokens.clear();    eatTheRest    =    false;    tokens.clear();    currentOption    =    null;    	compilable	  [FE]  UnrecognizedOptionException  	4	1	replace
862	[BUG]  [BUGGY]  if(tokens!=  null)  {  eatTheRest  =  false;  tokens.clear();  eatTheRest  =  false;  tokens.clear();  currentOption  =  null;  }  [FE]  UnrecognizedOptionException  [FE]    UnrecognizedOptionException    [CONTEXT]      private  void  init()  {  eatTheRest  =  false;  tokens.clear();      [BUGGY]  if(tokens!=  null)  {  eatTheRest  =  false;  tokens.clear();  eatTheRest  =  false;  tokens.clear();  currentOption  =  null;  }  [BUGGY]      currentOption  =  null;  }  [CLASS]  PosixParser  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  ArrayList  tokens  Options  options  Option  currentOption  boolean  eatTheRest  	projects/Cli2/src/java/org/apache/commons/cli/PosixParser.java	1.0	53	53	1	replace	if(tokens!=  null)  {  eatTheRest  =  false;  tokens.clear();  eatTheRest  =  false;  tokens.clear();  currentOption  =  null;  }	          eatTheRest    =    false;    tokens.clear();    eatTheRest    =    false;    tokens.clear();    currentOption    =    null;    	compilable	  [FE]  UnrecognizedOptionException  	4	1	replace
863	[BUG]  [BUGGY]  [FE]  UnrecognizedOptionException  [FE]      UnrecognizedOptionException    [CONTEXT]      private  void  init()  {  eatTheRest  =  false;  tokens.clear();      [BUGGY]  if(this.options!=  null)  {  eatTheRest  =  false;  tokens.clear();  eatTheRest  =  false;  tokens.clear();  currentOption  =  null;  }  [BUGGY]      currentOption  =  null;  }  [CLASS]  PosixParser  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  ArrayList  tokens  Options  options  Option  currentOption  boolean  eatTheRest  	projects/Cli2/src/java/org/apache/commons/cli/PosixParser.java	1.0	53	53	1	add	if(this.options!=  null)  {  eatTheRest  =  false;  tokens.clear();  eatTheRest  =  false;  tokens.clear();  currentOption  =  null;  }	          eatTheRest    =    false;    tokens.clear();    eatTheRest    =    false;    tokens.clear();    currentOption    =    null;    	compilable	  [FE]  UnrecognizedOptionException  	4	1	replace
864	[BUG]  [BUGGY]  if(this.options!=  null)  {  eatTheRest  =  false;  tokens.clear();  eatTheRest  =  false;  tokens.clear();  currentOption  =  null;  }  [FE]  UnrecognizedOptionException  [FE]      UnrecognizedOptionException    [CONTEXT]      private  void  init()  {  eatTheRest  =  false;  tokens.clear();      [BUGGY]  if(this.options!=  null)  {  eatTheRest  =  false;  tokens.clear();  eatTheRest  =  false;  tokens.clear();  currentOption  =  null;  }  [BUGGY]      currentOption  =  null;  }  [CLASS]  PosixParser  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  ArrayList  tokens  Options  options  Option  currentOption  boolean  eatTheRest  	projects/Cli2/src/java/org/apache/commons/cli/PosixParser.java	1.0	53	53	1	replace	if(this.options!=  null)  {  eatTheRest  =  false;  tokens.clear();  eatTheRest  =  false;  tokens.clear();  currentOption  =  null;  }	          eatTheRest    =    false;    tokens.clear();    eatTheRest    =    false;    tokens.clear();    currentOption    =    null;    	compilable	  [FE]  UnrecognizedOptionException  	4	1	replace
865	[BUG]  [BUGGY]  if(!eatTheRest)  {  tokens.clear();  currentOption  =  null;  if(eatTheRest)  {  tokens.clear();  currentOption  =  null;  }  [CE]  illegal  start  of  expression  [FE]    UnrecognizedOptionException    [CONTEXT]      private  void  init()  {  eatTheRest  =  false;  tokens.clear();      [BUGGY]  if(!eatTheRest)  {  tokens.clear();  currentOption  =  null;  if(eatTheRest)  {  tokens.clear();  currentOption  =  null;  }  [BUGGY]      currentOption  =  null;  }  [CLASS]  PosixParser  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  ArrayList  tokens  Options  options  Option  currentOption  boolean  eatTheRest  	projects/Cli2/src/java/org/apache/commons/cli/PosixParser.java	1.0	53	53	1	replace	if(!eatTheRest)  {  tokens.clear();  currentOption  =  null;  if(eatTheRest)  {  tokens.clear();  currentOption  =  null;  }	          tokens.clear();    currentOption    =    null;    if(eatTheRest)    {    tokens.clear();    currentOption    =    null;    }    	non-compiled	[CE]  illegal  start  of  expression	156	None	replace
866	[BUG]  [BUGGY]  if(!eatTheRest)  {  tokens.clear();  currentOption  =  null;  if(eatTheRest)  {  tokens.clear();  }  [CE]  illegal  start  of  expression  [FE]      UnrecognizedOptionException    [CONTEXT]      private  void  init()  {  eatTheRest  =  false;  tokens.clear();      [BUGGY]  if(!eatTheRest)  {  tokens.clear();  currentOption  =  null;  if(eatTheRest)  {  tokens.clear();  }  [BUGGY]      currentOption  =  null;  }  [CLASS]  PosixParser  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  ArrayList  tokens  Options  options  Option  currentOption  boolean  eatTheRest  	projects/Cli2/src/java/org/apache/commons/cli/PosixParser.java	1.0	53	53	1	replace	if(!eatTheRest)  {  tokens.clear();  currentOption  =  null;  if(eatTheRest)  {  tokens.clear();  }	          tokens.clear();    currentOption    =    null;    if(eatTheRest)    {    tokens.clear();    currentOption    =    null;    }    	non-compiled	[CE]  illegal  start  of  expression	156	None	replace
867	[BUG]  [BUGGY]  [FE]  UnrecognizedOptionException  [FE]    UnrecognizedOptionException    [CONTEXT]      private  void  init()  {  eatTheRest  =  false;  tokens.clear();      [BUGGY]  if(eatTheRest)  {  tokens.clear();  currentOption  =  null;  ArrayList  <  Option>  tokens  =  new  ArrayList  <  Option>();  currentOption  =  null;  }  [BUGGY]      currentOption  =  null;  }  [CLASS]  PosixParser  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  ArrayList  tokens  Options  options  Option  currentOption  boolean  eatTheRest  	projects/Cli2/src/java/org/apache/commons/cli/PosixParser.java	1.0	53	53	1	add	if(eatTheRest)  {  tokens.clear();  currentOption  =  null;  ArrayList  <  Option>  tokens  =  new  ArrayList  <  Option>();  currentOption  =  null;  }	          tokens.clear();    currentOption    =    null;    ArrayList    <    Option>    tokens    =    new    ArrayList    <    Option>();    currentOption    =    null;    	compilable	  [FE]  UnrecognizedOptionException  	58	1	replace
868	[BUG]  [BUGGY]  if(eatTheRest)  {  tokens.clear();  currentOption  =  null;  ArrayList  <  Option>  tokens  =  new  ArrayList  <  Option>();  currentOption  =  null;  }  [FE]  UnrecognizedOptionException  [FE]    UnrecognizedOptionException    [CONTEXT]      private  void  init()  {  eatTheRest  =  false;  tokens.clear();      [BUGGY]  if(eatTheRest)  {  tokens.clear();  currentOption  =  null;  ArrayList  <  Option>  tokens  =  new  ArrayList  <  Option>();  currentOption  =  null;  }  [BUGGY]      currentOption  =  null;  }  [CLASS]  PosixParser  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  ArrayList  tokens  Options  options  Option  currentOption  boolean  eatTheRest  	projects/Cli2/src/java/org/apache/commons/cli/PosixParser.java	1.0	53	53	1	replace	if(eatTheRest)  {  tokens.clear();  currentOption  =  null;  ArrayList  <  Option>  tokens  =  new  ArrayList  <  Option>();  currentOption  =  null;  }	          tokens.clear();    currentOption    =    null;    ArrayList    <    Option>    tokens    =    new    ArrayList    <    Option>();    currentOption    =    null;    	compilable	  [FE]  UnrecognizedOptionException  	58	1	replace
869	[BUG]  [BUGGY]          tokens.clear();    currentOption    =    null;    tokens.clear();  currentOption  =  null;  ArrayList  <  Option>  tokens  =  new  ArrayList  <  Option>(tokens);  [CE]  variable  tokens  might  not  have  been  initialized  [FE]    UnrecognizedOptionException    [CONTEXT]      private  void  init()  {  eatTheRest  =  false;  tokens.clear();      [BUGGY]          tokens.clear();    currentOption    =    null;    tokens.clear();  currentOption  =  null;  ArrayList  <  Option>  tokens  =  new  ArrayList  <  Option>(tokens);  [BUGGY]      currentOption  =  null;  }  [CLASS]  PosixParser  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  ArrayList  tokens  Options  options  Option  currentOption  boolean  eatTheRest  	projects/Cli2/src/java/org/apache/commons/cli/PosixParser.java	1.0	53	53	1	replace	                tokens.clear();        currentOption        =        null;        tokens.clear();    currentOption    =    null;    ArrayList  <  Option>  tokens  =  new  ArrayList  <  Option>(tokens);	  	non-compiled	[CE]  variable  tokens  might  not  have  been  initialized	52	None	add
870	[BUG]  [BUGGY]  [FE]  UnrecognizedOptionException  [FE]    UnrecognizedOptionException    [CONTEXT]      private  void  init()  {  eatTheRest  =  false;  tokens.clear();      [BUGGY]  currentOption  =  Option.OK_STANDARD  &&  tokens.size()  >  1;  ArrayList  <  Option>  tokens  =  options.keySet();  currentOption  =  Option.OK_STANDARD  &&  tokens.size()  >  1;  [BUGGY]      }  [CLASS]  PosixParser  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  ArrayList  tokens  Options  options  Option  currentOption  boolean  eatTheRest  	projects/Cli2/src/java/org/apache/commons/cli/PosixParser.java	1.0	53	53	1	add	currentOption    =    Option.OK_STANDARD    &&    tokens.size()    >    1;    ArrayList  <  Option>  tokens  =  options.keySet();  currentOption  =  Option.OK_STANDARD  &&  tokens.size()  >  1;	  	compilable	  [FE]  UnrecognizedOptionException  	20	1	add
871	[BUG]  [BUGGY]  currentOption  =  Option.OK_STANDARD  &&  tokens.size()  >  1;  ArrayList  <  Option>  tokens  =  options.keySet();  currentOption  =  Option.OK_STANDARD  &&  tokens.size()  >  1;  [FE]  UnrecognizedOptionException  [FE]    UnrecognizedOptionException    [CONTEXT]      private  void  init()  {  eatTheRest  =  false;  tokens.clear();      [BUGGY]  currentOption  =  Option.OK_STANDARD  &&  tokens.size()  >  1;  ArrayList  <  Option>  tokens  =  options.keySet();  currentOption  =  Option.OK_STANDARD  &&  tokens.size()  >  1;  [BUGGY]      }  [CLASS]  PosixParser  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  ArrayList  tokens  Options  options  Option  currentOption  boolean  eatTheRest  	projects/Cli2/src/java/org/apache/commons/cli/PosixParser.java	1.0	53	53	1	replace	currentOption    =    Option.OK_STANDARD    &&    tokens.size()    >    1;    ArrayList  <  Option>  tokens  =  options.keySet();  currentOption  =  Option.OK_STANDARD  &&  tokens.size()  >  1;	  	compilable	  [FE]  UnrecognizedOptionException  	20	1	add
872	[BUG]  [BUGGY]  [FE]  UnrecognizedOptionException  [FE]      UnrecognizedOptionException    [CONTEXT]      private  void  init()  {  eatTheRest  =  false;  tokens.clear();      [BUGGY]  currentOption  =  Option.OK_STANDARD  &&  tokens.size()  >  1;  ArrayList  <  Option>  tokens  =  options.values();  currentOption  =  Option.OK_STANDARD  &&  tokens.size()  >  1;  [BUGGY]      }  [CLASS]  PosixParser  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  ArrayList  tokens  Options  options  Option  currentOption  boolean  eatTheRest  	projects/Cli2/src/java/org/apache/commons/cli/PosixParser.java	1.0	53	53	1	add	currentOption    =    Option.OK_STANDARD    &&    tokens.size()    >    1;    ArrayList  <  Option>  tokens  =  options.values();  currentOption  =  Option.OK_STANDARD  &&  tokens.size()  >  1;	  	compilable	  [FE]  UnrecognizedOptionException  	20	1	add
873	[BUG]  [BUGGY]  currentOption  =  Option.OK_STANDARD  &&  tokens.size()  >  1;  ArrayList  <  Option>  tokens  =  options.values();  currentOption  =  Option.OK_STANDARD  &&  tokens.size()  >  1;  [FE]  UnrecognizedOptionException  [FE]      UnrecognizedOptionException    [CONTEXT]      private  void  init()  {  eatTheRest  =  false;  tokens.clear();      [BUGGY]  currentOption  =  Option.OK_STANDARD  &&  tokens.size()  >  1;  ArrayList  <  Option>  tokens  =  options.values();  currentOption  =  Option.OK_STANDARD  &&  tokens.size()  >  1;  [BUGGY]      }  [CLASS]  PosixParser  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  ArrayList  tokens  Options  options  Option  currentOption  boolean  eatTheRest  	projects/Cli2/src/java/org/apache/commons/cli/PosixParser.java	1.0	53	53	1	replace	currentOption    =    Option.OK_STANDARD    &&    tokens.size()    >    1;    ArrayList  <  Option>  tokens  =  options.values();  currentOption  =  Option.OK_STANDARD  &&  tokens.size()  >  1;	  	compilable	  [FE]  UnrecognizedOptionException  	20	1	add
874	[BUG]  [BUGGY]  tokens.add(new  Option( "));  [CE]  unclosed  string  literal  [FE]        UnrecognizedOptionException      [CONTEXT]      private  void  init()  {  eatTheRest  =  false;  tokens.clear();      [BUGGY]  tokens.add(new  Option( "));  [BUGGY]      currentOption  =  null;  }  [CLASS]  PosixParser  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  ArrayList  tokens  Options  options  Option  currentOption  boolean  eatTheRest  	projects/Cli2/src/java/org/apache/commons/cli/PosixParser.java	1.0	53	53	1	replace	tokens.add(new  Option( "));	  tokens.add(new    Option(   "   "));    	non-compiled	[CE]  unclosed  string  literal	127	None	replace
875	[BUG]  [BUGGY]  tokens.add(new  Option( "option "));  [CE]  no  suitable  constructor  found  for  Option(String)  [FE]          UnrecognizedOptionException      [CONTEXT]      private  void  init()  {  eatTheRest  =  false;  tokens.clear();      [BUGGY]  tokens.add(new  Option( "option "));  [BUGGY]      currentOption  =  null;  }  [CLASS]  PosixParser  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  ArrayList  tokens  Options  options  Option  currentOption  boolean  eatTheRest  	projects/Cli2/src/java/org/apache/commons/cli/PosixParser.java	1.0	53	53	1	replace	tokens.add(new  Option( "option "));	  tokens.add(new    Option(   "   "));    	non-compiled	[CE]  no  suitable  constructor  found  for  Option(String)	127	None	replace
876	[BUG]  [BUGGY]  [FE]  UnrecognizedOptionException  [FE]    UnrecognizedOptionException    [CONTEXT]      private  void  init()  {  eatTheRest  =  false;  tokens.clear();      [BUGGY]          tokens.add(     "--     ");    tokens.add(   "--     ");  currentOption  =  null;  tokens.add( "--   ");  tokens.add( "--   ");  [BUGGY]      currentOption  =  null;  }  [CLASS]  PosixParser  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  ArrayList  tokens  Options  options  Option  currentOption  boolean  eatTheRest  	projects/Cli2/src/java/org/apache/commons/cli/PosixParser.java	1.0	53	53	1	add	                tokens.add(       "--       ");        tokens.add(   "--       ");    currentOption    =    null;    tokens.add( "--   ");  tokens.add( "--   ");	  	compilable	  [FE]  UnrecognizedOptionException  	24	1	add
877	[BUG]  [BUGGY]          tokens.add(     "--     ");    tokens.add(   "--     ");  currentOption  =  null;  tokens.add( "--   ");  tokens.add( "--   ");  [FE]  UnrecognizedOptionException  [FE]    UnrecognizedOptionException    [CONTEXT]      private  void  init()  {  eatTheRest  =  false;  tokens.clear();      [BUGGY]          tokens.add(     "--     ");    tokens.add(   "--     ");  currentOption  =  null;  tokens.add( "--   ");  tokens.add( "--   ");  [BUGGY]      currentOption  =  null;  }  [CLASS]  PosixParser  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  ArrayList  tokens  Options  options  Option  currentOption  boolean  eatTheRest  	projects/Cli2/src/java/org/apache/commons/cli/PosixParser.java	1.0	53	53	1	replace	                tokens.add(       "--       ");        tokens.add(   "--       ");    currentOption    =    null;    tokens.add( "--   ");  tokens.add( "--   ");	  	compilable	  [FE]  UnrecognizedOptionException  	24	1	add
878	[BUG]  [BUGGY]  [FE]  UnrecognizedOptionException  [FE]    UnrecognizedOptionException    [CONTEXT]      private  void  init()  {  eatTheRest  =  false;  tokens.clear();      [BUGGY]          tokens.clear();    ArrayList  tokens  =  new  ArrayList  <  Option>();  tokens.clear();  [BUGGY]      currentOption  =  null;  }  [CLASS]  PosixParser  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  ArrayList  tokens  Options  options  Option  currentOption  boolean  eatTheRest  	projects/Cli2/src/java/org/apache/commons/cli/PosixParser.java	1.0	53	53	1	add	                tokens.clear();        ArrayList    tokens    =    new    ArrayList    <    Option>();    tokens.clear();	  	compilable	  [FE]  UnrecognizedOptionException  	105	1	add
879	[BUG]  [BUGGY]          tokens.clear();    ArrayList  tokens  =  new  ArrayList  <  Option>();  tokens.clear();  [FE]  UnrecognizedOptionException  [FE]    UnrecognizedOptionException    [CONTEXT]      private  void  init()  {  eatTheRest  =  false;  tokens.clear();      [BUGGY]          tokens.clear();    ArrayList  tokens  =  new  ArrayList  <  Option>();  tokens.clear();  [BUGGY]      currentOption  =  null;  }  [CLASS]  PosixParser  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  ArrayList  tokens  Options  options  Option  currentOption  boolean  eatTheRest  	projects/Cli2/src/java/org/apache/commons/cli/PosixParser.java	1.0	53	53	1	replace	                tokens.clear();        ArrayList    tokens    =    new    ArrayList    <    Option>();    tokens.clear();	  	compilable	  [FE]  UnrecognizedOptionException  	105	1	add
880	[BUG]  [BUGGY]  [FE]  UnrecognizedOptionException  [FE]      UnrecognizedOptionException    [CONTEXT]      private  void  init()  {  eatTheRest  =  false;  tokens.clear();      [BUGGY]          tokens.clear();    ArrayList  tokens  =  new  ArrayList  <  Option>();  tokens.clear();  ArrayList  <  Option>  tos  =  new  ArrayList  <  Option>();  [BUGGY]      currentOption  =  null;  }  [CLASS]  PosixParser  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  ArrayList  tokens  Options  options  Option  currentOption  boolean  eatTheRest  	projects/Cli2/src/java/org/apache/commons/cli/PosixParser.java	1.0	53	53	1	add	                tokens.clear();        ArrayList    tokens    =    new    ArrayList    <    Option>();    tokens.clear();  ArrayList  <  Option>  tos  =  new  ArrayList  <  Option>();	  	compilable	  [FE]  UnrecognizedOptionException  	105	1	add
881	[BUG]  [BUGGY]          tokens.clear();    ArrayList  tokens  =  new  ArrayList  <  Option>();  tokens.clear();  ArrayList  <  Option>  tos  =  new  ArrayList  <  Option>();  [FE]  UnrecognizedOptionException  [FE]      UnrecognizedOptionException    [CONTEXT]      private  void  init()  {  eatTheRest  =  false;  tokens.clear();      [BUGGY]          tokens.clear();    ArrayList  tokens  =  new  ArrayList  <  Option>();  tokens.clear();  ArrayList  <  Option>  tos  =  new  ArrayList  <  Option>();  [BUGGY]      currentOption  =  null;  }  [CLASS]  PosixParser  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  ArrayList  tokens  Options  options  Option  currentOption  boolean  eatTheRest  	projects/Cli2/src/java/org/apache/commons/cli/PosixParser.java	1.0	53	53	1	replace	                tokens.clear();        ArrayList    tokens    =    new    ArrayList    <    Option>();    tokens.clear();  ArrayList  <  Option>  tos  =  new  ArrayList  <  Option>();	  	compilable	  [FE]  UnrecognizedOptionException  	105	1	add
882	[BUG]  [BUGGY]          ArrayList    <    Option>    tokens    =    new    ArrayList    <    Option>();    Option  option  =  options.getOption(null);  Option  option  =  options.getOption(null);  [CE]  variable  option  is  already  defined  in  method  init()  [FE]    NullPointerException    [CONTEXT]      private  void  init()  {  eatTheRest  =  false;  tokens.clear();      [BUGGY]          ArrayList    <    Option>    tokens    =    new    ArrayList    <    Option>();    Option  option  =  options.getOption(null);  Option  option  =  options.getOption(null);  [BUGGY]      currentOption  =  null;  }  [CLASS]  PosixParser  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  ArrayList  tokens  Options  options  Option  currentOption  boolean  eatTheRest  	projects/Cli2/src/java/org/apache/commons/cli/PosixParser.java	1.0	53	53	1	replace	                ArrayList        <        Option>        tokens        =        new        ArrayList        <        Option>();        Option    option    =    options.getOption(null);    Option  option  =  options.getOption(null);	  	non-compiled	[CE]  variable  option  is  already  defined  in  method  init()	110	None	add
883	[BUG]  [BUGGY]          ArrayList    <    Option>    tokens    =    new    ArrayList    <    Option>();    Option  option  =  options.getOption(null);  Option  options  =  options.getOption(null);  [CE]  cannot  find  symbol  [FE]      NullPointerException    [CONTEXT]      private  void  init()  {  eatTheRest  =  false;  tokens.clear();      [BUGGY]          ArrayList    <    Option>    tokens    =    new    ArrayList    <    Option>();    Option  option  =  options.getOption(null);  Option  options  =  options.getOption(null);  [BUGGY]      currentOption  =  null;  }  [CLASS]  PosixParser  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  ArrayList  tokens  Options  options  Option  currentOption  boolean  eatTheRest  	projects/Cli2/src/java/org/apache/commons/cli/PosixParser.java	1.0	53	53	1	replace	                ArrayList        <        Option>        tokens        =        new        ArrayList        <        Option>();        Option    option    =    options.getOption(null);    Option  options  =  options.getOption(null);	  	non-compiled	[CE]  cannot  find  symbol	110	None	add
884	[BUG]  [BUGGY]          ArrayList    <    Option>    tokens    =    new    ArrayList    <    Option>();    Option  option  =  options.getOption(null);  ArrayList  <  Option>  tokens  =  options.getOption(null);  [CE]  variable  tokens  is  already  defined  in  method  init()  [FE]        NullPointerException    [CONTEXT]      private  void  init()  {  eatTheRest  =  false;  tokens.clear();      [BUGGY]          ArrayList    <    Option>    tokens    =    new    ArrayList    <    Option>();    Option  option  =  options.getOption(null);  ArrayList  <  Option>  tokens  =  options.getOption(null);  [BUGGY]      currentOption  =  null;  }  [CLASS]  PosixParser  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  ArrayList  tokens  Options  options  Option  currentOption  boolean  eatTheRest  	projects/Cli2/src/java/org/apache/commons/cli/PosixParser.java	1.0	53	53	1	replace	                ArrayList        <        Option>        tokens        =        new        ArrayList        <        Option>();        Option    option    =    options.getOption(null);    ArrayList  <  Option>  tokens  =  options.getOption(null);	  	non-compiled	[CE]  variable  tokens  is  already  defined  in  method  init()	110	None	add
885	[BUG]  [BUGGY]          ArrayList    <    Option>    tokens    =    new    ArrayList    <    Option>();    Option  option  =  options.getOption(null);  Options  options  =  options.getOption(null);  [CE]  incompatible  types  [FE]          NullPointerException    [CONTEXT]      private  void  init()  {  eatTheRest  =  false;  tokens.clear();      [BUGGY]          ArrayList    <    Option>    tokens    =    new    ArrayList    <    Option>();    Option  option  =  options.getOption(null);  Options  options  =  options.getOption(null);  [BUGGY]      currentOption  =  null;  }  [CLASS]  PosixParser  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  ArrayList  tokens  Options  options  Option  currentOption  boolean  eatTheRest  	projects/Cli2/src/java/org/apache/commons/cli/PosixParser.java	1.0	53	53	1	replace	                ArrayList        <        Option>        tokens        =        new        ArrayList        <        Option>();        Option    option    =    options.getOption(null);    Options  options  =  options.getOption(null);	  	non-compiled	[CE]  incompatible  types	110	None	add
886	[BUG]  [BUGGY]  tokens.remove(   "--   ");  tokens.remove( "-- ".);  [CE]  <identifier>  expected  [FE]    UnrecognizedOptionException    [CONTEXT]      private  void  init()  {  eatTheRest  =  false;  tokens.clear();      [BUGGY]  tokens.remove(   "--   ");  tokens.remove( "-- ".);  [BUGGY]      currentOption  =  null;  }  [CLASS]  PosixParser  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  ArrayList  tokens  Options  options  Option  currentOption  boolean  eatTheRest  	projects/Cli2/src/java/org/apache/commons/cli/PosixParser.java	1.0	53	53	1	replace	tokens.remove(   "--   ");    tokens.remove( "-- ".);	  	non-compiled	[CE]  <identifier>  expected	71	None	add
887	[BUG]  [BUGGY]  [FE]  UnrecognizedOptionException  [FE]    UnrecognizedOptionException    [CONTEXT]      private  void  init()  {  eatTheRest  =  false;  tokens.clear();      [BUGGY]  currentOption  =  Option.OK_OPTIONAL;  ArrayList  <  Option>  tokens  =  new  ArrayList  <  Option>(tokens);  [BUGGY]      }  [CLASS]  PosixParser  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  ArrayList  tokens  Options  options  Option  currentOption  boolean  eatTheRest  	projects/Cli2/src/java/org/apache/commons/cli/PosixParser.java	1.0	53	53	1	add	currentOption    =    Option.OK_OPTIONAL;    ArrayList  <  Option>  tokens  =  new  ArrayList  <  Option>(tokens);	  	compilable	  [FE]  UnrecognizedOptionException  	118	1	add
888	[BUG]  [BUGGY]  currentOption  =  Option.OK_OPTIONAL;  ArrayList  <  Option>  tokens  =  new  ArrayList  <  Option>(tokens);  [FE]  UnrecognizedOptionException  [FE]    UnrecognizedOptionException    [CONTEXT]      private  void  init()  {  eatTheRest  =  false;  tokens.clear();      [BUGGY]  currentOption  =  Option.OK_OPTIONAL;  ArrayList  <  Option>  tokens  =  new  ArrayList  <  Option>(tokens);  [BUGGY]      }  [CLASS]  PosixParser  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  ArrayList  tokens  Options  options  Option  currentOption  boolean  eatTheRest  	projects/Cli2/src/java/org/apache/commons/cli/PosixParser.java	1.0	53	53	1	replace	currentOption    =    Option.OK_OPTIONAL;    ArrayList  <  Option>  tokens  =  new  ArrayList  <  Option>(tokens);	  	compilable	  [FE]  UnrecognizedOptionException  	118	1	add
889	[BUG]  [BUGGY]  [FE]  UnrecognizedOptionException  [FE]    UnrecognizedOptionException    [CONTEXT]      private  void  init()  {  eatTheRest  =  false;  tokens.clear();      [BUGGY]  tokens.add( ",-- ");  [BUGGY]      currentOption  =  null;  }  [CLASS]  PosixParser  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  ArrayList  tokens  Options  options  Option  currentOption  boolean  eatTheRest  	projects/Cli2/src/java/org/apache/commons/cli/PosixParser.java	1.0	53	53	1	add	tokens.add( ",-- ");	          tokens.add(       "--       ");    tokens.add(   ",--       ");    	compilable	  [FE]  UnrecognizedOptionException  	144	1	replace
890	[BUG]  [BUGGY]  tokens.add( ",-- ");  [FE]  UnrecognizedOptionException  [FE]    UnrecognizedOptionException    [CONTEXT]      private  void  init()  {  eatTheRest  =  false;  tokens.clear();      [BUGGY]  tokens.add( ",-- ");  [BUGGY]      currentOption  =  null;  }  [CLASS]  PosixParser  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  ArrayList  tokens  Options  options  Option  currentOption  boolean  eatTheRest  	projects/Cli2/src/java/org/apache/commons/cli/PosixParser.java	1.0	53	53	1	replace	tokens.add( ",-- ");	          tokens.add(       "--       ");    tokens.add(   ",--       ");    	compilable	  [FE]  UnrecognizedOptionException  	144	1	replace
891	[BUG]  [BUGGY]  [FE]  UnrecognizedOptionException  [FE]    UnrecognizedOptionException    [CONTEXT]      private  void  init()  {  eatTheRest  =  false;  tokens.clear();      [BUGGY]  currentOption    =    Option.OK_STANDARD;    ArrayList  <  Option>  tokens  =  new  ArrayList  <  Option>(tokens);  ArrayList  <  Option>  tokens  =  new  ArrayList  <  Option>(tokens.size());  [BUGGY]      }  [CLASS]  PosixParser  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  ArrayList  tokens  Options  options  Option  currentOption  boolean  eatTheRest  	projects/Cli2/src/java/org/apache/commons/cli/PosixParser.java	1.0	53	53	1	add	currentOption        =        Option.OK_STANDARD;        ArrayList    <    Option>    tokens    =    new    ArrayList    <    Option>(tokens);    ArrayList  <  Option>  tokens  =  new  ArrayList  <  Option>(tokens.size());	  	compilable	  [FE]  UnrecognizedOptionException  	101	1	add
892	[BUG]  [BUGGY]  currentOption    =    Option.OK_STANDARD;    ArrayList  <  Option>  tokens  =  new  ArrayList  <  Option>(tokens);  ArrayList  <  Option>  tokens  =  new  ArrayList  <  Option>(tokens.size());  [FE]  UnrecognizedOptionException  [FE]    UnrecognizedOptionException    [CONTEXT]      private  void  init()  {  eatTheRest  =  false;  tokens.clear();      [BUGGY]  currentOption    =    Option.OK_STANDARD;    ArrayList  <  Option>  tokens  =  new  ArrayList  <  Option>(tokens);  ArrayList  <  Option>  tokens  =  new  ArrayList  <  Option>(tokens.size());  [BUGGY]      }  [CLASS]  PosixParser  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  ArrayList  tokens  Options  options  Option  currentOption  boolean  eatTheRest  	projects/Cli2/src/java/org/apache/commons/cli/PosixParser.java	1.0	53	53	1	replace	currentOption        =        Option.OK_STANDARD;        ArrayList    <    Option>    tokens    =    new    ArrayList    <    Option>(tokens);    ArrayList  <  Option>  tokens  =  new  ArrayList  <  Option>(tokens.size());	  	compilable	  [FE]  UnrecognizedOptionException  	101	1	add
893	[BUG]  [BUGGY]  [FE]  UnrecognizedOptionException  [FE]      UnrecognizedOptionException    [CONTEXT]      private  void  init()  {  eatTheRest  =  false;  tokens.clear();      [BUGGY]  currentOption    =    Option.OK_STANDARD;    ArrayList  <  Option>  tokens  =  new  ArrayList  <  Option>(tokens);  currentOption  =  Option.OK_STANDARD;  tokens.clear();  [BUGGY]      }  [CLASS]  PosixParser  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  ArrayList  tokens  Options  options  Option  currentOption  boolean  eatTheRest  	projects/Cli2/src/java/org/apache/commons/cli/PosixParser.java	1.0	53	53	1	add	currentOption        =        Option.OK_STANDARD;        ArrayList    <    Option>    tokens    =    new    ArrayList    <    Option>(tokens);    currentOption  =  Option.OK_STANDARD;  tokens.clear();	  	compilable	  [FE]  UnrecognizedOptionException  	101	1	add
894	[BUG]  [BUGGY]  currentOption    =    Option.OK_STANDARD;    ArrayList  <  Option>  tokens  =  new  ArrayList  <  Option>(tokens);  currentOption  =  Option.OK_STANDARD;  tokens.clear();  [FE]  UnrecognizedOptionException  [FE]      UnrecognizedOptionException    [CONTEXT]      private  void  init()  {  eatTheRest  =  false;  tokens.clear();      [BUGGY]  currentOption    =    Option.OK_STANDARD;    ArrayList  <  Option>  tokens  =  new  ArrayList  <  Option>(tokens);  currentOption  =  Option.OK_STANDARD;  tokens.clear();  [BUGGY]      }  [CLASS]  PosixParser  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  ArrayList  tokens  Options  options  Option  currentOption  boolean  eatTheRest  	projects/Cli2/src/java/org/apache/commons/cli/PosixParser.java	1.0	53	53	1	replace	currentOption        =        Option.OK_STANDARD;        ArrayList    <    Option>    tokens    =    new    ArrayList    <    Option>(tokens);    currentOption  =  Option.OK_STANDARD;  tokens.clear();	  	compilable	  [FE]  UnrecognizedOptionException  	101	1	add
895	[BUG]  [BUGGY]  [FE]  UnrecognizedOptionException  [FE]        UnrecognizedOptionException    [CONTEXT]      private  void  init()  {  eatTheRest  =  false;  tokens.clear();      [BUGGY]  currentOption    =    Option.OK_STANDARD;    ArrayList  <  Option>  tokens  =  new  ArrayList  <  Option>(tokens);  currentOption  =  Option.OK_STANDARD;  tokens.add(currentOption);  [BUGGY]      }  [CLASS]  PosixParser  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  ArrayList  tokens  Options  options  Option  currentOption  boolean  eatTheRest  	projects/Cli2/src/java/org/apache/commons/cli/PosixParser.java	1.0	53	53	1	add	currentOption        =        Option.OK_STANDARD;        ArrayList    <    Option>    tokens    =    new    ArrayList    <    Option>(tokens);    currentOption  =  Option.OK_STANDARD;  tokens.add(currentOption);	  	compilable	  [FE]  UnrecognizedOptionException  	101	1	add
896	[BUG]  [BUGGY]  currentOption    =    Option.OK_STANDARD;    ArrayList  <  Option>  tokens  =  new  ArrayList  <  Option>(tokens);  currentOption  =  Option.OK_STANDARD;  tokens.add(currentOption);  [FE]  UnrecognizedOptionException  [FE]        UnrecognizedOptionException    [CONTEXT]      private  void  init()  {  eatTheRest  =  false;  tokens.clear();      [BUGGY]  currentOption    =    Option.OK_STANDARD;    ArrayList  <  Option>  tokens  =  new  ArrayList  <  Option>(tokens);  currentOption  =  Option.OK_STANDARD;  tokens.add(currentOption);  [BUGGY]      }  [CLASS]  PosixParser  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  ArrayList  tokens  Options  options  Option  currentOption  boolean  eatTheRest  	projects/Cli2/src/java/org/apache/commons/cli/PosixParser.java	1.0	53	53	1	replace	currentOption        =        Option.OK_STANDARD;        ArrayList    <    Option>    tokens    =    new    ArrayList    <    Option>(tokens);    currentOption  =  Option.OK_STANDARD;  tokens.add(currentOption);	  	compilable	  [FE]  UnrecognizedOptionException  	101	1	add
897	[BUG]  [BUGGY]  [FE]  UnrecognizedOptionException  [FE]    UnrecognizedOptionException    [CONTEXT]      private  void  init()  {  eatTheRest  =  false;  tokens.clear();      [BUGGY]          tokens.clear();    tokens.clear();  ArrayList  <  Option>  tokens  =  new  ArrayList  <  Option>();  [BUGGY]      currentOption  =  null;  }  [CLASS]  PosixParser  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  ArrayList  tokens  Options  options  Option  currentOption  boolean  eatTheRest  	projects/Cli2/src/java/org/apache/commons/cli/PosixParser.java	1.0	53	53	1	add	                tokens.clear();        tokens.clear();    ArrayList  <  Option>  tokens  =  new  ArrayList  <  Option>();	  	compilable	  [FE]  UnrecognizedOptionException  	59	1	add
898	[BUG]  [BUGGY]          tokens.clear();    tokens.clear();  ArrayList  <  Option>  tokens  =  new  ArrayList  <  Option>();  [FE]  UnrecognizedOptionException  [FE]    UnrecognizedOptionException    [CONTEXT]      private  void  init()  {  eatTheRest  =  false;  tokens.clear();      [BUGGY]          tokens.clear();    tokens.clear();  ArrayList  <  Option>  tokens  =  new  ArrayList  <  Option>();  [BUGGY]      currentOption  =  null;  }  [CLASS]  PosixParser  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  ArrayList  tokens  Options  options  Option  currentOption  boolean  eatTheRest  	projects/Cli2/src/java/org/apache/commons/cli/PosixParser.java	1.0	53	53	1	replace	                tokens.clear();        tokens.clear();    ArrayList  <  Option>  tokens  =  new  ArrayList  <  Option>();	  	compilable	  [FE]  UnrecognizedOptionException  	59	1	add
899	[BUG]  [BUGGY]          tokens.clear();    tokens.clear();  options.clear();  tokens.clear();  [CE]  cannot  find  symbol  [FE]      UnrecognizedOptionException    [CONTEXT]      private  void  init()  {  eatTheRest  =  false;  tokens.clear();      [BUGGY]          tokens.clear();    tokens.clear();  options.clear();  tokens.clear();  [BUGGY]      currentOption  =  null;  }  [CLASS]  PosixParser  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  ArrayList  tokens  Options  options  Option  currentOption  boolean  eatTheRest  	projects/Cli2/src/java/org/apache/commons/cli/PosixParser.java	1.0	53	53	1	replace	                tokens.clear();        tokens.clear();    options.clear();  tokens.clear();	  	non-compiled	[CE]  cannot  find  symbol	59	None	add
900	[BUG]  [BUGGY]          tokens.clear();    tokens.clear();  ArrayList  <  Option>  tokens  =  new  ArrayList  <  Option>(tokens);  [CE]  variable  tokens  might  not  have  been  initialized  [FE]        UnrecognizedOptionException    [CONTEXT]      private  void  init()  {  eatTheRest  =  false;  tokens.clear();      [BUGGY]          tokens.clear();    tokens.clear();  ArrayList  <  Option>  tokens  =  new  ArrayList  <  Option>(tokens);  [BUGGY]      currentOption  =  null;  }  [CLASS]  PosixParser  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  ArrayList  tokens  Options  options  Option  currentOption  boolean  eatTheRest  	projects/Cli2/src/java/org/apache/commons/cli/PosixParser.java	1.0	53	53	1	replace	                tokens.clear();        tokens.clear();    ArrayList  <  Option>  tokens  =  new  ArrayList  <  Option>(tokens);	  	non-compiled	[CE]  variable  tokens  might  not  have  been  initialized	59	None	add
901	[BUG]  [BUGGY]  if(currentOption!=  null)  {  eatTheRest  =  false;  tokens.clear();  eattheRest  =  false;  tokens.clear();  }  else  {  [CE]  illegal  start  of  expression  [FE]            UnrecognizedOptionException      [CONTEXT]      private  void  init()  {  eatTheRest  =  false;  tokens.clear();      [BUGGY]  if(currentOption!=  null)  {  eatTheRest  =  false;  tokens.clear();  eattheRest  =  false;  tokens.clear();  }  else  {  [BUGGY]      currentOption  =  null;  }  [CLASS]  PosixParser  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  ArrayList  tokens  Options  options  Option  currentOption  boolean  eatTheRest  	projects/Cli2/src/java/org/apache/commons/cli/PosixParser.java	1.0	53	53	1	replace	if(currentOption!=  null)  {  eatTheRest  =  false;  tokens.clear();  eattheRest  =  false;  tokens.clear();  }  else  {	          eatTheRest    =    false;    tokens.clear();    eattheRest    =    false;    tokens.clear();    	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
902	[BUG]  [BUGGY]  if(!eatTheRest)  {  ArrayList  tokens  =  new  ArrayList();  ArrayList  tokens  =  new  ArrayList();  currentOption  =  null;  }  [CE]  variable  tokens  is  already  defined  in  method  init()  [FE]          UnrecognizedOptionException      [CONTEXT]      private  void  init()  {  eatTheRest  =  false;  tokens.clear();      [BUGGY]  if(!eatTheRest)  {  ArrayList  tokens  =  new  ArrayList();  ArrayList  tokens  =  new  ArrayList();  currentOption  =  null;  }  [BUGGY]      currentOption  =  null;  }  [CLASS]  PosixParser  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  ArrayList  tokens  Options  options  Option  currentOption  boolean  eatTheRest  	projects/Cli2/src/java/org/apache/commons/cli/PosixParser.java	1.0	53	53	1	replace	if(!eatTheRest)  {  ArrayList  tokens  =  new  ArrayList();  ArrayList  tokens  =  new  ArrayList();  currentOption  =  null;  }	          ArrayList    tokens    =    new    ArrayList();    ArrayList    tokens    =    new    ArrayList();    currentOption    =    null;    	non-compiled	[CE]  variable  tokens  is  already  defined  in  method  init()	33	None	replace
903	[BUG]  [BUGGY]  if(tokens!=  null)  {  ArrayList  tokens  =  new  ArrayList();  ArrayList  tokens  =  new  ArrayList();  currentOption  =  null;  }  [CE]  variable  tokens  is  already  defined  in  method  init()  [FE]            UnrecognizedOptionException      [CONTEXT]      private  void  init()  {  eatTheRest  =  false;  tokens.clear();      [BUGGY]  if(tokens!=  null)  {  ArrayList  tokens  =  new  ArrayList();  ArrayList  tokens  =  new  ArrayList();  currentOption  =  null;  }  [BUGGY]      currentOption  =  null;  }  [CLASS]  PosixParser  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  ArrayList  tokens  Options  options  Option  currentOption  boolean  eatTheRest  	projects/Cli2/src/java/org/apache/commons/cli/PosixParser.java	1.0	53	53	1	replace	if(tokens!=  null)  {  ArrayList  tokens  =  new  ArrayList();  ArrayList  tokens  =  new  ArrayList();  currentOption  =  null;  }	          ArrayList    tokens    =    new    ArrayList();    ArrayList    tokens    =    new    ArrayList();    currentOption    =    null;    	non-compiled	[CE]  variable  tokens  is  already  defined  in  method  init()	33	None	replace
904	[BUG]  [BUGGY]  [FE]  UnrecognizedOptionException  [FE]    UnrecognizedOptionException    [CONTEXT]      private  void  init()  {  eatTheRest  =  false;  tokens.clear();      [BUGGY]  if(tokens!=  null)  {  eatTheRest  =  false;  tokens.clear();  eatTheRest  =  false;  tokens.clear();  }  [BUGGY]      currentOption  =  null;  }  [CLASS]  PosixParser  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  ArrayList  tokens  Options  options  Option  currentOption  boolean  eatTheRest  	projects/Cli2/src/java/org/apache/commons/cli/PosixParser.java	1.0	53	53	1	add	if(tokens!=  null)  {  eatTheRest  =  false;  tokens.clear();  eatTheRest  =  false;  tokens.clear();  }	          eatTheRest    =    false;    tokens.clear();    eatTheRest    =    false;    tokens.clear();    	compilable	  [FE]  UnrecognizedOptionException  	2	1	replace
905	[BUG]  [BUGGY]  if(tokens!=  null)  {  eatTheRest  =  false;  tokens.clear();  eatTheRest  =  false;  tokens.clear();  }  [FE]  UnrecognizedOptionException  [FE]    UnrecognizedOptionException    [CONTEXT]      private  void  init()  {  eatTheRest  =  false;  tokens.clear();      [BUGGY]  if(tokens!=  null)  {  eatTheRest  =  false;  tokens.clear();  eatTheRest  =  false;  tokens.clear();  }  [BUGGY]      currentOption  =  null;  }  [CLASS]  PosixParser  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  ArrayList  tokens  Options  options  Option  currentOption  boolean  eatTheRest  	projects/Cli2/src/java/org/apache/commons/cli/PosixParser.java	1.0	53	53	1	replace	if(tokens!=  null)  {  eatTheRest  =  false;  tokens.clear();  eatTheRest  =  false;  tokens.clear();  }	          eatTheRest    =    false;    tokens.clear();    eatTheRest    =    false;    tokens.clear();    	compilable	  [FE]  UnrecognizedOptionException  	2	1	replace
906	[BUG]  [BUGGY]  if(!currentOption)  {  eatTheRest  =  false;  tokens.clear();  }  [CE]  bad  operand  type  Option  for  unary  operator  '!'  [FE]      UnrecognizedOptionException    [CONTEXT]      private  void  init()  {  eatTheRest  =  false;  tokens.clear();      [BUGGY]  if(!currentOption)  {  eatTheRest  =  false;  tokens.clear();  }  [BUGGY]      currentOption  =  null;  }  [CLASS]  PosixParser  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  ArrayList  tokens  Options  options  Option  currentOption  boolean  eatTheRest  	projects/Cli2/src/java/org/apache/commons/cli/PosixParser.java	1.0	53	53	1	replace	if(!currentOption)  {  eatTheRest  =  false;  tokens.clear();  }	  if(!eatTheRest)    {    eatTheRest    =    false;    tokens.clear();    }    	non-compiled	[CE]  bad  operand  type  Option  for  unary  operator  '!'	116	None	replace
907	[BUG]  [BUGGY]          eatTheRest    =    false;    tokens.clear();    tokens.clear();  eatTheRest  =  false;  tokens.clear();  tos.clear();  [CE]  cannot  find  symbol  tos  [FE]    UnrecognizedOptionException    [CONTEXT]      private  void  init()  {  eatTheRest  =  false;  tokens.clear();      [BUGGY]          eatTheRest    =    false;    tokens.clear();    tokens.clear();  eatTheRest  =  false;  tokens.clear();  tos.clear();  [BUGGY]      currentOption  =  null;  }  [CLASS]  PosixParser  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  ArrayList  tokens  Options  options  Option  currentOption  boolean  eatTheRest  	projects/Cli2/src/java/org/apache/commons/cli/PosixParser.java	1.0	53	53	1	replace	                eatTheRest        =        false;        tokens.clear();        tokens.clear();    eatTheRest  =  false;  tokens.clear();  tos.clear();	  	non-compiled	[CE]  cannot  find  symbol  tos	133	None	add
908	[BUG]  [BUGGY]          eatTheRest    =    false;    tokens.clear();    tokens.clear();  eatTheRest  =  false;  tokens.clear();  Tokens.clear();  [CE]  cannot  find  symbol  Tokens  [FE]      UnrecognizedOptionException    [CONTEXT]      private  void  init()  {  eatTheRest  =  false;  tokens.clear();      [BUGGY]          eatTheRest    =    false;    tokens.clear();    tokens.clear();  eatTheRest  =  false;  tokens.clear();  Tokens.clear();  [BUGGY]      currentOption  =  null;  }  [CLASS]  PosixParser  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  ArrayList  tokens  Options  options  Option  currentOption  boolean  eatTheRest  	projects/Cli2/src/java/org/apache/commons/cli/PosixParser.java	1.0	53	53	1	replace	                eatTheRest        =        false;        tokens.clear();        tokens.clear();    eatTheRest  =  false;  tokens.clear();  Tokens.clear();	  	non-compiled	[CE]  cannot  find  symbol  Tokens	133	None	add
909	[BUG]  [BUGGY]  List  tokens  =  new  ArrayList();  Option  currentOption  =  options.getOption(OPTIONAL_PREFIX);  [CE]  cannot  find  symbol  [FE]              UnrecognizedOptionException      [CONTEXT]      private  void  init()  {  eatTheRest  =  false;  tokens.clear();      [BUGGY]  List  tokens  =  new  ArrayList();  Option  currentOption  =  options.getOption(OPTIONAL_PREFIX);  [BUGGY]      currentOption  =  null;  }  [CLASS]  PosixParser  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  ArrayList  tokens  Options  options  Option  currentOption  boolean  eatTheRest  	projects/Cli2/src/java/org/apache/commons/cli/PosixParser.java	1.0	53	53	1	replace	List  tokens  =  new  ArrayList();  Option  currentOption  =  options.getOption(OPTIONAL_PREFIX);	          ArrayList    tokens    =    new    ArrayList();    Option    currentOption    =    options.getOption(OPTIONAL_PREFIX);    	non-compiled	[CE]  cannot  find  symbol	35	None	replace
910	[BUG]  [BUGGY]  if(eatTheRest)  {  ArrayList  <  Option>  tokens  =  new  ArrayList  <  Option>();  ArrayList  <  Option>  tokens  =  new  ArrayList  <  Option>();  currentOption  =  null;  }  [CE]  variable  tokens  is  already  defined  in  method  init()  [FE]          UnrecognizedOptionException      [CONTEXT]      private  void  init()  {  eatTheRest  =  false;  tokens.clear();      [BUGGY]  if(eatTheRest)  {  ArrayList  <  Option>  tokens  =  new  ArrayList  <  Option>();  ArrayList  <  Option>  tokens  =  new  ArrayList  <  Option>();  currentOption  =  null;  }  [BUGGY]      currentOption  =  null;  }  [CLASS]  PosixParser  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  ArrayList  tokens  Options  options  Option  currentOption  boolean  eatTheRest  	projects/Cli2/src/java/org/apache/commons/cli/PosixParser.java	1.0	53	53	1	replace	if(eatTheRest)  {  ArrayList  <  Option>  tokens  =  new  ArrayList  <  Option>();  ArrayList  <  Option>  tokens  =  new  ArrayList  <  Option>();  currentOption  =  null;  }	          ArrayList    <    Option>    tokens    =    new    ArrayList    <    Option>();    ArrayList    <    Option>    tokens    =    new    ArrayList    <    Option>();    currentOption    =    null;    	non-compiled	[CE]  variable  tokens  is  already  defined  in  method  init()	44	None	replace
911	[BUG]  [BUGGY]  [FE]  UnrecognizedOptionException  [FE]    UnrecognizedOptionException    [CONTEXT]      private  void  init()  {  eatTheRest  =  false;  tokens.clear();      [BUGGY]          tokens.add(     "--     ");    tokens.add(   ",--     ");  tokens.clear();  [BUGGY]      currentOption  =  null;  }  [CLASS]  PosixParser  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  ArrayList  tokens  Options  options  Option  currentOption  boolean  eatTheRest  	projects/Cli2/src/java/org/apache/commons/cli/PosixParser.java	1.0	53	53	1	add	                tokens.add(       "--       ");        tokens.add(   ",--       ");    tokens.clear();	  	compilable	  [FE]  UnrecognizedOptionException  	143	1	add
912	[BUG]  [BUGGY]          tokens.add(     "--     ");    tokens.add(   ",--     ");  tokens.clear();  [FE]  UnrecognizedOptionException  [FE]    UnrecognizedOptionException    [CONTEXT]      private  void  init()  {  eatTheRest  =  false;  tokens.clear();      [BUGGY]          tokens.add(     "--     ");    tokens.add(   ",--     ");  tokens.clear();  [BUGGY]      currentOption  =  null;  }  [CLASS]  PosixParser  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  ArrayList  tokens  Options  options  Option  currentOption  boolean  eatTheRest  	projects/Cli2/src/java/org/apache/commons/cli/PosixParser.java	1.0	53	53	1	replace	                tokens.add(       "--       ");        tokens.add(   ",--       ");    tokens.clear();	  	compilable	  [FE]  UnrecognizedOptionException  	143	1	add
913	[BUG]  [BUGGY]  options.getOption(this,  null,  tokens);  [CE]  method  getOption  in  class  Options  cannot  be  applied  to  given  types;  [FE]                      UnrecognizedOptionException      [CONTEXT]      private  void  init()  {  eatTheRest  =  false;  tokens.clear();      [BUGGY]  options.getOption(this,  null,  tokens);  [BUGGY]      currentOption  =  null;  }  [CLASS]  PosixParser  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  ArrayList  tokens  Options  options  Option  currentOption  boolean  eatTheRest  	projects/Cli2/src/java/org/apache/commons/cli/PosixParser.java	1.0	53	53	1	replace	options.getOption(this,  null,  tokens);	  options.getOption(this,    tokens);    	non-compiled	[CE]  method  getOption  in  class  Options  cannot  be  applied  to  given  types;	70	None	replace
914	[BUG]  [BUGGY]  tokens.add(   "--n   ");  tokens.add( "--n "));  [CE]  [FE]    UnrecognizedOptionException    [CONTEXT]      private  void  init()  {  eatTheRest  =  false;  tokens.clear();      [BUGGY]  tokens.add(   "--n   ");  tokens.add( "--n "));  [BUGGY]      currentOption  =  null;  }  [CLASS]  PosixParser  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  ArrayList  tokens  Options  options  Option  currentOption  boolean  eatTheRest  	projects/Cli2/src/java/org/apache/commons/cli/PosixParser.java	1.0	53	53	1	replace	tokens.add(   "--n   ");    tokens.add( "--n "));	  	non-compiled	[CE]  	73	None	add
915	[BUG]  [BUGGY]  if(options!=  null)  {  tokens.clear();  currentOption  =  null;  options.clear();  currentOption  =  null;  }  [CE]  cannot  find  symbol  [FE]          UnrecognizedOptionException      [CONTEXT]      private  void  init()  {  eatTheRest  =  false;  tokens.clear();      [BUGGY]  if(options!=  null)  {  tokens.clear();  currentOption  =  null;  options.clear();  currentOption  =  null;  }  [BUGGY]      currentOption  =  null;  }  [CLASS]  PosixParser  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  ArrayList  tokens  Options  options  Option  currentOption  boolean  eatTheRest  	projects/Cli2/src/java/org/apache/commons/cli/PosixParser.java	1.0	53	53	1	replace	if(options!=  null)  {  tokens.clear();  currentOption  =  null;  options.clear();  currentOption  =  null;  }	          tokens.clear();    currentOption    =    null;    options.clear();    currentOption    =    null;    	non-compiled	[CE]  cannot  find  symbol	130	None	replace
916	[BUG]  [BUGGY]  if(tokens!=  null)  {  eatTheRest  =  false;  tokens.clear();  }  if(tokens!=  null)  {  tokens  =  false;  tokens.clear();  }  [CE]  incompatible  types  [FE]    UnrecognizedOptionException    [CONTEXT]      private  void  init()  {  eatTheRest  =  false;  tokens.clear();      [BUGGY]  if(tokens!=  null)  {  eatTheRest  =  false;  tokens.clear();  }  if(tokens!=  null)  {  tokens  =  false;  tokens.clear();  }  [BUGGY]      currentOption  =  null;  }  [CLASS]  PosixParser  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  ArrayList  tokens  Options  options  Option  currentOption  boolean  eatTheRest  	projects/Cli2/src/java/org/apache/commons/cli/PosixParser.java	1.0	53	53	1	replace	if(tokens!=    null)    {    eatTheRest    =    false;    tokens.clear();    }    if(tokens!=  null)  {  tokens  =  false;  tokens.clear();  }	  	non-compiled	[CE]  incompatible  types	113	None	add
917	[BUG]  [BUGGY]  [FE]  UnrecognizedOptionException  [FE]      UnrecognizedOptionException    [CONTEXT]      private  void  init()  {  eatTheRest  =  false;  tokens.clear();      [BUGGY]  if(tokens!=  null)  {  eatTheRest  =  false;  tokens.clear();  }  if(tokens!=  null)  {  tokens.clear();  }  [BUGGY]      currentOption  =  null;  }  [CLASS]  PosixParser  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  ArrayList  tokens  Options  options  Option  currentOption  boolean  eatTheRest  	projects/Cli2/src/java/org/apache/commons/cli/PosixParser.java	1.0	53	53	1	add	if(tokens!=    null)    {    eatTheRest    =    false;    tokens.clear();    }    if(tokens!=  null)  {  tokens.clear();  }	  	compilable	  [FE]  UnrecognizedOptionException  	113	1	add
918	[BUG]  [BUGGY]  if(tokens!=  null)  {  eatTheRest  =  false;  tokens.clear();  }  if(tokens!=  null)  {  tokens.clear();  }  [FE]  UnrecognizedOptionException  [FE]      UnrecognizedOptionException    [CONTEXT]      private  void  init()  {  eatTheRest  =  false;  tokens.clear();      [BUGGY]  if(tokens!=  null)  {  eatTheRest  =  false;  tokens.clear();  }  if(tokens!=  null)  {  tokens.clear();  }  [BUGGY]      currentOption  =  null;  }  [CLASS]  PosixParser  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  ArrayList  tokens  Options  options  Option  currentOption  boolean  eatTheRest  	projects/Cli2/src/java/org/apache/commons/cli/PosixParser.java	1.0	53	53	1	replace	if(tokens!=    null)    {    eatTheRest    =    false;    tokens.clear();    }    if(tokens!=  null)  {  tokens.clear();  }	  	compilable	  [FE]  UnrecognizedOptionException  	113	1	add
919	[BUG]  [BUGGY]  [FE]  UnrecognizedOptionException  [FE]    UnrecognizedOptionException    [CONTEXT]      private  void  init()  {  eatTheRest  =  false;  tokens.clear();      [BUGGY]  if(eatTheRest)  {  eatTheRest  =  false;  tokens.clear();  }  else  {  currentOption  =  null;  }  [BUGGY]      currentOption  =  null;  }  [CLASS]  PosixParser  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  ArrayList  tokens  Options  options  Option  currentOption  boolean  eatTheRest  	projects/Cli2/src/java/org/apache/commons/cli/PosixParser.java	1.0	53	53	1	add	if(eatTheRest)  {  eatTheRest  =  false;  tokens.clear();  }  else  {  currentOption  =  null;  }	  if(currentOption!=    null)    {    eatTheRest    =    false;    tokens.clear();    }    else    {    currentOption    =    null;    }    	compilable	  [FE]  UnrecognizedOptionException  	42	1	replace
920	[BUG]  [BUGGY]  if(eatTheRest)  {  eatTheRest  =  false;  tokens.clear();  }  else  {  currentOption  =  null;  }  [FE]  UnrecognizedOptionException  [FE]    UnrecognizedOptionException    [CONTEXT]      private  void  init()  {  eatTheRest  =  false;  tokens.clear();      [BUGGY]  if(eatTheRest)  {  eatTheRest  =  false;  tokens.clear();  }  else  {  currentOption  =  null;  }  [BUGGY]      currentOption  =  null;  }  [CLASS]  PosixParser  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  ArrayList  tokens  Options  options  Option  currentOption  boolean  eatTheRest  	projects/Cli2/src/java/org/apache/commons/cli/PosixParser.java	1.0	53	53	1	replace	if(eatTheRest)  {  eatTheRest  =  false;  tokens.clear();  }  else  {  currentOption  =  null;  }	  if(currentOption!=    null)    {    eatTheRest    =    false;    tokens.clear();    }    else    {    currentOption    =    null;    }    	compilable	  [FE]  UnrecognizedOptionException  	42	1	replace
921	[BUG]  [BUGGY]  [FE]  UnrecognizedOptionException  [FE]      UnrecognizedOptionException    [CONTEXT]      private  void  init()  {  eatTheRest  =  false;  tokens.clear();      [BUGGY]  if(!eatTheRest)  {  eatTheRest  =  false;  tokens.clear();  }  else  {  currentOption  =  null;  }  [BUGGY]      currentOption  =  null;  }  [CLASS]  PosixParser  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  ArrayList  tokens  Options  options  Option  currentOption  boolean  eatTheRest  	projects/Cli2/src/java/org/apache/commons/cli/PosixParser.java	1.0	53	53	1	add	if(!eatTheRest)  {  eatTheRest  =  false;  tokens.clear();  }  else  {  currentOption  =  null;  }	  if(currentOption!=    null)    {    eatTheRest    =    false;    tokens.clear();    }    else    {    currentOption    =    null;    }    	compilable	  [FE]  UnrecognizedOptionException  	42	1	replace
922	[BUG]  [BUGGY]  if(!eatTheRest)  {  eatTheRest  =  false;  tokens.clear();  }  else  {  currentOption  =  null;  }  [FE]  UnrecognizedOptionException  [FE]      UnrecognizedOptionException    [CONTEXT]      private  void  init()  {  eatTheRest  =  false;  tokens.clear();      [BUGGY]  if(!eatTheRest)  {  eatTheRest  =  false;  tokens.clear();  }  else  {  currentOption  =  null;  }  [BUGGY]      currentOption  =  null;  }  [CLASS]  PosixParser  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  ArrayList  tokens  Options  options  Option  currentOption  boolean  eatTheRest  	projects/Cli2/src/java/org/apache/commons/cli/PosixParser.java	1.0	53	53	1	replace	if(!eatTheRest)  {  eatTheRest  =  false;  tokens.clear();  }  else  {  currentOption  =  null;  }	  if(currentOption!=    null)    {    eatTheRest    =    false;    tokens.clear();    }    else    {    currentOption    =    null;    }    	compilable	  [FE]  UnrecognizedOptionException  	42	1	replace
923	[BUG]  [BUGGY]  [FE]  UnrecognizedOptionException  [FE]    UnrecognizedOptionException    [CONTEXT]      private  void  init()  {  eatTheRest  =  false;  tokens.clear();      [BUGGY]  currentOption    =    Option.OK_STANDARD;    ArrayList  <  Option>  tokens  =  new  ArrayList  <  Option>(tokens);  currentOption  =  Option.OK_STANDARD;  tokens.addAll(tokens);  [BUGGY]      }  [CLASS]  PosixParser  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  ArrayList  tokens  Options  options  Option  currentOption  boolean  eatTheRest  	projects/Cli2/src/java/org/apache/commons/cli/PosixParser.java	1.0	53	53	1	add	currentOption        =        Option.OK_STANDARD;        ArrayList    <    Option>    tokens    =    new    ArrayList    <    Option>(tokens);    currentOption  =  Option.OK_STANDARD;  tokens.addAll(tokens);	  	compilable	  [FE]  UnrecognizedOptionException  	101	1	add
924	[BUG]  [BUGGY]  currentOption    =    Option.OK_STANDARD;    ArrayList  <  Option>  tokens  =  new  ArrayList  <  Option>(tokens);  currentOption  =  Option.OK_STANDARD;  tokens.addAll(tokens);  [FE]  UnrecognizedOptionException  [FE]    UnrecognizedOptionException    [CONTEXT]      private  void  init()  {  eatTheRest  =  false;  tokens.clear();      [BUGGY]  currentOption    =    Option.OK_STANDARD;    ArrayList  <  Option>  tokens  =  new  ArrayList  <  Option>(tokens);  currentOption  =  Option.OK_STANDARD;  tokens.addAll(tokens);  [BUGGY]      }  [CLASS]  PosixParser  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  ArrayList  tokens  Options  options  Option  currentOption  boolean  eatTheRest  	projects/Cli2/src/java/org/apache/commons/cli/PosixParser.java	1.0	53	53	1	replace	currentOption        =        Option.OK_STANDARD;        ArrayList    <    Option>    tokens    =    new    ArrayList    <    Option>(tokens);    currentOption  =  Option.OK_STANDARD;  tokens.addAll(tokens);	  	compilable	  [FE]  UnrecognizedOptionException  	101	1	add
925	[BUG]  [BUGGY]  [FE]  UnrecognizedOptionException  [FE]      UnrecognizedOptionException    [CONTEXT]      private  void  init()  {  eatTheRest  =  false;  tokens.clear();      [BUGGY]  currentOption    =    Option.OK_STANDARD;    ArrayList  <  Option>  tokens  =  new  ArrayList  <  Option>(tokens);  tokens.clear();  currentOption  =  Option.OK_STANDARD;  [BUGGY]      }  [CLASS]  PosixParser  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  ArrayList  tokens  Options  options  Option  currentOption  boolean  eatTheRest  	projects/Cli2/src/java/org/apache/commons/cli/PosixParser.java	1.0	53	53	1	add	currentOption        =        Option.OK_STANDARD;        ArrayList    <    Option>    tokens    =    new    ArrayList    <    Option>(tokens);    tokens.clear();  currentOption  =  Option.OK_STANDARD;	  	compilable	  [FE]  UnrecognizedOptionException  	101	1	add
926	[BUG]  [BUGGY]  currentOption    =    Option.OK_STANDARD;    ArrayList  <  Option>  tokens  =  new  ArrayList  <  Option>(tokens);  tokens.clear();  currentOption  =  Option.OK_STANDARD;  [FE]  UnrecognizedOptionException  [FE]      UnrecognizedOptionException    [CONTEXT]      private  void  init()  {  eatTheRest  =  false;  tokens.clear();      [BUGGY]  currentOption    =    Option.OK_STANDARD;    ArrayList  <  Option>  tokens  =  new  ArrayList  <  Option>(tokens);  tokens.clear();  currentOption  =  Option.OK_STANDARD;  [BUGGY]      }  [CLASS]  PosixParser  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  ArrayList  tokens  Options  options  Option  currentOption  boolean  eatTheRest  	projects/Cli2/src/java/org/apache/commons/cli/PosixParser.java	1.0	53	53	1	replace	currentOption        =        Option.OK_STANDARD;        ArrayList    <    Option>    tokens    =    new    ArrayList    <    Option>(tokens);    tokens.clear();  currentOption  =  Option.OK_STANDARD;	  	compilable	  [FE]  UnrecognizedOptionException  	101	1	add
927	[BUG]  [BUGGY]  [FE]  UnrecognizedOptionException  [FE]        UnrecognizedOptionException    [CONTEXT]      private  void  init()  {  eatTheRest  =  false;  tokens.clear();      [BUGGY]  currentOption    =    Option.OK_STANDARD;    ArrayList  <  Option>  tokens  =  new  ArrayList  <  Option>(tokens);  if(!eatTheRest)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      }  [CLASS]  PosixParser  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  ArrayList  tokens  Options  options  Option  currentOption  boolean  eatTheRest  	projects/Cli2/src/java/org/apache/commons/cli/PosixParser.java	1.0	53	53	1	add	currentOption        =        Option.OK_STANDARD;        ArrayList    <    Option>    tokens    =    new    ArrayList    <    Option>(tokens);    if(!eatTheRest)  {  throw  new  IllegalArgumentException( " ");  }	  	compilable	  [FE]  UnrecognizedOptionException  	101	1	add
928	[BUG]  [BUGGY]  currentOption    =    Option.OK_STANDARD;    ArrayList  <  Option>  tokens  =  new  ArrayList  <  Option>(tokens);  if(!eatTheRest)  {  throw  new  IllegalArgumentException( " ");  }  [FE]  UnrecognizedOptionException  [FE]        UnrecognizedOptionException    [CONTEXT]      private  void  init()  {  eatTheRest  =  false;  tokens.clear();      [BUGGY]  currentOption    =    Option.OK_STANDARD;    ArrayList  <  Option>  tokens  =  new  ArrayList  <  Option>(tokens);  if(!eatTheRest)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      }  [CLASS]  PosixParser  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  ArrayList  tokens  Options  options  Option  currentOption  boolean  eatTheRest  	projects/Cli2/src/java/org/apache/commons/cli/PosixParser.java	1.0	53	53	1	replace	currentOption        =        Option.OK_STANDARD;        ArrayList    <    Option>    tokens    =    new    ArrayList    <    Option>(tokens);    if(!eatTheRest)  {  throw  new  IllegalArgumentException( " ");  }	  	compilable	  [FE]  UnrecognizedOptionException  	101	1	add
929	[BUG]  [BUGGY]  if(eatTheRest)  {  tokens.clear();  tokens.clear();  currentOption  =  null;  }  else  {  options.addOption(options);  }  [CE]  no  suitable  method  found  for  addOption(Options)  [FE]    UnrecognizedOptionException    [CONTEXT]      private  void  init()  {  eatTheRest  =  false;  tokens.clear();      [BUGGY]  if(eatTheRest)  {  tokens.clear();  tokens.clear();  currentOption  =  null;  }  else  {  options.addOption(options);  }  [BUGGY]      currentOption  =  null;  }  [CLASS]  PosixParser  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  ArrayList  tokens  Options  options  Option  currentOption  boolean  eatTheRest  	projects/Cli2/src/java/org/apache/commons/cli/PosixParser.java	1.0	53	53	1	replace	if(eatTheRest)  {  tokens.clear();  tokens.clear();  currentOption  =  null;  }  else  {  options.addOption(options);  }	          tokens.clear();    tokens.clear();    currentOption    =    null;    	non-compiled	[CE]  no  suitable  method  found  for  addOption(Options)	66	None	replace
930	[BUG]  [BUGGY]  [FE]  UnrecognizedOptionException  [FE]    UnrecognizedOptionException    [CONTEXT]      private  void  init()  {  eatTheRest  =  false;  tokens.clear();      [BUGGY]  currentOption  =  Option.OK_STANDARD?  null  :  Option.OK_STANDARD;  currentOption  =  Option.OK_STANDARD?  null  :  Option.OK_STANDARD;  tokens.add(currentOption);  [BUGGY]      }  [CLASS]  PosixParser  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  ArrayList  tokens  Options  options  Option  currentOption  boolean  eatTheRest  	projects/Cli2/src/java/org/apache/commons/cli/PosixParser.java	1.0	53	53	1	add	currentOption    =    Option.OK_STANDARD?    null    :    Option.OK_STANDARD;    currentOption  =  Option.OK_STANDARD?  null  :  Option.OK_STANDARD;  tokens.add(currentOption);	  	compilable	  [FE]  UnrecognizedOptionException  	18	1	add
931	[BUG]  [BUGGY]  currentOption  =  Option.OK_STANDARD?  null  :  Option.OK_STANDARD;  currentOption  =  Option.OK_STANDARD?  null  :  Option.OK_STANDARD;  tokens.add(currentOption);  [FE]  UnrecognizedOptionException  [FE]    UnrecognizedOptionException    [CONTEXT]      private  void  init()  {  eatTheRest  =  false;  tokens.clear();      [BUGGY]  currentOption  =  Option.OK_STANDARD?  null  :  Option.OK_STANDARD;  currentOption  =  Option.OK_STANDARD?  null  :  Option.OK_STANDARD;  tokens.add(currentOption);  [BUGGY]      }  [CLASS]  PosixParser  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  ArrayList  tokens  Options  options  Option  currentOption  boolean  eatTheRest  	projects/Cli2/src/java/org/apache/commons/cli/PosixParser.java	1.0	53	53	1	replace	currentOption    =    Option.OK_STANDARD?    null    :    Option.OK_STANDARD;    currentOption  =  Option.OK_STANDARD?  null  :  Option.OK_STANDARD;  tokens.add(currentOption);	  	compilable	  [FE]  UnrecognizedOptionException  	18	1	add
932	[BUG]  [BUGGY]  [FE]  UnrecognizedOptionException  [FE]    UnrecognizedOptionException    [CONTEXT]      private  void  init()  {  eatTheRest  =  false;  tokens.clear();      [BUGGY]          tokens.clear();    currentOption    =    null;    tokens.clear();  currentOption  =  null;  if(eatTheRest)  {  tokens.clear();  currentOption  =  null;  }  [BUGGY]      currentOption  =  null;  }  [CLASS]  PosixParser  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  ArrayList  tokens  Options  options  Option  currentOption  boolean  eatTheRest  	projects/Cli2/src/java/org/apache/commons/cli/PosixParser.java	1.0	53	53	1	add	                tokens.clear();        currentOption        =        null;        tokens.clear();    currentOption    =    null;    if(eatTheRest)  {  tokens.clear();  currentOption  =  null;  }	  	compilable	  [FE]  UnrecognizedOptionException  	52	1	add
933	[BUG]  [BUGGY]          tokens.clear();    currentOption    =    null;    tokens.clear();  currentOption  =  null;  if(eatTheRest)  {  tokens.clear();  currentOption  =  null;  }  [FE]  UnrecognizedOptionException  [FE]    UnrecognizedOptionException    [CONTEXT]      private  void  init()  {  eatTheRest  =  false;  tokens.clear();      [BUGGY]          tokens.clear();    currentOption    =    null;    tokens.clear();  currentOption  =  null;  if(eatTheRest)  {  tokens.clear();  currentOption  =  null;  }  [BUGGY]      currentOption  =  null;  }  [CLASS]  PosixParser  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  ArrayList  tokens  Options  options  Option  currentOption  boolean  eatTheRest  	projects/Cli2/src/java/org/apache/commons/cli/PosixParser.java	1.0	53	53	1	replace	                tokens.clear();        currentOption        =        null;        tokens.clear();    currentOption    =    null;    if(eatTheRest)  {  tokens.clear();  currentOption  =  null;  }	  	compilable	  [FE]  UnrecognizedOptionException  	52	1	add
934	[BUG]  [BUGGY]  [FE]  UnrecognizedOptionException  [FE]      UnrecognizedOptionException    [CONTEXT]      private  void  init()  {  eatTheRest  =  false;  tokens.clear();      [BUGGY]          tokens.clear();    currentOption    =    null;    tokens.clear();  currentOption  =  null;  if(eatTheRest)  {  tokens.clear();  }  [BUGGY]      currentOption  =  null;  }  [CLASS]  PosixParser  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  ArrayList  tokens  Options  options  Option  currentOption  boolean  eatTheRest  	projects/Cli2/src/java/org/apache/commons/cli/PosixParser.java	1.0	53	53	1	add	                tokens.clear();        currentOption        =        null;        tokens.clear();    currentOption    =    null;    if(eatTheRest)  {  tokens.clear();  }	  	compilable	  [FE]  UnrecognizedOptionException  	52	1	add
935	[BUG]  [BUGGY]          tokens.clear();    currentOption    =    null;    tokens.clear();  currentOption  =  null;  if(eatTheRest)  {  tokens.clear();  }  [FE]  UnrecognizedOptionException  [FE]      UnrecognizedOptionException    [CONTEXT]      private  void  init()  {  eatTheRest  =  false;  tokens.clear();      [BUGGY]          tokens.clear();    currentOption    =    null;    tokens.clear();  currentOption  =  null;  if(eatTheRest)  {  tokens.clear();  }  [BUGGY]      currentOption  =  null;  }  [CLASS]  PosixParser  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  ArrayList  tokens  Options  options  Option  currentOption  boolean  eatTheRest  	projects/Cli2/src/java/org/apache/commons/cli/PosixParser.java	1.0	53	53	1	replace	                tokens.clear();        currentOption        =        null;        tokens.clear();    currentOption    =    null;    if(eatTheRest)  {  tokens.clear();  }	  	compilable	  [FE]  UnrecognizedOptionException  	52	1	add
936	[BUG]  [BUGGY]  [FE]  UnrecognizedOptionException  [FE]        UnrecognizedOptionException    [CONTEXT]      private  void  init()  {  eatTheRest  =  false;  tokens.clear();      [BUGGY]          tokens.clear();    currentOption    =    null;    tokens.clear();  currentOption  =  null;  if(eatTheRest)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      currentOption  =  null;  }  [CLASS]  PosixParser  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  ArrayList  tokens  Options  options  Option  currentOption  boolean  eatTheRest  	projects/Cli2/src/java/org/apache/commons/cli/PosixParser.java	1.0	53	53	1	add	                tokens.clear();        currentOption        =        null;        tokens.clear();    currentOption    =    null;    if(eatTheRest)  {  throw  new  IllegalArgumentException( " ");  }	  	compilable	  [FE]  UnrecognizedOptionException  	52	1	add
937	[BUG]  [BUGGY]          tokens.clear();    currentOption    =    null;    tokens.clear();  currentOption  =  null;  if(eatTheRest)  {  throw  new  IllegalArgumentException( " ");  }  [FE]  UnrecognizedOptionException  [FE]        UnrecognizedOptionException    [CONTEXT]      private  void  init()  {  eatTheRest  =  false;  tokens.clear();      [BUGGY]          tokens.clear();    currentOption    =    null;    tokens.clear();  currentOption  =  null;  if(eatTheRest)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      currentOption  =  null;  }  [CLASS]  PosixParser  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  ArrayList  tokens  Options  options  Option  currentOption  boolean  eatTheRest  	projects/Cli2/src/java/org/apache/commons/cli/PosixParser.java	1.0	53	53	1	replace	                tokens.clear();        currentOption        =        null;        tokens.clear();    currentOption    =    null;    if(eatTheRest)  {  throw  new  IllegalArgumentException( " ");  }	  	compilable	  [FE]  UnrecognizedOptionException  	52	1	add
938	[BUG]  [BUGGY]  [FE]  UnrecognizedOptionException  [FE]    UnrecognizedOptionException    [CONTEXT]      private  void  init()  {  eatTheRest  =  false;  tokens.clear();      [BUGGY]  if(eatTheRest)  {  tokens.clear();  ArrayList  <  Option>  tokens  =  new  ArrayList  <  Option>();  }  [BUGGY]      currentOption  =  null;  }  [CLASS]  PosixParser  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  ArrayList  tokens  Options  options  Option  currentOption  boolean  eatTheRest  	projects/Cli2/src/java/org/apache/commons/cli/PosixParser.java	1.0	53	53	1	add	if(eatTheRest)  {  tokens.clear();  ArrayList  <  Option>  tokens  =  new  ArrayList  <  Option>();  }	          tokens.clear();    ArrayList    <    Option>    tokens    =    new    ArrayList    <    Option>();    	compilable	  [FE]  UnrecognizedOptionException  	63	1	replace
939	[BUG]  [BUGGY]  if(eatTheRest)  {  tokens.clear();  ArrayList  <  Option>  tokens  =  new  ArrayList  <  Option>();  }  [FE]  UnrecognizedOptionException  [FE]    UnrecognizedOptionException    [CONTEXT]      private  void  init()  {  eatTheRest  =  false;  tokens.clear();      [BUGGY]  if(eatTheRest)  {  tokens.clear();  ArrayList  <  Option>  tokens  =  new  ArrayList  <  Option>();  }  [BUGGY]      currentOption  =  null;  }  [CLASS]  PosixParser  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  ArrayList  tokens  Options  options  Option  currentOption  boolean  eatTheRest  	projects/Cli2/src/java/org/apache/commons/cli/PosixParser.java	1.0	53	53	1	replace	if(eatTheRest)  {  tokens.clear();  ArrayList  <  Option>  tokens  =  new  ArrayList  <  Option>();  }	          tokens.clear();    ArrayList    <    Option>    tokens    =    new    ArrayList    <    Option>();    	compilable	  [FE]  UnrecognizedOptionException  	63	1	replace
940	[BUG]  [BUGGY]  [FE]  IllegalArgumentException  [FE]      UnrecognizedOptionException    [CONTEXT]      private  void  init()  {  eatTheRest  =  false;  tokens.clear();      [BUGGY]  if(eatTheRest)  {  tokens.clear();  ArrayList  <  Option>  tokens  =  new  ArrayList  <  Option>();  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      currentOption  =  null;  }  [CLASS]  PosixParser  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  ArrayList  tokens  Options  options  Option  currentOption  boolean  eatTheRest  	projects/Cli2/src/java/org/apache/commons/cli/PosixParser.java	1.0	53	53	1	add	if(eatTheRest)  {  tokens.clear();  ArrayList  <  Option>  tokens  =  new  ArrayList  <  Option>();  }  else  {  throw  new  IllegalArgumentException( " ");  }	          tokens.clear();    ArrayList    <    Option>    tokens    =    new    ArrayList    <    Option>();    	compilable	  [FE]  IllegalArgumentException  	63	1	replace
941	[BUG]  [BUGGY]  if(eatTheRest)  {  tokens.clear();  ArrayList  <  Option>  tokens  =  new  ArrayList  <  Option>();  }  else  {  throw  new  IllegalArgumentException( " ");  }  [FE]  IllegalArgumentException  [FE]      UnrecognizedOptionException    [CONTEXT]      private  void  init()  {  eatTheRest  =  false;  tokens.clear();      [BUGGY]  if(eatTheRest)  {  tokens.clear();  ArrayList  <  Option>  tokens  =  new  ArrayList  <  Option>();  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      currentOption  =  null;  }  [CLASS]  PosixParser  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  ArrayList  tokens  Options  options  Option  currentOption  boolean  eatTheRest  	projects/Cli2/src/java/org/apache/commons/cli/PosixParser.java	1.0	53	53	1	replace	if(eatTheRest)  {  tokens.clear();  ArrayList  <  Option>  tokens  =  new  ArrayList  <  Option>();  }  else  {  throw  new  IllegalArgumentException( " ");  }	          tokens.clear();    ArrayList    <    Option>    tokens    =    new    ArrayList    <    Option>();    	compilable	  [FE]  IllegalArgumentException  	63	1	replace
942	[BUG]  [BUGGY]  tokens.clear();  currentOption  =  new  TokenBuffer(tokens.size());  [CE]  cannot  find  symbol  [FE]        UnrecognizedOptionException      [CONTEXT]      private  void  init()  {  eatTheRest  =  false;  tokens.clear();      [BUGGY]  tokens.clear();  currentOption  =  new  TokenBuffer(tokens.size());  [BUGGY]      currentOption  =  null;  }  [CLASS]  PosixParser  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  ArrayList  tokens  Options  options  Option  currentOption  boolean  eatTheRest  	projects/Cli2/src/java/org/apache/commons/cli/PosixParser.java	1.0	53	53	1	replace	tokens.clear();  currentOption  =  new  TokenBuffer(tokens.size());	          tokens.clear();    currentOption    =    null;    TokenBuffer    tokens    =    new    TokenBuffer(tokens.size());    	non-compiled	[CE]  cannot  find  symbol	129	None	replace
943	[BUG]  [BUGGY]  tokens.addAll(tokens.values());  [CE]  cannot  find  symbol  [FE]          UnrecognizedOptionException      [CONTEXT]      private  void  init()  {  eatTheRest  =  false;  tokens.clear();      [BUGGY]  tokens.addAll(tokens.values());  [BUGGY]      currentOption  =  null;  }  [CLASS]  PosixParser  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  ArrayList  tokens  Options  options  Option  currentOption  boolean  eatTheRest  	projects/Cli2/src/java/org/apache/commons/cli/PosixParser.java	1.0	53	53	1	replace	tokens.addAll(tokens.values());	          tokens.clear();    currentOption    =    null;    ArrayList    <    Option>    tokens    =    new    ArrayList    <    Option>(tokens.size());    	non-compiled	[CE]  cannot  find  symbol	54	None	replace
944	[BUG]  [BUGGY]  [FE]  UnrecognizedOptionException  [FE]    UnrecognizedOptionException    [CONTEXT]      private  void  init()  {  eatTheRest  =  false;  tokens.clear();      [BUGGY]          eatTheRest    =    false;    tokens.clear();    tokens.clear();  eatTheRest  =  false;  tokens.clear();  if(currentOption!=  null)  {  currentOption  =  null;  tokens.clear();  }  [BUGGY]      currentOption  =  null;  }  [CLASS]  PosixParser  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  ArrayList  tokens  Options  options  Option  currentOption  boolean  eatTheRest  	projects/Cli2/src/java/org/apache/commons/cli/PosixParser.java	1.0	53	53	1	add	                eatTheRest        =        false;        tokens.clear();        tokens.clear();    eatTheRest    =    false;    tokens.clear();    if(currentOption!=  null)  {  currentOption  =  null;  tokens.clear();  }	  	compilable	  [FE]  UnrecognizedOptionException  	6	1	add
945	[BUG]  [BUGGY]          eatTheRest    =    false;    tokens.clear();    tokens.clear();  eatTheRest  =  false;  tokens.clear();  if(currentOption!=  null)  {  currentOption  =  null;  tokens.clear();  }  [FE]  UnrecognizedOptionException  [FE]    UnrecognizedOptionException    [CONTEXT]      private  void  init()  {  eatTheRest  =  false;  tokens.clear();      [BUGGY]          eatTheRest    =    false;    tokens.clear();    tokens.clear();  eatTheRest  =  false;  tokens.clear();  if(currentOption!=  null)  {  currentOption  =  null;  tokens.clear();  }  [BUGGY]      currentOption  =  null;  }  [CLASS]  PosixParser  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  ArrayList  tokens  Options  options  Option  currentOption  boolean  eatTheRest  	projects/Cli2/src/java/org/apache/commons/cli/PosixParser.java	1.0	53	53	1	replace	                eatTheRest        =        false;        tokens.clear();        tokens.clear();    eatTheRest    =    false;    tokens.clear();    if(currentOption!=  null)  {  currentOption  =  null;  tokens.clear();  }	  	compilable	  [FE]  UnrecognizedOptionException  	6	1	add
946	[BUG]  [BUGGY]  [FE]  IllegalArgumentException  [FE]      UnrecognizedOptionException    [CONTEXT]      private  void  init()  {  eatTheRest  =  false;  tokens.clear();      [BUGGY]          eatTheRest    =    false;    tokens.clear();    tokens.clear();  eatTheRest  =  false;  tokens.clear();  if(!eatTheRest)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      currentOption  =  null;  }  [CLASS]  PosixParser  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  ArrayList  tokens  Options  options  Option  currentOption  boolean  eatTheRest  	projects/Cli2/src/java/org/apache/commons/cli/PosixParser.java	1.0	53	53	1	add	                eatTheRest        =        false;        tokens.clear();        tokens.clear();    eatTheRest    =    false;    tokens.clear();    if(!eatTheRest)  {  throw  new  IllegalArgumentException( " ");  }	  	compilable	  [FE]  IllegalArgumentException  	6	1	add
947	[BUG]  [BUGGY]          eatTheRest    =    false;    tokens.clear();    tokens.clear();  eatTheRest  =  false;  tokens.clear();  if(!eatTheRest)  {  throw  new  IllegalArgumentException( " ");  }  [FE]  IllegalArgumentException  [FE]      UnrecognizedOptionException    [CONTEXT]      private  void  init()  {  eatTheRest  =  false;  tokens.clear();      [BUGGY]          eatTheRest    =    false;    tokens.clear();    tokens.clear();  eatTheRest  =  false;  tokens.clear();  if(!eatTheRest)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      currentOption  =  null;  }  [CLASS]  PosixParser  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  ArrayList  tokens  Options  options  Option  currentOption  boolean  eatTheRest  	projects/Cli2/src/java/org/apache/commons/cli/PosixParser.java	1.0	53	53	1	replace	                eatTheRest        =        false;        tokens.clear();        tokens.clear();    eatTheRest    =    false;    tokens.clear();    if(!eatTheRest)  {  throw  new  IllegalArgumentException( " ");  }	  	compilable	  [FE]  IllegalArgumentException  	6	1	add
948	[BUG]  [BUGGY]  currentOption  =  options.cloneOption(tokens);  [CE]  cannot  find  symbol  [FE]            UnrecognizedOptionException      [CONTEXT]      private  void  init()  {  eatTheRest  =  false;  tokens.clear();      [BUGGY]  currentOption  =  options.cloneOption(tokens);  [BUGGY]      }  [CLASS]  PosixParser  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  ArrayList  tokens  Options  options  Option  currentOption  boolean  eatTheRest  	projects/Cli2/src/java/org/apache/commons/cli/PosixParser.java	1.0	53	53	1	replace	currentOption  =  options.cloneOption(tokens);	  currentOption    =    options.cloneOption();    	non-compiled	[CE]  cannot  find  symbol	117	None	replace
949	[BUG]  [BUGGY]          ArrayList    tokens    =    new    ArrayList();    Option  currentOption  =  options.getOption(null);  ArrayList  tokens  =  new  ArrayList();  Option  option  =  options.getOption(null);  [CE]  variable  tokens  is  already  defined  in  method  init()  [FE]    NullPointerException    [CONTEXT]      private  void  init()  {  eatTheRest  =  false;  tokens.clear();      [BUGGY]          ArrayList    tokens    =    new    ArrayList();    Option  currentOption  =  options.getOption(null);  ArrayList  tokens  =  new  ArrayList();  Option  option  =  options.getOption(null);  [BUGGY]      currentOption  =  null;  }  [CLASS]  PosixParser  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  ArrayList  tokens  Options  options  Option  currentOption  boolean  eatTheRest  	projects/Cli2/src/java/org/apache/commons/cli/PosixParser.java	1.0	53	53	1	replace	                ArrayList        tokens        =        new        ArrayList();        Option    currentOption    =    options.getOption(null);    ArrayList  tokens  =  new  ArrayList();  Option  option  =  options.getOption(null);	  	non-compiled	[CE]  variable  tokens  is  already  defined  in  method  init()	139	None	add
950	[BUG]  [BUGGY]  [FE]  UnrecognizedOptionException  [FE]    UnrecognizedOptionException    [CONTEXT]      private  void  init()  {  eatTheRest  =  false;  tokens.clear();      [BUGGY]  if(eatTheRest)  {  tokens.clear();  currentOption  =  null;  eatTheRest  =  false;  tokens.clear();  currentOption  =  null;  }  [BUGGY]      currentOption  =  null;  }  [CLASS]  PosixParser  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  ArrayList  tokens  Options  options  Option  currentOption  boolean  eatTheRest  	projects/Cli2/src/java/org/apache/commons/cli/PosixParser.java	1.0	53	53	1	add	if(eatTheRest)  {  tokens.clear();  currentOption  =  null;  eatTheRest  =  false;  tokens.clear();  currentOption  =  null;  }	          tokens.clear();    currentOption    =    null;    eatTheRest    =    false;    tokens.clear();    currentOption    =    null;    	compilable	  [FE]  UnrecognizedOptionException  	158	1	replace
951	[BUG]  [BUGGY]  if(eatTheRest)  {  tokens.clear();  currentOption  =  null;  eatTheRest  =  false;  tokens.clear();  currentOption  =  null;  }  [FE]  UnrecognizedOptionException  [FE]    UnrecognizedOptionException    [CONTEXT]      private  void  init()  {  eatTheRest  =  false;  tokens.clear();      [BUGGY]  if(eatTheRest)  {  tokens.clear();  currentOption  =  null;  eatTheRest  =  false;  tokens.clear();  currentOption  =  null;  }  [BUGGY]      currentOption  =  null;  }  [CLASS]  PosixParser  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  ArrayList  tokens  Options  options  Option  currentOption  boolean  eatTheRest  	projects/Cli2/src/java/org/apache/commons/cli/PosixParser.java	1.0	53	53	1	replace	if(eatTheRest)  {  tokens.clear();  currentOption  =  null;  eatTheRest  =  false;  tokens.clear();  currentOption  =  null;  }	          tokens.clear();    currentOption    =    null;    eatTheRest    =    false;    tokens.clear();    currentOption    =    null;    	compilable	  [FE]  UnrecognizedOptionException  	158	1	replace
952	[BUG]  [BUGGY]  tokens.addAll( "-- "  +  this.eatTheRest);  [CE]  no  suitable  method  found  for  addAll(String)  [FE]        ComparisonFailure      [CONTEXT]      private  void  init()  {  eatTheRest  =  false;  tokens.clear();      [BUGGY]  tokens.addAll( "-- "  +  this.eatTheRest);  [BUGGY]      currentOption  =  null;  }  [CLASS]  PosixParser  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  ArrayList  tokens  Options  options  Option  currentOption  boolean  eatTheRest  	projects/Cli2/src/java/org/apache/commons/cli/PosixParser.java	1.0	53	53	1	replace	tokens.addAll( "-- "  +  this.eatTheRest);	  tokens.addAll(   "--   ");    	non-compiled	[CE]  no  suitable  method  found  for  addAll(String)	164	None	replace
953	[BUG]  [BUGGY]  [FE]  UnrecognizedOptionException  [FE]    UnrecognizedOptionException    [CONTEXT]      private  void  init()  {  eatTheRest  =  false;  tokens.clear();      [BUGGY]  if(eatTheRest)  {  currentOption  =  Option.OK_STANDARD;  tokens.clear();  }  [BUGGY]      }  [CLASS]  PosixParser  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  ArrayList  tokens  Options  options  Option  currentOption  boolean  eatTheRest  	projects/Cli2/src/java/org/apache/commons/cli/PosixParser.java	1.0	53	53	1	add	if(eatTheRest)  {  currentOption  =  Option.OK_STANDARD;  tokens.clear();  }	  currentOption    =    Option.OK_STANDARD;    tokens.clear();    	compilable	  [FE]  UnrecognizedOptionException  	152	1	replace
954	[BUG]  [BUGGY]  if(eatTheRest)  {  currentOption  =  Option.OK_STANDARD;  tokens.clear();  }  [FE]  UnrecognizedOptionException  [FE]    UnrecognizedOptionException    [CONTEXT]      private  void  init()  {  eatTheRest  =  false;  tokens.clear();      [BUGGY]  if(eatTheRest)  {  currentOption  =  Option.OK_STANDARD;  tokens.clear();  }  [BUGGY]      }  [CLASS]  PosixParser  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  ArrayList  tokens  Options  options  Option  currentOption  boolean  eatTheRest  	projects/Cli2/src/java/org/apache/commons/cli/PosixParser.java	1.0	53	53	1	replace	if(eatTheRest)  {  currentOption  =  Option.OK_STANDARD;  tokens.clear();  }	  currentOption    =    Option.OK_STANDARD;    tokens.clear();    	compilable	  [FE]  UnrecognizedOptionException  	152	1	replace
955	[BUG]  [BUGGY]  [FE]  UnrecognizedOptionException  [FE]      UnrecognizedOptionException    [CONTEXT]      private  void  init()  {  eatTheRest  =  false;  tokens.clear();      [BUGGY]  if(eatTheRest)  {  currentOption  =  Option.OK_STANDARD;  tokens.clear();  }  else  {  throw  new  IllegalStateException( " ");  }  [BUGGY]      }  [CLASS]  PosixParser  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  ArrayList  tokens  Options  options  Option  currentOption  boolean  eatTheRest  	projects/Cli2/src/java/org/apache/commons/cli/PosixParser.java	1.0	53	53	1	add	if(eatTheRest)  {  currentOption  =  Option.OK_STANDARD;  tokens.clear();  }  else  {  throw  new  IllegalStateException( " ");  }	  currentOption    =    Option.OK_STANDARD;    tokens.clear();    	compilable	  [FE]  UnrecognizedOptionException  	152	1	replace
956	[BUG]  [BUGGY]  if(eatTheRest)  {  currentOption  =  Option.OK_STANDARD;  tokens.clear();  }  else  {  throw  new  IllegalStateException( " ");  }  [FE]  UnrecognizedOptionException  [FE]      UnrecognizedOptionException    [CONTEXT]      private  void  init()  {  eatTheRest  =  false;  tokens.clear();      [BUGGY]  if(eatTheRest)  {  currentOption  =  Option.OK_STANDARD;  tokens.clear();  }  else  {  throw  new  IllegalStateException( " ");  }  [BUGGY]      }  [CLASS]  PosixParser  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  ArrayList  tokens  Options  options  Option  currentOption  boolean  eatTheRest  	projects/Cli2/src/java/org/apache/commons/cli/PosixParser.java	1.0	53	53	1	replace	if(eatTheRest)  {  currentOption  =  Option.OK_STANDARD;  tokens.clear();  }  else  {  throw  new  IllegalStateException( " ");  }	  currentOption    =    Option.OK_STANDARD;    tokens.clear();    	compilable	  [FE]  UnrecognizedOptionException  	152	1	replace
957	[BUG]  [BUGGY]          tokens.clear();    currentOption    =    null;    if(eatTheRest)  {  tokens.clear();  currentOption  =  null;  }  if(eatTheRest)  {  tokens.clear();  currentOption  =  null;  if(eatTheRest)  {  tokens.clear();  currentOption  =  null;  }  [CE]  illegal  start  of  expression  [FE]    UnrecognizedOptionException    [CONTEXT]      private  void  init()  {  eatTheRest  =  false;  tokens.clear();      [BUGGY]          tokens.clear();    currentOption    =    null;    if(eatTheRest)  {  tokens.clear();  currentOption  =  null;  }  if(eatTheRest)  {  tokens.clear();  currentOption  =  null;  if(eatTheRest)  {  tokens.clear();  currentOption  =  null;  }  [BUGGY]      currentOption  =  null;  }  [CLASS]  PosixParser  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  ArrayList  tokens  Options  options  Option  currentOption  boolean  eatTheRest  	projects/Cli2/src/java/org/apache/commons/cli/PosixParser.java	1.0	53	53	1	replace	                tokens.clear();        currentOption        =        null;        if(eatTheRest)    {    tokens.clear();    currentOption    =    null;    }    if(eatTheRest)  {  tokens.clear();  currentOption  =  null;  if(eatTheRest)  {  tokens.clear();  currentOption  =  null;  }	  	non-compiled	[CE]  illegal  start  of  expression	155	None	add
958	[BUG]  [BUGGY]          tokens.clear();    currentOption    =    null;    if(eatTheRest)  {  tokens.clear();  currentOption  =  null;  }  if(!eatTheRest)  {  tokens.clear();  currentOption  =  null;  if(eatTheRest)  {  tokens.clear();  currentOption  =  null;  }  [CE]  illegal  start  of  expression  [FE]      UnrecognizedOptionException    [CONTEXT]      private  void  init()  {  eatTheRest  =  false;  tokens.clear();      [BUGGY]          tokens.clear();    currentOption    =    null;    if(eatTheRest)  {  tokens.clear();  currentOption  =  null;  }  if(!eatTheRest)  {  tokens.clear();  currentOption  =  null;  if(eatTheRest)  {  tokens.clear();  currentOption  =  null;  }  [BUGGY]      currentOption  =  null;  }  [CLASS]  PosixParser  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  ArrayList  tokens  Options  options  Option  currentOption  boolean  eatTheRest  	projects/Cli2/src/java/org/apache/commons/cli/PosixParser.java	1.0	53	53	1	replace	                tokens.clear();        currentOption        =        null;        if(eatTheRest)    {    tokens.clear();    currentOption    =    null;    }    if(!eatTheRest)  {  tokens.clear();  currentOption  =  null;  if(eatTheRest)  {  tokens.clear();  currentOption  =  null;  }	  	non-compiled	[CE]  illegal  start  of  expression	155	None	add
959	[BUG]  [BUGGY]  if(!eatTheRest)  {  tokens.addAll(tokens);  currentOption  =  null;  }  else  {  options.setOption(null);  }  [CE]  cannot  find  symbol  [FE]          UnrecognizedOptionException      [CONTEXT]      private  void  init()  {  eatTheRest  =  false;  tokens.clear();      [BUGGY]  if(!eatTheRest)  {  tokens.addAll(tokens);  currentOption  =  null;  }  else  {  options.setOption(null);  }  [BUGGY]      currentOption  =  null;  }  [CLASS]  PosixParser  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  ArrayList  tokens  Options  options  Option  currentOption  boolean  eatTheRest  	projects/Cli2/src/java/org/apache/commons/cli/PosixParser.java	1.0	53	53	1	replace	if(!eatTheRest)  {  tokens.addAll(tokens);  currentOption  =  null;  }  else  {  options.setOption(null);  }	  if(!eatTheRest)    {    tokens.clear();    currentOption    =    null;    }    else    {    options.setOption(null);    }    	non-compiled	[CE]  cannot  find  symbol	12	None	replace
960	[BUG]  [BUGGY]  currentOption  =  new  Option(tokens.size());  [CE]  no  suitable  constructor  found  for  Option(int)  [FE]                UnrecognizedOptionException      [CONTEXT]      private  void  init()  {  eatTheRest  =  false;  tokens.clear();      [BUGGY]  currentOption  =  new  Option(tokens.size());  [BUGGY]      }  [CLASS]  PosixParser  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  ArrayList  tokens  Options  options  Option  currentOption  boolean  eatTheRest  	projects/Cli2/src/java/org/apache/commons/cli/PosixParser.java	1.0	53	53	1	replace	currentOption  =  new  Option(tokens.size());	  currentOption    =    options.options;    	non-compiled	[CE]  no  suitable  constructor  found  for  Option(int)	30	None	replace
961	[BUG]  [BUGGY]          tokens.clear();    ArrayList  tokens  =  new  ArrayList  <  Option>();  options.clear();  ArrayList  <  Option>  tokens  =  new  ArrayList  <  Option>();  [CE]  cannot  find  symbol  [FE]    UnrecognizedOptionException    [CONTEXT]      private  void  init()  {  eatTheRest  =  false;  tokens.clear();      [BUGGY]          tokens.clear();    ArrayList  tokens  =  new  ArrayList  <  Option>();  options.clear();  ArrayList  <  Option>  tokens  =  new  ArrayList  <  Option>();  [BUGGY]      currentOption  =  null;  }  [CLASS]  PosixParser  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  ArrayList  tokens  Options  options  Option  currentOption  boolean  eatTheRest  	projects/Cli2/src/java/org/apache/commons/cli/PosixParser.java	1.0	53	53	1	replace	                tokens.clear();        ArrayList    tokens    =    new    ArrayList    <    Option>();    options.clear();  ArrayList  <  Option>  tokens  =  new  ArrayList  <  Option>();	  	non-compiled	[CE]  cannot  find  symbol	105	None	add
962	[BUG]  [BUGGY]  [FE]  UnrecognizedOptionException  [FE]    UnrecognizedOptionException    [CONTEXT]      private  void  init()  {  eatTheRest  =  false;  tokens.clear();      [BUGGY]  if(eatTheRest)  {  currentOption  =  Option.OK_STANDARD;  tokens.clear();  currentOption  =  Option.OK_STANDARD;  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      }  [CLASS]  PosixParser  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  ArrayList  tokens  Options  options  Option  currentOption  boolean  eatTheRest  	projects/Cli2/src/java/org/apache/commons/cli/PosixParser.java	1.0	53	53	1	add	if(eatTheRest)  {  currentOption  =  Option.OK_STANDARD;  tokens.clear();  currentOption  =  Option.OK_STANDARD;  }  else  {  throw  new  IllegalArgumentException( " ");  }	  currentOption    =    Option.OK_STANDARD;    tokens.clear();    currentOption    =    Option.OK_STANDARD;    	compilable	  [FE]  UnrecognizedOptionException  	84	1	replace
963	[BUG]  [BUGGY]  if(eatTheRest)  {  currentOption  =  Option.OK_STANDARD;  tokens.clear();  currentOption  =  Option.OK_STANDARD;  }  else  {  throw  new  IllegalArgumentException( " ");  }  [FE]  UnrecognizedOptionException  [FE]    UnrecognizedOptionException    [CONTEXT]      private  void  init()  {  eatTheRest  =  false;  tokens.clear();      [BUGGY]  if(eatTheRest)  {  currentOption  =  Option.OK_STANDARD;  tokens.clear();  currentOption  =  Option.OK_STANDARD;  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      }  [CLASS]  PosixParser  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  ArrayList  tokens  Options  options  Option  currentOption  boolean  eatTheRest  	projects/Cli2/src/java/org/apache/commons/cli/PosixParser.java	1.0	53	53	1	replace	if(eatTheRest)  {  currentOption  =  Option.OK_STANDARD;  tokens.clear();  currentOption  =  Option.OK_STANDARD;  }  else  {  throw  new  IllegalArgumentException( " ");  }	  currentOption    =    Option.OK_STANDARD;    tokens.clear();    currentOption    =    Option.OK_STANDARD;    	compilable	  [FE]  UnrecognizedOptionException  	84	1	replace
964	[BUG]  [BUGGY]  [FE]  UnrecognizedOptionException  [FE]    UnrecognizedOptionException    [CONTEXT]      private  void  init()  {  eatTheRest  =  false;  tokens.clear();      [BUGGY]  currentOption    =    Option.OK_STANDARD;    if(currentOption!=  null)  {  currentOption  =  Option.OK_STANDARD;  }  if(tokens!=  null)  {  tokens.clear();  }  [BUGGY]      }  [CLASS]  PosixParser  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  ArrayList  tokens  Options  options  Option  currentOption  boolean  eatTheRest  	projects/Cli2/src/java/org/apache/commons/cli/PosixParser.java	1.0	53	53	1	add	currentOption        =        Option.OK_STANDARD;        if(currentOption!=    null)    {    currentOption    =    Option.OK_STANDARD;    }    if(tokens!=  null)  {  tokens.clear();  }	  	compilable	  [FE]  UnrecognizedOptionException  	85	1	add
965	[BUG]  [BUGGY]  currentOption    =    Option.OK_STANDARD;    if(currentOption!=  null)  {  currentOption  =  Option.OK_STANDARD;  }  if(tokens!=  null)  {  tokens.clear();  }  [FE]  UnrecognizedOptionException  [FE]    UnrecognizedOptionException    [CONTEXT]      private  void  init()  {  eatTheRest  =  false;  tokens.clear();      [BUGGY]  currentOption    =    Option.OK_STANDARD;    if(currentOption!=  null)  {  currentOption  =  Option.OK_STANDARD;  }  if(tokens!=  null)  {  tokens.clear();  }  [BUGGY]      }  [CLASS]  PosixParser  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  ArrayList  tokens  Options  options  Option  currentOption  boolean  eatTheRest  	projects/Cli2/src/java/org/apache/commons/cli/PosixParser.java	1.0	53	53	1	replace	currentOption        =        Option.OK_STANDARD;        if(currentOption!=    null)    {    currentOption    =    Option.OK_STANDARD;    }    if(tokens!=  null)  {  tokens.clear();  }	  	compilable	  [FE]  UnrecognizedOptionException  	85	1	add
966	[BUG]  [BUGGY]  [FE]  UnrecognizedOptionException  [FE]      UnrecognizedOptionException    [CONTEXT]      private  void  init()  {  eatTheRest  =  false;  tokens.clear();      [BUGGY]  currentOption    =    Option.OK_STANDARD;    if(currentOption!=  null)  {  currentOption  =  Option.OK_STANDARD;  }  TokenBuffer  tokens  =  new  TokenBuffer(tokens.size());  tokens.clear();  [BUGGY]      }  [CLASS]  PosixParser  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  ArrayList  tokens  Options  options  Option  currentOption  boolean  eatTheRest  	projects/Cli2/src/java/org/apache/commons/cli/PosixParser.java	1.0	53	53	1	add	currentOption        =        Option.OK_STANDARD;        if(currentOption!=    null)    {    currentOption    =    Option.OK_STANDARD;    }    TokenBuffer  tokens  =  new  TokenBuffer(tokens.size());  tokens.clear();	  	compilable	  [FE]  UnrecognizedOptionException  	85	1	add
967	[BUG]  [BUGGY]  currentOption    =    Option.OK_STANDARD;    if(currentOption!=  null)  {  currentOption  =  Option.OK_STANDARD;  }  TokenBuffer  tokens  =  new  TokenBuffer(tokens.size());  tokens.clear();  [FE]  UnrecognizedOptionException  [FE]      UnrecognizedOptionException    [CONTEXT]      private  void  init()  {  eatTheRest  =  false;  tokens.clear();      [BUGGY]  currentOption    =    Option.OK_STANDARD;    if(currentOption!=  null)  {  currentOption  =  Option.OK_STANDARD;  }  TokenBuffer  tokens  =  new  TokenBuffer(tokens.size());  tokens.clear();  [BUGGY]      }  [CLASS]  PosixParser  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  ArrayList  tokens  Options  options  Option  currentOption  boolean  eatTheRest  	projects/Cli2/src/java/org/apache/commons/cli/PosixParser.java	1.0	53	53	1	replace	currentOption        =        Option.OK_STANDARD;        if(currentOption!=    null)    {    currentOption    =    Option.OK_STANDARD;    }    TokenBuffer  tokens  =  new  TokenBuffer(tokens.size());  tokens.clear();	  	compilable	  [FE]  UnrecognizedOptionException  	85	1	add
968	[BUG]  [BUGGY]  ArrayList  tokens  =  new  ArrayList(tokens.size());  Option  currentOption  =  options.getOption(options);  [CE]  method  getOption  in  class  Options  cannot  be  applied  to  given  types;  [FE]            UnrecognizedOptionException      [CONTEXT]      private  void  init()  {  eatTheRest  =  false;  tokens.clear();      [BUGGY]  ArrayList  tokens  =  new  ArrayList(tokens.size());  Option  currentOption  =  options.getOption(options);  [BUGGY]      currentOption  =  null;  }  [CLASS]  PosixParser  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  ArrayList  tokens  Options  options  Option  currentOption  boolean  eatTheRest  	projects/Cli2/src/java/org/apache/commons/cli/PosixParser.java	1.0	53	53	1	replace	ArrayList  tokens  =  new  ArrayList(tokens.size());  Option  currentOption  =  options.getOption(options);	          ArrayList    tokens    =    new    ArrayList();    Option    currentOption    =    options.getOption(options);    	non-compiled	[CE]  method  getOption  in  class  Options  cannot  be  applied  to  given  types;	138	None	replace
969	[BUG]  [BUGGY]  [FE]  UnrecognizedOptionException  [FE]    UnrecognizedOptionException    [CONTEXT]      private  void  init()  {  eatTheRest  =  false;  tokens.clear();      [BUGGY]  tokens.add(   "n   ");  tokens.add( ".n   ");  [BUGGY]      currentOption  =  null;  }  [CLASS]  PosixParser  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  ArrayList  tokens  Options  options  Option  currentOption  boolean  eatTheRest  	projects/Cli2/src/java/org/apache/commons/cli/PosixParser.java	1.0	53	53	1	add	tokens.add(   "n   ");    tokens.add( ".n   ");	  	compilable	  [FE]  UnrecognizedOptionException  	96	1	add
970	[BUG]  [BUGGY]  tokens.add(   "n   ");  tokens.add( ".n   ");  [FE]  UnrecognizedOptionException  [FE]    UnrecognizedOptionException    [CONTEXT]      private  void  init()  {  eatTheRest  =  false;  tokens.clear();      [BUGGY]  tokens.add(   "n   ");  tokens.add( ".n   ");  [BUGGY]      currentOption  =  null;  }  [CLASS]  PosixParser  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  ArrayList  tokens  Options  options  Option  currentOption  boolean  eatTheRest  	projects/Cli2/src/java/org/apache/commons/cli/PosixParser.java	1.0	53	53	1	replace	tokens.add(   "n   ");    tokens.add( ".n   ");	  	compilable	  [FE]  UnrecognizedOptionException  	96	1	add
971	[BUG]  [BUGGY]  tokens.add(   "n   ");  tokens.add( "n   "));  [CE]  [FE]      UnrecognizedOptionException    [CONTEXT]      private  void  init()  {  eatTheRest  =  false;  tokens.clear();      [BUGGY]  tokens.add(   "n   ");  tokens.add( "n   "));  [BUGGY]      currentOption  =  null;  }  [CLASS]  PosixParser  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  ArrayList  tokens  Options  options  Option  currentOption  boolean  eatTheRest  	projects/Cli2/src/java/org/apache/commons/cli/PosixParser.java	1.0	53	53	1	replace	tokens.add(   "n   ");    tokens.add( "n   "));	  	non-compiled	[CE]  	96	None	add
