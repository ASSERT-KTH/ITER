bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number
2	[BUG]  [BUGGY]  [FE]  UnrecognizedOptionException  test  [CONTEXT]    [BUGGY]  private  final  ArrayList  tokens  =  new  ArrayList();  [BUGGY]    [CLASS]  PosixParser  [VARIABLES]  	projects/Cli2/src/java/org/apache/commons/cli/PosixParser.java	1.0	33	33	1	add	private  final  ArrayList  tokens  =  new  ArrayList();	private  ArrayList  tokens  =  new  ArrayList();  	compilable	  [FE]  UnrecognizedOptionException  test	2	1
3	[BUG]  [BUGGY]  private  final  ArrayList  tokens  =  new  ArrayList();  [FE]  UnrecognizedOptionException  test  [CONTEXT]    [BUGGY]  private  final  ArrayList  tokens  =  new  ArrayList();  [BUGGY]    [CLASS]  PosixParser  [VARIABLES]  	projects/Cli2/src/java/org/apache/commons/cli/PosixParser.java	1.0	33	33	1	replace	private  final  ArrayList  tokens  =  new  ArrayList();	private  ArrayList  tokens  =  new  ArrayList();  	compilable	  [FE]  UnrecognizedOptionException  test	2	1
3	[BUG]  [BUGGY]  private  List  tokens  =  new  ArrayList();  [CE]  cannot  find  symbol  [CONTEXT]    [BUGGY]  private  List  tokens  =  new  ArrayList();  [BUGGY]    [CLASS]  PosixParser  [VARIABLES]  	projects/Cli2/src/java/org/apache/commons/cli/PosixParser.java	1.0	33	33	1	replace	private  List  tokens  =  new  ArrayList();	private  ArrayList  tokens  =  new  ArrayList();  	non-compiled	[CE]  cannot  find  symbol	2	None
4	[BUG]  [BUGGY]  [FE]  UnrecognizedOptionException  test  [CONTEXT]    [BUGGY]  protected  ArrayList  tokens  =  new  ArrayList();  [BUGGY]    [CLASS]  PosixParser  [VARIABLES]  	projects/Cli2/src/java/org/apache/commons/cli/PosixParser.java	1.0	33	33	1	add	protected  ArrayList  tokens  =  new  ArrayList();	private  ArrayList  tokens  =  new  ArrayList();  	compilable	  [FE]  UnrecognizedOptionException  test	2	1
5	[BUG]  [BUGGY]  protected  ArrayList  tokens  =  new  ArrayList();  [FE]  UnrecognizedOptionException  test  [CONTEXT]    [BUGGY]  protected  ArrayList  tokens  =  new  ArrayList();  [BUGGY]    [CLASS]  PosixParser  [VARIABLES]  	projects/Cli2/src/java/org/apache/commons/cli/PosixParser.java	1.0	33	33	1	replace	protected  ArrayList  tokens  =  new  ArrayList();	private  ArrayList  tokens  =  new  ArrayList();  	compilable	  [FE]  UnrecognizedOptionException  test	2	1
5	[BUG]  [BUGGY]    [CE]  cannot  find  symbol  tokens  [CONTEXT]    [BUGGY]    [BUGGY]    [CLASS]  PosixParser  [VARIABLES]  	projects/Cli2/src/java/org/apache/commons/cli/PosixParser.java	1.0	33	33	1	replace	  	private  ArrayList  tokens  =  new  ArrayList();  	non-compiled	[CE]  cannot  find  symbol  tokens	2	None
11	[BUG]  [BUGGY]    tokens.add(new  ArrayList());  [CE]  <identifier>  expected  [CONTEXT]    [BUGGY]    tokens.add(new  ArrayList());  [BUGGY]  private  ArrayList  tokens  =  new  ArrayList();  [CLASS]  PosixParser  [VARIABLES]  	projects/Cli2/src/java/org/apache/commons/cli/PosixParser.java	1.0	33	33	1	replace	    tokens.add(new  ArrayList());		non-compiled	[CE]  <identifier>  expected	3	None
12	[BUG]  [BUGGY]    return  new  ArrayList();  [CE]  illegal  start  of  type  [CONTEXT]    [BUGGY]    return  new  ArrayList();  [BUGGY]  private  ArrayList  tokens  =  new  ArrayList();  [CLASS]  PosixParser  [VARIABLES]  	projects/Cli2/src/java/org/apache/commons/cli/PosixParser.java	1.0	33	33	1	replace	    return  new  ArrayList();		non-compiled	[CE]  illegal  start  of  type	3	None
13	[BUG]  [BUGGY]    tokens.add( "n ");  [CE]  <identifier>  expected  [CONTEXT]    [BUGGY]    tokens.add( "n ");  [BUGGY]  private  ArrayList  tokens  =  new  ArrayList();  [CLASS]  PosixParser  [VARIABLES]  	projects/Cli2/src/java/org/apache/commons/cli/PosixParser.java	1.0	33	33	1	replace	    tokens.add( "n ");		non-compiled	[CE]  <identifier>  expected	3	None
14	[BUG]  [BUGGY]    tokens.add( "[ ");  [CE]  <identifier>  expected  [CONTEXT]    [BUGGY]    tokens.add( "[ ");  [BUGGY]  private  ArrayList  tokens  =  new  ArrayList();  [CLASS]  PosixParser  [VARIABLES]  	projects/Cli2/src/java/org/apache/commons/cli/PosixParser.java	1.0	33	33	1	replace	    tokens.add( "[ ");		non-compiled	[CE]  <identifier>  expected	3	None
15	[BUG]  [BUGGY]    tokens.addAll( "n ");  [CE]  <identifier>  expected  [CONTEXT]    [BUGGY]    tokens.addAll( "n ");  [BUGGY]  private  ArrayList  tokens  =  new  ArrayList();  [CLASS]  PosixParser  [VARIABLES]  	projects/Cli2/src/java/org/apache/commons/cli/PosixParser.java	1.0	33	33	1	replace	    tokens.addAll( "n ");		non-compiled	[CE]  <identifier>  expected	3	None
21	[BUG]  [BUGGY]    tokens.add(token);  [CE]  cannot  find  symbol  token  [CONTEXT]  {  init();  [BUGGY]    tokens.add(token);  [BUGGY]  this.options  =  options;  Iterator  iter  =  Arrays.asList(arguments).iterator();  String  token;  while  (iter.hasNext())  {  token  =  (String)  iter.next();  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  ArrayList  tokens  Iterator  iter  Option  currentOption  String[]  arguments  String  token  int  tokenLength  	projects/Cli2/src/java/org/apache/commons/cli/PosixParser.java	1.0	98	98	1	replace	    tokens.add(token);		non-compiled	[CE]  cannot  find  symbol  token	15	None
22	[BUG]  [BUGGY]    tokens.add(token);  tokenLength++;  [CE]  cannot  find  symbol  token  [CONTEXT]  {  init();  [BUGGY]    tokens.add(token);  tokenLength++;  [BUGGY]  this.options  =  options;  Iterator  iter  =  Arrays.asList(arguments).iterator();  String  token;  while  (iter.hasNext())  {  token  =  (String)  iter.next();  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  ArrayList  tokens  Iterator  iter  Option  currentOption  String[]  arguments  String  token  int  tokenLength  	projects/Cli2/src/java/org/apache/commons/cli/PosixParser.java	1.0	98	98	1	replace	    tokens.add(token);  tokenLength++;		non-compiled	[CE]  cannot  find  symbol  token	15	None
23	[BUG]  [BUGGY]    tokens.add(token);  currentOption  =  options.getOption(token);  [CE]  cannot  find  symbol  token  [CONTEXT]  {  init();  [BUGGY]    tokens.add(token);  currentOption  =  options.getOption(token);  [BUGGY]  this.options  =  options;  Iterator  iter  =  Arrays.asList(arguments).iterator();  String  token;  while  (iter.hasNext())  {  token  =  (String)  iter.next();  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  ArrayList  tokens  Iterator  iter  Option  currentOption  String[]  arguments  String  token  int  tokenLength  	projects/Cli2/src/java/org/apache/commons/cli/PosixParser.java	1.0	98	98	1	replace	    tokens.add(token);  currentOption  =  options.getOption(token);		non-compiled	[CE]  cannot  find  symbol  token	15	None
24	[BUG]  [BUGGY]    tokenLength  =  token.length();  [CE]  cannot  find  symbol  tokenLength  [CONTEXT]  {  init();  [BUGGY]    tokenLength  =  token.length();  [BUGGY]  this.options  =  options;  Iterator  iter  =  Arrays.asList(arguments).iterator();  String  token;  while  (iter.hasNext())  {  token  =  (String)  iter.next();  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  ArrayList  tokens  Iterator  iter  Option  currentOption  String[]  arguments  String  token  int  tokenLength  	projects/Cli2/src/java/org/apache/commons/cli/PosixParser.java	1.0	98	98	1	replace	    tokenLength  =  token.length();		non-compiled	[CE]  cannot  find  symbol  tokenLength	15	None
25	[BUG]  [BUGGY]    tokens.add(token);  currentOption  =  options.iterator();  [CE]  cannot  find  symbol  token  [CONTEXT]  {  init();  [BUGGY]    tokens.add(token);  currentOption  =  options.iterator();  [BUGGY]  this.options  =  options;  Iterator  iter  =  Arrays.asList(arguments).iterator();  String  token;  while  (iter.hasNext())  {  token  =  (String)  iter.next();  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  ArrayList  tokens  Iterator  iter  Option  currentOption  String[]  arguments  String  token  int  tokenLength  	projects/Cli2/src/java/org/apache/commons/cli/PosixParser.java	1.0	98	98	1	replace	    tokens.add(token);  currentOption  =  options.iterator();		non-compiled	[CE]  cannot  find  symbol  token	15	None
31	[BUG]  [BUGGY]  [FE]  UnrecognizedOptionException  test  [CONTEXT]  private  void  init()  {  eatTheRest  =  false;  tokens.clear();  [BUGGY]    tokens.clear();  [BUGGY]  currentOption  =  null;  }  [CLASS]  PosixParser  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  ArrayList  tokens  Options  options  Option  currentOption  boolean  eatTheRest  	projects/Cli2/src/java/org/apache/commons/cli/PosixParser.java	1.0	53	53	1	add	    tokens.clear();		compilable	  [FE]  UnrecognizedOptionException  test	9	1
32	[BUG]  [BUGGY]    tokens.clear();  [FE]  UnrecognizedOptionException  test  [CONTEXT]  private  void  init()  {  eatTheRest  =  false;  tokens.clear();  [BUGGY]    tokens.clear();  [BUGGY]  currentOption  =  null;  }  [CLASS]  PosixParser  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  ArrayList  tokens  Options  options  Option  currentOption  boolean  eatTheRest  	projects/Cli2/src/java/org/apache/commons/cli/PosixParser.java	1.0	53	53	1	replace	    tokens.clear();		compilable	  [FE]  UnrecognizedOptionException  test	9	1
32	[BUG]  [BUGGY]  [FE]  ComparisonFailure  test  [CONTEXT]  private  void  init()  {  eatTheRest  =  false;  tokens.clear();  [BUGGY]    tokens.add( "-- ");  [BUGGY]  currentOption  =  null;  }  [CLASS]  PosixParser  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  ArrayList  tokens  Options  options  Option  currentOption  boolean  eatTheRest  	projects/Cli2/src/java/org/apache/commons/cli/PosixParser.java	1.0	53	53	1	add	    tokens.add( "-- ");		compilable	  [FE]  ComparisonFailure  test	9	1
33	[BUG]  [BUGGY]    tokens.add( "-- ");  [FE]  ComparisonFailure  test  [CONTEXT]  private  void  init()  {  eatTheRest  =  false;  tokens.clear();  [BUGGY]    tokens.add( "-- ");  [BUGGY]  currentOption  =  null;  }  [CLASS]  PosixParser  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  ArrayList  tokens  Options  options  Option  currentOption  boolean  eatTheRest  	projects/Cli2/src/java/org/apache/commons/cli/PosixParser.java	1.0	53	53	1	replace	    tokens.add( "-- ");		compilable	  [FE]  ComparisonFailure  test	9	1
33	[BUG]  [BUGGY]    tokens.clear();  currentOption  =  options.getOption(tokens);  [CE]  method  getOption  in  class  Options  cannot  be  applied  to  given  types;  [CONTEXT]  private  void  init()  {  eatTheRest  =  false;  tokens.clear();  [BUGGY]    tokens.clear();  currentOption  =  options.getOption(tokens);  [BUGGY]  currentOption  =  null;  }  [CLASS]  PosixParser  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  ArrayList  tokens  Options  options  Option  currentOption  boolean  eatTheRest  	projects/Cli2/src/java/org/apache/commons/cli/PosixParser.java	1.0	53	53	1	replace	    tokens.clear();  currentOption  =  options.getOption(tokens);		non-compiled	[CE]  method  getOption  in  class  Options  cannot  be  applied  to  given  types;	9	None
34	[BUG]  [BUGGY]  [FE]  ArrayIndexOutOfBoundsException  test  [CONTEXT]  private  void  init()  {  eatTheRest  =  false;  tokens.clear();  [BUGGY]    tokens.remove(tokens.size()  -  1);  [BUGGY]  currentOption  =  null;  }  [CLASS]  PosixParser  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  ArrayList  tokens  Options  options  Option  currentOption  boolean  eatTheRest  	projects/Cli2/src/java/org/apache/commons/cli/PosixParser.java	1.0	53	53	1	add	    tokens.remove(tokens.size()  -  1);		compilable	  [FE]  ArrayIndexOutOfBoundsException  test	9	1
35	[BUG]  [BUGGY]    tokens.remove(tokens.size()  -  1);  [FE]  ArrayIndexOutOfBoundsException  test  [CONTEXT]  private  void  init()  {  eatTheRest  =  false;  tokens.clear();  [BUGGY]    tokens.remove(tokens.size()  -  1);  [BUGGY]  currentOption  =  null;  }  [CLASS]  PosixParser  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  ArrayList  tokens  Options  options  Option  currentOption  boolean  eatTheRest  	projects/Cli2/src/java/org/apache/commons/cli/PosixParser.java	1.0	53	53	1	replace	    tokens.remove(tokens.size()  -  1);		compilable	  [FE]  ArrayIndexOutOfBoundsException  test	9	1
35	[BUG]  [BUGGY]    tokens.add( "-- ");  currentOption  =  options.getOption(tokens);  [CE]  method  getOption  in  class  Options  cannot  be  applied  to  given  types;  [CONTEXT]  private  void  init()  {  eatTheRest  =  false;  tokens.clear();  [BUGGY]    tokens.add( "-- ");  currentOption  =  options.getOption(tokens);  [BUGGY]  currentOption  =  null;  }  [CLASS]  PosixParser  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  ArrayList  tokens  Options  options  Option  currentOption  boolean  eatTheRest  	projects/Cli2/src/java/org/apache/commons/cli/PosixParser.java	1.0	53	53	1	replace	    tokens.add( "-- ");  currentOption  =  options.getOption(tokens);		non-compiled	[CE]  method  getOption  in  class  Options  cannot  be  applied  to  given  types;	9	None
42	[BUG]  [BUGGY]  while(iter.next())  {  [CE]  incompatible  types  [CONTEXT]  {  init();  this.options  =  options;  Iterator  iter  =  Arrays.asList(arguments).iterator();  String  token;    [BUGGY]  while(iter.next())  {  [BUGGY]  {  token  =  (String)  iter.next();  if  (token.startsWith( "-- "))  {  if  (token.indexOf('=')  !=  -1)  {  tokens.add(token.substring(0,  token.indexOf('=')));  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  ArrayList  tokens  Iterator  iter  Option  currentOption  String[]  arguments  String  token  int  tokenLength  	projects/Cli2/src/java/org/apache/commons/cli/PosixParser.java	1.0	105	106	1	replace	while(iter.next())  {	while  (iter.hasNext())  {  	non-compiled	[CE]  incompatible  types	18	None
43	[BUG]  [BUGGY]  while(iter.isEmpty())  {  [CE]  cannot  find  symbol  [CONTEXT]  {  init();  this.options  =  options;  Iterator  iter  =  Arrays.asList(arguments).iterator();  String  token;    [BUGGY]  while(iter.isEmpty())  {  [BUGGY]  {  token  =  (String)  iter.next();  if  (token.startsWith( "-- "))  {  if  (token.indexOf('=')  !=  -1)  {  tokens.add(token.substring(0,  token.indexOf('=')));  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  ArrayList  tokens  Iterator  iter  Option  currentOption  String[]  arguments  String  token  int  tokenLength  	projects/Cli2/src/java/org/apache/commons/cli/PosixParser.java	1.0	105	106	1	replace	while(iter.isEmpty())  {	while  (iter.hasNext())  {  	non-compiled	[CE]  cannot  find  symbol	18	None
45	[BUG]  [BUGGY]    [CE]  illegal  start  of  type  [CONTEXT]  {  init();  this.options  =  options;  Iterator  iter  =  Arrays.asList(arguments).iterator();  String  token;    [BUGGY]    [BUGGY]  {  token  =  (String)  iter.next();  if  (token.startsWith( "-- "))  {  if  (token.indexOf('=')  !=  -1)  {  tokens.add(token.substring(0,  token.indexOf('=')));  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  ArrayList  tokens  Iterator  iter  Option  currentOption  String[]  arguments  String  token  int  tokenLength  	projects/Cli2/src/java/org/apache/commons/cli/PosixParser.java	1.0	105	106	1	replace	  	while  (iter.hasNext())  {  	non-compiled	[CE]  illegal  start  of  type	18	None
51	[BUG]  [BUGGY]    token  =  token.toLowerCase();  token  =  token.toLowerCase();  [CE]  cannot  find  symbol  token  [CONTEXT]  {  [BUGGY]    token  =  token.toLowerCase();  token  =  token.toLowerCase();  [BUGGY]  init();  this.options  =  options;  Iterator  iter  =  Arrays.asList(arguments).iterator();  String  token;  while  (iter.hasNext())  {  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  ArrayList  tokens  Iterator  iter  Option  currentOption  String[]  arguments  String  token  int  tokenLength  	projects/Cli2/src/java/org/apache/commons/cli/PosixParser.java	1.0	97	97	1	replace	    token  =  token.toLowerCase();  token  =  token.toLowerCase();		non-compiled	[CE]  cannot  find  symbol  token	13	None
52	[BUG]  [BUGGY]    token  =  tokens.toLowerCase();  token  =  token.toLowerCase();  [CE]  cannot  find  symbol  token  [CONTEXT]  {  [BUGGY]    token  =  tokens.toLowerCase();  token  =  token.toLowerCase();  [BUGGY]  init();  this.options  =  options;  Iterator  iter  =  Arrays.asList(arguments).iterator();  String  token;  while  (iter.hasNext())  {  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  ArrayList  tokens  Iterator  iter  Option  currentOption  String[]  arguments  String  token  int  tokenLength  	projects/Cli2/src/java/org/apache/commons/cli/PosixParser.java	1.0	97	97	1	replace	    token  =  tokens.toLowerCase();  token  =  token.toLowerCase();		non-compiled	[CE]  cannot  find  symbol  token	13	None
53	[BUG]  [BUGGY]    token  =  token.toLowerCase();  [CE]  cannot  find  symbol  token  [CONTEXT]  {  [BUGGY]    token  =  token.toLowerCase();  [BUGGY]  init();  this.options  =  options;  Iterator  iter  =  Arrays.asList(arguments).iterator();  String  token;  while  (iter.hasNext())  {  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  ArrayList  tokens  Iterator  iter  Option  currentOption  String[]  arguments  String  token  int  tokenLength  	projects/Cli2/src/java/org/apache/commons/cli/PosixParser.java	1.0	97	97	1	replace	    token  =  token.toLowerCase();		non-compiled	[CE]  cannot  find  symbol  token	13	None
54	[BUG]  [BUGGY]    token  =  token.toLowerCase();  token  =(String[])iter.next();  [CE]  cannot  find  symbol  token  [CONTEXT]  {  [BUGGY]    token  =  token.toLowerCase();  token  =(String[])iter.next();  [BUGGY]  init();  this.options  =  options;  Iterator  iter  =  Arrays.asList(arguments).iterator();  String  token;  while  (iter.hasNext())  {  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  ArrayList  tokens  Iterator  iter  Option  currentOption  String[]  arguments  String  token  int  tokenLength  	projects/Cli2/src/java/org/apache/commons/cli/PosixParser.java	1.0	97	97	1	replace	    token  =  token.toLowerCase();  token  =(String[])iter.next();		non-compiled	[CE]  cannot  find  symbol  token	13	None
55	[BUG]  [BUGGY]    token  =  token.toLowerCase();  currentOption  =  options.getOption(token);  [CE]  cannot  find  symbol  token  [CONTEXT]  {  [BUGGY]    token  =  token.toLowerCase();  currentOption  =  options.getOption(token);  [BUGGY]  init();  this.options  =  options;  Iterator  iter  =  Arrays.asList(arguments).iterator();  String  token;  while  (iter.hasNext())  {  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  ArrayList  tokens  Iterator  iter  Option  currentOption  String[]  arguments  String  token  int  tokenLength  	projects/Cli2/src/java/org/apache/commons/cli/PosixParser.java	1.0	97	97	1	replace	    token  =  token.toLowerCase();  currentOption  =  options.getOption(token);		non-compiled	[CE]  cannot  find  symbol  token	13	None
62	[BUG]  [BUGGY]  [FE]  NullPointerException  test  [CONTEXT]  private  void  init()  {  eatTheRest  =  false;  [BUGGY]  tokens.remove(currentOption.getKey());  [BUGGY]  currentOption  =  null;  }  [CLASS]  PosixParser  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  ArrayList  tokens  Options  options  Option  currentOption  boolean  eatTheRest  	projects/Cli2/src/java/org/apache/commons/cli/PosixParser.java	1.0	52	52	1	add	tokens.remove(currentOption.getKey());	tokens.clear();  	compilable	  [FE]  NullPointerException  test	6	1
63	[BUG]  [BUGGY]  tokens.remove(currentOption.getKey());  [FE]  NullPointerException  test  [CONTEXT]  private  void  init()  {  eatTheRest  =  false;  [BUGGY]  tokens.remove(currentOption.getKey());  [BUGGY]  currentOption  =  null;  }  [CLASS]  PosixParser  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  ArrayList  tokens  Options  options  Option  currentOption  boolean  eatTheRest  	projects/Cli2/src/java/org/apache/commons/cli/PosixParser.java	1.0	52	52	1	replace	tokens.remove(currentOption.getKey());	tokens.clear();  	compilable	  [FE]  NullPointerException  test	6	1
63	[BUG]  [BUGGY]  tokens.remove(currentOption.getLocalMillis());  [CE]  cannot  find  symbol  [CONTEXT]  private  void  init()  {  eatTheRest  =  false;  [BUGGY]  tokens.remove(currentOption.getLocalMillis());  [BUGGY]  currentOption  =  null;  }  [CLASS]  PosixParser  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  ArrayList  tokens  Options  options  Option  currentOption  boolean  eatTheRest  	projects/Cli2/src/java/org/apache/commons/cli/PosixParser.java	1.0	52	52	1	replace	tokens.remove(currentOption.getLocalMillis());	tokens.clear();  	non-compiled	[CE]  cannot  find  symbol	6	None
64	[BUG]  [BUGGY]  [FE]  ComparisonFailure  test  [CONTEXT]  private  void  init()  {  eatTheRest  =  false;  [BUGGY]  tokens.add( "-- ");  [BUGGY]  currentOption  =  null;  }  [CLASS]  PosixParser  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  ArrayList  tokens  Options  options  Option  currentOption  boolean  eatTheRest  	projects/Cli2/src/java/org/apache/commons/cli/PosixParser.java	1.0	52	52	1	add	tokens.add( "-- ");	tokens.clear();  	compilable	  [FE]  ComparisonFailure  test	6	1
65	[BUG]  [BUGGY]  tokens.add( "-- ");  [FE]  ComparisonFailure  test  [CONTEXT]  private  void  init()  {  eatTheRest  =  false;  [BUGGY]  tokens.add( "-- ");  [BUGGY]  currentOption  =  null;  }  [CLASS]  PosixParser  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  ArrayList  tokens  Options  options  Option  currentOption  boolean  eatTheRest  	projects/Cli2/src/java/org/apache/commons/cli/PosixParser.java	1.0	52	52	1	replace	tokens.add( "-- ");	tokens.clear();  	compilable	  [FE]  ComparisonFailure  test	6	1
65	[BUG]  [BUGGY]  [FE]  UnrecognizedOptionException  test  [CONTEXT]  private  void  init()  {  eatTheRest  =  false;  [BUGGY]    [BUGGY]  currentOption  =  null;  }  [CLASS]  PosixParser  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  ArrayList  tokens  Options  options  Option  currentOption  boolean  eatTheRest  	projects/Cli2/src/java/org/apache/commons/cli/PosixParser.java	1.0	52	52	1	add	  	tokens.clear();  	compilable	  [FE]  UnrecognizedOptionException  test	6	1
66	[BUG]  [BUGGY]    [FE]  UnrecognizedOptionException  test  [CONTEXT]  private  void  init()  {  eatTheRest  =  false;  [BUGGY]    [BUGGY]  currentOption  =  null;  }  [CLASS]  PosixParser  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  ArrayList  tokens  Options  options  Option  currentOption  boolean  eatTheRest  	projects/Cli2/src/java/org/apache/commons/cli/PosixParser.java	1.0	52	52	1	replace	  	tokens.clear();  	compilable	  [FE]  UnrecognizedOptionException  test	6	1
72	[BUG]  [BUGGY]  this.options  =  Arrays.asList(arguments);  [CE]  incompatible  types  [CONTEXT]  {  init();  [BUGGY]  this.options  =  Arrays.asList(arguments);  [BUGGY]    Iterator  iter  =  Arrays.asList(arguments).iterator();  String  token;  while  (iter.hasNext())  {  token  =  (String)  iter.next();  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  ArrayList  tokens  Iterator  iter  Option  currentOption  String[]  arguments  String  token  int  tokenLength  	projects/Cli2/src/java/org/apache/commons/cli/PosixParser.java	1.0	98	98	1	replace	this.options  =  Arrays.asList(arguments);	this.options  =  options;  	non-compiled	[CE]  incompatible  types	14	None
73	[BUG]  [BUGGY]  this.options  =  Arrays.asList(arguments).iterator();  [CE]  incompatible  types  [CONTEXT]  {  init();  [BUGGY]  this.options  =  Arrays.asList(arguments).iterator();  [BUGGY]    Iterator  iter  =  Arrays.asList(arguments).iterator();  String  token;  while  (iter.hasNext())  {  token  =  (String)  iter.next();  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  ArrayList  tokens  Iterator  iter  Option  currentOption  String[]  arguments  String  token  int  tokenLength  	projects/Cli2/src/java/org/apache/commons/cli/PosixParser.java	1.0	98	98	1	replace	this.options  =  Arrays.asList(arguments).iterator();	this.options  =  options;  	non-compiled	[CE]  incompatible  types	14	None
74	[BUG]  [BUGGY]  this.options  =  new  ArrayList  <  String>();  [CE]  incompatible  types  [CONTEXT]  {  init();  [BUGGY]  this.options  =  new  ArrayList  <  String>();  [BUGGY]    Iterator  iter  =  Arrays.asList(arguments).iterator();  String  token;  while  (iter.hasNext())  {  token  =  (String)  iter.next();  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  ArrayList  tokens  Iterator  iter  Option  currentOption  String[]  arguments  String  token  int  tokenLength  	projects/Cli2/src/java/org/apache/commons/cli/PosixParser.java	1.0	98	98	1	replace	this.options  =  new  ArrayList  <  String>();	this.options  =  options;  	non-compiled	[CE]  incompatible  types	14	None
83	[BUG]  [BUGGY]  token  =  iter.next();  [CE]  incompatible  types  [CONTEXT]  while  (iter.hasNext())  {    [BUGGY]  token  =  iter.next();  [BUGGY]    if  (token.startsWith( "-- "))  {  if  (token.indexOf('=')  !=  -1)  {  tokens.add(token.substring(0,  token.indexOf('=')));  tokens.add(token.substring(token.indexOf('=')  +  1,  token.length()));  }  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  ArrayList  tokens  Iterator  iter  Option  currentOption  String[]  arguments  String  token  int  tokenLength  	projects/Cli2/src/java/org/apache/commons/cli/PosixParser.java	1.0	108	108	1	replace	token  =  iter.next();	token  =  (String)  iter.next();  	non-compiled	[CE]  incompatible  types	20	None
84	[BUG]  [BUGGY]  token  is(String)iter.next();  [CE]  ';'  expected  [CONTEXT]  while  (iter.hasNext())  {    [BUGGY]  token  is(String)iter.next();  [BUGGY]    if  (token.startsWith( "-- "))  {  if  (token.indexOf('=')  !=  -1)  {  tokens.add(token.substring(0,  token.indexOf('=')));  tokens.add(token.substring(token.indexOf('=')  +  1,  token.length()));  }  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  ArrayList  tokens  Iterator  iter  Option  currentOption  String[]  arguments  String  token  int  tokenLength  	projects/Cli2/src/java/org/apache/commons/cli/PosixParser.java	1.0	108	108	1	replace	token  is(String)iter.next();	token  =  (String)  iter.next();  	non-compiled	[CE]  ';'  expected	20	None
85	[BUG]  [BUGGY]    [CE]  variable  token  might  not  have  been  initialized  [CONTEXT]  while  (iter.hasNext())  {    [BUGGY]    [BUGGY]    if  (token.startsWith( "-- "))  {  if  (token.indexOf('=')  !=  -1)  {  tokens.add(token.substring(0,  token.indexOf('=')));  tokens.add(token.substring(token.indexOf('=')  +  1,  token.length()));  }  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  ArrayList  tokens  Iterator  iter  Option  currentOption  String[]  arguments  String  token  int  tokenLength  	projects/Cli2/src/java/org/apache/commons/cli/PosixParser.java	1.0	108	108	1	replace	  	token  =  (String)  iter.next();  	non-compiled	[CE]  variable  token  might  not  have  been  initialized	20	None
92	[BUG]  [BUGGY]  if(eatTheRest)  {  eatTheRest  =  false;  }  else  {  tokens.add(currentOption);  tokens.add(token);  }  [CE]  cannot  find  symbol  token  [CONTEXT]  private  void  init()  {  [BUGGY]  if(eatTheRest)  {  eatTheRest  =  false;  }  else  {  tokens.add(currentOption);  tokens.add(token);  }  [BUGGY]  tokens.clear();  currentOption  =  null;  }  [CLASS]  PosixParser  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  ArrayList  tokens  Options  options  Option  currentOption  boolean  eatTheRest  	projects/Cli2/src/java/org/apache/commons/cli/PosixParser.java	1.0	51	51	1	replace	if(eatTheRest)  {  eatTheRest  =  false;  }  else  {  tokens.add(currentOption);  tokens.add(token);  }	eatTheRest  =  false;  	non-compiled	[CE]  cannot  find  symbol  token	4	None
93	[BUG]  [BUGGY]  [FE]  UnrecognizedOptionException  test  [CONTEXT]  private  void  init()  {  [BUGGY]  if(eatTheRest)  {  eatTheRest  =  false;  }  else  {  tokens.add(currentOption);  tokens.add(currentOption);  }  [BUGGY]  tokens.clear();  currentOption  =  null;  }  [CLASS]  PosixParser  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  ArrayList  tokens  Options  options  Option  currentOption  boolean  eatTheRest  	projects/Cli2/src/java/org/apache/commons/cli/PosixParser.java	1.0	51	51	1	add	if(eatTheRest)  {  eatTheRest  =  false;  }  else  {  tokens.add(currentOption);  tokens.add(currentOption);  }	eatTheRest  =  false;  	compilable	  [FE]  UnrecognizedOptionException  test	4	1
94	[BUG]  [BUGGY]  if(eatTheRest)  {  eatTheRest  =  false;  }  else  {  tokens.add(currentOption);  tokens.add(currentOption);  }  [FE]  UnrecognizedOptionException  test  [CONTEXT]  private  void  init()  {  [BUGGY]  if(eatTheRest)  {  eatTheRest  =  false;  }  else  {  tokens.add(currentOption);  tokens.add(currentOption);  }  [BUGGY]  tokens.clear();  currentOption  =  null;  }  [CLASS]  PosixParser  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  ArrayList  tokens  Options  options  Option  currentOption  boolean  eatTheRest  	projects/Cli2/src/java/org/apache/commons/cli/PosixParser.java	1.0	51	51	1	replace	if(eatTheRest)  {  eatTheRest  =  false;  }  else  {  tokens.add(currentOption);  tokens.add(currentOption);  }	eatTheRest  =  false;  	compilable	  [FE]  UnrecognizedOptionException  test	4	1
94	[BUG]  [BUGGY]  [FE]  UnrecognizedOptionException  test  [CONTEXT]  private  void  init()  {  [BUGGY]  if(eatTheRest)  {  eatTheRest  =  false;  }  else  {  tokens.clear();  tokens.add(currentOption);  }  [BUGGY]  tokens.clear();  currentOption  =  null;  }  [CLASS]  PosixParser  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  ArrayList  tokens  Options  options  Option  currentOption  boolean  eatTheRest  	projects/Cli2/src/java/org/apache/commons/cli/PosixParser.java	1.0	51	51	1	add	if(eatTheRest)  {  eatTheRest  =  false;  }  else  {  tokens.clear();  tokens.add(currentOption);  }	eatTheRest  =  false;  	compilable	  [FE]  UnrecognizedOptionException  test	4	1
95	[BUG]  [BUGGY]  if(eatTheRest)  {  eatTheRest  =  false;  }  else  {  tokens.clear();  tokens.add(currentOption);  }  [FE]  UnrecognizedOptionException  test  [CONTEXT]  private  void  init()  {  [BUGGY]  if(eatTheRest)  {  eatTheRest  =  false;  }  else  {  tokens.clear();  tokens.add(currentOption);  }  [BUGGY]  tokens.clear();  currentOption  =  null;  }  [CLASS]  PosixParser  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  ArrayList  tokens  Options  options  Option  currentOption  boolean  eatTheRest  	projects/Cli2/src/java/org/apache/commons/cli/PosixParser.java	1.0	51	51	1	replace	if(eatTheRest)  {  eatTheRest  =  false;  }  else  {  tokens.clear();  tokens.add(currentOption);  }	eatTheRest  =  false;  	compilable	  [FE]  UnrecognizedOptionException  test	4	1
95	[BUG]  [BUGGY]  [FE]  UnrecognizedOptionException  test  [CONTEXT]  private  void  init()  {  [BUGGY]    [BUGGY]  tokens.clear();  currentOption  =  null;  }  [CLASS]  PosixParser  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  ArrayList  tokens  Options  options  Option  currentOption  boolean  eatTheRest  	projects/Cli2/src/java/org/apache/commons/cli/PosixParser.java	1.0	51	51	1	add	  	eatTheRest  =  false;  	compilable	  [FE]  UnrecognizedOptionException  test	4	1
96	[BUG]  [BUGGY]    [FE]  UnrecognizedOptionException  test  [CONTEXT]  private  void  init()  {  [BUGGY]    [BUGGY]  tokens.clear();  currentOption  =  null;  }  [CLASS]  PosixParser  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  ArrayList  tokens  Options  options  Option  currentOption  boolean  eatTheRest  	projects/Cli2/src/java/org/apache/commons/cli/PosixParser.java	1.0	51	51	1	replace	  	eatTheRest  =  false;  	compilable	  [FE]  UnrecognizedOptionException  test	4	1
101	[BUG]  [BUGGY]    Iterator  iter  =  arguments[iter.next()];  [CE]  variable  iter  is  already  defined  in  method  flatten(Options,String[],boolean)  [CONTEXT]  while  (iter.hasNext())  {    [BUGGY]    Iterator  iter  =  arguments[iter.next()];  [BUGGY]  token  =  (String)  iter.next();  if  (token.startsWith( "-- "))  {  if  (token.indexOf('=')  !=  -1)  {  tokens.add(token.substring(0,  token.indexOf('=')));  tokens.add(token.substring(token.indexOf('=')  +  1,  token.length()));  }  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  ArrayList  tokens  Iterator  iter  Option  currentOption  String[]  arguments  String  token  int  tokenLength  	projects/Cli2/src/java/org/apache/commons/cli/PosixParser.java	1.0	108	108	1	replace	    Iterator  iter  =  arguments[iter.next()];		non-compiled	[CE]  variable  iter  is  already  defined  in  method  flatten(Options,String[],boolean)	21	None
102	[BUG]  [BUGGY]    String  token  =(String)iter.next();  [CE]  variable  token  is  already  defined  in  method  flatten(Options,String[],boolean)  [CONTEXT]  while  (iter.hasNext())  {    [BUGGY]    String  token  =(String)iter.next();  [BUGGY]  token  =  (String)  iter.next();  if  (token.startsWith( "-- "))  {  if  (token.indexOf('=')  !=  -1)  {  tokens.add(token.substring(0,  token.indexOf('=')));  tokens.add(token.substring(token.indexOf('=')  +  1,  token.length()));  }  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  ArrayList  tokens  Iterator  iter  Option  currentOption  String[]  arguments  String  token  int  tokenLength  	projects/Cli2/src/java/org/apache/commons/cli/PosixParser.java	1.0	108	108	1	replace	    String  token  =(String)iter.next();		non-compiled	[CE]  variable  token  is  already  defined  in  method  flatten(Options,String[],boolean)	21	None
104	[BUG]  [BUGGY]    String  token  =  iter.next();  [CE]  variable  token  is  already  defined  in  method  flatten(Options,String[],boolean)  [CONTEXT]  while  (iter.hasNext())  {    [BUGGY]    String  token  =  iter.next();  [BUGGY]  token  =  (String)  iter.next();  if  (token.startsWith( "-- "))  {  if  (token.indexOf('=')  !=  -1)  {  tokens.add(token.substring(0,  token.indexOf('=')));  tokens.add(token.substring(token.indexOf('=')  +  1,  token.length()));  }  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  ArrayList  tokens  Iterator  iter  Option  currentOption  String[]  arguments  String  token  int  tokenLength  	projects/Cli2/src/java/org/apache/commons/cli/PosixParser.java	1.0	108	108	1	replace	    String  token  =  iter.next();		non-compiled	[CE]  variable  token  is  already  defined  in  method  flatten(Options,String[],boolean)	21	None
105	[BUG]  [BUGGY]    Iterator  iter  =  arguments[iter.next()  +  1];  [CE]  variable  iter  is  already  defined  in  method  flatten(Options,String[],boolean)  [CONTEXT]  while  (iter.hasNext())  {    [BUGGY]    Iterator  iter  =  arguments[iter.next()  +  1];  [BUGGY]  token  =  (String)  iter.next();  if  (token.startsWith( "-- "))  {  if  (token.indexOf('=')  !=  -1)  {  tokens.add(token.substring(0,  token.indexOf('=')));  tokens.add(token.substring(token.indexOf('=')  +  1,  token.length()));  }  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  ArrayList  tokens  Iterator  iter  Option  currentOption  String[]  arguments  String  token  int  tokenLength  	projects/Cli2/src/java/org/apache/commons/cli/PosixParser.java	1.0	108	108	1	replace	    Iterator  iter  =  arguments[iter.next()  +  1];		non-compiled	[CE]  variable  iter  is  already  defined  in  method  flatten(Options,String[],boolean)	21	None
111	[BUG]  [BUGGY]  stopAtNonOption();  [CE]  cannot  find  symbol  [CONTEXT]  {  [BUGGY]  stopAtNonOption();  [BUGGY]  this.options  =  options;  Iterator  iter  =  Arrays.asList(arguments).iterator();  String  token;  while  (iter.hasNext())  {  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  ArrayList  tokens  Iterator  iter  Option  currentOption  String[]  arguments  String  token  int  tokenLength  	projects/Cli2/src/java/org/apache/commons/cli/PosixParser.java	1.0	97	97	1	replace	stopAtNonOption();	init();  	non-compiled	[CE]  cannot  find  symbol	12	None
112	[BUG]  [BUGGY]  checkAndUpdate(token,  stopAtNonOption);  [CE]  cannot  find  symbol  token  [CONTEXT]  {  [BUGGY]  checkAndUpdate(token,  stopAtNonOption);  [BUGGY]  this.options  =  options;  Iterator  iter  =  Arrays.asList(arguments).iterator();  String  token;  while  (iter.hasNext())  {  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  ArrayList  tokens  Iterator  iter  Option  currentOption  String[]  arguments  String  token  int  tokenLength  	projects/Cli2/src/java/org/apache/commons/cli/PosixParser.java	1.0	97	97	1	replace	checkAndUpdate(token,  stopAtNonOption);	init();  	non-compiled	[CE]  cannot  find  symbol  token	12	None
113	[BUG]  [BUGGY]  super();  [CE]  call  to  super  must  be  first  statement  in  constructor  [CONTEXT]  {  [BUGGY]  super();  [BUGGY]  this.options  =  options;  Iterator  iter  =  Arrays.asList(arguments).iterator();  String  token;  while  (iter.hasNext())  {  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  ArrayList  tokens  Iterator  iter  Option  currentOption  String[]  arguments  String  token  int  tokenLength  	projects/Cli2/src/java/org/apache/commons/cli/PosixParser.java	1.0	97	97	1	replace	super();	init();  	non-compiled	[CE]  call  to  super  must  be  first  statement  in  constructor	12	None
114	[BUG]  [BUGGY]  eatTheRest();  [CE]  cannot  find  symbol  [CONTEXT]  {  [BUGGY]  eatTheRest();  [BUGGY]  this.options  =  options;  Iterator  iter  =  Arrays.asList(arguments).iterator();  String  token;  while  (iter.hasNext())  {  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  ArrayList  tokens  Iterator  iter  Option  currentOption  String[]  arguments  String  token  int  tokenLength  	projects/Cli2/src/java/org/apache/commons/cli/PosixParser.java	1.0	97	97	1	replace	eatTheRest();	init();  	non-compiled	[CE]  cannot  find  symbol	12	None
121	[BUG]  [BUGGY]    tokens.add(token);  [CE]  cannot  find  symbol  token  [CONTEXT]  {  init();  this.options  =  options;    [BUGGY]    tokens.add(token);  [BUGGY]  Iterator  iter  =  Arrays.asList(arguments).iterator();  String  token;  while  (iter.hasNext())  {  token  =  (String)  iter.next();  if  (token.startsWith( "-- "))  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  ArrayList  tokens  Iterator  iter  Option  currentOption  String[]  arguments  String  token  int  tokenLength  	projects/Cli2/src/java/org/apache/commons/cli/PosixParser.java	1.0	101	101	1	replace	    tokens.add(token);		non-compiled	[CE]  cannot  find  symbol  token	17	None
122	[BUG]  [BUGGY]    tokens.add(token);  currentOption  =  options.getOption(arguments[0]);  [CE]  cannot  find  symbol  token  [CONTEXT]  {  init();  this.options  =  options;    [BUGGY]    tokens.add(token);  currentOption  =  options.getOption(arguments[0]);  [BUGGY]  Iterator  iter  =  Arrays.asList(arguments).iterator();  String  token;  while  (iter.hasNext())  {  token  =  (String)  iter.next();  if  (token.startsWith( "-- "))  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  ArrayList  tokens  Iterator  iter  Option  currentOption  String[]  arguments  String  token  int  tokenLength  	projects/Cli2/src/java/org/apache/commons/cli/PosixParser.java	1.0	101	101	1	replace	    tokens.add(token);  currentOption  =  options.getOption(arguments[0]);		non-compiled	[CE]  cannot  find  symbol  token	17	None
123	[BUG]  [BUGGY]    tokens.add(token);  tokenLength++;  [CE]  cannot  find  symbol  token  [CONTEXT]  {  init();  this.options  =  options;    [BUGGY]    tokens.add(token);  tokenLength++;  [BUGGY]  Iterator  iter  =  Arrays.asList(arguments).iterator();  String  token;  while  (iter.hasNext())  {  token  =  (String)  iter.next();  if  (token.startsWith( "-- "))  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  ArrayList  tokens  Iterator  iter  Option  currentOption  String[]  arguments  String  token  int  tokenLength  	projects/Cli2/src/java/org/apache/commons/cli/PosixParser.java	1.0	101	101	1	replace	    tokens.add(token);  tokenLength++;		non-compiled	[CE]  cannot  find  symbol  token	17	None
124	[BUG]  [BUGGY]    tokens.add( "-- ");  tokenLength++;  [CE]  cannot  find  symbol  tokenLength  [CONTEXT]  {  init();  this.options  =  options;    [BUGGY]    tokens.add( "-- ");  tokenLength++;  [BUGGY]  Iterator  iter  =  Arrays.asList(arguments).iterator();  String  token;  while  (iter.hasNext())  {  token  =  (String)  iter.next();  if  (token.startsWith( "-- "))  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  ArrayList  tokens  Iterator  iter  Option  currentOption  String[]  arguments  String  token  int  tokenLength  	projects/Cli2/src/java/org/apache/commons/cli/PosixParser.java	1.0	101	101	1	replace	    tokens.add( "-- ");  tokenLength++;		non-compiled	[CE]  cannot  find  symbol  tokenLength	17	None
125	[BUG]  [BUGGY]  [FE]  ComparisonFailure  test  [CONTEXT]  {  init();  this.options  =  options;    [BUGGY]    tokens.add( "-- ");  currentOption  =  options.getOption( "-- ");  [BUGGY]  Iterator  iter  =  Arrays.asList(arguments).iterator();  String  token;  while  (iter.hasNext())  {  token  =  (String)  iter.next();  if  (token.startsWith( "-- "))  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  ArrayList  tokens  Iterator  iter  Option  currentOption  String[]  arguments  String  token  int  tokenLength  	projects/Cli2/src/java/org/apache/commons/cli/PosixParser.java	1.0	101	101	1	add	    tokens.add( "-- ");  currentOption  =  options.getOption( "-- ");		compilable	  [FE]  ComparisonFailure  test	17	1
126	[BUG]  [BUGGY]    tokens.add( "-- ");  currentOption  =  options.getOption( "-- ");  [FE]  ComparisonFailure  test  [CONTEXT]  {  init();  this.options  =  options;    [BUGGY]    tokens.add( "-- ");  currentOption  =  options.getOption( "-- ");  [BUGGY]  Iterator  iter  =  Arrays.asList(arguments).iterator();  String  token;  while  (iter.hasNext())  {  token  =  (String)  iter.next();  if  (token.startsWith( "-- "))  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  ArrayList  tokens  Iterator  iter  Option  currentOption  String[]  arguments  String  token  int  tokenLength  	projects/Cli2/src/java/org/apache/commons/cli/PosixParser.java	1.0	101	101	1	replace	    tokens.add( "-- ");  currentOption  =  options.getOption( "-- ");		compilable	  [FE]  ComparisonFailure  test	17	1
131	[BUG]  [BUGGY]  tokens.add(currentOption);  [CE]  illegal  start  of  expression  [CONTEXT]  private  void  init()  {  eatTheRest  =  false;  tokens.clear();  currentOption  =  null;  [BUGGY]  tokens.add(currentOption);  [BUGGY]    [CLASS]  PosixParser  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  ArrayList  tokens  Options  options  Option  currentOption  boolean  eatTheRest  	projects/Cli2/src/java/org/apache/commons/cli/PosixParser.java	1.0	54	54	1	replace	tokens.add(currentOption);	}  	non-compiled	[CE]  illegal  start  of  expression	10	None
132	[BUG]  [BUGGY]  tokens.clear();  [CE]  illegal  start  of  expression  [CONTEXT]  private  void  init()  {  eatTheRest  =  false;  tokens.clear();  currentOption  =  null;  [BUGGY]  tokens.clear();  [BUGGY]    [CLASS]  PosixParser  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  ArrayList  tokens  Options  options  Option  currentOption  boolean  eatTheRest  	projects/Cli2/src/java/org/apache/commons/cli/PosixParser.java	1.0	54	54	1	replace	tokens.clear();	}  	non-compiled	[CE]  illegal  start  of  expression	10	None
133	[BUG]  [BUGGY]  tokens.clear();  currentOption  =  null;  [CE]  illegal  start  of  expression  [CONTEXT]  private  void  init()  {  eatTheRest  =  false;  tokens.clear();  currentOption  =  null;  [BUGGY]  tokens.clear();  currentOption  =  null;  [BUGGY]    [CLASS]  PosixParser  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  ArrayList  tokens  Options  options  Option  currentOption  boolean  eatTheRest  	projects/Cli2/src/java/org/apache/commons/cli/PosixParser.java	1.0	54	54	1	replace	tokens.clear();  currentOption  =  null;	}  	non-compiled	[CE]  illegal  start  of  expression	10	None
134	[BUG]  [BUGGY]  tokens.clear();  currentOption  =  options.getOption(tokens);  [CE]  illegal  start  of  expression  [CONTEXT]  private  void  init()  {  eatTheRest  =  false;  tokens.clear();  currentOption  =  null;  [BUGGY]  tokens.clear();  currentOption  =  options.getOption(tokens);  [BUGGY]    [CLASS]  PosixParser  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  ArrayList  tokens  Options  options  Option  currentOption  boolean  eatTheRest  	projects/Cli2/src/java/org/apache/commons/cli/PosixParser.java	1.0	54	54	1	replace	tokens.clear();  currentOption  =  options.getOption(tokens);	}  	non-compiled	[CE]  illegal  start  of  expression	10	None
135	[BUG]  [BUGGY]    [CE]  illegal  start  of  expression  [CONTEXT]  private  void  init()  {  eatTheRest  =  false;  tokens.clear();  currentOption  =  null;  [BUGGY]    [BUGGY]    [CLASS]  PosixParser  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  ArrayList  tokens  Options  options  Option  currentOption  boolean  eatTheRest  	projects/Cli2/src/java/org/apache/commons/cli/PosixParser.java	1.0	54	54	1	replace	  	}  	non-compiled	[CE]  illegal  start  of  expression	10	None
141	[BUG]  [BUGGY]  currentOption  =  options;  [CE]  incompatible  types  [CONTEXT]  private  void  init()  {  eatTheRest  =  false;  tokens.clear();  [BUGGY]  currentOption  =  options;  [BUGGY]  }  [CLASS]  PosixParser  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  ArrayList  tokens  Options  options  Option  currentOption  boolean  eatTheRest  	projects/Cli2/src/java/org/apache/commons/cli/PosixParser.java	1.0	53	53	1	replace	currentOption  =  options;	currentOption  =  null;  	non-compiled	[CE]  incompatible  types	8	None
142	[BUG]  [BUGGY]  currentOption  =  Options.NEGATIVE;  [CE]  cannot  find  symbol  NEGATIVE  [CONTEXT]  private  void  init()  {  eatTheRest  =  false;  tokens.clear();  [BUGGY]  currentOption  =  Options.NEGATIVE;  [BUGGY]  }  [CLASS]  PosixParser  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  ArrayList  tokens  Options  options  Option  currentOption  boolean  eatTheRest  	projects/Cli2/src/java/org/apache/commons/cli/PosixParser.java	1.0	53	53	1	replace	currentOption  =  Options.NEGATIVE;	currentOption  =  null;  	non-compiled	[CE]  cannot  find  symbol  NEGATIVE	8	None
143	[BUG]  [BUGGY]  [FE]  NullPointerException  test  [CONTEXT]  private  void  init()  {  eatTheRest  =  false;  tokens.clear();  [BUGGY]  currentOption  =  options.getOption( "eatTheRest ");  [BUGGY]  }  [CLASS]  PosixParser  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  ArrayList  tokens  Options  options  Option  currentOption  boolean  eatTheRest  	projects/Cli2/src/java/org/apache/commons/cli/PosixParser.java	1.0	53	53	1	add	currentOption  =  options.getOption( "eatTheRest ");	currentOption  =  null;  	compilable	  [FE]  NullPointerException  test	8	1
144	[BUG]  [BUGGY]  currentOption  =  options.getOption( "eatTheRest ");  [FE]  NullPointerException  test  [CONTEXT]  private  void  init()  {  eatTheRest  =  false;  tokens.clear();  [BUGGY]  currentOption  =  options.getOption( "eatTheRest ");  [BUGGY]  }  [CLASS]  PosixParser  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  ArrayList  tokens  Options  options  Option  currentOption  boolean  eatTheRest  	projects/Cli2/src/java/org/apache/commons/cli/PosixParser.java	1.0	53	53	1	replace	currentOption  =  options.getOption( "eatTheRest ");	currentOption  =  null;  	compilable	  [FE]  NullPointerException  test	8	1
144	[BUG]  [BUGGY]  currentOption  =  options.getOption(eatTheRest);  [CE]  method  getOption  in  class  Options  cannot  be  applied  to  given  types;  [CONTEXT]  private  void  init()  {  eatTheRest  =  false;  tokens.clear();  [BUGGY]  currentOption  =  options.getOption(eatTheRest);  [BUGGY]  }  [CLASS]  PosixParser  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  ArrayList  tokens  Options  options  Option  currentOption  boolean  eatTheRest  	projects/Cli2/src/java/org/apache/commons/cli/PosixParser.java	1.0	53	53	1	replace	currentOption  =  options.getOption(eatTheRest);	currentOption  =  null;  	non-compiled	[CE]  method  getOption  in  class  Options  cannot  be  applied  to  given  types;	8	None
155	[BUG]  [BUGGY]  [FE]  ComparisonFailure  test  [CONTEXT]  private  void  init()  {  eatTheRest  =  false;  tokens.clear();  currentOption  =  null;  [BUGGY]    tokens.add( "-- ");  tokens.add(currentOption);  [BUGGY]  }  [CLASS]  PosixParser  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  ArrayList  tokens  Options  options  Option  currentOption  boolean  eatTheRest  	projects/Cli2/src/java/org/apache/commons/cli/PosixParser.java	1.0	54	54	1	add	    tokens.add( "-- ");  tokens.add(currentOption);		compilable	  [FE]  ComparisonFailure  test	11	1
156	[BUG]  [BUGGY]    tokens.add( "-- ");  tokens.add(currentOption);  [FE]  ComparisonFailure  test  [CONTEXT]  private  void  init()  {  eatTheRest  =  false;  tokens.clear();  currentOption  =  null;  [BUGGY]    tokens.add( "-- ");  tokens.add(currentOption);  [BUGGY]  }  [CLASS]  PosixParser  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  ArrayList  tokens  Options  options  Option  currentOption  boolean  eatTheRest  	projects/Cli2/src/java/org/apache/commons/cli/PosixParser.java	1.0	54	54	1	replace	    tokens.add( "-- ");  tokens.add(currentOption);		compilable	  [FE]  ComparisonFailure  test	11	1
162	[BUG]  [BUGGY]  Iterator  iter  =  Arrays.asList(this.arguments).iterator();  [CE]  cannot  find  symbol  arguments  [CONTEXT]  {  init();  this.options  =  options;    [BUGGY]  Iterator  iter  =  Arrays.asList(this.arguments).iterator();  [BUGGY]  String  token;  while  (iter.hasNext())  {  token  =  (String)  iter.next();  if  (token.startsWith( "-- "))  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  ArrayList  tokens  Iterator  iter  Option  currentOption  String[]  arguments  String  token  int  tokenLength  	projects/Cli2/src/java/org/apache/commons/cli/PosixParser.java	1.0	101	101	1	replace	Iterator  iter  =  Arrays.asList(this.arguments).iterator();	Iterator  iter  =  Arrays.asList(arguments).iterator();  	non-compiled	[CE]  cannot  find  symbol  arguments	16	None
163	[BUG]  [BUGGY]  [FE]  ClassCastException  test  [CONTEXT]  {  init();  this.options  =  options;    [BUGGY]  Iterator  iter  =  Arrays.asList(options).iterator();  [BUGGY]  String  token;  while  (iter.hasNext())  {  token  =  (String)  iter.next();  if  (token.startsWith( "-- "))  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  ArrayList  tokens  Iterator  iter  Option  currentOption  String[]  arguments  String  token  int  tokenLength  	projects/Cli2/src/java/org/apache/commons/cli/PosixParser.java	1.0	101	101	1	add	Iterator  iter  =  Arrays.asList(options).iterator();	Iterator  iter  =  Arrays.asList(arguments).iterator();  	compilable	  [FE]  ClassCastException  test	16	1
164	[BUG]  [BUGGY]  Iterator  iter  =  Arrays.asList(options).iterator();  [FE]  ClassCastException  test  [CONTEXT]  {  init();  this.options  =  options;    [BUGGY]  Iterator  iter  =  Arrays.asList(options).iterator();  [BUGGY]  String  token;  while  (iter.hasNext())  {  token  =  (String)  iter.next();  if  (token.startsWith( "-- "))  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  ArrayList  tokens  Iterator  iter  Option  currentOption  String[]  arguments  String  token  int  tokenLength  	projects/Cli2/src/java/org/apache/commons/cli/PosixParser.java	1.0	101	101	1	replace	Iterator  iter  =  Arrays.asList(options).iterator();	Iterator  iter  =  Arrays.asList(arguments).iterator();  	compilable	  [FE]  ClassCastException  test	16	1
164	[BUG]  [BUGGY]  Iterator  iter  =  options.asList(arguments).iterator();  [CE]  cannot  find  symbol  [CONTEXT]  {  init();  this.options  =  options;    [BUGGY]  Iterator  iter  =  options.asList(arguments).iterator();  [BUGGY]  String  token;  while  (iter.hasNext())  {  token  =  (String)  iter.next();  if  (token.startsWith( "-- "))  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  ArrayList  tokens  Iterator  iter  Option  currentOption  String[]  arguments  String  token  int  tokenLength  	projects/Cli2/src/java/org/apache/commons/cli/PosixParser.java	1.0	101	101	1	replace	Iterator  iter  =  options.asList(arguments).iterator();	Iterator  iter  =  Arrays.asList(arguments).iterator();  	non-compiled	[CE]  cannot  find  symbol	16	None
171	[BUG]  [BUGGY]  [FE]  UnrecognizedOptionException  test  [CONTEXT]  {  init();  this.options  =  options;  Iterator  iter  =  Arrays.asList(arguments).iterator();  String  token;    [BUGGY]    token  =(String)iter.next();  [BUGGY]  while  (iter.hasNext())  {  {  token  =  (String)  iter.next();  if  (token.startsWith( "-- "))  {  if  (token.indexOf('=')  !=  -1)  {  tokens.add(token.substring(0,  token.indexOf('=')));  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  ArrayList  tokens  Iterator  iter  Option  currentOption  String[]  arguments  String  token  int  tokenLength  	projects/Cli2/src/java/org/apache/commons/cli/PosixParser.java	1.0	105	106	1	add	    token  =(String)iter.next();		compilable	  [FE]  UnrecognizedOptionException  test	19	1
172	[BUG]  [BUGGY]    token  =(String)iter.next();  [FE]  UnrecognizedOptionException  test  [CONTEXT]  {  init();  this.options  =  options;  Iterator  iter  =  Arrays.asList(arguments).iterator();  String  token;    [BUGGY]    token  =(String)iter.next();  [BUGGY]  while  (iter.hasNext())  {  {  token  =  (String)  iter.next();  if  (token.startsWith( "-- "))  {  if  (token.indexOf('=')  !=  -1)  {  tokens.add(token.substring(0,  token.indexOf('=')));  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  ArrayList  tokens  Iterator  iter  Option  currentOption  String[]  arguments  String  token  int  tokenLength  	projects/Cli2/src/java/org/apache/commons/cli/PosixParser.java	1.0	105	106	1	replace	    token  =(String)iter.next();		compilable	  [FE]  UnrecognizedOptionException  test	19	1
172	[BUG]  [BUGGY]    token  =  iter.next();  [CE]  incompatible  types  [CONTEXT]  {  init();  this.options  =  options;  Iterator  iter  =  Arrays.asList(arguments).iterator();  String  token;    [BUGGY]    token  =  iter.next();  [BUGGY]  while  (iter.hasNext())  {  {  token  =  (String)  iter.next();  if  (token.startsWith( "-- "))  {  if  (token.indexOf('=')  !=  -1)  {  tokens.add(token.substring(0,  token.indexOf('=')));  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  ArrayList  tokens  Iterator  iter  Option  currentOption  String[]  arguments  String  token  int  tokenLength  	projects/Cli2/src/java/org/apache/commons/cli/PosixParser.java	1.0	105	106	1	replace	    token  =  iter.next();		non-compiled	[CE]  incompatible  types	19	None
173	[BUG]  [BUGGY]    tokens.add(token);  [CE]  variable  token  might  not  have  been  initialized  [CONTEXT]  {  init();  this.options  =  options;  Iterator  iter  =  Arrays.asList(arguments).iterator();  String  token;    [BUGGY]    tokens.add(token);  [BUGGY]  while  (iter.hasNext())  {  {  token  =  (String)  iter.next();  if  (token.startsWith( "-- "))  {  if  (token.indexOf('=')  !=  -1)  {  tokens.add(token.substring(0,  token.indexOf('=')));  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  ArrayList  tokens  Iterator  iter  Option  currentOption  String[]  arguments  String  token  int  tokenLength  	projects/Cli2/src/java/org/apache/commons/cli/PosixParser.java	1.0	105	106	1	replace	    tokens.add(token);		non-compiled	[CE]  variable  token  might  not  have  been  initialized	19	None
174	[BUG]  [BUGGY]  [FE]  UnrecognizedOptionException  test  [CONTEXT]  {  init();  this.options  =  options;  Iterator  iter  =  Arrays.asList(arguments).iterator();  String  token;    [BUGGY]    token  =(String)iter.next();  tokens.add(token);  [BUGGY]  while  (iter.hasNext())  {  {  token  =  (String)  iter.next();  if  (token.startsWith( "-- "))  {  if  (token.indexOf('=')  !=  -1)  {  tokens.add(token.substring(0,  token.indexOf('=')));  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  ArrayList  tokens  Iterator  iter  Option  currentOption  String[]  arguments  String  token  int  tokenLength  	projects/Cli2/src/java/org/apache/commons/cli/PosixParser.java	1.0	105	106	1	add	    token  =(String)iter.next();  tokens.add(token);		compilable	  [FE]  UnrecognizedOptionException  test	19	1
175	[BUG]  [BUGGY]    token  =(String)iter.next();  tokens.add(token);  [FE]  UnrecognizedOptionException  test  [CONTEXT]  {  init();  this.options  =  options;  Iterator  iter  =  Arrays.asList(arguments).iterator();  String  token;    [BUGGY]    token  =(String)iter.next();  tokens.add(token);  [BUGGY]  while  (iter.hasNext())  {  {  token  =  (String)  iter.next();  if  (token.startsWith( "-- "))  {  if  (token.indexOf('=')  !=  -1)  {  tokens.add(token.substring(0,  token.indexOf('=')));  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  ArrayList  tokens  Iterator  iter  Option  currentOption  String[]  arguments  String  token  int  tokenLength  	projects/Cli2/src/java/org/apache/commons/cli/PosixParser.java	1.0	105	106	1	replace	    token  =(String)iter.next();  tokens.add(token);		compilable	  [FE]  UnrecognizedOptionException  test	19	1
175	[BUG]  [BUGGY]    tokens.add(token.substring(0,  token.length)));  [CE]  ';'  expected  [CONTEXT]  {  init();  this.options  =  options;  Iterator  iter  =  Arrays.asList(arguments).iterator();  String  token;    [BUGGY]    tokens.add(token.substring(0,  token.length)));  [BUGGY]  while  (iter.hasNext())  {  {  token  =  (String)  iter.next();  if  (token.startsWith( "-- "))  {  if  (token.indexOf('=')  !=  -1)  {  tokens.add(token.substring(0,  token.indexOf('=')));  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  ArrayList  tokens  Iterator  iter  Option  currentOption  String[]  arguments  String  token  int  tokenLength  	projects/Cli2/src/java/org/apache/commons/cli/PosixParser.java	1.0	105	106	1	replace	    tokens.add(token.substring(0,  token.length)));		non-compiled	[CE]  ';'  expected	19	None
181	[BUG]  [BUGGY]  [FE]  NullPointerException  test  [CONTEXT]  private  void  init()  {  eatTheRest  =  false;  [BUGGY]    tokens.add( "-- ");  currentOption  =  options.getOption( "- ");  [BUGGY]  tokens.clear();  currentOption  =  null;  }  [CLASS]  PosixParser  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  ArrayList  tokens  Options  options  Option  currentOption  boolean  eatTheRest  	projects/Cli2/src/java/org/apache/commons/cli/PosixParser.java	1.0	52	52	1	add	    tokens.add( "-- ");  currentOption  =  options.getOption( "- ");		compilable	  [FE]  NullPointerException  test	7	1
182	[BUG]  [BUGGY]    tokens.add( "-- ");  currentOption  =  options.getOption( "- ");  [FE]  NullPointerException  test  [CONTEXT]  private  void  init()  {  eatTheRest  =  false;  [BUGGY]    tokens.add( "-- ");  currentOption  =  options.getOption( "- ");  [BUGGY]  tokens.clear();  currentOption  =  null;  }  [CLASS]  PosixParser  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  ArrayList  tokens  Options  options  Option  currentOption  boolean  eatTheRest  	projects/Cli2/src/java/org/apache/commons/cli/PosixParser.java	1.0	52	52	1	replace	    tokens.add( "-- ");  currentOption  =  options.getOption( "- ");		compilable	  [FE]  NullPointerException  test	7	1
184	[BUG]  [BUGGY]  [FE]  NullPointerException  test  [CONTEXT]  private  void  init()  {  eatTheRest  =  false;  [BUGGY]    tokens.clear();  currentOption  =  options.getOption( "eatTheRest ");  [BUGGY]  tokens.clear();  currentOption  =  null;  }  [CLASS]  PosixParser  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  ArrayList  tokens  Options  options  Option  currentOption  boolean  eatTheRest  	projects/Cli2/src/java/org/apache/commons/cli/PosixParser.java	1.0	52	52	1	add	    tokens.clear();  currentOption  =  options.getOption( "eatTheRest ");		compilable	  [FE]  NullPointerException  test	7	1
185	[BUG]  [BUGGY]    tokens.clear();  currentOption  =  options.getOption( "eatTheRest ");  [FE]  NullPointerException  test  [CONTEXT]  private  void  init()  {  eatTheRest  =  false;  [BUGGY]    tokens.clear();  currentOption  =  options.getOption( "eatTheRest ");  [BUGGY]  tokens.clear();  currentOption  =  null;  }  [CLASS]  PosixParser  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  ArrayList  tokens  Options  options  Option  currentOption  boolean  eatTheRest  	projects/Cli2/src/java/org/apache/commons/cli/PosixParser.java	1.0	52	52	1	replace	    tokens.clear();  currentOption  =  options.getOption( "eatTheRest ");		compilable	  [FE]  NullPointerException  test	7	1
185	[BUG]  [BUGGY]    tokens.clear();  currentOption  =  options.getOption(this);  [CE]  method  getOption  in  class  Options  cannot  be  applied  to  given  types;  [CONTEXT]  private  void  init()  {  eatTheRest  =  false;  [BUGGY]    tokens.clear();  currentOption  =  options.getOption(this);  [BUGGY]  tokens.clear();  currentOption  =  null;  }  [CLASS]  PosixParser  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  ArrayList  tokens  Options  options  Option  currentOption  boolean  eatTheRest  	projects/Cli2/src/java/org/apache/commons/cli/PosixParser.java	1.0	52	52	1	replace	    tokens.clear();  currentOption  =  options.getOption(this);		non-compiled	[CE]  method  getOption  in  class  Options  cannot  be  applied  to  given  types;	7	None
191	[BUG]  [BUGGY]  [FE]  UnrecognizedOptionException  test  [CONTEXT]  private  void  init()  {  [BUGGY]    tokens.clear();  [BUGGY]  eatTheRest  =  false;  tokens.clear();  currentOption  =  null;  }  [CLASS]  PosixParser  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  ArrayList  tokens  Options  options  Option  currentOption  boolean  eatTheRest  	projects/Cli2/src/java/org/apache/commons/cli/PosixParser.java	1.0	51	51	1	add	    tokens.clear();		compilable	  [FE]  UnrecognizedOptionException  test	5	1
192	[BUG]  [BUGGY]    tokens.clear();  [FE]  UnrecognizedOptionException  test  [CONTEXT]  private  void  init()  {  [BUGGY]    tokens.clear();  [BUGGY]  eatTheRest  =  false;  tokens.clear();  currentOption  =  null;  }  [CLASS]  PosixParser  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  ArrayList  tokens  Options  options  Option  currentOption  boolean  eatTheRest  	projects/Cli2/src/java/org/apache/commons/cli/PosixParser.java	1.0	51	51	1	replace	    tokens.clear();		compilable	  [FE]  UnrecognizedOptionException  test	5	1
192	[BUG]  [BUGGY]  [FE]  UnrecognizedOptionException  test  [CONTEXT]  private  void  init()  {  [BUGGY]    tokens.clear();  currentOption  =  null;  [BUGGY]  eatTheRest  =  false;  tokens.clear();  currentOption  =  null;  }  [CLASS]  PosixParser  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  ArrayList  tokens  Options  options  Option  currentOption  boolean  eatTheRest  	projects/Cli2/src/java/org/apache/commons/cli/PosixParser.java	1.0	51	51	1	add	    tokens.clear();  currentOption  =  null;		compilable	  [FE]  UnrecognizedOptionException  test	5	1
193	[BUG]  [BUGGY]    tokens.clear();  currentOption  =  null;  [FE]  UnrecognizedOptionException  test  [CONTEXT]  private  void  init()  {  [BUGGY]    tokens.clear();  currentOption  =  null;  [BUGGY]  eatTheRest  =  false;  tokens.clear();  currentOption  =  null;  }  [CLASS]  PosixParser  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  ArrayList  tokens  Options  options  Option  currentOption  boolean  eatTheRest  	projects/Cli2/src/java/org/apache/commons/cli/PosixParser.java	1.0	51	51	1	replace	    tokens.clear();  currentOption  =  null;		compilable	  [FE]  UnrecognizedOptionException  test	5	1
193	[BUG]  [BUGGY]  [FE]  UnrecognizedOptionException  test  [CONTEXT]  private  void  init()  {  [BUGGY]    tokens.clear();  tokens.add(currentOption);  [BUGGY]  eatTheRest  =  false;  tokens.clear();  currentOption  =  null;  }  [CLASS]  PosixParser  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  ArrayList  tokens  Options  options  Option  currentOption  boolean  eatTheRest  	projects/Cli2/src/java/org/apache/commons/cli/PosixParser.java	1.0	51	51	1	add	    tokens.clear();  tokens.add(currentOption);		compilable	  [FE]  UnrecognizedOptionException  test	5	1
194	[BUG]  [BUGGY]    tokens.clear();  tokens.add(currentOption);  [FE]  UnrecognizedOptionException  test  [CONTEXT]  private  void  init()  {  [BUGGY]    tokens.clear();  tokens.add(currentOption);  [BUGGY]  eatTheRest  =  false;  tokens.clear();  currentOption  =  null;  }  [CLASS]  PosixParser  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  ArrayList  tokens  Options  options  Option  currentOption  boolean  eatTheRest  	projects/Cli2/src/java/org/apache/commons/cli/PosixParser.java	1.0	51	51	1	replace	    tokens.clear();  tokens.add(currentOption);		compilable	  [FE]  UnrecognizedOptionException  test	5	1
194	[BUG]  [BUGGY]    tokens.clear();  currentOption  =  options.getOption(tokens);  [CE]  method  getOption  in  class  Options  cannot  be  applied  to  given  types;  [CONTEXT]  private  void  init()  {  [BUGGY]    tokens.clear();  currentOption  =  options.getOption(tokens);  [BUGGY]  eatTheRest  =  false;  tokens.clear();  currentOption  =  null;  }  [CLASS]  PosixParser  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  ArrayList  tokens  Options  options  Option  currentOption  boolean  eatTheRest  	projects/Cli2/src/java/org/apache/commons/cli/PosixParser.java	1.0	51	51	1	replace	    tokens.clear();  currentOption  =  options.getOption(tokens);		non-compiled	[CE]  method  getOption  in  class  Options  cannot  be  applied  to  given  types;	5	None
195	[BUG]  [BUGGY]    tokens.clear();  currentOption  =  options.getOption(currentOption);  [CE]  method  getOption  in  class  Options  cannot  be  applied  to  given  types;  [CONTEXT]  private  void  init()  {  [BUGGY]    tokens.clear();  currentOption  =  options.getOption(currentOption);  [BUGGY]  eatTheRest  =  false;  tokens.clear();  currentOption  =  null;  }  [CLASS]  PosixParser  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  ArrayList  tokens  Options  options  Option  currentOption  boolean  eatTheRest  	projects/Cli2/src/java/org/apache/commons/cli/PosixParser.java	1.0	51	51	1	replace	    tokens.clear();  currentOption  =  options.getOption(currentOption);		non-compiled	[CE]  method  getOption  in  class  Options  cannot  be  applied  to  given  types;	5	None
2	[BUG]  [BUGGY]  this.options  =  options.iterator();  [CE]  cannot  find  symbol  [CONTEXT]  {  init();  [BUGGY]  this.options  =  options.iterator();  [BUGGY]    Iterator  iter  =  Arrays.asList(arguments).iterator();  String  token;  while  (iter.hasNext())  {  token  =  (String)  iter.next();  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  ArrayList  tokens  Iterator  iter  Option  currentOption  String[]  arguments  String  token  int  tokenLength  	projects/Cli2/src/java/org/apache/commons/cli/PosixParser.java	1.0	98	98	1	replace	this.options  =  options.iterator();	this.options  =  options;  	non-compiled	[CE]  cannot  find  symbol	14	None
3	[BUG]  [BUGGY]  this.options  =  options.iterator().next();  [CE]  cannot  find  symbol  [CONTEXT]  {  init();  [BUGGY]  this.options  =  options.iterator().next();  [BUGGY]    Iterator  iter  =  Arrays.asList(arguments).iterator();  String  token;  while  (iter.hasNext())  {  token  =  (String)  iter.next();  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  ArrayList  tokens  Iterator  iter  Option  currentOption  String[]  arguments  String  token  int  tokenLength  	projects/Cli2/src/java/org/apache/commons/cli/PosixParser.java	1.0	98	98	1	replace	this.options  =  options.iterator().next();	this.options  =  options;  	non-compiled	[CE]  cannot  find  symbol	14	None
4	[BUG]  [BUGGY]  this.options  =  Options.EMPTY_STRING;  [CE]  cannot  find  symbol  EMPTY_STRING  [CONTEXT]  {  init();  [BUGGY]  this.options  =  Options.EMPTY_STRING;  [BUGGY]    Iterator  iter  =  Arrays.asList(arguments).iterator();  String  token;  while  (iter.hasNext())  {  token  =  (String)  iter.next();  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  ArrayList  tokens  Iterator  iter  Option  currentOption  String[]  arguments  String  token  int  tokenLength  	projects/Cli2/src/java/org/apache/commons/cli/PosixParser.java	1.0	98	98	1	replace	this.options  =  Options.EMPTY_STRING;	this.options  =  options;  	non-compiled	[CE]  cannot  find  symbol  EMPTY_STRING	14	None
22	[BUG]  [BUGGY]  tokens.add( "-- ");  currentOption  =  null;  [CE]  illegal  start  of  expression  [CONTEXT]  private  void  init()  {  eatTheRest  =  false;  tokens.clear();  currentOption  =  null;  [BUGGY]  tokens.add( "-- ");  currentOption  =  null;  [BUGGY]    [CLASS]  PosixParser  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  ArrayList  tokens  Options  options  Option  currentOption  boolean  eatTheRest  	projects/Cli2/src/java/org/apache/commons/cli/PosixParser.java	1.0	54	54	1	replace	tokens.add( "-- ");  currentOption  =  null;	}  	non-compiled	[CE]  illegal  start  of  expression	10	None
42	[BUG]  [BUGGY]  [FE]  UnrecognizedOptionException  test  [CONTEXT]  private  void  init()  {  eatTheRest  =  false;  [BUGGY]    tokens.clear();  currentOption  =  null;  [BUGGY]  tokens.clear();  currentOption  =  null;  }  [CLASS]  PosixParser  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  ArrayList  tokens  Options  options  Option  currentOption  boolean  eatTheRest  	projects/Cli2/src/java/org/apache/commons/cli/PosixParser.java	1.0	52	52	1	add	    tokens.clear();  currentOption  =  null;		compilable	  [FE]  UnrecognizedOptionException  test	7	1
43	[BUG]  [BUGGY]    tokens.clear();  currentOption  =  null;  [FE]  UnrecognizedOptionException  test  [CONTEXT]  private  void  init()  {  eatTheRest  =  false;  [BUGGY]    tokens.clear();  currentOption  =  null;  [BUGGY]  tokens.clear();  currentOption  =  null;  }  [CLASS]  PosixParser  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  ArrayList  tokens  Options  options  Option  currentOption  boolean  eatTheRest  	projects/Cli2/src/java/org/apache/commons/cli/PosixParser.java	1.0	52	52	1	replace	    tokens.clear();  currentOption  =  null;		compilable	  [FE]  UnrecognizedOptionException  test	7	1
43	[BUG]  [BUGGY]  [FE]  UnrecognizedOptionException  test  [CONTEXT]  private  void  init()  {  eatTheRest  =  false;  [BUGGY]    tokens.add( "-- ");  currentOption  =  null;  [BUGGY]  tokens.clear();  currentOption  =  null;  }  [CLASS]  PosixParser  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  ArrayList  tokens  Options  options  Option  currentOption  boolean  eatTheRest  	projects/Cli2/src/java/org/apache/commons/cli/PosixParser.java	1.0	52	52	1	add	    tokens.add( "-- ");  currentOption  =  null;		compilable	  [FE]  UnrecognizedOptionException  test	7	1
44	[BUG]  [BUGGY]    tokens.add( "-- ");  currentOption  =  null;  [FE]  UnrecognizedOptionException  test  [CONTEXT]  private  void  init()  {  eatTheRest  =  false;  [BUGGY]    tokens.add( "-- ");  currentOption  =  null;  [BUGGY]  tokens.clear();  currentOption  =  null;  }  [CLASS]  PosixParser  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  ArrayList  tokens  Options  options  Option  currentOption  boolean  eatTheRest  	projects/Cli2/src/java/org/apache/commons/cli/PosixParser.java	1.0	52	52	1	replace	    tokens.add( "-- ");  currentOption  =  null;		compilable	  [FE]  UnrecognizedOptionException  test	7	1
45	[BUG]  [BUGGY]  [FE]  UnrecognizedOptionException  test  [CONTEXT]  private  void  init()  {  eatTheRest  =  false;  [BUGGY]    tokens.clear();  tokens.add( "-- ");  [BUGGY]  tokens.clear();  currentOption  =  null;  }  [CLASS]  PosixParser  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  ArrayList  tokens  Options  options  Option  currentOption  boolean  eatTheRest  	projects/Cli2/src/java/org/apache/commons/cli/PosixParser.java	1.0	52	52	1	add	    tokens.clear();  tokens.add( "-- ");		compilable	  [FE]  UnrecognizedOptionException  test	7	1
46	[BUG]  [BUGGY]    tokens.clear();  tokens.add( "-- ");  [FE]  UnrecognizedOptionException  test  [CONTEXT]  private  void  init()  {  eatTheRest  =  false;  [BUGGY]    tokens.clear();  tokens.add( "-- ");  [BUGGY]  tokens.clear();  currentOption  =  null;  }  [CLASS]  PosixParser  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  ArrayList  tokens  Options  options  Option  currentOption  boolean  eatTheRest  	projects/Cli2/src/java/org/apache/commons/cli/PosixParser.java	1.0	52	52	1	replace	    tokens.clear();  tokens.add( "-- ");		compilable	  [FE]  UnrecognizedOptionException  test	7	1
64	[BUG]  [BUGGY]  private  new  ArrayList  tokens  =  new  ArrayList();  [CE]  illegal  start  of  type  [CONTEXT]    [BUGGY]  private  new  ArrayList  tokens  =  new  ArrayList();  [BUGGY]    [CLASS]  PosixParser  [VARIABLES]  	projects/Cli2/src/java/org/apache/commons/cli/PosixParser.java	1.0	33	33	1	replace	private  new  ArrayList  tokens  =  new  ArrayList();	private  ArrayList  tokens  =  new  ArrayList();  	non-compiled	[CE]  illegal  start  of  type	2	None
82	[BUG]  [BUGGY]  eatTheRest  =  true;  Preconditions.checkState(!currentOption.hasArg());  [CE]  cannot  find  symbol  Preconditions  [CONTEXT]  private  void  init()  {  [BUGGY]  eatTheRest  =  true;  Preconditions.checkState(!currentOption.hasArg());  [BUGGY]  tokens.clear();  currentOption  =  null;  }  [CLASS]  PosixParser  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  ArrayList  tokens  Options  options  Option  currentOption  boolean  eatTheRest  	projects/Cli2/src/java/org/apache/commons/cli/PosixParser.java	1.0	51	51	1	replace	eatTheRest  =  true;  Preconditions.checkState(!currentOption.hasArg());	eatTheRest  =  false;  	non-compiled	[CE]  cannot  find  symbol  Preconditions	4	None
83	[BUG]  [BUGGY]  eatTheRest  =  true;  Preconditions.checkState(currentOption!=  null);  [CE]  cannot  find  symbol  Preconditions  [CONTEXT]  private  void  init()  {  [BUGGY]  eatTheRest  =  true;  Preconditions.checkState(currentOption!=  null);  [BUGGY]  tokens.clear();  currentOption  =  null;  }  [CLASS]  PosixParser  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  ArrayList  tokens  Options  options  Option  currentOption  boolean  eatTheRest  	projects/Cli2/src/java/org/apache/commons/cli/PosixParser.java	1.0	51	51	1	replace	eatTheRest  =  true;  Preconditions.checkState(currentOption!=  null);	eatTheRest  =  false;  	non-compiled	[CE]  cannot  find  symbol  Preconditions	4	None
84	[BUG]  [BUGGY]  [FE]  UnrecognizedOptionException  test  [CONTEXT]  private  void  init()  {  [BUGGY]  tokens.clear();  eatTheRest  =  false;  [BUGGY]  tokens.clear();  currentOption  =  null;  }  [CLASS]  PosixParser  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  ArrayList  tokens  Options  options  Option  currentOption  boolean  eatTheRest  	projects/Cli2/src/java/org/apache/commons/cli/PosixParser.java	1.0	51	51	1	add	tokens.clear();  eatTheRest  =  false;	eatTheRest  =  false;  	compilable	  [FE]  UnrecognizedOptionException  test	4	1
85	[BUG]  [BUGGY]  tokens.clear();  eatTheRest  =  false;  [FE]  UnrecognizedOptionException  test  [CONTEXT]  private  void  init()  {  [BUGGY]  tokens.clear();  eatTheRest  =  false;  [BUGGY]  tokens.clear();  currentOption  =  null;  }  [CLASS]  PosixParser  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  ArrayList  tokens  Options  options  Option  currentOption  boolean  eatTheRest  	projects/Cli2/src/java/org/apache/commons/cli/PosixParser.java	1.0	51	51	1	replace	tokens.clear();  eatTheRest  =  false;	eatTheRest  =  false;  	compilable	  [FE]  UnrecognizedOptionException  test	4	1
101	[BUG]  [BUGGY]  currentOption  =  Option.EXPR_RESULT;  [CE]  cannot  find  symbol  EXPR_RESULT  [CONTEXT]  private  void  init()  {  eatTheRest  =  false;  tokens.clear();  [BUGGY]  currentOption  =  Option.EXPR_RESULT;  [BUGGY]  }  [CLASS]  PosixParser  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  ArrayList  tokens  Options  options  Option  currentOption  boolean  eatTheRest  	projects/Cli2/src/java/org/apache/commons/cli/PosixParser.java	1.0	53	53	1	replace	currentOption  =  Option.EXPR_RESULT;	currentOption  =  null;  	non-compiled	[CE]  cannot  find  symbol  EXPR_RESULT	8	None
102	[BUG]  [BUGGY]  currentOption  =  Options.WRITE_OPTIONAL_OPTION;  [CE]  cannot  find  symbol  WRITE_OPTIONAL_OPTION  [CONTEXT]  private  void  init()  {  eatTheRest  =  false;  tokens.clear();  [BUGGY]  currentOption  =  Options.WRITE_OPTIONAL_OPTION;  [BUGGY]  }  [CLASS]  PosixParser  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  ArrayList  tokens  Options  options  Option  currentOption  boolean  eatTheRest  	projects/Cli2/src/java/org/apache/commons/cli/PosixParser.java	1.0	53	53	1	replace	currentOption  =  Options.WRITE_OPTIONAL_OPTION;	currentOption  =  null;  	non-compiled	[CE]  cannot  find  symbol  WRITE_OPTIONAL_OPTION	8	None
103	[BUG]  [BUGGY]  [FE]  UnrecognizedOptionException  test  [CONTEXT]  private  void  init()  {  eatTheRest  =  false;  tokens.clear();  [BUGGY]  currentOption  =  Option.WRITE_TOKEN;  [BUGGY]  }  [CLASS]  PosixParser  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  ArrayList  tokens  Options  options  Option  currentOption  boolean  eatTheRest  	projects/Cli2/src/java/org/apache/commons/cli/PosixParser.java	1.0	53	53	1	add	currentOption  =  Option.WRITE_TOKEN;	currentOption  =  null;  	compilable	  [FE]  UnrecognizedOptionException  test	8	1
104	[BUG]  [BUGGY]  currentOption  =  Option.WRITE_TOKEN;  [FE]  UnrecognizedOptionException  test  [CONTEXT]  private  void  init()  {  eatTheRest  =  false;  tokens.clear();  [BUGGY]  currentOption  =  Option.WRITE_TOKEN;  [BUGGY]  }  [CLASS]  PosixParser  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  ArrayList  tokens  Options  options  Option  currentOption  boolean  eatTheRest  	projects/Cli2/src/java/org/apache/commons/cli/PosixParser.java	1.0	53	53	1	replace	currentOption  =  Option.WRITE_TOKEN;	currentOption  =  null;  	compilable	  [FE]  UnrecognizedOptionException  test	8	1
104	[BUG]  [BUGGY]  currentOption  =  Option.WRITE;  [CE]  cannot  find  symbol  WRITE  [CONTEXT]  private  void  init()  {  eatTheRest  =  false;  tokens.clear();  [BUGGY]  currentOption  =  Option.WRITE;  [BUGGY]  }  [CLASS]  PosixParser  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  ArrayList  tokens  Options  options  Option  currentOption  boolean  eatTheRest  	projects/Cli2/src/java/org/apache/commons/cli/PosixParser.java	1.0	53	53	1	replace	currentOption  =  Option.WRITE;	currentOption  =  null;  	non-compiled	[CE]  cannot  find  symbol  WRITE	8	None
122	[BUG]  [BUGGY]    tokenLength  =  token.length();  [CE]  cannot  find  symbol  tokenLength  [CONTEXT]  {  init();  this.options  =  options;  Iterator  iter  =  Arrays.asList(arguments).iterator();  String  token;    [BUGGY]    tokenLength  =  token.length();  [BUGGY]  while  (iter.hasNext())  {  {  token  =  (String)  iter.next();  if  (token.startsWith( "-- "))  {  if  (token.indexOf('=')  !=  -1)  {  tokens.add(token.substring(0,  token.indexOf('=')));  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  ArrayList  tokens  Iterator  iter  Option  currentOption  String[]  arguments  String  token  int  tokenLength  	projects/Cli2/src/java/org/apache/commons/cli/PosixParser.java	1.0	105	106	1	replace	    tokenLength  =  token.length();		non-compiled	[CE]  cannot  find  symbol  tokenLength	19	None
123	[BUG]  [BUGGY]    if(iter.hasNext())  {  tokens.add(token);  iter.remove();  }  [CE]  variable  token  might  not  have  been  initialized  [CONTEXT]  {  init();  this.options  =  options;  Iterator  iter  =  Arrays.asList(arguments).iterator();  String  token;    [BUGGY]    if(iter.hasNext())  {  tokens.add(token);  iter.remove();  }  [BUGGY]  while  (iter.hasNext())  {  {  token  =  (String)  iter.next();  if  (token.startsWith( "-- "))  {  if  (token.indexOf('=')  !=  -1)  {  tokens.add(token.substring(0,  token.indexOf('=')));  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  ArrayList  tokens  Iterator  iter  Option  currentOption  String[]  arguments  String  token  int  tokenLength  	projects/Cli2/src/java/org/apache/commons/cli/PosixParser.java	1.0	105	106	1	replace	    if(iter.hasNext())  {  tokens.add(token);  iter.remove();  }		non-compiled	[CE]  variable  token  might  not  have  been  initialized	19	None
125	[BUG]  [BUGGY]    if(iter.hasNext())  {  tokens.add(token);  }  [CE]  variable  token  might  not  have  been  initialized  [CONTEXT]  {  init();  this.options  =  options;  Iterator  iter  =  Arrays.asList(arguments).iterator();  String  token;    [BUGGY]    if(iter.hasNext())  {  tokens.add(token);  }  [BUGGY]  while  (iter.hasNext())  {  {  token  =  (String)  iter.next();  if  (token.startsWith( "-- "))  {  if  (token.indexOf('=')  !=  -1)  {  tokens.add(token.substring(0,  token.indexOf('=')));  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  ArrayList  tokens  Iterator  iter  Option  currentOption  String[]  arguments  String  token  int  tokenLength  	projects/Cli2/src/java/org/apache/commons/cli/PosixParser.java	1.0	105	106	1	replace	    if(iter.hasNext())  {  tokens.add(token);  }		non-compiled	[CE]  variable  token  might  not  have  been  initialized	19	None
143	[BUG]  [BUGGY]    tokens.add(token);  currentOption  =  options.getOption(arguments[0].iterator());  [CE]  cannot  find  symbol  token  [CONTEXT]  {  init();  this.options  =  options;    [BUGGY]    tokens.add(token);  currentOption  =  options.getOption(arguments[0].iterator());  [BUGGY]  Iterator  iter  =  Arrays.asList(arguments).iterator();  String  token;  while  (iter.hasNext())  {  token  =  (String)  iter.next();  if  (token.startsWith( "-- "))  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  ArrayList  tokens  Iterator  iter  Option  currentOption  String[]  arguments  String  token  int  tokenLength  	projects/Cli2/src/java/org/apache/commons/cli/PosixParser.java	1.0	101	101	1	replace	    tokens.add(token);  currentOption  =  options.getOption(arguments[0].iterator());		non-compiled	[CE]  cannot  find  symbol  token	17	None
144	[BUG]  [BUGGY]    tokens.addAll( "-- ");  currentOption  =  options.getOption(arguments).iterator();  [CE]  no  suitable  method  found  for  addAll(String)  [CONTEXT]  {  init();  this.options  =  options;    [BUGGY]    tokens.addAll( "-- ");  currentOption  =  options.getOption(arguments).iterator();  [BUGGY]  Iterator  iter  =  Arrays.asList(arguments).iterator();  String  token;  while  (iter.hasNext())  {  token  =  (String)  iter.next();  if  (token.startsWith( "-- "))  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  ArrayList  tokens  Iterator  iter  Option  currentOption  String[]  arguments  String  token  int  tokenLength  	projects/Cli2/src/java/org/apache/commons/cli/PosixParser.java	1.0	101	101	1	replace	    tokens.addAll( "-- ");  currentOption  =  options.getOption(arguments).iterator();		non-compiled	[CE]  no  suitable  method  found  for  addAll(String)	17	None
145	[BUG]  [BUGGY]    tokens.add(token);  currentOption  =  options.getOption(arguments[0],  arguments[1]);  [CE]  cannot  find  symbol  token  [CONTEXT]  {  init();  this.options  =  options;    [BUGGY]    tokens.add(token);  currentOption  =  options.getOption(arguments[0],  arguments[1]);  [BUGGY]  Iterator  iter  =  Arrays.asList(arguments).iterator();  String  token;  while  (iter.hasNext())  {  token  =  (String)  iter.next();  if  (token.startsWith( "-- "))  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  ArrayList  tokens  Iterator  iter  Option  currentOption  String[]  arguments  String  token  int  tokenLength  	projects/Cli2/src/java/org/apache/commons/cli/PosixParser.java	1.0	101	101	1	replace	    tokens.add(token);  currentOption  =  options.getOption(arguments[0],  arguments[1]);		non-compiled	[CE]  cannot  find  symbol  token	17	None
161	[BUG]  [BUGGY]    return  tokens.toArray(new  ArrayList());  [CE]  illegal  start  of  type  [CONTEXT]    [BUGGY]    return  tokens.toArray(new  ArrayList());  [BUGGY]  private  ArrayList  tokens  =  new  ArrayList();  [CLASS]  PosixParser  [VARIABLES]  	projects/Cli2/src/java/org/apache/commons/cli/PosixParser.java	1.0	33	33	1	replace	    return  tokens.toArray(new  ArrayList());		non-compiled	[CE]  illegal  start  of  type	3	None
163	[BUG]  [BUGGY]    tokens.add(PositionParser.OPTIONAL_TOKENS_PER_SECTION);  [CE]  <identifier>  expected  [CONTEXT]    [BUGGY]    tokens.add(PositionParser.OPTIONAL_TOKENS_PER_SECTION);  [BUGGY]  private  ArrayList  tokens  =  new  ArrayList();  [CLASS]  PosixParser  [VARIABLES]  	projects/Cli2/src/java/org/apache/commons/cli/PosixParser.java	1.0	33	33	1	replace	    tokens.add(PositionParser.OPTIONAL_TOKENS_PER_SECTION);		non-compiled	[CE]  <identifier>  expected	3	None
164	[BUG]  [BUGGY]    tokens.add(PositionParser.OPTIONAL_TOKENS_PER_SECOND);  [CE]  <identifier>  expected  [CONTEXT]    [BUGGY]    tokens.add(PositionParser.OPTIONAL_TOKENS_PER_SECOND);  [BUGGY]  private  ArrayList  tokens  =  new  ArrayList();  [CLASS]  PosixParser  [VARIABLES]  	projects/Cli2/src/java/org/apache/commons/cli/PosixParser.java	1.0	33	33	1	replace	    tokens.add(PositionParser.OPTIONAL_TOKENS_PER_SECOND);		non-compiled	[CE]  <identifier>  expected	3	None
165	[BUG]  [BUGGY]    tokens.add(PositionParser.OPTIONAL_TOKENS_PER_THRESHOLD);  [CE]  <identifier>  expected  [CONTEXT]    [BUGGY]    tokens.add(PositionParser.OPTIONAL_TOKENS_PER_THRESHOLD);  [BUGGY]  private  ArrayList  tokens  =  new  ArrayList();  [CLASS]  PosixParser  [VARIABLES]  	projects/Cli2/src/java/org/apache/commons/cli/PosixParser.java	1.0	33	33	1	replace	    tokens.add(PositionParser.OPTIONAL_TOKENS_PER_THRESHOLD);		non-compiled	[CE]  <identifier>  expected	3	None
183	[BUG]  [BUGGY]  [FE]  NullPointerException  test  [CONTEXT]  private  void  init()  {  eatTheRest  =  false;  [BUGGY]  tokens.add(currentOption.getKey());  [BUGGY]  currentOption  =  null;  }  [CLASS]  PosixParser  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  ArrayList  tokens  Options  options  Option  currentOption  boolean  eatTheRest  	projects/Cli2/src/java/org/apache/commons/cli/PosixParser.java	1.0	52	52	1	add	tokens.add(currentOption.getKey());	tokens.clear();  	compilable	  [FE]  NullPointerException  test	6	1
184	[BUG]  [BUGGY]  tokens.add(currentOption.getKey());  [FE]  NullPointerException  test  [CONTEXT]  private  void  init()  {  eatTheRest  =  false;  [BUGGY]  tokens.add(currentOption.getKey());  [BUGGY]  currentOption  =  null;  }  [CLASS]  PosixParser  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  ArrayList  tokens  Options  options  Option  currentOption  boolean  eatTheRest  	projects/Cli2/src/java/org/apache/commons/cli/PosixParser.java	1.0	52	52	1	replace	tokens.add(currentOption.getKey());	tokens.clear();  	compilable	  [FE]  NullPointerException  test	6	1
184	[BUG]  [BUGGY]  tokens.add(currentOption.getLocalOption());  [CE]  cannot  find  symbol  [CONTEXT]  private  void  init()  {  eatTheRest  =  false;  [BUGGY]  tokens.add(currentOption.getLocalOption());  [BUGGY]  currentOption  =  null;  }  [CLASS]  PosixParser  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  ArrayList  tokens  Options  options  Option  currentOption  boolean  eatTheRest  	projects/Cli2/src/java/org/apache/commons/cli/PosixParser.java	1.0	52	52	1	replace	tokens.add(currentOption.getLocalOption());	tokens.clear();  	non-compiled	[CE]  cannot  find  symbol	6	None
203	[BUG]  [BUGGY]    tokens.add( "-- ");  currentOption  =  options.getOption(this);  [CE]  method  getOption  in  class  Options  cannot  be  applied  to  given  types;  [CONTEXT]  private  void  init()  {  eatTheRest  =  false;  tokens.clear();  [BUGGY]    tokens.add( "-- ");  currentOption  =  options.getOption(this);  [BUGGY]  currentOption  =  null;  }  [CLASS]  PosixParser  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  ArrayList  tokens  Options  options  Option  currentOption  boolean  eatTheRest  	projects/Cli2/src/java/org/apache/commons/cli/PosixParser.java	1.0	53	53	1	replace	    tokens.add( "-- ");  currentOption  =  options.getOption(this);		non-compiled	[CE]  method  getOption  in  class  Options  cannot  be  applied  to  given  types;	9	None
204	[BUG]  [BUGGY]  [FE]  ComparisonFailure  test  [CONTEXT]  private  void  init()  {  eatTheRest  =  false;  tokens.clear();  [BUGGY]    tokens.add( "-- ");  currentOption  =  null;  [BUGGY]  currentOption  =  null;  }  [CLASS]  PosixParser  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  ArrayList  tokens  Options  options  Option  currentOption  boolean  eatTheRest  	projects/Cli2/src/java/org/apache/commons/cli/PosixParser.java	1.0	53	53	1	add	    tokens.add( "-- ");  currentOption  =  null;		compilable	  [FE]  ComparisonFailure  test	9	1
205	[BUG]  [BUGGY]    tokens.add( "-- ");  currentOption  =  null;  [FE]  ComparisonFailure  test  [CONTEXT]  private  void  init()  {  eatTheRest  =  false;  tokens.clear();  [BUGGY]    tokens.add( "-- ");  currentOption  =  null;  [BUGGY]  currentOption  =  null;  }  [CLASS]  PosixParser  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  ArrayList  tokens  Options  options  Option  currentOption  boolean  eatTheRest  	projects/Cli2/src/java/org/apache/commons/cli/PosixParser.java	1.0	53	53	1	replace	    tokens.add( "-- ");  currentOption  =  null;		compilable	  [FE]  ComparisonFailure  test	9	1
205	[BUG]  [BUGGY]    tokens.add(options.size()  -  1);  [CE]  cannot  find  symbol  [CONTEXT]  private  void  init()  {  eatTheRest  =  false;  tokens.clear();  [BUGGY]    tokens.add(options.size()  -  1);  [BUGGY]  currentOption  =  null;  }  [CLASS]  PosixParser  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  ArrayList  tokens  Options  options  Option  currentOption  boolean  eatTheRest  	projects/Cli2/src/java/org/apache/commons/cli/PosixParser.java	1.0	53	53	1	replace	    tokens.add(options.size()  -  1);		non-compiled	[CE]  cannot  find  symbol	9	None
223	[BUG]  [BUGGY]    tokens.add(options.size()  -  1);  currentOption  =  null;  [CE]  cannot  find  symbol  [CONTEXT]  private  void  init()  {  [BUGGY]    tokens.add(options.size()  -  1);  currentOption  =  null;  [BUGGY]  eatTheRest  =  false;  tokens.clear();  currentOption  =  null;  }  [CLASS]  PosixParser  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  ArrayList  tokens  Options  options  Option  currentOption  boolean  eatTheRest  	projects/Cli2/src/java/org/apache/commons/cli/PosixParser.java	1.0	51	51	1	replace	    tokens.add(options.size()  -  1);  currentOption  =  null;		non-compiled	[CE]  cannot  find  symbol	5	None
224	[BUG]  [BUGGY]    tokens.add(options.size()  -  1);  [CE]  cannot  find  symbol  [CONTEXT]  private  void  init()  {  [BUGGY]    tokens.add(options.size()  -  1);  [BUGGY]  eatTheRest  =  false;  tokens.clear();  currentOption  =  null;  }  [CLASS]  PosixParser  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  ArrayList  tokens  Options  options  Option  currentOption  boolean  eatTheRest  	projects/Cli2/src/java/org/apache/commons/cli/PosixParser.java	1.0	51	51	1	replace	    tokens.add(options.size()  -  1);		non-compiled	[CE]  cannot  find  symbol	5	None
225	[BUG]  [BUGGY]    tokens.clear();  tokens.add(option.getLocale());  [CE]  cannot  find  symbol  option  [CONTEXT]  private  void  init()  {  [BUGGY]    tokens.clear();  tokens.add(option.getLocale());  [BUGGY]  eatTheRest  =  false;  tokens.clear();  currentOption  =  null;  }  [CLASS]  PosixParser  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  ArrayList  tokens  Options  options  Option  currentOption  boolean  eatTheRest  	projects/Cli2/src/java/org/apache/commons/cli/PosixParser.java	1.0	51	51	1	replace	    tokens.clear();  tokens.add(option.getLocale());		non-compiled	[CE]  cannot  find  symbol  option	5	None
263	[BUG]  [BUGGY]  [FE]  UnrecognizedOptionException  test  [CONTEXT]  while  (iter.hasNext())  {    [BUGGY]  token  =(String)iter.next()  +  1;  [BUGGY]    if  (token.startsWith( "-- "))  {  if  (token.indexOf('=')  !=  -1)  {  tokens.add(token.substring(0,  token.indexOf('=')));  tokens.add(token.substring(token.indexOf('=')  +  1,  token.length()));  }  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  ArrayList  tokens  Iterator  iter  Option  currentOption  String[]  arguments  String  token  int  tokenLength  	projects/Cli2/src/java/org/apache/commons/cli/PosixParser.java	1.0	108	108	1	add	token  =(String)iter.next()  +  1;	token  =  (String)  iter.next();  	compilable	  [FE]  UnrecognizedOptionException  test	20	1
264	[BUG]  [BUGGY]  token  =(String)iter.next()  +  1;  [FE]  UnrecognizedOptionException  test  [CONTEXT]  while  (iter.hasNext())  {    [BUGGY]  token  =(String)iter.next()  +  1;  [BUGGY]    if  (token.startsWith( "-- "))  {  if  (token.indexOf('=')  !=  -1)  {  tokens.add(token.substring(0,  token.indexOf('=')));  tokens.add(token.substring(token.indexOf('=')  +  1,  token.length()));  }  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  ArrayList  tokens  Iterator  iter  Option  currentOption  String[]  arguments  String  token  int  tokenLength  	projects/Cli2/src/java/org/apache/commons/cli/PosixParser.java	1.0	108	108	1	replace	token  =(String)iter.next()  +  1;	token  =  (String)  iter.next();  	compilable	  [FE]  UnrecognizedOptionException  test	20	1
281	[BUG]  [BUGGY]  initialize();  [CE]  cannot  find  symbol  [CONTEXT]  {  [BUGGY]  initialize();  [BUGGY]  this.options  =  options;  Iterator  iter  =  Arrays.asList(arguments).iterator();  String  token;  while  (iter.hasNext())  {  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  ArrayList  tokens  Iterator  iter  Option  currentOption  String[]  arguments  String  token  int  tokenLength  	projects/Cli2/src/java/org/apache/commons/cli/PosixParser.java	1.0	97	97	1	replace	initialize();	init();  	non-compiled	[CE]  cannot  find  symbol	12	None
282	[BUG]  [BUGGY]  burst();  [CE]  cannot  find  symbol  [CONTEXT]  {  [BUGGY]  burst();  [BUGGY]  this.options  =  options;  Iterator  iter  =  Arrays.asList(arguments).iterator();  String  token;  while  (iter.hasNext())  {  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  ArrayList  tokens  Iterator  iter  Option  currentOption  String[]  arguments  String  token  int  tokenLength  	projects/Cli2/src/java/org/apache/commons/cli/PosixParser.java	1.0	97	97	1	replace	burst();	init();  	non-compiled	[CE]  cannot  find  symbol	12	None
283	[BUG]  [BUGGY]  [FE]  UnrecognizedOptionException  test  [CONTEXT]  {  [BUGGY]  tokens.clear();  [BUGGY]  this.options  =  options;  Iterator  iter  =  Arrays.asList(arguments).iterator();  String  token;  while  (iter.hasNext())  {  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  ArrayList  tokens  Iterator  iter  Option  currentOption  String[]  arguments  String  token  int  tokenLength  	projects/Cli2/src/java/org/apache/commons/cli/PosixParser.java	1.0	97	97	1	add	tokens.clear();	init();  	compilable	  [FE]  UnrecognizedOptionException  test	12	1
284	[BUG]  [BUGGY]  tokens.clear();  [FE]  UnrecognizedOptionException  test  [CONTEXT]  {  [BUGGY]  tokens.clear();  [BUGGY]  this.options  =  options;  Iterator  iter  =  Arrays.asList(arguments).iterator();  String  token;  while  (iter.hasNext())  {  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  ArrayList  tokens  Iterator  iter  Option  currentOption  String[]  arguments  String  token  int  tokenLength  	projects/Cli2/src/java/org/apache/commons/cli/PosixParser.java	1.0	97	97	1	replace	tokens.clear();	init();  	compilable	  [FE]  UnrecognizedOptionException  test	12	1
284	[BUG]  [BUGGY]  tokens.add(token);  [CE]  cannot  find  symbol  token  [CONTEXT]  {  [BUGGY]  tokens.add(token);  [BUGGY]  this.options  =  options;  Iterator  iter  =  Arrays.asList(arguments).iterator();  String  token;  while  (iter.hasNext())  {  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  ArrayList  tokens  Iterator  iter  Option  currentOption  String[]  arguments  String  token  int  tokenLength  	projects/Cli2/src/java/org/apache/commons/cli/PosixParser.java	1.0	97	97	1	replace	tokens.add(token);	init();  	non-compiled	[CE]  cannot  find  symbol  token	12	None
301	[BUG]  [BUGGY]  Iterator  iter  =  options.iterator();  [CE]  cannot  find  symbol  [CONTEXT]  {  init();  this.options  =  options;    [BUGGY]  Iterator  iter  =  options.iterator();  [BUGGY]  String  token;  while  (iter.hasNext())  {  token  =  (String)  iter.next();  if  (token.startsWith( "-- "))  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  ArrayList  tokens  Iterator  iter  Option  currentOption  String[]  arguments  String  token  int  tokenLength  	projects/Cli2/src/java/org/apache/commons/cli/PosixParser.java	1.0	101	101	1	replace	Iterator  iter  =  options.iterator();	Iterator  iter  =  Arrays.asList(arguments).iterator();  	non-compiled	[CE]  cannot  find  symbol	16	None
303	[BUG]  [BUGGY]  Iterator  iter  =  this.arguments.iterator();  [CE]  cannot  find  symbol  arguments  [CONTEXT]  {  init();  this.options  =  options;    [BUGGY]  Iterator  iter  =  this.arguments.iterator();  [BUGGY]  String  token;  while  (iter.hasNext())  {  token  =  (String)  iter.next();  if  (token.startsWith( "-- "))  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  ArrayList  tokens  Iterator  iter  Option  currentOption  String[]  arguments  String  token  int  tokenLength  	projects/Cli2/src/java/org/apache/commons/cli/PosixParser.java	1.0	101	101	1	replace	Iterator  iter  =  this.arguments.iterator();	Iterator  iter  =  Arrays.asList(arguments).iterator();  	non-compiled	[CE]  cannot  find  symbol  arguments	16	None
304	[BUG]  [BUGGY]  Iterator  iter  =  arguments.iterator();  [CE]  cannot  find  symbol  [CONTEXT]  {  init();  this.options  =  options;    [BUGGY]  Iterator  iter  =  arguments.iterator();  [BUGGY]  String  token;  while  (iter.hasNext())  {  token  =  (String)  iter.next();  if  (token.startsWith( "-- "))  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  ArrayList  tokens  Iterator  iter  Option  currentOption  String[]  arguments  String  token  int  tokenLength  	projects/Cli2/src/java/org/apache/commons/cli/PosixParser.java	1.0	101	101	1	replace	Iterator  iter  =  arguments.iterator();	Iterator  iter  =  Arrays.asList(arguments).iterator();  	non-compiled	[CE]  cannot  find  symbol	16	None
321	[BUG]  [BUGGY]    tokenLength  =  token.length();  [CE]  cannot  find  symbol  tokenLength  [CONTEXT]  {  [BUGGY]    tokenLength  =  token.length();  [BUGGY]  init();  this.options  =  options;  Iterator  iter  =  Arrays.asList(arguments).iterator();  String  token;  while  (iter.hasNext())  {  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  ArrayList  tokens  Iterator  iter  Option  currentOption  String[]  arguments  String  token  int  tokenLength  	projects/Cli2/src/java/org/apache/commons/cli/PosixParser.java	1.0	97	97	1	replace	    tokenLength  =  token.length();		non-compiled	[CE]  cannot  find  symbol  tokenLength	13	None
323	[BUG]  [BUGGY]    currentOption  =  options.getOption(tokenLength);  tokens.add(token);  [CE]  cannot  find  symbol  tokenLength  [CONTEXT]  {  [BUGGY]    currentOption  =  options.getOption(tokenLength);  tokens.add(token);  [BUGGY]  init();  this.options  =  options;  Iterator  iter  =  Arrays.asList(arguments).iterator();  String  token;  while  (iter.hasNext())  {  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  ArrayList  tokens  Iterator  iter  Option  currentOption  String[]  arguments  String  token  int  tokenLength  	projects/Cli2/src/java/org/apache/commons/cli/PosixParser.java	1.0	97	97	1	replace	    currentOption  =  options.getOption(tokenLength);  tokens.add(token);		non-compiled	[CE]  cannot  find  symbol  tokenLength	13	None
324	[BUG]  [BUGGY]    tokenLength  =  token.length();  tokens.add(token);  [CE]  cannot  find  symbol  tokenLength  [CONTEXT]  {  [BUGGY]    tokenLength  =  token.length();  tokens.add(token);  [BUGGY]  init();  this.options  =  options;  Iterator  iter  =  Arrays.asList(arguments).iterator();  String  token;  while  (iter.hasNext())  {  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  ArrayList  tokens  Iterator  iter  Option  currentOption  String[]  arguments  String  token  int  tokenLength  	projects/Cli2/src/java/org/apache/commons/cli/PosixParser.java	1.0	97	97	1	replace	    tokenLength  =  token.length();  tokens.add(token);		non-compiled	[CE]  cannot  find  symbol  tokenLength	13	None
325	[BUG]  [BUGGY]    currentOption  =  options.getOption(token);  tokenLength  =  tokenLength();  [CE]  cannot  find  symbol  token  [CONTEXT]  {  [BUGGY]    currentOption  =  options.getOption(token);  tokenLength  =  tokenLength();  [BUGGY]  init();  this.options  =  options;  Iterator  iter  =  Arrays.asList(arguments).iterator();  String  token;  while  (iter.hasNext())  {  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  ArrayList  tokens  Iterator  iter  Option  currentOption  String[]  arguments  String  token  int  tokenLength  	projects/Cli2/src/java/org/apache/commons/cli/PosixParser.java	1.0	97	97	1	replace	    currentOption  =  options.getOption(token);  tokenLength  =  tokenLength();		non-compiled	[CE]  cannot  find  symbol  token	13	None
345	[BUG]  [BUGGY]    tokens.add(options.getKey());  currentOption  =  null;  [CE]  cannot  find  symbol  [CONTEXT]  private  void  init()  {  eatTheRest  =  false;  tokens.clear();  currentOption  =  null;  [BUGGY]    tokens.add(options.getKey());  currentOption  =  null;  [BUGGY]  }  [CLASS]  PosixParser  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  ArrayList  tokens  Options  options  Option  currentOption  boolean  eatTheRest  	projects/Cli2/src/java/org/apache/commons/cli/PosixParser.java	1.0	54	54	1	replace	    tokens.add(options.getKey());  currentOption  =  null;		non-compiled	[CE]  cannot  find  symbol	11	None
361	[BUG]  [BUGGY]  [FE]  ClassCastException  test  [CONTEXT]  while  (iter.hasNext())  {    [BUGGY]    ArrayList  tokens  =(ArrayList)iter.next();  [BUGGY]  token  =  (String)  iter.next();  if  (token.startsWith( "-- "))  {  if  (token.indexOf('=')  !=  -1)  {  tokens.add(token.substring(0,  token.indexOf('=')));  tokens.add(token.substring(token.indexOf('=')  +  1,  token.length()));  }  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  ArrayList  tokens  Iterator  iter  Option  currentOption  String[]  arguments  String  token  int  tokenLength  	projects/Cli2/src/java/org/apache/commons/cli/PosixParser.java	1.0	108	108	1	add	    ArrayList  tokens  =(ArrayList)iter.next();		compilable	  [FE]  ClassCastException  test	21	1
362	[BUG]  [BUGGY]    ArrayList  tokens  =(ArrayList)iter.next();  [FE]  ClassCastException  test  [CONTEXT]  while  (iter.hasNext())  {    [BUGGY]    ArrayList  tokens  =(ArrayList)iter.next();  [BUGGY]  token  =  (String)  iter.next();  if  (token.startsWith( "-- "))  {  if  (token.indexOf('=')  !=  -1)  {  tokens.add(token.substring(0,  token.indexOf('=')));  tokens.add(token.substring(token.indexOf('=')  +  1,  token.length()));  }  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  ArrayList  tokens  Iterator  iter  Option  currentOption  String[]  arguments  String  token  int  tokenLength  	projects/Cli2/src/java/org/apache/commons/cli/PosixParser.java	1.0	108	108	1	replace	    ArrayList  tokens  =(ArrayList)iter.next();		compilable	  [FE]  ClassCastException  test	21	1
363	[BUG]  [BUGGY]    Iterator  iter  =  options.iterator();  [CE]  variable  iter  is  already  defined  in  method  flatten(Options,String[],boolean)  [CONTEXT]  while  (iter.hasNext())  {    [BUGGY]    Iterator  iter  =  options.iterator();  [BUGGY]  token  =  (String)  iter.next();  if  (token.startsWith( "-- "))  {  if  (token.indexOf('=')  !=  -1)  {  tokens.add(token.substring(0,  token.indexOf('=')));  tokens.add(token.substring(token.indexOf('=')  +  1,  token.length()));  }  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  ArrayList  tokens  Iterator  iter  Option  currentOption  String[]  arguments  String  token  int  tokenLength  	projects/Cli2/src/java/org/apache/commons/cli/PosixParser.java	1.0	108	108	1	replace	    Iterator  iter  =  options.iterator();		non-compiled	[CE]  variable  iter  is  already  defined  in  method  flatten(Options,String[],boolean)	21	None
364	[BUG]  [BUGGY]    Iterator  iter  =(Option)iter.next();  [CE]  variable  iter  is  already  defined  in  method  flatten(Options,String[],boolean)  [CONTEXT]  while  (iter.hasNext())  {    [BUGGY]    Iterator  iter  =(Option)iter.next();  [BUGGY]  token  =  (String)  iter.next();  if  (token.startsWith( "-- "))  {  if  (token.indexOf('=')  !=  -1)  {  tokens.add(token.substring(0,  token.indexOf('=')));  tokens.add(token.substring(token.indexOf('=')  +  1,  token.length()));  }  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  ArrayList  tokens  Iterator  iter  Option  currentOption  String[]  arguments  String  token  int  tokenLength  	projects/Cli2/src/java/org/apache/commons/cli/PosixParser.java	1.0	108	108	1	replace	    Iterator  iter  =(Option)iter.next();		non-compiled	[CE]  variable  iter  is  already  defined  in  method  flatten(Options,String[],boolean)	21	None
365	[BUG]  [BUGGY]    Iterator  iter  =(String)iter.next();  [CE]  variable  iter  is  already  defined  in  method  flatten(Options,String[],boolean)  [CONTEXT]  while  (iter.hasNext())  {    [BUGGY]    Iterator  iter  =(String)iter.next();  [BUGGY]  token  =  (String)  iter.next();  if  (token.startsWith( "-- "))  {  if  (token.indexOf('=')  !=  -1)  {  tokens.add(token.substring(0,  token.indexOf('=')));  tokens.add(token.substring(token.indexOf('=')  +  1,  token.length()));  }  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  ArrayList  tokens  Iterator  iter  Option  currentOption  String[]  arguments  String  token  int  tokenLength  	projects/Cli2/src/java/org/apache/commons/cli/PosixParser.java	1.0	108	108	1	replace	    Iterator  iter  =(String)iter.next();		non-compiled	[CE]  variable  iter  is  already  defined  in  method  flatten(Options,String[],boolean)	21	None
382	[BUG]  [BUGGY]    currentOption  =  options.getOption(arguments.length);  [CE]  method  getOption  in  class  Options  cannot  be  applied  to  given  types;  [CONTEXT]  {  init();  [BUGGY]    currentOption  =  options.getOption(arguments.length);  [BUGGY]  this.options  =  options;  Iterator  iter  =  Arrays.asList(arguments).iterator();  String  token;  while  (iter.hasNext())  {  token  =  (String)  iter.next();  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  ArrayList  tokens  Iterator  iter  Option  currentOption  String[]  arguments  String  token  int  tokenLength  	projects/Cli2/src/java/org/apache/commons/cli/PosixParser.java	1.0	98	98	1	replace	    currentOption  =  options.getOption(arguments.length);		non-compiled	[CE]  method  getOption  in  class  Options  cannot  be  applied  to  given  types;	15	None
383	[BUG]  [BUGGY]    Arrays.sort(tokenLength);  tokens.add(token);  [CE]  cannot  find  symbol  tokenLength  [CONTEXT]  {  init();  [BUGGY]    Arrays.sort(tokenLength);  tokens.add(token);  [BUGGY]  this.options  =  options;  Iterator  iter  =  Arrays.asList(arguments).iterator();  String  token;  while  (iter.hasNext())  {  token  =  (String)  iter.next();  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  ArrayList  tokens  Iterator  iter  Option  currentOption  String[]  arguments  String  token  int  tokenLength  	projects/Cli2/src/java/org/apache/commons/cli/PosixParser.java	1.0	98	98	1	replace	    Arrays.sort(tokenLength);  tokens.add(token);		non-compiled	[CE]  cannot  find  symbol  tokenLength	15	None
385	[BUG]  [BUGGY]    tokens.add(tokenLength);  [CE]  cannot  find  symbol  tokenLength  [CONTEXT]  {  init();  [BUGGY]    tokens.add(tokenLength);  [BUGGY]  this.options  =  options;  Iterator  iter  =  Arrays.asList(arguments).iterator();  String  token;  while  (iter.hasNext())  {  token  =  (String)  iter.next();  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  ArrayList  tokens  Iterator  iter  Option  currentOption  String[]  arguments  String  token  int  tokenLength  	projects/Cli2/src/java/org/apache/commons/cli/PosixParser.java	1.0	98	98	1	replace	    tokens.add(tokenLength);		non-compiled	[CE]  cannot  find  symbol  tokenLength	15	None
1	[BUG]  [BUGGY]    tokens.add(option);  [CE]  cannot  find  symbol  option  [CONTEXT]  private  void  init()  {  eatTheRest  =  false;  tokens.clear();  currentOption  =  null;  [BUGGY]    tokens.add(option);  [BUGGY]  }  [CLASS]  PosixParser  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  ArrayList  tokens  Options  options  Option  currentOption  boolean  eatTheRest  	projects/Cli2/src/java/org/apache/commons/cli/PosixParser.java	1.0	54	54	1	replace	    tokens.add(option);		non-compiled	[CE]  cannot  find  symbol  option	11	None
3	[BUG]  [BUGGY]    tokens.add(option);  currentOption  =  null;  [CE]  cannot  find  symbol  option  [CONTEXT]  private  void  init()  {  eatTheRest  =  false;  tokens.clear();  currentOption  =  null;  [BUGGY]    tokens.add(option);  currentOption  =  null;  [BUGGY]  }  [CLASS]  PosixParser  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  ArrayList  tokens  Options  options  Option  currentOption  boolean  eatTheRest  	projects/Cli2/src/java/org/apache/commons/cli/PosixParser.java	1.0	54	54	1	replace	    tokens.add(option);  currentOption  =  null;		non-compiled	[CE]  cannot  find  symbol  option	11	None
4	[BUG]  [BUGGY]  [FE]  UnrecognizedOptionException  test  [CONTEXT]  private  void  init()  {  eatTheRest  =  false;  tokens.clear();  currentOption  =  null;  [BUGGY]    tokens.add( "- ");  currentOption  =  null;  [BUGGY]  }  [CLASS]  PosixParser  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  ArrayList  tokens  Options  options  Option  currentOption  boolean  eatTheRest  	projects/Cli2/src/java/org/apache/commons/cli/PosixParser.java	1.0	54	54	1	add	    tokens.add( "- ");  currentOption  =  null;		compilable	  [FE]  UnrecognizedOptionException  test	11	1
5	[BUG]  [BUGGY]    tokens.add( "- ");  currentOption  =  null;  [FE]  UnrecognizedOptionException  test  [CONTEXT]  private  void  init()  {  eatTheRest  =  false;  tokens.clear();  currentOption  =  null;  [BUGGY]    tokens.add( "- ");  currentOption  =  null;  [BUGGY]  }  [CLASS]  PosixParser  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  ArrayList  tokens  Options  options  Option  currentOption  boolean  eatTheRest  	projects/Cli2/src/java/org/apache/commons/cli/PosixParser.java	1.0	54	54	1	replace	    tokens.add( "- ");  currentOption  =  null;		compilable	  [FE]  UnrecognizedOptionException  test	11	1
32	[BUG]  [BUGGY]  [FE]  UnrecognizedOptionException  test  [CONTEXT]  private  void  init()  {  [BUGGY]    tokens.add(currentOption);  [BUGGY]  eatTheRest  =  false;  tokens.clear();  currentOption  =  null;  }  [CLASS]  PosixParser  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  ArrayList  tokens  Options  options  Option  currentOption  boolean  eatTheRest  	projects/Cli2/src/java/org/apache/commons/cli/PosixParser.java	1.0	51	51	1	add	    tokens.add(currentOption);		compilable	  [FE]  UnrecognizedOptionException  test	5	1
33	[BUG]  [BUGGY]    tokens.add(currentOption);  [FE]  UnrecognizedOptionException  test  [CONTEXT]  private  void  init()  {  [BUGGY]    tokens.add(currentOption);  [BUGGY]  eatTheRest  =  false;  tokens.clear();  currentOption  =  null;  }  [CLASS]  PosixParser  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  ArrayList  tokens  Options  options  Option  currentOption  boolean  eatTheRest  	projects/Cli2/src/java/org/apache/commons/cli/PosixParser.java	1.0	51	51	1	replace	    tokens.add(currentOption);		compilable	  [FE]  UnrecognizedOptionException  test	5	1
33	[BUG]  [BUGGY]  [FE]  UnrecognizedOptionException  test  [CONTEXT]  private  void  init()  {  [BUGGY]    tokens.add( "- ");  [BUGGY]  eatTheRest  =  false;  tokens.clear();  currentOption  =  null;  }  [CLASS]  PosixParser  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  ArrayList  tokens  Options  options  Option  currentOption  boolean  eatTheRest  	projects/Cli2/src/java/org/apache/commons/cli/PosixParser.java	1.0	51	51	1	add	    tokens.add( "- ");		compilable	  [FE]  UnrecognizedOptionException  test	5	1
34	[BUG]  [BUGGY]    tokens.add( "- ");  [FE]  UnrecognizedOptionException  test  [CONTEXT]  private  void  init()  {  [BUGGY]    tokens.add( "- ");  [BUGGY]  eatTheRest  =  false;  tokens.clear();  currentOption  =  null;  }  [CLASS]  PosixParser  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  ArrayList  tokens  Options  options  Option  currentOption  boolean  eatTheRest  	projects/Cli2/src/java/org/apache/commons/cli/PosixParser.java	1.0	51	51	1	replace	    tokens.add( "- ");		compilable	  [FE]  UnrecognizedOptionException  test	5	1
34	[BUG]  [BUGGY]    tokens.add(option);  [CE]  cannot  find  symbol  option  [CONTEXT]  private  void  init()  {  [BUGGY]    tokens.add(option);  [BUGGY]  eatTheRest  =  false;  tokens.clear();  currentOption  =  null;  }  [CLASS]  PosixParser  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  ArrayList  tokens  Options  options  Option  currentOption  boolean  eatTheRest  	projects/Cli2/src/java/org/apache/commons/cli/PosixParser.java	1.0	51	51	1	replace	    tokens.add(option);		non-compiled	[CE]  cannot  find  symbol  option	5	None
35	[BUG]  [BUGGY]    tokens.add(token);  [CE]  cannot  find  symbol  token  [CONTEXT]  private  void  init()  {  [BUGGY]    tokens.add(token);  [BUGGY]  eatTheRest  =  false;  tokens.clear();  currentOption  =  null;  }  [CLASS]  PosixParser  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  ArrayList  tokens  Options  options  Option  currentOption  boolean  eatTheRest  	projects/Cli2/src/java/org/apache/commons/cli/PosixParser.java	1.0	51	51	1	replace	    tokens.add(token);		non-compiled	[CE]  cannot  find  symbol  token	5	None
61	[BUG]  [BUGGY]  [FE]  UnrecognizedOptionException  test  [CONTEXT]  {  init();  this.options  =  options;    [BUGGY]    Arrays.sort(arguments);  [BUGGY]  Iterator  iter  =  Arrays.asList(arguments).iterator();  String  token;  while  (iter.hasNext())  {  token  =  (String)  iter.next();  if  (token.startsWith( "-- "))  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  ArrayList  tokens  Iterator  iter  Option  currentOption  String[]  arguments  String  token  int  tokenLength  	projects/Cli2/src/java/org/apache/commons/cli/PosixParser.java	1.0	101	101	1	add	    Arrays.sort(arguments);		compilable	  [FE]  UnrecognizedOptionException  test	17	1
62	[BUG]  [BUGGY]    Arrays.sort(arguments);  [FE]  UnrecognizedOptionException  test  [CONTEXT]  {  init();  this.options  =  options;    [BUGGY]    Arrays.sort(arguments);  [BUGGY]  Iterator  iter  =  Arrays.asList(arguments).iterator();  String  token;  while  (iter.hasNext())  {  token  =  (String)  iter.next();  if  (token.startsWith( "-- "))  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  ArrayList  tokens  Iterator  iter  Option  currentOption  String[]  arguments  String  token  int  tokenLength  	projects/Cli2/src/java/org/apache/commons/cli/PosixParser.java	1.0	101	101	1	replace	    Arrays.sort(arguments);		compilable	  [FE]  UnrecognizedOptionException  test	17	1
62	[BUG]  [BUGGY]    currentOption  =  options.getOption(arguments);  [CE]  method  getOption  in  class  Options  cannot  be  applied  to  given  types;  [CONTEXT]  {  init();  this.options  =  options;    [BUGGY]    currentOption  =  options.getOption(arguments);  [BUGGY]  Iterator  iter  =  Arrays.asList(arguments).iterator();  String  token;  while  (iter.hasNext())  {  token  =  (String)  iter.next();  if  (token.startsWith( "-- "))  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  ArrayList  tokens  Iterator  iter  Option  currentOption  String[]  arguments  String  token  int  tokenLength  	projects/Cli2/src/java/org/apache/commons/cli/PosixParser.java	1.0	101	101	1	replace	    currentOption  =  options.getOption(arguments);		non-compiled	[CE]  method  getOption  in  class  Options  cannot  be  applied  to  given  types;	17	None
64	[BUG]  [BUGGY]  [FE]  UnrecognizedOptionException  test  [CONTEXT]  {  init();  this.options  =  options;    [BUGGY]    Arrays.sort(arguments);  currentOption  =  null;  [BUGGY]  Iterator  iter  =  Arrays.asList(arguments).iterator();  String  token;  while  (iter.hasNext())  {  token  =  (String)  iter.next();  if  (token.startsWith( "-- "))  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  ArrayList  tokens  Iterator  iter  Option  currentOption  String[]  arguments  String  token  int  tokenLength  	projects/Cli2/src/java/org/apache/commons/cli/PosixParser.java	1.0	101	101	1	add	    Arrays.sort(arguments);  currentOption  =  null;		compilable	  [FE]  UnrecognizedOptionException  test	17	1
65	[BUG]  [BUGGY]    Arrays.sort(arguments);  currentOption  =  null;  [FE]  UnrecognizedOptionException  test  [CONTEXT]  {  init();  this.options  =  options;    [BUGGY]    Arrays.sort(arguments);  currentOption  =  null;  [BUGGY]  Iterator  iter  =  Arrays.asList(arguments).iterator();  String  token;  while  (iter.hasNext())  {  token  =  (String)  iter.next();  if  (token.startsWith( "-- "))  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  ArrayList  tokens  Iterator  iter  Option  currentOption  String[]  arguments  String  token  int  tokenLength  	projects/Cli2/src/java/org/apache/commons/cli/PosixParser.java	1.0	101	101	1	replace	    Arrays.sort(arguments);  currentOption  =  null;		compilable	  [FE]  UnrecognizedOptionException  test	17	1
65	[BUG]  [BUGGY]    tokens.add(token);  currentOption  =  null;  [CE]  cannot  find  symbol  token  [CONTEXT]  {  init();  this.options  =  options;    [BUGGY]    tokens.add(token);  currentOption  =  null;  [BUGGY]  Iterator  iter  =  Arrays.asList(arguments).iterator();  String  token;  while  (iter.hasNext())  {  token  =  (String)  iter.next();  if  (token.startsWith( "-- "))  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  ArrayList  tokens  Iterator  iter  Option  currentOption  String[]  arguments  String  token  int  tokenLength  	projects/Cli2/src/java/org/apache/commons/cli/PosixParser.java	1.0	101	101	1	replace	    tokens.add(token);  currentOption  =  null;		non-compiled	[CE]  cannot  find  symbol  token	17	None
91	[BUG]  [BUGGY]  currentOption  =  new  Option(options.size());  [CE]  cannot  find  symbol  [CONTEXT]  private  void  init()  {  eatTheRest  =  false;  tokens.clear();  [BUGGY]  currentOption  =  new  Option(options.size());  [BUGGY]  }  [CLASS]  PosixParser  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  ArrayList  tokens  Options  options  Option  currentOption  boolean  eatTheRest  	projects/Cli2/src/java/org/apache/commons/cli/PosixParser.java	1.0	53	53	1	replace	currentOption  =  new  Option(options.size());	currentOption  =  null;  	non-compiled	[CE]  cannot  find  symbol	8	None
92	[BUG]  [BUGGY]  currentOption  =  new  Option(tokens.size());  [CE]  no  suitable  constructor  found  for  Option(int)  [CONTEXT]  private  void  init()  {  eatTheRest  =  false;  tokens.clear();  [BUGGY]  currentOption  =  new  Option(tokens.size());  [BUGGY]  }  [CLASS]  PosixParser  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  ArrayList  tokens  Options  options  Option  currentOption  boolean  eatTheRest  	projects/Cli2/src/java/org/apache/commons/cli/PosixParser.java	1.0	53	53	1	replace	currentOption  =  new  Option(tokens.size());	currentOption  =  null;  	non-compiled	[CE]  no  suitable  constructor  found  for  Option(int)	8	None
94	[BUG]  [BUGGY]  currentOption  =  new  Option( "- ");  [CE]  no  suitable  constructor  found  for  Option(String)  [CONTEXT]  private  void  init()  {  eatTheRest  =  false;  tokens.clear();  [BUGGY]  currentOption  =  new  Option( "- ");  [BUGGY]  }  [CLASS]  PosixParser  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  ArrayList  tokens  Options  options  Option  currentOption  boolean  eatTheRest  	projects/Cli2/src/java/org/apache/commons/cli/PosixParser.java	1.0	53	53	1	replace	currentOption  =  new  Option( "- ");	currentOption  =  null;  	non-compiled	[CE]  no  suitable  constructor  found  for  Option(String)	8	None
122	[BUG]  [BUGGY]  token  =(String)iter.next()?  String.valueOf(token.charAt(0))  :  String.valueOf(iter.next());  [CE]  incompatible  types  [CONTEXT]  while  (iter.hasNext())  {    [BUGGY]  token  =(String)iter.next()?  String.valueOf(token.charAt(0))  :  String.valueOf(iter.next());  [BUGGY]    if  (token.startsWith( "-- "))  {  if  (token.indexOf('=')  !=  -1)  {  tokens.add(token.substring(0,  token.indexOf('=')));  tokens.add(token.substring(token.indexOf('=')  +  1,  token.length()));  }  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  ArrayList  tokens  Iterator  iter  Option  currentOption  String[]  arguments  String  token  int  tokenLength  	projects/Cli2/src/java/org/apache/commons/cli/PosixParser.java	1.0	108	108	1	replace	token  =(String)iter.next()?  String.valueOf(token.charAt(0))  :  String.valueOf(iter.next());	token  =  (String)  iter.next();  	non-compiled	[CE]  incompatible  types	20	None
123	[BUG]  [BUGGY]  token  =(String)iter.next()?  String.valueOf(token.length()  -  1):  String.valueOf(iter.next());  [CE]  incompatible  types  [CONTEXT]  while  (iter.hasNext())  {    [BUGGY]  token  =(String)iter.next()?  String.valueOf(token.length()  -  1):  String.valueOf(iter.next());  [BUGGY]    if  (token.startsWith( "-- "))  {  if  (token.indexOf('=')  !=  -1)  {  tokens.add(token.substring(0,  token.indexOf('=')));  tokens.add(token.substring(token.indexOf('=')  +  1,  token.length()));  }  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  ArrayList  tokens  Iterator  iter  Option  currentOption  String[]  arguments  String  token  int  tokenLength  	projects/Cli2/src/java/org/apache/commons/cli/PosixParser.java	1.0	108	108	1	replace	token  =(String)iter.next()?  String.valueOf(token.length()  -  1):  String.valueOf(iter.next());	token  =  (String)  iter.next();  	non-compiled	[CE]  incompatible  types	20	None
124	[BUG]  [BUGGY]  token  =(String)iter.next()?  String.valueOf(token.charAt(0))  :  String.valueOf(iter.hasNext());  [CE]  incompatible  types  [CONTEXT]  while  (iter.hasNext())  {    [BUGGY]  token  =(String)iter.next()?  String.valueOf(token.charAt(0))  :  String.valueOf(iter.hasNext());  [BUGGY]    if  (token.startsWith( "-- "))  {  if  (token.indexOf('=')  !=  -1)  {  tokens.add(token.substring(0,  token.indexOf('=')));  tokens.add(token.substring(token.indexOf('=')  +  1,  token.length()));  }  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  ArrayList  tokens  Iterator  iter  Option  currentOption  String[]  arguments  String  token  int  tokenLength  	projects/Cli2/src/java/org/apache/commons/cli/PosixParser.java	1.0	108	108	1	replace	token  =(String)iter.next()?  String.valueOf(token.charAt(0))  :  String.valueOf(iter.hasNext());	token  =  (String)  iter.next();  	non-compiled	[CE]  incompatible  types	20	None
153	[BUG]  [BUGGY]  [FE]  UnrecognizedOptionException  test  [CONTEXT]    [BUGGY]  private  ArrayList  tokens  =  new  ArrayList(256);  [BUGGY]    [CLASS]  PosixParser  [VARIABLES]  	projects/Cli2/src/java/org/apache/commons/cli/PosixParser.java	1.0	33	33	1	add	private  ArrayList  tokens  =  new  ArrayList(256);	private  ArrayList  tokens  =  new  ArrayList();  	compilable	  [FE]  UnrecognizedOptionException  test	2	1
154	[BUG]  [BUGGY]  private  ArrayList  tokens  =  new  ArrayList(256);  [FE]  UnrecognizedOptionException  test  [CONTEXT]    [BUGGY]  private  ArrayList  tokens  =  new  ArrayList(256);  [BUGGY]    [CLASS]  PosixParser  [VARIABLES]  	projects/Cli2/src/java/org/apache/commons/cli/PosixParser.java	1.0	33	33	1	replace	private  ArrayList  tokens  =  new  ArrayList(256);	private  ArrayList  tokens  =  new  ArrayList();  	compilable	  [FE]  UnrecognizedOptionException  test	2	1
154	[BUG]  [BUGGY]  [FE]  UnrecognizedOptionException  test  [CONTEXT]    [BUGGY]  public  ArrayList  tokens  =  new  ArrayList();  [BUGGY]    [CLASS]  PosixParser  [VARIABLES]  	projects/Cli2/src/java/org/apache/commons/cli/PosixParser.java	1.0	33	33	1	add	public  ArrayList  tokens  =  new  ArrayList();	private  ArrayList  tokens  =  new  ArrayList();  	compilable	  [FE]  UnrecognizedOptionException  test	2	1
155	[BUG]  [BUGGY]  public  ArrayList  tokens  =  new  ArrayList();  [FE]  UnrecognizedOptionException  test  [CONTEXT]    [BUGGY]  public  ArrayList  tokens  =  new  ArrayList();  [BUGGY]    [CLASS]  PosixParser  [VARIABLES]  	projects/Cli2/src/java/org/apache/commons/cli/PosixParser.java	1.0	33	33	1	replace	public  ArrayList  tokens  =  new  ArrayList();	private  ArrayList  tokens  =  new  ArrayList();  	compilable	  [FE]  UnrecognizedOptionException  test	2	1
182	[BUG]  [BUGGY]  this.options  =  Options.None;  [CE]  cannot  find  symbol  None  [CONTEXT]  {  init();  [BUGGY]  this.options  =  Options.None;  [BUGGY]    Iterator  iter  =  Arrays.asList(arguments).iterator();  String  token;  while  (iter.hasNext())  {  token  =  (String)  iter.next();  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  ArrayList  tokens  Iterator  iter  Option  currentOption  String[]  arguments  String  token  int  tokenLength  	projects/Cli2/src/java/org/apache/commons/cli/PosixParser.java	1.0	98	98	1	replace	this.options  =  Options.None;	this.options  =  options;  	non-compiled	[CE]  cannot  find  symbol  None	14	None
183	[BUG]  [BUGGY]  this.options  =  Options.NoneAsArrays();  [CE]  cannot  find  symbol  [CONTEXT]  {  init();  [BUGGY]  this.options  =  Options.NoneAsArrays();  [BUGGY]    Iterator  iter  =  Arrays.asList(arguments).iterator();  String  token;  while  (iter.hasNext())  {  token  =  (String)  iter.next();  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  ArrayList  tokens  Iterator  iter  Option  currentOption  String[]  arguments  String  token  int  tokenLength  	projects/Cli2/src/java/org/apache/commons/cli/PosixParser.java	1.0	98	98	1	replace	this.options  =  Options.NoneAsArrays();	this.options  =  options;  	non-compiled	[CE]  cannot  find  symbol	14	None
184	[BUG]  [BUGGY]  this.options  =  Options.NONE;  [CE]  cannot  find  symbol  NONE  [CONTEXT]  {  init();  [BUGGY]  this.options  =  Options.NONE;  [BUGGY]    Iterator  iter  =  Arrays.asList(arguments).iterator();  String  token;  while  (iter.hasNext())  {  token  =  (String)  iter.next();  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  ArrayList  tokens  Iterator  iter  Option  currentOption  String[]  arguments  String  token  int  tokenLength  	projects/Cli2/src/java/org/apache/commons/cli/PosixParser.java	1.0	98	98	1	replace	this.options  =  Options.NONE;	this.options  =  options;  	non-compiled	[CE]  cannot  find  symbol  NONE	14	None
212	[BUG]  [BUGGY]    tokens.add(token);  currentOption  =  null;  [CE]  cannot  find  symbol  token  [CONTEXT]  {  [BUGGY]    tokens.add(token);  currentOption  =  null;  [BUGGY]  init();  this.options  =  options;  Iterator  iter  =  Arrays.asList(arguments).iterator();  String  token;  while  (iter.hasNext())  {  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  ArrayList  tokens  Iterator  iter  Option  currentOption  String[]  arguments  String  token  int  tokenLength  	projects/Cli2/src/java/org/apache/commons/cli/PosixParser.java	1.0	97	97	1	replace	    tokens.add(token);  currentOption  =  null;		non-compiled	[CE]  cannot  find  symbol  token	13	None
213	[BUG]  [BUGGY]    Arrays.sort(tokenLength);  tokens.add(token);  [CE]  cannot  find  symbol  tokenLength  [CONTEXT]  {  [BUGGY]    Arrays.sort(tokenLength);  tokens.add(token);  [BUGGY]  init();  this.options  =  options;  Iterator  iter  =  Arrays.asList(arguments).iterator();  String  token;  while  (iter.hasNext())  {  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  ArrayList  tokens  Iterator  iter  Option  currentOption  String[]  arguments  String  token  int  tokenLength  	projects/Cli2/src/java/org/apache/commons/cli/PosixParser.java	1.0	97	97	1	replace	    Arrays.sort(tokenLength);  tokens.add(token);		non-compiled	[CE]  cannot  find  symbol  tokenLength	13	None
214	[BUG]  [BUGGY]    tokenLength  =  tokenLength  +  token.length();  [CE]  cannot  find  symbol  tokenLength  [CONTEXT]  {  [BUGGY]    tokenLength  =  tokenLength  +  token.length();  [BUGGY]  init();  this.options  =  options;  Iterator  iter  =  Arrays.asList(arguments).iterator();  String  token;  while  (iter.hasNext())  {  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  ArrayList  tokens  Iterator  iter  Option  currentOption  String[]  arguments  String  token  int  tokenLength  	projects/Cli2/src/java/org/apache/commons/cli/PosixParser.java	1.0	97	97	1	replace	    tokenLength  =  tokenLength  +  token.length();		non-compiled	[CE]  cannot  find  symbol  tokenLength	13	None
215	[BUG]  [BUGGY]    Arrays.sort(tokens);  tokens.add(token);  [CE]  no  suitable  method  found  for  sort(ArrayList)  [CONTEXT]  {  [BUGGY]    Arrays.sort(tokens);  tokens.add(token);  [BUGGY]  init();  this.options  =  options;  Iterator  iter  =  Arrays.asList(arguments).iterator();  String  token;  while  (iter.hasNext())  {  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  ArrayList  tokens  Iterator  iter  Option  currentOption  String[]  arguments  String  token  int  tokenLength  	projects/Cli2/src/java/org/apache/commons/cli/PosixParser.java	1.0	97	97	1	replace	    Arrays.sort(tokens);  tokens.add(token);		non-compiled	[CE]  no  suitable  method  found  for  sort(ArrayList)	13	None
242	[BUG]  [BUGGY]    Iterator  <  String>  iter  =  options.iterator();  [CE]  variable  iter  is  already  defined  in  method  flatten(Options,String[],boolean)  [CONTEXT]  while  (iter.hasNext())  {    [BUGGY]    Iterator  <  String>  iter  =  options.iterator();  [BUGGY]  token  =  (String)  iter.next();  if  (token.startsWith( "-- "))  {  if  (token.indexOf('=')  !=  -1)  {  tokens.add(token.substring(0,  token.indexOf('=')));  tokens.add(token.substring(token.indexOf('=')  +  1,  token.length()));  }  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  ArrayList  tokens  Iterator  iter  Option  currentOption  String[]  arguments  String  token  int  tokenLength  	projects/Cli2/src/java/org/apache/commons/cli/PosixParser.java	1.0	108	108	1	replace	    Iterator  <  String>  iter  =  options.iterator();		non-compiled	[CE]  variable  iter  is  already  defined  in  method  flatten(Options,String[],boolean)	21	None
243	[BUG]  [BUGGY]    Iterator  <  String>  iter  =  arguments[iter.next()];  [CE]  variable  iter  is  already  defined  in  method  flatten(Options,String[],boolean)  [CONTEXT]  while  (iter.hasNext())  {    [BUGGY]    Iterator  <  String>  iter  =  arguments[iter.next()];  [BUGGY]  token  =  (String)  iter.next();  if  (token.startsWith( "-- "))  {  if  (token.indexOf('=')  !=  -1)  {  tokens.add(token.substring(0,  token.indexOf('=')));  tokens.add(token.substring(token.indexOf('=')  +  1,  token.length()));  }  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  ArrayList  tokens  Iterator  iter  Option  currentOption  String[]  arguments  String  token  int  tokenLength  	projects/Cli2/src/java/org/apache/commons/cli/PosixParser.java	1.0	108	108	1	replace	    Iterator  <  String>  iter  =  arguments[iter.next()];		non-compiled	[CE]  variable  iter  is  already  defined  in  method  flatten(Options,String[],boolean)	21	None
244	[BUG]  [BUGGY]    Iterator  <  String>  iter  =(String)iter.next();  [CE]  variable  iter  is  already  defined  in  method  flatten(Options,String[],boolean)  [CONTEXT]  while  (iter.hasNext())  {    [BUGGY]    Iterator  <  String>  iter  =(String)iter.next();  [BUGGY]  token  =  (String)  iter.next();  if  (token.startsWith( "-- "))  {  if  (token.indexOf('=')  !=  -1)  {  tokens.add(token.substring(0,  token.indexOf('=')));  tokens.add(token.substring(token.indexOf('=')  +  1,  token.length()));  }  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  ArrayList  tokens  Iterator  iter  Option  currentOption  String[]  arguments  String  token  int  tokenLength  	projects/Cli2/src/java/org/apache/commons/cli/PosixParser.java	1.0	108	108	1	replace	    Iterator  <  String>  iter  =(String)iter.next();		non-compiled	[CE]  variable  iter  is  already  defined  in  method  flatten(Options,String[],boolean)	21	None
272	[BUG]  [BUGGY]    tokens.add(token);  [CE]  cannot  find  symbol  token  [CONTEXT]  private  void  init()  {  eatTheRest  =  false;  tokens.clear();  [BUGGY]    tokens.add(token);  [BUGGY]  currentOption  =  null;  }  [CLASS]  PosixParser  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  ArrayList  tokens  Options  options  Option  currentOption  boolean  eatTheRest  	projects/Cli2/src/java/org/apache/commons/cli/PosixParser.java	1.0	53	53	1	replace	    tokens.add(token);		non-compiled	[CE]  cannot  find  symbol  token	9	None
273	[BUG]  [BUGGY]    tokens.add(option);  [CE]  cannot  find  symbol  option  [CONTEXT]  private  void  init()  {  eatTheRest  =  false;  tokens.clear();  [BUGGY]    tokens.add(option);  [BUGGY]  currentOption  =  null;  }  [CLASS]  PosixParser  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  ArrayList  tokens  Options  options  Option  currentOption  boolean  eatTheRest  	projects/Cli2/src/java/org/apache/commons/cli/PosixParser.java	1.0	53	53	1	replace	    tokens.add(option);		non-compiled	[CE]  cannot  find  symbol  option	9	None
274	[BUG]  [BUGGY]    options.add(option);  [CE]  cannot  find  symbol  option  [CONTEXT]  private  void  init()  {  eatTheRest  =  false;  tokens.clear();  [BUGGY]    options.add(option);  [BUGGY]  currentOption  =  null;  }  [CLASS]  PosixParser  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  ArrayList  tokens  Options  options  Option  currentOption  boolean  eatTheRest  	projects/Cli2/src/java/org/apache/commons/cli/PosixParser.java	1.0	53	53	1	replace	    options.add(option);		non-compiled	[CE]  cannot  find  symbol  option	9	None
275	[BUG]  [BUGGY]  [FE]  UnrecognizedOptionException  test  [CONTEXT]  private  void  init()  {  eatTheRest  =  false;  tokens.clear();  [BUGGY]    tokens.add( "- ");  [BUGGY]  currentOption  =  null;  }  [CLASS]  PosixParser  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  ArrayList  tokens  Options  options  Option  currentOption  boolean  eatTheRest  	projects/Cli2/src/java/org/apache/commons/cli/PosixParser.java	1.0	53	53	1	add	    tokens.add( "- ");		compilable	  [FE]  UnrecognizedOptionException  test	9	1
276	[BUG]  [BUGGY]    tokens.add( "- ");  [FE]  UnrecognizedOptionException  test  [CONTEXT]  private  void  init()  {  eatTheRest  =  false;  tokens.clear();  [BUGGY]    tokens.add( "- ");  [BUGGY]  currentOption  =  null;  }  [CLASS]  PosixParser  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  ArrayList  tokens  Options  options  Option  currentOption  boolean  eatTheRest  	projects/Cli2/src/java/org/apache/commons/cli/PosixParser.java	1.0	53	53	1	replace	    tokens.add( "- ");		compilable	  [FE]  UnrecognizedOptionException  test	9	1
302	[BUG]  [BUGGY]  [FE]  NullPointerException  test  [CONTEXT]  private  void  init()  {  eatTheRest  =  false;  [BUGGY]  tokens.add(currentOption);  [BUGGY]  currentOption  =  null;  }  [CLASS]  PosixParser  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  ArrayList  tokens  Options  options  Option  currentOption  boolean  eatTheRest  	projects/Cli2/src/java/org/apache/commons/cli/PosixParser.java	1.0	52	52	1	add	tokens.add(currentOption);	tokens.clear();  	compilable	  [FE]  NullPointerException  test	6	1
303	[BUG]  [BUGGY]  tokens.add(currentOption);  [FE]  NullPointerException  test  [CONTEXT]  private  void  init()  {  eatTheRest  =  false;  [BUGGY]  tokens.add(currentOption);  [BUGGY]  currentOption  =  null;  }  [CLASS]  PosixParser  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  ArrayList  tokens  Options  options  Option  currentOption  boolean  eatTheRest  	projects/Cli2/src/java/org/apache/commons/cli/PosixParser.java	1.0	52	52	1	replace	tokens.add(currentOption);	tokens.clear();  	compilable	  [FE]  NullPointerException  test	6	1
303	[BUG]  [BUGGY]  tokens.add(initOption(currentOption));  [CE]  cannot  find  symbol  [CONTEXT]  private  void  init()  {  eatTheRest  =  false;  [BUGGY]  tokens.add(initOption(currentOption));  [BUGGY]  currentOption  =  null;  }  [CLASS]  PosixParser  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  ArrayList  tokens  Options  options  Option  currentOption  boolean  eatTheRest  	projects/Cli2/src/java/org/apache/commons/cli/PosixParser.java	1.0	52	52	1	replace	tokens.add(initOption(currentOption));	tokens.clear();  	non-compiled	[CE]  cannot  find  symbol	6	None
304	[BUG]  [BUGGY]  tokens.add(new  Option( "-- ");  [CE]  [CONTEXT]  private  void  init()  {  eatTheRest  =  false;  [BUGGY]  tokens.add(new  Option( "-- ");  [BUGGY]  currentOption  =  null;  }  [CLASS]  PosixParser  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  ArrayList  tokens  Options  options  Option  currentOption  boolean  eatTheRest  	projects/Cli2/src/java/org/apache/commons/cli/PosixParser.java	1.0	52	52	1	replace	tokens.add(new  Option( "-- ");	tokens.clear();  	non-compiled	[CE]  	6	None
361	[BUG]  [BUGGY]    if(iter.hasNext())  {  tokens.add(token);  iter.next();  }  [CE]  variable  token  might  not  have  been  initialized  [CONTEXT]  {  init();  this.options  =  options;  Iterator  iter  =  Arrays.asList(arguments).iterator();  String  token;    [BUGGY]    if(iter.hasNext())  {  tokens.add(token);  iter.next();  }  [BUGGY]  while  (iter.hasNext())  {  {  token  =  (String)  iter.next();  if  (token.startsWith( "-- "))  {  if  (token.indexOf('=')  !=  -1)  {  tokens.add(token.substring(0,  token.indexOf('=')));  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  ArrayList  tokens  Iterator  iter  Option  currentOption  String[]  arguments  String  token  int  tokenLength  	projects/Cli2/src/java/org/apache/commons/cli/PosixParser.java	1.0	105	106	1	replace	    if(iter.hasNext())  {  tokens.add(token);  iter.next();  }		non-compiled	[CE]  variable  token  might  not  have  been  initialized	19	None
363	[BUG]  [BUGGY]    iter.next();  tokens.add(token);  [CE]  variable  token  might  not  have  been  initialized  [CONTEXT]  {  init();  this.options  =  options;  Iterator  iter  =  Arrays.asList(arguments).iterator();  String  token;    [BUGGY]    iter.next();  tokens.add(token);  [BUGGY]  while  (iter.hasNext())  {  {  token  =  (String)  iter.next();  if  (token.startsWith( "-- "))  {  if  (token.indexOf('=')  !=  -1)  {  tokens.add(token.substring(0,  token.indexOf('=')));  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  ArrayList  tokens  Iterator  iter  Option  currentOption  String[]  arguments  String  token  int  tokenLength  	projects/Cli2/src/java/org/apache/commons/cli/PosixParser.java	1.0	105	106	1	replace	    iter.next();  tokens.add(token);		non-compiled	[CE]  variable  token  might  not  have  been  initialized	19	None
392	[BUG]  [BUGGY]  while(iter.hasNext()  &&  token.length()!=  0)  {  [CE]  variable  token  might  not  have  been  initialized  [CONTEXT]  {  init();  this.options  =  options;  Iterator  iter  =  Arrays.asList(arguments).iterator();  String  token;    [BUGGY]  while(iter.hasNext()  &&  token.length()!=  0)  {  [BUGGY]  {  token  =  (String)  iter.next();  if  (token.startsWith( "-- "))  {  if  (token.indexOf('=')  !=  -1)  {  tokens.add(token.substring(0,  token.indexOf('=')));  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  ArrayList  tokens  Iterator  iter  Option  currentOption  String[]  arguments  String  token  int  tokenLength  	projects/Cli2/src/java/org/apache/commons/cli/PosixParser.java	1.0	105	106	1	replace	while(iter.hasNext()  &&  token.length()!=  0)  {	while  (iter.hasNext())  {  	non-compiled	[CE]  variable  token  might  not  have  been  initialized	18	None
393	[BUG]  [BUGGY]  while(iter.hasNext()  &&  token.startsWith( "- "))  {  [CE]  variable  token  might  not  have  been  initialized  [CONTEXT]  {  init();  this.options  =  options;  Iterator  iter  =  Arrays.asList(arguments).iterator();  String  token;    [BUGGY]  while(iter.hasNext()  &&  token.startsWith( "- "))  {  [BUGGY]  {  token  =  (String)  iter.next();  if  (token.startsWith( "-- "))  {  if  (token.indexOf('=')  !=  -1)  {  tokens.add(token.substring(0,  token.indexOf('=')));  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  ArrayList  tokens  Iterator  iter  Option  currentOption  String[]  arguments  String  token  int  tokenLength  	projects/Cli2/src/java/org/apache/commons/cli/PosixParser.java	1.0	105	106	1	replace	while(iter.hasNext()  &&  token.startsWith( "- "))  {	while  (iter.hasNext())  {  	non-compiled	[CE]  variable  token  might  not  have  been  initialized	18	None
394	[BUG]  [BUGGY]  while(iter.hasNext()  &&  token.indexOf( "- ")!=  -1)  {  [CE]  variable  token  might  not  have  been  initialized  [CONTEXT]  {  init();  this.options  =  options;  Iterator  iter  =  Arrays.asList(arguments).iterator();  String  token;    [BUGGY]  while(iter.hasNext()  &&  token.indexOf( "- ")!=  -1)  {  [BUGGY]  {  token  =  (String)  iter.next();  if  (token.startsWith( "-- "))  {  if  (token.indexOf('=')  !=  -1)  {  tokens.add(token.substring(0,  token.indexOf('=')));  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  ArrayList  tokens  Iterator  iter  Option  currentOption  String[]  arguments  String  token  int  tokenLength  	projects/Cli2/src/java/org/apache/commons/cli/PosixParser.java	1.0	105	106	1	replace	while(iter.hasNext()  &&  token.indexOf( "- ")!=  -1)  {	while  (iter.hasNext())  {  	non-compiled	[CE]  variable  token  might  not  have  been  initialized	18	None
422	[BUG]  [BUGGY]  flatten();  [CE]  no  suitable  method  found  for  flatten()  [CONTEXT]  {  [BUGGY]  flatten();  [BUGGY]  this.options  =  options;  Iterator  iter  =  Arrays.asList(arguments).iterator();  String  token;  while  (iter.hasNext())  {  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  ArrayList  tokens  Iterator  iter  Option  currentOption  String[]  arguments  String  token  int  tokenLength  	projects/Cli2/src/java/org/apache/commons/cli/PosixParser.java	1.0	97	97	1	replace	flatten();	init();  	non-compiled	[CE]  no  suitable  method  found  for  flatten()	12	None
423	[BUG]  [BUGGY]  _addOption(true);  [CE]  cannot  find  symbol  [CONTEXT]  {  [BUGGY]  _addOption(true);  [BUGGY]  this.options  =  options;  Iterator  iter  =  Arrays.asList(arguments).iterator();  String  token;  while  (iter.hasNext())  {  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  ArrayList  tokens  Iterator  iter  Option  currentOption  String[]  arguments  String  token  int  tokenLength  	projects/Cli2/src/java/org/apache/commons/cli/PosixParser.java	1.0	97	97	1	replace	_addOption(true);	init();  	non-compiled	[CE]  cannot  find  symbol	12	None
424	[BUG]  [BUGGY]  _addArg(token);  [CE]  cannot  find  symbol  token  [CONTEXT]  {  [BUGGY]  _addArg(token);  [BUGGY]  this.options  =  options;  Iterator  iter  =  Arrays.asList(arguments).iterator();  String  token;  while  (iter.hasNext())  {  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  ArrayList  tokens  Iterator  iter  Option  currentOption  String[]  arguments  String  token  int  tokenLength  	projects/Cli2/src/java/org/apache/commons/cli/PosixParser.java	1.0	97	97	1	replace	_addArg(token);	init();  	non-compiled	[CE]  cannot  find  symbol  token	12	None
452	[BUG]  [BUGGY]  Iterator  iter  =  arrays.asList(arguments).iterator();  [CE]  cannot  find  symbol  arrays  [CONTEXT]  {  init();  this.options  =  options;    [BUGGY]  Iterator  iter  =  arrays.asList(arguments).iterator();  [BUGGY]  String  token;  while  (iter.hasNext())  {  token  =  (String)  iter.next();  if  (token.startsWith( "-- "))  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  ArrayList  tokens  Iterator  iter  Option  currentOption  String[]  arguments  String  token  int  tokenLength  	projects/Cli2/src/java/org/apache/commons/cli/PosixParser.java	1.0	101	101	1	replace	Iterator  iter  =  arrays.asList(arguments).iterator();	Iterator  iter  =  Arrays.asList(arguments).iterator();  	non-compiled	[CE]  cannot  find  symbol  arrays	16	None
454	[BUG]  [BUGGY]  Iterator  iter  =  Arrays.asList(args).iterator();  [CE]  cannot  find  symbol  args  [CONTEXT]  {  init();  this.options  =  options;    [BUGGY]  Iterator  iter  =  Arrays.asList(args).iterator();  [BUGGY]  String  token;  while  (iter.hasNext())  {  token  =  (String)  iter.next();  if  (token.startsWith( "-- "))  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  ArrayList  tokens  Iterator  iter  Option  currentOption  String[]  arguments  String  token  int  tokenLength  	projects/Cli2/src/java/org/apache/commons/cli/PosixParser.java	1.0	101	101	1	replace	Iterator  iter  =  Arrays.asList(args).iterator();	Iterator  iter  =  Arrays.asList(arguments).iterator();  	non-compiled	[CE]  cannot  find  symbol  args	16	None
482	[BUG]  [BUGGY]  eatTheRest  =  null;  [CE]  incompatible  types  [CONTEXT]  private  void  init()  {  [BUGGY]  eatTheRest  =  null;  [BUGGY]  tokens.clear();  currentOption  =  null;  }  [CLASS]  PosixParser  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  ArrayList  tokens  Options  options  Option  currentOption  boolean  eatTheRest  	projects/Cli2/src/java/org/apache/commons/cli/PosixParser.java	1.0	51	51	1	replace	eatTheRest  =  null;	eatTheRest  =  false;  	non-compiled	[CE]  incompatible  types	4	None
483	[BUG]  [BUGGY]  eatTheRest  =  real;  [CE]  cannot  find  symbol  real  [CONTEXT]  private  void  init()  {  [BUGGY]  eatTheRest  =  real;  [BUGGY]  tokens.clear();  currentOption  =  null;  }  [CLASS]  PosixParser  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  ArrayList  tokens  Options  options  Option  currentOption  boolean  eatTheRest  	projects/Cli2/src/java/org/apache/commons/cli/PosixParser.java	1.0	51	51	1	replace	eatTheRest  =  real;	eatTheRest  =  false;  	non-compiled	[CE]  cannot  find  symbol  real	4	None
484	[BUG]  [BUGGY]  eatTheRest  ||  true;  [CE]  not  a  statement  [CONTEXT]  private  void  init()  {  [BUGGY]  eatTheRest  ||  true;  [BUGGY]  tokens.clear();  currentOption  =  null;  }  [CLASS]  PosixParser  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  ArrayList  tokens  Options  options  Option  currentOption  boolean  eatTheRest  	projects/Cli2/src/java/org/apache/commons/cli/PosixParser.java	1.0	51	51	1	replace	eatTheRest  ||  true;	eatTheRest  =  false;  	non-compiled	[CE]  not  a  statement	4	None
515	[BUG]  [BUGGY]    tokens.add(initForOption(currentOption));  [CE]  cannot  find  symbol  [CONTEXT]  private  void  init()  {  eatTheRest  =  false;  [BUGGY]    tokens.add(initForOption(currentOption));  [BUGGY]  tokens.clear();  currentOption  =  null;  }  [CLASS]  PosixParser  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  ArrayList  tokens  Options  options  Option  currentOption  boolean  eatTheRest  	projects/Cli2/src/java/org/apache/commons/cli/PosixParser.java	1.0	52	52	1	replace	    tokens.add(initForOption(currentOption));		non-compiled	[CE]  cannot  find  symbol	7	None
541	[BUG]  [BUGGY]    flatten();  [CE]  no  suitable  method  found  for  flatten()  [CONTEXT]  {  init();  [BUGGY]    flatten();  [BUGGY]  this.options  =  options;  Iterator  iter  =  Arrays.asList(arguments).iterator();  String  token;  while  (iter.hasNext())  {  token  =  (String)  iter.next();  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  ArrayList  tokens  Iterator  iter  Option  currentOption  String[]  arguments  String  token  int  tokenLength  	projects/Cli2/src/java/org/apache/commons/cli/PosixParser.java	1.0	98	98	1	replace	    flatten();		non-compiled	[CE]  no  suitable  method  found  for  flatten()	15	None
542	[BUG]  [BUGGY]    Arrays.sort(this.arguments);  [CE]  cannot  find  symbol  arguments  [CONTEXT]  {  init();  [BUGGY]    Arrays.sort(this.arguments);  [BUGGY]  this.options  =  options;  Iterator  iter  =  Arrays.asList(arguments).iterator();  String  token;  while  (iter.hasNext())  {  token  =  (String)  iter.next();  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  ArrayList  tokens  Iterator  iter  Option  currentOption  String[]  arguments  String  token  int  tokenLength  	projects/Cli2/src/java/org/apache/commons/cli/PosixParser.java	1.0	98	98	1	replace	    Arrays.sort(this.arguments);		non-compiled	[CE]  cannot  find  symbol  arguments	15	None
543	[BUG]  [BUGGY]  [FE]  UnrecognizedOptionException  test  [CONTEXT]  {  init();  [BUGGY]    Arrays.sort(arguments);  [BUGGY]  this.options  =  options;  Iterator  iter  =  Arrays.asList(arguments).iterator();  String  token;  while  (iter.hasNext())  {  token  =  (String)  iter.next();  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  ArrayList  tokens  Iterator  iter  Option  currentOption  String[]  arguments  String  token  int  tokenLength  	projects/Cli2/src/java/org/apache/commons/cli/PosixParser.java	1.0	98	98	1	add	    Arrays.sort(arguments);		compilable	  [FE]  UnrecognizedOptionException  test	15	1
544	[BUG]  [BUGGY]    Arrays.sort(arguments);  [FE]  UnrecognizedOptionException  test  [CONTEXT]  {  init();  [BUGGY]    Arrays.sort(arguments);  [BUGGY]  this.options  =  options;  Iterator  iter  =  Arrays.asList(arguments).iterator();  String  token;  while  (iter.hasNext())  {  token  =  (String)  iter.next();  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  ArrayList  tokens  Iterator  iter  Option  currentOption  String[]  arguments  String  token  int  tokenLength  	projects/Cli2/src/java/org/apache/commons/cli/PosixParser.java	1.0	98	98	1	replace	    Arrays.sort(arguments);		compilable	  [FE]  UnrecognizedOptionException  test	15	1
544	[BUG]  [BUGGY]    Arrays.sort(tokenLength);  [CE]  cannot  find  symbol  tokenLength  [CONTEXT]  {  init();  [BUGGY]    Arrays.sort(tokenLength);  [BUGGY]  this.options  =  options;  Iterator  iter  =  Arrays.asList(arguments).iterator();  String  token;  while  (iter.hasNext())  {  token  =  (String)  iter.next();  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  ArrayList  tokens  Iterator  iter  Option  currentOption  String[]  arguments  String  token  int  tokenLength  	projects/Cli2/src/java/org/apache/commons/cli/PosixParser.java	1.0	98	98	1	replace	    Arrays.sort(tokenLength);		non-compiled	[CE]  cannot  find  symbol  tokenLength	15	None
545	[BUG]  [BUGGY]    processOption(tokenLength);  [CE]  cannot  find  symbol  tokenLength  [CONTEXT]  {  init();  [BUGGY]    processOption(tokenLength);  [BUGGY]  this.options  =  options;  Iterator  iter  =  Arrays.asList(arguments).iterator();  String  token;  while  (iter.hasNext())  {  token  =  (String)  iter.next();  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  ArrayList  tokens  Iterator  iter  Option  currentOption  String[]  arguments  String  token  int  tokenLength  	projects/Cli2/src/java/org/apache/commons/cli/PosixParser.java	1.0	98	98	1	replace	    processOption(tokenLength);		non-compiled	[CE]  cannot  find  symbol  tokenLength	15	None
573	[BUG]  [BUGGY]    tokens.add(PositionParser.peek());  [CE]  <identifier>  expected  [CONTEXT]    [BUGGY]    tokens.add(PositionParser.peek());  [BUGGY]  private  ArrayList  tokens  =  new  ArrayList();  [CLASS]  PosixParser  [VARIABLES]  	projects/Cli2/src/java/org/apache/commons/cli/PosixParser.java	1.0	33	33	1	replace	    tokens.add(PositionParser.peek());		non-compiled	[CE]  <identifier>  expected	3	None
574	[BUG]  [BUGGY]    tokens.add(PositionParser.unwrappedValue());  [CE]  <identifier>  expected  [CONTEXT]    [BUGGY]    tokens.add(PositionParser.unwrappedValue());  [BUGGY]  private  ArrayList  tokens  =  new  ArrayList();  [CLASS]  PosixParser  [VARIABLES]  	projects/Cli2/src/java/org/apache/commons/cli/PosixParser.java	1.0	33	33	1	replace	    tokens.add(PositionParser.unwrappedValue());		non-compiled	[CE]  <identifier>  expected	3	None
575	[BUG]  [BUGGY]    tokens.add(PositionParser.newInstance());  [CE]  <identifier>  expected  [CONTEXT]    [BUGGY]    tokens.add(PositionParser.newInstance());  [BUGGY]  private  ArrayList  tokens  =  new  ArrayList();  [CLASS]  PosixParser  [VARIABLES]  	projects/Cli2/src/java/org/apache/commons/cli/PosixParser.java	1.0	33	33	1	replace	    tokens.add(PositionParser.newInstance());		non-compiled	[CE]  <identifier>  expected	3	None
