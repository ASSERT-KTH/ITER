projects/Math16/src/main/java/org/apache/commons/math3/util/FastMath.java255
projects/Math16/src/main/java/org/apache/commons/math3/util/FastMath.java255nan
projects/Math16/src/main/java/org/apache/commons/math3/util/FastMath.java255lnMant.getLocalMask();
projects/Math16/src/main/java/org/apache/commons/math3/util/FastMath.java255lnMant.getLocalMath();
projects/Math16/src/main/java/org/apache/commons/math3/util/FastMath.java255privatestaticfinallongRECIP_2PI[]=newlong[]{
projects/Math16/src/main/java/org/apache/commons/math3/util/FastMath.java255privatestaticfinalintRECIP_2PI[]=newint[]{
projects/Math16/src/main/java/org/apache/commons/math3/util/FastMath.java255privatestaticfinalintRECIP_2PI[]=newlong[]{
projects/Math16/src/main/java/org/apache/commons/math3/util/FastMath.java255lnMant=CodyWaite.getInstance();
projects/Math16/src/main/java/org/apache/commons/math3/util/FastMath.java255lnMant=CodyWaite.getInstance(Locale.ENGLISH);
projects/Math16/src/main/java/org/apache/commons/math3/util/FastMath.java255lnMant=CodyWaite.getCurrentSegment();
projects/Math16/src/main/java/org/apache/commons/math3/util/FastMath.java255Arrays.fill(RECIP_2PI);
projects/Math16/src/main/java/org/apache/commons/math3/util/FastMath.java255Arrays.fill(ExpIntTable.class);
projects/Math16/src/main/java/org/apache/commons/math3/util/FastMath.java255privatestaticfinallong[]RECIP_2PI=newlong[]{
projects/Math16/src/main/java/org/apache/commons/math3/util/FastMath.java255Arrays.fill(RECIP_2PI,1);
projects/Math16/src/main/java/org/apache/commons/math3/util/FastMath.java255Arrays.fill(RECIP_2PI,2);
projects/Math16/src/main/java/org/apache/commons/math3/util/FastMath.java255lnMant=CodyWaite.getInstance(Locale.US);
projects/Math16/src/main/java/org/apache/commons/math3/util/FastMath.java255lnMant=CodyWaite.getInstance(Locale.ENGLISH,0);
projects/Math16/src/main/java/org/apache/commons/math3/util/FastMath.java255lnMant.setLocalMask(false);
projects/Math16/src/main/java/org/apache/commons/math3/util/FastMath.java255Arrays.fill(ExpFracTable.class);
projects/Math16/src/main/java/org/apache/commons/math3/util/FastMath.java255lnMant.setLocalMath(0);
projects/Math16/src/main/java/org/apache/commons/math3/util/FastMath.java255lnMant.reset();
projects/Math16/src/main/java/org/apache/commons/math3/util/FastMath.java255(Long)lnMant);
projects/Math16/src/main/java/org/apache/commons/math3/util/FastMath.java255lnMant.setLocalMask(true);
projects/Math16/src/main/java/org/apache/commons/math3/util/FastMath.java255Annotated.valueOf(lnMant){
projects/Math16/src/main/java/org/apache/commons/math3/util/FastMath.java255lnMant.setLocale(getLocale());
projects/Math16/src/main/java/org/apache/commons/math3/util/FastMath.java255lnMant.clearLocalMask();
projects/Math16/src/main/java/org/apache/commons/math3/util/FastMath.java255lnMant.setLocalMask("");
projects/Math16/src/main/java/org/apache/commons/math3/util/FastMath.java255lnMant.setLocalMask(",");
projects/Math16/src/main/java/org/apache/commons/math3/util/FastMath.java255AnnotationTraversal.traverse(compiler,lnMant);
projects/Math16/src/main/java/org/apache/commons/math3/util/FastMath.java255AnnotationTraversal.traverse(compiler,this);
projects/Math16/src/main/java/org/apache/commons/math3/util/FastMath.java255lnMant=CodyWaite.getInstance(Locale.ENGLISH,1);
projects/Math16/src/main/java/org/apache/commons/math3/util/FastMath.java255lnMant=CodyWaite.getInstance(Locale.ENGLISH,4);
projects/Math16/src/main/java/org/apache/commons/math3/util/FastMath.java255Annotated.valueOf(this.lnMant){
projects/Math16/src/main/java/org/apache/commons/math3/util/FastMath.java255Annotated.valueOf(Long.valueOf(lnMant)){
projects/Math16/src/main/java/org/apache/commons/math3/util/FastMath.java255(Long)lnMant,0);
projects/Math16/src/main/java/org/apache/commons/math3/util/FastMath.java255Arrays.fill(RECIP_2PI,3);
projects/Math16/src/main/java/org/apache/commons/math3/util/FastMath.java255lnMant=CodyWaite.getInstance(Locale.US,0);
projects/Math16/src/main/java/org/apache/commons/math3/util/FastMath.java255AnnotationTraversal.traverse(compiler,this,lnMant);
projects/Math16/src/main/java/org/apache/commons/math3/util/FastMath.java255AnnotationTraversal.traverse(compiler,this,null);
projects/Math16/src/main/java/org/apache/commons/math3/util/FastMath.java255AnnotationTraversal.traverse(compiler,this.lnMant);
projects/Math16/src/main/java/org/apache/commons/math3/util/FastMath.java255AnnotationTraversal.traverse(compiler,lnMant,this);
projects/Math16/src/main/java/org/apache/commons/math3/util/FastMath.java255privatestaticfinalint[]RECIP_2PI=newint[]{
projects/Math16/src/main/java/org/apache/commons/math3/util/FastMath.java255lnMant.setLocalMask("-");
projects/Math16/src/main/java/org/apache/commons/math3/util/FastMath.java255AnnotationTraversal.traverse(compiler,ExpFracTable.class);
projects/Math16/src/main/java/org/apache/commons/math3/util/FastMath.java255Annotated.valueOf(lnMant,0){
projects/Math16/src/main/java/org/apache/commons/math3/util/FastMath.java255lnMant.clear();
projects/Math16/src/main/java/org/apache/commons/math3/util/FastMath.java255lnMant.add(ExpIntTable.class);
projects/Math16/src/main/java/org/apache/commons/math3/util/FastMath.java255lnMant.setLocalMask("n");
projects/Math16/src/main/java/org/apache/commons/math3/util/FastMath.java255lnMant.setLocalMask("<");
projects/Math16/src/main/java/org/apache/commons/math3/util/FastMath.java255LnMant=CodyWaite.getInstance(Locale.US);
projects/Math16/src/main/java/org/apache/commons/math3/util/FastMath.java255lnMant.clearIdentifiers();
