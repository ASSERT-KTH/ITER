bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	failing_test_number	action	patch
1	[BUG] [BUGGY] if (hiPrec != null) { [FE] AssertionError [CONTEXT] intVal++; intPartA = ExpIntTable.EXP_INT_TABLE_A[EXP_INT_TABLE_MAX_INDEX-intVal]; intPartB = ExpIntTable.EXP_INT_TABLE_B[EXP_INT_TABLE_MAX_INDEX-intVal]; intVal = -intVal; } else { intVal = (int) x; if (intVal > 709) { [BUGGY] if (hiPrec != null) { [BUGGY] hiPrec[0] = Double.POSITIVE_INFINITY; hiPrec[1] = 0.0; } return Double.POSITIVE_INFINITY; } intPartA = ExpIntTable.EXP_INT_TABLE_A[EXP_INT_TABLE_MAX_INDEX+intVal]; intPartB = ExpIntTable.EXP_INT_TABLE_B[EXP_INT_TABLE_MAX_INDEX+intVal]; } [CLASS] FastMath ExpIntTable ExpFracTable lnMant CodyWaite [METHOD] exp [RETURN_TYPE] double  double x double extra double[] hiPrec [VARIABLES] boolean RECOMPUTE_TABLES_AT_RUNTIME negate negative double[] CBRTTWO COSINE_TABLE_A COSINE_TABLE_B EIGHTHS EXP_FRAC_TABLE_A EXP_FRAC_TABLE_B EXP_INT_TABLE_A EXP_INT_TABLE_B SINE_TABLE_A SINE_TABLE_B TANGENT_TABLE_A TANGENT_TABLE_B hiPrec long[] PI_O_4_BITS RECIP_2PI double E F_11_12 F_13_14 F_15_16 F_1_11 F_1_13 F_1_15 F_1_17 F_1_2 F_1_3 F_1_4 F_1_5 F_1_7 F_1_9 F_3_4 F_5_6 F_7_8 F_9_10 LN_2_A LN_2_B PI TWO_POWER_52 a a2 absAsinh absAtanh b d da daa dab db denom denomb denomr epsilon extra finalRemA finalRemB fracPartA fracPartB intPartA intPartB na nb ra ratio ratioa ratiob rb recip recipa recipb remA remB result temp tempA tempB tempC x xa xb ya yaa yab yb z za zb double[][] LN_HI_PREC_COEF LN_MANT LN_QUICK_COEF int EXP_FRAC_TABLE_LEN EXP_INT_TABLE_LEN EXP_INT_TABLE_MAX_INDEX LN_MANT_LEN SINE_TABLE_LEN finalK intFrac intVal k long HEX_40000000 MASK_30BITS xl  	projects/Math16/src/main/java/org/apache/commons/math3/util/FastMath.java	0.8164965809277261	870	870	2	replace	
2	[BUG] [BUGGY] [FE] AssertionError [CONTEXT] intVal++; intPartA = ExpIntTable.EXP_INT_TABLE_A[EXP_INT_TABLE_MAX_INDEX-intVal]; intPartB = ExpIntTable.EXP_INT_TABLE_B[EXP_INT_TABLE_MAX_INDEX-intVal]; intVal = -intVal; } else { intVal = (int) x; if (intVal > 709) { [BUGGY] [BUGGY] if (hiPrec != null) { hiPrec[0] = Double.POSITIVE_INFINITY; hiPrec[1] = 0.0; } return Double.POSITIVE_INFINITY; } intPartA = ExpIntTable.EXP_INT_TABLE_A[EXP_INT_TABLE_MAX_INDEX+intVal]; intPartB = ExpIntTable.EXP_INT_TABLE_B[EXP_INT_TABLE_MAX_INDEX+intVal]; } [CLASS] FastMath ExpIntTable ExpFracTable lnMant CodyWaite [METHOD] exp [RETURN_TYPE] double  double x double extra double[] hiPrec [VARIABLES] boolean RECOMPUTE_TABLES_AT_RUNTIME negate negative double[] CBRTTWO COSINE_TABLE_A COSINE_TABLE_B EIGHTHS EXP_FRAC_TABLE_A EXP_FRAC_TABLE_B EXP_INT_TABLE_A EXP_INT_TABLE_B SINE_TABLE_A SINE_TABLE_B TANGENT_TABLE_A TANGENT_TABLE_B hiPrec long[] PI_O_4_BITS RECIP_2PI double E F_11_12 F_13_14 F_15_16 F_1_11 F_1_13 F_1_15 F_1_17 F_1_2 F_1_3 F_1_4 F_1_5 F_1_7 F_1_9 F_3_4 F_5_6 F_7_8 F_9_10 LN_2_A LN_2_B PI TWO_POWER_52 a a2 absAsinh absAtanh b d da daa dab db denom denomb denomr epsilon extra finalRemA finalRemB fracPartA fracPartB intPartA intPartB na nb ra ratio ratioa ratiob rb recip recipa recipb remA remB result temp tempA tempB tempC x xa xb ya yaa yab yb z za zb double[][] LN_HI_PREC_COEF LN_MANT LN_QUICK_COEF int EXP_FRAC_TABLE_LEN EXP_INT_TABLE_LEN EXP_INT_TABLE_MAX_INDEX LN_MANT_LEN SINE_TABLE_LEN finalK intFrac intVal k long HEX_40000000 MASK_30BITS xl  	projects/Math16/src/main/java/org/apache/commons/math3/util/FastMath.java	0.8164965809277261	870	870	2	add	
3	[BUG] [BUGGY] return Double.POSITIVE_INFINITY; [FE] AssertionError [CONTEXT] intVal = -intVal; } else { intVal = (int) x; if (intVal > 709) { if (hiPrec != null) { hiPrec[0] = Double.POSITIVE_INFINITY; hiPrec[1] = 0.0; } [BUGGY] return Double.POSITIVE_INFINITY; [BUGGY] } intPartA = ExpIntTable.EXP_INT_TABLE_A[EXP_INT_TABLE_MAX_INDEX+intVal]; intPartB = ExpIntTable.EXP_INT_TABLE_B[EXP_INT_TABLE_MAX_INDEX+intVal]; } [CLASS] FastMath ExpIntTable ExpFracTable lnMant CodyWaite [METHOD] exp [RETURN_TYPE] double  double x double extra double[] hiPrec [VARIABLES] boolean RECOMPUTE_TABLES_AT_RUNTIME negate negative double[] CBRTTWO COSINE_TABLE_A COSINE_TABLE_B EIGHTHS EXP_FRAC_TABLE_A EXP_FRAC_TABLE_B EXP_INT_TABLE_A EXP_INT_TABLE_B SINE_TABLE_A SINE_TABLE_B TANGENT_TABLE_A TANGENT_TABLE_B hiPrec long[] PI_O_4_BITS RECIP_2PI double E F_11_12 F_13_14 F_15_16 F_1_11 F_1_13 F_1_15 F_1_17 F_1_2 F_1_3 F_1_4 F_1_5 F_1_7 F_1_9 F_3_4 F_5_6 F_7_8 F_9_10 LN_2_A LN_2_B PI TWO_POWER_52 a a2 absAsinh absAtanh b d da daa dab db denom denomb denomr epsilon extra finalRemA finalRemB fracPartA fracPartB intPartA intPartB na nb ra ratio ratioa ratiob rb recip recipa recipb remA remB result temp tempA tempB tempC x xa xb ya yaa yab yb z za zb double[][] LN_HI_PREC_COEF LN_MANT LN_QUICK_COEF int EXP_FRAC_TABLE_LEN EXP_INT_TABLE_LEN EXP_INT_TABLE_MAX_INDEX LN_MANT_LEN SINE_TABLE_LEN finalK intFrac intVal k long HEX_40000000 MASK_30BITS xl  	projects/Math16/src/main/java/org/apache/commons/math3/util/FastMath.java	0.8164965809277261	874	874	2	replace	
4	[BUG] [BUGGY] [FE] AssertionError [CONTEXT] intVal = -intVal; } else { intVal = (int) x; if (intVal > 709) { if (hiPrec != null) { hiPrec[0] = Double.POSITIVE_INFINITY; hiPrec[1] = 0.0; } [BUGGY] [BUGGY] return Double.POSITIVE_INFINITY; } intPartA = ExpIntTable.EXP_INT_TABLE_A[EXP_INT_TABLE_MAX_INDEX+intVal]; intPartB = ExpIntTable.EXP_INT_TABLE_B[EXP_INT_TABLE_MAX_INDEX+intVal]; } [CLASS] FastMath ExpIntTable ExpFracTable lnMant CodyWaite [METHOD] exp [RETURN_TYPE] double  double x double extra double[] hiPrec [VARIABLES] boolean RECOMPUTE_TABLES_AT_RUNTIME negate negative double[] CBRTTWO COSINE_TABLE_A COSINE_TABLE_B EIGHTHS EXP_FRAC_TABLE_A EXP_FRAC_TABLE_B EXP_INT_TABLE_A EXP_INT_TABLE_B SINE_TABLE_A SINE_TABLE_B TANGENT_TABLE_A TANGENT_TABLE_B hiPrec long[] PI_O_4_BITS RECIP_2PI double E F_11_12 F_13_14 F_15_16 F_1_11 F_1_13 F_1_15 F_1_17 F_1_2 F_1_3 F_1_4 F_1_5 F_1_7 F_1_9 F_3_4 F_5_6 F_7_8 F_9_10 LN_2_A LN_2_B PI TWO_POWER_52 a a2 absAsinh absAtanh b d da daa dab db denom denomb denomr epsilon extra finalRemA finalRemB fracPartA fracPartB intPartA intPartB na nb ra ratio ratioa ratiob rb recip recipa recipb remA remB result temp tempA tempB tempC x xa xb ya yaa yab yb z za zb double[][] LN_HI_PREC_COEF LN_MANT LN_QUICK_COEF int EXP_FRAC_TABLE_LEN EXP_INT_TABLE_LEN EXP_INT_TABLE_MAX_INDEX LN_MANT_LEN SINE_TABLE_LEN finalK intFrac intVal k long HEX_40000000 MASK_30BITS xl  	projects/Math16/src/main/java/org/apache/commons/math3/util/FastMath.java	0.8164965809277261	874	874	2	add	
5	[BUG] [BUGGY] long bits = Double.doubleToRawLongBits(a); [FE] AssertionError [CONTEXT] } if (a < b) { return b; }  if (a != b) { return Double.NaN; }   [BUGGY] long bits = Double.doubleToRawLongBits(a); [BUGGY] if (bits == 0x8000000000000000L) { return b; } return a; } [CLASS] FastMath ExpIntTable ExpFracTable lnMant CodyWaite [METHOD] max [RETURN_TYPE] double  final double a final double b [VARIABLES] boolean RECOMPUTE_TABLES_AT_RUNTIME bita bitb bitsum cotanFlag leftPlane negate negative subnormal double[] CBRTTWO COSINE_TABLE_A COSINE_TABLE_B EIGHTHS EXP_FRAC_TABLE_A EXP_FRAC_TABLE_B EXP_INT_TABLE_A EXP_INT_TABLE_B SINE_TABLE_A SINE_TABLE_B TANGENT_TABLE_A TANGENT_TABLE_B hiPrec hiPrecOut lnCoef_i lnCoef_last lnm lns reduceResults result long[] PI_O_4_BITS RECIP_2PI double E F_11_12 F_13_14 F_15_16 F_1_11 F_1_13 F_1_15 F_1_17 F_1_2 F_1_3 F_1_4 F_1_5 F_1_7 F_1_9 F_3_4 F_5_6 F_7_8 F_9_10 LN_2_A LN_2_B PI TWO_POWER_52 a a2 aa ab absAsinh absAtanh b base baseA baseB c cD2pH cRH cTmpH cd cosEpsA cosEpsB cosa cosaa cosab cosb costA costB d d1High d1Low d2p d2pHH d2pHL d2pHigh d2pLow da daa dab db denom denomb denomr direction dx epsA epsA2 epsB epsilon err est esta estb extra facta factb finalRemA finalRemB fracPartA fracPartB fx1 intPartA intPartB invx invy lna lnb lnza lnzb lores mant na nb numer oneOverXa p p2 pi2a pi2b pia pib r rHH rHL ra ratio ratioa ratiob rb recip recipa recipb remA remB result resultHigh resultLow resultb rln10a rln10b sinEpsA sinEpsB sina sinb sintA sintB sumA sumB t temp temp2 tempA tempB tempC tmp tmp1 tmp2 tmpA tmpB tmpHigh tmpLow x x2 xa xb xbadj xpa xpb xs y ya yaa yab yb z za zaa zab zb double[][] LN_HI_PREC_COEF LN_MANT LN_QUICK_COEF int EXP_FRAC_TABLE_LEN EXP_INT_TABLE_LEN EXP_INT_TABLE_MAX_INDEX LN_MANT_LEN SINE_TABLE_LEN a b bits e exp exp3 exponent finalK i idx intFrac intPart intVal k mantissa mostSignificantLostBit n quadrant scaledExponent shift sign splitFactor x long HEX_40000000 MASK_30BITS a ac ad b bc bd bits c d inbits mantissa mostSignificantLostBit prod2A prod2B prodA prodB shpi0 shpiA shpiB sign x xl y yi z  	projects/Math16/src/main/java/org/apache/commons/math3/util/FastMath.java	0.7071067811865475	3522	3522	2	replace	
6	[BUG] [BUGGY] [FE] AssertionError [CONTEXT] } if (a < b) { return b; }  if (a != b) { return Double.NaN; }   [BUGGY] [BUGGY] long bits = Double.doubleToRawLongBits(a); if (bits == 0x8000000000000000L) { return b; } return a; } [CLASS] FastMath ExpIntTable ExpFracTable lnMant CodyWaite [METHOD] max [RETURN_TYPE] double  final double a final double b [VARIABLES] boolean RECOMPUTE_TABLES_AT_RUNTIME bita bitb bitsum cotanFlag leftPlane negate negative subnormal double[] CBRTTWO COSINE_TABLE_A COSINE_TABLE_B EIGHTHS EXP_FRAC_TABLE_A EXP_FRAC_TABLE_B EXP_INT_TABLE_A EXP_INT_TABLE_B SINE_TABLE_A SINE_TABLE_B TANGENT_TABLE_A TANGENT_TABLE_B hiPrec hiPrecOut lnCoef_i lnCoef_last lnm lns reduceResults result long[] PI_O_4_BITS RECIP_2PI double E F_11_12 F_13_14 F_15_16 F_1_11 F_1_13 F_1_15 F_1_17 F_1_2 F_1_3 F_1_4 F_1_5 F_1_7 F_1_9 F_3_4 F_5_6 F_7_8 F_9_10 LN_2_A LN_2_B PI TWO_POWER_52 a a2 aa ab absAsinh absAtanh b base baseA baseB c cD2pH cRH cTmpH cd cosEpsA cosEpsB cosa cosaa cosab cosb costA costB d d1High d1Low d2p d2pHH d2pHL d2pHigh d2pLow da daa dab db denom denomb denomr direction dx epsA epsA2 epsB epsilon err est esta estb extra facta factb finalRemA finalRemB fracPartA fracPartB fx1 intPartA intPartB invx invy lna lnb lnza lnzb lores mant na nb numer oneOverXa p p2 pi2a pi2b pia pib r rHH rHL ra ratio ratioa ratiob rb recip recipa recipb remA remB result resultHigh resultLow resultb rln10a rln10b sinEpsA sinEpsB sina sinb sintA sintB sumA sumB t temp temp2 tempA tempB tempC tmp tmp1 tmp2 tmpA tmpB tmpHigh tmpLow x x2 xa xb xbadj xpa xpb xs y ya yaa yab yb z za zaa zab zb double[][] LN_HI_PREC_COEF LN_MANT LN_QUICK_COEF int EXP_FRAC_TABLE_LEN EXP_INT_TABLE_LEN EXP_INT_TABLE_MAX_INDEX LN_MANT_LEN SINE_TABLE_LEN a b bits e exp exp3 exponent finalK i idx intFrac intPart intVal k mantissa mostSignificantLostBit n quadrant scaledExponent shift sign splitFactor x long HEX_40000000 MASK_30BITS a ac ad b bc bd bits c d inbits mantissa mostSignificantLostBit prod2A prod2B prodA prodB shpi0 shpiA shpiB sign x xl y yi z  	projects/Math16/src/main/java/org/apache/commons/math3/util/FastMath.java	0.7071067811865475	3522	3522	2	add	
7	[BUG] [BUGGY] if (bits == 0x8000000000000000L) { [FE] AssertionError [CONTEXT] if (a < b) { return b; }  if (a != b) { return Double.NaN; }   long bits = Double.doubleToRawLongBits(a); [BUGGY] if (bits == 0x8000000000000000L) { [BUGGY] return b; } return a; } [CLASS] FastMath ExpIntTable ExpFracTable lnMant CodyWaite [METHOD] max [RETURN_TYPE] double  final double a final double b [VARIABLES] boolean RECOMPUTE_TABLES_AT_RUNTIME bita bitb bitsum cotanFlag leftPlane negate negative subnormal double[] CBRTTWO COSINE_TABLE_A COSINE_TABLE_B EIGHTHS EXP_FRAC_TABLE_A EXP_FRAC_TABLE_B EXP_INT_TABLE_A EXP_INT_TABLE_B SINE_TABLE_A SINE_TABLE_B TANGENT_TABLE_A TANGENT_TABLE_B hiPrec hiPrecOut lnCoef_i lnCoef_last lnm lns reduceResults result long[] PI_O_4_BITS RECIP_2PI double E F_11_12 F_13_14 F_15_16 F_1_11 F_1_13 F_1_15 F_1_17 F_1_2 F_1_3 F_1_4 F_1_5 F_1_7 F_1_9 F_3_4 F_5_6 F_7_8 F_9_10 LN_2_A LN_2_B PI TWO_POWER_52 a a2 aa ab absAsinh absAtanh b base baseA baseB c cD2pH cRH cTmpH cd cosEpsA cosEpsB cosa cosaa cosab cosb costA costB d d1High d1Low d2p d2pHH d2pHL d2pHigh d2pLow da daa dab db denom denomb denomr direction dx epsA epsA2 epsB epsilon err est esta estb extra facta factb finalRemA finalRemB fracPartA fracPartB fx1 intPartA intPartB invx invy lna lnb lnza lnzb lores mant na nb numer oneOverXa p p2 pi2a pi2b pia pib r rHH rHL ra ratio ratioa ratiob rb recip recipa recipb remA remB result resultHigh resultLow resultb rln10a rln10b sinEpsA sinEpsB sina sinb sintA sintB sumA sumB t temp temp2 tempA tempB tempC tmp tmp1 tmp2 tmpA tmpB tmpHigh tmpLow x x2 xa xb xbadj xpa xpb xs y ya yaa yab yb z za zaa zab zb double[][] LN_HI_PREC_COEF LN_MANT LN_QUICK_COEF int EXP_FRAC_TABLE_LEN EXP_INT_TABLE_LEN EXP_INT_TABLE_MAX_INDEX LN_MANT_LEN SINE_TABLE_LEN a b bits e exp exp3 exponent finalK i idx intFrac intPart intVal k mantissa mostSignificantLostBit n quadrant scaledExponent shift sign splitFactor x long HEX_40000000 MASK_30BITS a ac ad b bc bd bits c d inbits mantissa mostSignificantLostBit prod2A prod2B prodA prodB shpi0 shpiA shpiB sign x xl y yi z  	projects/Math16/src/main/java/org/apache/commons/math3/util/FastMath.java	0.7071067811865475	3523	3523	2	replace	
8	[BUG] [BUGGY] [FE] AssertionError [CONTEXT] if (a < b) { return b; }  if (a != b) { return Double.NaN; }   long bits = Double.doubleToRawLongBits(a); [BUGGY] [BUGGY] if (bits == 0x8000000000000000L) { return b; } return a; } [CLASS] FastMath ExpIntTable ExpFracTable lnMant CodyWaite [METHOD] max [RETURN_TYPE] double  final double a final double b [VARIABLES] boolean RECOMPUTE_TABLES_AT_RUNTIME bita bitb bitsum cotanFlag leftPlane negate negative subnormal double[] CBRTTWO COSINE_TABLE_A COSINE_TABLE_B EIGHTHS EXP_FRAC_TABLE_A EXP_FRAC_TABLE_B EXP_INT_TABLE_A EXP_INT_TABLE_B SINE_TABLE_A SINE_TABLE_B TANGENT_TABLE_A TANGENT_TABLE_B hiPrec hiPrecOut lnCoef_i lnCoef_last lnm lns reduceResults result long[] PI_O_4_BITS RECIP_2PI double E F_11_12 F_13_14 F_15_16 F_1_11 F_1_13 F_1_15 F_1_17 F_1_2 F_1_3 F_1_4 F_1_5 F_1_7 F_1_9 F_3_4 F_5_6 F_7_8 F_9_10 LN_2_A LN_2_B PI TWO_POWER_52 a a2 aa ab absAsinh absAtanh b base baseA baseB c cD2pH cRH cTmpH cd cosEpsA cosEpsB cosa cosaa cosab cosb costA costB d d1High d1Low d2p d2pHH d2pHL d2pHigh d2pLow da daa dab db denom denomb denomr direction dx epsA epsA2 epsB epsilon err est esta estb extra facta factb finalRemA finalRemB fracPartA fracPartB fx1 intPartA intPartB invx invy lna lnb lnza lnzb lores mant na nb numer oneOverXa p p2 pi2a pi2b pia pib r rHH rHL ra ratio ratioa ratiob rb recip recipa recipb remA remB result resultHigh resultLow resultb rln10a rln10b sinEpsA sinEpsB sina sinb sintA sintB sumA sumB t temp temp2 tempA tempB tempC tmp tmp1 tmp2 tmpA tmpB tmpHigh tmpLow x x2 xa xb xbadj xpa xpb xs y ya yaa yab yb z za zaa zab zb double[][] LN_HI_PREC_COEF LN_MANT LN_QUICK_COEF int EXP_FRAC_TABLE_LEN EXP_INT_TABLE_LEN EXP_INT_TABLE_MAX_INDEX LN_MANT_LEN SINE_TABLE_LEN a b bits e exp exp3 exponent finalK i idx intFrac intPart intVal k mantissa mostSignificantLostBit n quadrant scaledExponent shift sign splitFactor x long HEX_40000000 MASK_30BITS a ac ad b bc bd bits c d inbits mantissa mostSignificantLostBit prod2A prod2B prodA prodB shpi0 shpiA shpiB sign x xl y yi z  	projects/Math16/src/main/java/org/apache/commons/math3/util/FastMath.java	0.7071067811865475	3523	3523	2	add	
9	[BUG] [BUGGY] return a; [FE] AssertionError [CONTEXT]  if (a != b) { return Double.NaN; }   long bits = Double.doubleToRawLongBits(a); if (bits == 0x8000000000000000L) { return b; } [BUGGY] return a; [BUGGY] } [CLASS] FastMath ExpIntTable ExpFracTable lnMant CodyWaite [METHOD] max [RETURN_TYPE] double  final double a final double b [VARIABLES] boolean RECOMPUTE_TABLES_AT_RUNTIME bita bitb bitsum cotanFlag leftPlane negate negative subnormal double[] CBRTTWO COSINE_TABLE_A COSINE_TABLE_B EIGHTHS EXP_FRAC_TABLE_A EXP_FRAC_TABLE_B EXP_INT_TABLE_A EXP_INT_TABLE_B SINE_TABLE_A SINE_TABLE_B TANGENT_TABLE_A TANGENT_TABLE_B hiPrec hiPrecOut lnCoef_i lnCoef_last lnm lns reduceResults result long[] PI_O_4_BITS RECIP_2PI double E F_11_12 F_13_14 F_15_16 F_1_11 F_1_13 F_1_15 F_1_17 F_1_2 F_1_3 F_1_4 F_1_5 F_1_7 F_1_9 F_3_4 F_5_6 F_7_8 F_9_10 LN_2_A LN_2_B PI TWO_POWER_52 a a2 aa ab absAsinh absAtanh b base baseA baseB c cD2pH cRH cTmpH cd cosEpsA cosEpsB cosa cosaa cosab cosb costA costB d d1High d1Low d2p d2pHH d2pHL d2pHigh d2pLow da daa dab db denom denomb denomr direction dx epsA epsA2 epsB epsilon err est esta estb extra facta factb finalRemA finalRemB fracPartA fracPartB fx1 intPartA intPartB invx invy lna lnb lnza lnzb lores mant na nb numer oneOverXa p p2 pi2a pi2b pia pib r rHH rHL ra ratio ratioa ratiob rb recip recipa recipb remA remB result resultHigh resultLow resultb rln10a rln10b sinEpsA sinEpsB sina sinb sintA sintB sumA sumB t temp temp2 tempA tempB tempC tmp tmp1 tmp2 tmpA tmpB tmpHigh tmpLow x x2 xa xb xbadj xpa xpb xs y ya yaa yab yb z za zaa zab zb double[][] LN_HI_PREC_COEF LN_MANT LN_QUICK_COEF int EXP_FRAC_TABLE_LEN EXP_INT_TABLE_LEN EXP_INT_TABLE_MAX_INDEX LN_MANT_LEN SINE_TABLE_LEN a b bits e exp exp3 exponent finalK i idx intFrac intPart intVal k mantissa mostSignificantLostBit n quadrant scaledExponent shift sign splitFactor x long HEX_40000000 MASK_30BITS a ac ad b bc bd bits c d inbits mantissa mostSignificantLostBit prod2A prod2B prodA prodB shpi0 shpiA shpiB sign x xl y yi z  	projects/Math16/src/main/java/org/apache/commons/math3/util/FastMath.java	0.7071067811865475	3526	3526	2	replace	
10	[BUG] [BUGGY] [FE] AssertionError [CONTEXT]  if (a != b) { return Double.NaN; }   long bits = Double.doubleToRawLongBits(a); if (bits == 0x8000000000000000L) { return b; } [BUGGY] [BUGGY] return a; } [CLASS] FastMath ExpIntTable ExpFracTable lnMant CodyWaite [METHOD] max [RETURN_TYPE] double  final double a final double b [VARIABLES] boolean RECOMPUTE_TABLES_AT_RUNTIME bita bitb bitsum cotanFlag leftPlane negate negative subnormal double[] CBRTTWO COSINE_TABLE_A COSINE_TABLE_B EIGHTHS EXP_FRAC_TABLE_A EXP_FRAC_TABLE_B EXP_INT_TABLE_A EXP_INT_TABLE_B SINE_TABLE_A SINE_TABLE_B TANGENT_TABLE_A TANGENT_TABLE_B hiPrec hiPrecOut lnCoef_i lnCoef_last lnm lns reduceResults result long[] PI_O_4_BITS RECIP_2PI double E F_11_12 F_13_14 F_15_16 F_1_11 F_1_13 F_1_15 F_1_17 F_1_2 F_1_3 F_1_4 F_1_5 F_1_7 F_1_9 F_3_4 F_5_6 F_7_8 F_9_10 LN_2_A LN_2_B PI TWO_POWER_52 a a2 aa ab absAsinh absAtanh b base baseA baseB c cD2pH cRH cTmpH cd cosEpsA cosEpsB cosa cosaa cosab cosb costA costB d d1High d1Low d2p d2pHH d2pHL d2pHigh d2pLow da daa dab db denom denomb denomr direction dx epsA epsA2 epsB epsilon err est esta estb extra facta factb finalRemA finalRemB fracPartA fracPartB fx1 intPartA intPartB invx invy lna lnb lnza lnzb lores mant na nb numer oneOverXa p p2 pi2a pi2b pia pib r rHH rHL ra ratio ratioa ratiob rb recip recipa recipb remA remB result resultHigh resultLow resultb rln10a rln10b sinEpsA sinEpsB sina sinb sintA sintB sumA sumB t temp temp2 tempA tempB tempC tmp tmp1 tmp2 tmpA tmpB tmpHigh tmpLow x x2 xa xb xbadj xpa xpb xs y ya yaa yab yb z za zaa zab zb double[][] LN_HI_PREC_COEF LN_MANT LN_QUICK_COEF int EXP_FRAC_TABLE_LEN EXP_INT_TABLE_LEN EXP_INT_TABLE_MAX_INDEX LN_MANT_LEN SINE_TABLE_LEN a b bits e exp exp3 exponent finalK i idx intFrac intPart intVal k mantissa mostSignificantLostBit n quadrant scaledExponent shift sign splitFactor x long HEX_40000000 MASK_30BITS a ac ad b bc bd bits c d inbits mantissa mostSignificantLostBit prod2A prod2B prodA prodB shpi0 shpiA shpiB sign x xl y yi z  	projects/Math16/src/main/java/org/apache/commons/math3/util/FastMath.java	0.7071067811865475	3526	3526	2	add	
11	[BUG] [BUGGY] if (x != x) { [FE] AssertionError [CONTEXT] public static double cosh(double x) { [BUGGY] if (x != x) { [BUGGY] return x; }     if (x > 20) {  [CLASS] FastMath ExpIntTable ExpFracTable lnMant CodyWaite [METHOD] cosh [RETURN_TYPE] double  double x [VARIABLES] boolean RECOMPUTE_TABLES_AT_RUNTIME double[] CBRTTWO COSINE_TABLE_A COSINE_TABLE_B EIGHTHS EXP_FRAC_TABLE_A EXP_FRAC_TABLE_B EXP_INT_TABLE_A EXP_INT_TABLE_B SINE_TABLE_A SINE_TABLE_B TANGENT_TABLE_A TANGENT_TABLE_B hiPrec long[] PI_O_4_BITS RECIP_2PI double E F_11_12 F_13_14 F_15_16 F_1_11 F_1_13 F_1_15 F_1_17 F_1_2 F_1_3 F_1_4 F_1_5 F_1_7 F_1_9 F_3_4 F_5_6 F_7_8 F_9_10 LN_2_A LN_2_B PI TWO_POWER_52 a b d finalRemA finalRemB recip recipa recipb remA remB result temp x xa xb ya yaa yab yb double[][] LN_HI_PREC_COEF LN_MANT LN_QUICK_COEF int EXP_FRAC_TABLE_LEN EXP_INT_TABLE_LEN EXP_INT_TABLE_MAX_INDEX LN_MANT_LEN SINE_TABLE_LEN finalK k long HEX_40000000 MASK_30BITS xl  	projects/Math16/src/main/java/org/apache/commons/math3/util/FastMath.java	0.6324555320336759	384	384	2	replace	
12	[BUG] [BUGGY] [FE] AssertionError [CONTEXT] public static double cosh(double x) { [BUGGY] [BUGGY] if (x != x) { return x; }     if (x > 20) {  [CLASS] FastMath ExpIntTable ExpFracTable lnMant CodyWaite [METHOD] cosh [RETURN_TYPE] double  double x [VARIABLES] boolean RECOMPUTE_TABLES_AT_RUNTIME double[] CBRTTWO COSINE_TABLE_A COSINE_TABLE_B EIGHTHS EXP_FRAC_TABLE_A EXP_FRAC_TABLE_B EXP_INT_TABLE_A EXP_INT_TABLE_B SINE_TABLE_A SINE_TABLE_B TANGENT_TABLE_A TANGENT_TABLE_B hiPrec long[] PI_O_4_BITS RECIP_2PI double E F_11_12 F_13_14 F_15_16 F_1_11 F_1_13 F_1_15 F_1_17 F_1_2 F_1_3 F_1_4 F_1_5 F_1_7 F_1_9 F_3_4 F_5_6 F_7_8 F_9_10 LN_2_A LN_2_B PI TWO_POWER_52 a b d finalRemA finalRemB recip recipa recipb remA remB result temp x xa xb ya yaa yab yb double[][] LN_HI_PREC_COEF LN_MANT LN_QUICK_COEF int EXP_FRAC_TABLE_LEN EXP_INT_TABLE_LEN EXP_INT_TABLE_MAX_INDEX LN_MANT_LEN SINE_TABLE_LEN finalK k long HEX_40000000 MASK_30BITS xl  	projects/Math16/src/main/java/org/apache/commons/math3/util/FastMath.java	0.6324555320336759	384	384	2	add	
13	[BUG] [BUGGY] if (x > 20) { [FE] AssertionError [CONTEXT] public static double cosh(double x) { if (x != x) { return x; }     [BUGGY] if (x > 20) { [BUGGY]  return 0.5 * exp(x); } if (x < -20) {  return 0.5 * exp(-x); } final double hiPrec[] = new double[2]; if (x < 0.0) { [CLASS] FastMath ExpIntTable ExpFracTable lnMant CodyWaite [METHOD] cosh [RETURN_TYPE] double  double x [VARIABLES] boolean RECOMPUTE_TABLES_AT_RUNTIME double[] CBRTTWO COSINE_TABLE_A COSINE_TABLE_B EIGHTHS EXP_FRAC_TABLE_A EXP_FRAC_TABLE_B EXP_INT_TABLE_A EXP_INT_TABLE_B SINE_TABLE_A SINE_TABLE_B TANGENT_TABLE_A TANGENT_TABLE_B hiPrec long[] PI_O_4_BITS RECIP_2PI double E F_11_12 F_13_14 F_15_16 F_1_11 F_1_13 F_1_15 F_1_17 F_1_2 F_1_3 F_1_4 F_1_5 F_1_7 F_1_9 F_3_4 F_5_6 F_7_8 F_9_10 LN_2_A LN_2_B PI TWO_POWER_52 a b d finalRemA finalRemB recip recipa recipb remA remB result temp x xa xb ya yaa yab yb double[][] LN_HI_PREC_COEF LN_MANT LN_QUICK_COEF int EXP_FRAC_TABLE_LEN EXP_INT_TABLE_LEN EXP_INT_TABLE_MAX_INDEX LN_MANT_LEN SINE_TABLE_LEN finalK k long HEX_40000000 MASK_30BITS xl  	projects/Math16/src/main/java/org/apache/commons/math3/util/FastMath.java	0.6324555320336759	393	393	2	replace	
14	[BUG] [BUGGY] [FE] AssertionError [CONTEXT] public static double cosh(double x) { if (x != x) { return x; }     [BUGGY] [BUGGY] if (x > 20) {  return 0.5 * exp(x); } if (x < -20) {  return 0.5 * exp(-x); } final double hiPrec[] = new double[2]; if (x < 0.0) { [CLASS] FastMath ExpIntTable ExpFracTable lnMant CodyWaite [METHOD] cosh [RETURN_TYPE] double  double x [VARIABLES] boolean RECOMPUTE_TABLES_AT_RUNTIME double[] CBRTTWO COSINE_TABLE_A COSINE_TABLE_B EIGHTHS EXP_FRAC_TABLE_A EXP_FRAC_TABLE_B EXP_INT_TABLE_A EXP_INT_TABLE_B SINE_TABLE_A SINE_TABLE_B TANGENT_TABLE_A TANGENT_TABLE_B hiPrec long[] PI_O_4_BITS RECIP_2PI double E F_11_12 F_13_14 F_15_16 F_1_11 F_1_13 F_1_15 F_1_17 F_1_2 F_1_3 F_1_4 F_1_5 F_1_7 F_1_9 F_3_4 F_5_6 F_7_8 F_9_10 LN_2_A LN_2_B PI TWO_POWER_52 a b d finalRemA finalRemB recip recipa recipb remA remB result temp x xa xb ya yaa yab yb double[][] LN_HI_PREC_COEF LN_MANT LN_QUICK_COEF int EXP_FRAC_TABLE_LEN EXP_INT_TABLE_LEN EXP_INT_TABLE_MAX_INDEX LN_MANT_LEN SINE_TABLE_LEN finalK k long HEX_40000000 MASK_30BITS xl  	projects/Math16/src/main/java/org/apache/commons/math3/util/FastMath.java	0.6324555320336759	393	393	2	add	
15	[BUG] [BUGGY] return exp(x, 0.0, null); [FE] AssertionError [CONTEXT] public static double exp(double x) { [BUGGY] return exp(x, 0.0, null); [BUGGY] } [CLASS] FastMath ExpIntTable ExpFracTable lnMant CodyWaite [METHOD] exp [RETURN_TYPE] double  double x [VARIABLES] boolean RECOMPUTE_TABLES_AT_RUNTIME negate negative double[] CBRTTWO COSINE_TABLE_A COSINE_TABLE_B EIGHTHS EXP_FRAC_TABLE_A EXP_FRAC_TABLE_B EXP_INT_TABLE_A EXP_INT_TABLE_B SINE_TABLE_A SINE_TABLE_B TANGENT_TABLE_A TANGENT_TABLE_B hiPrec long[] PI_O_4_BITS RECIP_2PI double E F_11_12 F_13_14 F_15_16 F_1_11 F_1_13 F_1_15 F_1_17 F_1_2 F_1_3 F_1_4 F_1_5 F_1_7 F_1_9 F_3_4 F_5_6 F_7_8 F_9_10 LN_2_A LN_2_B PI TWO_POWER_52 a a2 absAsinh absAtanh b d da daa dab db denom denomb denomr finalRemA finalRemB na nb ra ratio ratioa ratiob rb recip recipa recipb remA remB result temp x xa xb ya yaa yab yb za zb double[][] LN_HI_PREC_COEF LN_MANT LN_QUICK_COEF int EXP_FRAC_TABLE_LEN EXP_INT_TABLE_LEN EXP_INT_TABLE_MAX_INDEX LN_MANT_LEN SINE_TABLE_LEN finalK k long HEX_40000000 MASK_30BITS xl  	projects/Math16/src/main/java/org/apache/commons/math3/util/FastMath.java	0.6324555320336759	810	810	2	replace	
16	[BUG] [BUGGY] [FE] AssertionError [CONTEXT] public static double exp(double x) { [BUGGY] [BUGGY] return exp(x, 0.0, null); } [CLASS] FastMath ExpIntTable ExpFracTable lnMant CodyWaite [METHOD] exp [RETURN_TYPE] double  double x [VARIABLES] boolean RECOMPUTE_TABLES_AT_RUNTIME negate negative double[] CBRTTWO COSINE_TABLE_A COSINE_TABLE_B EIGHTHS EXP_FRAC_TABLE_A EXP_FRAC_TABLE_B EXP_INT_TABLE_A EXP_INT_TABLE_B SINE_TABLE_A SINE_TABLE_B TANGENT_TABLE_A TANGENT_TABLE_B hiPrec long[] PI_O_4_BITS RECIP_2PI double E F_11_12 F_13_14 F_15_16 F_1_11 F_1_13 F_1_15 F_1_17 F_1_2 F_1_3 F_1_4 F_1_5 F_1_7 F_1_9 F_3_4 F_5_6 F_7_8 F_9_10 LN_2_A LN_2_B PI TWO_POWER_52 a a2 absAsinh absAtanh b d da daa dab db denom denomb denomr finalRemA finalRemB na nb ra ratio ratioa ratiob rb recip recipa recipb remA remB result temp x xa xb ya yaa yab yb za zb double[][] LN_HI_PREC_COEF LN_MANT LN_QUICK_COEF int EXP_FRAC_TABLE_LEN EXP_INT_TABLE_LEN EXP_INT_TABLE_MAX_INDEX LN_MANT_LEN SINE_TABLE_LEN finalK k long HEX_40000000 MASK_30BITS xl  	projects/Math16/src/main/java/org/apache/commons/math3/util/FastMath.java	0.6324555320336759	810	810	2	add	
17	[BUG] [BUGGY] return (x < 0.0) ? -x : (x == 0.0) ? 0.0 : x; // -0.0 => +0.0 } [FE] AssertionError [CONTEXT] public static double abs(double x) { [BUGGY] return (x < 0.0) ? -x : (x == 0.0) ? 0.0 : x; // -0.0 => +0.0 } [BUGGY] } [CLASS] FastMath ExpIntTable ExpFracTable lnMant CodyWaite [METHOD] abs [RETURN_TYPE] double  double x [VARIABLES] boolean RECOMPUTE_TABLES_AT_RUNTIME bita bitb bitsum cotanFlag leftPlane negate negative subnormal double[] CBRTTWO COSINE_TABLE_A COSINE_TABLE_B EIGHTHS EXP_FRAC_TABLE_A EXP_FRAC_TABLE_B EXP_INT_TABLE_A EXP_INT_TABLE_B SINE_TABLE_A SINE_TABLE_B TANGENT_TABLE_A TANGENT_TABLE_B hiPrec hiPrecOut lnCoef_i lnCoef_last lnm lns reduceResults result long[] PI_O_4_BITS RECIP_2PI double E F_11_12 F_13_14 F_15_16 F_1_11 F_1_13 F_1_15 F_1_17 F_1_2 F_1_3 F_1_4 F_1_5 F_1_7 F_1_9 F_3_4 F_5_6 F_7_8 F_9_10 LN_2_A LN_2_B PI TWO_POWER_52 a a2 aa ab absAsinh absAtanh b base baseA baseB c cD2pH cRH cTmpH cd cosEpsA cosEpsB cosa cosaa cosab cosb costA costB d d1High d1Low d2p d2pHH d2pHL d2pHigh d2pLow da daa dab db denom denomb denomr dx epsA epsA2 epsB epsilon err est esta estb extra facta factb finalRemA finalRemB fracPartA fracPartB fx1 intPartA intPartB invx invy lna lnb lnza lnzb lores mant na nb numer oneOverXa p p2 pi2a pi2b pia pib r rHH rHL ra ratio ratioa ratiob rb recip recipa recipb remA remB result resultHigh resultLow resultb rln10a rln10b sinEpsA sinEpsB sina sinb sintA sintB sumA sumB t temp temp2 tempA tempB tempC tmp tmp1 tmp2 tmpA tmpB tmpHigh tmpLow x x2 xa xb xbadj xpa xpb xs y ya yaa yab yb z za zaa zab zb double[][] LN_HI_PREC_COEF LN_MANT LN_QUICK_COEF int EXP_FRAC_TABLE_LEN EXP_INT_TABLE_LEN EXP_INT_TABLE_MAX_INDEX LN_MANT_LEN SINE_TABLE_LEN e exp exp3 exponent finalK i idx intFrac intPart intVal k quadrant shift splitFactor x long HEX_40000000 MASK_30BITS a ac ad b bc bd bits c d inbits prod2A prod2B prodA prodB shpi0 shpiA shpiB x xl yi  	projects/Math16/src/main/java/org/apache/commons/math3/util/FastMath.java	0.6324555320336759	2995	2996	2	replace	
18	[BUG] [BUGGY] [FE] AssertionError [CONTEXT] public static double abs(double x) { [BUGGY] [BUGGY] return (x < 0.0) ? -x : (x == 0.0) ? 0.0 : x; // -0.0 => +0.0 } } [CLASS] FastMath ExpIntTable ExpFracTable lnMant CodyWaite [METHOD] abs [RETURN_TYPE] double  double x [VARIABLES] boolean RECOMPUTE_TABLES_AT_RUNTIME bita bitb bitsum cotanFlag leftPlane negate negative subnormal double[] CBRTTWO COSINE_TABLE_A COSINE_TABLE_B EIGHTHS EXP_FRAC_TABLE_A EXP_FRAC_TABLE_B EXP_INT_TABLE_A EXP_INT_TABLE_B SINE_TABLE_A SINE_TABLE_B TANGENT_TABLE_A TANGENT_TABLE_B hiPrec hiPrecOut lnCoef_i lnCoef_last lnm lns reduceResults result long[] PI_O_4_BITS RECIP_2PI double E F_11_12 F_13_14 F_15_16 F_1_11 F_1_13 F_1_15 F_1_17 F_1_2 F_1_3 F_1_4 F_1_5 F_1_7 F_1_9 F_3_4 F_5_6 F_7_8 F_9_10 LN_2_A LN_2_B PI TWO_POWER_52 a a2 aa ab absAsinh absAtanh b base baseA baseB c cD2pH cRH cTmpH cd cosEpsA cosEpsB cosa cosaa cosab cosb costA costB d d1High d1Low d2p d2pHH d2pHL d2pHigh d2pLow da daa dab db denom denomb denomr dx epsA epsA2 epsB epsilon err est esta estb extra facta factb finalRemA finalRemB fracPartA fracPartB fx1 intPartA intPartB invx invy lna lnb lnza lnzb lores mant na nb numer oneOverXa p p2 pi2a pi2b pia pib r rHH rHL ra ratio ratioa ratiob rb recip recipa recipb remA remB result resultHigh resultLow resultb rln10a rln10b sinEpsA sinEpsB sina sinb sintA sintB sumA sumB t temp temp2 tempA tempB tempC tmp tmp1 tmp2 tmpA tmpB tmpHigh tmpLow x x2 xa xb xbadj xpa xpb xs y ya yaa yab yb z za zaa zab zb double[][] LN_HI_PREC_COEF LN_MANT LN_QUICK_COEF int EXP_FRAC_TABLE_LEN EXP_INT_TABLE_LEN EXP_INT_TABLE_MAX_INDEX LN_MANT_LEN SINE_TABLE_LEN e exp exp3 exponent finalK i idx intFrac intPart intVal k quadrant shift splitFactor x long HEX_40000000 MASK_30BITS a ac ad b bc bd bits c d inbits prod2A prod2B prodA prodB shpi0 shpiA shpiB x xl yi  	projects/Math16/src/main/java/org/apache/commons/math3/util/FastMath.java	0.6324555320336759	2995	2996	2	add	
19	[BUG] [BUGGY] if (Double.isInfinite(x)) { [FE] AssertionError [CONTEXT] public static double ulp(double x) { [BUGGY] if (Double.isInfinite(x)) { [BUGGY] return Double.POSITIVE_INFINITY; } return abs(x - Double.longBitsToDouble(Double.doubleToLongBits(x) ^ 1)); } [CLASS] FastMath ExpIntTable ExpFracTable lnMant CodyWaite [METHOD] ulp [RETURN_TYPE] double  double x [VARIABLES] boolean RECOMPUTE_TABLES_AT_RUNTIME bita bitb bitsum cotanFlag leftPlane negate negative subnormal double[] CBRTTWO COSINE_TABLE_A COSINE_TABLE_B EIGHTHS EXP_FRAC_TABLE_A EXP_FRAC_TABLE_B EXP_INT_TABLE_A EXP_INT_TABLE_B SINE_TABLE_A SINE_TABLE_B TANGENT_TABLE_A TANGENT_TABLE_B hiPrec hiPrecOut lnCoef_i lnCoef_last lnm lns reduceResults result long[] PI_O_4_BITS RECIP_2PI double E F_11_12 F_13_14 F_15_16 F_1_11 F_1_13 F_1_15 F_1_17 F_1_2 F_1_3 F_1_4 F_1_5 F_1_7 F_1_9 F_3_4 F_5_6 F_7_8 F_9_10 LN_2_A LN_2_B PI TWO_POWER_52 a a2 aa ab absAsinh absAtanh b base baseA baseB c cD2pH cRH cTmpH cd cosEpsA cosEpsB cosa cosaa cosab cosb costA costB d d1High d1Low d2p d2pHH d2pHL d2pHigh d2pLow da daa dab db denom denomb denomr dx epsA epsA2 epsB epsilon err est esta estb extra facta factb finalRemA finalRemB fracPartA fracPartB fx1 intPartA intPartB invx invy lna lnb lnza lnzb lores mant na nb numer oneOverXa p p2 pi2a pi2b pia pib r rHH rHL ra ratio ratioa ratiob rb recip recipa recipb remA remB result resultHigh resultLow resultb rln10a rln10b sinEpsA sinEpsB sina sinb sintA sintB sumA sumB t temp temp2 tempA tempB tempC tmp tmp1 tmp2 tmpA tmpB tmpHigh tmpLow x x2 xa xb xbadj xpa xpb xs y ya yaa yab yb z za zaa zab zb double[][] LN_HI_PREC_COEF LN_MANT LN_QUICK_COEF int EXP_FRAC_TABLE_LEN EXP_INT_TABLE_LEN EXP_INT_TABLE_MAX_INDEX LN_MANT_LEN SINE_TABLE_LEN e exp exp3 exponent finalK i idx intFrac intPart intVal k quadrant shift splitFactor x long HEX_40000000 MASK_30BITS a ac ad b bc bd bits c d inbits prod2A prod2B prodA prodB shpi0 shpiA shpiB x xl yi  	projects/Math16/src/main/java/org/apache/commons/math3/util/FastMath.java	0.6324555320336759	3004	3004	2	replace	
20	[BUG] [BUGGY] [FE] AssertionError [CONTEXT] public static double ulp(double x) { [BUGGY] [BUGGY] if (Double.isInfinite(x)) { return Double.POSITIVE_INFINITY; } return abs(x - Double.longBitsToDouble(Double.doubleToLongBits(x) ^ 1)); } [CLASS] FastMath ExpIntTable ExpFracTable lnMant CodyWaite [METHOD] ulp [RETURN_TYPE] double  double x [VARIABLES] boolean RECOMPUTE_TABLES_AT_RUNTIME bita bitb bitsum cotanFlag leftPlane negate negative subnormal double[] CBRTTWO COSINE_TABLE_A COSINE_TABLE_B EIGHTHS EXP_FRAC_TABLE_A EXP_FRAC_TABLE_B EXP_INT_TABLE_A EXP_INT_TABLE_B SINE_TABLE_A SINE_TABLE_B TANGENT_TABLE_A TANGENT_TABLE_B hiPrec hiPrecOut lnCoef_i lnCoef_last lnm lns reduceResults result long[] PI_O_4_BITS RECIP_2PI double E F_11_12 F_13_14 F_15_16 F_1_11 F_1_13 F_1_15 F_1_17 F_1_2 F_1_3 F_1_4 F_1_5 F_1_7 F_1_9 F_3_4 F_5_6 F_7_8 F_9_10 LN_2_A LN_2_B PI TWO_POWER_52 a a2 aa ab absAsinh absAtanh b base baseA baseB c cD2pH cRH cTmpH cd cosEpsA cosEpsB cosa cosaa cosab cosb costA costB d d1High d1Low d2p d2pHH d2pHL d2pHigh d2pLow da daa dab db denom denomb denomr dx epsA epsA2 epsB epsilon err est esta estb extra facta factb finalRemA finalRemB fracPartA fracPartB fx1 intPartA intPartB invx invy lna lnb lnza lnzb lores mant na nb numer oneOverXa p p2 pi2a pi2b pia pib r rHH rHL ra ratio ratioa ratiob rb recip recipa recipb remA remB result resultHigh resultLow resultb rln10a rln10b sinEpsA sinEpsB sina sinb sintA sintB sumA sumB t temp temp2 tempA tempB tempC tmp tmp1 tmp2 tmpA tmpB tmpHigh tmpLow x x2 xa xb xbadj xpa xpb xs y ya yaa yab yb z za zaa zab zb double[][] LN_HI_PREC_COEF LN_MANT LN_QUICK_COEF int EXP_FRAC_TABLE_LEN EXP_INT_TABLE_LEN EXP_INT_TABLE_MAX_INDEX LN_MANT_LEN SINE_TABLE_LEN e exp exp3 exponent finalK i idx intFrac intPart intVal k quadrant shift splitFactor x long HEX_40000000 MASK_30BITS a ac ad b bc bd bits c d inbits prod2A prod2B prodA prodB shpi0 shpiA shpiB x xl yi  	projects/Math16/src/main/java/org/apache/commons/math3/util/FastMath.java	0.6324555320336759	3004	3004	2	add	
21	[BUG] [BUGGY] return abs(x - Double.longBitsToDouble(Double.doubleToLongBits(x) ^ 1)); [FE] AssertionError [CONTEXT] public static double ulp(double x) { if (Double.isInfinite(x)) { return Double.POSITIVE_INFINITY; } [BUGGY] return abs(x - Double.longBitsToDouble(Double.doubleToLongBits(x) ^ 1)); [BUGGY] } [CLASS] FastMath ExpIntTable ExpFracTable lnMant CodyWaite [METHOD] ulp [RETURN_TYPE] double  double x [VARIABLES] boolean RECOMPUTE_TABLES_AT_RUNTIME bita bitb bitsum cotanFlag leftPlane negate negative subnormal double[] CBRTTWO COSINE_TABLE_A COSINE_TABLE_B EIGHTHS EXP_FRAC_TABLE_A EXP_FRAC_TABLE_B EXP_INT_TABLE_A EXP_INT_TABLE_B SINE_TABLE_A SINE_TABLE_B TANGENT_TABLE_A TANGENT_TABLE_B hiPrec hiPrecOut lnCoef_i lnCoef_last lnm lns reduceResults result long[] PI_O_4_BITS RECIP_2PI double E F_11_12 F_13_14 F_15_16 F_1_11 F_1_13 F_1_15 F_1_17 F_1_2 F_1_3 F_1_4 F_1_5 F_1_7 F_1_9 F_3_4 F_5_6 F_7_8 F_9_10 LN_2_A LN_2_B PI TWO_POWER_52 a a2 aa ab absAsinh absAtanh b base baseA baseB c cD2pH cRH cTmpH cd cosEpsA cosEpsB cosa cosaa cosab cosb costA costB d d1High d1Low d2p d2pHH d2pHL d2pHigh d2pLow da daa dab db denom denomb denomr dx epsA epsA2 epsB epsilon err est esta estb extra facta factb finalRemA finalRemB fracPartA fracPartB fx1 intPartA intPartB invx invy lna lnb lnza lnzb lores mant na nb numer oneOverXa p p2 pi2a pi2b pia pib r rHH rHL ra ratio ratioa ratiob rb recip recipa recipb remA remB result resultHigh resultLow resultb rln10a rln10b sinEpsA sinEpsB sina sinb sintA sintB sumA sumB t temp temp2 tempA tempB tempC tmp tmp1 tmp2 tmpA tmpB tmpHigh tmpLow x x2 xa xb xbadj xpa xpb xs y ya yaa yab yb z za zaa zab zb double[][] LN_HI_PREC_COEF LN_MANT LN_QUICK_COEF int EXP_FRAC_TABLE_LEN EXP_INT_TABLE_LEN EXP_INT_TABLE_MAX_INDEX LN_MANT_LEN SINE_TABLE_LEN e exp exp3 exponent finalK i idx intFrac intPart intVal k quadrant shift splitFactor x long HEX_40000000 MASK_30BITS a ac ad b bc bd bits c d inbits prod2A prod2B prodA prodB shpi0 shpiA shpiB x xl yi  	projects/Math16/src/main/java/org/apache/commons/math3/util/FastMath.java	0.6324555320336759	3007	3007	2	replace	
22	[BUG] [BUGGY] [FE] AssertionError [CONTEXT] public static double ulp(double x) { if (Double.isInfinite(x)) { return Double.POSITIVE_INFINITY; } [BUGGY] [BUGGY] return abs(x - Double.longBitsToDouble(Double.doubleToLongBits(x) ^ 1)); } [CLASS] FastMath ExpIntTable ExpFracTable lnMant CodyWaite [METHOD] ulp [RETURN_TYPE] double  double x [VARIABLES] boolean RECOMPUTE_TABLES_AT_RUNTIME bita bitb bitsum cotanFlag leftPlane negate negative subnormal double[] CBRTTWO COSINE_TABLE_A COSINE_TABLE_B EIGHTHS EXP_FRAC_TABLE_A EXP_FRAC_TABLE_B EXP_INT_TABLE_A EXP_INT_TABLE_B SINE_TABLE_A SINE_TABLE_B TANGENT_TABLE_A TANGENT_TABLE_B hiPrec hiPrecOut lnCoef_i lnCoef_last lnm lns reduceResults result long[] PI_O_4_BITS RECIP_2PI double E F_11_12 F_13_14 F_15_16 F_1_11 F_1_13 F_1_15 F_1_17 F_1_2 F_1_3 F_1_4 F_1_5 F_1_7 F_1_9 F_3_4 F_5_6 F_7_8 F_9_10 LN_2_A LN_2_B PI TWO_POWER_52 a a2 aa ab absAsinh absAtanh b base baseA baseB c cD2pH cRH cTmpH cd cosEpsA cosEpsB cosa cosaa cosab cosb costA costB d d1High d1Low d2p d2pHH d2pHL d2pHigh d2pLow da daa dab db denom denomb denomr dx epsA epsA2 epsB epsilon err est esta estb extra facta factb finalRemA finalRemB fracPartA fracPartB fx1 intPartA intPartB invx invy lna lnb lnza lnzb lores mant na nb numer oneOverXa p p2 pi2a pi2b pia pib r rHH rHL ra ratio ratioa ratiob rb recip recipa recipb remA remB result resultHigh resultLow resultb rln10a rln10b sinEpsA sinEpsB sina sinb sintA sintB sumA sumB t temp temp2 tempA tempB tempC tmp tmp1 tmp2 tmpA tmpB tmpHigh tmpLow x x2 xa xb xbadj xpa xpb xs y ya yaa yab yb z za zaa zab zb double[][] LN_HI_PREC_COEF LN_MANT LN_QUICK_COEF int EXP_FRAC_TABLE_LEN EXP_INT_TABLE_LEN EXP_INT_TABLE_MAX_INDEX LN_MANT_LEN SINE_TABLE_LEN e exp exp3 exponent finalK i idx intFrac intPart intVal k quadrant shift splitFactor x long HEX_40000000 MASK_30BITS a ac ad b bc bd bits c d inbits prod2A prod2B prodA prodB shpi0 shpiA shpiB x xl yi  	projects/Math16/src/main/java/org/apache/commons/math3/util/FastMath.java	0.6324555320336759	3007	3007	2	add	
23	[BUG] [BUGGY] if (a > b) { [FE] AssertionError [CONTEXT] public static double max(final double a, final double b) { [BUGGY] if (a > b) { [BUGGY] return a; } if (a < b) { return b; }  if (a != b) { return Double.NaN; }  [CLASS] FastMath ExpIntTable ExpFracTable lnMant CodyWaite [METHOD] max [RETURN_TYPE] double  final double a final double b [VARIABLES] boolean RECOMPUTE_TABLES_AT_RUNTIME bita bitb bitsum cotanFlag leftPlane negate negative subnormal double[] CBRTTWO COSINE_TABLE_A COSINE_TABLE_B EIGHTHS EXP_FRAC_TABLE_A EXP_FRAC_TABLE_B EXP_INT_TABLE_A EXP_INT_TABLE_B SINE_TABLE_A SINE_TABLE_B TANGENT_TABLE_A TANGENT_TABLE_B hiPrec hiPrecOut lnCoef_i lnCoef_last lnm lns reduceResults result long[] PI_O_4_BITS RECIP_2PI double E F_11_12 F_13_14 F_15_16 F_1_11 F_1_13 F_1_15 F_1_17 F_1_2 F_1_3 F_1_4 F_1_5 F_1_7 F_1_9 F_3_4 F_5_6 F_7_8 F_9_10 LN_2_A LN_2_B PI TWO_POWER_52 a a2 aa ab absAsinh absAtanh b base baseA baseB c cD2pH cRH cTmpH cd cosEpsA cosEpsB cosa cosaa cosab cosb costA costB d d1High d1Low d2p d2pHH d2pHL d2pHigh d2pLow da daa dab db denom denomb denomr direction dx epsA epsA2 epsB epsilon err est esta estb extra facta factb finalRemA finalRemB fracPartA fracPartB fx1 intPartA intPartB invx invy lna lnb lnza lnzb lores mant na nb numer oneOverXa p p2 pi2a pi2b pia pib r rHH rHL ra ratio ratioa ratiob rb recip recipa recipb remA remB result resultHigh resultLow resultb rln10a rln10b sinEpsA sinEpsB sina sinb sintA sintB sumA sumB t temp temp2 tempA tempB tempC tmp tmp1 tmp2 tmpA tmpB tmpHigh tmpLow x x2 xa xb xbadj xpa xpb xs y ya yaa yab yb z za zaa zab zb double[][] LN_HI_PREC_COEF LN_MANT LN_QUICK_COEF int EXP_FRAC_TABLE_LEN EXP_INT_TABLE_LEN EXP_INT_TABLE_MAX_INDEX LN_MANT_LEN SINE_TABLE_LEN a b bits e exp exp3 exponent finalK i idx intFrac intPart intVal k mantissa mostSignificantLostBit n quadrant scaledExponent shift sign splitFactor x long HEX_40000000 MASK_30BITS a ac ad b bc bd bits c d inbits mantissa mostSignificantLostBit prod2A prod2B prodA prodB shpi0 shpiA shpiB sign x xl y yi z  	projects/Math16/src/main/java/org/apache/commons/math3/util/FastMath.java	0.6324555320336759	3510	3510	2	replace	
24	[BUG] [BUGGY] [FE] AssertionError [CONTEXT] public static double max(final double a, final double b) { [BUGGY] [BUGGY] if (a > b) { return a; } if (a < b) { return b; }  if (a != b) { return Double.NaN; }  [CLASS] FastMath ExpIntTable ExpFracTable lnMant CodyWaite [METHOD] max [RETURN_TYPE] double  final double a final double b [VARIABLES] boolean RECOMPUTE_TABLES_AT_RUNTIME bita bitb bitsum cotanFlag leftPlane negate negative subnormal double[] CBRTTWO COSINE_TABLE_A COSINE_TABLE_B EIGHTHS EXP_FRAC_TABLE_A EXP_FRAC_TABLE_B EXP_INT_TABLE_A EXP_INT_TABLE_B SINE_TABLE_A SINE_TABLE_B TANGENT_TABLE_A TANGENT_TABLE_B hiPrec hiPrecOut lnCoef_i lnCoef_last lnm lns reduceResults result long[] PI_O_4_BITS RECIP_2PI double E F_11_12 F_13_14 F_15_16 F_1_11 F_1_13 F_1_15 F_1_17 F_1_2 F_1_3 F_1_4 F_1_5 F_1_7 F_1_9 F_3_4 F_5_6 F_7_8 F_9_10 LN_2_A LN_2_B PI TWO_POWER_52 a a2 aa ab absAsinh absAtanh b base baseA baseB c cD2pH cRH cTmpH cd cosEpsA cosEpsB cosa cosaa cosab cosb costA costB d d1High d1Low d2p d2pHH d2pHL d2pHigh d2pLow da daa dab db denom denomb denomr direction dx epsA epsA2 epsB epsilon err est esta estb extra facta factb finalRemA finalRemB fracPartA fracPartB fx1 intPartA intPartB invx invy lna lnb lnza lnzb lores mant na nb numer oneOverXa p p2 pi2a pi2b pia pib r rHH rHL ra ratio ratioa ratiob rb recip recipa recipb remA remB result resultHigh resultLow resultb rln10a rln10b sinEpsA sinEpsB sina sinb sintA sintB sumA sumB t temp temp2 tempA tempB tempC tmp tmp1 tmp2 tmpA tmpB tmpHigh tmpLow x x2 xa xb xbadj xpa xpb xs y ya yaa yab yb z za zaa zab zb double[][] LN_HI_PREC_COEF LN_MANT LN_QUICK_COEF int EXP_FRAC_TABLE_LEN EXP_INT_TABLE_LEN EXP_INT_TABLE_MAX_INDEX LN_MANT_LEN SINE_TABLE_LEN a b bits e exp exp3 exponent finalK i idx intFrac intPart intVal k mantissa mostSignificantLostBit n quadrant scaledExponent shift sign splitFactor x long HEX_40000000 MASK_30BITS a ac ad b bc bd bits c d inbits mantissa mostSignificantLostBit prod2A prod2B prodA prodB shpi0 shpiA shpiB sign x xl y yi z  	projects/Math16/src/main/java/org/apache/commons/math3/util/FastMath.java	0.6324555320336759	3510	3510	2	add	
25	[BUG] [BUGGY] if (a < b) { [FE] AssertionError [CONTEXT] public static double max(final double a, final double b) { if (a > b) { return a; } [BUGGY] if (a < b) { [BUGGY] return b; }  if (a != b) { return Double.NaN; }   long bits = Double.doubleToRawLongBits(a); if (bits == 0x8000000000000000L) { [CLASS] FastMath ExpIntTable ExpFracTable lnMant CodyWaite [METHOD] max [RETURN_TYPE] double  final double a final double b [VARIABLES] boolean RECOMPUTE_TABLES_AT_RUNTIME bita bitb bitsum cotanFlag leftPlane negate negative subnormal double[] CBRTTWO COSINE_TABLE_A COSINE_TABLE_B EIGHTHS EXP_FRAC_TABLE_A EXP_FRAC_TABLE_B EXP_INT_TABLE_A EXP_INT_TABLE_B SINE_TABLE_A SINE_TABLE_B TANGENT_TABLE_A TANGENT_TABLE_B hiPrec hiPrecOut lnCoef_i lnCoef_last lnm lns reduceResults result long[] PI_O_4_BITS RECIP_2PI double E F_11_12 F_13_14 F_15_16 F_1_11 F_1_13 F_1_15 F_1_17 F_1_2 F_1_3 F_1_4 F_1_5 F_1_7 F_1_9 F_3_4 F_5_6 F_7_8 F_9_10 LN_2_A LN_2_B PI TWO_POWER_52 a a2 aa ab absAsinh absAtanh b base baseA baseB c cD2pH cRH cTmpH cd cosEpsA cosEpsB cosa cosaa cosab cosb costA costB d d1High d1Low d2p d2pHH d2pHL d2pHigh d2pLow da daa dab db denom denomb denomr direction dx epsA epsA2 epsB epsilon err est esta estb extra facta factb finalRemA finalRemB fracPartA fracPartB fx1 intPartA intPartB invx invy lna lnb lnza lnzb lores mant na nb numer oneOverXa p p2 pi2a pi2b pia pib r rHH rHL ra ratio ratioa ratiob rb recip recipa recipb remA remB result resultHigh resultLow resultb rln10a rln10b sinEpsA sinEpsB sina sinb sintA sintB sumA sumB t temp temp2 tempA tempB tempC tmp tmp1 tmp2 tmpA tmpB tmpHigh tmpLow x x2 xa xb xbadj xpa xpb xs y ya yaa yab yb z za zaa zab zb double[][] LN_HI_PREC_COEF LN_MANT LN_QUICK_COEF int EXP_FRAC_TABLE_LEN EXP_INT_TABLE_LEN EXP_INT_TABLE_MAX_INDEX LN_MANT_LEN SINE_TABLE_LEN a b bits e exp exp3 exponent finalK i idx intFrac intPart intVal k mantissa mostSignificantLostBit n quadrant scaledExponent shift sign splitFactor x long HEX_40000000 MASK_30BITS a ac ad b bc bd bits c d inbits mantissa mostSignificantLostBit prod2A prod2B prodA prodB shpi0 shpiA shpiB sign x xl y yi z  	projects/Math16/src/main/java/org/apache/commons/math3/util/FastMath.java	0.6324555320336759	3513	3513	2	replace	
26	[BUG] [BUGGY] [FE] AssertionError [CONTEXT] public static double max(final double a, final double b) { if (a > b) { return a; } [BUGGY] [BUGGY] if (a < b) { return b; }  if (a != b) { return Double.NaN; }   long bits = Double.doubleToRawLongBits(a); if (bits == 0x8000000000000000L) { [CLASS] FastMath ExpIntTable ExpFracTable lnMant CodyWaite [METHOD] max [RETURN_TYPE] double  final double a final double b [VARIABLES] boolean RECOMPUTE_TABLES_AT_RUNTIME bita bitb bitsum cotanFlag leftPlane negate negative subnormal double[] CBRTTWO COSINE_TABLE_A COSINE_TABLE_B EIGHTHS EXP_FRAC_TABLE_A EXP_FRAC_TABLE_B EXP_INT_TABLE_A EXP_INT_TABLE_B SINE_TABLE_A SINE_TABLE_B TANGENT_TABLE_A TANGENT_TABLE_B hiPrec hiPrecOut lnCoef_i lnCoef_last lnm lns reduceResults result long[] PI_O_4_BITS RECIP_2PI double E F_11_12 F_13_14 F_15_16 F_1_11 F_1_13 F_1_15 F_1_17 F_1_2 F_1_3 F_1_4 F_1_5 F_1_7 F_1_9 F_3_4 F_5_6 F_7_8 F_9_10 LN_2_A LN_2_B PI TWO_POWER_52 a a2 aa ab absAsinh absAtanh b base baseA baseB c cD2pH cRH cTmpH cd cosEpsA cosEpsB cosa cosaa cosab cosb costA costB d d1High d1Low d2p d2pHH d2pHL d2pHigh d2pLow da daa dab db denom denomb denomr direction dx epsA epsA2 epsB epsilon err est esta estb extra facta factb finalRemA finalRemB fracPartA fracPartB fx1 intPartA intPartB invx invy lna lnb lnza lnzb lores mant na nb numer oneOverXa p p2 pi2a pi2b pia pib r rHH rHL ra ratio ratioa ratiob rb recip recipa recipb remA remB result resultHigh resultLow resultb rln10a rln10b sinEpsA sinEpsB sina sinb sintA sintB sumA sumB t temp temp2 tempA tempB tempC tmp tmp1 tmp2 tmpA tmpB tmpHigh tmpLow x x2 xa xb xbadj xpa xpb xs y ya yaa yab yb z za zaa zab zb double[][] LN_HI_PREC_COEF LN_MANT LN_QUICK_COEF int EXP_FRAC_TABLE_LEN EXP_INT_TABLE_LEN EXP_INT_TABLE_MAX_INDEX LN_MANT_LEN SINE_TABLE_LEN a b bits e exp exp3 exponent finalK i idx intFrac intPart intVal k mantissa mostSignificantLostBit n quadrant scaledExponent shift sign splitFactor x long HEX_40000000 MASK_30BITS a ac ad b bc bd bits c d inbits mantissa mostSignificantLostBit prod2A prod2B prodA prodB shpi0 shpiA shpiB sign x xl y yi z  	projects/Math16/src/main/java/org/apache/commons/math3/util/FastMath.java	0.6324555320336759	3513	3513	2	add	
27	[BUG] [BUGGY] return b; [FE] AssertionError [CONTEXT] public static double max(final double a, final double b) { if (a > b) { return a; } if (a < b) { [BUGGY] return b; [BUGGY] }  if (a != b) { return Double.NaN; }   long bits = Double.doubleToRawLongBits(a); if (bits == 0x8000000000000000L) { return b; [CLASS] FastMath ExpIntTable ExpFracTable lnMant CodyWaite [METHOD] max [RETURN_TYPE] double  final double a final double b [VARIABLES] boolean RECOMPUTE_TABLES_AT_RUNTIME bita bitb bitsum cotanFlag leftPlane negate negative subnormal double[] CBRTTWO COSINE_TABLE_A COSINE_TABLE_B EIGHTHS EXP_FRAC_TABLE_A EXP_FRAC_TABLE_B EXP_INT_TABLE_A EXP_INT_TABLE_B SINE_TABLE_A SINE_TABLE_B TANGENT_TABLE_A TANGENT_TABLE_B hiPrec hiPrecOut lnCoef_i lnCoef_last lnm lns reduceResults result long[] PI_O_4_BITS RECIP_2PI double E F_11_12 F_13_14 F_15_16 F_1_11 F_1_13 F_1_15 F_1_17 F_1_2 F_1_3 F_1_4 F_1_5 F_1_7 F_1_9 F_3_4 F_5_6 F_7_8 F_9_10 LN_2_A LN_2_B PI TWO_POWER_52 a a2 aa ab absAsinh absAtanh b base baseA baseB c cD2pH cRH cTmpH cd cosEpsA cosEpsB cosa cosaa cosab cosb costA costB d d1High d1Low d2p d2pHH d2pHL d2pHigh d2pLow da daa dab db denom denomb denomr direction dx epsA epsA2 epsB epsilon err est esta estb extra facta factb finalRemA finalRemB fracPartA fracPartB fx1 intPartA intPartB invx invy lna lnb lnza lnzb lores mant na nb numer oneOverXa p p2 pi2a pi2b pia pib r rHH rHL ra ratio ratioa ratiob rb recip recipa recipb remA remB result resultHigh resultLow resultb rln10a rln10b sinEpsA sinEpsB sina sinb sintA sintB sumA sumB t temp temp2 tempA tempB tempC tmp tmp1 tmp2 tmpA tmpB tmpHigh tmpLow x x2 xa xb xbadj xpa xpb xs y ya yaa yab yb z za zaa zab zb double[][] LN_HI_PREC_COEF LN_MANT LN_QUICK_COEF int EXP_FRAC_TABLE_LEN EXP_INT_TABLE_LEN EXP_INT_TABLE_MAX_INDEX LN_MANT_LEN SINE_TABLE_LEN a b bits e exp exp3 exponent finalK i idx intFrac intPart intVal k mantissa mostSignificantLostBit n quadrant scaledExponent shift sign splitFactor x long HEX_40000000 MASK_30BITS a ac ad b bc bd bits c d inbits mantissa mostSignificantLostBit prod2A prod2B prodA prodB shpi0 shpiA shpiB sign x xl y yi z  	projects/Math16/src/main/java/org/apache/commons/math3/util/FastMath.java	0.6324555320336759	3514	3514	2	replace	
28	[BUG] [BUGGY] [FE] AssertionError [CONTEXT] public static double max(final double a, final double b) { if (a > b) { return a; } if (a < b) { [BUGGY] [BUGGY] return b; }  if (a != b) { return Double.NaN; }   long bits = Double.doubleToRawLongBits(a); if (bits == 0x8000000000000000L) { return b; [CLASS] FastMath ExpIntTable ExpFracTable lnMant CodyWaite [METHOD] max [RETURN_TYPE] double  final double a final double b [VARIABLES] boolean RECOMPUTE_TABLES_AT_RUNTIME bita bitb bitsum cotanFlag leftPlane negate negative subnormal double[] CBRTTWO COSINE_TABLE_A COSINE_TABLE_B EIGHTHS EXP_FRAC_TABLE_A EXP_FRAC_TABLE_B EXP_INT_TABLE_A EXP_INT_TABLE_B SINE_TABLE_A SINE_TABLE_B TANGENT_TABLE_A TANGENT_TABLE_B hiPrec hiPrecOut lnCoef_i lnCoef_last lnm lns reduceResults result long[] PI_O_4_BITS RECIP_2PI double E F_11_12 F_13_14 F_15_16 F_1_11 F_1_13 F_1_15 F_1_17 F_1_2 F_1_3 F_1_4 F_1_5 F_1_7 F_1_9 F_3_4 F_5_6 F_7_8 F_9_10 LN_2_A LN_2_B PI TWO_POWER_52 a a2 aa ab absAsinh absAtanh b base baseA baseB c cD2pH cRH cTmpH cd cosEpsA cosEpsB cosa cosaa cosab cosb costA costB d d1High d1Low d2p d2pHH d2pHL d2pHigh d2pLow da daa dab db denom denomb denomr direction dx epsA epsA2 epsB epsilon err est esta estb extra facta factb finalRemA finalRemB fracPartA fracPartB fx1 intPartA intPartB invx invy lna lnb lnza lnzb lores mant na nb numer oneOverXa p p2 pi2a pi2b pia pib r rHH rHL ra ratio ratioa ratiob rb recip recipa recipb remA remB result resultHigh resultLow resultb rln10a rln10b sinEpsA sinEpsB sina sinb sintA sintB sumA sumB t temp temp2 tempA tempB tempC tmp tmp1 tmp2 tmpA tmpB tmpHigh tmpLow x x2 xa xb xbadj xpa xpb xs y ya yaa yab yb z za zaa zab zb double[][] LN_HI_PREC_COEF LN_MANT LN_QUICK_COEF int EXP_FRAC_TABLE_LEN EXP_INT_TABLE_LEN EXP_INT_TABLE_MAX_INDEX LN_MANT_LEN SINE_TABLE_LEN a b bits e exp exp3 exponent finalK i idx intFrac intPart intVal k mantissa mostSignificantLostBit n quadrant scaledExponent shift sign splitFactor x long HEX_40000000 MASK_30BITS a ac ad b bc bd bits c d inbits mantissa mostSignificantLostBit prod2A prod2B prodA prodB shpi0 shpiA shpiB sign x xl y yi z  	projects/Math16/src/main/java/org/apache/commons/math3/util/FastMath.java	0.6324555320336759	3514	3514	2	add	
29	[BUG] [BUGGY] if (a != b) { [FE] AssertionError [CONTEXT] public static double max(final double a, final double b) { if (a > b) { return a; } if (a < b) { return b; }  [BUGGY] if (a != b) { [BUGGY] return Double.NaN; }   long bits = Double.doubleToRawLongBits(a); if (bits == 0x8000000000000000L) { return b; } return a; } [CLASS] FastMath ExpIntTable ExpFracTable lnMant CodyWaite [METHOD] max [RETURN_TYPE] double  final double a final double b [VARIABLES] boolean RECOMPUTE_TABLES_AT_RUNTIME bita bitb bitsum cotanFlag leftPlane negate negative subnormal double[] CBRTTWO COSINE_TABLE_A COSINE_TABLE_B EIGHTHS EXP_FRAC_TABLE_A EXP_FRAC_TABLE_B EXP_INT_TABLE_A EXP_INT_TABLE_B SINE_TABLE_A SINE_TABLE_B TANGENT_TABLE_A TANGENT_TABLE_B hiPrec hiPrecOut lnCoef_i lnCoef_last lnm lns reduceResults result long[] PI_O_4_BITS RECIP_2PI double E F_11_12 F_13_14 F_15_16 F_1_11 F_1_13 F_1_15 F_1_17 F_1_2 F_1_3 F_1_4 F_1_5 F_1_7 F_1_9 F_3_4 F_5_6 F_7_8 F_9_10 LN_2_A LN_2_B PI TWO_POWER_52 a a2 aa ab absAsinh absAtanh b base baseA baseB c cD2pH cRH cTmpH cd cosEpsA cosEpsB cosa cosaa cosab cosb costA costB d d1High d1Low d2p d2pHH d2pHL d2pHigh d2pLow da daa dab db denom denomb denomr direction dx epsA epsA2 epsB epsilon err est esta estb extra facta factb finalRemA finalRemB fracPartA fracPartB fx1 intPartA intPartB invx invy lna lnb lnza lnzb lores mant na nb numer oneOverXa p p2 pi2a pi2b pia pib r rHH rHL ra ratio ratioa ratiob rb recip recipa recipb remA remB result resultHigh resultLow resultb rln10a rln10b sinEpsA sinEpsB sina sinb sintA sintB sumA sumB t temp temp2 tempA tempB tempC tmp tmp1 tmp2 tmpA tmpB tmpHigh tmpLow x x2 xa xb xbadj xpa xpb xs y ya yaa yab yb z za zaa zab zb double[][] LN_HI_PREC_COEF LN_MANT LN_QUICK_COEF int EXP_FRAC_TABLE_LEN EXP_INT_TABLE_LEN EXP_INT_TABLE_MAX_INDEX LN_MANT_LEN SINE_TABLE_LEN a b bits e exp exp3 exponent finalK i idx intFrac intPart intVal k mantissa mostSignificantLostBit n quadrant scaledExponent shift sign splitFactor x long HEX_40000000 MASK_30BITS a ac ad b bc bd bits c d inbits mantissa mostSignificantLostBit prod2A prod2B prodA prodB shpi0 shpiA shpiB sign x xl y yi z  	projects/Math16/src/main/java/org/apache/commons/math3/util/FastMath.java	0.6324555320336759	3517	3517	2	replace	
30	[BUG] [BUGGY] [FE] AssertionError [CONTEXT] public static double max(final double a, final double b) { if (a > b) { return a; } if (a < b) { return b; }  [BUGGY] [BUGGY] if (a != b) { return Double.NaN; }   long bits = Double.doubleToRawLongBits(a); if (bits == 0x8000000000000000L) { return b; } return a; } [CLASS] FastMath ExpIntTable ExpFracTable lnMant CodyWaite [METHOD] max [RETURN_TYPE] double  final double a final double b [VARIABLES] boolean RECOMPUTE_TABLES_AT_RUNTIME bita bitb bitsum cotanFlag leftPlane negate negative subnormal double[] CBRTTWO COSINE_TABLE_A COSINE_TABLE_B EIGHTHS EXP_FRAC_TABLE_A EXP_FRAC_TABLE_B EXP_INT_TABLE_A EXP_INT_TABLE_B SINE_TABLE_A SINE_TABLE_B TANGENT_TABLE_A TANGENT_TABLE_B hiPrec hiPrecOut lnCoef_i lnCoef_last lnm lns reduceResults result long[] PI_O_4_BITS RECIP_2PI double E F_11_12 F_13_14 F_15_16 F_1_11 F_1_13 F_1_15 F_1_17 F_1_2 F_1_3 F_1_4 F_1_5 F_1_7 F_1_9 F_3_4 F_5_6 F_7_8 F_9_10 LN_2_A LN_2_B PI TWO_POWER_52 a a2 aa ab absAsinh absAtanh b base baseA baseB c cD2pH cRH cTmpH cd cosEpsA cosEpsB cosa cosaa cosab cosb costA costB d d1High d1Low d2p d2pHH d2pHL d2pHigh d2pLow da daa dab db denom denomb denomr direction dx epsA epsA2 epsB epsilon err est esta estb extra facta factb finalRemA finalRemB fracPartA fracPartB fx1 intPartA intPartB invx invy lna lnb lnza lnzb lores mant na nb numer oneOverXa p p2 pi2a pi2b pia pib r rHH rHL ra ratio ratioa ratiob rb recip recipa recipb remA remB result resultHigh resultLow resultb rln10a rln10b sinEpsA sinEpsB sina sinb sintA sintB sumA sumB t temp temp2 tempA tempB tempC tmp tmp1 tmp2 tmpA tmpB tmpHigh tmpLow x x2 xa xb xbadj xpa xpb xs y ya yaa yab yb z za zaa zab zb double[][] LN_HI_PREC_COEF LN_MANT LN_QUICK_COEF int EXP_FRAC_TABLE_LEN EXP_INT_TABLE_LEN EXP_INT_TABLE_MAX_INDEX LN_MANT_LEN SINE_TABLE_LEN a b bits e exp exp3 exponent finalK i idx intFrac intPart intVal k mantissa mostSignificantLostBit n quadrant scaledExponent shift sign splitFactor x long HEX_40000000 MASK_30BITS a ac ad b bc bd bits c d inbits mantissa mostSignificantLostBit prod2A prod2B prodA prodB shpi0 shpiA shpiB sign x xl y yi z  	projects/Math16/src/main/java/org/apache/commons/math3/util/FastMath.java	0.6324555320336759	3517	3517	2	add	
31	[BUG] [BUGGY] return 0.5 * exp(x); [FE] AssertionError [CONTEXT] return x; }     if (x > 20) {  [BUGGY] return 0.5 * exp(x); [BUGGY] } if (x < -20) {  return 0.5 * exp(-x); } final double hiPrec[] = new double[2]; if (x < 0.0) { x = -x; } [CLASS] FastMath ExpIntTable ExpFracTable lnMant CodyWaite [METHOD] cosh [RETURN_TYPE] double  double x [VARIABLES] boolean RECOMPUTE_TABLES_AT_RUNTIME double[] CBRTTWO COSINE_TABLE_A COSINE_TABLE_B EIGHTHS EXP_FRAC_TABLE_A EXP_FRAC_TABLE_B EXP_INT_TABLE_A EXP_INT_TABLE_B SINE_TABLE_A SINE_TABLE_B TANGENT_TABLE_A TANGENT_TABLE_B hiPrec long[] PI_O_4_BITS RECIP_2PI double E F_11_12 F_13_14 F_15_16 F_1_11 F_1_13 F_1_15 F_1_17 F_1_2 F_1_3 F_1_4 F_1_5 F_1_7 F_1_9 F_3_4 F_5_6 F_7_8 F_9_10 LN_2_A LN_2_B PI TWO_POWER_52 a b d finalRemA finalRemB recip recipa recipb remA remB result temp x xa xb ya yaa yab yb double[][] LN_HI_PREC_COEF LN_MANT LN_QUICK_COEF int EXP_FRAC_TABLE_LEN EXP_INT_TABLE_LEN EXP_INT_TABLE_MAX_INDEX LN_MANT_LEN SINE_TABLE_LEN finalK k long HEX_40000000 MASK_30BITS xl  	projects/Math16/src/main/java/org/apache/commons/math3/util/FastMath.java	0.5	395	395	2	replace	
32	[BUG] [BUGGY] [FE] AssertionError [CONTEXT] return x; }     if (x > 20) {  [BUGGY] [BUGGY] return 0.5 * exp(x); } if (x < -20) {  return 0.5 * exp(-x); } final double hiPrec[] = new double[2]; if (x < 0.0) { x = -x; } [CLASS] FastMath ExpIntTable ExpFracTable lnMant CodyWaite [METHOD] cosh [RETURN_TYPE] double  double x [VARIABLES] boolean RECOMPUTE_TABLES_AT_RUNTIME double[] CBRTTWO COSINE_TABLE_A COSINE_TABLE_B EIGHTHS EXP_FRAC_TABLE_A EXP_FRAC_TABLE_B EXP_INT_TABLE_A EXP_INT_TABLE_B SINE_TABLE_A SINE_TABLE_B TANGENT_TABLE_A TANGENT_TABLE_B hiPrec long[] PI_O_4_BITS RECIP_2PI double E F_11_12 F_13_14 F_15_16 F_1_11 F_1_13 F_1_15 F_1_17 F_1_2 F_1_3 F_1_4 F_1_5 F_1_7 F_1_9 F_3_4 F_5_6 F_7_8 F_9_10 LN_2_A LN_2_B PI TWO_POWER_52 a b d finalRemA finalRemB recip recipa recipb remA remB result temp x xa xb ya yaa yab yb double[][] LN_HI_PREC_COEF LN_MANT LN_QUICK_COEF int EXP_FRAC_TABLE_LEN EXP_INT_TABLE_LEN EXP_INT_TABLE_MAX_INDEX LN_MANT_LEN SINE_TABLE_LEN finalK k long HEX_40000000 MASK_30BITS xl  	projects/Math16/src/main/java/org/apache/commons/math3/util/FastMath.java	0.5	395	395	2	add	
33	[BUG] [BUGGY] return 0.5 * exp(-x); [FE] AssertionError [CONTEXT]    if (x > 20) {  return 0.5 * exp(x); } if (x < -20) {  [BUGGY] return 0.5 * exp(-x); [BUGGY] } final double hiPrec[] = new double[2]; if (x < 0.0) { x = -x; } exp(x, 0.0, hiPrec); double ya = hiPrec[0] + hiPrec[1]; double yb = -(ya - hiPrec[0] - hiPrec[1]); [CLASS] FastMath ExpIntTable ExpFracTable lnMant CodyWaite [METHOD] cosh [RETURN_TYPE] double  double x [VARIABLES] boolean RECOMPUTE_TABLES_AT_RUNTIME double[] CBRTTWO COSINE_TABLE_A COSINE_TABLE_B EIGHTHS EXP_FRAC_TABLE_A EXP_FRAC_TABLE_B EXP_INT_TABLE_A EXP_INT_TABLE_B SINE_TABLE_A SINE_TABLE_B TANGENT_TABLE_A TANGENT_TABLE_B hiPrec long[] PI_O_4_BITS RECIP_2PI double E F_11_12 F_13_14 F_15_16 F_1_11 F_1_13 F_1_15 F_1_17 F_1_2 F_1_3 F_1_4 F_1_5 F_1_7 F_1_9 F_3_4 F_5_6 F_7_8 F_9_10 LN_2_A LN_2_B PI TWO_POWER_52 a b d finalRemA finalRemB recip recipa recipb remA remB result temp x xa xb ya yaa yab yb double[][] LN_HI_PREC_COEF LN_MANT LN_QUICK_COEF int EXP_FRAC_TABLE_LEN EXP_INT_TABLE_LEN EXP_INT_TABLE_MAX_INDEX LN_MANT_LEN SINE_TABLE_LEN finalK k long HEX_40000000 MASK_30BITS xl  	projects/Math16/src/main/java/org/apache/commons/math3/util/FastMath.java	0.5	399	399	2	replace	
34	[BUG] [BUGGY] [FE] AssertionError [CONTEXT]    if (x > 20) {  return 0.5 * exp(x); } if (x < -20) {  [BUGGY] [BUGGY] return 0.5 * exp(-x); } final double hiPrec[] = new double[2]; if (x < 0.0) { x = -x; } exp(x, 0.0, hiPrec); double ya = hiPrec[0] + hiPrec[1]; double yb = -(ya - hiPrec[0] - hiPrec[1]); [CLASS] FastMath ExpIntTable ExpFracTable lnMant CodyWaite [METHOD] cosh [RETURN_TYPE] double  double x [VARIABLES] boolean RECOMPUTE_TABLES_AT_RUNTIME double[] CBRTTWO COSINE_TABLE_A COSINE_TABLE_B EIGHTHS EXP_FRAC_TABLE_A EXP_FRAC_TABLE_B EXP_INT_TABLE_A EXP_INT_TABLE_B SINE_TABLE_A SINE_TABLE_B TANGENT_TABLE_A TANGENT_TABLE_B hiPrec long[] PI_O_4_BITS RECIP_2PI double E F_11_12 F_13_14 F_15_16 F_1_11 F_1_13 F_1_15 F_1_17 F_1_2 F_1_3 F_1_4 F_1_5 F_1_7 F_1_9 F_3_4 F_5_6 F_7_8 F_9_10 LN_2_A LN_2_B PI TWO_POWER_52 a b d finalRemA finalRemB recip recipa recipb remA remB result temp x xa xb ya yaa yab yb double[][] LN_HI_PREC_COEF LN_MANT LN_QUICK_COEF int EXP_FRAC_TABLE_LEN EXP_INT_TABLE_LEN EXP_INT_TABLE_MAX_INDEX LN_MANT_LEN SINE_TABLE_LEN finalK k long HEX_40000000 MASK_30BITS xl  	projects/Math16/src/main/java/org/apache/commons/math3/util/FastMath.java	0.5	399	399	2	add	
35	[BUG] [BUGGY] result = tempC*z + tempB + tempA; [FE] AssertionError [CONTEXT] if (extra != 0.0) { result = tempC*extra*z + tempC*extra + tempC*z + tempB + tempA; } else { [BUGGY] result = tempC*z + tempB + tempA; [BUGGY] } [CLASS] FastMath ExpIntTable ExpFracTable lnMant CodyWaite [METHOD] exp [RETURN_TYPE] double  double x double extra double[] hiPrec [VARIABLES] boolean RECOMPUTE_TABLES_AT_RUNTIME negate negative double[] CBRTTWO COSINE_TABLE_A COSINE_TABLE_B EIGHTHS EXP_FRAC_TABLE_A EXP_FRAC_TABLE_B EXP_INT_TABLE_A EXP_INT_TABLE_B SINE_TABLE_A SINE_TABLE_B TANGENT_TABLE_A TANGENT_TABLE_B hiPrec long[] PI_O_4_BITS RECIP_2PI double E F_11_12 F_13_14 F_15_16 F_1_11 F_1_13 F_1_15 F_1_17 F_1_2 F_1_3 F_1_4 F_1_5 F_1_7 F_1_9 F_3_4 F_5_6 F_7_8 F_9_10 LN_2_A LN_2_B PI TWO_POWER_52 a a2 absAsinh absAtanh b d da daa dab db denom denomb denomr epsilon extra finalRemA finalRemB fracPartA fracPartB intPartA intPartB na nb ra ratio ratioa ratiob rb recip recipa recipb remA remB result temp tempA tempB tempC x xa xb ya yaa yab yb z za zb double[][] LN_HI_PREC_COEF LN_MANT LN_QUICK_COEF int EXP_FRAC_TABLE_LEN EXP_INT_TABLE_LEN EXP_INT_TABLE_MAX_INDEX LN_MANT_LEN SINE_TABLE_LEN finalK intFrac intVal k long HEX_40000000 MASK_30BITS xl  	projects/Math16/src/main/java/org/apache/commons/math3/util/FastMath.java	0.4472135954999579	925	925	2	replace	
36	[BUG] [BUGGY] [FE] AssertionError [CONTEXT] if (extra != 0.0) { result = tempC*extra*z + tempC*extra + tempC*z + tempB + tempA; } else { [BUGGY] [BUGGY] result = tempC*z + tempB + tempA; } [CLASS] FastMath ExpIntTable ExpFracTable lnMant CodyWaite [METHOD] exp [RETURN_TYPE] double  double x double extra double[] hiPrec [VARIABLES] boolean RECOMPUTE_TABLES_AT_RUNTIME negate negative double[] CBRTTWO COSINE_TABLE_A COSINE_TABLE_B EIGHTHS EXP_FRAC_TABLE_A EXP_FRAC_TABLE_B EXP_INT_TABLE_A EXP_INT_TABLE_B SINE_TABLE_A SINE_TABLE_B TANGENT_TABLE_A TANGENT_TABLE_B hiPrec long[] PI_O_4_BITS RECIP_2PI double E F_11_12 F_13_14 F_15_16 F_1_11 F_1_13 F_1_15 F_1_17 F_1_2 F_1_3 F_1_4 F_1_5 F_1_7 F_1_9 F_3_4 F_5_6 F_7_8 F_9_10 LN_2_A LN_2_B PI TWO_POWER_52 a a2 absAsinh absAtanh b d da daa dab db denom denomb denomr epsilon extra finalRemA finalRemB fracPartA fracPartB intPartA intPartB na nb ra ratio ratioa ratiob rb recip recipa recipb remA remB result temp tempA tempB tempC x xa xb ya yaa yab yb z za zb double[][] LN_HI_PREC_COEF LN_MANT LN_QUICK_COEF int EXP_FRAC_TABLE_LEN EXP_INT_TABLE_LEN EXP_INT_TABLE_MAX_INDEX LN_MANT_LEN SINE_TABLE_LEN finalK intFrac intVal k long HEX_40000000 MASK_30BITS xl  	projects/Math16/src/main/java/org/apache/commons/math3/util/FastMath.java	0.4472135954999579	925	925	2	add	
37	[BUG] [BUGGY] if (x < 0.0) { [FE] AssertionError [CONTEXT] private static double exp(double x, double extra, double[] hiPrec) { double intPartA; double intPartB; int intVal;     [BUGGY] if (x < 0.0) { [BUGGY] intVal = (int) -x; if (intVal > 746) { if (hiPrec != null) { hiPrec[0] = 0.0; hiPrec[1] = 0.0; } return 0.0; }  [CLASS] FastMath ExpIntTable ExpFracTable lnMant CodyWaite [METHOD] exp [RETURN_TYPE] double  double x double extra double[] hiPrec [VARIABLES] boolean RECOMPUTE_TABLES_AT_RUNTIME negate negative double[] CBRTTWO COSINE_TABLE_A COSINE_TABLE_B EIGHTHS EXP_FRAC_TABLE_A EXP_FRAC_TABLE_B EXP_INT_TABLE_A EXP_INT_TABLE_B SINE_TABLE_A SINE_TABLE_B TANGENT_TABLE_A TANGENT_TABLE_B hiPrec long[] PI_O_4_BITS RECIP_2PI double E F_11_12 F_13_14 F_15_16 F_1_11 F_1_13 F_1_15 F_1_17 F_1_2 F_1_3 F_1_4 F_1_5 F_1_7 F_1_9 F_3_4 F_5_6 F_7_8 F_9_10 LN_2_A LN_2_B PI TWO_POWER_52 a a2 absAsinh absAtanh b d da daa dab db denom denomb denomr epsilon extra finalRemA finalRemB fracPartA fracPartB intPartA intPartB na nb ra ratio ratioa ratiob rb recip recipa recipb remA remB result temp tempA tempB tempC x xa xb ya yaa yab yb z za zb double[][] LN_HI_PREC_COEF LN_MANT LN_QUICK_COEF int EXP_FRAC_TABLE_LEN EXP_INT_TABLE_LEN EXP_INT_TABLE_MAX_INDEX LN_MANT_LEN SINE_TABLE_LEN finalK intFrac intVal k long HEX_40000000 MASK_30BITS xl  	projects/Math16/src/main/java/org/apache/commons/math3/util/FastMath.java	0.4082482904638631	829	829	2	replace	
38	[BUG] [BUGGY] [FE] AssertionError [CONTEXT] private static double exp(double x, double extra, double[] hiPrec) { double intPartA; double intPartB; int intVal;     [BUGGY] [BUGGY] if (x < 0.0) { intVal = (int) -x; if (intVal > 746) { if (hiPrec != null) { hiPrec[0] = 0.0; hiPrec[1] = 0.0; } return 0.0; }  [CLASS] FastMath ExpIntTable ExpFracTable lnMant CodyWaite [METHOD] exp [RETURN_TYPE] double  double x double extra double[] hiPrec [VARIABLES] boolean RECOMPUTE_TABLES_AT_RUNTIME negate negative double[] CBRTTWO COSINE_TABLE_A COSINE_TABLE_B EIGHTHS EXP_FRAC_TABLE_A EXP_FRAC_TABLE_B EXP_INT_TABLE_A EXP_INT_TABLE_B SINE_TABLE_A SINE_TABLE_B TANGENT_TABLE_A TANGENT_TABLE_B hiPrec long[] PI_O_4_BITS RECIP_2PI double E F_11_12 F_13_14 F_15_16 F_1_11 F_1_13 F_1_15 F_1_17 F_1_2 F_1_3 F_1_4 F_1_5 F_1_7 F_1_9 F_3_4 F_5_6 F_7_8 F_9_10 LN_2_A LN_2_B PI TWO_POWER_52 a a2 absAsinh absAtanh b d da daa dab db denom denomb denomr epsilon extra finalRemA finalRemB fracPartA fracPartB intPartA intPartB na nb ra ratio ratioa ratiob rb recip recipa recipb remA remB result temp tempA tempB tempC x xa xb ya yaa yab yb z za zb double[][] LN_HI_PREC_COEF LN_MANT LN_QUICK_COEF int EXP_FRAC_TABLE_LEN EXP_INT_TABLE_LEN EXP_INT_TABLE_MAX_INDEX LN_MANT_LEN SINE_TABLE_LEN finalK intFrac intVal k long HEX_40000000 MASK_30BITS xl  	projects/Math16/src/main/java/org/apache/commons/math3/util/FastMath.java	0.4082482904638631	829	829	2	add	
39	[BUG] [BUGGY] intVal = (int) x; [FE] AssertionError [CONTEXT] return result; } intVal++; intPartA = ExpIntTable.EXP_INT_TABLE_A[EXP_INT_TABLE_MAX_INDEX-intVal]; intPartB = ExpIntTable.EXP_INT_TABLE_B[EXP_INT_TABLE_MAX_INDEX-intVal]; intVal = -intVal; } else { [BUGGY] intVal = (int) x; [BUGGY]  if (intVal > 709) { if (hiPrec != null) { hiPrec[0] = Double.POSITIVE_INFINITY; hiPrec[1] = 0.0; } return Double.POSITIVE_INFINITY; } intPartA = ExpIntTable.EXP_INT_TABLE_A[EXP_INT_TABLE_MAX_INDEX+intVal]; [CLASS] FastMath ExpIntTable ExpFracTable lnMant CodyWaite [METHOD] exp [RETURN_TYPE] double  double x double extra double[] hiPrec [VARIABLES] boolean RECOMPUTE_TABLES_AT_RUNTIME negate negative double[] CBRTTWO COSINE_TABLE_A COSINE_TABLE_B EIGHTHS EXP_FRAC_TABLE_A EXP_FRAC_TABLE_B EXP_INT_TABLE_A EXP_INT_TABLE_B SINE_TABLE_A SINE_TABLE_B TANGENT_TABLE_A TANGENT_TABLE_B hiPrec long[] PI_O_4_BITS RECIP_2PI double E F_11_12 F_13_14 F_15_16 F_1_11 F_1_13 F_1_15 F_1_17 F_1_2 F_1_3 F_1_4 F_1_5 F_1_7 F_1_9 F_3_4 F_5_6 F_7_8 F_9_10 LN_2_A LN_2_B PI TWO_POWER_52 a a2 absAsinh absAtanh b d da daa dab db denom denomb denomr epsilon extra finalRemA finalRemB fracPartA fracPartB intPartA intPartB na nb ra ratio ratioa ratiob rb recip recipa recipb remA remB result temp tempA tempB tempC x xa xb ya yaa yab yb z za zb double[][] LN_HI_PREC_COEF LN_MANT LN_QUICK_COEF int EXP_FRAC_TABLE_LEN EXP_INT_TABLE_LEN EXP_INT_TABLE_MAX_INDEX LN_MANT_LEN SINE_TABLE_LEN finalK intFrac intVal k long HEX_40000000 MASK_30BITS xl  	projects/Math16/src/main/java/org/apache/commons/math3/util/FastMath.java	0.4082482904638631	867	867	2	replace	
40	[BUG] [BUGGY] [FE] AssertionError [CONTEXT] return result; } intVal++; intPartA = ExpIntTable.EXP_INT_TABLE_A[EXP_INT_TABLE_MAX_INDEX-intVal]; intPartB = ExpIntTable.EXP_INT_TABLE_B[EXP_INT_TABLE_MAX_INDEX-intVal]; intVal = -intVal; } else { [BUGGY] [BUGGY] intVal = (int) x; if (intVal > 709) { if (hiPrec != null) { hiPrec[0] = Double.POSITIVE_INFINITY; hiPrec[1] = 0.0; } return Double.POSITIVE_INFINITY; } intPartA = ExpIntTable.EXP_INT_TABLE_A[EXP_INT_TABLE_MAX_INDEX+intVal]; [CLASS] FastMath ExpIntTable ExpFracTable lnMant CodyWaite [METHOD] exp [RETURN_TYPE] double  double x double extra double[] hiPrec [VARIABLES] boolean RECOMPUTE_TABLES_AT_RUNTIME negate negative double[] CBRTTWO COSINE_TABLE_A COSINE_TABLE_B EIGHTHS EXP_FRAC_TABLE_A EXP_FRAC_TABLE_B EXP_INT_TABLE_A EXP_INT_TABLE_B SINE_TABLE_A SINE_TABLE_B TANGENT_TABLE_A TANGENT_TABLE_B hiPrec long[] PI_O_4_BITS RECIP_2PI double E F_11_12 F_13_14 F_15_16 F_1_11 F_1_13 F_1_15 F_1_17 F_1_2 F_1_3 F_1_4 F_1_5 F_1_7 F_1_9 F_3_4 F_5_6 F_7_8 F_9_10 LN_2_A LN_2_B PI TWO_POWER_52 a a2 absAsinh absAtanh b d da daa dab db denom denomb denomr epsilon extra finalRemA finalRemB fracPartA fracPartB intPartA intPartB na nb ra ratio ratioa ratiob rb recip recipa recipb remA remB result temp tempA tempB tempC x xa xb ya yaa yab yb z za zb double[][] LN_HI_PREC_COEF LN_MANT LN_QUICK_COEF int EXP_FRAC_TABLE_LEN EXP_INT_TABLE_LEN EXP_INT_TABLE_MAX_INDEX LN_MANT_LEN SINE_TABLE_LEN finalK intFrac intVal k long HEX_40000000 MASK_30BITS xl  	projects/Math16/src/main/java/org/apache/commons/math3/util/FastMath.java	0.4082482904638631	867	867	2	add	
41	[BUG] [BUGGY] if (intVal > 709) { [FE] AssertionError [CONTEXT] intVal++; intPartA = ExpIntTable.EXP_INT_TABLE_A[EXP_INT_TABLE_MAX_INDEX-intVal]; intPartB = ExpIntTable.EXP_INT_TABLE_B[EXP_INT_TABLE_MAX_INDEX-intVal]; intVal = -intVal; } else { intVal = (int) x; [BUGGY] if (intVal > 709) { [BUGGY] if (hiPrec != null) { hiPrec[0] = Double.POSITIVE_INFINITY; hiPrec[1] = 0.0; } return Double.POSITIVE_INFINITY; } intPartA = ExpIntTable.EXP_INT_TABLE_A[EXP_INT_TABLE_MAX_INDEX+intVal]; intPartB = ExpIntTable.EXP_INT_TABLE_B[EXP_INT_TABLE_MAX_INDEX+intVal]; } [CLASS] FastMath ExpIntTable ExpFracTable lnMant CodyWaite [METHOD] exp [RETURN_TYPE] double  double x double extra double[] hiPrec [VARIABLES] boolean RECOMPUTE_TABLES_AT_RUNTIME negate negative double[] CBRTTWO COSINE_TABLE_A COSINE_TABLE_B EIGHTHS EXP_FRAC_TABLE_A EXP_FRAC_TABLE_B EXP_INT_TABLE_A EXP_INT_TABLE_B SINE_TABLE_A SINE_TABLE_B TANGENT_TABLE_A TANGENT_TABLE_B hiPrec long[] PI_O_4_BITS RECIP_2PI double E F_11_12 F_13_14 F_15_16 F_1_11 F_1_13 F_1_15 F_1_17 F_1_2 F_1_3 F_1_4 F_1_5 F_1_7 F_1_9 F_3_4 F_5_6 F_7_8 F_9_10 LN_2_A LN_2_B PI TWO_POWER_52 a a2 absAsinh absAtanh b d da daa dab db denom denomb denomr epsilon extra finalRemA finalRemB fracPartA fracPartB intPartA intPartB na nb ra ratio ratioa ratiob rb recip recipa recipb remA remB result temp tempA tempB tempC x xa xb ya yaa yab yb z za zb double[][] LN_HI_PREC_COEF LN_MANT LN_QUICK_COEF int EXP_FRAC_TABLE_LEN EXP_INT_TABLE_LEN EXP_INT_TABLE_MAX_INDEX LN_MANT_LEN SINE_TABLE_LEN finalK intFrac intVal k long HEX_40000000 MASK_30BITS xl  	projects/Math16/src/main/java/org/apache/commons/math3/util/FastMath.java	0.4082482904638631	869	869	2	replace	
42	[BUG] [BUGGY] [FE] AssertionError [CONTEXT] intVal++; intPartA = ExpIntTable.EXP_INT_TABLE_A[EXP_INT_TABLE_MAX_INDEX-intVal]; intPartB = ExpIntTable.EXP_INT_TABLE_B[EXP_INT_TABLE_MAX_INDEX-intVal]; intVal = -intVal; } else { intVal = (int) x; [BUGGY] [BUGGY] if (intVal > 709) { if (hiPrec != null) { hiPrec[0] = Double.POSITIVE_INFINITY; hiPrec[1] = 0.0; } return Double.POSITIVE_INFINITY; } intPartA = ExpIntTable.EXP_INT_TABLE_A[EXP_INT_TABLE_MAX_INDEX+intVal]; intPartB = ExpIntTable.EXP_INT_TABLE_B[EXP_INT_TABLE_MAX_INDEX+intVal]; } [CLASS] FastMath ExpIntTable ExpFracTable lnMant CodyWaite [METHOD] exp [RETURN_TYPE] double  double x double extra double[] hiPrec [VARIABLES] boolean RECOMPUTE_TABLES_AT_RUNTIME negate negative double[] CBRTTWO COSINE_TABLE_A COSINE_TABLE_B EIGHTHS EXP_FRAC_TABLE_A EXP_FRAC_TABLE_B EXP_INT_TABLE_A EXP_INT_TABLE_B SINE_TABLE_A SINE_TABLE_B TANGENT_TABLE_A TANGENT_TABLE_B hiPrec long[] PI_O_4_BITS RECIP_2PI double E F_11_12 F_13_14 F_15_16 F_1_11 F_1_13 F_1_15 F_1_17 F_1_2 F_1_3 F_1_4 F_1_5 F_1_7 F_1_9 F_3_4 F_5_6 F_7_8 F_9_10 LN_2_A LN_2_B PI TWO_POWER_52 a a2 absAsinh absAtanh b d da daa dab db denom denomb denomr epsilon extra finalRemA finalRemB fracPartA fracPartB intPartA intPartB na nb ra ratio ratioa ratiob rb recip recipa recipb remA remB result temp tempA tempB tempC x xa xb ya yaa yab yb z za zb double[][] LN_HI_PREC_COEF LN_MANT LN_QUICK_COEF int EXP_FRAC_TABLE_LEN EXP_INT_TABLE_LEN EXP_INT_TABLE_MAX_INDEX LN_MANT_LEN SINE_TABLE_LEN finalK intFrac intVal k long HEX_40000000 MASK_30BITS xl  	projects/Math16/src/main/java/org/apache/commons/math3/util/FastMath.java	0.4082482904638631	869	869	2	add	
43	[BUG] [BUGGY] intPartA = ExpIntTable.EXP_INT_TABLE_A[EXP_INT_TABLE_MAX_INDEX+intVal]; [FE] AssertionError [CONTEXT] intVal = (int) x; if (intVal > 709) { if (hiPrec != null) { hiPrec[0] = Double.POSITIVE_INFINITY; hiPrec[1] = 0.0; } return Double.POSITIVE_INFINITY; } [BUGGY] intPartA = ExpIntTable.EXP_INT_TABLE_A[EXP_INT_TABLE_MAX_INDEX+intVal]; [BUGGY] intPartB = ExpIntTable.EXP_INT_TABLE_B[EXP_INT_TABLE_MAX_INDEX+intVal]; } [CLASS] FastMath ExpIntTable ExpFracTable lnMant CodyWaite [METHOD] exp [RETURN_TYPE] double  double x double extra double[] hiPrec [VARIABLES] boolean RECOMPUTE_TABLES_AT_RUNTIME negate negative double[] CBRTTWO COSINE_TABLE_A COSINE_TABLE_B EIGHTHS EXP_FRAC_TABLE_A EXP_FRAC_TABLE_B EXP_INT_TABLE_A EXP_INT_TABLE_B SINE_TABLE_A SINE_TABLE_B TANGENT_TABLE_A TANGENT_TABLE_B hiPrec long[] PI_O_4_BITS RECIP_2PI double E F_11_12 F_13_14 F_15_16 F_1_11 F_1_13 F_1_15 F_1_17 F_1_2 F_1_3 F_1_4 F_1_5 F_1_7 F_1_9 F_3_4 F_5_6 F_7_8 F_9_10 LN_2_A LN_2_B PI TWO_POWER_52 a a2 absAsinh absAtanh b d da daa dab db denom denomb denomr epsilon extra finalRemA finalRemB fracPartA fracPartB intPartA intPartB na nb ra ratio ratioa ratiob rb recip recipa recipb remA remB result temp tempA tempB tempC x xa xb ya yaa yab yb z za zb double[][] LN_HI_PREC_COEF LN_MANT LN_QUICK_COEF int EXP_FRAC_TABLE_LEN EXP_INT_TABLE_LEN EXP_INT_TABLE_MAX_INDEX LN_MANT_LEN SINE_TABLE_LEN finalK intFrac intVal k long HEX_40000000 MASK_30BITS xl  	projects/Math16/src/main/java/org/apache/commons/math3/util/FastMath.java	0.4082482904638631	877	877	2	replace	
44	[BUG] [BUGGY] [FE] AssertionError [CONTEXT] intVal = (int) x; if (intVal > 709) { if (hiPrec != null) { hiPrec[0] = Double.POSITIVE_INFINITY; hiPrec[1] = 0.0; } return Double.POSITIVE_INFINITY; } [BUGGY] [BUGGY] intPartA = ExpIntTable.EXP_INT_TABLE_A[EXP_INT_TABLE_MAX_INDEX+intVal]; intPartB = ExpIntTable.EXP_INT_TABLE_B[EXP_INT_TABLE_MAX_INDEX+intVal]; } [CLASS] FastMath ExpIntTable ExpFracTable lnMant CodyWaite [METHOD] exp [RETURN_TYPE] double  double x double extra double[] hiPrec [VARIABLES] boolean RECOMPUTE_TABLES_AT_RUNTIME negate negative double[] CBRTTWO COSINE_TABLE_A COSINE_TABLE_B EIGHTHS EXP_FRAC_TABLE_A EXP_FRAC_TABLE_B EXP_INT_TABLE_A EXP_INT_TABLE_B SINE_TABLE_A SINE_TABLE_B TANGENT_TABLE_A TANGENT_TABLE_B hiPrec long[] PI_O_4_BITS RECIP_2PI double E F_11_12 F_13_14 F_15_16 F_1_11 F_1_13 F_1_15 F_1_17 F_1_2 F_1_3 F_1_4 F_1_5 F_1_7 F_1_9 F_3_4 F_5_6 F_7_8 F_9_10 LN_2_A LN_2_B PI TWO_POWER_52 a a2 absAsinh absAtanh b d da daa dab db denom denomb denomr epsilon extra finalRemA finalRemB fracPartA fracPartB intPartA intPartB na nb ra ratio ratioa ratiob rb recip recipa recipb remA remB result temp tempA tempB tempC x xa xb ya yaa yab yb z za zb double[][] LN_HI_PREC_COEF LN_MANT LN_QUICK_COEF int EXP_FRAC_TABLE_LEN EXP_INT_TABLE_LEN EXP_INT_TABLE_MAX_INDEX LN_MANT_LEN SINE_TABLE_LEN finalK intFrac intVal k long HEX_40000000 MASK_30BITS xl  	projects/Math16/src/main/java/org/apache/commons/math3/util/FastMath.java	0.4082482904638631	877	877	2	add	
45	[BUG] [BUGGY] intPartB = ExpIntTable.EXP_INT_TABLE_B[EXP_INT_TABLE_MAX_INDEX+intVal]; [FE] AssertionError [CONTEXT] if (intVal > 709) { if (hiPrec != null) { hiPrec[0] = Double.POSITIVE_INFINITY; hiPrec[1] = 0.0; } return Double.POSITIVE_INFINITY; } intPartA = ExpIntTable.EXP_INT_TABLE_A[EXP_INT_TABLE_MAX_INDEX+intVal]; [BUGGY] intPartB = ExpIntTable.EXP_INT_TABLE_B[EXP_INT_TABLE_MAX_INDEX+intVal]; [BUGGY] } [CLASS] FastMath ExpIntTable ExpFracTable lnMant CodyWaite [METHOD] exp [RETURN_TYPE] double  double x double extra double[] hiPrec [VARIABLES] boolean RECOMPUTE_TABLES_AT_RUNTIME negate negative double[] CBRTTWO COSINE_TABLE_A COSINE_TABLE_B EIGHTHS EXP_FRAC_TABLE_A EXP_FRAC_TABLE_B EXP_INT_TABLE_A EXP_INT_TABLE_B SINE_TABLE_A SINE_TABLE_B TANGENT_TABLE_A TANGENT_TABLE_B hiPrec long[] PI_O_4_BITS RECIP_2PI double E F_11_12 F_13_14 F_15_16 F_1_11 F_1_13 F_1_15 F_1_17 F_1_2 F_1_3 F_1_4 F_1_5 F_1_7 F_1_9 F_3_4 F_5_6 F_7_8 F_9_10 LN_2_A LN_2_B PI TWO_POWER_52 a a2 absAsinh absAtanh b d da daa dab db denom denomb denomr epsilon extra finalRemA finalRemB fracPartA fracPartB intPartA intPartB na nb ra ratio ratioa ratiob rb recip recipa recipb remA remB result temp tempA tempB tempC x xa xb ya yaa yab yb z za zb double[][] LN_HI_PREC_COEF LN_MANT LN_QUICK_COEF int EXP_FRAC_TABLE_LEN EXP_INT_TABLE_LEN EXP_INT_TABLE_MAX_INDEX LN_MANT_LEN SINE_TABLE_LEN finalK intFrac intVal k long HEX_40000000 MASK_30BITS xl  	projects/Math16/src/main/java/org/apache/commons/math3/util/FastMath.java	0.4082482904638631	878	878	2	replace	
46	[BUG] [BUGGY] [FE] AssertionError [CONTEXT] if (intVal > 709) { if (hiPrec != null) { hiPrec[0] = Double.POSITIVE_INFINITY; hiPrec[1] = 0.0; } return Double.POSITIVE_INFINITY; } intPartA = ExpIntTable.EXP_INT_TABLE_A[EXP_INT_TABLE_MAX_INDEX+intVal]; [BUGGY] [BUGGY] intPartB = ExpIntTable.EXP_INT_TABLE_B[EXP_INT_TABLE_MAX_INDEX+intVal]; } [CLASS] FastMath ExpIntTable ExpFracTable lnMant CodyWaite [METHOD] exp [RETURN_TYPE] double  double x double extra double[] hiPrec [VARIABLES] boolean RECOMPUTE_TABLES_AT_RUNTIME negate negative double[] CBRTTWO COSINE_TABLE_A COSINE_TABLE_B EIGHTHS EXP_FRAC_TABLE_A EXP_FRAC_TABLE_B EXP_INT_TABLE_A EXP_INT_TABLE_B SINE_TABLE_A SINE_TABLE_B TANGENT_TABLE_A TANGENT_TABLE_B hiPrec long[] PI_O_4_BITS RECIP_2PI double E F_11_12 F_13_14 F_15_16 F_1_11 F_1_13 F_1_15 F_1_17 F_1_2 F_1_3 F_1_4 F_1_5 F_1_7 F_1_9 F_3_4 F_5_6 F_7_8 F_9_10 LN_2_A LN_2_B PI TWO_POWER_52 a a2 absAsinh absAtanh b d da daa dab db denom denomb denomr epsilon extra finalRemA finalRemB fracPartA fracPartB intPartA intPartB na nb ra ratio ratioa ratiob rb recip recipa recipb remA remB result temp tempA tempB tempC x xa xb ya yaa yab yb z za zb double[][] LN_HI_PREC_COEF LN_MANT LN_QUICK_COEF int EXP_FRAC_TABLE_LEN EXP_INT_TABLE_LEN EXP_INT_TABLE_MAX_INDEX LN_MANT_LEN SINE_TABLE_LEN finalK intFrac intVal k long HEX_40000000 MASK_30BITS xl  	projects/Math16/src/main/java/org/apache/commons/math3/util/FastMath.java	0.4082482904638631	878	878	2	add	
47	[BUG] [BUGGY] final int intFrac = (int) ((x - intVal) * 1024.0); [FE] AssertionError [CONTEXT] } intPartA = ExpIntTable.EXP_INT_TABLE_A[EXP_INT_TABLE_MAX_INDEX+intVal]; intPartB = ExpIntTable.EXP_INT_TABLE_B[EXP_INT_TABLE_MAX_INDEX+intVal]; }     [BUGGY] final int intFrac = (int) ((x - intVal) * 1024.0); [BUGGY] final double fracPartA = ExpFracTable.EXP_FRAC_TABLE_A[intFrac]; final double fracPartB = ExpFracTable.EXP_FRAC_TABLE_B[intFrac];     final double epsilon = x - (intVal + intFrac / 1024.0);   [CLASS] FastMath ExpIntTable ExpFracTable lnMant CodyWaite [METHOD] exp [RETURN_TYPE] double  double x double extra double[] hiPrec [VARIABLES] boolean RECOMPUTE_TABLES_AT_RUNTIME negate negative double[] CBRTTWO COSINE_TABLE_A COSINE_TABLE_B EIGHTHS EXP_FRAC_TABLE_A EXP_FRAC_TABLE_B EXP_INT_TABLE_A EXP_INT_TABLE_B SINE_TABLE_A SINE_TABLE_B TANGENT_TABLE_A TANGENT_TABLE_B hiPrec long[] PI_O_4_BITS RECIP_2PI double E F_11_12 F_13_14 F_15_16 F_1_11 F_1_13 F_1_15 F_1_17 F_1_2 F_1_3 F_1_4 F_1_5 F_1_7 F_1_9 F_3_4 F_5_6 F_7_8 F_9_10 LN_2_A LN_2_B PI TWO_POWER_52 a a2 absAsinh absAtanh b d da daa dab db denom denomb denomr epsilon extra finalRemA finalRemB fracPartA fracPartB intPartA intPartB na nb ra ratio ratioa ratiob rb recip recipa recipb remA remB result temp tempA tempB tempC x xa xb ya yaa yab yb z za zb double[][] LN_HI_PREC_COEF LN_MANT LN_QUICK_COEF int EXP_FRAC_TABLE_LEN EXP_INT_TABLE_LEN EXP_INT_TABLE_MAX_INDEX LN_MANT_LEN SINE_TABLE_LEN finalK intFrac intVal k long HEX_40000000 MASK_30BITS xl  	projects/Math16/src/main/java/org/apache/commons/math3/util/FastMath.java	0.4082482904638631	885	885	2	replace	
48	[BUG] [BUGGY] [FE] AssertionError [CONTEXT] } intPartA = ExpIntTable.EXP_INT_TABLE_A[EXP_INT_TABLE_MAX_INDEX+intVal]; intPartB = ExpIntTable.EXP_INT_TABLE_B[EXP_INT_TABLE_MAX_INDEX+intVal]; }     [BUGGY] [BUGGY] final int intFrac = (int) ((x - intVal) * 1024.0); final double fracPartA = ExpFracTable.EXP_FRAC_TABLE_A[intFrac]; final double fracPartB = ExpFracTable.EXP_FRAC_TABLE_B[intFrac];     final double epsilon = x - (intVal + intFrac / 1024.0);   [CLASS] FastMath ExpIntTable ExpFracTable lnMant CodyWaite [METHOD] exp [RETURN_TYPE] double  double x double extra double[] hiPrec [VARIABLES] boolean RECOMPUTE_TABLES_AT_RUNTIME negate negative double[] CBRTTWO COSINE_TABLE_A COSINE_TABLE_B EIGHTHS EXP_FRAC_TABLE_A EXP_FRAC_TABLE_B EXP_INT_TABLE_A EXP_INT_TABLE_B SINE_TABLE_A SINE_TABLE_B TANGENT_TABLE_A TANGENT_TABLE_B hiPrec long[] PI_O_4_BITS RECIP_2PI double E F_11_12 F_13_14 F_15_16 F_1_11 F_1_13 F_1_15 F_1_17 F_1_2 F_1_3 F_1_4 F_1_5 F_1_7 F_1_9 F_3_4 F_5_6 F_7_8 F_9_10 LN_2_A LN_2_B PI TWO_POWER_52 a a2 absAsinh absAtanh b d da daa dab db denom denomb denomr epsilon extra finalRemA finalRemB fracPartA fracPartB intPartA intPartB na nb ra ratio ratioa ratiob rb recip recipa recipb remA remB result temp tempA tempB tempC x xa xb ya yaa yab yb z za zb double[][] LN_HI_PREC_COEF LN_MANT LN_QUICK_COEF int EXP_FRAC_TABLE_LEN EXP_INT_TABLE_LEN EXP_INT_TABLE_MAX_INDEX LN_MANT_LEN SINE_TABLE_LEN finalK intFrac intVal k long HEX_40000000 MASK_30BITS xl  	projects/Math16/src/main/java/org/apache/commons/math3/util/FastMath.java	0.4082482904638631	885	885	2	add	
49	[BUG] [BUGGY] final double fracPartA = ExpFracTable.EXP_FRAC_TABLE_A[intFrac]; [FE] AssertionError [CONTEXT] intPartA = ExpIntTable.EXP_INT_TABLE_A[EXP_INT_TABLE_MAX_INDEX+intVal]; intPartB = ExpIntTable.EXP_INT_TABLE_B[EXP_INT_TABLE_MAX_INDEX+intVal]; }     final int intFrac = (int) ((x - intVal) * 1024.0); [BUGGY] final double fracPartA = ExpFracTable.EXP_FRAC_TABLE_A[intFrac]; [BUGGY] final double fracPartB = ExpFracTable.EXP_FRAC_TABLE_B[intFrac];     final double epsilon = x - (intVal + intFrac / 1024.0);  full double precision (52 bits).Since z < 2^-10, we will have [CLASS] FastMath ExpIntTable ExpFracTable lnMant CodyWaite [METHOD] exp [RETURN_TYPE] double  double x double extra double[] hiPrec [VARIABLES] boolean RECOMPUTE_TABLES_AT_RUNTIME negate negative double[] CBRTTWO COSINE_TABLE_A COSINE_TABLE_B EIGHTHS EXP_FRAC_TABLE_A EXP_FRAC_TABLE_B EXP_INT_TABLE_A EXP_INT_TABLE_B SINE_TABLE_A SINE_TABLE_B TANGENT_TABLE_A TANGENT_TABLE_B hiPrec long[] PI_O_4_BITS RECIP_2PI double E F_11_12 F_13_14 F_15_16 F_1_11 F_1_13 F_1_15 F_1_17 F_1_2 F_1_3 F_1_4 F_1_5 F_1_7 F_1_9 F_3_4 F_5_6 F_7_8 F_9_10 LN_2_A LN_2_B PI TWO_POWER_52 a a2 absAsinh absAtanh b d da daa dab db denom denomb denomr epsilon extra finalRemA finalRemB fracPartA fracPartB intPartA intPartB na nb ra ratio ratioa ratiob rb recip recipa recipb remA remB result temp tempA tempB tempC x xa xb ya yaa yab yb z za zb double[][] LN_HI_PREC_COEF LN_MANT LN_QUICK_COEF int EXP_FRAC_TABLE_LEN EXP_INT_TABLE_LEN EXP_INT_TABLE_MAX_INDEX LN_MANT_LEN SINE_TABLE_LEN finalK intFrac intVal k long HEX_40000000 MASK_30BITS xl  	projects/Math16/src/main/java/org/apache/commons/math3/util/FastMath.java	0.4082482904638631	886	886	2	replace	
50	[BUG] [BUGGY] [FE] AssertionError [CONTEXT] intPartA = ExpIntTable.EXP_INT_TABLE_A[EXP_INT_TABLE_MAX_INDEX+intVal]; intPartB = ExpIntTable.EXP_INT_TABLE_B[EXP_INT_TABLE_MAX_INDEX+intVal]; }     final int intFrac = (int) ((x - intVal) * 1024.0); [BUGGY] [BUGGY] final double fracPartA = ExpFracTable.EXP_FRAC_TABLE_A[intFrac]; final double fracPartB = ExpFracTable.EXP_FRAC_TABLE_B[intFrac];     final double epsilon = x - (intVal + intFrac / 1024.0);  full double precision (52 bits).Since z < 2^-10, we will have [CLASS] FastMath ExpIntTable ExpFracTable lnMant CodyWaite [METHOD] exp [RETURN_TYPE] double  double x double extra double[] hiPrec [VARIABLES] boolean RECOMPUTE_TABLES_AT_RUNTIME negate negative double[] CBRTTWO COSINE_TABLE_A COSINE_TABLE_B EIGHTHS EXP_FRAC_TABLE_A EXP_FRAC_TABLE_B EXP_INT_TABLE_A EXP_INT_TABLE_B SINE_TABLE_A SINE_TABLE_B TANGENT_TABLE_A TANGENT_TABLE_B hiPrec long[] PI_O_4_BITS RECIP_2PI double E F_11_12 F_13_14 F_15_16 F_1_11 F_1_13 F_1_15 F_1_17 F_1_2 F_1_3 F_1_4 F_1_5 F_1_7 F_1_9 F_3_4 F_5_6 F_7_8 F_9_10 LN_2_A LN_2_B PI TWO_POWER_52 a a2 absAsinh absAtanh b d da daa dab db denom denomb denomr epsilon extra finalRemA finalRemB fracPartA fracPartB intPartA intPartB na nb ra ratio ratioa ratiob rb recip recipa recipb remA remB result temp tempA tempB tempC x xa xb ya yaa yab yb z za zb double[][] LN_HI_PREC_COEF LN_MANT LN_QUICK_COEF int EXP_FRAC_TABLE_LEN EXP_INT_TABLE_LEN EXP_INT_TABLE_MAX_INDEX LN_MANT_LEN SINE_TABLE_LEN finalK intFrac intVal k long HEX_40000000 MASK_30BITS xl  	projects/Math16/src/main/java/org/apache/commons/math3/util/FastMath.java	0.4082482904638631	886	886	2	add	
51	[BUG] [BUGGY] final double fracPartB = ExpFracTable.EXP_FRAC_TABLE_B[intFrac]; [FE] AssertionError [CONTEXT] intPartA = ExpIntTable.EXP_INT_TABLE_A[EXP_INT_TABLE_MAX_INDEX+intVal]; intPartB = ExpIntTable.EXP_INT_TABLE_B[EXP_INT_TABLE_MAX_INDEX+intVal]; }     final int intFrac = (int) ((x - intVal) * 1024.0); final double fracPartA = ExpFracTable.EXP_FRAC_TABLE_A[intFrac]; [BUGGY] final double fracPartB = ExpFracTable.EXP_FRAC_TABLE_B[intFrac]; [BUGGY]      final double epsilon = x - (intVal + intFrac / 1024.0);  full double precision (52 bits).Since z < 2^-10, we will have 62 bits of precision when combined with the contant 1.This will be [CLASS] FastMath ExpIntTable ExpFracTable lnMant CodyWaite [METHOD] exp [RETURN_TYPE] double  double x double extra double[] hiPrec [VARIABLES] boolean RECOMPUTE_TABLES_AT_RUNTIME negate negative double[] CBRTTWO COSINE_TABLE_A COSINE_TABLE_B EIGHTHS EXP_FRAC_TABLE_A EXP_FRAC_TABLE_B EXP_INT_TABLE_A EXP_INT_TABLE_B SINE_TABLE_A SINE_TABLE_B TANGENT_TABLE_A TANGENT_TABLE_B hiPrec long[] PI_O_4_BITS RECIP_2PI double E F_11_12 F_13_14 F_15_16 F_1_11 F_1_13 F_1_15 F_1_17 F_1_2 F_1_3 F_1_4 F_1_5 F_1_7 F_1_9 F_3_4 F_5_6 F_7_8 F_9_10 LN_2_A LN_2_B PI TWO_POWER_52 a a2 absAsinh absAtanh b d da daa dab db denom denomb denomr epsilon extra finalRemA finalRemB fracPartA fracPartB intPartA intPartB na nb ra ratio ratioa ratiob rb recip recipa recipb remA remB result temp tempA tempB tempC x xa xb ya yaa yab yb z za zb double[][] LN_HI_PREC_COEF LN_MANT LN_QUICK_COEF int EXP_FRAC_TABLE_LEN EXP_INT_TABLE_LEN EXP_INT_TABLE_MAX_INDEX LN_MANT_LEN SINE_TABLE_LEN finalK intFrac intVal k long HEX_40000000 MASK_30BITS xl  	projects/Math16/src/main/java/org/apache/commons/math3/util/FastMath.java	0.4082482904638631	887	887	2	replace	
52	[BUG] [BUGGY] [FE] AssertionError [CONTEXT] intPartA = ExpIntTable.EXP_INT_TABLE_A[EXP_INT_TABLE_MAX_INDEX+intVal]; intPartB = ExpIntTable.EXP_INT_TABLE_B[EXP_INT_TABLE_MAX_INDEX+intVal]; }     final int intFrac = (int) ((x - intVal) * 1024.0); final double fracPartA = ExpFracTable.EXP_FRAC_TABLE_A[intFrac]; [BUGGY] [BUGGY] final double fracPartB = ExpFracTable.EXP_FRAC_TABLE_B[intFrac];     final double epsilon = x - (intVal + intFrac / 1024.0);  full double precision (52 bits).Since z < 2^-10, we will have 62 bits of precision when combined with the contant 1.This will be [CLASS] FastMath ExpIntTable ExpFracTable lnMant CodyWaite [METHOD] exp [RETURN_TYPE] double  double x double extra double[] hiPrec [VARIABLES] boolean RECOMPUTE_TABLES_AT_RUNTIME negate negative double[] CBRTTWO COSINE_TABLE_A COSINE_TABLE_B EIGHTHS EXP_FRAC_TABLE_A EXP_FRAC_TABLE_B EXP_INT_TABLE_A EXP_INT_TABLE_B SINE_TABLE_A SINE_TABLE_B TANGENT_TABLE_A TANGENT_TABLE_B hiPrec long[] PI_O_4_BITS RECIP_2PI double E F_11_12 F_13_14 F_15_16 F_1_11 F_1_13 F_1_15 F_1_17 F_1_2 F_1_3 F_1_4 F_1_5 F_1_7 F_1_9 F_3_4 F_5_6 F_7_8 F_9_10 LN_2_A LN_2_B PI TWO_POWER_52 a a2 absAsinh absAtanh b d da daa dab db denom denomb denomr epsilon extra finalRemA finalRemB fracPartA fracPartB intPartA intPartB na nb ra ratio ratioa ratiob rb recip recipa recipb remA remB result temp tempA tempB tempC x xa xb ya yaa yab yb z za zb double[][] LN_HI_PREC_COEF LN_MANT LN_QUICK_COEF int EXP_FRAC_TABLE_LEN EXP_INT_TABLE_LEN EXP_INT_TABLE_MAX_INDEX LN_MANT_LEN SINE_TABLE_LEN finalK intFrac intVal k long HEX_40000000 MASK_30BITS xl  	projects/Math16/src/main/java/org/apache/commons/math3/util/FastMath.java	0.4082482904638631	887	887	2	add	
53	[BUG] [BUGGY] final double epsilon = x - (intVal + intFrac / 1024.0); [FE] AssertionError [CONTEXT]   final int intFrac = (int) ((x - intVal) * 1024.0); final double fracPartA = ExpFracTable.EXP_FRAC_TABLE_A[intFrac]; final double fracPartB = ExpFracTable.EXP_FRAC_TABLE_B[intFrac];     [BUGGY] final double epsilon = x - (intVal + intFrac / 1024.0); [BUGGY]   full double precision (52 bits).Since z < 2^-10, we will have 62 bits of precision when combined with the contant 1.This will be used in the last addition below to get proper rounding. */  is less than 0.5 ULP */ double z = 0.04168701738764507; z = z * epsilon + 0.1666666505023083; [CLASS] FastMath ExpIntTable ExpFracTable lnMant CodyWaite [METHOD] exp [RETURN_TYPE] double  double x double extra double[] hiPrec [VARIABLES] boolean RECOMPUTE_TABLES_AT_RUNTIME negate negative double[] CBRTTWO COSINE_TABLE_A COSINE_TABLE_B EIGHTHS EXP_FRAC_TABLE_A EXP_FRAC_TABLE_B EXP_INT_TABLE_A EXP_INT_TABLE_B SINE_TABLE_A SINE_TABLE_B TANGENT_TABLE_A TANGENT_TABLE_B hiPrec long[] PI_O_4_BITS RECIP_2PI double E F_11_12 F_13_14 F_15_16 F_1_11 F_1_13 F_1_15 F_1_17 F_1_2 F_1_3 F_1_4 F_1_5 F_1_7 F_1_9 F_3_4 F_5_6 F_7_8 F_9_10 LN_2_A LN_2_B PI TWO_POWER_52 a a2 absAsinh absAtanh b d da daa dab db denom denomb denomr epsilon extra finalRemA finalRemB fracPartA fracPartB intPartA intPartB na nb ra ratio ratioa ratiob rb recip recipa recipb remA remB result temp tempA tempB tempC x xa xb ya yaa yab yb z za zb double[][] LN_HI_PREC_COEF LN_MANT LN_QUICK_COEF int EXP_FRAC_TABLE_LEN EXP_INT_TABLE_LEN EXP_INT_TABLE_MAX_INDEX LN_MANT_LEN SINE_TABLE_LEN finalK intFrac intVal k long HEX_40000000 MASK_30BITS xl  	projects/Math16/src/main/java/org/apache/commons/math3/util/FastMath.java	0.4082482904638631	893	893	2	replace	
54	[BUG] [BUGGY] [FE] AssertionError [CONTEXT]   final int intFrac = (int) ((x - intVal) * 1024.0); final double fracPartA = ExpFracTable.EXP_FRAC_TABLE_A[intFrac]; final double fracPartB = ExpFracTable.EXP_FRAC_TABLE_B[intFrac];     [BUGGY] [BUGGY] final double epsilon = x - (intVal + intFrac / 1024.0);  full double precision (52 bits).Since z < 2^-10, we will have 62 bits of precision when combined with the contant 1.This will be used in the last addition below to get proper rounding. */  is less than 0.5 ULP */ double z = 0.04168701738764507; z = z * epsilon + 0.1666666505023083; [CLASS] FastMath ExpIntTable ExpFracTable lnMant CodyWaite [METHOD] exp [RETURN_TYPE] double  double x double extra double[] hiPrec [VARIABLES] boolean RECOMPUTE_TABLES_AT_RUNTIME negate negative double[] CBRTTWO COSINE_TABLE_A COSINE_TABLE_B EIGHTHS EXP_FRAC_TABLE_A EXP_FRAC_TABLE_B EXP_INT_TABLE_A EXP_INT_TABLE_B SINE_TABLE_A SINE_TABLE_B TANGENT_TABLE_A TANGENT_TABLE_B hiPrec long[] PI_O_4_BITS RECIP_2PI double E F_11_12 F_13_14 F_15_16 F_1_11 F_1_13 F_1_15 F_1_17 F_1_2 F_1_3 F_1_4 F_1_5 F_1_7 F_1_9 F_3_4 F_5_6 F_7_8 F_9_10 LN_2_A LN_2_B PI TWO_POWER_52 a a2 absAsinh absAtanh b d da daa dab db denom denomb denomr epsilon extra finalRemA finalRemB fracPartA fracPartB intPartA intPartB na nb ra ratio ratioa ratiob rb recip recipa recipb remA remB result temp tempA tempB tempC x xa xb ya yaa yab yb z za zb double[][] LN_HI_PREC_COEF LN_MANT LN_QUICK_COEF int EXP_FRAC_TABLE_LEN EXP_INT_TABLE_LEN EXP_INT_TABLE_MAX_INDEX LN_MANT_LEN SINE_TABLE_LEN finalK intFrac intVal k long HEX_40000000 MASK_30BITS xl  	projects/Math16/src/main/java/org/apache/commons/math3/util/FastMath.java	0.4082482904638631	893	893	2	add	
55	[BUG] [BUGGY] double z = 0.04168701738764507; [FE] AssertionError [CONTEXT]  final double epsilon = x - (intVal + intFrac / 1024.0);  full double precision (52 bits).Since z < 2^-10, we will have 62 bits of precision when combined with the contant 1.This will be used in the last addition below to get proper rounding. */  is less than 0.5 ULP */ [BUGGY] double z = 0.04168701738764507; [BUGGY] z = z * epsilon + 0.1666666505023083; z = z * epsilon + 0.5000000000042687; z = z * epsilon + 1.0; z = z * epsilon + -3.940510424527919E-20;  expansion. tempA is exact since intPartA and intPartB only have 22 bits each. tempB will have 52 bits of precision.  [CLASS] FastMath ExpIntTable ExpFracTable lnMant CodyWaite [METHOD] exp [RETURN_TYPE] double  double x double extra double[] hiPrec [VARIABLES] boolean RECOMPUTE_TABLES_AT_RUNTIME negate negative double[] CBRTTWO COSINE_TABLE_A COSINE_TABLE_B EIGHTHS EXP_FRAC_TABLE_A EXP_FRAC_TABLE_B EXP_INT_TABLE_A EXP_INT_TABLE_B SINE_TABLE_A SINE_TABLE_B TANGENT_TABLE_A TANGENT_TABLE_B hiPrec long[] PI_O_4_BITS RECIP_2PI double E F_11_12 F_13_14 F_15_16 F_1_11 F_1_13 F_1_15 F_1_17 F_1_2 F_1_3 F_1_4 F_1_5 F_1_7 F_1_9 F_3_4 F_5_6 F_7_8 F_9_10 LN_2_A LN_2_B PI TWO_POWER_52 a a2 absAsinh absAtanh b d da daa dab db denom denomb denomr epsilon extra finalRemA finalRemB fracPartA fracPartB intPartA intPartB na nb ra ratio ratioa ratiob rb recip recipa recipb remA remB result temp tempA tempB tempC x xa xb ya yaa yab yb z za zb double[][] LN_HI_PREC_COEF LN_MANT LN_QUICK_COEF int EXP_FRAC_TABLE_LEN EXP_INT_TABLE_LEN EXP_INT_TABLE_MAX_INDEX LN_MANT_LEN SINE_TABLE_LEN finalK intFrac intVal k long HEX_40000000 MASK_30BITS xl  	projects/Math16/src/main/java/org/apache/commons/math3/util/FastMath.java	0.4082482904638631	902	902	2	replace	
56	[BUG] [BUGGY] [FE] AssertionError [CONTEXT]  final double epsilon = x - (intVal + intFrac / 1024.0);  full double precision (52 bits).Since z < 2^-10, we will have 62 bits of precision when combined with the contant 1.This will be used in the last addition below to get proper rounding. */  is less than 0.5 ULP */ [BUGGY] [BUGGY] double z = 0.04168701738764507; z = z * epsilon + 0.1666666505023083; z = z * epsilon + 0.5000000000042687; z = z * epsilon + 1.0; z = z * epsilon + -3.940510424527919E-20;  expansion. tempA is exact since intPartA and intPartB only have 22 bits each. tempB will have 52 bits of precision.  [CLASS] FastMath ExpIntTable ExpFracTable lnMant CodyWaite [METHOD] exp [RETURN_TYPE] double  double x double extra double[] hiPrec [VARIABLES] boolean RECOMPUTE_TABLES_AT_RUNTIME negate negative double[] CBRTTWO COSINE_TABLE_A COSINE_TABLE_B EIGHTHS EXP_FRAC_TABLE_A EXP_FRAC_TABLE_B EXP_INT_TABLE_A EXP_INT_TABLE_B SINE_TABLE_A SINE_TABLE_B TANGENT_TABLE_A TANGENT_TABLE_B hiPrec long[] PI_O_4_BITS RECIP_2PI double E F_11_12 F_13_14 F_15_16 F_1_11 F_1_13 F_1_15 F_1_17 F_1_2 F_1_3 F_1_4 F_1_5 F_1_7 F_1_9 F_3_4 F_5_6 F_7_8 F_9_10 LN_2_A LN_2_B PI TWO_POWER_52 a a2 absAsinh absAtanh b d da daa dab db denom denomb denomr epsilon extra finalRemA finalRemB fracPartA fracPartB intPartA intPartB na nb ra ratio ratioa ratiob rb recip recipa recipb remA remB result temp tempA tempB tempC x xa xb ya yaa yab yb z za zb double[][] LN_HI_PREC_COEF LN_MANT LN_QUICK_COEF int EXP_FRAC_TABLE_LEN EXP_INT_TABLE_LEN EXP_INT_TABLE_MAX_INDEX LN_MANT_LEN SINE_TABLE_LEN finalK intFrac intVal k long HEX_40000000 MASK_30BITS xl  	projects/Math16/src/main/java/org/apache/commons/math3/util/FastMath.java	0.4082482904638631	902	902	2	add	
57	[BUG] [BUGGY] z = z * epsilon + 0.1666666505023083; [FE] AssertionError [CONTEXT] final double epsilon = x - (intVal + intFrac / 1024.0);  full double precision (52 bits).Since z < 2^-10, we will have 62 bits of precision when combined with the contant 1.This will be used in the last addition below to get proper rounding. */  is less than 0.5 ULP */ double z = 0.04168701738764507; [BUGGY] z = z * epsilon + 0.1666666505023083; [BUGGY] z = z * epsilon + 0.5000000000042687; z = z * epsilon + 1.0; z = z * epsilon + -3.940510424527919E-20;  expansion. tempA is exact since intPartA and intPartB only have 22 bits each. tempB will have 52 bits of precision.  double tempA = intPartA * fracPartA; [CLASS] FastMath ExpIntTable ExpFracTable lnMant CodyWaite [METHOD] exp [RETURN_TYPE] double  double x double extra double[] hiPrec [VARIABLES] boolean RECOMPUTE_TABLES_AT_RUNTIME negate negative double[] CBRTTWO COSINE_TABLE_A COSINE_TABLE_B EIGHTHS EXP_FRAC_TABLE_A EXP_FRAC_TABLE_B EXP_INT_TABLE_A EXP_INT_TABLE_B SINE_TABLE_A SINE_TABLE_B TANGENT_TABLE_A TANGENT_TABLE_B hiPrec long[] PI_O_4_BITS RECIP_2PI double E F_11_12 F_13_14 F_15_16 F_1_11 F_1_13 F_1_15 F_1_17 F_1_2 F_1_3 F_1_4 F_1_5 F_1_7 F_1_9 F_3_4 F_5_6 F_7_8 F_9_10 LN_2_A LN_2_B PI TWO_POWER_52 a a2 absAsinh absAtanh b d da daa dab db denom denomb denomr epsilon extra finalRemA finalRemB fracPartA fracPartB intPartA intPartB na nb ra ratio ratioa ratiob rb recip recipa recipb remA remB result temp tempA tempB tempC x xa xb ya yaa yab yb z za zb double[][] LN_HI_PREC_COEF LN_MANT LN_QUICK_COEF int EXP_FRAC_TABLE_LEN EXP_INT_TABLE_LEN EXP_INT_TABLE_MAX_INDEX LN_MANT_LEN SINE_TABLE_LEN finalK intFrac intVal k long HEX_40000000 MASK_30BITS xl  	projects/Math16/src/main/java/org/apache/commons/math3/util/FastMath.java	0.4082482904638631	903	903	2	replace	
58	[BUG] [BUGGY] [FE] AssertionError [CONTEXT] final double epsilon = x - (intVal + intFrac / 1024.0);  full double precision (52 bits).Since z < 2^-10, we will have 62 bits of precision when combined with the contant 1.This will be used in the last addition below to get proper rounding. */  is less than 0.5 ULP */ double z = 0.04168701738764507; [BUGGY] [BUGGY] z = z * epsilon + 0.1666666505023083; z = z * epsilon + 0.5000000000042687; z = z * epsilon + 1.0; z = z * epsilon + -3.940510424527919E-20;  expansion. tempA is exact since intPartA and intPartB only have 22 bits each. tempB will have 52 bits of precision.  double tempA = intPartA * fracPartA; [CLASS] FastMath ExpIntTable ExpFracTable lnMant CodyWaite [METHOD] exp [RETURN_TYPE] double  double x double extra double[] hiPrec [VARIABLES] boolean RECOMPUTE_TABLES_AT_RUNTIME negate negative double[] CBRTTWO COSINE_TABLE_A COSINE_TABLE_B EIGHTHS EXP_FRAC_TABLE_A EXP_FRAC_TABLE_B EXP_INT_TABLE_A EXP_INT_TABLE_B SINE_TABLE_A SINE_TABLE_B TANGENT_TABLE_A TANGENT_TABLE_B hiPrec long[] PI_O_4_BITS RECIP_2PI double E F_11_12 F_13_14 F_15_16 F_1_11 F_1_13 F_1_15 F_1_17 F_1_2 F_1_3 F_1_4 F_1_5 F_1_7 F_1_9 F_3_4 F_5_6 F_7_8 F_9_10 LN_2_A LN_2_B PI TWO_POWER_52 a a2 absAsinh absAtanh b d da daa dab db denom denomb denomr epsilon extra finalRemA finalRemB fracPartA fracPartB intPartA intPartB na nb ra ratio ratioa ratiob rb recip recipa recipb remA remB result temp tempA tempB tempC x xa xb ya yaa yab yb z za zb double[][] LN_HI_PREC_COEF LN_MANT LN_QUICK_COEF int EXP_FRAC_TABLE_LEN EXP_INT_TABLE_LEN EXP_INT_TABLE_MAX_INDEX LN_MANT_LEN SINE_TABLE_LEN finalK intFrac intVal k long HEX_40000000 MASK_30BITS xl  	projects/Math16/src/main/java/org/apache/commons/math3/util/FastMath.java	0.4082482904638631	903	903	2	add	
59	[BUG] [BUGGY] z = z * epsilon + 0.5000000000042687; [FE] AssertionError [CONTEXT]  full double precision (52 bits).Since z < 2^-10, we will have 62 bits of precision when combined with the contant 1.This will be used in the last addition below to get proper rounding. */  is less than 0.5 ULP */ double z = 0.04168701738764507; z = z * epsilon + 0.1666666505023083; [BUGGY] z = z * epsilon + 0.5000000000042687; [BUGGY] z = z * epsilon + 1.0; z = z * epsilon + -3.940510424527919E-20;  expansion. tempA is exact since intPartA and intPartB only have 22 bits each. tempB will have 52 bits of precision.  double tempA = intPartA * fracPartA; double tempB = intPartA * fracPartB + intPartB * fracPartA + intPartB * fracPartB; [CLASS] FastMath ExpIntTable ExpFracTable lnMant CodyWaite [METHOD] exp [RETURN_TYPE] double  double x double extra double[] hiPrec [VARIABLES] boolean RECOMPUTE_TABLES_AT_RUNTIME negate negative double[] CBRTTWO COSINE_TABLE_A COSINE_TABLE_B EIGHTHS EXP_FRAC_TABLE_A EXP_FRAC_TABLE_B EXP_INT_TABLE_A EXP_INT_TABLE_B SINE_TABLE_A SINE_TABLE_B TANGENT_TABLE_A TANGENT_TABLE_B hiPrec long[] PI_O_4_BITS RECIP_2PI double E F_11_12 F_13_14 F_15_16 F_1_11 F_1_13 F_1_15 F_1_17 F_1_2 F_1_3 F_1_4 F_1_5 F_1_7 F_1_9 F_3_4 F_5_6 F_7_8 F_9_10 LN_2_A LN_2_B PI TWO_POWER_52 a a2 absAsinh absAtanh b d da daa dab db denom denomb denomr epsilon extra finalRemA finalRemB fracPartA fracPartB intPartA intPartB na nb ra ratio ratioa ratiob rb recip recipa recipb remA remB result temp tempA tempB tempC x xa xb ya yaa yab yb z za zb double[][] LN_HI_PREC_COEF LN_MANT LN_QUICK_COEF int EXP_FRAC_TABLE_LEN EXP_INT_TABLE_LEN EXP_INT_TABLE_MAX_INDEX LN_MANT_LEN SINE_TABLE_LEN finalK intFrac intVal k long HEX_40000000 MASK_30BITS xl  	projects/Math16/src/main/java/org/apache/commons/math3/util/FastMath.java	0.4082482904638631	904	904	2	replace	
60	[BUG] [BUGGY] [FE] AssertionError [CONTEXT]  full double precision (52 bits).Since z < 2^-10, we will have 62 bits of precision when combined with the contant 1.This will be used in the last addition below to get proper rounding. */  is less than 0.5 ULP */ double z = 0.04168701738764507; z = z * epsilon + 0.1666666505023083; [BUGGY] [BUGGY] z = z * epsilon + 0.5000000000042687; z = z * epsilon + 1.0; z = z * epsilon + -3.940510424527919E-20;  expansion. tempA is exact since intPartA and intPartB only have 22 bits each. tempB will have 52 bits of precision.  double tempA = intPartA * fracPartA; double tempB = intPartA * fracPartB + intPartB * fracPartA + intPartB * fracPartB; [CLASS] FastMath ExpIntTable ExpFracTable lnMant CodyWaite [METHOD] exp [RETURN_TYPE] double  double x double extra double[] hiPrec [VARIABLES] boolean RECOMPUTE_TABLES_AT_RUNTIME negate negative double[] CBRTTWO COSINE_TABLE_A COSINE_TABLE_B EIGHTHS EXP_FRAC_TABLE_A EXP_FRAC_TABLE_B EXP_INT_TABLE_A EXP_INT_TABLE_B SINE_TABLE_A SINE_TABLE_B TANGENT_TABLE_A TANGENT_TABLE_B hiPrec long[] PI_O_4_BITS RECIP_2PI double E F_11_12 F_13_14 F_15_16 F_1_11 F_1_13 F_1_15 F_1_17 F_1_2 F_1_3 F_1_4 F_1_5 F_1_7 F_1_9 F_3_4 F_5_6 F_7_8 F_9_10 LN_2_A LN_2_B PI TWO_POWER_52 a a2 absAsinh absAtanh b d da daa dab db denom denomb denomr epsilon extra finalRemA finalRemB fracPartA fracPartB intPartA intPartB na nb ra ratio ratioa ratiob rb recip recipa recipb remA remB result temp tempA tempB tempC x xa xb ya yaa yab yb z za zb double[][] LN_HI_PREC_COEF LN_MANT LN_QUICK_COEF int EXP_FRAC_TABLE_LEN EXP_INT_TABLE_LEN EXP_INT_TABLE_MAX_INDEX LN_MANT_LEN SINE_TABLE_LEN finalK intFrac intVal k long HEX_40000000 MASK_30BITS xl  	projects/Math16/src/main/java/org/apache/commons/math3/util/FastMath.java	0.4082482904638631	904	904	2	add	
61	[BUG] [BUGGY] z = z * epsilon + 1.0; [FE] AssertionError [CONTEXT]  full double precision (52 bits).Since z < 2^-10, we will have 62 bits of precision when combined with the contant 1.This will be used in the last addition below to get proper rounding. */  is less than 0.5 ULP */ double z = 0.04168701738764507; z = z * epsilon + 0.1666666505023083; z = z * epsilon + 0.5000000000042687; [BUGGY] z = z * epsilon + 1.0; [BUGGY] z = z * epsilon + -3.940510424527919E-20;  expansion. tempA is exact since intPartA and intPartB only have 22 bits each. tempB will have 52 bits of precision.  double tempA = intPartA * fracPartA; double tempB = intPartA * fracPartB + intPartB * fracPartA + intPartB * fracPartB;  [CLASS] FastMath ExpIntTable ExpFracTable lnMant CodyWaite [METHOD] exp [RETURN_TYPE] double  double x double extra double[] hiPrec [VARIABLES] boolean RECOMPUTE_TABLES_AT_RUNTIME negate negative double[] CBRTTWO COSINE_TABLE_A COSINE_TABLE_B EIGHTHS EXP_FRAC_TABLE_A EXP_FRAC_TABLE_B EXP_INT_TABLE_A EXP_INT_TABLE_B SINE_TABLE_A SINE_TABLE_B TANGENT_TABLE_A TANGENT_TABLE_B hiPrec long[] PI_O_4_BITS RECIP_2PI double E F_11_12 F_13_14 F_15_16 F_1_11 F_1_13 F_1_15 F_1_17 F_1_2 F_1_3 F_1_4 F_1_5 F_1_7 F_1_9 F_3_4 F_5_6 F_7_8 F_9_10 LN_2_A LN_2_B PI TWO_POWER_52 a a2 absAsinh absAtanh b d da daa dab db denom denomb denomr epsilon extra finalRemA finalRemB fracPartA fracPartB intPartA intPartB na nb ra ratio ratioa ratiob rb recip recipa recipb remA remB result temp tempA tempB tempC x xa xb ya yaa yab yb z za zb double[][] LN_HI_PREC_COEF LN_MANT LN_QUICK_COEF int EXP_FRAC_TABLE_LEN EXP_INT_TABLE_LEN EXP_INT_TABLE_MAX_INDEX LN_MANT_LEN SINE_TABLE_LEN finalK intFrac intVal k long HEX_40000000 MASK_30BITS xl  	projects/Math16/src/main/java/org/apache/commons/math3/util/FastMath.java	0.4082482904638631	905	905	2	replace	
62	[BUG] [BUGGY] [FE] AssertionError [CONTEXT]  full double precision (52 bits).Since z < 2^-10, we will have 62 bits of precision when combined with the contant 1.This will be used in the last addition below to get proper rounding. */  is less than 0.5 ULP */ double z = 0.04168701738764507; z = z * epsilon + 0.1666666505023083; z = z * epsilon + 0.5000000000042687; [BUGGY] [BUGGY] z = z * epsilon + 1.0; z = z * epsilon + -3.940510424527919E-20;  expansion. tempA is exact since intPartA and intPartB only have 22 bits each. tempB will have 52 bits of precision.  double tempA = intPartA * fracPartA; double tempB = intPartA * fracPartB + intPartB * fracPartA + intPartB * fracPartB;  [CLASS] FastMath ExpIntTable ExpFracTable lnMant CodyWaite [METHOD] exp [RETURN_TYPE] double  double x double extra double[] hiPrec [VARIABLES] boolean RECOMPUTE_TABLES_AT_RUNTIME negate negative double[] CBRTTWO COSINE_TABLE_A COSINE_TABLE_B EIGHTHS EXP_FRAC_TABLE_A EXP_FRAC_TABLE_B EXP_INT_TABLE_A EXP_INT_TABLE_B SINE_TABLE_A SINE_TABLE_B TANGENT_TABLE_A TANGENT_TABLE_B hiPrec long[] PI_O_4_BITS RECIP_2PI double E F_11_12 F_13_14 F_15_16 F_1_11 F_1_13 F_1_15 F_1_17 F_1_2 F_1_3 F_1_4 F_1_5 F_1_7 F_1_9 F_3_4 F_5_6 F_7_8 F_9_10 LN_2_A LN_2_B PI TWO_POWER_52 a a2 absAsinh absAtanh b d da daa dab db denom denomb denomr epsilon extra finalRemA finalRemB fracPartA fracPartB intPartA intPartB na nb ra ratio ratioa ratiob rb recip recipa recipb remA remB result temp tempA tempB tempC x xa xb ya yaa yab yb z za zb double[][] LN_HI_PREC_COEF LN_MANT LN_QUICK_COEF int EXP_FRAC_TABLE_LEN EXP_INT_TABLE_LEN EXP_INT_TABLE_MAX_INDEX LN_MANT_LEN SINE_TABLE_LEN finalK intFrac intVal k long HEX_40000000 MASK_30BITS xl  	projects/Math16/src/main/java/org/apache/commons/math3/util/FastMath.java	0.4082482904638631	905	905	2	add	
63	[BUG] [BUGGY] z = z * epsilon + -3.940510424527919E-20; [FE] AssertionError [CONTEXT] full double precision (52 bits).Since z < 2^-10, we will have 62 bits of precision when combined with the contant 1.This will be used in the last addition below to get proper rounding. */  is less than 0.5 ULP */ double z = 0.04168701738764507; z = z * epsilon + 0.1666666505023083; z = z * epsilon + 0.5000000000042687; z = z * epsilon + 1.0; [BUGGY] z = z * epsilon + -3.940510424527919E-20; [BUGGY]   expansion. tempA is exact since intPartA and intPartB only have 22 bits each. tempB will have 52 bits of precision.  double tempA = intPartA * fracPartA; double tempB = intPartA * fracPartB + intPartB * fracPartA + intPartB * fracPartB;   [CLASS] FastMath ExpIntTable ExpFracTable lnMant CodyWaite [METHOD] exp [RETURN_TYPE] double  double x double extra double[] hiPrec [VARIABLES] boolean RECOMPUTE_TABLES_AT_RUNTIME negate negative double[] CBRTTWO COSINE_TABLE_A COSINE_TABLE_B EIGHTHS EXP_FRAC_TABLE_A EXP_FRAC_TABLE_B EXP_INT_TABLE_A EXP_INT_TABLE_B SINE_TABLE_A SINE_TABLE_B TANGENT_TABLE_A TANGENT_TABLE_B hiPrec long[] PI_O_4_BITS RECIP_2PI double E F_11_12 F_13_14 F_15_16 F_1_11 F_1_13 F_1_15 F_1_17 F_1_2 F_1_3 F_1_4 F_1_5 F_1_7 F_1_9 F_3_4 F_5_6 F_7_8 F_9_10 LN_2_A LN_2_B PI TWO_POWER_52 a a2 absAsinh absAtanh b d da daa dab db denom denomb denomr epsilon extra finalRemA finalRemB fracPartA fracPartB intPartA intPartB na nb ra ratio ratioa ratiob rb recip recipa recipb remA remB result temp tempA tempB tempC x xa xb ya yaa yab yb z za zb double[][] LN_HI_PREC_COEF LN_MANT LN_QUICK_COEF int EXP_FRAC_TABLE_LEN EXP_INT_TABLE_LEN EXP_INT_TABLE_MAX_INDEX LN_MANT_LEN SINE_TABLE_LEN finalK intFrac intVal k long HEX_40000000 MASK_30BITS xl  	projects/Math16/src/main/java/org/apache/commons/math3/util/FastMath.java	0.4082482904638631	906	906	2	replace	
64	[BUG] [BUGGY] [FE] AssertionError [CONTEXT] full double precision (52 bits).Since z < 2^-10, we will have 62 bits of precision when combined with the contant 1.This will be used in the last addition below to get proper rounding. */  is less than 0.5 ULP */ double z = 0.04168701738764507; z = z * epsilon + 0.1666666505023083; z = z * epsilon + 0.5000000000042687; z = z * epsilon + 1.0; [BUGGY] [BUGGY] z = z * epsilon + -3.940510424527919E-20;  expansion. tempA is exact since intPartA and intPartB only have 22 bits each. tempB will have 52 bits of precision.  double tempA = intPartA * fracPartA; double tempB = intPartA * fracPartB + intPartB * fracPartA + intPartB * fracPartB;   [CLASS] FastMath ExpIntTable ExpFracTable lnMant CodyWaite [METHOD] exp [RETURN_TYPE] double  double x double extra double[] hiPrec [VARIABLES] boolean RECOMPUTE_TABLES_AT_RUNTIME negate negative double[] CBRTTWO COSINE_TABLE_A COSINE_TABLE_B EIGHTHS EXP_FRAC_TABLE_A EXP_FRAC_TABLE_B EXP_INT_TABLE_A EXP_INT_TABLE_B SINE_TABLE_A SINE_TABLE_B TANGENT_TABLE_A TANGENT_TABLE_B hiPrec long[] PI_O_4_BITS RECIP_2PI double E F_11_12 F_13_14 F_15_16 F_1_11 F_1_13 F_1_15 F_1_17 F_1_2 F_1_3 F_1_4 F_1_5 F_1_7 F_1_9 F_3_4 F_5_6 F_7_8 F_9_10 LN_2_A LN_2_B PI TWO_POWER_52 a a2 absAsinh absAtanh b d da daa dab db denom denomb denomr epsilon extra finalRemA finalRemB fracPartA fracPartB intPartA intPartB na nb ra ratio ratioa ratiob rb recip recipa recipb remA remB result temp tempA tempB tempC x xa xb ya yaa yab yb z za zb double[][] LN_HI_PREC_COEF LN_MANT LN_QUICK_COEF int EXP_FRAC_TABLE_LEN EXP_INT_TABLE_LEN EXP_INT_TABLE_MAX_INDEX LN_MANT_LEN SINE_TABLE_LEN finalK intFrac intVal k long HEX_40000000 MASK_30BITS xl  	projects/Math16/src/main/java/org/apache/commons/math3/util/FastMath.java	0.4082482904638631	906	906	2	add	
65	[BUG] [BUGGY] double tempA = intPartA * fracPartA; [FE] AssertionError [CONTEXT] z = z * epsilon + 0.1666666505023083; z = z * epsilon + 0.5000000000042687; z = z * epsilon + 1.0; z = z * epsilon + -3.940510424527919E-20;  expansion. tempA is exact since intPartA and intPartB only have 22 bits each. tempB will have 52 bits of precision.  [BUGGY] double tempA = intPartA * fracPartA; [BUGGY] double tempB = intPartA * fracPartB + intPartB * fracPartA + intPartB * fracPartB;  important.For accuracy add by increasing size.tempA is exact and much larger than the others.If there are extra bits specified from the pow() function, use them. */ final double tempC = tempB + tempA; final double result; if (extra != 0.0) { result = tempC*extra*z + tempC*extra + tempC*z + tempB + tempA; [CLASS] FastMath ExpIntTable ExpFracTable lnMant CodyWaite [METHOD] exp [RETURN_TYPE] double  double x double extra double[] hiPrec [VARIABLES] boolean RECOMPUTE_TABLES_AT_RUNTIME negate negative double[] CBRTTWO COSINE_TABLE_A COSINE_TABLE_B EIGHTHS EXP_FRAC_TABLE_A EXP_FRAC_TABLE_B EXP_INT_TABLE_A EXP_INT_TABLE_B SINE_TABLE_A SINE_TABLE_B TANGENT_TABLE_A TANGENT_TABLE_B hiPrec long[] PI_O_4_BITS RECIP_2PI double E F_11_12 F_13_14 F_15_16 F_1_11 F_1_13 F_1_15 F_1_17 F_1_2 F_1_3 F_1_4 F_1_5 F_1_7 F_1_9 F_3_4 F_5_6 F_7_8 F_9_10 LN_2_A LN_2_B PI TWO_POWER_52 a a2 absAsinh absAtanh b d da daa dab db denom denomb denomr epsilon extra finalRemA finalRemB fracPartA fracPartB intPartA intPartB na nb ra ratio ratioa ratiob rb recip recipa recipb remA remB result temp tempA tempB tempC x xa xb ya yaa yab yb z za zb double[][] LN_HI_PREC_COEF LN_MANT LN_QUICK_COEF int EXP_FRAC_TABLE_LEN EXP_INT_TABLE_LEN EXP_INT_TABLE_MAX_INDEX LN_MANT_LEN SINE_TABLE_LEN finalK intFrac intVal k long HEX_40000000 MASK_30BITS xl  	projects/Math16/src/main/java/org/apache/commons/math3/util/FastMath.java	0.4082482904638631	913	913	2	replace	
66	[BUG] [BUGGY] [FE] AssertionError [CONTEXT] z = z * epsilon + 0.1666666505023083; z = z * epsilon + 0.5000000000042687; z = z * epsilon + 1.0; z = z * epsilon + -3.940510424527919E-20;  expansion. tempA is exact since intPartA and intPartB only have 22 bits each. tempB will have 52 bits of precision.  [BUGGY] [BUGGY] double tempA = intPartA * fracPartA; double tempB = intPartA * fracPartB + intPartB * fracPartA + intPartB * fracPartB;  important.For accuracy add by increasing size.tempA is exact and much larger than the others.If there are extra bits specified from the pow() function, use them. */ final double tempC = tempB + tempA; final double result; if (extra != 0.0) { result = tempC*extra*z + tempC*extra + tempC*z + tempB + tempA; [CLASS] FastMath ExpIntTable ExpFracTable lnMant CodyWaite [METHOD] exp [RETURN_TYPE] double  double x double extra double[] hiPrec [VARIABLES] boolean RECOMPUTE_TABLES_AT_RUNTIME negate negative double[] CBRTTWO COSINE_TABLE_A COSINE_TABLE_B EIGHTHS EXP_FRAC_TABLE_A EXP_FRAC_TABLE_B EXP_INT_TABLE_A EXP_INT_TABLE_B SINE_TABLE_A SINE_TABLE_B TANGENT_TABLE_A TANGENT_TABLE_B hiPrec long[] PI_O_4_BITS RECIP_2PI double E F_11_12 F_13_14 F_15_16 F_1_11 F_1_13 F_1_15 F_1_17 F_1_2 F_1_3 F_1_4 F_1_5 F_1_7 F_1_9 F_3_4 F_5_6 F_7_8 F_9_10 LN_2_A LN_2_B PI TWO_POWER_52 a a2 absAsinh absAtanh b d da daa dab db denom denomb denomr epsilon extra finalRemA finalRemB fracPartA fracPartB intPartA intPartB na nb ra ratio ratioa ratiob rb recip recipa recipb remA remB result temp tempA tempB tempC x xa xb ya yaa yab yb z za zb double[][] LN_HI_PREC_COEF LN_MANT LN_QUICK_COEF int EXP_FRAC_TABLE_LEN EXP_INT_TABLE_LEN EXP_INT_TABLE_MAX_INDEX LN_MANT_LEN SINE_TABLE_LEN finalK intFrac intVal k long HEX_40000000 MASK_30BITS xl  	projects/Math16/src/main/java/org/apache/commons/math3/util/FastMath.java	0.4082482904638631	913	913	2	add	
67	[BUG] [BUGGY] double tempB = intPartA * fracPartB + intPartB * fracPartA + intPartB * fracPartB; [FE] AssertionError [CONTEXT] z = z * epsilon + 0.5000000000042687; z = z * epsilon + 1.0; z = z * epsilon + -3.940510424527919E-20;  expansion. tempA is exact since intPartA and intPartB only have 22 bits each. tempB will have 52 bits of precision.  double tempA = intPartA * fracPartA; [BUGGY] double tempB = intPartA * fracPartB + intPartB * fracPartA + intPartB * fracPartB; [BUGGY]   important.For accuracy add by increasing size.tempA is exact and much larger than the others.If there are extra bits specified from the pow() function, use them. */ final double tempC = tempB + tempA; final double result; if (extra != 0.0) { result = tempC*extra*z + tempC*extra + tempC*z + tempB + tempA; } else { [CLASS] FastMath ExpIntTable ExpFracTable lnMant CodyWaite [METHOD] exp [RETURN_TYPE] double  double x double extra double[] hiPrec [VARIABLES] boolean RECOMPUTE_TABLES_AT_RUNTIME negate negative double[] CBRTTWO COSINE_TABLE_A COSINE_TABLE_B EIGHTHS EXP_FRAC_TABLE_A EXP_FRAC_TABLE_B EXP_INT_TABLE_A EXP_INT_TABLE_B SINE_TABLE_A SINE_TABLE_B TANGENT_TABLE_A TANGENT_TABLE_B hiPrec long[] PI_O_4_BITS RECIP_2PI double E F_11_12 F_13_14 F_15_16 F_1_11 F_1_13 F_1_15 F_1_17 F_1_2 F_1_3 F_1_4 F_1_5 F_1_7 F_1_9 F_3_4 F_5_6 F_7_8 F_9_10 LN_2_A LN_2_B PI TWO_POWER_52 a a2 absAsinh absAtanh b d da daa dab db denom denomb denomr epsilon extra finalRemA finalRemB fracPartA fracPartB intPartA intPartB na nb ra ratio ratioa ratiob rb recip recipa recipb remA remB result temp tempA tempB tempC x xa xb ya yaa yab yb z za zb double[][] LN_HI_PREC_COEF LN_MANT LN_QUICK_COEF int EXP_FRAC_TABLE_LEN EXP_INT_TABLE_LEN EXP_INT_TABLE_MAX_INDEX LN_MANT_LEN SINE_TABLE_LEN finalK intFrac intVal k long HEX_40000000 MASK_30BITS xl  	projects/Math16/src/main/java/org/apache/commons/math3/util/FastMath.java	0.4082482904638631	914	914	2	replace	
68	[BUG] [BUGGY] [FE] AssertionError [CONTEXT] z = z * epsilon + 0.5000000000042687; z = z * epsilon + 1.0; z = z * epsilon + -3.940510424527919E-20;  expansion. tempA is exact since intPartA and intPartB only have 22 bits each. tempB will have 52 bits of precision.  double tempA = intPartA * fracPartA; [BUGGY] [BUGGY] double tempB = intPartA * fracPartB + intPartB * fracPartA + intPartB * fracPartB;  important.For accuracy add by increasing size.tempA is exact and much larger than the others.If there are extra bits specified from the pow() function, use them. */ final double tempC = tempB + tempA; final double result; if (extra != 0.0) { result = tempC*extra*z + tempC*extra + tempC*z + tempB + tempA; } else { [CLASS] FastMath ExpIntTable ExpFracTable lnMant CodyWaite [METHOD] exp [RETURN_TYPE] double  double x double extra double[] hiPrec [VARIABLES] boolean RECOMPUTE_TABLES_AT_RUNTIME negate negative double[] CBRTTWO COSINE_TABLE_A COSINE_TABLE_B EIGHTHS EXP_FRAC_TABLE_A EXP_FRAC_TABLE_B EXP_INT_TABLE_A EXP_INT_TABLE_B SINE_TABLE_A SINE_TABLE_B TANGENT_TABLE_A TANGENT_TABLE_B hiPrec long[] PI_O_4_BITS RECIP_2PI double E F_11_12 F_13_14 F_15_16 F_1_11 F_1_13 F_1_15 F_1_17 F_1_2 F_1_3 F_1_4 F_1_5 F_1_7 F_1_9 F_3_4 F_5_6 F_7_8 F_9_10 LN_2_A LN_2_B PI TWO_POWER_52 a a2 absAsinh absAtanh b d da daa dab db denom denomb denomr epsilon extra finalRemA finalRemB fracPartA fracPartB intPartA intPartB na nb ra ratio ratioa ratiob rb recip recipa recipb remA remB result temp tempA tempB tempC x xa xb ya yaa yab yb z za zb double[][] LN_HI_PREC_COEF LN_MANT LN_QUICK_COEF int EXP_FRAC_TABLE_LEN EXP_INT_TABLE_LEN EXP_INT_TABLE_MAX_INDEX LN_MANT_LEN SINE_TABLE_LEN finalK intFrac intVal k long HEX_40000000 MASK_30BITS xl  	projects/Math16/src/main/java/org/apache/commons/math3/util/FastMath.java	0.4082482904638631	914	914	2	add	
69	[BUG] [BUGGY] final double tempC = tempB + tempA; [FE] AssertionError [CONTEXT] tempA is exact since intPartA and intPartB only have 22 bits each. tempB will have 52 bits of precision.  double tempA = intPartA * fracPartA; double tempB = intPartA * fracPartB + intPartB * fracPartA + intPartB * fracPartB;  important.For accuracy add by increasing size.tempA is exact and much larger than the others.If there are extra bits specified from the pow() function, use them. */ [BUGGY] final double tempC = tempB + tempA; [BUGGY] final double result; if (extra != 0.0) { result = tempC*extra*z + tempC*extra + tempC*z + tempB + tempA; } else { result = tempC*z + tempB + tempA; } if (hiPrec != null) {  hiPrec[0] = tempA; [CLASS] FastMath ExpIntTable ExpFracTable lnMant CodyWaite [METHOD] exp [RETURN_TYPE] double  double x double extra double[] hiPrec [VARIABLES] boolean RECOMPUTE_TABLES_AT_RUNTIME negate negative double[] CBRTTWO COSINE_TABLE_A COSINE_TABLE_B EIGHTHS EXP_FRAC_TABLE_A EXP_FRAC_TABLE_B EXP_INT_TABLE_A EXP_INT_TABLE_B SINE_TABLE_A SINE_TABLE_B TANGENT_TABLE_A TANGENT_TABLE_B hiPrec long[] PI_O_4_BITS RECIP_2PI double E F_11_12 F_13_14 F_15_16 F_1_11 F_1_13 F_1_15 F_1_17 F_1_2 F_1_3 F_1_4 F_1_5 F_1_7 F_1_9 F_3_4 F_5_6 F_7_8 F_9_10 LN_2_A LN_2_B PI TWO_POWER_52 a a2 absAsinh absAtanh b d da daa dab db denom denomb denomr epsilon extra finalRemA finalRemB fracPartA fracPartB intPartA intPartB na nb ra ratio ratioa ratiob rb recip recipa recipb remA remB result temp tempA tempB tempC x xa xb ya yaa yab yb z za zb double[][] LN_HI_PREC_COEF LN_MANT LN_QUICK_COEF int EXP_FRAC_TABLE_LEN EXP_INT_TABLE_LEN EXP_INT_TABLE_MAX_INDEX LN_MANT_LEN SINE_TABLE_LEN finalK intFrac intVal k long HEX_40000000 MASK_30BITS xl  	projects/Math16/src/main/java/org/apache/commons/math3/util/FastMath.java	0.4082482904638631	920	920	2	replace	
70	[BUG] [BUGGY] [FE] AssertionError [CONTEXT] tempA is exact since intPartA and intPartB only have 22 bits each. tempB will have 52 bits of precision.  double tempA = intPartA * fracPartA; double tempB = intPartA * fracPartB + intPartB * fracPartA + intPartB * fracPartB;  important.For accuracy add by increasing size.tempA is exact and much larger than the others.If there are extra bits specified from the pow() function, use them. */ [BUGGY] [BUGGY] final double tempC = tempB + tempA; final double result; if (extra != 0.0) { result = tempC*extra*z + tempC*extra + tempC*z + tempB + tempA; } else { result = tempC*z + tempB + tempA; } if (hiPrec != null) {  hiPrec[0] = tempA; [CLASS] FastMath ExpIntTable ExpFracTable lnMant CodyWaite [METHOD] exp [RETURN_TYPE] double  double x double extra double[] hiPrec [VARIABLES] boolean RECOMPUTE_TABLES_AT_RUNTIME negate negative double[] CBRTTWO COSINE_TABLE_A COSINE_TABLE_B EIGHTHS EXP_FRAC_TABLE_A EXP_FRAC_TABLE_B EXP_INT_TABLE_A EXP_INT_TABLE_B SINE_TABLE_A SINE_TABLE_B TANGENT_TABLE_A TANGENT_TABLE_B hiPrec long[] PI_O_4_BITS RECIP_2PI double E F_11_12 F_13_14 F_15_16 F_1_11 F_1_13 F_1_15 F_1_17 F_1_2 F_1_3 F_1_4 F_1_5 F_1_7 F_1_9 F_3_4 F_5_6 F_7_8 F_9_10 LN_2_A LN_2_B PI TWO_POWER_52 a a2 absAsinh absAtanh b d da daa dab db denom denomb denomr epsilon extra finalRemA finalRemB fracPartA fracPartB intPartA intPartB na nb ra ratio ratioa ratiob rb recip recipa recipb remA remB result temp tempA tempB tempC x xa xb ya yaa yab yb z za zb double[][] LN_HI_PREC_COEF LN_MANT LN_QUICK_COEF int EXP_FRAC_TABLE_LEN EXP_INT_TABLE_LEN EXP_INT_TABLE_MAX_INDEX LN_MANT_LEN SINE_TABLE_LEN finalK intFrac intVal k long HEX_40000000 MASK_30BITS xl  	projects/Math16/src/main/java/org/apache/commons/math3/util/FastMath.java	0.4082482904638631	920	920	2	add	
71	[BUG] [BUGGY] if (extra != 0.0) { [FE] AssertionError [CONTEXT]  double tempA = intPartA * fracPartA; double tempB = intPartA * fracPartB + intPartB * fracPartA + intPartB * fracPartB;  important.For accuracy add by increasing size.tempA is exact and much larger than the others.If there are extra bits specified from the pow() function, use them. */ final double tempC = tempB + tempA; final double result; [BUGGY] if (extra != 0.0) { [BUGGY] result = tempC*extra*z + tempC*extra + tempC*z + tempB + tempA; } else { result = tempC*z + tempB + tempA; } if (hiPrec != null) {  hiPrec[0] = tempA; hiPrec[1] = tempC*extra*z + tempC*extra + tempC*z + tempB; } [CLASS] FastMath ExpIntTable ExpFracTable lnMant CodyWaite [METHOD] exp [RETURN_TYPE] double  double x double extra double[] hiPrec [VARIABLES] boolean RECOMPUTE_TABLES_AT_RUNTIME negate negative double[] CBRTTWO COSINE_TABLE_A COSINE_TABLE_B EIGHTHS EXP_FRAC_TABLE_A EXP_FRAC_TABLE_B EXP_INT_TABLE_A EXP_INT_TABLE_B SINE_TABLE_A SINE_TABLE_B TANGENT_TABLE_A TANGENT_TABLE_B hiPrec long[] PI_O_4_BITS RECIP_2PI double E F_11_12 F_13_14 F_15_16 F_1_11 F_1_13 F_1_15 F_1_17 F_1_2 F_1_3 F_1_4 F_1_5 F_1_7 F_1_9 F_3_4 F_5_6 F_7_8 F_9_10 LN_2_A LN_2_B PI TWO_POWER_52 a a2 absAsinh absAtanh b d da daa dab db denom denomb denomr epsilon extra finalRemA finalRemB fracPartA fracPartB intPartA intPartB na nb ra ratio ratioa ratiob rb recip recipa recipb remA remB result temp tempA tempB tempC x xa xb ya yaa yab yb z za zb double[][] LN_HI_PREC_COEF LN_MANT LN_QUICK_COEF int EXP_FRAC_TABLE_LEN EXP_INT_TABLE_LEN EXP_INT_TABLE_MAX_INDEX LN_MANT_LEN SINE_TABLE_LEN finalK intFrac intVal k long HEX_40000000 MASK_30BITS xl  	projects/Math16/src/main/java/org/apache/commons/math3/util/FastMath.java	0.4082482904638631	922	922	2	replace	
72	[BUG] [BUGGY] [FE] AssertionError [CONTEXT]  double tempA = intPartA * fracPartA; double tempB = intPartA * fracPartB + intPartB * fracPartA + intPartB * fracPartB;  important.For accuracy add by increasing size.tempA is exact and much larger than the others.If there are extra bits specified from the pow() function, use them. */ final double tempC = tempB + tempA; final double result; [BUGGY] [BUGGY] if (extra != 0.0) { result = tempC*extra*z + tempC*extra + tempC*z + tempB + tempA; } else { result = tempC*z + tempB + tempA; } if (hiPrec != null) {  hiPrec[0] = tempA; hiPrec[1] = tempC*extra*z + tempC*extra + tempC*z + tempB; } [CLASS] FastMath ExpIntTable ExpFracTable lnMant CodyWaite [METHOD] exp [RETURN_TYPE] double  double x double extra double[] hiPrec [VARIABLES] boolean RECOMPUTE_TABLES_AT_RUNTIME negate negative double[] CBRTTWO COSINE_TABLE_A COSINE_TABLE_B EIGHTHS EXP_FRAC_TABLE_A EXP_FRAC_TABLE_B EXP_INT_TABLE_A EXP_INT_TABLE_B SINE_TABLE_A SINE_TABLE_B TANGENT_TABLE_A TANGENT_TABLE_B hiPrec long[] PI_O_4_BITS RECIP_2PI double E F_11_12 F_13_14 F_15_16 F_1_11 F_1_13 F_1_15 F_1_17 F_1_2 F_1_3 F_1_4 F_1_5 F_1_7 F_1_9 F_3_4 F_5_6 F_7_8 F_9_10 LN_2_A LN_2_B PI TWO_POWER_52 a a2 absAsinh absAtanh b d da daa dab db denom denomb denomr epsilon extra finalRemA finalRemB fracPartA fracPartB intPartA intPartB na nb ra ratio ratioa ratiob rb recip recipa recipb remA remB result temp tempA tempB tempC x xa xb ya yaa yab yb z za zb double[][] LN_HI_PREC_COEF LN_MANT LN_QUICK_COEF int EXP_FRAC_TABLE_LEN EXP_INT_TABLE_LEN EXP_INT_TABLE_MAX_INDEX LN_MANT_LEN SINE_TABLE_LEN finalK intFrac intVal k long HEX_40000000 MASK_30BITS xl  	projects/Math16/src/main/java/org/apache/commons/math3/util/FastMath.java	0.4082482904638631	922	922	2	add	
73	[BUG] [BUGGY] if (hiPrec != null) { [FE] AssertionError [CONTEXT] much larger than the others.If there are extra bits specified from the pow() function, use them. */ final double tempC = tempB + tempA; final double result; if (extra != 0.0) { result = tempC*extra*z + tempC*extra + tempC*z + tempB + tempA; } else { result = tempC*z + tempB + tempA; } [BUGGY] if (hiPrec != null) { [BUGGY]  hiPrec[0] = tempA; hiPrec[1] = tempC*extra*z + tempC*extra + tempC*z + tempB; } return result; } [CLASS] FastMath ExpIntTable ExpFracTable lnMant CodyWaite [METHOD] exp [RETURN_TYPE] double  double x double extra double[] hiPrec [VARIABLES] boolean RECOMPUTE_TABLES_AT_RUNTIME negate negative double[] CBRTTWO COSINE_TABLE_A COSINE_TABLE_B EIGHTHS EXP_FRAC_TABLE_A EXP_FRAC_TABLE_B EXP_INT_TABLE_A EXP_INT_TABLE_B SINE_TABLE_A SINE_TABLE_B TANGENT_TABLE_A TANGENT_TABLE_B hiPrec long[] PI_O_4_BITS RECIP_2PI double E F_11_12 F_13_14 F_15_16 F_1_11 F_1_13 F_1_15 F_1_17 F_1_2 F_1_3 F_1_4 F_1_5 F_1_7 F_1_9 F_3_4 F_5_6 F_7_8 F_9_10 LN_2_A LN_2_B PI TWO_POWER_52 a a2 absAsinh absAtanh b d da daa dab db denom denomb denomr epsilon extra finalRemA finalRemB fracPartA fracPartB intPartA intPartB na nb ra ratio ratioa ratiob rb recip recipa recipb remA remB result temp tempA tempB tempC x xa xb ya yaa yab yb z za zb double[][] LN_HI_PREC_COEF LN_MANT LN_QUICK_COEF int EXP_FRAC_TABLE_LEN EXP_INT_TABLE_LEN EXP_INT_TABLE_MAX_INDEX LN_MANT_LEN SINE_TABLE_LEN finalK intFrac intVal k long HEX_40000000 MASK_30BITS xl  	projects/Math16/src/main/java/org/apache/commons/math3/util/FastMath.java	0.4082482904638631	928	928	2	replace	
74	[BUG] [BUGGY] [FE] AssertionError [CONTEXT] much larger than the others.If there are extra bits specified from the pow() function, use them. */ final double tempC = tempB + tempA; final double result; if (extra != 0.0) { result = tempC*extra*z + tempC*extra + tempC*z + tempB + tempA; } else { result = tempC*z + tempB + tempA; } [BUGGY] [BUGGY] if (hiPrec != null) {  hiPrec[0] = tempA; hiPrec[1] = tempC*extra*z + tempC*extra + tempC*z + tempB; } return result; } [CLASS] FastMath ExpIntTable ExpFracTable lnMant CodyWaite [METHOD] exp [RETURN_TYPE] double  double x double extra double[] hiPrec [VARIABLES] boolean RECOMPUTE_TABLES_AT_RUNTIME negate negative double[] CBRTTWO COSINE_TABLE_A COSINE_TABLE_B EIGHTHS EXP_FRAC_TABLE_A EXP_FRAC_TABLE_B EXP_INT_TABLE_A EXP_INT_TABLE_B SINE_TABLE_A SINE_TABLE_B TANGENT_TABLE_A TANGENT_TABLE_B hiPrec long[] PI_O_4_BITS RECIP_2PI double E F_11_12 F_13_14 F_15_16 F_1_11 F_1_13 F_1_15 F_1_17 F_1_2 F_1_3 F_1_4 F_1_5 F_1_7 F_1_9 F_3_4 F_5_6 F_7_8 F_9_10 LN_2_A LN_2_B PI TWO_POWER_52 a a2 absAsinh absAtanh b d da daa dab db denom denomb denomr epsilon extra finalRemA finalRemB fracPartA fracPartB intPartA intPartB na nb ra ratio ratioa ratiob rb recip recipa recipb remA remB result temp tempA tempB tempC x xa xb ya yaa yab yb z za zb double[][] LN_HI_PREC_COEF LN_MANT LN_QUICK_COEF int EXP_FRAC_TABLE_LEN EXP_INT_TABLE_LEN EXP_INT_TABLE_MAX_INDEX LN_MANT_LEN SINE_TABLE_LEN finalK intFrac intVal k long HEX_40000000 MASK_30BITS xl  	projects/Math16/src/main/java/org/apache/commons/math3/util/FastMath.java	0.4082482904638631	928	928	2	add	
75	[BUG] [BUGGY] return result; [FE] AssertionError [CONTEXT] } else { result = tempC*z + tempB + tempA; } if (hiPrec != null) {  hiPrec[0] = tempA; hiPrec[1] = tempC*extra*z + tempC*extra + tempC*z + tempB; } [BUGGY] return result; [BUGGY] } [CLASS] FastMath ExpIntTable ExpFracTable lnMant CodyWaite [METHOD] exp [RETURN_TYPE] double  double x double extra double[] hiPrec [VARIABLES] boolean RECOMPUTE_TABLES_AT_RUNTIME negate negative double[] CBRTTWO COSINE_TABLE_A COSINE_TABLE_B EIGHTHS EXP_FRAC_TABLE_A EXP_FRAC_TABLE_B EXP_INT_TABLE_A EXP_INT_TABLE_B SINE_TABLE_A SINE_TABLE_B TANGENT_TABLE_A TANGENT_TABLE_B hiPrec long[] PI_O_4_BITS RECIP_2PI double E F_11_12 F_13_14 F_15_16 F_1_11 F_1_13 F_1_15 F_1_17 F_1_2 F_1_3 F_1_4 F_1_5 F_1_7 F_1_9 F_3_4 F_5_6 F_7_8 F_9_10 LN_2_A LN_2_B PI TWO_POWER_52 a a2 absAsinh absAtanh b d da daa dab db denom denomb denomr epsilon extra finalRemA finalRemB fracPartA fracPartB intPartA intPartB na nb ra ratio ratioa ratiob rb recip recipa recipb remA remB result temp tempA tempB tempC x xa xb ya yaa yab yb z za zb double[][] LN_HI_PREC_COEF LN_MANT LN_QUICK_COEF int EXP_FRAC_TABLE_LEN EXP_INT_TABLE_LEN EXP_INT_TABLE_MAX_INDEX LN_MANT_LEN SINE_TABLE_LEN finalK intFrac intVal k long HEX_40000000 MASK_30BITS xl  	projects/Math16/src/main/java/org/apache/commons/math3/util/FastMath.java	0.4082482904638631	934	934	2	replace	
76	[BUG] [BUGGY] [FE] AssertionError [CONTEXT] } else { result = tempC*z + tempB + tempA; } if (hiPrec != null) {  hiPrec[0] = tempA; hiPrec[1] = tempC*extra*z + tempC*extra + tempC*z + tempB; } [BUGGY] [BUGGY] return result; } [CLASS] FastMath ExpIntTable ExpFracTable lnMant CodyWaite [METHOD] exp [RETURN_TYPE] double  double x double extra double[] hiPrec [VARIABLES] boolean RECOMPUTE_TABLES_AT_RUNTIME negate negative double[] CBRTTWO COSINE_TABLE_A COSINE_TABLE_B EIGHTHS EXP_FRAC_TABLE_A EXP_FRAC_TABLE_B EXP_INT_TABLE_A EXP_INT_TABLE_B SINE_TABLE_A SINE_TABLE_B TANGENT_TABLE_A TANGENT_TABLE_B hiPrec long[] PI_O_4_BITS RECIP_2PI double E F_11_12 F_13_14 F_15_16 F_1_11 F_1_13 F_1_15 F_1_17 F_1_2 F_1_3 F_1_4 F_1_5 F_1_7 F_1_9 F_3_4 F_5_6 F_7_8 F_9_10 LN_2_A LN_2_B PI TWO_POWER_52 a a2 absAsinh absAtanh b d da daa dab db denom denomb denomr epsilon extra finalRemA finalRemB fracPartA fracPartB intPartA intPartB na nb ra ratio ratioa ratiob rb recip recipa recipb remA remB result temp tempA tempB tempC x xa xb ya yaa yab yb z za zb double[][] LN_HI_PREC_COEF LN_MANT LN_QUICK_COEF int EXP_FRAC_TABLE_LEN EXP_INT_TABLE_LEN EXP_INT_TABLE_MAX_INDEX LN_MANT_LEN SINE_TABLE_LEN finalK intFrac intVal k long HEX_40000000 MASK_30BITS xl  	projects/Math16/src/main/java/org/apache/commons/math3/util/FastMath.java	0.4082482904638631	934	934	2	add	
77	[BUG] [BUGGY] if (x < -20) { [FE] AssertionError [CONTEXT]     if (x > 20) {  return 0.5 * exp(x); } [BUGGY] if (x < -20) { [BUGGY]  return 0.5 * exp(-x); } final double hiPrec[] = new double[2]; if (x < 0.0) { x = -x; } exp(x, 0.0, hiPrec);  [CLASS] FastMath ExpIntTable ExpFracTable lnMant CodyWaite [METHOD] cosh [RETURN_TYPE] double  double x [VARIABLES] boolean RECOMPUTE_TABLES_AT_RUNTIME double[] CBRTTWO COSINE_TABLE_A COSINE_TABLE_B EIGHTHS EXP_FRAC_TABLE_A EXP_FRAC_TABLE_B EXP_INT_TABLE_A EXP_INT_TABLE_B SINE_TABLE_A SINE_TABLE_B TANGENT_TABLE_A TANGENT_TABLE_B hiPrec long[] PI_O_4_BITS RECIP_2PI double E F_11_12 F_13_14 F_15_16 F_1_11 F_1_13 F_1_15 F_1_17 F_1_2 F_1_3 F_1_4 F_1_5 F_1_7 F_1_9 F_3_4 F_5_6 F_7_8 F_9_10 LN_2_A LN_2_B PI TWO_POWER_52 a b d finalRemA finalRemB recip recipa recipb remA remB result temp x xa xb ya yaa yab yb double[][] LN_HI_PREC_COEF LN_MANT LN_QUICK_COEF int EXP_FRAC_TABLE_LEN EXP_INT_TABLE_LEN EXP_INT_TABLE_MAX_INDEX LN_MANT_LEN SINE_TABLE_LEN finalK k long HEX_40000000 MASK_30BITS xl  	projects/Math16/src/main/java/org/apache/commons/math3/util/FastMath.java	0.35355339059327373	397	397	2	replace	
78	[BUG] [BUGGY] [FE] AssertionError [CONTEXT]     if (x > 20) {  return 0.5 * exp(x); } [BUGGY] [BUGGY] if (x < -20) {  return 0.5 * exp(-x); } final double hiPrec[] = new double[2]; if (x < 0.0) { x = -x; } exp(x, 0.0, hiPrec);  [CLASS] FastMath ExpIntTable ExpFracTable lnMant CodyWaite [METHOD] cosh [RETURN_TYPE] double  double x [VARIABLES] boolean RECOMPUTE_TABLES_AT_RUNTIME double[] CBRTTWO COSINE_TABLE_A COSINE_TABLE_B EIGHTHS EXP_FRAC_TABLE_A EXP_FRAC_TABLE_B EXP_INT_TABLE_A EXP_INT_TABLE_B SINE_TABLE_A SINE_TABLE_B TANGENT_TABLE_A TANGENT_TABLE_B hiPrec long[] PI_O_4_BITS RECIP_2PI double E F_11_12 F_13_14 F_15_16 F_1_11 F_1_13 F_1_15 F_1_17 F_1_2 F_1_3 F_1_4 F_1_5 F_1_7 F_1_9 F_3_4 F_5_6 F_7_8 F_9_10 LN_2_A LN_2_B PI TWO_POWER_52 a b d finalRemA finalRemB recip recipa recipb remA remB result temp x xa xb ya yaa yab yb double[][] LN_HI_PREC_COEF LN_MANT LN_QUICK_COEF int EXP_FRAC_TABLE_LEN EXP_INT_TABLE_LEN EXP_INT_TABLE_MAX_INDEX LN_MANT_LEN SINE_TABLE_LEN finalK k long HEX_40000000 MASK_30BITS xl  	projects/Math16/src/main/java/org/apache/commons/math3/util/FastMath.java	0.35355339059327373	397	397	2	add	
79	[BUG] [BUGGY] private static final double LN_QUICK_COEF[][] = { [FE] AssertionError [CONTEXT] [BUGGY] private static final double LN_QUICK_COEF[][] = { [BUGGY] {1.0, 5.669184079525E-24}, {-0.25, -0.25}, {0.3333333134651184, 1.986821492305628E-8}, {-0.25, -6.663542893624021E-14}, {0.19999998807907104, 1.1921056801463227E-8}, {-0.1666666567325592, -7.800414592973399E-9}, {0.1428571343421936, 5.650007086920087E-9}, {-0.12502530217170715, -7.44321345601866E-11}, {0.11113807559013367, 9.219544613762692E-9}, }; [CLASS] FastMath ExpIntTable ExpFracTable lnMant CodyWaite  [VARIABLES] 	projects/Math16/src/main/java/org/apache/commons/math3/util/FastMath.java	0.20851441405707477	114	114	2	replace	
80	[BUG] [BUGGY] [FE] AssertionError [CONTEXT] [BUGGY] [BUGGY] private static final double LN_QUICK_COEF[][] = { {1.0, 5.669184079525E-24}, {-0.25, -0.25}, {0.3333333134651184, 1.986821492305628E-8}, {-0.25, -6.663542893624021E-14}, {0.19999998807907104, 1.1921056801463227E-8}, {-0.1666666567325592, -7.800414592973399E-9}, {0.1428571343421936, 5.650007086920087E-9}, {-0.12502530217170715, -7.44321345601866E-11}, {0.11113807559013367, 9.219544613762692E-9}, }; [CLASS] FastMath ExpIntTable ExpFracTable lnMant CodyWaite  [VARIABLES] 	projects/Math16/src/main/java/org/apache/commons/math3/util/FastMath.java	0.20851441405707477	114	114	2	add	
81	[BUG] [BUGGY] private static final double LN_HI_PREC_COEF[][] = { [FE] AssertionError [CONTEXT] [BUGGY] private static final double LN_HI_PREC_COEF[][] = { [BUGGY] {1.0, -6.032174644509064E-23}, {-0.25, -0.25}, {0.3333333134651184, 1.9868161777724352E-8}, {-0.2499999701976776, -2.957007209750105E-8}, {0.19999954104423523, 1.5830993332061267E-10}, {-0.16624879837036133, -2.6033824355191673E-8} }; [CLASS] FastMath ExpIntTable ExpFracTable lnMant CodyWaite  [VARIABLES] 	projects/Math16/src/main/java/org/apache/commons/math3/util/FastMath.java	0.20851441405707477	127	127	2	replace	
82	[BUG] [BUGGY] [FE] AssertionError [CONTEXT] [BUGGY] [BUGGY] private static final double LN_HI_PREC_COEF[][] = { {1.0, -6.032174644509064E-23}, {-0.25, -0.25}, {0.3333333134651184, 1.9868161777724352E-8}, {-0.2499999701976776, -2.957007209750105E-8}, {0.19999954104423523, 1.5830993332061267E-10}, {-0.16624879837036133, -2.6033824355191673E-8} }; [CLASS] FastMath ExpIntTable ExpFracTable lnMant CodyWaite  [VARIABLES] 	projects/Math16/src/main/java/org/apache/commons/math3/util/FastMath.java	0.20851441405707477	127	127	2	add	
83	[BUG] [BUGGY] private static final double SINE_TABLE_A[] = { [FE] AssertionError [CONTEXT] [BUGGY] private static final double SINE_TABLE_A[] =  { [BUGGY] { +0.0d, +0.1246747374534607d, +0.24740394949913025d, +0.366272509098053d, +0.4794255495071411d, +0.5850973129272461d, +0.6816387176513672d, +0.7675435543060303d, +0.8414709568023682d, [CLASS] FastMath ExpIntTable ExpFracTable lnMant CodyWaite  [VARIABLES] 	projects/Math16/src/main/java/org/apache/commons/math3/util/FastMath.java	0.20851441405707477	140	141	2	replace	
84	[BUG] [BUGGY] [FE] AssertionError [CONTEXT] [BUGGY] [BUGGY] private static final double SINE_TABLE_A[] =  { { +0.0d, +0.1246747374534607d, +0.24740394949913025d, +0.366272509098053d, +0.4794255495071411d, +0.5850973129272461d, +0.6816387176513672d, +0.7675435543060303d, +0.8414709568023682d, [CLASS] FastMath ExpIntTable ExpFracTable lnMant CodyWaite  [VARIABLES] 	projects/Math16/src/main/java/org/apache/commons/math3/util/FastMath.java	0.20851441405707477	140	141	2	add	
85	[BUG] [BUGGY] private static final double SINE_TABLE_B[] = { [FE] AssertionError [CONTEXT] [BUGGY] private static final double SINE_TABLE_B[] =  { [BUGGY] { +0.0d, -4.068233003401932E-9d, +9.755392680573412E-9d, +1.9987994582857286E-8d, -1.0902938113007961E-8d, -3.9986783938944604E-8d, +4.23719669792332E-8d, -5.207000323380292E-8d, +2.800552834259E-8d, [CLASS] FastMath ExpIntTable ExpFracTable lnMant CodyWaite  [VARIABLES] 	projects/Math16/src/main/java/org/apache/commons/math3/util/FastMath.java	0.20851441405707477	159	160	2	replace	
86	[BUG] [BUGGY] [FE] AssertionError [CONTEXT] [BUGGY] [BUGGY] private static final double SINE_TABLE_B[] =  { { +0.0d, -4.068233003401932E-9d, +9.755392680573412E-9d, +1.9987994582857286E-8d, -1.0902938113007961E-8d, -3.9986783938944604E-8d, +4.23719669792332E-8d, -5.207000323380292E-8d, +2.800552834259E-8d, [CLASS] FastMath ExpIntTable ExpFracTable lnMant CodyWaite  [VARIABLES] 	projects/Math16/src/main/java/org/apache/commons/math3/util/FastMath.java	0.20851441405707477	159	160	2	add	
87	[BUG] [BUGGY] private static final double COSINE_TABLE_A[] = { [FE] AssertionError [CONTEXT] [BUGGY] private static final double COSINE_TABLE_A[] =  { [BUGGY] { +1.0d, +0.9921976327896118d, +0.9689123630523682d, +0.9305076599121094d, +0.8775825500488281d, +0.8109631538391113d, +0.7316888570785522d, +0.6409968137741089d, +0.5403022766113281d, [CLASS] FastMath ExpIntTable ExpFracTable lnMant CodyWaite  [VARIABLES] 	projects/Math16/src/main/java/org/apache/commons/math3/util/FastMath.java	0.20851441405707477	178	179	2	replace	
88	[BUG] [BUGGY] [FE] AssertionError [CONTEXT] [BUGGY] [BUGGY] private static final double COSINE_TABLE_A[] =  { { +1.0d, +0.9921976327896118d, +0.9689123630523682d, +0.9305076599121094d, +0.8775825500488281d, +0.8109631538391113d, +0.7316888570785522d, +0.6409968137741089d, +0.5403022766113281d, [CLASS] FastMath ExpIntTable ExpFracTable lnMant CodyWaite  [VARIABLES] 	projects/Math16/src/main/java/org/apache/commons/math3/util/FastMath.java	0.20851441405707477	178	179	2	add	
89	[BUG] [BUGGY] private static final double COSINE_TABLE_B[] = { [FE] AssertionError [CONTEXT] [BUGGY] private static final double COSINE_TABLE_B[] =  { [BUGGY] { +0.0d, +3.4439717236742845E-8d, +5.865827662008209E-8d, -3.7999795083850525E-8d, +1.184154459111628E-8d, -3.43338934259355E-8d, +1.1795268640216787E-8d, +4.438921624363781E-8d, +2.925681159240093E-8d, [CLASS] FastMath ExpIntTable ExpFracTable lnMant CodyWaite  [VARIABLES] 	projects/Math16/src/main/java/org/apache/commons/math3/util/FastMath.java	0.20851441405707477	197	198	2	replace	
90	[BUG] [BUGGY] [FE] AssertionError [CONTEXT] [BUGGY] [BUGGY] private static final double COSINE_TABLE_B[] =  { { +0.0d, +3.4439717236742845E-8d, +5.865827662008209E-8d, -3.7999795083850525E-8d, +1.184154459111628E-8d, -3.43338934259355E-8d, +1.1795268640216787E-8d, +4.438921624363781E-8d, +2.925681159240093E-8d, [CLASS] FastMath ExpIntTable ExpFracTable lnMant CodyWaite  [VARIABLES] 	projects/Math16/src/main/java/org/apache/commons/math3/util/FastMath.java	0.20851441405707477	197	198	2	add	
91	[BUG] [BUGGY] private static final double TANGENT_TABLE_A[] = { [FE] AssertionError [CONTEXT] [BUGGY] private static final double TANGENT_TABLE_A[] =  { [BUGGY] { +0.0d, +0.1256551444530487d, +0.25534194707870483d, +0.3936265707015991d, +0.5463024377822876d, +0.7214844226837158d, +0.9315965175628662d, +1.1974215507507324d, +1.5574076175689697d, [CLASS] FastMath ExpIntTable ExpFracTable lnMant CodyWaite  [VARIABLES] 	projects/Math16/src/main/java/org/apache/commons/math3/util/FastMath.java	0.20851441405707477	217	218	2	replace	
92	[BUG] [BUGGY] [FE] AssertionError [CONTEXT] [BUGGY] [BUGGY] private static final double TANGENT_TABLE_A[] =  { { +0.0d, +0.1256551444530487d, +0.25534194707870483d, +0.3936265707015991d, +0.5463024377822876d, +0.7214844226837158d, +0.9315965175628662d, +1.1974215507507324d, +1.5574076175689697d, [CLASS] FastMath ExpIntTable ExpFracTable lnMant CodyWaite  [VARIABLES] 	projects/Math16/src/main/java/org/apache/commons/math3/util/FastMath.java	0.20851441405707477	217	218	2	add	
93	[BUG] [BUGGY] private static final double TANGENT_TABLE_B[] = { [FE] AssertionError [CONTEXT] [BUGGY] private static final double TANGENT_TABLE_B[] =  { [BUGGY] { +0.0d, -7.877917738262007E-9d, -2.5857668567479893E-8d, +5.2240336371356666E-9d, +5.206150291559893E-8d, +1.8307188599677033E-8d, -5.7618793749770706E-8d, +7.848361555046424E-8d, +1.0708593250394448E-7d, [CLASS] FastMath ExpIntTable ExpFracTable lnMant CodyWaite  [VARIABLES] 	projects/Math16/src/main/java/org/apache/commons/math3/util/FastMath.java	0.20851441405707477	236	237	2	replace	
94	[BUG] [BUGGY] [FE] AssertionError [CONTEXT] [BUGGY] [BUGGY] private static final double TANGENT_TABLE_B[] =  { { +0.0d, -7.877917738262007E-9d, -2.5857668567479893E-8d, +5.2240336371356666E-9d, +5.206150291559893E-8d, +1.8307188599677033E-8d, -5.7618793749770706E-8d, +7.848361555046424E-8d, +1.0708593250394448E-7d, [CLASS] FastMath ExpIntTable ExpFracTable lnMant CodyWaite  [VARIABLES] 	projects/Math16/src/main/java/org/apache/commons/math3/util/FastMath.java	0.20851441405707477	236	237	2	add	
95	[BUG] [BUGGY] private static final long RECIP_2PI[] = new long[] { [FE] AssertionError [CONTEXT] [BUGGY] private static final long RECIP_2PI[] = new long[] { [BUGGY] (0x28be60dbL << 32) | 0x9391054aL, (0x7f09d5f4L << 32) | 0x7d4d3770L, (0x36d8a566L << 32) | 0x4f10e410L, (0x7f9458eaL << 32) | 0xf7aef158L, (0x6dc91b8eL << 32) | 0x909374b8L, (0x01924bbaL << 32) | 0x82746487L, (0x3f877ac7L << 32) | 0x2c4a69cfL, (0xba208d7dL << 32) | 0x4baed121L, (0x3a671c09L << 32) | 0xad17df90L, (0x4e64758eL << 32) | 0x60d4ce7dL, [CLASS] FastMath ExpIntTable ExpFracTable lnMant CodyWaite  [VARIABLES] 	projects/Math16/src/main/java/org/apache/commons/math3/util/FastMath.java	0.20851441405707477	255	255	2	replace	
96	[BUG] [BUGGY] [FE] AssertionError [CONTEXT] [BUGGY] [BUGGY] private static final long RECIP_2PI[] = new long[] { (0x28be60dbL << 32) | 0x9391054aL, (0x7f09d5f4L << 32) | 0x7d4d3770L, (0x36d8a566L << 32) | 0x4f10e410L, (0x7f9458eaL << 32) | 0xf7aef158L, (0x6dc91b8eL << 32) | 0x909374b8L, (0x01924bbaL << 32) | 0x82746487L, (0x3f877ac7L << 32) | 0x2c4a69cfL, (0xba208d7dL << 32) | 0x4baed121L, (0x3a671c09L << 32) | 0xad17df90L, (0x4e64758eL << 32) | 0x60d4ce7dL, [CLASS] FastMath ExpIntTable ExpFracTable lnMant CodyWaite  [VARIABLES] 	projects/Math16/src/main/java/org/apache/commons/math3/util/FastMath.java	0.20851441405707477	255	255	2	add	
97	[BUG] [BUGGY] private static final long PI_O_4_BITS[] = new long[] { [FE] AssertionError [CONTEXT] [BUGGY] private static final long PI_O_4_BITS[] = new long[] { [BUGGY] (0xc90fdaa2L << 32) | 0x2168c234L, (0xc4c6628bL << 32) | 0x80dc1cd1L }; [CLASS] FastMath ExpIntTable ExpFracTable lnMant CodyWaite  [VARIABLES] 	projects/Math16/src/main/java/org/apache/commons/math3/util/FastMath.java	0.20851441405707477	276	276	2	replace	
98	[BUG] [BUGGY] [FE] AssertionError [CONTEXT] [BUGGY] [BUGGY] private static final long PI_O_4_BITS[] = new long[] { (0xc90fdaa2L << 32) | 0x2168c234L, (0xc4c6628bL << 32) | 0x80dc1cd1L }; [CLASS] FastMath ExpIntTable ExpFracTable lnMant CodyWaite  [VARIABLES] 	projects/Math16/src/main/java/org/apache/commons/math3/util/FastMath.java	0.20851441405707477	276	276	2	add	
99	[BUG] [BUGGY] private static final double EIGHTHS[] = {0, 0.125, 0.25, 0.375, 0.5, 0.625, 0.75, 0.875, 1.0, 1.125, 1.25, 1.375, 1.5, 1.625}; [FE] AssertionError [CONTEXT] [BUGGY] private static final double EIGHTHS[] = {0, 0.125, 0.25, 0.375, 0.5, 0.625, 0.75, 0.875, 1.0, 1.125, 1.25, 1.375, 1.5, 1.625}; [BUGGY]  [CLASS] FastMath ExpIntTable ExpFracTable lnMant CodyWaite  [VARIABLES] 	projects/Math16/src/main/java/org/apache/commons/math3/util/FastMath.java	0.20851441405707477	284	284	2	replace	
100	[BUG] [BUGGY] [FE] AssertionError [CONTEXT] [BUGGY] [BUGGY] private static final double EIGHTHS[] = {0, 0.125, 0.25, 0.375, 0.5, 0.625, 0.75, 0.875, 1.0, 1.125, 1.25, 1.375, 1.5, 1.625}; [CLASS] FastMath ExpIntTable ExpFracTable lnMant CodyWaite  [VARIABLES] 	projects/Math16/src/main/java/org/apache/commons/math3/util/FastMath.java	0.20851441405707477	284	284	2	add	
