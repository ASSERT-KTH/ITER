bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  bits  =  a;  [CE]  <identifier>  expected  [FE]                  AssertionError      [CONTEXT]      }  if  (a  <  b)  {  return  b;  }  if  (a  !=  b)  {  return  Double.NaN;  }        [BUGGY]  bits  =  a;  [BUGGY]      if  (bits  ==  0x8000000000000000L)  {  return  b;  }  return  a;  }  [CLASS]  FastMath  ExpIntTable  ExpFracTable  lnMant  CodyWaite  [METHOD]  max  [RETURN_TYPE]  double  final  double  a  final  double  b  [VARIABLES]  boolean  RECOMPUTE_TABLES_AT_RUNTIME  bita  bitb  bitsum  cotanFlag  leftPlane  negate  negative  subnormal  double[]  CBRTTWO  COSINE_TABLE_A  COSINE_TABLE_B  EIGHTHS  EXP_FRAC_TABLE_A  EXP_FRAC_TABLE_B  EXP_INT_TABLE_A  EXP_INT_TABLE_B  SINE_TABLE_A  SINE_TABLE_B  TANGENT_TABLE_A  TANGENT_TABLE_B  hiPrec  hiPrecOut  lnCoef_i  lnCoef_last  lnm  lns  reduceResults  result  long[]  PI_O_4_BITS  RECIP_2PI  double  E  F_11_12  F_13_14  F_15_16  F_1_11  F_1_13  F_1_15  F_1_17  F_1_2  F_1_3  F_1_4  F_1_5  F_1_7  F_1_9  F_3_4  F_5_6  F_7_8  F_9_10  LN_2_A  LN_2_B  PI  TWO_POWER_52  a  a2  aa  ab  absAsinh  absAtanh  b  base  baseA  baseB  c  cD2pH  cRH  cTmpH  cd  cosEpsA  cosEpsB  cosa  cosaa  cosab  cosb  costA  costB  d  d1High  d1Low  d2p  d2pHH  d2pHL  d2pHigh  d2pLow  da  daa  dab  db  denom  denomb  denomr  direction  dx  epsA  epsA2  epsB  epsilon  err  est  esta  estb  extra  facta  factb  finalRemA  finalRemB  fracPartA  fracPartB  fx1  intPartA  intPartB  invx  invy  lna  lnb  lnza  lnzb  lores  mant  na  nb  numer  oneOverXa  p  p2  pi2a  pi2b  pia  pib  r  rHH  rHL  ra  ratio  ratioa  ratiob  rb  recip  recipa  recipb  remA  remB  result  resultHigh  resultLow  resultb  rln10a  rln10b  sinEpsA  sinEpsB  sina  sinb  sintA  sintB  sumA  sumB  t  temp  temp2  tempA  tempB  tempC  tmp  tmp1  tmp2  tmpA  tmpB  tmpHigh  tmpLow  x  x2  xa  xb  xbadj  xpa  xpb  xs  y  ya  yaa  yab  yb  z  za  zaa  zab  zb  double[][]  LN_HI_PREC_COEF  LN_MANT  LN_QUICK_COEF  int  EXP_FRAC_TABLE_LEN  EXP_INT_TABLE_LEN  EXP_INT_TABLE_MAX_INDEX  LN_MANT_LEN  SINE_TABLE_LEN  a  b  bits  e  exp  exp3  exponent  finalK  i  idx  intFrac  intPart  intVal  k  mantissa  mostSignificantLostBit  n  quadrant  scaledExponent  shift  sign  splitFactor  x  long  HEX_40000000  MASK_30BITS  a  ac  ad  b  bc  bd  bits  c  d  inbits  mantissa  mostSignificantLostBit  prod2A  prod2B  prodA  prodB  shpi0  shpiA  shpiB  sign  x  xl  y  yi  z  	projects/Math16/src/main/java/org/apache/commons/math3/util/FastMath.java	0.7071067811865475	3522	3522	2	replace	bits  =  a;	  bits    =    bits.length;    	non-compiled	[CE]  <identifier>  expected	10	None	replace
2	[BUG]  [BUGGY]  bits  =  a.length;  [CE]  <identifier>  expected  [FE]                    AssertionError      [CONTEXT]      }  if  (a  <  b)  {  return  b;  }  if  (a  !=  b)  {  return  Double.NaN;  }        [BUGGY]  bits  =  a.length;  [BUGGY]      if  (bits  ==  0x8000000000000000L)  {  return  b;  }  return  a;  }  [CLASS]  FastMath  ExpIntTable  ExpFracTable  lnMant  CodyWaite  [METHOD]  max  [RETURN_TYPE]  double  final  double  a  final  double  b  [VARIABLES]  boolean  RECOMPUTE_TABLES_AT_RUNTIME  bita  bitb  bitsum  cotanFlag  leftPlane  negate  negative  subnormal  double[]  CBRTTWO  COSINE_TABLE_A  COSINE_TABLE_B  EIGHTHS  EXP_FRAC_TABLE_A  EXP_FRAC_TABLE_B  EXP_INT_TABLE_A  EXP_INT_TABLE_B  SINE_TABLE_A  SINE_TABLE_B  TANGENT_TABLE_A  TANGENT_TABLE_B  hiPrec  hiPrecOut  lnCoef_i  lnCoef_last  lnm  lns  reduceResults  result  long[]  PI_O_4_BITS  RECIP_2PI  double  E  F_11_12  F_13_14  F_15_16  F_1_11  F_1_13  F_1_15  F_1_17  F_1_2  F_1_3  F_1_4  F_1_5  F_1_7  F_1_9  F_3_4  F_5_6  F_7_8  F_9_10  LN_2_A  LN_2_B  PI  TWO_POWER_52  a  a2  aa  ab  absAsinh  absAtanh  b  base  baseA  baseB  c  cD2pH  cRH  cTmpH  cd  cosEpsA  cosEpsB  cosa  cosaa  cosab  cosb  costA  costB  d  d1High  d1Low  d2p  d2pHH  d2pHL  d2pHigh  d2pLow  da  daa  dab  db  denom  denomb  denomr  direction  dx  epsA  epsA2  epsB  epsilon  err  est  esta  estb  extra  facta  factb  finalRemA  finalRemB  fracPartA  fracPartB  fx1  intPartA  intPartB  invx  invy  lna  lnb  lnza  lnzb  lores  mant  na  nb  numer  oneOverXa  p  p2  pi2a  pi2b  pia  pib  r  rHH  rHL  ra  ratio  ratioa  ratiob  rb  recip  recipa  recipb  remA  remB  result  resultHigh  resultLow  resultb  rln10a  rln10b  sinEpsA  sinEpsB  sina  sinb  sintA  sintB  sumA  sumB  t  temp  temp2  tempA  tempB  tempC  tmp  tmp1  tmp2  tmpA  tmpB  tmpHigh  tmpLow  x  x2  xa  xb  xbadj  xpa  xpb  xs  y  ya  yaa  yab  yb  z  za  zaa  zab  zb  double[][]  LN_HI_PREC_COEF  LN_MANT  LN_QUICK_COEF  int  EXP_FRAC_TABLE_LEN  EXP_INT_TABLE_LEN  EXP_INT_TABLE_MAX_INDEX  LN_MANT_LEN  SINE_TABLE_LEN  a  b  bits  e  exp  exp3  exponent  finalK  i  idx  intFrac  intPart  intVal  k  mantissa  mostSignificantLostBit  n  quadrant  scaledExponent  shift  sign  splitFactor  x  long  HEX_40000000  MASK_30BITS  a  ac  ad  b  bc  bd  bits  c  d  inbits  mantissa  mostSignificantLostBit  prod2A  prod2B  prodA  prodB  shpi0  shpiA  shpiB  sign  x  xl  y  yi  z  	projects/Math16/src/main/java/org/apache/commons/math3/util/FastMath.java	0.7071067811865475	3522	3522	2	replace	bits  =  a.length;	  bits    =    bits.length;    	non-compiled	[CE]  <identifier>  expected	10	None	replace
3	[BUG]  [BUGGY]  if(bits  <  0x800000000000L)  {  bits  =  Double.doubleToRawLongBits(a);  if  (bits  ==  0x800000000000000L)  {  return  b;  }  [CE]  <identifier>  expected  [FE]                AssertionError      [CONTEXT]      }  if  (a  <  b)  {  return  b;  }  if  (a  !=  b)  {  return  Double.NaN;  }        [BUGGY]  if(bits  <  0x800000000000L)  {  bits  =  Double.doubleToRawLongBits(a);  if  (bits  ==  0x800000000000000L)  {  return  b;  }  [BUGGY]      long  bits  =  Double.doubleToRawLongBits(a);  if  (bits  ==  0x8000000000000000L)  {  return  b;  }  return  a;  }  [CLASS]  FastMath  ExpIntTable  ExpFracTable  lnMant  CodyWaite  [METHOD]  max  [RETURN_TYPE]  double  final  double  a  final  double  b  [VARIABLES]  boolean  RECOMPUTE_TABLES_AT_RUNTIME  bita  bitb  bitsum  cotanFlag  leftPlane  negate  negative  subnormal  double[]  CBRTTWO  COSINE_TABLE_A  COSINE_TABLE_B  EIGHTHS  EXP_FRAC_TABLE_A  EXP_FRAC_TABLE_B  EXP_INT_TABLE_A  EXP_INT_TABLE_B  SINE_TABLE_A  SINE_TABLE_B  TANGENT_TABLE_A  TANGENT_TABLE_B  hiPrec  hiPrecOut  lnCoef_i  lnCoef_last  lnm  lns  reduceResults  result  long[]  PI_O_4_BITS  RECIP_2PI  double  E  F_11_12  F_13_14  F_15_16  F_1_11  F_1_13  F_1_15  F_1_17  F_1_2  F_1_3  F_1_4  F_1_5  F_1_7  F_1_9  F_3_4  F_5_6  F_7_8  F_9_10  LN_2_A  LN_2_B  PI  TWO_POWER_52  a  a2  aa  ab  absAsinh  absAtanh  b  base  baseA  baseB  c  cD2pH  cRH  cTmpH  cd  cosEpsA  cosEpsB  cosa  cosaa  cosab  cosb  costA  costB  d  d1High  d1Low  d2p  d2pHH  d2pHL  d2pHigh  d2pLow  da  daa  dab  db  denom  denomb  denomr  direction  dx  epsA  epsA2  epsB  epsilon  err  est  esta  estb  extra  facta  factb  finalRemA  finalRemB  fracPartA  fracPartB  fx1  intPartA  intPartB  invx  invy  lna  lnb  lnza  lnzb  lores  mant  na  nb  numer  oneOverXa  p  p2  pi2a  pi2b  pia  pib  r  rHH  rHL  ra  ratio  ratioa  ratiob  rb  recip  recipa  recipb  remA  remB  result  resultHigh  resultLow  resultb  rln10a  rln10b  sinEpsA  sinEpsB  sina  sinb  sintA  sintB  sumA  sumB  t  temp  temp2  tempA  tempB  tempC  tmp  tmp1  tmp2  tmpA  tmpB  tmpHigh  tmpLow  x  x2  xa  xb  xbadj  xpa  xpb  xs  y  ya  yaa  yab  yb  z  za  zaa  zab  zb  double[][]  LN_HI_PREC_COEF  LN_MANT  LN_QUICK_COEF  int  EXP_FRAC_TABLE_LEN  EXP_INT_TABLE_LEN  EXP_INT_TABLE_MAX_INDEX  LN_MANT_LEN  SINE_TABLE_LEN  a  b  bits  e  exp  exp3  exponent  finalK  i  idx  intFrac  intPart  intVal  k  mantissa  mostSignificantLostBit  n  quadrant  scaledExponent  shift  sign  splitFactor  x  long  HEX_40000000  MASK_30BITS  a  ac  ad  b  bc  bd  bits  c  d  inbits  mantissa  mostSignificantLostBit  prod2A  prod2B  prodA  prodB  shpi0  shpiA  shpiB  sign  x  xl  y  yi  z  	projects/Math16/src/main/java/org/apache/commons/math3/util/FastMath.java	0.7071067811865475	3522	3522	2	replace	if(bits  <  0x800000000000L)  {  bits  =  Double.doubleToRawLongBits(a);  if  (bits  ==  0x800000000000000L)  {  return  b;  }	  if(a    <    b)    {    if(bits    <    0x800000000000L)    {    bits    =    Double.doubleToRawLongBits(a);    if    (bits    ==    0x800000000000000L)    {    return    b;    }    	non-compiled	[CE]  <identifier>  expected	2	None	replace
4	[BUG]  [BUGGY]  if(a  <  b)  {  bits  =  Double.doubleToRawLongBits(a);  if  (bits  ==  0x800000000000000L)  {  return  b;  }  [CE]  <identifier>  expected  [FE]                  AssertionError      [CONTEXT]      }  if  (a  <  b)  {  return  b;  }  if  (a  !=  b)  {  return  Double.NaN;  }        [BUGGY]  if(a  <  b)  {  bits  =  Double.doubleToRawLongBits(a);  if  (bits  ==  0x800000000000000L)  {  return  b;  }  [BUGGY]      long  bits  =  Double.doubleToRawLongBits(a);  if  (bits  ==  0x8000000000000000L)  {  return  b;  }  return  a;  }  [CLASS]  FastMath  ExpIntTable  ExpFracTable  lnMant  CodyWaite  [METHOD]  max  [RETURN_TYPE]  double  final  double  a  final  double  b  [VARIABLES]  boolean  RECOMPUTE_TABLES_AT_RUNTIME  bita  bitb  bitsum  cotanFlag  leftPlane  negate  negative  subnormal  double[]  CBRTTWO  COSINE_TABLE_A  COSINE_TABLE_B  EIGHTHS  EXP_FRAC_TABLE_A  EXP_FRAC_TABLE_B  EXP_INT_TABLE_A  EXP_INT_TABLE_B  SINE_TABLE_A  SINE_TABLE_B  TANGENT_TABLE_A  TANGENT_TABLE_B  hiPrec  hiPrecOut  lnCoef_i  lnCoef_last  lnm  lns  reduceResults  result  long[]  PI_O_4_BITS  RECIP_2PI  double  E  F_11_12  F_13_14  F_15_16  F_1_11  F_1_13  F_1_15  F_1_17  F_1_2  F_1_3  F_1_4  F_1_5  F_1_7  F_1_9  F_3_4  F_5_6  F_7_8  F_9_10  LN_2_A  LN_2_B  PI  TWO_POWER_52  a  a2  aa  ab  absAsinh  absAtanh  b  base  baseA  baseB  c  cD2pH  cRH  cTmpH  cd  cosEpsA  cosEpsB  cosa  cosaa  cosab  cosb  costA  costB  d  d1High  d1Low  d2p  d2pHH  d2pHL  d2pHigh  d2pLow  da  daa  dab  db  denom  denomb  denomr  direction  dx  epsA  epsA2  epsB  epsilon  err  est  esta  estb  extra  facta  factb  finalRemA  finalRemB  fracPartA  fracPartB  fx1  intPartA  intPartB  invx  invy  lna  lnb  lnza  lnzb  lores  mant  na  nb  numer  oneOverXa  p  p2  pi2a  pi2b  pia  pib  r  rHH  rHL  ra  ratio  ratioa  ratiob  rb  recip  recipa  recipb  remA  remB  result  resultHigh  resultLow  resultb  rln10a  rln10b  sinEpsA  sinEpsB  sina  sinb  sintA  sintB  sumA  sumB  t  temp  temp2  tempA  tempB  tempC  tmp  tmp1  tmp2  tmpA  tmpB  tmpHigh  tmpLow  x  x2  xa  xb  xbadj  xpa  xpb  xs  y  ya  yaa  yab  yb  z  za  zaa  zab  zb  double[][]  LN_HI_PREC_COEF  LN_MANT  LN_QUICK_COEF  int  EXP_FRAC_TABLE_LEN  EXP_INT_TABLE_LEN  EXP_INT_TABLE_MAX_INDEX  LN_MANT_LEN  SINE_TABLE_LEN  a  b  bits  e  exp  exp3  exponent  finalK  i  idx  intFrac  intPart  intVal  k  mantissa  mostSignificantLostBit  n  quadrant  scaledExponent  shift  sign  splitFactor  x  long  HEX_40000000  MASK_30BITS  a  ac  ad  b  bc  bd  bits  c  d  inbits  mantissa  mostSignificantLostBit  prod2A  prod2B  prodA  prodB  shpi0  shpiA  shpiB  sign  x  xl  y  yi  z  	projects/Math16/src/main/java/org/apache/commons/math3/util/FastMath.java	0.7071067811865475	3522	3522	2	replace	if(a  <  b)  {  bits  =  Double.doubleToRawLongBits(a);  if  (bits  ==  0x800000000000000L)  {  return  b;  }	  if(a    <    b)    {    if(bits    <    0x800000000000L)    {    bits    =    Double.doubleToRawLongBits(a);    if    (bits    ==    0x800000000000000L)    {    return    b;    }    	non-compiled	[CE]  <identifier>  expected	2	None	replace
5	[BUG]  [BUGGY]  char  bits  =  Double.doubleToLongBits(b);  [CE]  <identifier>  expected  [FE]              AssertionError      [CONTEXT]      }  if  (a  <  b)  {  return  b;  }  if  (a  !=  b)  {  return  Double.NaN;  }        [BUGGY]  char  bits  =  Double.doubleToLongBits(b);  [BUGGY]      if  (bits  ==  0x8000000000000000L)  {  return  b;  }  return  a;  }  [CLASS]  FastMath  ExpIntTable  ExpFracTable  lnMant  CodyWaite  [METHOD]  max  [RETURN_TYPE]  double  final  double  a  final  double  b  [VARIABLES]  boolean  RECOMPUTE_TABLES_AT_RUNTIME  bita  bitb  bitsum  cotanFlag  leftPlane  negate  negative  subnormal  double[]  CBRTTWO  COSINE_TABLE_A  COSINE_TABLE_B  EIGHTHS  EXP_FRAC_TABLE_A  EXP_FRAC_TABLE_B  EXP_INT_TABLE_A  EXP_INT_TABLE_B  SINE_TABLE_A  SINE_TABLE_B  TANGENT_TABLE_A  TANGENT_TABLE_B  hiPrec  hiPrecOut  lnCoef_i  lnCoef_last  lnm  lns  reduceResults  result  long[]  PI_O_4_BITS  RECIP_2PI  double  E  F_11_12  F_13_14  F_15_16  F_1_11  F_1_13  F_1_15  F_1_17  F_1_2  F_1_3  F_1_4  F_1_5  F_1_7  F_1_9  F_3_4  F_5_6  F_7_8  F_9_10  LN_2_A  LN_2_B  PI  TWO_POWER_52  a  a2  aa  ab  absAsinh  absAtanh  b  base  baseA  baseB  c  cD2pH  cRH  cTmpH  cd  cosEpsA  cosEpsB  cosa  cosaa  cosab  cosb  costA  costB  d  d1High  d1Low  d2p  d2pHH  d2pHL  d2pHigh  d2pLow  da  daa  dab  db  denom  denomb  denomr  direction  dx  epsA  epsA2  epsB  epsilon  err  est  esta  estb  extra  facta  factb  finalRemA  finalRemB  fracPartA  fracPartB  fx1  intPartA  intPartB  invx  invy  lna  lnb  lnza  lnzb  lores  mant  na  nb  numer  oneOverXa  p  p2  pi2a  pi2b  pia  pib  r  rHH  rHL  ra  ratio  ratioa  ratiob  rb  recip  recipa  recipb  remA  remB  result  resultHigh  resultLow  resultb  rln10a  rln10b  sinEpsA  sinEpsB  sina  sinb  sintA  sintB  sumA  sumB  t  temp  temp2  tempA  tempB  tempC  tmp  tmp1  tmp2  tmpA  tmpB  tmpHigh  tmpLow  x  x2  xa  xb  xbadj  xpa  xpb  xs  y  ya  yaa  yab  yb  z  za  zaa  zab  zb  double[][]  LN_HI_PREC_COEF  LN_MANT  LN_QUICK_COEF  int  EXP_FRAC_TABLE_LEN  EXP_INT_TABLE_LEN  EXP_INT_TABLE_MAX_INDEX  LN_MANT_LEN  SINE_TABLE_LEN  a  b  bits  e  exp  exp3  exponent  finalK  i  idx  intFrac  intPart  intVal  k  mantissa  mostSignificantLostBit  n  quadrant  scaledExponent  shift  sign  splitFactor  x  long  HEX_40000000  MASK_30BITS  a  ac  ad  b  bc  bd  bits  c  d  inbits  mantissa  mostSignificantLostBit  prod2A  prod2B  prodA  prodB  shpi0  shpiA  shpiB  sign  x  xl  y  yi  z  	projects/Math16/src/main/java/org/apache/commons/math3/util/FastMath.java	0.7071067811865475	3522	3522	2	replace	char  bits  =  Double.doubleToLongBits(b);	  int    bits    =    Double.doubleToLongBits(b);    	non-compiled	[CE]  <identifier>  expected	25	None	replace
6	[BUG]  [BUGGY]  if(a  ==  b)  {  long  bits  =  Double.doubleToRawLongBits(a);  if  (bits  ==  0x800000000000L)  {  return  b;  }  [CE]  <identifier>  expected  [FE]            AssertionError      [CONTEXT]      }  if  (a  <  b)  {  return  b;  }  if  (a  !=  b)  {  return  Double.NaN;  }        [BUGGY]  if(a  ==  b)  {  long  bits  =  Double.doubleToRawLongBits(a);  if  (bits  ==  0x800000000000L)  {  return  b;  }  [BUGGY]      long  bits  =  Double.doubleToRawLongBits(a);  if  (bits  ==  0x8000000000000000L)  {  return  b;  }  return  a;  }  [CLASS]  FastMath  ExpIntTable  ExpFracTable  lnMant  CodyWaite  [METHOD]  max  [RETURN_TYPE]  double  final  double  a  final  double  b  [VARIABLES]  boolean  RECOMPUTE_TABLES_AT_RUNTIME  bita  bitb  bitsum  cotanFlag  leftPlane  negate  negative  subnormal  double[]  CBRTTWO  COSINE_TABLE_A  COSINE_TABLE_B  EIGHTHS  EXP_FRAC_TABLE_A  EXP_FRAC_TABLE_B  EXP_INT_TABLE_A  EXP_INT_TABLE_B  SINE_TABLE_A  SINE_TABLE_B  TANGENT_TABLE_A  TANGENT_TABLE_B  hiPrec  hiPrecOut  lnCoef_i  lnCoef_last  lnm  lns  reduceResults  result  long[]  PI_O_4_BITS  RECIP_2PI  double  E  F_11_12  F_13_14  F_15_16  F_1_11  F_1_13  F_1_15  F_1_17  F_1_2  F_1_3  F_1_4  F_1_5  F_1_7  F_1_9  F_3_4  F_5_6  F_7_8  F_9_10  LN_2_A  LN_2_B  PI  TWO_POWER_52  a  a2  aa  ab  absAsinh  absAtanh  b  base  baseA  baseB  c  cD2pH  cRH  cTmpH  cd  cosEpsA  cosEpsB  cosa  cosaa  cosab  cosb  costA  costB  d  d1High  d1Low  d2p  d2pHH  d2pHL  d2pHigh  d2pLow  da  daa  dab  db  denom  denomb  denomr  direction  dx  epsA  epsA2  epsB  epsilon  err  est  esta  estb  extra  facta  factb  finalRemA  finalRemB  fracPartA  fracPartB  fx1  intPartA  intPartB  invx  invy  lna  lnb  lnza  lnzb  lores  mant  na  nb  numer  oneOverXa  p  p2  pi2a  pi2b  pia  pib  r  rHH  rHL  ra  ratio  ratioa  ratiob  rb  recip  recipa  recipb  remA  remB  result  resultHigh  resultLow  resultb  rln10a  rln10b  sinEpsA  sinEpsB  sina  sinb  sintA  sintB  sumA  sumB  t  temp  temp2  tempA  tempB  tempC  tmp  tmp1  tmp2  tmpA  tmpB  tmpHigh  tmpLow  x  x2  xa  xb  xbadj  xpa  xpb  xs  y  ya  yaa  yab  yb  z  za  zaa  zab  zb  double[][]  LN_HI_PREC_COEF  LN_MANT  LN_QUICK_COEF  int  EXP_FRAC_TABLE_LEN  EXP_INT_TABLE_LEN  EXP_INT_TABLE_MAX_INDEX  LN_MANT_LEN  SINE_TABLE_LEN  a  b  bits  e  exp  exp3  exponent  finalK  i  idx  intFrac  intPart  intVal  k  mantissa  mostSignificantLostBit  n  quadrant  scaledExponent  shift  sign  splitFactor  x  long  HEX_40000000  MASK_30BITS  a  ac  ad  b  bc  bd  bits  c  d  inbits  mantissa  mostSignificantLostBit  prod2A  prod2B  prodA  prodB  shpi0  shpiA  shpiB  sign  x  xl  y  yi  z  	projects/Math16/src/main/java/org/apache/commons/math3/util/FastMath.java	0.7071067811865475	3522	3522	2	replace	if(a  ==  b)  {  long  bits  =  Double.doubleToRawLongBits(a);  if  (bits  ==  0x800000000000L)  {  return  b;  }	  if(a    <    b)    {    long    bits    =    Double.doubleToRawLongBits(a);    if    (bits    ==    0x800000000000L)    {    return    b;    }    	non-compiled	[CE]  <identifier>  expected	27	None	replace
7	[BUG]  [BUGGY]  if(bits  ==  0x800000000000000L)  {  return  a;  }  [CE]  <identifier>  expected  [FE]              AssertionError      [CONTEXT]      }  if  (a  <  b)  {  return  b;  }  if  (a  !=  b)  {  return  Double.NaN;  }        [BUGGY]  if(bits  ==  0x800000000000000L)  {  return  a;  }  [BUGGY]      long  bits  =  Double.doubleToRawLongBits(a);  if  (bits  ==  0x8000000000000000L)  {  return  b;  }  return  a;  }  [CLASS]  FastMath  ExpIntTable  ExpFracTable  lnMant  CodyWaite  [METHOD]  max  [RETURN_TYPE]  double  final  double  a  final  double  b  [VARIABLES]  boolean  RECOMPUTE_TABLES_AT_RUNTIME  bita  bitb  bitsum  cotanFlag  leftPlane  negate  negative  subnormal  double[]  CBRTTWO  COSINE_TABLE_A  COSINE_TABLE_B  EIGHTHS  EXP_FRAC_TABLE_A  EXP_FRAC_TABLE_B  EXP_INT_TABLE_A  EXP_INT_TABLE_B  SINE_TABLE_A  SINE_TABLE_B  TANGENT_TABLE_A  TANGENT_TABLE_B  hiPrec  hiPrecOut  lnCoef_i  lnCoef_last  lnm  lns  reduceResults  result  long[]  PI_O_4_BITS  RECIP_2PI  double  E  F_11_12  F_13_14  F_15_16  F_1_11  F_1_13  F_1_15  F_1_17  F_1_2  F_1_3  F_1_4  F_1_5  F_1_7  F_1_9  F_3_4  F_5_6  F_7_8  F_9_10  LN_2_A  LN_2_B  PI  TWO_POWER_52  a  a2  aa  ab  absAsinh  absAtanh  b  base  baseA  baseB  c  cD2pH  cRH  cTmpH  cd  cosEpsA  cosEpsB  cosa  cosaa  cosab  cosb  costA  costB  d  d1High  d1Low  d2p  d2pHH  d2pHL  d2pHigh  d2pLow  da  daa  dab  db  denom  denomb  denomr  direction  dx  epsA  epsA2  epsB  epsilon  err  est  esta  estb  extra  facta  factb  finalRemA  finalRemB  fracPartA  fracPartB  fx1  intPartA  intPartB  invx  invy  lna  lnb  lnza  lnzb  lores  mant  na  nb  numer  oneOverXa  p  p2  pi2a  pi2b  pia  pib  r  rHH  rHL  ra  ratio  ratioa  ratiob  rb  recip  recipa  recipb  remA  remB  result  resultHigh  resultLow  resultb  rln10a  rln10b  sinEpsA  sinEpsB  sina  sinb  sintA  sintB  sumA  sumB  t  temp  temp2  tempA  tempB  tempC  tmp  tmp1  tmp2  tmpA  tmpB  tmpHigh  tmpLow  x  x2  xa  xb  xbadj  xpa  xpb  xs  y  ya  yaa  yab  yb  z  za  zaa  zab  zb  double[][]  LN_HI_PREC_COEF  LN_MANT  LN_QUICK_COEF  int  EXP_FRAC_TABLE_LEN  EXP_INT_TABLE_LEN  EXP_INT_TABLE_MAX_INDEX  LN_MANT_LEN  SINE_TABLE_LEN  a  b  bits  e  exp  exp3  exponent  finalK  i  idx  intFrac  intPart  intVal  k  mantissa  mostSignificantLostBit  n  quadrant  scaledExponent  shift  sign  splitFactor  x  long  HEX_40000000  MASK_30BITS  a  ac  ad  b  bc  bd  bits  c  d  inbits  mantissa  mostSignificantLostBit  prod2A  prod2B  prodA  prodB  shpi0  shpiA  shpiB  sign  x  xl  y  yi  z  	projects/Math16/src/main/java/org/apache/commons/math3/util/FastMath.java	0.7071067811865475	3522	3522	2	replace	if(bits  ==  0x800000000000000L)  {  return  a;  }	  if(a    ==    b)    {    if(bits    ==    0x800000000000000L)    {    return    b;    }    	non-compiled	[CE]  <identifier>  expected	13	None	replace
8	[BUG]  [BUGGY]  if(bits  <  0x800000000000000L)  {  return  b;  }  [CE]  <identifier>  expected  [FE]                AssertionError      [CONTEXT]      }  if  (a  <  b)  {  return  b;  }  if  (a  !=  b)  {  return  Double.NaN;  }        [BUGGY]  if(bits  <  0x800000000000000L)  {  return  b;  }  [BUGGY]      long  bits  =  Double.doubleToRawLongBits(a);  if  (bits  ==  0x8000000000000000L)  {  return  b;  }  return  a;  }  [CLASS]  FastMath  ExpIntTable  ExpFracTable  lnMant  CodyWaite  [METHOD]  max  [RETURN_TYPE]  double  final  double  a  final  double  b  [VARIABLES]  boolean  RECOMPUTE_TABLES_AT_RUNTIME  bita  bitb  bitsum  cotanFlag  leftPlane  negate  negative  subnormal  double[]  CBRTTWO  COSINE_TABLE_A  COSINE_TABLE_B  EIGHTHS  EXP_FRAC_TABLE_A  EXP_FRAC_TABLE_B  EXP_INT_TABLE_A  EXP_INT_TABLE_B  SINE_TABLE_A  SINE_TABLE_B  TANGENT_TABLE_A  TANGENT_TABLE_B  hiPrec  hiPrecOut  lnCoef_i  lnCoef_last  lnm  lns  reduceResults  result  long[]  PI_O_4_BITS  RECIP_2PI  double  E  F_11_12  F_13_14  F_15_16  F_1_11  F_1_13  F_1_15  F_1_17  F_1_2  F_1_3  F_1_4  F_1_5  F_1_7  F_1_9  F_3_4  F_5_6  F_7_8  F_9_10  LN_2_A  LN_2_B  PI  TWO_POWER_52  a  a2  aa  ab  absAsinh  absAtanh  b  base  baseA  baseB  c  cD2pH  cRH  cTmpH  cd  cosEpsA  cosEpsB  cosa  cosaa  cosab  cosb  costA  costB  d  d1High  d1Low  d2p  d2pHH  d2pHL  d2pHigh  d2pLow  da  daa  dab  db  denom  denomb  denomr  direction  dx  epsA  epsA2  epsB  epsilon  err  est  esta  estb  extra  facta  factb  finalRemA  finalRemB  fracPartA  fracPartB  fx1  intPartA  intPartB  invx  invy  lna  lnb  lnza  lnzb  lores  mant  na  nb  numer  oneOverXa  p  p2  pi2a  pi2b  pia  pib  r  rHH  rHL  ra  ratio  ratioa  ratiob  rb  recip  recipa  recipb  remA  remB  result  resultHigh  resultLow  resultb  rln10a  rln10b  sinEpsA  sinEpsB  sina  sinb  sintA  sintB  sumA  sumB  t  temp  temp2  tempA  tempB  tempC  tmp  tmp1  tmp2  tmpA  tmpB  tmpHigh  tmpLow  x  x2  xa  xb  xbadj  xpa  xpb  xs  y  ya  yaa  yab  yb  z  za  zaa  zab  zb  double[][]  LN_HI_PREC_COEF  LN_MANT  LN_QUICK_COEF  int  EXP_FRAC_TABLE_LEN  EXP_INT_TABLE_LEN  EXP_INT_TABLE_MAX_INDEX  LN_MANT_LEN  SINE_TABLE_LEN  a  b  bits  e  exp  exp3  exponent  finalK  i  idx  intFrac  intPart  intVal  k  mantissa  mostSignificantLostBit  n  quadrant  scaledExponent  shift  sign  splitFactor  x  long  HEX_40000000  MASK_30BITS  a  ac  ad  b  bc  bd  bits  c  d  inbits  mantissa  mostSignificantLostBit  prod2A  prod2B  prodA  prodB  shpi0  shpiA  shpiB  sign  x  xl  y  yi  z  	projects/Math16/src/main/java/org/apache/commons/math3/util/FastMath.java	0.7071067811865475	3522	3522	2	replace	if(bits  <  0x800000000000000L)  {  return  b;  }	  if(a    ==    b)    {    if(bits    ==    0x800000000000000L)    {    return    b;    }    	non-compiled	[CE]  <identifier>  expected	13	None	replace
9	[BUG]  [BUGGY]  if(bits  ==  0x800000000000000L)  {  return  b;  }  [CE]  <identifier>  expected  [FE]                AssertionError      [CONTEXT]      }  if  (a  <  b)  {  return  b;  }  if  (a  !=  b)  {  return  Double.NaN;  }        [BUGGY]  if(bits  ==  0x800000000000000L)  {  return  b;  }  [BUGGY]      long  bits  =  Double.doubleToRawLongBits(a);  if  (bits  ==  0x8000000000000000L)  {  return  b;  }  return  a;  }  [CLASS]  FastMath  ExpIntTable  ExpFracTable  lnMant  CodyWaite  [METHOD]  max  [RETURN_TYPE]  double  final  double  a  final  double  b  [VARIABLES]  boolean  RECOMPUTE_TABLES_AT_RUNTIME  bita  bitb  bitsum  cotanFlag  leftPlane  negate  negative  subnormal  double[]  CBRTTWO  COSINE_TABLE_A  COSINE_TABLE_B  EIGHTHS  EXP_FRAC_TABLE_A  EXP_FRAC_TABLE_B  EXP_INT_TABLE_A  EXP_INT_TABLE_B  SINE_TABLE_A  SINE_TABLE_B  TANGENT_TABLE_A  TANGENT_TABLE_B  hiPrec  hiPrecOut  lnCoef_i  lnCoef_last  lnm  lns  reduceResults  result  long[]  PI_O_4_BITS  RECIP_2PI  double  E  F_11_12  F_13_14  F_15_16  F_1_11  F_1_13  F_1_15  F_1_17  F_1_2  F_1_3  F_1_4  F_1_5  F_1_7  F_1_9  F_3_4  F_5_6  F_7_8  F_9_10  LN_2_A  LN_2_B  PI  TWO_POWER_52  a  a2  aa  ab  absAsinh  absAtanh  b  base  baseA  baseB  c  cD2pH  cRH  cTmpH  cd  cosEpsA  cosEpsB  cosa  cosaa  cosab  cosb  costA  costB  d  d1High  d1Low  d2p  d2pHH  d2pHL  d2pHigh  d2pLow  da  daa  dab  db  denom  denomb  denomr  direction  dx  epsA  epsA2  epsB  epsilon  err  est  esta  estb  extra  facta  factb  finalRemA  finalRemB  fracPartA  fracPartB  fx1  intPartA  intPartB  invx  invy  lna  lnb  lnza  lnzb  lores  mant  na  nb  numer  oneOverXa  p  p2  pi2a  pi2b  pia  pib  r  rHH  rHL  ra  ratio  ratioa  ratiob  rb  recip  recipa  recipb  remA  remB  result  resultHigh  resultLow  resultb  rln10a  rln10b  sinEpsA  sinEpsB  sina  sinb  sintA  sintB  sumA  sumB  t  temp  temp2  tempA  tempB  tempC  tmp  tmp1  tmp2  tmpA  tmpB  tmpHigh  tmpLow  x  x2  xa  xb  xbadj  xpa  xpb  xs  y  ya  yaa  yab  yb  z  za  zaa  zab  zb  double[][]  LN_HI_PREC_COEF  LN_MANT  LN_QUICK_COEF  int  EXP_FRAC_TABLE_LEN  EXP_INT_TABLE_LEN  EXP_INT_TABLE_MAX_INDEX  LN_MANT_LEN  SINE_TABLE_LEN  a  b  bits  e  exp  exp3  exponent  finalK  i  idx  intFrac  intPart  intVal  k  mantissa  mostSignificantLostBit  n  quadrant  scaledExponent  shift  sign  splitFactor  x  long  HEX_40000000  MASK_30BITS  a  ac  ad  b  bc  bd  bits  c  d  inbits  mantissa  mostSignificantLostBit  prod2A  prod2B  prodA  prodB  shpi0  shpiA  shpiB  sign  x  xl  y  yi  z  	projects/Math16/src/main/java/org/apache/commons/math3/util/FastMath.java	0.7071067811865475	3522	3522	2	replace	if(bits  ==  0x800000000000000L)  {  return  b;  }	  if(a!=    b)    {    if(bits    ==    0x800000000000000L)    {    return    b;    }    	non-compiled	[CE]  <identifier>  expected	14	None	replace
10	[BUG]  [BUGGY]  if(a  <  0x800000000000L)  {  long  bits  =  Double.doubleToRawLongBits(a);  if  (bits!=  0x800000000000L)  {  return  b;  }  [CE]  <identifier>  expected  [FE]            AssertionError      [CONTEXT]      }  if  (a  <  b)  {  return  b;  }  if  (a  !=  b)  {  return  Double.NaN;  }        [BUGGY]  if(a  <  0x800000000000L)  {  long  bits  =  Double.doubleToRawLongBits(a);  if  (bits!=  0x800000000000L)  {  return  b;  }  [BUGGY]      long  bits  =  Double.doubleToRawLongBits(a);  if  (bits  ==  0x8000000000000000L)  {  return  b;  }  return  a;  }  [CLASS]  FastMath  ExpIntTable  ExpFracTable  lnMant  CodyWaite  [METHOD]  max  [RETURN_TYPE]  double  final  double  a  final  double  b  [VARIABLES]  boolean  RECOMPUTE_TABLES_AT_RUNTIME  bita  bitb  bitsum  cotanFlag  leftPlane  negate  negative  subnormal  double[]  CBRTTWO  COSINE_TABLE_A  COSINE_TABLE_B  EIGHTHS  EXP_FRAC_TABLE_A  EXP_FRAC_TABLE_B  EXP_INT_TABLE_A  EXP_INT_TABLE_B  SINE_TABLE_A  SINE_TABLE_B  TANGENT_TABLE_A  TANGENT_TABLE_B  hiPrec  hiPrecOut  lnCoef_i  lnCoef_last  lnm  lns  reduceResults  result  long[]  PI_O_4_BITS  RECIP_2PI  double  E  F_11_12  F_13_14  F_15_16  F_1_11  F_1_13  F_1_15  F_1_17  F_1_2  F_1_3  F_1_4  F_1_5  F_1_7  F_1_9  F_3_4  F_5_6  F_7_8  F_9_10  LN_2_A  LN_2_B  PI  TWO_POWER_52  a  a2  aa  ab  absAsinh  absAtanh  b  base  baseA  baseB  c  cD2pH  cRH  cTmpH  cd  cosEpsA  cosEpsB  cosa  cosaa  cosab  cosb  costA  costB  d  d1High  d1Low  d2p  d2pHH  d2pHL  d2pHigh  d2pLow  da  daa  dab  db  denom  denomb  denomr  direction  dx  epsA  epsA2  epsB  epsilon  err  est  esta  estb  extra  facta  factb  finalRemA  finalRemB  fracPartA  fracPartB  fx1  intPartA  intPartB  invx  invy  lna  lnb  lnza  lnzb  lores  mant  na  nb  numer  oneOverXa  p  p2  pi2a  pi2b  pia  pib  r  rHH  rHL  ra  ratio  ratioa  ratiob  rb  recip  recipa  recipb  remA  remB  result  resultHigh  resultLow  resultb  rln10a  rln10b  sinEpsA  sinEpsB  sina  sinb  sintA  sintB  sumA  sumB  t  temp  temp2  tempA  tempB  tempC  tmp  tmp1  tmp2  tmpA  tmpB  tmpHigh  tmpLow  x  x2  xa  xb  xbadj  xpa  xpb  xs  y  ya  yaa  yab  yb  z  za  zaa  zab  zb  double[][]  LN_HI_PREC_COEF  LN_MANT  LN_QUICK_COEF  int  EXP_FRAC_TABLE_LEN  EXP_INT_TABLE_LEN  EXP_INT_TABLE_MAX_INDEX  LN_MANT_LEN  SINE_TABLE_LEN  a  b  bits  e  exp  exp3  exponent  finalK  i  idx  intFrac  intPart  intVal  k  mantissa  mostSignificantLostBit  n  quadrant  scaledExponent  shift  sign  splitFactor  x  long  HEX_40000000  MASK_30BITS  a  ac  ad  b  bc  bd  bits  c  d  inbits  mantissa  mostSignificantLostBit  prod2A  prod2B  prodA  prodB  shpi0  shpiA  shpiB  sign  x  xl  y  yi  z  	projects/Math16/src/main/java/org/apache/commons/math3/util/FastMath.java	0.7071067811865475	3522	3522	2	replace	if(a  <  0x800000000000L)  {  long  bits  =  Double.doubleToRawLongBits(a);  if  (bits!=  0x800000000000L)  {  return  b;  }	  if(bits    <    0x800000000000L)    {    long    bits    =    Double.doubleToRawLongBits(a);    if    (bits!=    0x800000000000L)    {    return    b;    }    	non-compiled	[CE]  <identifier>  expected	21	None	replace
11	[BUG]  [BUGGY]  if(a!=  b)  {  if(bits  <  0x800000000000L)  {  bits  =  Double.doubleToRawLongBits(a);  if  (bits!=  0x800000000000L)  {  return  b;  }  [CE]  <identifier>  expected  [FE]              AssertionError      [CONTEXT]      }  if  (a  <  b)  {  return  b;  }  if  (a  !=  b)  {  return  Double.NaN;  }        [BUGGY]  if(a!=  b)  {  if(bits  <  0x800000000000L)  {  bits  =  Double.doubleToRawLongBits(a);  if  (bits!=  0x800000000000L)  {  return  b;  }  [BUGGY]      long  bits  =  Double.doubleToRawLongBits(a);  if  (bits  ==  0x8000000000000000L)  {  return  b;  }  return  a;  }  [CLASS]  FastMath  ExpIntTable  ExpFracTable  lnMant  CodyWaite  [METHOD]  max  [RETURN_TYPE]  double  final  double  a  final  double  b  [VARIABLES]  boolean  RECOMPUTE_TABLES_AT_RUNTIME  bita  bitb  bitsum  cotanFlag  leftPlane  negate  negative  subnormal  double[]  CBRTTWO  COSINE_TABLE_A  COSINE_TABLE_B  EIGHTHS  EXP_FRAC_TABLE_A  EXP_FRAC_TABLE_B  EXP_INT_TABLE_A  EXP_INT_TABLE_B  SINE_TABLE_A  SINE_TABLE_B  TANGENT_TABLE_A  TANGENT_TABLE_B  hiPrec  hiPrecOut  lnCoef_i  lnCoef_last  lnm  lns  reduceResults  result  long[]  PI_O_4_BITS  RECIP_2PI  double  E  F_11_12  F_13_14  F_15_16  F_1_11  F_1_13  F_1_15  F_1_17  F_1_2  F_1_3  F_1_4  F_1_5  F_1_7  F_1_9  F_3_4  F_5_6  F_7_8  F_9_10  LN_2_A  LN_2_B  PI  TWO_POWER_52  a  a2  aa  ab  absAsinh  absAtanh  b  base  baseA  baseB  c  cD2pH  cRH  cTmpH  cd  cosEpsA  cosEpsB  cosa  cosaa  cosab  cosb  costA  costB  d  d1High  d1Low  d2p  d2pHH  d2pHL  d2pHigh  d2pLow  da  daa  dab  db  denom  denomb  denomr  direction  dx  epsA  epsA2  epsB  epsilon  err  est  esta  estb  extra  facta  factb  finalRemA  finalRemB  fracPartA  fracPartB  fx1  intPartA  intPartB  invx  invy  lna  lnb  lnza  lnzb  lores  mant  na  nb  numer  oneOverXa  p  p2  pi2a  pi2b  pia  pib  r  rHH  rHL  ra  ratio  ratioa  ratiob  rb  recip  recipa  recipb  remA  remB  result  resultHigh  resultLow  resultb  rln10a  rln10b  sinEpsA  sinEpsB  sina  sinb  sintA  sintB  sumA  sumB  t  temp  temp2  tempA  tempB  tempC  tmp  tmp1  tmp2  tmpA  tmpB  tmpHigh  tmpLow  x  x2  xa  xb  xbadj  xpa  xpb  xs  y  ya  yaa  yab  yb  z  za  zaa  zab  zb  double[][]  LN_HI_PREC_COEF  LN_MANT  LN_QUICK_COEF  int  EXP_FRAC_TABLE_LEN  EXP_INT_TABLE_LEN  EXP_INT_TABLE_MAX_INDEX  LN_MANT_LEN  SINE_TABLE_LEN  a  b  bits  e  exp  exp3  exponent  finalK  i  idx  intFrac  intPart  intVal  k  mantissa  mostSignificantLostBit  n  quadrant  scaledExponent  shift  sign  splitFactor  x  long  HEX_40000000  MASK_30BITS  a  ac  ad  b  bc  bd  bits  c  d  inbits  mantissa  mostSignificantLostBit  prod2A  prod2B  prodA  prodB  shpi0  shpiA  shpiB  sign  x  xl  y  yi  z  	projects/Math16/src/main/java/org/apache/commons/math3/util/FastMath.java	0.7071067811865475	3522	3522	2	replace	if(a!=  b)  {  if(bits  <  0x800000000000L)  {  bits  =  Double.doubleToRawLongBits(a);  if  (bits!=  0x800000000000L)  {  return  b;  }	  if(bits    <    0x800000000000L)    {    long    bits    =    Double.doubleToRawLongBits(a);    if    (bits!=    0x800000000000L)    {    return    b;    }    	non-compiled	[CE]  <identifier>  expected	21	None	replace
12	[BUG]  [BUGGY]  bits  |=  a;  [CE]  <identifier>  expected  [FE]                AssertionError      [CONTEXT]      }  if  (a  <  b)  {  return  b;  }  if  (a  !=  b)  {  return  Double.NaN;  }        [BUGGY]  bits  |=  a;  [BUGGY]      if  (bits  ==  0x8000000000000000L)  {  return  b;  }  return  a;  }  [CLASS]  FastMath  ExpIntTable  ExpFracTable  lnMant  CodyWaite  [METHOD]  max  [RETURN_TYPE]  double  final  double  a  final  double  b  [VARIABLES]  boolean  RECOMPUTE_TABLES_AT_RUNTIME  bita  bitb  bitsum  cotanFlag  leftPlane  negate  negative  subnormal  double[]  CBRTTWO  COSINE_TABLE_A  COSINE_TABLE_B  EIGHTHS  EXP_FRAC_TABLE_A  EXP_FRAC_TABLE_B  EXP_INT_TABLE_A  EXP_INT_TABLE_B  SINE_TABLE_A  SINE_TABLE_B  TANGENT_TABLE_A  TANGENT_TABLE_B  hiPrec  hiPrecOut  lnCoef_i  lnCoef_last  lnm  lns  reduceResults  result  long[]  PI_O_4_BITS  RECIP_2PI  double  E  F_11_12  F_13_14  F_15_16  F_1_11  F_1_13  F_1_15  F_1_17  F_1_2  F_1_3  F_1_4  F_1_5  F_1_7  F_1_9  F_3_4  F_5_6  F_7_8  F_9_10  LN_2_A  LN_2_B  PI  TWO_POWER_52  a  a2  aa  ab  absAsinh  absAtanh  b  base  baseA  baseB  c  cD2pH  cRH  cTmpH  cd  cosEpsA  cosEpsB  cosa  cosaa  cosab  cosb  costA  costB  d  d1High  d1Low  d2p  d2pHH  d2pHL  d2pHigh  d2pLow  da  daa  dab  db  denom  denomb  denomr  direction  dx  epsA  epsA2  epsB  epsilon  err  est  esta  estb  extra  facta  factb  finalRemA  finalRemB  fracPartA  fracPartB  fx1  intPartA  intPartB  invx  invy  lna  lnb  lnza  lnzb  lores  mant  na  nb  numer  oneOverXa  p  p2  pi2a  pi2b  pia  pib  r  rHH  rHL  ra  ratio  ratioa  ratiob  rb  recip  recipa  recipb  remA  remB  result  resultHigh  resultLow  resultb  rln10a  rln10b  sinEpsA  sinEpsB  sina  sinb  sintA  sintB  sumA  sumB  t  temp  temp2  tempA  tempB  tempC  tmp  tmp1  tmp2  tmpA  tmpB  tmpHigh  tmpLow  x  x2  xa  xb  xbadj  xpa  xpb  xs  y  ya  yaa  yab  yb  z  za  zaa  zab  zb  double[][]  LN_HI_PREC_COEF  LN_MANT  LN_QUICK_COEF  int  EXP_FRAC_TABLE_LEN  EXP_INT_TABLE_LEN  EXP_INT_TABLE_MAX_INDEX  LN_MANT_LEN  SINE_TABLE_LEN  a  b  bits  e  exp  exp3  exponent  finalK  i  idx  intFrac  intPart  intVal  k  mantissa  mostSignificantLostBit  n  quadrant  scaledExponent  shift  sign  splitFactor  x  long  HEX_40000000  MASK_30BITS  a  ac  ad  b  bc  bd  bits  c  d  inbits  mantissa  mostSignificantLostBit  prod2A  prod2B  prodA  prodB  shpi0  shpiA  shpiB  sign  x  xl  y  yi  z  	projects/Math16/src/main/java/org/apache/commons/math3/util/FastMath.java	0.7071067811865475	3522	3522	2	replace	bits  |=  a;	  bits    |=    bits.length;    	non-compiled	[CE]  <identifier>  expected	9	None	replace
13	[BUG]  [BUGGY]  bits  |=  b.length;  [CE]  <identifier>  expected  [FE]                  AssertionError      [CONTEXT]      }  if  (a  <  b)  {  return  b;  }  if  (a  !=  b)  {  return  Double.NaN;  }        [BUGGY]  bits  |=  b.length;  [BUGGY]      if  (bits  ==  0x8000000000000000L)  {  return  b;  }  return  a;  }  [CLASS]  FastMath  ExpIntTable  ExpFracTable  lnMant  CodyWaite  [METHOD]  max  [RETURN_TYPE]  double  final  double  a  final  double  b  [VARIABLES]  boolean  RECOMPUTE_TABLES_AT_RUNTIME  bita  bitb  bitsum  cotanFlag  leftPlane  negate  negative  subnormal  double[]  CBRTTWO  COSINE_TABLE_A  COSINE_TABLE_B  EIGHTHS  EXP_FRAC_TABLE_A  EXP_FRAC_TABLE_B  EXP_INT_TABLE_A  EXP_INT_TABLE_B  SINE_TABLE_A  SINE_TABLE_B  TANGENT_TABLE_A  TANGENT_TABLE_B  hiPrec  hiPrecOut  lnCoef_i  lnCoef_last  lnm  lns  reduceResults  result  long[]  PI_O_4_BITS  RECIP_2PI  double  E  F_11_12  F_13_14  F_15_16  F_1_11  F_1_13  F_1_15  F_1_17  F_1_2  F_1_3  F_1_4  F_1_5  F_1_7  F_1_9  F_3_4  F_5_6  F_7_8  F_9_10  LN_2_A  LN_2_B  PI  TWO_POWER_52  a  a2  aa  ab  absAsinh  absAtanh  b  base  baseA  baseB  c  cD2pH  cRH  cTmpH  cd  cosEpsA  cosEpsB  cosa  cosaa  cosab  cosb  costA  costB  d  d1High  d1Low  d2p  d2pHH  d2pHL  d2pHigh  d2pLow  da  daa  dab  db  denom  denomb  denomr  direction  dx  epsA  epsA2  epsB  epsilon  err  est  esta  estb  extra  facta  factb  finalRemA  finalRemB  fracPartA  fracPartB  fx1  intPartA  intPartB  invx  invy  lna  lnb  lnza  lnzb  lores  mant  na  nb  numer  oneOverXa  p  p2  pi2a  pi2b  pia  pib  r  rHH  rHL  ra  ratio  ratioa  ratiob  rb  recip  recipa  recipb  remA  remB  result  resultHigh  resultLow  resultb  rln10a  rln10b  sinEpsA  sinEpsB  sina  sinb  sintA  sintB  sumA  sumB  t  temp  temp2  tempA  tempB  tempC  tmp  tmp1  tmp2  tmpA  tmpB  tmpHigh  tmpLow  x  x2  xa  xb  xbadj  xpa  xpb  xs  y  ya  yaa  yab  yb  z  za  zaa  zab  zb  double[][]  LN_HI_PREC_COEF  LN_MANT  LN_QUICK_COEF  int  EXP_FRAC_TABLE_LEN  EXP_INT_TABLE_LEN  EXP_INT_TABLE_MAX_INDEX  LN_MANT_LEN  SINE_TABLE_LEN  a  b  bits  e  exp  exp3  exponent  finalK  i  idx  intFrac  intPart  intVal  k  mantissa  mostSignificantLostBit  n  quadrant  scaledExponent  shift  sign  splitFactor  x  long  HEX_40000000  MASK_30BITS  a  ac  ad  b  bc  bd  bits  c  d  inbits  mantissa  mostSignificantLostBit  prod2A  prod2B  prodA  prodB  shpi0  shpiA  shpiB  sign  x  xl  y  yi  z  	projects/Math16/src/main/java/org/apache/commons/math3/util/FastMath.java	0.7071067811865475	3522	3522	2	replace	bits  |=  b.length;	  bits    |=    bits.length;    	non-compiled	[CE]  <identifier>  expected	9	None	replace
14	[BUG]  [BUGGY]  if(a  <  =  0)  {  long  bits  =  Double.doubleToRawLongBits(a);  if(bits  ==  0x8000000000000000L)  {  return  b;  }  [CE]  <identifier>  expected  [FE]            AssertionError      [CONTEXT]      }  if  (a  <  b)  {  return  b;  }  if  (a  !=  b)  {  return  Double.NaN;  }        [BUGGY]  if(a  <  =  0)  {  long  bits  =  Double.doubleToRawLongBits(a);  if(bits  ==  0x8000000000000000L)  {  return  b;  }  [BUGGY]      long  bits  =  Double.doubleToRawLongBits(a);  if  (bits  ==  0x8000000000000000L)  {  return  b;  }  return  a;  }  [CLASS]  FastMath  ExpIntTable  ExpFracTable  lnMant  CodyWaite  [METHOD]  max  [RETURN_TYPE]  double  final  double  a  final  double  b  [VARIABLES]  boolean  RECOMPUTE_TABLES_AT_RUNTIME  bita  bitb  bitsum  cotanFlag  leftPlane  negate  negative  subnormal  double[]  CBRTTWO  COSINE_TABLE_A  COSINE_TABLE_B  EIGHTHS  EXP_FRAC_TABLE_A  EXP_FRAC_TABLE_B  EXP_INT_TABLE_A  EXP_INT_TABLE_B  SINE_TABLE_A  SINE_TABLE_B  TANGENT_TABLE_A  TANGENT_TABLE_B  hiPrec  hiPrecOut  lnCoef_i  lnCoef_last  lnm  lns  reduceResults  result  long[]  PI_O_4_BITS  RECIP_2PI  double  E  F_11_12  F_13_14  F_15_16  F_1_11  F_1_13  F_1_15  F_1_17  F_1_2  F_1_3  F_1_4  F_1_5  F_1_7  F_1_9  F_3_4  F_5_6  F_7_8  F_9_10  LN_2_A  LN_2_B  PI  TWO_POWER_52  a  a2  aa  ab  absAsinh  absAtanh  b  base  baseA  baseB  c  cD2pH  cRH  cTmpH  cd  cosEpsA  cosEpsB  cosa  cosaa  cosab  cosb  costA  costB  d  d1High  d1Low  d2p  d2pHH  d2pHL  d2pHigh  d2pLow  da  daa  dab  db  denom  denomb  denomr  direction  dx  epsA  epsA2  epsB  epsilon  err  est  esta  estb  extra  facta  factb  finalRemA  finalRemB  fracPartA  fracPartB  fx1  intPartA  intPartB  invx  invy  lna  lnb  lnza  lnzb  lores  mant  na  nb  numer  oneOverXa  p  p2  pi2a  pi2b  pia  pib  r  rHH  rHL  ra  ratio  ratioa  ratiob  rb  recip  recipa  recipb  remA  remB  result  resultHigh  resultLow  resultb  rln10a  rln10b  sinEpsA  sinEpsB  sina  sinb  sintA  sintB  sumA  sumB  t  temp  temp2  tempA  tempB  tempC  tmp  tmp1  tmp2  tmpA  tmpB  tmpHigh  tmpLow  x  x2  xa  xb  xbadj  xpa  xpb  xs  y  ya  yaa  yab  yb  z  za  zaa  zab  zb  double[][]  LN_HI_PREC_COEF  LN_MANT  LN_QUICK_COEF  int  EXP_FRAC_TABLE_LEN  EXP_INT_TABLE_LEN  EXP_INT_TABLE_MAX_INDEX  LN_MANT_LEN  SINE_TABLE_LEN  a  b  bits  e  exp  exp3  exponent  finalK  i  idx  intFrac  intPart  intVal  k  mantissa  mostSignificantLostBit  n  quadrant  scaledExponent  shift  sign  splitFactor  x  long  HEX_40000000  MASK_30BITS  a  ac  ad  b  bc  bd  bits  c  d  inbits  mantissa  mostSignificantLostBit  prod2A  prod2B  prodA  prodB  shpi0  shpiA  shpiB  sign  x  xl  y  yi  z  	projects/Math16/src/main/java/org/apache/commons/math3/util/FastMath.java	0.7071067811865475	3522	3522	2	replace	if(a  <  =  0)  {  long  bits  =  Double.doubleToRawLongBits(a);  if(bits  ==  0x8000000000000000L)  {  return  b;  }	  if(a    <    0)    {    long    bits    =    Double.doubleToRawLongBits(a);    if(bits    ==    0x8000000000000000L)    {    return    b;    }    	non-compiled	[CE]  <identifier>  expected	7	None	replace
15	[BUG]  [BUGGY]  int  bits  =  Double.doubleToLongBits(a,  b);  [CE]  <identifier>  expected  [FE]            AssertionError      [CONTEXT]      }  if  (a  <  b)  {  return  b;  }  if  (a  !=  b)  {  return  Double.NaN;  }        [BUGGY]  int  bits  =  Double.doubleToLongBits(a,  b);  [BUGGY]      if  (bits  ==  0x8000000000000000L)  {  return  b;  }  return  a;  }  [CLASS]  FastMath  ExpIntTable  ExpFracTable  lnMant  CodyWaite  [METHOD]  max  [RETURN_TYPE]  double  final  double  a  final  double  b  [VARIABLES]  boolean  RECOMPUTE_TABLES_AT_RUNTIME  bita  bitb  bitsum  cotanFlag  leftPlane  negate  negative  subnormal  double[]  CBRTTWO  COSINE_TABLE_A  COSINE_TABLE_B  EIGHTHS  EXP_FRAC_TABLE_A  EXP_FRAC_TABLE_B  EXP_INT_TABLE_A  EXP_INT_TABLE_B  SINE_TABLE_A  SINE_TABLE_B  TANGENT_TABLE_A  TANGENT_TABLE_B  hiPrec  hiPrecOut  lnCoef_i  lnCoef_last  lnm  lns  reduceResults  result  long[]  PI_O_4_BITS  RECIP_2PI  double  E  F_11_12  F_13_14  F_15_16  F_1_11  F_1_13  F_1_15  F_1_17  F_1_2  F_1_3  F_1_4  F_1_5  F_1_7  F_1_9  F_3_4  F_5_6  F_7_8  F_9_10  LN_2_A  LN_2_B  PI  TWO_POWER_52  a  a2  aa  ab  absAsinh  absAtanh  b  base  baseA  baseB  c  cD2pH  cRH  cTmpH  cd  cosEpsA  cosEpsB  cosa  cosaa  cosab  cosb  costA  costB  d  d1High  d1Low  d2p  d2pHH  d2pHL  d2pHigh  d2pLow  da  daa  dab  db  denom  denomb  denomr  direction  dx  epsA  epsA2  epsB  epsilon  err  est  esta  estb  extra  facta  factb  finalRemA  finalRemB  fracPartA  fracPartB  fx1  intPartA  intPartB  invx  invy  lna  lnb  lnza  lnzb  lores  mant  na  nb  numer  oneOverXa  p  p2  pi2a  pi2b  pia  pib  r  rHH  rHL  ra  ratio  ratioa  ratiob  rb  recip  recipa  recipb  remA  remB  result  resultHigh  resultLow  resultb  rln10a  rln10b  sinEpsA  sinEpsB  sina  sinb  sintA  sintB  sumA  sumB  t  temp  temp2  tempA  tempB  tempC  tmp  tmp1  tmp2  tmpA  tmpB  tmpHigh  tmpLow  x  x2  xa  xb  xbadj  xpa  xpb  xs  y  ya  yaa  yab  yb  z  za  zaa  zab  zb  double[][]  LN_HI_PREC_COEF  LN_MANT  LN_QUICK_COEF  int  EXP_FRAC_TABLE_LEN  EXP_INT_TABLE_LEN  EXP_INT_TABLE_MAX_INDEX  LN_MANT_LEN  SINE_TABLE_LEN  a  b  bits  e  exp  exp3  exponent  finalK  i  idx  intFrac  intPart  intVal  k  mantissa  mostSignificantLostBit  n  quadrant  scaledExponent  shift  sign  splitFactor  x  long  HEX_40000000  MASK_30BITS  a  ac  ad  b  bc  bd  bits  c  d  inbits  mantissa  mostSignificantLostBit  prod2A  prod2B  prodA  prodB  shpi0  shpiA  shpiB  sign  x  xl  y  yi  z  	projects/Math16/src/main/java/org/apache/commons/math3/util/FastMath.java	0.7071067811865475	3522	3522	2	replace	int  bits  =  Double.doubleToLongBits(a,  b);	  int    bits    =    Double.doubleToLongBits(a);    	non-compiled	[CE]  <identifier>  expected	11	None	replace
16	[BUG]  [BUGGY]  if(bits  ==  0x800000000000L)  {  return  b;  }  [CE]  <identifier>  expected  [FE]              AssertionError      [CONTEXT]      }  if  (a  <  b)  {  return  b;  }  if  (a  !=  b)  {  return  Double.NaN;  }        [BUGGY]  if(bits  ==  0x800000000000L)  {  return  b;  }  [BUGGY]      long  bits  =  Double.doubleToRawLongBits(a);  if  (bits  ==  0x8000000000000000L)  {  return  b;  }  return  a;  }  [CLASS]  FastMath  ExpIntTable  ExpFracTable  lnMant  CodyWaite  [METHOD]  max  [RETURN_TYPE]  double  final  double  a  final  double  b  [VARIABLES]  boolean  RECOMPUTE_TABLES_AT_RUNTIME  bita  bitb  bitsum  cotanFlag  leftPlane  negate  negative  subnormal  double[]  CBRTTWO  COSINE_TABLE_A  COSINE_TABLE_B  EIGHTHS  EXP_FRAC_TABLE_A  EXP_FRAC_TABLE_B  EXP_INT_TABLE_A  EXP_INT_TABLE_B  SINE_TABLE_A  SINE_TABLE_B  TANGENT_TABLE_A  TANGENT_TABLE_B  hiPrec  hiPrecOut  lnCoef_i  lnCoef_last  lnm  lns  reduceResults  result  long[]  PI_O_4_BITS  RECIP_2PI  double  E  F_11_12  F_13_14  F_15_16  F_1_11  F_1_13  F_1_15  F_1_17  F_1_2  F_1_3  F_1_4  F_1_5  F_1_7  F_1_9  F_3_4  F_5_6  F_7_8  F_9_10  LN_2_A  LN_2_B  PI  TWO_POWER_52  a  a2  aa  ab  absAsinh  absAtanh  b  base  baseA  baseB  c  cD2pH  cRH  cTmpH  cd  cosEpsA  cosEpsB  cosa  cosaa  cosab  cosb  costA  costB  d  d1High  d1Low  d2p  d2pHH  d2pHL  d2pHigh  d2pLow  da  daa  dab  db  denom  denomb  denomr  direction  dx  epsA  epsA2  epsB  epsilon  err  est  esta  estb  extra  facta  factb  finalRemA  finalRemB  fracPartA  fracPartB  fx1  intPartA  intPartB  invx  invy  lna  lnb  lnza  lnzb  lores  mant  na  nb  numer  oneOverXa  p  p2  pi2a  pi2b  pia  pib  r  rHH  rHL  ra  ratio  ratioa  ratiob  rb  recip  recipa  recipb  remA  remB  result  resultHigh  resultLow  resultb  rln10a  rln10b  sinEpsA  sinEpsB  sina  sinb  sintA  sintB  sumA  sumB  t  temp  temp2  tempA  tempB  tempC  tmp  tmp1  tmp2  tmpA  tmpB  tmpHigh  tmpLow  x  x2  xa  xb  xbadj  xpa  xpb  xs  y  ya  yaa  yab  yb  z  za  zaa  zab  zb  double[][]  LN_HI_PREC_COEF  LN_MANT  LN_QUICK_COEF  int  EXP_FRAC_TABLE_LEN  EXP_INT_TABLE_LEN  EXP_INT_TABLE_MAX_INDEX  LN_MANT_LEN  SINE_TABLE_LEN  a  b  bits  e  exp  exp3  exponent  finalK  i  idx  intFrac  intPart  intVal  k  mantissa  mostSignificantLostBit  n  quadrant  scaledExponent  shift  sign  splitFactor  x  long  HEX_40000000  MASK_30BITS  a  ac  ad  b  bc  bd  bits  c  d  inbits  mantissa  mostSignificantLostBit  prod2A  prod2B  prodA  prodB  shpi0  shpiA  shpiB  sign  x  xl  y  yi  z  	projects/Math16/src/main/java/org/apache/commons/math3/util/FastMath.java	0.7071067811865475	3522	3522	2	replace	if(bits  ==  0x800000000000L)  {  return  b;  }	  if(a!=    b)    {    if(bits    ==    0x800000000000L)    {    return    b;    }    	non-compiled	[CE]  <identifier>  expected	4	None	replace
17	[BUG]  [BUGGY]  if(bits  ==  0x800000000000L)  {  return  a;  }  [CE]  <identifier>  expected  [FE]                AssertionError      [CONTEXT]      }  if  (a  <  b)  {  return  b;  }  if  (a  !=  b)  {  return  Double.NaN;  }        [BUGGY]  if(bits  ==  0x800000000000L)  {  return  a;  }  [BUGGY]      long  bits  =  Double.doubleToRawLongBits(a);  if  (bits  ==  0x8000000000000000L)  {  return  b;  }  return  a;  }  [CLASS]  FastMath  ExpIntTable  ExpFracTable  lnMant  CodyWaite  [METHOD]  max  [RETURN_TYPE]  double  final  double  a  final  double  b  [VARIABLES]  boolean  RECOMPUTE_TABLES_AT_RUNTIME  bita  bitb  bitsum  cotanFlag  leftPlane  negate  negative  subnormal  double[]  CBRTTWO  COSINE_TABLE_A  COSINE_TABLE_B  EIGHTHS  EXP_FRAC_TABLE_A  EXP_FRAC_TABLE_B  EXP_INT_TABLE_A  EXP_INT_TABLE_B  SINE_TABLE_A  SINE_TABLE_B  TANGENT_TABLE_A  TANGENT_TABLE_B  hiPrec  hiPrecOut  lnCoef_i  lnCoef_last  lnm  lns  reduceResults  result  long[]  PI_O_4_BITS  RECIP_2PI  double  E  F_11_12  F_13_14  F_15_16  F_1_11  F_1_13  F_1_15  F_1_17  F_1_2  F_1_3  F_1_4  F_1_5  F_1_7  F_1_9  F_3_4  F_5_6  F_7_8  F_9_10  LN_2_A  LN_2_B  PI  TWO_POWER_52  a  a2  aa  ab  absAsinh  absAtanh  b  base  baseA  baseB  c  cD2pH  cRH  cTmpH  cd  cosEpsA  cosEpsB  cosa  cosaa  cosab  cosb  costA  costB  d  d1High  d1Low  d2p  d2pHH  d2pHL  d2pHigh  d2pLow  da  daa  dab  db  denom  denomb  denomr  direction  dx  epsA  epsA2  epsB  epsilon  err  est  esta  estb  extra  facta  factb  finalRemA  finalRemB  fracPartA  fracPartB  fx1  intPartA  intPartB  invx  invy  lna  lnb  lnza  lnzb  lores  mant  na  nb  numer  oneOverXa  p  p2  pi2a  pi2b  pia  pib  r  rHH  rHL  ra  ratio  ratioa  ratiob  rb  recip  recipa  recipb  remA  remB  result  resultHigh  resultLow  resultb  rln10a  rln10b  sinEpsA  sinEpsB  sina  sinb  sintA  sintB  sumA  sumB  t  temp  temp2  tempA  tempB  tempC  tmp  tmp1  tmp2  tmpA  tmpB  tmpHigh  tmpLow  x  x2  xa  xb  xbadj  xpa  xpb  xs  y  ya  yaa  yab  yb  z  za  zaa  zab  zb  double[][]  LN_HI_PREC_COEF  LN_MANT  LN_QUICK_COEF  int  EXP_FRAC_TABLE_LEN  EXP_INT_TABLE_LEN  EXP_INT_TABLE_MAX_INDEX  LN_MANT_LEN  SINE_TABLE_LEN  a  b  bits  e  exp  exp3  exponent  finalK  i  idx  intFrac  intPart  intVal  k  mantissa  mostSignificantLostBit  n  quadrant  scaledExponent  shift  sign  splitFactor  x  long  HEX_40000000  MASK_30BITS  a  ac  ad  b  bc  bd  bits  c  d  inbits  mantissa  mostSignificantLostBit  prod2A  prod2B  prodA  prodB  shpi0  shpiA  shpiB  sign  x  xl  y  yi  z  	projects/Math16/src/main/java/org/apache/commons/math3/util/FastMath.java	0.7071067811865475	3522	3522	2	replace	if(bits  ==  0x800000000000L)  {  return  a;  }	  if(a!=    b)    {    if(bits    ==    0x800000000000L)    {    return    b;    }    	non-compiled	[CE]  <identifier>  expected	4	None	replace
18	[BUG]  [BUGGY]  int  bits  =  Double.doubleToRawLongBits(a,  b  +  1);  [CE]  <identifier>  expected  [FE]              AssertionError      [CONTEXT]      }  if  (a  <  b)  {  return  b;  }  if  (a  !=  b)  {  return  Double.NaN;  }        [BUGGY]  int  bits  =  Double.doubleToRawLongBits(a,  b  +  1);  [BUGGY]      if  (bits  ==  0x8000000000000000L)  {  return  b;  }  return  a;  }  [CLASS]  FastMath  ExpIntTable  ExpFracTable  lnMant  CodyWaite  [METHOD]  max  [RETURN_TYPE]  double  final  double  a  final  double  b  [VARIABLES]  boolean  RECOMPUTE_TABLES_AT_RUNTIME  bita  bitb  bitsum  cotanFlag  leftPlane  negate  negative  subnormal  double[]  CBRTTWO  COSINE_TABLE_A  COSINE_TABLE_B  EIGHTHS  EXP_FRAC_TABLE_A  EXP_FRAC_TABLE_B  EXP_INT_TABLE_A  EXP_INT_TABLE_B  SINE_TABLE_A  SINE_TABLE_B  TANGENT_TABLE_A  TANGENT_TABLE_B  hiPrec  hiPrecOut  lnCoef_i  lnCoef_last  lnm  lns  reduceResults  result  long[]  PI_O_4_BITS  RECIP_2PI  double  E  F_11_12  F_13_14  F_15_16  F_1_11  F_1_13  F_1_15  F_1_17  F_1_2  F_1_3  F_1_4  F_1_5  F_1_7  F_1_9  F_3_4  F_5_6  F_7_8  F_9_10  LN_2_A  LN_2_B  PI  TWO_POWER_52  a  a2  aa  ab  absAsinh  absAtanh  b  base  baseA  baseB  c  cD2pH  cRH  cTmpH  cd  cosEpsA  cosEpsB  cosa  cosaa  cosab  cosb  costA  costB  d  d1High  d1Low  d2p  d2pHH  d2pHL  d2pHigh  d2pLow  da  daa  dab  db  denom  denomb  denomr  direction  dx  epsA  epsA2  epsB  epsilon  err  est  esta  estb  extra  facta  factb  finalRemA  finalRemB  fracPartA  fracPartB  fx1  intPartA  intPartB  invx  invy  lna  lnb  lnza  lnzb  lores  mant  na  nb  numer  oneOverXa  p  p2  pi2a  pi2b  pia  pib  r  rHH  rHL  ra  ratio  ratioa  ratiob  rb  recip  recipa  recipb  remA  remB  result  resultHigh  resultLow  resultb  rln10a  rln10b  sinEpsA  sinEpsB  sina  sinb  sintA  sintB  sumA  sumB  t  temp  temp2  tempA  tempB  tempC  tmp  tmp1  tmp2  tmpA  tmpB  tmpHigh  tmpLow  x  x2  xa  xb  xbadj  xpa  xpb  xs  y  ya  yaa  yab  yb  z  za  zaa  zab  zb  double[][]  LN_HI_PREC_COEF  LN_MANT  LN_QUICK_COEF  int  EXP_FRAC_TABLE_LEN  EXP_INT_TABLE_LEN  EXP_INT_TABLE_MAX_INDEX  LN_MANT_LEN  SINE_TABLE_LEN  a  b  bits  e  exp  exp3  exponent  finalK  i  idx  intFrac  intPart  intVal  k  mantissa  mostSignificantLostBit  n  quadrant  scaledExponent  shift  sign  splitFactor  x  long  HEX_40000000  MASK_30BITS  a  ac  ad  b  bc  bd  bits  c  d  inbits  mantissa  mostSignificantLostBit  prod2A  prod2B  prodA  prodB  shpi0  shpiA  shpiB  sign  x  xl  y  yi  z  	projects/Math16/src/main/java/org/apache/commons/math3/util/FastMath.java	0.7071067811865475	3522	3522	2	replace	int  bits  =  Double.doubleToRawLongBits(a,  b  +  1);	  int    bits    =    Double.doubleToRawLongBits(a,    b);    	non-compiled	[CE]  <identifier>  expected	12	None	replace
19	[BUG]  [BUGGY]  if(a  <  0x800000000000000L)  {  long  bits  =  Double.doubleToRawLongBits(a);  if  (bits  ==  0x800000000000L)  {  return  b;  }  [CE]  <identifier>  expected  [FE]              AssertionError      [CONTEXT]      }  if  (a  <  b)  {  return  b;  }  if  (a  !=  b)  {  return  Double.NaN;  }        [BUGGY]  if(a  <  0x800000000000000L)  {  long  bits  =  Double.doubleToRawLongBits(a);  if  (bits  ==  0x800000000000L)  {  return  b;  }  [BUGGY]      long  bits  =  Double.doubleToRawLongBits(a);  if  (bits  ==  0x8000000000000000L)  {  return  b;  }  return  a;  }  [CLASS]  FastMath  ExpIntTable  ExpFracTable  lnMant  CodyWaite  [METHOD]  max  [RETURN_TYPE]  double  final  double  a  final  double  b  [VARIABLES]  boolean  RECOMPUTE_TABLES_AT_RUNTIME  bita  bitb  bitsum  cotanFlag  leftPlane  negate  negative  subnormal  double[]  CBRTTWO  COSINE_TABLE_A  COSINE_TABLE_B  EIGHTHS  EXP_FRAC_TABLE_A  EXP_FRAC_TABLE_B  EXP_INT_TABLE_A  EXP_INT_TABLE_B  SINE_TABLE_A  SINE_TABLE_B  TANGENT_TABLE_A  TANGENT_TABLE_B  hiPrec  hiPrecOut  lnCoef_i  lnCoef_last  lnm  lns  reduceResults  result  long[]  PI_O_4_BITS  RECIP_2PI  double  E  F_11_12  F_13_14  F_15_16  F_1_11  F_1_13  F_1_15  F_1_17  F_1_2  F_1_3  F_1_4  F_1_5  F_1_7  F_1_9  F_3_4  F_5_6  F_7_8  F_9_10  LN_2_A  LN_2_B  PI  TWO_POWER_52  a  a2  aa  ab  absAsinh  absAtanh  b  base  baseA  baseB  c  cD2pH  cRH  cTmpH  cd  cosEpsA  cosEpsB  cosa  cosaa  cosab  cosb  costA  costB  d  d1High  d1Low  d2p  d2pHH  d2pHL  d2pHigh  d2pLow  da  daa  dab  db  denom  denomb  denomr  direction  dx  epsA  epsA2  epsB  epsilon  err  est  esta  estb  extra  facta  factb  finalRemA  finalRemB  fracPartA  fracPartB  fx1  intPartA  intPartB  invx  invy  lna  lnb  lnza  lnzb  lores  mant  na  nb  numer  oneOverXa  p  p2  pi2a  pi2b  pia  pib  r  rHH  rHL  ra  ratio  ratioa  ratiob  rb  recip  recipa  recipb  remA  remB  result  resultHigh  resultLow  resultb  rln10a  rln10b  sinEpsA  sinEpsB  sina  sinb  sintA  sintB  sumA  sumB  t  temp  temp2  tempA  tempB  tempC  tmp  tmp1  tmp2  tmpA  tmpB  tmpHigh  tmpLow  x  x2  xa  xb  xbadj  xpa  xpb  xs  y  ya  yaa  yab  yb  z  za  zaa  zab  zb  double[][]  LN_HI_PREC_COEF  LN_MANT  LN_QUICK_COEF  int  EXP_FRAC_TABLE_LEN  EXP_INT_TABLE_LEN  EXP_INT_TABLE_MAX_INDEX  LN_MANT_LEN  SINE_TABLE_LEN  a  b  bits  e  exp  exp3  exponent  finalK  i  idx  intFrac  intPart  intVal  k  mantissa  mostSignificantLostBit  n  quadrant  scaledExponent  shift  sign  splitFactor  x  long  HEX_40000000  MASK_30BITS  a  ac  ad  b  bc  bd  bits  c  d  inbits  mantissa  mostSignificantLostBit  prod2A  prod2B  prodA  prodB  shpi0  shpiA  shpiB  sign  x  xl  y  yi  z  	projects/Math16/src/main/java/org/apache/commons/math3/util/FastMath.java	0.7071067811865475	3522	3522	2	replace	if(a  <  0x800000000000000L)  {  long  bits  =  Double.doubleToRawLongBits(a);  if  (bits  ==  0x800000000000L)  {  return  b;  }	  if(bits    <    0x800000000000000L)    {    long    bits    =    Double.doubleToRawLongBits(a);    if    (bits    ==    0x800000000000L)    {    return    b;    }    	non-compiled	[CE]  <identifier>  expected	28	None	replace
20	[BUG]  [BUGGY]  if(a  <  b)  {  if(bits  <  0x800000000000000L)  {  bits  =  Double.doubleToRawLongBits(a);  if  (bits  ==  0x800000000000L)  {  return  b;  }  [CE]  <identifier>  expected  [FE]                AssertionError      [CONTEXT]      }  if  (a  <  b)  {  return  b;  }  if  (a  !=  b)  {  return  Double.NaN;  }        [BUGGY]  if(a  <  b)  {  if(bits  <  0x800000000000000L)  {  bits  =  Double.doubleToRawLongBits(a);  if  (bits  ==  0x800000000000L)  {  return  b;  }  [BUGGY]      long  bits  =  Double.doubleToRawLongBits(a);  if  (bits  ==  0x8000000000000000L)  {  return  b;  }  return  a;  }  [CLASS]  FastMath  ExpIntTable  ExpFracTable  lnMant  CodyWaite  [METHOD]  max  [RETURN_TYPE]  double  final  double  a  final  double  b  [VARIABLES]  boolean  RECOMPUTE_TABLES_AT_RUNTIME  bita  bitb  bitsum  cotanFlag  leftPlane  negate  negative  subnormal  double[]  CBRTTWO  COSINE_TABLE_A  COSINE_TABLE_B  EIGHTHS  EXP_FRAC_TABLE_A  EXP_FRAC_TABLE_B  EXP_INT_TABLE_A  EXP_INT_TABLE_B  SINE_TABLE_A  SINE_TABLE_B  TANGENT_TABLE_A  TANGENT_TABLE_B  hiPrec  hiPrecOut  lnCoef_i  lnCoef_last  lnm  lns  reduceResults  result  long[]  PI_O_4_BITS  RECIP_2PI  double  E  F_11_12  F_13_14  F_15_16  F_1_11  F_1_13  F_1_15  F_1_17  F_1_2  F_1_3  F_1_4  F_1_5  F_1_7  F_1_9  F_3_4  F_5_6  F_7_8  F_9_10  LN_2_A  LN_2_B  PI  TWO_POWER_52  a  a2  aa  ab  absAsinh  absAtanh  b  base  baseA  baseB  c  cD2pH  cRH  cTmpH  cd  cosEpsA  cosEpsB  cosa  cosaa  cosab  cosb  costA  costB  d  d1High  d1Low  d2p  d2pHH  d2pHL  d2pHigh  d2pLow  da  daa  dab  db  denom  denomb  denomr  direction  dx  epsA  epsA2  epsB  epsilon  err  est  esta  estb  extra  facta  factb  finalRemA  finalRemB  fracPartA  fracPartB  fx1  intPartA  intPartB  invx  invy  lna  lnb  lnza  lnzb  lores  mant  na  nb  numer  oneOverXa  p  p2  pi2a  pi2b  pia  pib  r  rHH  rHL  ra  ratio  ratioa  ratiob  rb  recip  recipa  recipb  remA  remB  result  resultHigh  resultLow  resultb  rln10a  rln10b  sinEpsA  sinEpsB  sina  sinb  sintA  sintB  sumA  sumB  t  temp  temp2  tempA  tempB  tempC  tmp  tmp1  tmp2  tmpA  tmpB  tmpHigh  tmpLow  x  x2  xa  xb  xbadj  xpa  xpb  xs  y  ya  yaa  yab  yb  z  za  zaa  zab  zb  double[][]  LN_HI_PREC_COEF  LN_MANT  LN_QUICK_COEF  int  EXP_FRAC_TABLE_LEN  EXP_INT_TABLE_LEN  EXP_INT_TABLE_MAX_INDEX  LN_MANT_LEN  SINE_TABLE_LEN  a  b  bits  e  exp  exp3  exponent  finalK  i  idx  intFrac  intPart  intVal  k  mantissa  mostSignificantLostBit  n  quadrant  scaledExponent  shift  sign  splitFactor  x  long  HEX_40000000  MASK_30BITS  a  ac  ad  b  bc  bd  bits  c  d  inbits  mantissa  mostSignificantLostBit  prod2A  prod2B  prodA  prodB  shpi0  shpiA  shpiB  sign  x  xl  y  yi  z  	projects/Math16/src/main/java/org/apache/commons/math3/util/FastMath.java	0.7071067811865475	3522	3522	2	replace	if(a  <  b)  {  if(bits  <  0x800000000000000L)  {  bits  =  Double.doubleToRawLongBits(a);  if  (bits  ==  0x800000000000L)  {  return  b;  }	  if(bits    <    0x800000000000000L)    {    long    bits    =    Double.doubleToRawLongBits(a);    if    (bits    ==    0x800000000000L)    {    return    b;    }    	non-compiled	[CE]  <identifier>  expected	28	None	replace
21	[BUG]  [BUGGY]  if(a  ==  b)  {  if(bits  ==  0)  {  return  b;  }  [CE]  <identifier>  expected  [FE]            AssertionError      [CONTEXT]      }  if  (a  <  b)  {  return  b;  }  if  (a  !=  b)  {  return  Double.NaN;  }        [BUGGY]  if(a  ==  b)  {  if(bits  ==  0)  {  return  b;  }  [BUGGY]      long  bits  =  Double.doubleToRawLongBits(a);  if  (bits  ==  0x8000000000000000L)  {  return  b;  }  return  a;  }  [CLASS]  FastMath  ExpIntTable  ExpFracTable  lnMant  CodyWaite  [METHOD]  max  [RETURN_TYPE]  double  final  double  a  final  double  b  [VARIABLES]  boolean  RECOMPUTE_TABLES_AT_RUNTIME  bita  bitb  bitsum  cotanFlag  leftPlane  negate  negative  subnormal  double[]  CBRTTWO  COSINE_TABLE_A  COSINE_TABLE_B  EIGHTHS  EXP_FRAC_TABLE_A  EXP_FRAC_TABLE_B  EXP_INT_TABLE_A  EXP_INT_TABLE_B  SINE_TABLE_A  SINE_TABLE_B  TANGENT_TABLE_A  TANGENT_TABLE_B  hiPrec  hiPrecOut  lnCoef_i  lnCoef_last  lnm  lns  reduceResults  result  long[]  PI_O_4_BITS  RECIP_2PI  double  E  F_11_12  F_13_14  F_15_16  F_1_11  F_1_13  F_1_15  F_1_17  F_1_2  F_1_3  F_1_4  F_1_5  F_1_7  F_1_9  F_3_4  F_5_6  F_7_8  F_9_10  LN_2_A  LN_2_B  PI  TWO_POWER_52  a  a2  aa  ab  absAsinh  absAtanh  b  base  baseA  baseB  c  cD2pH  cRH  cTmpH  cd  cosEpsA  cosEpsB  cosa  cosaa  cosab  cosb  costA  costB  d  d1High  d1Low  d2p  d2pHH  d2pHL  d2pHigh  d2pLow  da  daa  dab  db  denom  denomb  denomr  direction  dx  epsA  epsA2  epsB  epsilon  err  est  esta  estb  extra  facta  factb  finalRemA  finalRemB  fracPartA  fracPartB  fx1  intPartA  intPartB  invx  invy  lna  lnb  lnza  lnzb  lores  mant  na  nb  numer  oneOverXa  p  p2  pi2a  pi2b  pia  pib  r  rHH  rHL  ra  ratio  ratioa  ratiob  rb  recip  recipa  recipb  remA  remB  result  resultHigh  resultLow  resultb  rln10a  rln10b  sinEpsA  sinEpsB  sina  sinb  sintA  sintB  sumA  sumB  t  temp  temp2  tempA  tempB  tempC  tmp  tmp1  tmp2  tmpA  tmpB  tmpHigh  tmpLow  x  x2  xa  xb  xbadj  xpa  xpb  xs  y  ya  yaa  yab  yb  z  za  zaa  zab  zb  double[][]  LN_HI_PREC_COEF  LN_MANT  LN_QUICK_COEF  int  EXP_FRAC_TABLE_LEN  EXP_INT_TABLE_LEN  EXP_INT_TABLE_MAX_INDEX  LN_MANT_LEN  SINE_TABLE_LEN  a  b  bits  e  exp  exp3  exponent  finalK  i  idx  intFrac  intPart  intVal  k  mantissa  mostSignificantLostBit  n  quadrant  scaledExponent  shift  sign  splitFactor  x  long  HEX_40000000  MASK_30BITS  a  ac  ad  b  bc  bd  bits  c  d  inbits  mantissa  mostSignificantLostBit  prod2A  prod2B  prodA  prodB  shpi0  shpiA  shpiB  sign  x  xl  y  yi  z  	projects/Math16/src/main/java/org/apache/commons/math3/util/FastMath.java	0.7071067811865475	3522	3522	2	replace	if(a  ==  b)  {  if(bits  ==  0)  {  return  b;  }	  if(bits    ==    0)    {    long    bits    =    Double.doubleToRawLongBits(a);    if(bits    ==    0x8000000000000000L)    {    return    b;    }    	non-compiled	[CE]  <identifier>  expected	18	None	replace
22	[BUG]  [BUGGY]  if(a!=  b)  {  if(bits  ==  0)  {  return  b;  }  [CE]  <identifier>  expected  [FE]              AssertionError      [CONTEXT]      }  if  (a  <  b)  {  return  b;  }  if  (a  !=  b)  {  return  Double.NaN;  }        [BUGGY]  if(a!=  b)  {  if(bits  ==  0)  {  return  b;  }  [BUGGY]      long  bits  =  Double.doubleToRawLongBits(a);  if  (bits  ==  0x8000000000000000L)  {  return  b;  }  return  a;  }  [CLASS]  FastMath  ExpIntTable  ExpFracTable  lnMant  CodyWaite  [METHOD]  max  [RETURN_TYPE]  double  final  double  a  final  double  b  [VARIABLES]  boolean  RECOMPUTE_TABLES_AT_RUNTIME  bita  bitb  bitsum  cotanFlag  leftPlane  negate  negative  subnormal  double[]  CBRTTWO  COSINE_TABLE_A  COSINE_TABLE_B  EIGHTHS  EXP_FRAC_TABLE_A  EXP_FRAC_TABLE_B  EXP_INT_TABLE_A  EXP_INT_TABLE_B  SINE_TABLE_A  SINE_TABLE_B  TANGENT_TABLE_A  TANGENT_TABLE_B  hiPrec  hiPrecOut  lnCoef_i  lnCoef_last  lnm  lns  reduceResults  result  long[]  PI_O_4_BITS  RECIP_2PI  double  E  F_11_12  F_13_14  F_15_16  F_1_11  F_1_13  F_1_15  F_1_17  F_1_2  F_1_3  F_1_4  F_1_5  F_1_7  F_1_9  F_3_4  F_5_6  F_7_8  F_9_10  LN_2_A  LN_2_B  PI  TWO_POWER_52  a  a2  aa  ab  absAsinh  absAtanh  b  base  baseA  baseB  c  cD2pH  cRH  cTmpH  cd  cosEpsA  cosEpsB  cosa  cosaa  cosab  cosb  costA  costB  d  d1High  d1Low  d2p  d2pHH  d2pHL  d2pHigh  d2pLow  da  daa  dab  db  denom  denomb  denomr  direction  dx  epsA  epsA2  epsB  epsilon  err  est  esta  estb  extra  facta  factb  finalRemA  finalRemB  fracPartA  fracPartB  fx1  intPartA  intPartB  invx  invy  lna  lnb  lnza  lnzb  lores  mant  na  nb  numer  oneOverXa  p  p2  pi2a  pi2b  pia  pib  r  rHH  rHL  ra  ratio  ratioa  ratiob  rb  recip  recipa  recipb  remA  remB  result  resultHigh  resultLow  resultb  rln10a  rln10b  sinEpsA  sinEpsB  sina  sinb  sintA  sintB  sumA  sumB  t  temp  temp2  tempA  tempB  tempC  tmp  tmp1  tmp2  tmpA  tmpB  tmpHigh  tmpLow  x  x2  xa  xb  xbadj  xpa  xpb  xs  y  ya  yaa  yab  yb  z  za  zaa  zab  zb  double[][]  LN_HI_PREC_COEF  LN_MANT  LN_QUICK_COEF  int  EXP_FRAC_TABLE_LEN  EXP_INT_TABLE_LEN  EXP_INT_TABLE_MAX_INDEX  LN_MANT_LEN  SINE_TABLE_LEN  a  b  bits  e  exp  exp3  exponent  finalK  i  idx  intFrac  intPart  intVal  k  mantissa  mostSignificantLostBit  n  quadrant  scaledExponent  shift  sign  splitFactor  x  long  HEX_40000000  MASK_30BITS  a  ac  ad  b  bc  bd  bits  c  d  inbits  mantissa  mostSignificantLostBit  prod2A  prod2B  prodA  prodB  shpi0  shpiA  shpiB  sign  x  xl  y  yi  z  	projects/Math16/src/main/java/org/apache/commons/math3/util/FastMath.java	0.7071067811865475	3522	3522	2	replace	if(a!=  b)  {  if(bits  ==  0)  {  return  b;  }	  if(bits    ==    0)    {    long    bits    =    Double.doubleToRawLongBits(a);    if(bits    ==    0x8000000000000000L)    {    return    b;    }    	non-compiled	[CE]  <identifier>  expected	18	None	replace
23	[BUG]  [BUGGY]  Bitums.bits  =  a.bits();  [CE]  <identifier>  expected  [FE]                AssertionError      [CONTEXT]      }  if  (a  <  b)  {  return  b;  }  if  (a  !=  b)  {  return  Double.NaN;  }        [BUGGY]  Bitums.bits  =  a.bits();  [BUGGY]      if  (bits  ==  0x8000000000000000L)  {  return  b;  }  return  a;  }  [CLASS]  FastMath  ExpIntTable  ExpFracTable  lnMant  CodyWaite  [METHOD]  max  [RETURN_TYPE]  double  final  double  a  final  double  b  [VARIABLES]  boolean  RECOMPUTE_TABLES_AT_RUNTIME  bita  bitb  bitsum  cotanFlag  leftPlane  negate  negative  subnormal  double[]  CBRTTWO  COSINE_TABLE_A  COSINE_TABLE_B  EIGHTHS  EXP_FRAC_TABLE_A  EXP_FRAC_TABLE_B  EXP_INT_TABLE_A  EXP_INT_TABLE_B  SINE_TABLE_A  SINE_TABLE_B  TANGENT_TABLE_A  TANGENT_TABLE_B  hiPrec  hiPrecOut  lnCoef_i  lnCoef_last  lnm  lns  reduceResults  result  long[]  PI_O_4_BITS  RECIP_2PI  double  E  F_11_12  F_13_14  F_15_16  F_1_11  F_1_13  F_1_15  F_1_17  F_1_2  F_1_3  F_1_4  F_1_5  F_1_7  F_1_9  F_3_4  F_5_6  F_7_8  F_9_10  LN_2_A  LN_2_B  PI  TWO_POWER_52  a  a2  aa  ab  absAsinh  absAtanh  b  base  baseA  baseB  c  cD2pH  cRH  cTmpH  cd  cosEpsA  cosEpsB  cosa  cosaa  cosab  cosb  costA  costB  d  d1High  d1Low  d2p  d2pHH  d2pHL  d2pHigh  d2pLow  da  daa  dab  db  denom  denomb  denomr  direction  dx  epsA  epsA2  epsB  epsilon  err  est  esta  estb  extra  facta  factb  finalRemA  finalRemB  fracPartA  fracPartB  fx1  intPartA  intPartB  invx  invy  lna  lnb  lnza  lnzb  lores  mant  na  nb  numer  oneOverXa  p  p2  pi2a  pi2b  pia  pib  r  rHH  rHL  ra  ratio  ratioa  ratiob  rb  recip  recipa  recipb  remA  remB  result  resultHigh  resultLow  resultb  rln10a  rln10b  sinEpsA  sinEpsB  sina  sinb  sintA  sintB  sumA  sumB  t  temp  temp2  tempA  tempB  tempC  tmp  tmp1  tmp2  tmpA  tmpB  tmpHigh  tmpLow  x  x2  xa  xb  xbadj  xpa  xpb  xs  y  ya  yaa  yab  yb  z  za  zaa  zab  zb  double[][]  LN_HI_PREC_COEF  LN_MANT  LN_QUICK_COEF  int  EXP_FRAC_TABLE_LEN  EXP_INT_TABLE_LEN  EXP_INT_TABLE_MAX_INDEX  LN_MANT_LEN  SINE_TABLE_LEN  a  b  bits  e  exp  exp3  exponent  finalK  i  idx  intFrac  intPart  intVal  k  mantissa  mostSignificantLostBit  n  quadrant  scaledExponent  shift  sign  splitFactor  x  long  HEX_40000000  MASK_30BITS  a  ac  ad  b  bc  bd  bits  c  d  inbits  mantissa  mostSignificantLostBit  prod2A  prod2B  prodA  prodB  shpi0  shpiA  shpiB  sign  x  xl  y  yi  z  	projects/Math16/src/main/java/org/apache/commons/math3/util/FastMath.java	0.7071067811865475	3522	3522	2	replace	Bitums.bits  =  a.bits();	  Bitums.bits    =    b.bits();    	non-compiled	[CE]  <identifier>  expected	23	None	replace
24	[BUG]  [BUGGY]  if(a  <  0)  {  long  bits  =  Double.doubleToRawLongBits(a);  if  (bits  ==  0x800000000000L)  {  return  b;  }  [CE]  <identifier>  expected  [FE]            AssertionError      [CONTEXT]      }  if  (a  <  b)  {  return  b;  }  if  (a  !=  b)  {  return  Double.NaN;  }        [BUGGY]  if(a  <  0)  {  long  bits  =  Double.doubleToRawLongBits(a);  if  (bits  ==  0x800000000000L)  {  return  b;  }  [BUGGY]      long  bits  =  Double.doubleToRawLongBits(a);  if  (bits  ==  0x8000000000000000L)  {  return  b;  }  return  a;  }  [CLASS]  FastMath  ExpIntTable  ExpFracTable  lnMant  CodyWaite  [METHOD]  max  [RETURN_TYPE]  double  final  double  a  final  double  b  [VARIABLES]  boolean  RECOMPUTE_TABLES_AT_RUNTIME  bita  bitb  bitsum  cotanFlag  leftPlane  negate  negative  subnormal  double[]  CBRTTWO  COSINE_TABLE_A  COSINE_TABLE_B  EIGHTHS  EXP_FRAC_TABLE_A  EXP_FRAC_TABLE_B  EXP_INT_TABLE_A  EXP_INT_TABLE_B  SINE_TABLE_A  SINE_TABLE_B  TANGENT_TABLE_A  TANGENT_TABLE_B  hiPrec  hiPrecOut  lnCoef_i  lnCoef_last  lnm  lns  reduceResults  result  long[]  PI_O_4_BITS  RECIP_2PI  double  E  F_11_12  F_13_14  F_15_16  F_1_11  F_1_13  F_1_15  F_1_17  F_1_2  F_1_3  F_1_4  F_1_5  F_1_7  F_1_9  F_3_4  F_5_6  F_7_8  F_9_10  LN_2_A  LN_2_B  PI  TWO_POWER_52  a  a2  aa  ab  absAsinh  absAtanh  b  base  baseA  baseB  c  cD2pH  cRH  cTmpH  cd  cosEpsA  cosEpsB  cosa  cosaa  cosab  cosb  costA  costB  d  d1High  d1Low  d2p  d2pHH  d2pHL  d2pHigh  d2pLow  da  daa  dab  db  denom  denomb  denomr  direction  dx  epsA  epsA2  epsB  epsilon  err  est  esta  estb  extra  facta  factb  finalRemA  finalRemB  fracPartA  fracPartB  fx1  intPartA  intPartB  invx  invy  lna  lnb  lnza  lnzb  lores  mant  na  nb  numer  oneOverXa  p  p2  pi2a  pi2b  pia  pib  r  rHH  rHL  ra  ratio  ratioa  ratiob  rb  recip  recipa  recipb  remA  remB  result  resultHigh  resultLow  resultb  rln10a  rln10b  sinEpsA  sinEpsB  sina  sinb  sintA  sintB  sumA  sumB  t  temp  temp2  tempA  tempB  tempC  tmp  tmp1  tmp2  tmpA  tmpB  tmpHigh  tmpLow  x  x2  xa  xb  xbadj  xpa  xpb  xs  y  ya  yaa  yab  yb  z  za  zaa  zab  zb  double[][]  LN_HI_PREC_COEF  LN_MANT  LN_QUICK_COEF  int  EXP_FRAC_TABLE_LEN  EXP_INT_TABLE_LEN  EXP_INT_TABLE_MAX_INDEX  LN_MANT_LEN  SINE_TABLE_LEN  a  b  bits  e  exp  exp3  exponent  finalK  i  idx  intFrac  intPart  intVal  k  mantissa  mostSignificantLostBit  n  quadrant  scaledExponent  shift  sign  splitFactor  x  long  HEX_40000000  MASK_30BITS  a  ac  ad  b  bc  bd  bits  c  d  inbits  mantissa  mostSignificantLostBit  prod2A  prod2B  prodA  prodB  shpi0  shpiA  shpiB  sign  x  xl  y  yi  z  	projects/Math16/src/main/java/org/apache/commons/math3/util/FastMath.java	0.7071067811865475	3522	3522	2	replace	if(a  <  0)  {  long  bits  =  Double.doubleToRawLongBits(a);  if  (bits  ==  0x800000000000L)  {  return  b;  }	  if(bits    <    0)    {    long    bits    =    Double.doubleToRawLongBits(a);    if    (bits    ==    0x800000000000L)    {    return    b;    }    	non-compiled	[CE]  <identifier>  expected	20	None	replace
25	[BUG]  [BUGGY]  if(a  <  b)  {  if(bits  <  0)  {  return  Double.doubleToRawLongBits(a);  if  (bits  ==  0x800000000000L)  {  return  b;  }  [CE]  <identifier>  expected  [FE]              AssertionError      [CONTEXT]      }  if  (a  <  b)  {  return  b;  }  if  (a  !=  b)  {  return  Double.NaN;  }        [BUGGY]  if(a  <  b)  {  if(bits  <  0)  {  return  Double.doubleToRawLongBits(a);  if  (bits  ==  0x800000000000L)  {  return  b;  }  [BUGGY]      long  bits  =  Double.doubleToRawLongBits(a);  if  (bits  ==  0x8000000000000000L)  {  return  b;  }  return  a;  }  [CLASS]  FastMath  ExpIntTable  ExpFracTable  lnMant  CodyWaite  [METHOD]  max  [RETURN_TYPE]  double  final  double  a  final  double  b  [VARIABLES]  boolean  RECOMPUTE_TABLES_AT_RUNTIME  bita  bitb  bitsum  cotanFlag  leftPlane  negate  negative  subnormal  double[]  CBRTTWO  COSINE_TABLE_A  COSINE_TABLE_B  EIGHTHS  EXP_FRAC_TABLE_A  EXP_FRAC_TABLE_B  EXP_INT_TABLE_A  EXP_INT_TABLE_B  SINE_TABLE_A  SINE_TABLE_B  TANGENT_TABLE_A  TANGENT_TABLE_B  hiPrec  hiPrecOut  lnCoef_i  lnCoef_last  lnm  lns  reduceResults  result  long[]  PI_O_4_BITS  RECIP_2PI  double  E  F_11_12  F_13_14  F_15_16  F_1_11  F_1_13  F_1_15  F_1_17  F_1_2  F_1_3  F_1_4  F_1_5  F_1_7  F_1_9  F_3_4  F_5_6  F_7_8  F_9_10  LN_2_A  LN_2_B  PI  TWO_POWER_52  a  a2  aa  ab  absAsinh  absAtanh  b  base  baseA  baseB  c  cD2pH  cRH  cTmpH  cd  cosEpsA  cosEpsB  cosa  cosaa  cosab  cosb  costA  costB  d  d1High  d1Low  d2p  d2pHH  d2pHL  d2pHigh  d2pLow  da  daa  dab  db  denom  denomb  denomr  direction  dx  epsA  epsA2  epsB  epsilon  err  est  esta  estb  extra  facta  factb  finalRemA  finalRemB  fracPartA  fracPartB  fx1  intPartA  intPartB  invx  invy  lna  lnb  lnza  lnzb  lores  mant  na  nb  numer  oneOverXa  p  p2  pi2a  pi2b  pia  pib  r  rHH  rHL  ra  ratio  ratioa  ratiob  rb  recip  recipa  recipb  remA  remB  result  resultHigh  resultLow  resultb  rln10a  rln10b  sinEpsA  sinEpsB  sina  sinb  sintA  sintB  sumA  sumB  t  temp  temp2  tempA  tempB  tempC  tmp  tmp1  tmp2  tmpA  tmpB  tmpHigh  tmpLow  x  x2  xa  xb  xbadj  xpa  xpb  xs  y  ya  yaa  yab  yb  z  za  zaa  zab  zb  double[][]  LN_HI_PREC_COEF  LN_MANT  LN_QUICK_COEF  int  EXP_FRAC_TABLE_LEN  EXP_INT_TABLE_LEN  EXP_INT_TABLE_MAX_INDEX  LN_MANT_LEN  SINE_TABLE_LEN  a  b  bits  e  exp  exp3  exponent  finalK  i  idx  intFrac  intPart  intVal  k  mantissa  mostSignificantLostBit  n  quadrant  scaledExponent  shift  sign  splitFactor  x  long  HEX_40000000  MASK_30BITS  a  ac  ad  b  bc  bd  bits  c  d  inbits  mantissa  mostSignificantLostBit  prod2A  prod2B  prodA  prodB  shpi0  shpiA  shpiB  sign  x  xl  y  yi  z  	projects/Math16/src/main/java/org/apache/commons/math3/util/FastMath.java	0.7071067811865475	3522	3522	2	replace	if(a  <  b)  {  if(bits  <  0)  {  return  Double.doubleToRawLongBits(a);  if  (bits  ==  0x800000000000L)  {  return  b;  }	  if(bits    <    0)    {    long    bits    =    Double.doubleToRawLongBits(a);    if    (bits    ==    0x800000000000L)    {    return    b;    }    	non-compiled	[CE]  <identifier>  expected	20	None	replace
26	[BUG]  [BUGGY]  intbits  =  lnMant.getIntBits(a);  [CE]  <identifier>  expected  [FE]                  AssertionError      [CONTEXT]      }  if  (a  <  b)  {  return  b;  }  if  (a  !=  b)  {  return  Double.NaN;  }        [BUGGY]  intbits  =  lnMant.getIntBits(a);  [BUGGY]      if  (bits  ==  0x8000000000000000L)  {  return  b;  }  return  a;  }  [CLASS]  FastMath  ExpIntTable  ExpFracTable  lnMant  CodyWaite  [METHOD]  max  [RETURN_TYPE]  double  final  double  a  final  double  b  [VARIABLES]  boolean  RECOMPUTE_TABLES_AT_RUNTIME  bita  bitb  bitsum  cotanFlag  leftPlane  negate  negative  subnormal  double[]  CBRTTWO  COSINE_TABLE_A  COSINE_TABLE_B  EIGHTHS  EXP_FRAC_TABLE_A  EXP_FRAC_TABLE_B  EXP_INT_TABLE_A  EXP_INT_TABLE_B  SINE_TABLE_A  SINE_TABLE_B  TANGENT_TABLE_A  TANGENT_TABLE_B  hiPrec  hiPrecOut  lnCoef_i  lnCoef_last  lnm  lns  reduceResults  result  long[]  PI_O_4_BITS  RECIP_2PI  double  E  F_11_12  F_13_14  F_15_16  F_1_11  F_1_13  F_1_15  F_1_17  F_1_2  F_1_3  F_1_4  F_1_5  F_1_7  F_1_9  F_3_4  F_5_6  F_7_8  F_9_10  LN_2_A  LN_2_B  PI  TWO_POWER_52  a  a2  aa  ab  absAsinh  absAtanh  b  base  baseA  baseB  c  cD2pH  cRH  cTmpH  cd  cosEpsA  cosEpsB  cosa  cosaa  cosab  cosb  costA  costB  d  d1High  d1Low  d2p  d2pHH  d2pHL  d2pHigh  d2pLow  da  daa  dab  db  denom  denomb  denomr  direction  dx  epsA  epsA2  epsB  epsilon  err  est  esta  estb  extra  facta  factb  finalRemA  finalRemB  fracPartA  fracPartB  fx1  intPartA  intPartB  invx  invy  lna  lnb  lnza  lnzb  lores  mant  na  nb  numer  oneOverXa  p  p2  pi2a  pi2b  pia  pib  r  rHH  rHL  ra  ratio  ratioa  ratiob  rb  recip  recipa  recipb  remA  remB  result  resultHigh  resultLow  resultb  rln10a  rln10b  sinEpsA  sinEpsB  sina  sinb  sintA  sintB  sumA  sumB  t  temp  temp2  tempA  tempB  tempC  tmp  tmp1  tmp2  tmpA  tmpB  tmpHigh  tmpLow  x  x2  xa  xb  xbadj  xpa  xpb  xs  y  ya  yaa  yab  yb  z  za  zaa  zab  zb  double[][]  LN_HI_PREC_COEF  LN_MANT  LN_QUICK_COEF  int  EXP_FRAC_TABLE_LEN  EXP_INT_TABLE_LEN  EXP_INT_TABLE_MAX_INDEX  LN_MANT_LEN  SINE_TABLE_LEN  a  b  bits  e  exp  exp3  exponent  finalK  i  idx  intFrac  intPart  intVal  k  mantissa  mostSignificantLostBit  n  quadrant  scaledExponent  shift  sign  splitFactor  x  long  HEX_40000000  MASK_30BITS  a  ac  ad  b  bc  bd  bits  c  d  inbits  mantissa  mostSignificantLostBit  prod2A  prod2B  prodA  prodB  shpi0  shpiA  shpiB  sign  x  xl  y  yi  z  	projects/Math16/src/main/java/org/apache/commons/math3/util/FastMath.java	0.7071067811865475	3522	3522	2	replace	intbits  =  lnMant.getIntBits(a);	  intbits    =    lnMant.getIntBits();    	non-compiled	[CE]  <identifier>  expected	24	None	replace
27	[BUG]  [BUGGY]  if(bits  <  0)  {  if(a  <  b)  {  return  Double.doubleToRawLongBits(a);  if(bits  ==  0x8000000000000000L)  {  return  b;  }  [CE]  <identifier>  expected  [FE]              AssertionError      [CONTEXT]      }  if  (a  <  b)  {  return  b;  }  if  (a  !=  b)  {  return  Double.NaN;  }        [BUGGY]  if(bits  <  0)  {  if(a  <  b)  {  return  Double.doubleToRawLongBits(a);  if(bits  ==  0x8000000000000000L)  {  return  b;  }  [BUGGY]      long  bits  =  Double.doubleToRawLongBits(a);  if  (bits  ==  0x8000000000000000L)  {  return  b;  }  return  a;  }  [CLASS]  FastMath  ExpIntTable  ExpFracTable  lnMant  CodyWaite  [METHOD]  max  [RETURN_TYPE]  double  final  double  a  final  double  b  [VARIABLES]  boolean  RECOMPUTE_TABLES_AT_RUNTIME  bita  bitb  bitsum  cotanFlag  leftPlane  negate  negative  subnormal  double[]  CBRTTWO  COSINE_TABLE_A  COSINE_TABLE_B  EIGHTHS  EXP_FRAC_TABLE_A  EXP_FRAC_TABLE_B  EXP_INT_TABLE_A  EXP_INT_TABLE_B  SINE_TABLE_A  SINE_TABLE_B  TANGENT_TABLE_A  TANGENT_TABLE_B  hiPrec  hiPrecOut  lnCoef_i  lnCoef_last  lnm  lns  reduceResults  result  long[]  PI_O_4_BITS  RECIP_2PI  double  E  F_11_12  F_13_14  F_15_16  F_1_11  F_1_13  F_1_15  F_1_17  F_1_2  F_1_3  F_1_4  F_1_5  F_1_7  F_1_9  F_3_4  F_5_6  F_7_8  F_9_10  LN_2_A  LN_2_B  PI  TWO_POWER_52  a  a2  aa  ab  absAsinh  absAtanh  b  base  baseA  baseB  c  cD2pH  cRH  cTmpH  cd  cosEpsA  cosEpsB  cosa  cosaa  cosab  cosb  costA  costB  d  d1High  d1Low  d2p  d2pHH  d2pHL  d2pHigh  d2pLow  da  daa  dab  db  denom  denomb  denomr  direction  dx  epsA  epsA2  epsB  epsilon  err  est  esta  estb  extra  facta  factb  finalRemA  finalRemB  fracPartA  fracPartB  fx1  intPartA  intPartB  invx  invy  lna  lnb  lnza  lnzb  lores  mant  na  nb  numer  oneOverXa  p  p2  pi2a  pi2b  pia  pib  r  rHH  rHL  ra  ratio  ratioa  ratiob  rb  recip  recipa  recipb  remA  remB  result  resultHigh  resultLow  resultb  rln10a  rln10b  sinEpsA  sinEpsB  sina  sinb  sintA  sintB  sumA  sumB  t  temp  temp2  tempA  tempB  tempC  tmp  tmp1  tmp2  tmpA  tmpB  tmpHigh  tmpLow  x  x2  xa  xb  xbadj  xpa  xpb  xs  y  ya  yaa  yab  yb  z  za  zaa  zab  zb  double[][]  LN_HI_PREC_COEF  LN_MANT  LN_QUICK_COEF  int  EXP_FRAC_TABLE_LEN  EXP_INT_TABLE_LEN  EXP_INT_TABLE_MAX_INDEX  LN_MANT_LEN  SINE_TABLE_LEN  a  b  bits  e  exp  exp3  exponent  finalK  i  idx  intFrac  intPart  intVal  k  mantissa  mostSignificantLostBit  n  quadrant  scaledExponent  shift  sign  splitFactor  x  long  HEX_40000000  MASK_30BITS  a  ac  ad  b  bc  bd  bits  c  d  inbits  mantissa  mostSignificantLostBit  prod2A  prod2B  prodA  prodB  shpi0  shpiA  shpiB  sign  x  xl  y  yi  z  	projects/Math16/src/main/java/org/apache/commons/math3/util/FastMath.java	0.7071067811865475	3522	3522	2	replace	if(bits  <  0)  {  if(a  <  b)  {  return  Double.doubleToRawLongBits(a);  if(bits  ==  0x8000000000000000L)  {  return  b;  }	  if(a    <    b)    {    if(bits    <    0)    {    return    Double.doubleToRawLongBits(a);    if(bits    ==    0x8000000000000000L)    {    return    b;    }    	non-compiled	[CE]  <identifier>  expected	8	None	replace
28	[BUG]  [BUGGY]  if(bits  ==  0)  {  if(a  <  b)  {  return  Double.doubleToRawLongBits(a);  if(bits  ==  0x8000000000000000L)  {  return  b;  }  [CE]  <identifier>  expected  [FE]                AssertionError      [CONTEXT]      }  if  (a  <  b)  {  return  b;  }  if  (a  !=  b)  {  return  Double.NaN;  }        [BUGGY]  if(bits  ==  0)  {  if(a  <  b)  {  return  Double.doubleToRawLongBits(a);  if(bits  ==  0x8000000000000000L)  {  return  b;  }  [BUGGY]      long  bits  =  Double.doubleToRawLongBits(a);  if  (bits  ==  0x8000000000000000L)  {  return  b;  }  return  a;  }  [CLASS]  FastMath  ExpIntTable  ExpFracTable  lnMant  CodyWaite  [METHOD]  max  [RETURN_TYPE]  double  final  double  a  final  double  b  [VARIABLES]  boolean  RECOMPUTE_TABLES_AT_RUNTIME  bita  bitb  bitsum  cotanFlag  leftPlane  negate  negative  subnormal  double[]  CBRTTWO  COSINE_TABLE_A  COSINE_TABLE_B  EIGHTHS  EXP_FRAC_TABLE_A  EXP_FRAC_TABLE_B  EXP_INT_TABLE_A  EXP_INT_TABLE_B  SINE_TABLE_A  SINE_TABLE_B  TANGENT_TABLE_A  TANGENT_TABLE_B  hiPrec  hiPrecOut  lnCoef_i  lnCoef_last  lnm  lns  reduceResults  result  long[]  PI_O_4_BITS  RECIP_2PI  double  E  F_11_12  F_13_14  F_15_16  F_1_11  F_1_13  F_1_15  F_1_17  F_1_2  F_1_3  F_1_4  F_1_5  F_1_7  F_1_9  F_3_4  F_5_6  F_7_8  F_9_10  LN_2_A  LN_2_B  PI  TWO_POWER_52  a  a2  aa  ab  absAsinh  absAtanh  b  base  baseA  baseB  c  cD2pH  cRH  cTmpH  cd  cosEpsA  cosEpsB  cosa  cosaa  cosab  cosb  costA  costB  d  d1High  d1Low  d2p  d2pHH  d2pHL  d2pHigh  d2pLow  da  daa  dab  db  denom  denomb  denomr  direction  dx  epsA  epsA2  epsB  epsilon  err  est  esta  estb  extra  facta  factb  finalRemA  finalRemB  fracPartA  fracPartB  fx1  intPartA  intPartB  invx  invy  lna  lnb  lnza  lnzb  lores  mant  na  nb  numer  oneOverXa  p  p2  pi2a  pi2b  pia  pib  r  rHH  rHL  ra  ratio  ratioa  ratiob  rb  recip  recipa  recipb  remA  remB  result  resultHigh  resultLow  resultb  rln10a  rln10b  sinEpsA  sinEpsB  sina  sinb  sintA  sintB  sumA  sumB  t  temp  temp2  tempA  tempB  tempC  tmp  tmp1  tmp2  tmpA  tmpB  tmpHigh  tmpLow  x  x2  xa  xb  xbadj  xpa  xpb  xs  y  ya  yaa  yab  yb  z  za  zaa  zab  zb  double[][]  LN_HI_PREC_COEF  LN_MANT  LN_QUICK_COEF  int  EXP_FRAC_TABLE_LEN  EXP_INT_TABLE_LEN  EXP_INT_TABLE_MAX_INDEX  LN_MANT_LEN  SINE_TABLE_LEN  a  b  bits  e  exp  exp3  exponent  finalK  i  idx  intFrac  intPart  intVal  k  mantissa  mostSignificantLostBit  n  quadrant  scaledExponent  shift  sign  splitFactor  x  long  HEX_40000000  MASK_30BITS  a  ac  ad  b  bc  bd  bits  c  d  inbits  mantissa  mostSignificantLostBit  prod2A  prod2B  prodA  prodB  shpi0  shpiA  shpiB  sign  x  xl  y  yi  z  	projects/Math16/src/main/java/org/apache/commons/math3/util/FastMath.java	0.7071067811865475	3522	3522	2	replace	if(bits  ==  0)  {  if(a  <  b)  {  return  Double.doubleToRawLongBits(a);  if(bits  ==  0x8000000000000000L)  {  return  b;  }	  if(a    <    b)    {    if(bits    <    0)    {    return    Double.doubleToRawLongBits(a);    if(bits    ==    0x8000000000000000L)    {    return    b;    }    	non-compiled	[CE]  <identifier>  expected	8	None	replace
29	[BUG]  [BUGGY]  if(bits  <  0x800000000000L)  {  return  b;  }  [CE]  <identifier>  expected  [FE]            AssertionError      [CONTEXT]      }  if  (a  <  b)  {  return  b;  }  if  (a  !=  b)  {  return  Double.NaN;  }        [BUGGY]  if(bits  <  0x800000000000L)  {  return  b;  }  [BUGGY]      long  bits  =  Double.doubleToRawLongBits(a);  if  (bits  ==  0x8000000000000000L)  {  return  b;  }  return  a;  }  [CLASS]  FastMath  ExpIntTable  ExpFracTable  lnMant  CodyWaite  [METHOD]  max  [RETURN_TYPE]  double  final  double  a  final  double  b  [VARIABLES]  boolean  RECOMPUTE_TABLES_AT_RUNTIME  bita  bitb  bitsum  cotanFlag  leftPlane  negate  negative  subnormal  double[]  CBRTTWO  COSINE_TABLE_A  COSINE_TABLE_B  EIGHTHS  EXP_FRAC_TABLE_A  EXP_FRAC_TABLE_B  EXP_INT_TABLE_A  EXP_INT_TABLE_B  SINE_TABLE_A  SINE_TABLE_B  TANGENT_TABLE_A  TANGENT_TABLE_B  hiPrec  hiPrecOut  lnCoef_i  lnCoef_last  lnm  lns  reduceResults  result  long[]  PI_O_4_BITS  RECIP_2PI  double  E  F_11_12  F_13_14  F_15_16  F_1_11  F_1_13  F_1_15  F_1_17  F_1_2  F_1_3  F_1_4  F_1_5  F_1_7  F_1_9  F_3_4  F_5_6  F_7_8  F_9_10  LN_2_A  LN_2_B  PI  TWO_POWER_52  a  a2  aa  ab  absAsinh  absAtanh  b  base  baseA  baseB  c  cD2pH  cRH  cTmpH  cd  cosEpsA  cosEpsB  cosa  cosaa  cosab  cosb  costA  costB  d  d1High  d1Low  d2p  d2pHH  d2pHL  d2pHigh  d2pLow  da  daa  dab  db  denom  denomb  denomr  direction  dx  epsA  epsA2  epsB  epsilon  err  est  esta  estb  extra  facta  factb  finalRemA  finalRemB  fracPartA  fracPartB  fx1  intPartA  intPartB  invx  invy  lna  lnb  lnza  lnzb  lores  mant  na  nb  numer  oneOverXa  p  p2  pi2a  pi2b  pia  pib  r  rHH  rHL  ra  ratio  ratioa  ratiob  rb  recip  recipa  recipb  remA  remB  result  resultHigh  resultLow  resultb  rln10a  rln10b  sinEpsA  sinEpsB  sina  sinb  sintA  sintB  sumA  sumB  t  temp  temp2  tempA  tempB  tempC  tmp  tmp1  tmp2  tmpA  tmpB  tmpHigh  tmpLow  x  x2  xa  xb  xbadj  xpa  xpb  xs  y  ya  yaa  yab  yb  z  za  zaa  zab  zb  double[][]  LN_HI_PREC_COEF  LN_MANT  LN_QUICK_COEF  int  EXP_FRAC_TABLE_LEN  EXP_INT_TABLE_LEN  EXP_INT_TABLE_MAX_INDEX  LN_MANT_LEN  SINE_TABLE_LEN  a  b  bits  e  exp  exp3  exponent  finalK  i  idx  intFrac  intPart  intVal  k  mantissa  mostSignificantLostBit  n  quadrant  scaledExponent  shift  sign  splitFactor  x  long  HEX_40000000  MASK_30BITS  a  ac  ad  b  bc  bd  bits  c  d  inbits  mantissa  mostSignificantLostBit  prod2A  prod2B  prodA  prodB  shpi0  shpiA  shpiB  sign  x  xl  y  yi  z  	projects/Math16/src/main/java/org/apache/commons/math3/util/FastMath.java	0.7071067811865475	3522	3522	2	replace	if(bits  <  0x800000000000L)  {  return  b;  }	  if(a    ==    b)    {    if(bits    ==    0x800000000000L)    {    return    b;    }    	non-compiled	[CE]  <identifier>  expected	3	None	replace
30	[BUG]  [BUGGY]  if(bits  <  0x800000000000L)  {  bits  =  Double.doubleToRawLongBits(a);  if  (bits  ==  0x800000000000L)  {  return  b;  }  [CE]  <identifier>  expected  [FE]              AssertionError      [CONTEXT]      }  if  (a  <  b)  {  return  b;  }  if  (a  !=  b)  {  return  Double.NaN;  }        [BUGGY]  if(bits  <  0x800000000000L)  {  bits  =  Double.doubleToRawLongBits(a);  if  (bits  ==  0x800000000000L)  {  return  b;  }  [BUGGY]      long  bits  =  Double.doubleToRawLongBits(a);  if  (bits  ==  0x8000000000000000L)  {  return  b;  }  return  a;  }  [CLASS]  FastMath  ExpIntTable  ExpFracTable  lnMant  CodyWaite  [METHOD]  max  [RETURN_TYPE]  double  final  double  a  final  double  b  [VARIABLES]  boolean  RECOMPUTE_TABLES_AT_RUNTIME  bita  bitb  bitsum  cotanFlag  leftPlane  negate  negative  subnormal  double[]  CBRTTWO  COSINE_TABLE_A  COSINE_TABLE_B  EIGHTHS  EXP_FRAC_TABLE_A  EXP_FRAC_TABLE_B  EXP_INT_TABLE_A  EXP_INT_TABLE_B  SINE_TABLE_A  SINE_TABLE_B  TANGENT_TABLE_A  TANGENT_TABLE_B  hiPrec  hiPrecOut  lnCoef_i  lnCoef_last  lnm  lns  reduceResults  result  long[]  PI_O_4_BITS  RECIP_2PI  double  E  F_11_12  F_13_14  F_15_16  F_1_11  F_1_13  F_1_15  F_1_17  F_1_2  F_1_3  F_1_4  F_1_5  F_1_7  F_1_9  F_3_4  F_5_6  F_7_8  F_9_10  LN_2_A  LN_2_B  PI  TWO_POWER_52  a  a2  aa  ab  absAsinh  absAtanh  b  base  baseA  baseB  c  cD2pH  cRH  cTmpH  cd  cosEpsA  cosEpsB  cosa  cosaa  cosab  cosb  costA  costB  d  d1High  d1Low  d2p  d2pHH  d2pHL  d2pHigh  d2pLow  da  daa  dab  db  denom  denomb  denomr  direction  dx  epsA  epsA2  epsB  epsilon  err  est  esta  estb  extra  facta  factb  finalRemA  finalRemB  fracPartA  fracPartB  fx1  intPartA  intPartB  invx  invy  lna  lnb  lnza  lnzb  lores  mant  na  nb  numer  oneOverXa  p  p2  pi2a  pi2b  pia  pib  r  rHH  rHL  ra  ratio  ratioa  ratiob  rb  recip  recipa  recipb  remA  remB  result  resultHigh  resultLow  resultb  rln10a  rln10b  sinEpsA  sinEpsB  sina  sinb  sintA  sintB  sumA  sumB  t  temp  temp2  tempA  tempB  tempC  tmp  tmp1  tmp2  tmpA  tmpB  tmpHigh  tmpLow  x  x2  xa  xb  xbadj  xpa  xpb  xs  y  ya  yaa  yab  yb  z  za  zaa  zab  zb  double[][]  LN_HI_PREC_COEF  LN_MANT  LN_QUICK_COEF  int  EXP_FRAC_TABLE_LEN  EXP_INT_TABLE_LEN  EXP_INT_TABLE_MAX_INDEX  LN_MANT_LEN  SINE_TABLE_LEN  a  b  bits  e  exp  exp3  exponent  finalK  i  idx  intFrac  intPart  intVal  k  mantissa  mostSignificantLostBit  n  quadrant  scaledExponent  shift  sign  splitFactor  x  long  HEX_40000000  MASK_30BITS  a  ac  ad  b  bc  bd  bits  c  d  inbits  mantissa  mostSignificantLostBit  prod2A  prod2B  prodA  prodB  shpi0  shpiA  shpiB  sign  x  xl  y  yi  z  	projects/Math16/src/main/java/org/apache/commons/math3/util/FastMath.java	0.7071067811865475	3522	3522	2	replace	if(bits  <  0x800000000000L)  {  bits  =  Double.doubleToRawLongBits(a);  if  (bits  ==  0x800000000000L)  {  return  b;  }	  if(a    <    b)    {    if(bits    <    0x800000000000L)    {    bits    =    Double.doubleToRawLongBits(a);    if    (bits    ==    0x800000000000L)    {    return    b;    }    	non-compiled	[CE]  <identifier>  expected	6	None	replace
31	[BUG]  [BUGGY]  if(a  <  b)  {  bits  =  Double.doubleToRawLongBits(a);  if  (bits  ==  0x800000000000L)  {  return  b;  }  [CE]  <identifier>  expected  [FE]                AssertionError      [CONTEXT]      }  if  (a  <  b)  {  return  b;  }  if  (a  !=  b)  {  return  Double.NaN;  }        [BUGGY]  if(a  <  b)  {  bits  =  Double.doubleToRawLongBits(a);  if  (bits  ==  0x800000000000L)  {  return  b;  }  [BUGGY]      long  bits  =  Double.doubleToRawLongBits(a);  if  (bits  ==  0x8000000000000000L)  {  return  b;  }  return  a;  }  [CLASS]  FastMath  ExpIntTable  ExpFracTable  lnMant  CodyWaite  [METHOD]  max  [RETURN_TYPE]  double  final  double  a  final  double  b  [VARIABLES]  boolean  RECOMPUTE_TABLES_AT_RUNTIME  bita  bitb  bitsum  cotanFlag  leftPlane  negate  negative  subnormal  double[]  CBRTTWO  COSINE_TABLE_A  COSINE_TABLE_B  EIGHTHS  EXP_FRAC_TABLE_A  EXP_FRAC_TABLE_B  EXP_INT_TABLE_A  EXP_INT_TABLE_B  SINE_TABLE_A  SINE_TABLE_B  TANGENT_TABLE_A  TANGENT_TABLE_B  hiPrec  hiPrecOut  lnCoef_i  lnCoef_last  lnm  lns  reduceResults  result  long[]  PI_O_4_BITS  RECIP_2PI  double  E  F_11_12  F_13_14  F_15_16  F_1_11  F_1_13  F_1_15  F_1_17  F_1_2  F_1_3  F_1_4  F_1_5  F_1_7  F_1_9  F_3_4  F_5_6  F_7_8  F_9_10  LN_2_A  LN_2_B  PI  TWO_POWER_52  a  a2  aa  ab  absAsinh  absAtanh  b  base  baseA  baseB  c  cD2pH  cRH  cTmpH  cd  cosEpsA  cosEpsB  cosa  cosaa  cosab  cosb  costA  costB  d  d1High  d1Low  d2p  d2pHH  d2pHL  d2pHigh  d2pLow  da  daa  dab  db  denom  denomb  denomr  direction  dx  epsA  epsA2  epsB  epsilon  err  est  esta  estb  extra  facta  factb  finalRemA  finalRemB  fracPartA  fracPartB  fx1  intPartA  intPartB  invx  invy  lna  lnb  lnza  lnzb  lores  mant  na  nb  numer  oneOverXa  p  p2  pi2a  pi2b  pia  pib  r  rHH  rHL  ra  ratio  ratioa  ratiob  rb  recip  recipa  recipb  remA  remB  result  resultHigh  resultLow  resultb  rln10a  rln10b  sinEpsA  sinEpsB  sina  sinb  sintA  sintB  sumA  sumB  t  temp  temp2  tempA  tempB  tempC  tmp  tmp1  tmp2  tmpA  tmpB  tmpHigh  tmpLow  x  x2  xa  xb  xbadj  xpa  xpb  xs  y  ya  yaa  yab  yb  z  za  zaa  zab  zb  double[][]  LN_HI_PREC_COEF  LN_MANT  LN_QUICK_COEF  int  EXP_FRAC_TABLE_LEN  EXP_INT_TABLE_LEN  EXP_INT_TABLE_MAX_INDEX  LN_MANT_LEN  SINE_TABLE_LEN  a  b  bits  e  exp  exp3  exponent  finalK  i  idx  intFrac  intPart  intVal  k  mantissa  mostSignificantLostBit  n  quadrant  scaledExponent  shift  sign  splitFactor  x  long  HEX_40000000  MASK_30BITS  a  ac  ad  b  bc  bd  bits  c  d  inbits  mantissa  mostSignificantLostBit  prod2A  prod2B  prodA  prodB  shpi0  shpiA  shpiB  sign  x  xl  y  yi  z  	projects/Math16/src/main/java/org/apache/commons/math3/util/FastMath.java	0.7071067811865475	3522	3522	2	replace	if(a  <  b)  {  bits  =  Double.doubleToRawLongBits(a);  if  (bits  ==  0x800000000000L)  {  return  b;  }	  if(a    <    b)    {    if(bits    <    0x800000000000L)    {    bits    =    Double.doubleToRawLongBits(a);    if    (bits    ==    0x800000000000L)    {    return    b;    }    	non-compiled	[CE]  <identifier>  expected	6	None	replace
32	[BUG]  [BUGGY]  if(a  ==  b)  {  long  bits  =  Double.doubleToRawLongBits(a);  if(bits  ==  0x8000000000000000L)  {  return  b;  }  [CE]  <identifier>  expected  [FE]            AssertionError      [CONTEXT]      }  if  (a  <  b)  {  return  b;  }  if  (a  !=  b)  {  return  Double.NaN;  }        [BUGGY]  if(a  ==  b)  {  long  bits  =  Double.doubleToRawLongBits(a);  if(bits  ==  0x8000000000000000L)  {  return  b;  }  [BUGGY]      long  bits  =  Double.doubleToRawLongBits(a);  if  (bits  ==  0x8000000000000000L)  {  return  b;  }  return  a;  }  [CLASS]  FastMath  ExpIntTable  ExpFracTable  lnMant  CodyWaite  [METHOD]  max  [RETURN_TYPE]  double  final  double  a  final  double  b  [VARIABLES]  boolean  RECOMPUTE_TABLES_AT_RUNTIME  bita  bitb  bitsum  cotanFlag  leftPlane  negate  negative  subnormal  double[]  CBRTTWO  COSINE_TABLE_A  COSINE_TABLE_B  EIGHTHS  EXP_FRAC_TABLE_A  EXP_FRAC_TABLE_B  EXP_INT_TABLE_A  EXP_INT_TABLE_B  SINE_TABLE_A  SINE_TABLE_B  TANGENT_TABLE_A  TANGENT_TABLE_B  hiPrec  hiPrecOut  lnCoef_i  lnCoef_last  lnm  lns  reduceResults  result  long[]  PI_O_4_BITS  RECIP_2PI  double  E  F_11_12  F_13_14  F_15_16  F_1_11  F_1_13  F_1_15  F_1_17  F_1_2  F_1_3  F_1_4  F_1_5  F_1_7  F_1_9  F_3_4  F_5_6  F_7_8  F_9_10  LN_2_A  LN_2_B  PI  TWO_POWER_52  a  a2  aa  ab  absAsinh  absAtanh  b  base  baseA  baseB  c  cD2pH  cRH  cTmpH  cd  cosEpsA  cosEpsB  cosa  cosaa  cosab  cosb  costA  costB  d  d1High  d1Low  d2p  d2pHH  d2pHL  d2pHigh  d2pLow  da  daa  dab  db  denom  denomb  denomr  direction  dx  epsA  epsA2  epsB  epsilon  err  est  esta  estb  extra  facta  factb  finalRemA  finalRemB  fracPartA  fracPartB  fx1  intPartA  intPartB  invx  invy  lna  lnb  lnza  lnzb  lores  mant  na  nb  numer  oneOverXa  p  p2  pi2a  pi2b  pia  pib  r  rHH  rHL  ra  ratio  ratioa  ratiob  rb  recip  recipa  recipb  remA  remB  result  resultHigh  resultLow  resultb  rln10a  rln10b  sinEpsA  sinEpsB  sina  sinb  sintA  sintB  sumA  sumB  t  temp  temp2  tempA  tempB  tempC  tmp  tmp1  tmp2  tmpA  tmpB  tmpHigh  tmpLow  x  x2  xa  xb  xbadj  xpa  xpb  xs  y  ya  yaa  yab  yb  z  za  zaa  zab  zb  double[][]  LN_HI_PREC_COEF  LN_MANT  LN_QUICK_COEF  int  EXP_FRAC_TABLE_LEN  EXP_INT_TABLE_LEN  EXP_INT_TABLE_MAX_INDEX  LN_MANT_LEN  SINE_TABLE_LEN  a  b  bits  e  exp  exp3  exponent  finalK  i  idx  intFrac  intPart  intVal  k  mantissa  mostSignificantLostBit  n  quadrant  scaledExponent  shift  sign  splitFactor  x  long  HEX_40000000  MASK_30BITS  a  ac  ad  b  bc  bd  bits  c  d  inbits  mantissa  mostSignificantLostBit  prod2A  prod2B  prodA  prodB  shpi0  shpiA  shpiB  sign  x  xl  y  yi  z  	projects/Math16/src/main/java/org/apache/commons/math3/util/FastMath.java	0.7071067811865475	3522	3522	2	replace	if(a  ==  b)  {  long  bits  =  Double.doubleToRawLongBits(a);  if(bits  ==  0x8000000000000000L)  {  return  b;  }	  if(a    <    b)    {    long    bits    =    Double.doubleToRawLongBits(a);    if(bits    ==    0x8000000000000000L)    {    return    b;    }    	non-compiled	[CE]  <identifier>  expected	22	None	replace
33	[BUG]  [BUGGY]  if(a  ==  b)  {  long  bits  =  Double.doubleToRawLongBits(a);  if  (bits  ==  0x800000000000000L)  {  return  b;  }  [CE]  <identifier>  expected  [FE]              AssertionError      [CONTEXT]      }  if  (a  <  b)  {  return  b;  }  if  (a  !=  b)  {  return  Double.NaN;  }        [BUGGY]  if(a  ==  b)  {  long  bits  =  Double.doubleToRawLongBits(a);  if  (bits  ==  0x800000000000000L)  {  return  b;  }  [BUGGY]      long  bits  =  Double.doubleToRawLongBits(a);  if  (bits  ==  0x8000000000000000L)  {  return  b;  }  return  a;  }  [CLASS]  FastMath  ExpIntTable  ExpFracTable  lnMant  CodyWaite  [METHOD]  max  [RETURN_TYPE]  double  final  double  a  final  double  b  [VARIABLES]  boolean  RECOMPUTE_TABLES_AT_RUNTIME  bita  bitb  bitsum  cotanFlag  leftPlane  negate  negative  subnormal  double[]  CBRTTWO  COSINE_TABLE_A  COSINE_TABLE_B  EIGHTHS  EXP_FRAC_TABLE_A  EXP_FRAC_TABLE_B  EXP_INT_TABLE_A  EXP_INT_TABLE_B  SINE_TABLE_A  SINE_TABLE_B  TANGENT_TABLE_A  TANGENT_TABLE_B  hiPrec  hiPrecOut  lnCoef_i  lnCoef_last  lnm  lns  reduceResults  result  long[]  PI_O_4_BITS  RECIP_2PI  double  E  F_11_12  F_13_14  F_15_16  F_1_11  F_1_13  F_1_15  F_1_17  F_1_2  F_1_3  F_1_4  F_1_5  F_1_7  F_1_9  F_3_4  F_5_6  F_7_8  F_9_10  LN_2_A  LN_2_B  PI  TWO_POWER_52  a  a2  aa  ab  absAsinh  absAtanh  b  base  baseA  baseB  c  cD2pH  cRH  cTmpH  cd  cosEpsA  cosEpsB  cosa  cosaa  cosab  cosb  costA  costB  d  d1High  d1Low  d2p  d2pHH  d2pHL  d2pHigh  d2pLow  da  daa  dab  db  denom  denomb  denomr  direction  dx  epsA  epsA2  epsB  epsilon  err  est  esta  estb  extra  facta  factb  finalRemA  finalRemB  fracPartA  fracPartB  fx1  intPartA  intPartB  invx  invy  lna  lnb  lnza  lnzb  lores  mant  na  nb  numer  oneOverXa  p  p2  pi2a  pi2b  pia  pib  r  rHH  rHL  ra  ratio  ratioa  ratiob  rb  recip  recipa  recipb  remA  remB  result  resultHigh  resultLow  resultb  rln10a  rln10b  sinEpsA  sinEpsB  sina  sinb  sintA  sintB  sumA  sumB  t  temp  temp2  tempA  tempB  tempC  tmp  tmp1  tmp2  tmpA  tmpB  tmpHigh  tmpLow  x  x2  xa  xb  xbadj  xpa  xpb  xs  y  ya  yaa  yab  yb  z  za  zaa  zab  zb  double[][]  LN_HI_PREC_COEF  LN_MANT  LN_QUICK_COEF  int  EXP_FRAC_TABLE_LEN  EXP_INT_TABLE_LEN  EXP_INT_TABLE_MAX_INDEX  LN_MANT_LEN  SINE_TABLE_LEN  a  b  bits  e  exp  exp3  exponent  finalK  i  idx  intFrac  intPart  intVal  k  mantissa  mostSignificantLostBit  n  quadrant  scaledExponent  shift  sign  splitFactor  x  long  HEX_40000000  MASK_30BITS  a  ac  ad  b  bc  bd  bits  c  d  inbits  mantissa  mostSignificantLostBit  prod2A  prod2B  prodA  prodB  shpi0  shpiA  shpiB  sign  x  xl  y  yi  z  	projects/Math16/src/main/java/org/apache/commons/math3/util/FastMath.java	0.7071067811865475	3522	3522	2	replace	if(a  ==  b)  {  long  bits  =  Double.doubleToRawLongBits(a);  if  (bits  ==  0x800000000000000L)  {  return  b;  }	  if(a    <    b)    {    long    bits    =    Double.doubleToRawLongBits(a);    if    (bits    ==    0x800000000000000L)    {    return    b;    }    	non-compiled	[CE]  <identifier>  expected	26	None	replace
34	[BUG]  [BUGGY]  int  bits  =  Double.doubleToRawLongBits(a,  b)+  1;  [CE]  <identifier>  expected  [FE]              AssertionError      [CONTEXT]      }  if  (a  <  b)  {  return  b;  }  if  (a  !=  b)  {  return  Double.NaN;  }        [BUGGY]  int  bits  =  Double.doubleToRawLongBits(a,  b)+  1;  [BUGGY]      if  (bits  ==  0x8000000000000000L)  {  return  b;  }  return  a;  }  [CLASS]  FastMath  ExpIntTable  ExpFracTable  lnMant  CodyWaite  [METHOD]  max  [RETURN_TYPE]  double  final  double  a  final  double  b  [VARIABLES]  boolean  RECOMPUTE_TABLES_AT_RUNTIME  bita  bitb  bitsum  cotanFlag  leftPlane  negate  negative  subnormal  double[]  CBRTTWO  COSINE_TABLE_A  COSINE_TABLE_B  EIGHTHS  EXP_FRAC_TABLE_A  EXP_FRAC_TABLE_B  EXP_INT_TABLE_A  EXP_INT_TABLE_B  SINE_TABLE_A  SINE_TABLE_B  TANGENT_TABLE_A  TANGENT_TABLE_B  hiPrec  hiPrecOut  lnCoef_i  lnCoef_last  lnm  lns  reduceResults  result  long[]  PI_O_4_BITS  RECIP_2PI  double  E  F_11_12  F_13_14  F_15_16  F_1_11  F_1_13  F_1_15  F_1_17  F_1_2  F_1_3  F_1_4  F_1_5  F_1_7  F_1_9  F_3_4  F_5_6  F_7_8  F_9_10  LN_2_A  LN_2_B  PI  TWO_POWER_52  a  a2  aa  ab  absAsinh  absAtanh  b  base  baseA  baseB  c  cD2pH  cRH  cTmpH  cd  cosEpsA  cosEpsB  cosa  cosaa  cosab  cosb  costA  costB  d  d1High  d1Low  d2p  d2pHH  d2pHL  d2pHigh  d2pLow  da  daa  dab  db  denom  denomb  denomr  direction  dx  epsA  epsA2  epsB  epsilon  err  est  esta  estb  extra  facta  factb  finalRemA  finalRemB  fracPartA  fracPartB  fx1  intPartA  intPartB  invx  invy  lna  lnb  lnza  lnzb  lores  mant  na  nb  numer  oneOverXa  p  p2  pi2a  pi2b  pia  pib  r  rHH  rHL  ra  ratio  ratioa  ratiob  rb  recip  recipa  recipb  remA  remB  result  resultHigh  resultLow  resultb  rln10a  rln10b  sinEpsA  sinEpsB  sina  sinb  sintA  sintB  sumA  sumB  t  temp  temp2  tempA  tempB  tempC  tmp  tmp1  tmp2  tmpA  tmpB  tmpHigh  tmpLow  x  x2  xa  xb  xbadj  xpa  xpb  xs  y  ya  yaa  yab  yb  z  za  zaa  zab  zb  double[][]  LN_HI_PREC_COEF  LN_MANT  LN_QUICK_COEF  int  EXP_FRAC_TABLE_LEN  EXP_INT_TABLE_LEN  EXP_INT_TABLE_MAX_INDEX  LN_MANT_LEN  SINE_TABLE_LEN  a  b  bits  e  exp  exp3  exponent  finalK  i  idx  intFrac  intPart  intVal  k  mantissa  mostSignificantLostBit  n  quadrant  scaledExponent  shift  sign  splitFactor  x  long  HEX_40000000  MASK_30BITS  a  ac  ad  b  bc  bd  bits  c  d  inbits  mantissa  mostSignificantLostBit  prod2A  prod2B  prodA  prodB  shpi0  shpiA  shpiB  sign  x  xl  y  yi  z  	projects/Math16/src/main/java/org/apache/commons/math3/util/FastMath.java	0.7071067811865475	3522	3522	2	replace	int  bits  =  Double.doubleToRawLongBits(a,  b)+  1;	  int    bits    =    Double.doubleToRawLongBits(a,    b);    	non-compiled	[CE]  <identifier>  expected	12	None	replace
35	[BUG]  [BUGGY]  if(bits  ==  0)  {  long  bits  =  Double.doubleToRawLongBits(a);  if  (bits  ==  0x800000000000L)  {  return  b;  }  [CE]  <identifier>  expected  [FE]            AssertionError      [CONTEXT]      }  if  (a  <  b)  {  return  b;  }  if  (a  !=  b)  {  return  Double.NaN;  }        [BUGGY]  if(bits  ==  0)  {  long  bits  =  Double.doubleToRawLongBits(a);  if  (bits  ==  0x800000000000L)  {  return  b;  }  [BUGGY]      long  bits  =  Double.doubleToRawLongBits(a);  if  (bits  ==  0x8000000000000000L)  {  return  b;  }  return  a;  }  [CLASS]  FastMath  ExpIntTable  ExpFracTable  lnMant  CodyWaite  [METHOD]  max  [RETURN_TYPE]  double  final  double  a  final  double  b  [VARIABLES]  boolean  RECOMPUTE_TABLES_AT_RUNTIME  bita  bitb  bitsum  cotanFlag  leftPlane  negate  negative  subnormal  double[]  CBRTTWO  COSINE_TABLE_A  COSINE_TABLE_B  EIGHTHS  EXP_FRAC_TABLE_A  EXP_FRAC_TABLE_B  EXP_INT_TABLE_A  EXP_INT_TABLE_B  SINE_TABLE_A  SINE_TABLE_B  TANGENT_TABLE_A  TANGENT_TABLE_B  hiPrec  hiPrecOut  lnCoef_i  lnCoef_last  lnm  lns  reduceResults  result  long[]  PI_O_4_BITS  RECIP_2PI  double  E  F_11_12  F_13_14  F_15_16  F_1_11  F_1_13  F_1_15  F_1_17  F_1_2  F_1_3  F_1_4  F_1_5  F_1_7  F_1_9  F_3_4  F_5_6  F_7_8  F_9_10  LN_2_A  LN_2_B  PI  TWO_POWER_52  a  a2  aa  ab  absAsinh  absAtanh  b  base  baseA  baseB  c  cD2pH  cRH  cTmpH  cd  cosEpsA  cosEpsB  cosa  cosaa  cosab  cosb  costA  costB  d  d1High  d1Low  d2p  d2pHH  d2pHL  d2pHigh  d2pLow  da  daa  dab  db  denom  denomb  denomr  direction  dx  epsA  epsA2  epsB  epsilon  err  est  esta  estb  extra  facta  factb  finalRemA  finalRemB  fracPartA  fracPartB  fx1  intPartA  intPartB  invx  invy  lna  lnb  lnza  lnzb  lores  mant  na  nb  numer  oneOverXa  p  p2  pi2a  pi2b  pia  pib  r  rHH  rHL  ra  ratio  ratioa  ratiob  rb  recip  recipa  recipb  remA  remB  result  resultHigh  resultLow  resultb  rln10a  rln10b  sinEpsA  sinEpsB  sina  sinb  sintA  sintB  sumA  sumB  t  temp  temp2  tempA  tempB  tempC  tmp  tmp1  tmp2  tmpA  tmpB  tmpHigh  tmpLow  x  x2  xa  xb  xbadj  xpa  xpb  xs  y  ya  yaa  yab  yb  z  za  zaa  zab  zb  double[][]  LN_HI_PREC_COEF  LN_MANT  LN_QUICK_COEF  int  EXP_FRAC_TABLE_LEN  EXP_INT_TABLE_LEN  EXP_INT_TABLE_MAX_INDEX  LN_MANT_LEN  SINE_TABLE_LEN  a  b  bits  e  exp  exp3  exponent  finalK  i  idx  intFrac  intPart  intVal  k  mantissa  mostSignificantLostBit  n  quadrant  scaledExponent  shift  sign  splitFactor  x  long  HEX_40000000  MASK_30BITS  a  ac  ad  b  bc  bd  bits  c  d  inbits  mantissa  mostSignificantLostBit  prod2A  prod2B  prodA  prodB  shpi0  shpiA  shpiB  sign  x  xl  y  yi  z  	projects/Math16/src/main/java/org/apache/commons/math3/util/FastMath.java	0.7071067811865475	3522	3522	2	replace	if(bits  ==  0)  {  long  bits  =  Double.doubleToRawLongBits(a);  if  (bits  ==  0x800000000000L)  {  return  b;  }	  if(bits    <    0)    {    long    bits    =    Double.doubleToRawLongBits(a);    if    (bits    ==    0x800000000000L)    {    return    b;    }    	non-compiled	[CE]  <identifier>  expected	20	None	replace
36	[BUG]  [BUGGY]  if(bits  ==  0x800000000000L)  {  bits  =  Double.doubleToRawLongBits(a);  if  (bits  ==  0x800000000000000L)  {  return  b;  }  [CE]  <identifier>  expected  [FE]                AssertionError      [CONTEXT]      }  if  (a  <  b)  {  return  b;  }  if  (a  !=  b)  {  return  Double.NaN;  }        [BUGGY]  if(bits  ==  0x800000000000L)  {  bits  =  Double.doubleToRawLongBits(a);  if  (bits  ==  0x800000000000000L)  {  return  b;  }  [BUGGY]      long  bits  =  Double.doubleToRawLongBits(a);  if  (bits  ==  0x8000000000000000L)  {  return  b;  }  return  a;  }  [CLASS]  FastMath  ExpIntTable  ExpFracTable  lnMant  CodyWaite  [METHOD]  max  [RETURN_TYPE]  double  final  double  a  final  double  b  [VARIABLES]  boolean  RECOMPUTE_TABLES_AT_RUNTIME  bita  bitb  bitsum  cotanFlag  leftPlane  negate  negative  subnormal  double[]  CBRTTWO  COSINE_TABLE_A  COSINE_TABLE_B  EIGHTHS  EXP_FRAC_TABLE_A  EXP_FRAC_TABLE_B  EXP_INT_TABLE_A  EXP_INT_TABLE_B  SINE_TABLE_A  SINE_TABLE_B  TANGENT_TABLE_A  TANGENT_TABLE_B  hiPrec  hiPrecOut  lnCoef_i  lnCoef_last  lnm  lns  reduceResults  result  long[]  PI_O_4_BITS  RECIP_2PI  double  E  F_11_12  F_13_14  F_15_16  F_1_11  F_1_13  F_1_15  F_1_17  F_1_2  F_1_3  F_1_4  F_1_5  F_1_7  F_1_9  F_3_4  F_5_6  F_7_8  F_9_10  LN_2_A  LN_2_B  PI  TWO_POWER_52  a  a2  aa  ab  absAsinh  absAtanh  b  base  baseA  baseB  c  cD2pH  cRH  cTmpH  cd  cosEpsA  cosEpsB  cosa  cosaa  cosab  cosb  costA  costB  d  d1High  d1Low  d2p  d2pHH  d2pHL  d2pHigh  d2pLow  da  daa  dab  db  denom  denomb  denomr  direction  dx  epsA  epsA2  epsB  epsilon  err  est  esta  estb  extra  facta  factb  finalRemA  finalRemB  fracPartA  fracPartB  fx1  intPartA  intPartB  invx  invy  lna  lnb  lnza  lnzb  lores  mant  na  nb  numer  oneOverXa  p  p2  pi2a  pi2b  pia  pib  r  rHH  rHL  ra  ratio  ratioa  ratiob  rb  recip  recipa  recipb  remA  remB  result  resultHigh  resultLow  resultb  rln10a  rln10b  sinEpsA  sinEpsB  sina  sinb  sintA  sintB  sumA  sumB  t  temp  temp2  tempA  tempB  tempC  tmp  tmp1  tmp2  tmpA  tmpB  tmpHigh  tmpLow  x  x2  xa  xb  xbadj  xpa  xpb  xs  y  ya  yaa  yab  yb  z  za  zaa  zab  zb  double[][]  LN_HI_PREC_COEF  LN_MANT  LN_QUICK_COEF  int  EXP_FRAC_TABLE_LEN  EXP_INT_TABLE_LEN  EXP_INT_TABLE_MAX_INDEX  LN_MANT_LEN  SINE_TABLE_LEN  a  b  bits  e  exp  exp3  exponent  finalK  i  idx  intFrac  intPart  intVal  k  mantissa  mostSignificantLostBit  n  quadrant  scaledExponent  shift  sign  splitFactor  x  long  HEX_40000000  MASK_30BITS  a  ac  ad  b  bc  bd  bits  c  d  inbits  mantissa  mostSignificantLostBit  prod2A  prod2B  prodA  prodB  shpi0  shpiA  shpiB  sign  x  xl  y  yi  z  	projects/Math16/src/main/java/org/apache/commons/math3/util/FastMath.java	0.7071067811865475	3522	3522	2	replace	if(bits  ==  0x800000000000L)  {  bits  =  Double.doubleToRawLongBits(a);  if  (bits  ==  0x800000000000000L)  {  return  b;  }	  if(a    <    b)    {    if(bits    <    0x800000000000L)    {    bits    =    Double.doubleToRawLongBits(a);    if    (bits    ==    0x800000000000000L)    {    return    b;    }    	non-compiled	[CE]  <identifier>  expected	2	None	replace
37	[BUG]  [BUGGY]  bits  |=  a.length;  [CE]  <identifier>  expected  [FE]                AssertionError      [CONTEXT]      }  if  (a  <  b)  {  return  b;  }  if  (a  !=  b)  {  return  Double.NaN;  }        [BUGGY]  bits  |=  a.length;  [BUGGY]      if  (bits  ==  0x8000000000000000L)  {  return  b;  }  return  a;  }  [CLASS]  FastMath  ExpIntTable  ExpFracTable  lnMant  CodyWaite  [METHOD]  max  [RETURN_TYPE]  double  final  double  a  final  double  b  [VARIABLES]  boolean  RECOMPUTE_TABLES_AT_RUNTIME  bita  bitb  bitsum  cotanFlag  leftPlane  negate  negative  subnormal  double[]  CBRTTWO  COSINE_TABLE_A  COSINE_TABLE_B  EIGHTHS  EXP_FRAC_TABLE_A  EXP_FRAC_TABLE_B  EXP_INT_TABLE_A  EXP_INT_TABLE_B  SINE_TABLE_A  SINE_TABLE_B  TANGENT_TABLE_A  TANGENT_TABLE_B  hiPrec  hiPrecOut  lnCoef_i  lnCoef_last  lnm  lns  reduceResults  result  long[]  PI_O_4_BITS  RECIP_2PI  double  E  F_11_12  F_13_14  F_15_16  F_1_11  F_1_13  F_1_15  F_1_17  F_1_2  F_1_3  F_1_4  F_1_5  F_1_7  F_1_9  F_3_4  F_5_6  F_7_8  F_9_10  LN_2_A  LN_2_B  PI  TWO_POWER_52  a  a2  aa  ab  absAsinh  absAtanh  b  base  baseA  baseB  c  cD2pH  cRH  cTmpH  cd  cosEpsA  cosEpsB  cosa  cosaa  cosab  cosb  costA  costB  d  d1High  d1Low  d2p  d2pHH  d2pHL  d2pHigh  d2pLow  da  daa  dab  db  denom  denomb  denomr  direction  dx  epsA  epsA2  epsB  epsilon  err  est  esta  estb  extra  facta  factb  finalRemA  finalRemB  fracPartA  fracPartB  fx1  intPartA  intPartB  invx  invy  lna  lnb  lnza  lnzb  lores  mant  na  nb  numer  oneOverXa  p  p2  pi2a  pi2b  pia  pib  r  rHH  rHL  ra  ratio  ratioa  ratiob  rb  recip  recipa  recipb  remA  remB  result  resultHigh  resultLow  resultb  rln10a  rln10b  sinEpsA  sinEpsB  sina  sinb  sintA  sintB  sumA  sumB  t  temp  temp2  tempA  tempB  tempC  tmp  tmp1  tmp2  tmpA  tmpB  tmpHigh  tmpLow  x  x2  xa  xb  xbadj  xpa  xpb  xs  y  ya  yaa  yab  yb  z  za  zaa  zab  zb  double[][]  LN_HI_PREC_COEF  LN_MANT  LN_QUICK_COEF  int  EXP_FRAC_TABLE_LEN  EXP_INT_TABLE_LEN  EXP_INT_TABLE_MAX_INDEX  LN_MANT_LEN  SINE_TABLE_LEN  a  b  bits  e  exp  exp3  exponent  finalK  i  idx  intFrac  intPart  intVal  k  mantissa  mostSignificantLostBit  n  quadrant  scaledExponent  shift  sign  splitFactor  x  long  HEX_40000000  MASK_30BITS  a  ac  ad  b  bc  bd  bits  c  d  inbits  mantissa  mostSignificantLostBit  prod2A  prod2B  prodA  prodB  shpi0  shpiA  shpiB  sign  x  xl  y  yi  z  	projects/Math16/src/main/java/org/apache/commons/math3/util/FastMath.java	0.7071067811865475	3522	3522	2	replace	bits  |=  a.length;	  bits    |=    bits.length;    	non-compiled	[CE]  <identifier>  expected	9	None	replace
38	[BUG]  [BUGGY]  if(bits  <  0)  {  long  bits  =  Double.doubleToRawLongBits(a);  if  (bits  ==  0x800000000000000L)  {  return  b;  }  [CE]  <identifier>  expected  [FE]              AssertionError      [CONTEXT]      }  if  (a  <  b)  {  return  b;  }  if  (a  !=  b)  {  return  Double.NaN;  }        [BUGGY]  if(bits  <  0)  {  long  bits  =  Double.doubleToRawLongBits(a);  if  (bits  ==  0x800000000000000L)  {  return  b;  }  [BUGGY]      long  bits  =  Double.doubleToRawLongBits(a);  if  (bits  ==  0x8000000000000000L)  {  return  b;  }  return  a;  }  [CLASS]  FastMath  ExpIntTable  ExpFracTable  lnMant  CodyWaite  [METHOD]  max  [RETURN_TYPE]  double  final  double  a  final  double  b  [VARIABLES]  boolean  RECOMPUTE_TABLES_AT_RUNTIME  bita  bitb  bitsum  cotanFlag  leftPlane  negate  negative  subnormal  double[]  CBRTTWO  COSINE_TABLE_A  COSINE_TABLE_B  EIGHTHS  EXP_FRAC_TABLE_A  EXP_FRAC_TABLE_B  EXP_INT_TABLE_A  EXP_INT_TABLE_B  SINE_TABLE_A  SINE_TABLE_B  TANGENT_TABLE_A  TANGENT_TABLE_B  hiPrec  hiPrecOut  lnCoef_i  lnCoef_last  lnm  lns  reduceResults  result  long[]  PI_O_4_BITS  RECIP_2PI  double  E  F_11_12  F_13_14  F_15_16  F_1_11  F_1_13  F_1_15  F_1_17  F_1_2  F_1_3  F_1_4  F_1_5  F_1_7  F_1_9  F_3_4  F_5_6  F_7_8  F_9_10  LN_2_A  LN_2_B  PI  TWO_POWER_52  a  a2  aa  ab  absAsinh  absAtanh  b  base  baseA  baseB  c  cD2pH  cRH  cTmpH  cd  cosEpsA  cosEpsB  cosa  cosaa  cosab  cosb  costA  costB  d  d1High  d1Low  d2p  d2pHH  d2pHL  d2pHigh  d2pLow  da  daa  dab  db  denom  denomb  denomr  direction  dx  epsA  epsA2  epsB  epsilon  err  est  esta  estb  extra  facta  factb  finalRemA  finalRemB  fracPartA  fracPartB  fx1  intPartA  intPartB  invx  invy  lna  lnb  lnza  lnzb  lores  mant  na  nb  numer  oneOverXa  p  p2  pi2a  pi2b  pia  pib  r  rHH  rHL  ra  ratio  ratioa  ratiob  rb  recip  recipa  recipb  remA  remB  result  resultHigh  resultLow  resultb  rln10a  rln10b  sinEpsA  sinEpsB  sina  sinb  sintA  sintB  sumA  sumB  t  temp  temp2  tempA  tempB  tempC  tmp  tmp1  tmp2  tmpA  tmpB  tmpHigh  tmpLow  x  x2  xa  xb  xbadj  xpa  xpb  xs  y  ya  yaa  yab  yb  z  za  zaa  zab  zb  double[][]  LN_HI_PREC_COEF  LN_MANT  LN_QUICK_COEF  int  EXP_FRAC_TABLE_LEN  EXP_INT_TABLE_LEN  EXP_INT_TABLE_MAX_INDEX  LN_MANT_LEN  SINE_TABLE_LEN  a  b  bits  e  exp  exp3  exponent  finalK  i  idx  intFrac  intPart  intVal  k  mantissa  mostSignificantLostBit  n  quadrant  scaledExponent  shift  sign  splitFactor  x  long  HEX_40000000  MASK_30BITS  a  ac  ad  b  bc  bd  bits  c  d  inbits  mantissa  mostSignificantLostBit  prod2A  prod2B  prodA  prodB  shpi0  shpiA  shpiB  sign  x  xl  y  yi  z  	projects/Math16/src/main/java/org/apache/commons/math3/util/FastMath.java	0.7071067811865475	3522	3522	2	replace	if(bits  <  0)  {  long  bits  =  Double.doubleToRawLongBits(a);  if  (bits  ==  0x800000000000000L)  {  return  b;  }	  if(a    <    b)    {    long    bits    =    Double.doubleToRawLongBits(a);    if    (bits    ==    0x800000000000000L)    {    return    b;    }    	non-compiled	[CE]  <identifier>  expected	26	None	replace
39	[BUG]  [BUGGY]  if(bits  ==  0x800000000000L)  {  bits  =  Double.doubleToRawLongBits(a);  if  (bits  ==  0x800000000000L)  {  return  b;  }  [CE]  <identifier>  expected  [FE]              AssertionError      [CONTEXT]      }  if  (a  <  b)  {  return  b;  }  if  (a  !=  b)  {  return  Double.NaN;  }        [BUGGY]  if(bits  ==  0x800000000000L)  {  bits  =  Double.doubleToRawLongBits(a);  if  (bits  ==  0x800000000000L)  {  return  b;  }  [BUGGY]      long  bits  =  Double.doubleToRawLongBits(a);  if  (bits  ==  0x8000000000000000L)  {  return  b;  }  return  a;  }  [CLASS]  FastMath  ExpIntTable  ExpFracTable  lnMant  CodyWaite  [METHOD]  max  [RETURN_TYPE]  double  final  double  a  final  double  b  [VARIABLES]  boolean  RECOMPUTE_TABLES_AT_RUNTIME  bita  bitb  bitsum  cotanFlag  leftPlane  negate  negative  subnormal  double[]  CBRTTWO  COSINE_TABLE_A  COSINE_TABLE_B  EIGHTHS  EXP_FRAC_TABLE_A  EXP_FRAC_TABLE_B  EXP_INT_TABLE_A  EXP_INT_TABLE_B  SINE_TABLE_A  SINE_TABLE_B  TANGENT_TABLE_A  TANGENT_TABLE_B  hiPrec  hiPrecOut  lnCoef_i  lnCoef_last  lnm  lns  reduceResults  result  long[]  PI_O_4_BITS  RECIP_2PI  double  E  F_11_12  F_13_14  F_15_16  F_1_11  F_1_13  F_1_15  F_1_17  F_1_2  F_1_3  F_1_4  F_1_5  F_1_7  F_1_9  F_3_4  F_5_6  F_7_8  F_9_10  LN_2_A  LN_2_B  PI  TWO_POWER_52  a  a2  aa  ab  absAsinh  absAtanh  b  base  baseA  baseB  c  cD2pH  cRH  cTmpH  cd  cosEpsA  cosEpsB  cosa  cosaa  cosab  cosb  costA  costB  d  d1High  d1Low  d2p  d2pHH  d2pHL  d2pHigh  d2pLow  da  daa  dab  db  denom  denomb  denomr  direction  dx  epsA  epsA2  epsB  epsilon  err  est  esta  estb  extra  facta  factb  finalRemA  finalRemB  fracPartA  fracPartB  fx1  intPartA  intPartB  invx  invy  lna  lnb  lnza  lnzb  lores  mant  na  nb  numer  oneOverXa  p  p2  pi2a  pi2b  pia  pib  r  rHH  rHL  ra  ratio  ratioa  ratiob  rb  recip  recipa  recipb  remA  remB  result  resultHigh  resultLow  resultb  rln10a  rln10b  sinEpsA  sinEpsB  sina  sinb  sintA  sintB  sumA  sumB  t  temp  temp2  tempA  tempB  tempC  tmp  tmp1  tmp2  tmpA  tmpB  tmpHigh  tmpLow  x  x2  xa  xb  xbadj  xpa  xpb  xs  y  ya  yaa  yab  yb  z  za  zaa  zab  zb  double[][]  LN_HI_PREC_COEF  LN_MANT  LN_QUICK_COEF  int  EXP_FRAC_TABLE_LEN  EXP_INT_TABLE_LEN  EXP_INT_TABLE_MAX_INDEX  LN_MANT_LEN  SINE_TABLE_LEN  a  b  bits  e  exp  exp3  exponent  finalK  i  idx  intFrac  intPart  intVal  k  mantissa  mostSignificantLostBit  n  quadrant  scaledExponent  shift  sign  splitFactor  x  long  HEX_40000000  MASK_30BITS  a  ac  ad  b  bc  bd  bits  c  d  inbits  mantissa  mostSignificantLostBit  prod2A  prod2B  prodA  prodB  shpi0  shpiA  shpiB  sign  x  xl  y  yi  z  	projects/Math16/src/main/java/org/apache/commons/math3/util/FastMath.java	0.7071067811865475	3522	3522	2	replace	if(bits  ==  0x800000000000L)  {  bits  =  Double.doubleToRawLongBits(a);  if  (bits  ==  0x800000000000L)  {  return  b;  }	  if(a    <    b)    {    if(bits    <    0x800000000000L)    {    bits    =    Double.doubleToRawLongBits(a);    if    (bits    ==    0x800000000000L)    {    return    b;    }    	non-compiled	[CE]  <identifier>  expected	6	None	replace
40	[BUG]  [BUGGY]  if(bits  <  0)  {  return  Double.doubleToRawLongBits(a);  if(bits  ==  0x8000000000000000L)  {  return  b;  }  [CE]  <identifier>  expected  [FE]              AssertionError      [CONTEXT]      }  if  (a  <  b)  {  return  b;  }  if  (a  !=  b)  {  return  Double.NaN;  }        [BUGGY]  if(bits  <  0)  {  return  Double.doubleToRawLongBits(a);  if(bits  ==  0x8000000000000000L)  {  return  b;  }  [BUGGY]      long  bits  =  Double.doubleToRawLongBits(a);  if  (bits  ==  0x8000000000000000L)  {  return  b;  }  return  a;  }  [CLASS]  FastMath  ExpIntTable  ExpFracTable  lnMant  CodyWaite  [METHOD]  max  [RETURN_TYPE]  double  final  double  a  final  double  b  [VARIABLES]  boolean  RECOMPUTE_TABLES_AT_RUNTIME  bita  bitb  bitsum  cotanFlag  leftPlane  negate  negative  subnormal  double[]  CBRTTWO  COSINE_TABLE_A  COSINE_TABLE_B  EIGHTHS  EXP_FRAC_TABLE_A  EXP_FRAC_TABLE_B  EXP_INT_TABLE_A  EXP_INT_TABLE_B  SINE_TABLE_A  SINE_TABLE_B  TANGENT_TABLE_A  TANGENT_TABLE_B  hiPrec  hiPrecOut  lnCoef_i  lnCoef_last  lnm  lns  reduceResults  result  long[]  PI_O_4_BITS  RECIP_2PI  double  E  F_11_12  F_13_14  F_15_16  F_1_11  F_1_13  F_1_15  F_1_17  F_1_2  F_1_3  F_1_4  F_1_5  F_1_7  F_1_9  F_3_4  F_5_6  F_7_8  F_9_10  LN_2_A  LN_2_B  PI  TWO_POWER_52  a  a2  aa  ab  absAsinh  absAtanh  b  base  baseA  baseB  c  cD2pH  cRH  cTmpH  cd  cosEpsA  cosEpsB  cosa  cosaa  cosab  cosb  costA  costB  d  d1High  d1Low  d2p  d2pHH  d2pHL  d2pHigh  d2pLow  da  daa  dab  db  denom  denomb  denomr  direction  dx  epsA  epsA2  epsB  epsilon  err  est  esta  estb  extra  facta  factb  finalRemA  finalRemB  fracPartA  fracPartB  fx1  intPartA  intPartB  invx  invy  lna  lnb  lnza  lnzb  lores  mant  na  nb  numer  oneOverXa  p  p2  pi2a  pi2b  pia  pib  r  rHH  rHL  ra  ratio  ratioa  ratiob  rb  recip  recipa  recipb  remA  remB  result  resultHigh  resultLow  resultb  rln10a  rln10b  sinEpsA  sinEpsB  sina  sinb  sintA  sintB  sumA  sumB  t  temp  temp2  tempA  tempB  tempC  tmp  tmp1  tmp2  tmpA  tmpB  tmpHigh  tmpLow  x  x2  xa  xb  xbadj  xpa  xpb  xs  y  ya  yaa  yab  yb  z  za  zaa  zab  zb  double[][]  LN_HI_PREC_COEF  LN_MANT  LN_QUICK_COEF  int  EXP_FRAC_TABLE_LEN  EXP_INT_TABLE_LEN  EXP_INT_TABLE_MAX_INDEX  LN_MANT_LEN  SINE_TABLE_LEN  a  b  bits  e  exp  exp3  exponent  finalK  i  idx  intFrac  intPart  intVal  k  mantissa  mostSignificantLostBit  n  quadrant  scaledExponent  shift  sign  splitFactor  x  long  HEX_40000000  MASK_30BITS  a  ac  ad  b  bc  bd  bits  c  d  inbits  mantissa  mostSignificantLostBit  prod2A  prod2B  prodA  prodB  shpi0  shpiA  shpiB  sign  x  xl  y  yi  z  	projects/Math16/src/main/java/org/apache/commons/math3/util/FastMath.java	0.7071067811865475	3522	3522	2	replace	if(bits  <  0)  {  return  Double.doubleToRawLongBits(a);  if(bits  ==  0x8000000000000000L)  {  return  b;  }	  if(a    <    b)    {    if(bits    <    0)    {    return    Double.doubleToRawLongBits(a);    if(bits    ==    0x8000000000000000L)    {    return    b;    }    	non-compiled	[CE]  <identifier>  expected	8	None	replace
41	[BUG]  [BUGGY]  bits  =  b.length;  [CE]  <identifier>  expected  [FE]                  AssertionError      [CONTEXT]      }  if  (a  <  b)  {  return  b;  }  if  (a  !=  b)  {  return  Double.NaN;  }        [BUGGY]  bits  =  b.length;  [BUGGY]      if  (bits  ==  0x8000000000000000L)  {  return  b;  }  return  a;  }  [CLASS]  FastMath  ExpIntTable  ExpFracTable  lnMant  CodyWaite  [METHOD]  max  [RETURN_TYPE]  double  final  double  a  final  double  b  [VARIABLES]  boolean  RECOMPUTE_TABLES_AT_RUNTIME  bita  bitb  bitsum  cotanFlag  leftPlane  negate  negative  subnormal  double[]  CBRTTWO  COSINE_TABLE_A  COSINE_TABLE_B  EIGHTHS  EXP_FRAC_TABLE_A  EXP_FRAC_TABLE_B  EXP_INT_TABLE_A  EXP_INT_TABLE_B  SINE_TABLE_A  SINE_TABLE_B  TANGENT_TABLE_A  TANGENT_TABLE_B  hiPrec  hiPrecOut  lnCoef_i  lnCoef_last  lnm  lns  reduceResults  result  long[]  PI_O_4_BITS  RECIP_2PI  double  E  F_11_12  F_13_14  F_15_16  F_1_11  F_1_13  F_1_15  F_1_17  F_1_2  F_1_3  F_1_4  F_1_5  F_1_7  F_1_9  F_3_4  F_5_6  F_7_8  F_9_10  LN_2_A  LN_2_B  PI  TWO_POWER_52  a  a2  aa  ab  absAsinh  absAtanh  b  base  baseA  baseB  c  cD2pH  cRH  cTmpH  cd  cosEpsA  cosEpsB  cosa  cosaa  cosab  cosb  costA  costB  d  d1High  d1Low  d2p  d2pHH  d2pHL  d2pHigh  d2pLow  da  daa  dab  db  denom  denomb  denomr  direction  dx  epsA  epsA2  epsB  epsilon  err  est  esta  estb  extra  facta  factb  finalRemA  finalRemB  fracPartA  fracPartB  fx1  intPartA  intPartB  invx  invy  lna  lnb  lnza  lnzb  lores  mant  na  nb  numer  oneOverXa  p  p2  pi2a  pi2b  pia  pib  r  rHH  rHL  ra  ratio  ratioa  ratiob  rb  recip  recipa  recipb  remA  remB  result  resultHigh  resultLow  resultb  rln10a  rln10b  sinEpsA  sinEpsB  sina  sinb  sintA  sintB  sumA  sumB  t  temp  temp2  tempA  tempB  tempC  tmp  tmp1  tmp2  tmpA  tmpB  tmpHigh  tmpLow  x  x2  xa  xb  xbadj  xpa  xpb  xs  y  ya  yaa  yab  yb  z  za  zaa  zab  zb  double[][]  LN_HI_PREC_COEF  LN_MANT  LN_QUICK_COEF  int  EXP_FRAC_TABLE_LEN  EXP_INT_TABLE_LEN  EXP_INT_TABLE_MAX_INDEX  LN_MANT_LEN  SINE_TABLE_LEN  a  b  bits  e  exp  exp3  exponent  finalK  i  idx  intFrac  intPart  intVal  k  mantissa  mostSignificantLostBit  n  quadrant  scaledExponent  shift  sign  splitFactor  x  long  HEX_40000000  MASK_30BITS  a  ac  ad  b  bc  bd  bits  c  d  inbits  mantissa  mostSignificantLostBit  prod2A  prod2B  prodA  prodB  shpi0  shpiA  shpiB  sign  x  xl  y  yi  z  	projects/Math16/src/main/java/org/apache/commons/math3/util/FastMath.java	0.7071067811865475	3522	3522	2	replace	bits  =  b.length;	  bits    =    bits.length;    	non-compiled	[CE]  <identifier>  expected	10	None	replace
42	[BUG]  [BUGGY]  if(bits  ==  0x8000000000000000L)  {  return  b;  }  [CE]  <identifier>  expected  [FE]            AssertionError      [CONTEXT]      }  if  (a  <  b)  {  return  b;  }  if  (a  !=  b)  {  return  Double.NaN;  }        [BUGGY]  if(bits  ==  0x8000000000000000L)  {  return  b;  }  [BUGGY]      long  bits  =  Double.doubleToRawLongBits(a);  if  (bits  ==  0x8000000000000000L)  {  return  b;  }  return  a;  }  [CLASS]  FastMath  ExpIntTable  ExpFracTable  lnMant  CodyWaite  [METHOD]  max  [RETURN_TYPE]  double  final  double  a  final  double  b  [VARIABLES]  boolean  RECOMPUTE_TABLES_AT_RUNTIME  bita  bitb  bitsum  cotanFlag  leftPlane  negate  negative  subnormal  double[]  CBRTTWO  COSINE_TABLE_A  COSINE_TABLE_B  EIGHTHS  EXP_FRAC_TABLE_A  EXP_FRAC_TABLE_B  EXP_INT_TABLE_A  EXP_INT_TABLE_B  SINE_TABLE_A  SINE_TABLE_B  TANGENT_TABLE_A  TANGENT_TABLE_B  hiPrec  hiPrecOut  lnCoef_i  lnCoef_last  lnm  lns  reduceResults  result  long[]  PI_O_4_BITS  RECIP_2PI  double  E  F_11_12  F_13_14  F_15_16  F_1_11  F_1_13  F_1_15  F_1_17  F_1_2  F_1_3  F_1_4  F_1_5  F_1_7  F_1_9  F_3_4  F_5_6  F_7_8  F_9_10  LN_2_A  LN_2_B  PI  TWO_POWER_52  a  a2  aa  ab  absAsinh  absAtanh  b  base  baseA  baseB  c  cD2pH  cRH  cTmpH  cd  cosEpsA  cosEpsB  cosa  cosaa  cosab  cosb  costA  costB  d  d1High  d1Low  d2p  d2pHH  d2pHL  d2pHigh  d2pLow  da  daa  dab  db  denom  denomb  denomr  direction  dx  epsA  epsA2  epsB  epsilon  err  est  esta  estb  extra  facta  factb  finalRemA  finalRemB  fracPartA  fracPartB  fx1  intPartA  intPartB  invx  invy  lna  lnb  lnza  lnzb  lores  mant  na  nb  numer  oneOverXa  p  p2  pi2a  pi2b  pia  pib  r  rHH  rHL  ra  ratio  ratioa  ratiob  rb  recip  recipa  recipb  remA  remB  result  resultHigh  resultLow  resultb  rln10a  rln10b  sinEpsA  sinEpsB  sina  sinb  sintA  sintB  sumA  sumB  t  temp  temp2  tempA  tempB  tempC  tmp  tmp1  tmp2  tmpA  tmpB  tmpHigh  tmpLow  x  x2  xa  xb  xbadj  xpa  xpb  xs  y  ya  yaa  yab  yb  z  za  zaa  zab  zb  double[][]  LN_HI_PREC_COEF  LN_MANT  LN_QUICK_COEF  int  EXP_FRAC_TABLE_LEN  EXP_INT_TABLE_LEN  EXP_INT_TABLE_MAX_INDEX  LN_MANT_LEN  SINE_TABLE_LEN  a  b  bits  e  exp  exp3  exponent  finalK  i  idx  intFrac  intPart  intVal  k  mantissa  mostSignificantLostBit  n  quadrant  scaledExponent  shift  sign  splitFactor  x  long  HEX_40000000  MASK_30BITS  a  ac  ad  b  bc  bd  bits  c  d  inbits  mantissa  mostSignificantLostBit  prod2A  prod2B  prodA  prodB  shpi0  shpiA  shpiB  sign  x  xl  y  yi  z  	projects/Math16/src/main/java/org/apache/commons/math3/util/FastMath.java	0.7071067811865475	3522	3522	2	replace	if(bits  ==  0x8000000000000000L)  {  return  b;  }	  if(a    <    b)    {    long    bits    =    Double.doubleToRawLongBits(a);    if(bits    ==    0x8000000000000000L)    {    return    b;    }    	non-compiled	[CE]  <identifier>  expected	22	None	replace
43	[BUG]  [BUGGY]  if(bits  ==  0x800000000000L)  {  long  bits  =  Double.doubleToRawLongBits(a);  if  (bits!=  0x800000000000L)  {  return  b;  }  [CE]  <identifier>  expected  [FE]            AssertionError      [CONTEXT]      }  if  (a  <  b)  {  return  b;  }  if  (a  !=  b)  {  return  Double.NaN;  }        [BUGGY]  if(bits  ==  0x800000000000L)  {  long  bits  =  Double.doubleToRawLongBits(a);  if  (bits!=  0x800000000000L)  {  return  b;  }  [BUGGY]      long  bits  =  Double.doubleToRawLongBits(a);  if  (bits  ==  0x8000000000000000L)  {  return  b;  }  return  a;  }  [CLASS]  FastMath  ExpIntTable  ExpFracTable  lnMant  CodyWaite  [METHOD]  max  [RETURN_TYPE]  double  final  double  a  final  double  b  [VARIABLES]  boolean  RECOMPUTE_TABLES_AT_RUNTIME  bita  bitb  bitsum  cotanFlag  leftPlane  negate  negative  subnormal  double[]  CBRTTWO  COSINE_TABLE_A  COSINE_TABLE_B  EIGHTHS  EXP_FRAC_TABLE_A  EXP_FRAC_TABLE_B  EXP_INT_TABLE_A  EXP_INT_TABLE_B  SINE_TABLE_A  SINE_TABLE_B  TANGENT_TABLE_A  TANGENT_TABLE_B  hiPrec  hiPrecOut  lnCoef_i  lnCoef_last  lnm  lns  reduceResults  result  long[]  PI_O_4_BITS  RECIP_2PI  double  E  F_11_12  F_13_14  F_15_16  F_1_11  F_1_13  F_1_15  F_1_17  F_1_2  F_1_3  F_1_4  F_1_5  F_1_7  F_1_9  F_3_4  F_5_6  F_7_8  F_9_10  LN_2_A  LN_2_B  PI  TWO_POWER_52  a  a2  aa  ab  absAsinh  absAtanh  b  base  baseA  baseB  c  cD2pH  cRH  cTmpH  cd  cosEpsA  cosEpsB  cosa  cosaa  cosab  cosb  costA  costB  d  d1High  d1Low  d2p  d2pHH  d2pHL  d2pHigh  d2pLow  da  daa  dab  db  denom  denomb  denomr  direction  dx  epsA  epsA2  epsB  epsilon  err  est  esta  estb  extra  facta  factb  finalRemA  finalRemB  fracPartA  fracPartB  fx1  intPartA  intPartB  invx  invy  lna  lnb  lnza  lnzb  lores  mant  na  nb  numer  oneOverXa  p  p2  pi2a  pi2b  pia  pib  r  rHH  rHL  ra  ratio  ratioa  ratiob  rb  recip  recipa  recipb  remA  remB  result  resultHigh  resultLow  resultb  rln10a  rln10b  sinEpsA  sinEpsB  sina  sinb  sintA  sintB  sumA  sumB  t  temp  temp2  tempA  tempB  tempC  tmp  tmp1  tmp2  tmpA  tmpB  tmpHigh  tmpLow  x  x2  xa  xb  xbadj  xpa  xpb  xs  y  ya  yaa  yab  yb  z  za  zaa  zab  zb  double[][]  LN_HI_PREC_COEF  LN_MANT  LN_QUICK_COEF  int  EXP_FRAC_TABLE_LEN  EXP_INT_TABLE_LEN  EXP_INT_TABLE_MAX_INDEX  LN_MANT_LEN  SINE_TABLE_LEN  a  b  bits  e  exp  exp3  exponent  finalK  i  idx  intFrac  intPart  intVal  k  mantissa  mostSignificantLostBit  n  quadrant  scaledExponent  shift  sign  splitFactor  x  long  HEX_40000000  MASK_30BITS  a  ac  ad  b  bc  bd  bits  c  d  inbits  mantissa  mostSignificantLostBit  prod2A  prod2B  prodA  prodB  shpi0  shpiA  shpiB  sign  x  xl  y  yi  z  	projects/Math16/src/main/java/org/apache/commons/math3/util/FastMath.java	0.7071067811865475	3522	3522	2	replace	if(bits  ==  0x800000000000L)  {  long  bits  =  Double.doubleToRawLongBits(a);  if  (bits!=  0x800000000000L)  {  return  b;  }	  if(bits    <    0x800000000000L)    {    long    bits    =    Double.doubleToRawLongBits(a);    if    (bits!=    0x800000000000L)    {    return    b;    }    	non-compiled	[CE]  <identifier>  expected	21	None	replace
44	[BUG]  [BUGGY]  if(bits!=  0x800000000000L)  {  long  bits  =  Double.doubleToRawLongBits(a);  if  (bits!=  0x800000000000L)  {  return  b;  }  [CE]  <identifier>  expected  [FE]              AssertionError      [CONTEXT]      }  if  (a  <  b)  {  return  b;  }  if  (a  !=  b)  {  return  Double.NaN;  }        [BUGGY]  if(bits!=  0x800000000000L)  {  long  bits  =  Double.doubleToRawLongBits(a);  if  (bits!=  0x800000000000L)  {  return  b;  }  [BUGGY]      long  bits  =  Double.doubleToRawLongBits(a);  if  (bits  ==  0x8000000000000000L)  {  return  b;  }  return  a;  }  [CLASS]  FastMath  ExpIntTable  ExpFracTable  lnMant  CodyWaite  [METHOD]  max  [RETURN_TYPE]  double  final  double  a  final  double  b  [VARIABLES]  boolean  RECOMPUTE_TABLES_AT_RUNTIME  bita  bitb  bitsum  cotanFlag  leftPlane  negate  negative  subnormal  double[]  CBRTTWO  COSINE_TABLE_A  COSINE_TABLE_B  EIGHTHS  EXP_FRAC_TABLE_A  EXP_FRAC_TABLE_B  EXP_INT_TABLE_A  EXP_INT_TABLE_B  SINE_TABLE_A  SINE_TABLE_B  TANGENT_TABLE_A  TANGENT_TABLE_B  hiPrec  hiPrecOut  lnCoef_i  lnCoef_last  lnm  lns  reduceResults  result  long[]  PI_O_4_BITS  RECIP_2PI  double  E  F_11_12  F_13_14  F_15_16  F_1_11  F_1_13  F_1_15  F_1_17  F_1_2  F_1_3  F_1_4  F_1_5  F_1_7  F_1_9  F_3_4  F_5_6  F_7_8  F_9_10  LN_2_A  LN_2_B  PI  TWO_POWER_52  a  a2  aa  ab  absAsinh  absAtanh  b  base  baseA  baseB  c  cD2pH  cRH  cTmpH  cd  cosEpsA  cosEpsB  cosa  cosaa  cosab  cosb  costA  costB  d  d1High  d1Low  d2p  d2pHH  d2pHL  d2pHigh  d2pLow  da  daa  dab  db  denom  denomb  denomr  direction  dx  epsA  epsA2  epsB  epsilon  err  est  esta  estb  extra  facta  factb  finalRemA  finalRemB  fracPartA  fracPartB  fx1  intPartA  intPartB  invx  invy  lna  lnb  lnza  lnzb  lores  mant  na  nb  numer  oneOverXa  p  p2  pi2a  pi2b  pia  pib  r  rHH  rHL  ra  ratio  ratioa  ratiob  rb  recip  recipa  recipb  remA  remB  result  resultHigh  resultLow  resultb  rln10a  rln10b  sinEpsA  sinEpsB  sina  sinb  sintA  sintB  sumA  sumB  t  temp  temp2  tempA  tempB  tempC  tmp  tmp1  tmp2  tmpA  tmpB  tmpHigh  tmpLow  x  x2  xa  xb  xbadj  xpa  xpb  xs  y  ya  yaa  yab  yb  z  za  zaa  zab  zb  double[][]  LN_HI_PREC_COEF  LN_MANT  LN_QUICK_COEF  int  EXP_FRAC_TABLE_LEN  EXP_INT_TABLE_LEN  EXP_INT_TABLE_MAX_INDEX  LN_MANT_LEN  SINE_TABLE_LEN  a  b  bits  e  exp  exp3  exponent  finalK  i  idx  intFrac  intPart  intVal  k  mantissa  mostSignificantLostBit  n  quadrant  scaledExponent  shift  sign  splitFactor  x  long  HEX_40000000  MASK_30BITS  a  ac  ad  b  bc  bd  bits  c  d  inbits  mantissa  mostSignificantLostBit  prod2A  prod2B  prodA  prodB  shpi0  shpiA  shpiB  sign  x  xl  y  yi  z  	projects/Math16/src/main/java/org/apache/commons/math3/util/FastMath.java	0.7071067811865475	3522	3522	2	replace	if(bits!=  0x800000000000L)  {  long  bits  =  Double.doubleToRawLongBits(a);  if  (bits!=  0x800000000000L)  {  return  b;  }	  if(bits    <    0x800000000000L)    {    long    bits    =    Double.doubleToRawLongBits(a);    if    (bits!=    0x800000000000L)    {    return    b;    }    	non-compiled	[CE]  <identifier>  expected	21	None	replace
45	[BUG]  [BUGGY]  if(bits  <  0x80000000000L)  {  bits  =  Double.doubleToRawLongBits(a);  if  (bits  ==  0x800000000000L)  {  return  b;  }  [CE]  <identifier>  expected  [FE]              AssertionError      [CONTEXT]      }  if  (a  <  b)  {  return  b;  }  if  (a  !=  b)  {  return  Double.NaN;  }        [BUGGY]  if(bits  <  0x80000000000L)  {  bits  =  Double.doubleToRawLongBits(a);  if  (bits  ==  0x800000000000L)  {  return  b;  }  [BUGGY]      long  bits  =  Double.doubleToRawLongBits(a);  if  (bits  ==  0x8000000000000000L)  {  return  b;  }  return  a;  }  [CLASS]  FastMath  ExpIntTable  ExpFracTable  lnMant  CodyWaite  [METHOD]  max  [RETURN_TYPE]  double  final  double  a  final  double  b  [VARIABLES]  boolean  RECOMPUTE_TABLES_AT_RUNTIME  bita  bitb  bitsum  cotanFlag  leftPlane  negate  negative  subnormal  double[]  CBRTTWO  COSINE_TABLE_A  COSINE_TABLE_B  EIGHTHS  EXP_FRAC_TABLE_A  EXP_FRAC_TABLE_B  EXP_INT_TABLE_A  EXP_INT_TABLE_B  SINE_TABLE_A  SINE_TABLE_B  TANGENT_TABLE_A  TANGENT_TABLE_B  hiPrec  hiPrecOut  lnCoef_i  lnCoef_last  lnm  lns  reduceResults  result  long[]  PI_O_4_BITS  RECIP_2PI  double  E  F_11_12  F_13_14  F_15_16  F_1_11  F_1_13  F_1_15  F_1_17  F_1_2  F_1_3  F_1_4  F_1_5  F_1_7  F_1_9  F_3_4  F_5_6  F_7_8  F_9_10  LN_2_A  LN_2_B  PI  TWO_POWER_52  a  a2  aa  ab  absAsinh  absAtanh  b  base  baseA  baseB  c  cD2pH  cRH  cTmpH  cd  cosEpsA  cosEpsB  cosa  cosaa  cosab  cosb  costA  costB  d  d1High  d1Low  d2p  d2pHH  d2pHL  d2pHigh  d2pLow  da  daa  dab  db  denom  denomb  denomr  direction  dx  epsA  epsA2  epsB  epsilon  err  est  esta  estb  extra  facta  factb  finalRemA  finalRemB  fracPartA  fracPartB  fx1  intPartA  intPartB  invx  invy  lna  lnb  lnza  lnzb  lores  mant  na  nb  numer  oneOverXa  p  p2  pi2a  pi2b  pia  pib  r  rHH  rHL  ra  ratio  ratioa  ratiob  rb  recip  recipa  recipb  remA  remB  result  resultHigh  resultLow  resultb  rln10a  rln10b  sinEpsA  sinEpsB  sina  sinb  sintA  sintB  sumA  sumB  t  temp  temp2  tempA  tempB  tempC  tmp  tmp1  tmp2  tmpA  tmpB  tmpHigh  tmpLow  x  x2  xa  xb  xbadj  xpa  xpb  xs  y  ya  yaa  yab  yb  z  za  zaa  zab  zb  double[][]  LN_HI_PREC_COEF  LN_MANT  LN_QUICK_COEF  int  EXP_FRAC_TABLE_LEN  EXP_INT_TABLE_LEN  EXP_INT_TABLE_MAX_INDEX  LN_MANT_LEN  SINE_TABLE_LEN  a  b  bits  e  exp  exp3  exponent  finalK  i  idx  intFrac  intPart  intVal  k  mantissa  mostSignificantLostBit  n  quadrant  scaledExponent  shift  sign  splitFactor  x  long  HEX_40000000  MASK_30BITS  a  ac  ad  b  bc  bd  bits  c  d  inbits  mantissa  mostSignificantLostBit  prod2A  prod2B  prodA  prodB  shpi0  shpiA  shpiB  sign  x  xl  y  yi  z  	projects/Math16/src/main/java/org/apache/commons/math3/util/FastMath.java	0.7071067811865475	3522	3522	2	replace	if(bits  <  0x80000000000L)  {  bits  =  Double.doubleToRawLongBits(a);  if  (bits  ==  0x800000000000L)  {  return  b;  }	  if(a    <    b)    {    if(bits    <    0x800000000000L)    {    bits    =    Double.doubleToRawLongBits(a);    if    (bits    ==    0x800000000000L)    {    return    b;    }    	non-compiled	[CE]  <identifier>  expected	6	None	replace
46	[BUG]  [BUGGY]  if(bits  <  0x800000000000L)  {  long  bits  =  Double.doubleToRawLongBits(a);  if  (bits!=  0x800000000000000L)  {  return  b;  }  [CE]  <identifier>  expected  [FE]              AssertionError      [CONTEXT]      }  if  (a  <  b)  {  return  b;  }  if  (a  !=  b)  {  return  Double.NaN;  }        [BUGGY]  if(bits  <  0x800000000000L)  {  long  bits  =  Double.doubleToRawLongBits(a);  if  (bits!=  0x800000000000000L)  {  return  b;  }  [BUGGY]      long  bits  =  Double.doubleToRawLongBits(a);  if  (bits  ==  0x8000000000000000L)  {  return  b;  }  return  a;  }  [CLASS]  FastMath  ExpIntTable  ExpFracTable  lnMant  CodyWaite  [METHOD]  max  [RETURN_TYPE]  double  final  double  a  final  double  b  [VARIABLES]  boolean  RECOMPUTE_TABLES_AT_RUNTIME  bita  bitb  bitsum  cotanFlag  leftPlane  negate  negative  subnormal  double[]  CBRTTWO  COSINE_TABLE_A  COSINE_TABLE_B  EIGHTHS  EXP_FRAC_TABLE_A  EXP_FRAC_TABLE_B  EXP_INT_TABLE_A  EXP_INT_TABLE_B  SINE_TABLE_A  SINE_TABLE_B  TANGENT_TABLE_A  TANGENT_TABLE_B  hiPrec  hiPrecOut  lnCoef_i  lnCoef_last  lnm  lns  reduceResults  result  long[]  PI_O_4_BITS  RECIP_2PI  double  E  F_11_12  F_13_14  F_15_16  F_1_11  F_1_13  F_1_15  F_1_17  F_1_2  F_1_3  F_1_4  F_1_5  F_1_7  F_1_9  F_3_4  F_5_6  F_7_8  F_9_10  LN_2_A  LN_2_B  PI  TWO_POWER_52  a  a2  aa  ab  absAsinh  absAtanh  b  base  baseA  baseB  c  cD2pH  cRH  cTmpH  cd  cosEpsA  cosEpsB  cosa  cosaa  cosab  cosb  costA  costB  d  d1High  d1Low  d2p  d2pHH  d2pHL  d2pHigh  d2pLow  da  daa  dab  db  denom  denomb  denomr  direction  dx  epsA  epsA2  epsB  epsilon  err  est  esta  estb  extra  facta  factb  finalRemA  finalRemB  fracPartA  fracPartB  fx1  intPartA  intPartB  invx  invy  lna  lnb  lnza  lnzb  lores  mant  na  nb  numer  oneOverXa  p  p2  pi2a  pi2b  pia  pib  r  rHH  rHL  ra  ratio  ratioa  ratiob  rb  recip  recipa  recipb  remA  remB  result  resultHigh  resultLow  resultb  rln10a  rln10b  sinEpsA  sinEpsB  sina  sinb  sintA  sintB  sumA  sumB  t  temp  temp2  tempA  tempB  tempC  tmp  tmp1  tmp2  tmpA  tmpB  tmpHigh  tmpLow  x  x2  xa  xb  xbadj  xpa  xpb  xs  y  ya  yaa  yab  yb  z  za  zaa  zab  zb  double[][]  LN_HI_PREC_COEF  LN_MANT  LN_QUICK_COEF  int  EXP_FRAC_TABLE_LEN  EXP_INT_TABLE_LEN  EXP_INT_TABLE_MAX_INDEX  LN_MANT_LEN  SINE_TABLE_LEN  a  b  bits  e  exp  exp3  exponent  finalK  i  idx  intFrac  intPart  intVal  k  mantissa  mostSignificantLostBit  n  quadrant  scaledExponent  shift  sign  splitFactor  x  long  HEX_40000000  MASK_30BITS  a  ac  ad  b  bc  bd  bits  c  d  inbits  mantissa  mostSignificantLostBit  prod2A  prod2B  prodA  prodB  shpi0  shpiA  shpiB  sign  x  xl  y  yi  z  	projects/Math16/src/main/java/org/apache/commons/math3/util/FastMath.java	0.7071067811865475	3522	3522	2	replace	if(bits  <  0x800000000000L)  {  long  bits  =  Double.doubleToRawLongBits(a);  if  (bits!=  0x800000000000000L)  {  return  b;  }	  if(bits    ==    0x800000000000L)    {    long    bits    =    Double.doubleToRawLongBits(a);    if    (bits    ==    0x800000000000000L)    {    return    b;    }    	non-compiled	[CE]  <identifier>  expected	15	None	replace
47	[BUG]  [BUGGY]  if(a  <  =  b)  {  if(bits  ==  0x800000000000L)  {  return  b;  }  [CE]  <identifier>  expected  [FE]              AssertionError      [CONTEXT]      }  if  (a  <  b)  {  return  b;  }  if  (a  !=  b)  {  return  Double.NaN;  }        [BUGGY]  if(a  <  =  b)  {  if(bits  ==  0x800000000000L)  {  return  b;  }  [BUGGY]      long  bits  =  Double.doubleToRawLongBits(a);  if  (bits  ==  0x8000000000000000L)  {  return  b;  }  return  a;  }  [CLASS]  FastMath  ExpIntTable  ExpFracTable  lnMant  CodyWaite  [METHOD]  max  [RETURN_TYPE]  double  final  double  a  final  double  b  [VARIABLES]  boolean  RECOMPUTE_TABLES_AT_RUNTIME  bita  bitb  bitsum  cotanFlag  leftPlane  negate  negative  subnormal  double[]  CBRTTWO  COSINE_TABLE_A  COSINE_TABLE_B  EIGHTHS  EXP_FRAC_TABLE_A  EXP_FRAC_TABLE_B  EXP_INT_TABLE_A  EXP_INT_TABLE_B  SINE_TABLE_A  SINE_TABLE_B  TANGENT_TABLE_A  TANGENT_TABLE_B  hiPrec  hiPrecOut  lnCoef_i  lnCoef_last  lnm  lns  reduceResults  result  long[]  PI_O_4_BITS  RECIP_2PI  double  E  F_11_12  F_13_14  F_15_16  F_1_11  F_1_13  F_1_15  F_1_17  F_1_2  F_1_3  F_1_4  F_1_5  F_1_7  F_1_9  F_3_4  F_5_6  F_7_8  F_9_10  LN_2_A  LN_2_B  PI  TWO_POWER_52  a  a2  aa  ab  absAsinh  absAtanh  b  base  baseA  baseB  c  cD2pH  cRH  cTmpH  cd  cosEpsA  cosEpsB  cosa  cosaa  cosab  cosb  costA  costB  d  d1High  d1Low  d2p  d2pHH  d2pHL  d2pHigh  d2pLow  da  daa  dab  db  denom  denomb  denomr  direction  dx  epsA  epsA2  epsB  epsilon  err  est  esta  estb  extra  facta  factb  finalRemA  finalRemB  fracPartA  fracPartB  fx1  intPartA  intPartB  invx  invy  lna  lnb  lnza  lnzb  lores  mant  na  nb  numer  oneOverXa  p  p2  pi2a  pi2b  pia  pib  r  rHH  rHL  ra  ratio  ratioa  ratiob  rb  recip  recipa  recipb  remA  remB  result  resultHigh  resultLow  resultb  rln10a  rln10b  sinEpsA  sinEpsB  sina  sinb  sintA  sintB  sumA  sumB  t  temp  temp2  tempA  tempB  tempC  tmp  tmp1  tmp2  tmpA  tmpB  tmpHigh  tmpLow  x  x2  xa  xb  xbadj  xpa  xpb  xs  y  ya  yaa  yab  yb  z  za  zaa  zab  zb  double[][]  LN_HI_PREC_COEF  LN_MANT  LN_QUICK_COEF  int  EXP_FRAC_TABLE_LEN  EXP_INT_TABLE_LEN  EXP_INT_TABLE_MAX_INDEX  LN_MANT_LEN  SINE_TABLE_LEN  a  b  bits  e  exp  exp3  exponent  finalK  i  idx  intFrac  intPart  intVal  k  mantissa  mostSignificantLostBit  n  quadrant  scaledExponent  shift  sign  splitFactor  x  long  HEX_40000000  MASK_30BITS  a  ac  ad  b  bc  bd  bits  c  d  inbits  mantissa  mostSignificantLostBit  prod2A  prod2B  prodA  prodB  shpi0  shpiA  shpiB  sign  x  xl  y  yi  z  	projects/Math16/src/main/java/org/apache/commons/math3/util/FastMath.java	0.7071067811865475	3522	3522	2	replace	if(a  <  =  b)  {  if(bits  ==  0x800000000000L)  {  return  b;  }	  if(a!=    b)    {    if(bits    ==    0x800000000000L)    {    return    b;    }    	non-compiled	[CE]  <identifier>  expected	4	None	replace
48	[BUG]  [BUGGY]  if(bits  <  0x800000000000000L)  {  return  a;  }  [CE]  <identifier>  expected  [FE]              AssertionError      [CONTEXT]      }  if  (a  <  b)  {  return  b;  }  if  (a  !=  b)  {  return  Double.NaN;  }        [BUGGY]  if(bits  <  0x800000000000000L)  {  return  a;  }  [BUGGY]      long  bits  =  Double.doubleToRawLongBits(a);  if  (bits  ==  0x8000000000000000L)  {  return  b;  }  return  a;  }  [CLASS]  FastMath  ExpIntTable  ExpFracTable  lnMant  CodyWaite  [METHOD]  max  [RETURN_TYPE]  double  final  double  a  final  double  b  [VARIABLES]  boolean  RECOMPUTE_TABLES_AT_RUNTIME  bita  bitb  bitsum  cotanFlag  leftPlane  negate  negative  subnormal  double[]  CBRTTWO  COSINE_TABLE_A  COSINE_TABLE_B  EIGHTHS  EXP_FRAC_TABLE_A  EXP_FRAC_TABLE_B  EXP_INT_TABLE_A  EXP_INT_TABLE_B  SINE_TABLE_A  SINE_TABLE_B  TANGENT_TABLE_A  TANGENT_TABLE_B  hiPrec  hiPrecOut  lnCoef_i  lnCoef_last  lnm  lns  reduceResults  result  long[]  PI_O_4_BITS  RECIP_2PI  double  E  F_11_12  F_13_14  F_15_16  F_1_11  F_1_13  F_1_15  F_1_17  F_1_2  F_1_3  F_1_4  F_1_5  F_1_7  F_1_9  F_3_4  F_5_6  F_7_8  F_9_10  LN_2_A  LN_2_B  PI  TWO_POWER_52  a  a2  aa  ab  absAsinh  absAtanh  b  base  baseA  baseB  c  cD2pH  cRH  cTmpH  cd  cosEpsA  cosEpsB  cosa  cosaa  cosab  cosb  costA  costB  d  d1High  d1Low  d2p  d2pHH  d2pHL  d2pHigh  d2pLow  da  daa  dab  db  denom  denomb  denomr  direction  dx  epsA  epsA2  epsB  epsilon  err  est  esta  estb  extra  facta  factb  finalRemA  finalRemB  fracPartA  fracPartB  fx1  intPartA  intPartB  invx  invy  lna  lnb  lnza  lnzb  lores  mant  na  nb  numer  oneOverXa  p  p2  pi2a  pi2b  pia  pib  r  rHH  rHL  ra  ratio  ratioa  ratiob  rb  recip  recipa  recipb  remA  remB  result  resultHigh  resultLow  resultb  rln10a  rln10b  sinEpsA  sinEpsB  sina  sinb  sintA  sintB  sumA  sumB  t  temp  temp2  tempA  tempB  tempC  tmp  tmp1  tmp2  tmpA  tmpB  tmpHigh  tmpLow  x  x2  xa  xb  xbadj  xpa  xpb  xs  y  ya  yaa  yab  yb  z  za  zaa  zab  zb  double[][]  LN_HI_PREC_COEF  LN_MANT  LN_QUICK_COEF  int  EXP_FRAC_TABLE_LEN  EXP_INT_TABLE_LEN  EXP_INT_TABLE_MAX_INDEX  LN_MANT_LEN  SINE_TABLE_LEN  a  b  bits  e  exp  exp3  exponent  finalK  i  idx  intFrac  intPart  intVal  k  mantissa  mostSignificantLostBit  n  quadrant  scaledExponent  shift  sign  splitFactor  x  long  HEX_40000000  MASK_30BITS  a  ac  ad  b  bc  bd  bits  c  d  inbits  mantissa  mostSignificantLostBit  prod2A  prod2B  prodA  prodB  shpi0  shpiA  shpiB  sign  x  xl  y  yi  z  	projects/Math16/src/main/java/org/apache/commons/math3/util/FastMath.java	0.7071067811865475	3522	3522	2	replace	if(bits  <  0x800000000000000L)  {  return  a;  }	  if(a    ==    b)    {    if(bits    ==    0x800000000000000L)    {    return    b;    }    	non-compiled	[CE]  <identifier>  expected	13	None	replace
49	[BUG]  [BUGGY]  if(b  ==  0x800000000000L)  {  long  bits  =  Double.doubleToRawLongBits(a);  if  (bits  ==  0x800000000000L)  {  return  b;  }  [CE]  <identifier>  expected  [FE]            AssertionError      [CONTEXT]      }  if  (a  <  b)  {  return  b;  }  if  (a  !=  b)  {  return  Double.NaN;  }        [BUGGY]  if(b  ==  0x800000000000L)  {  long  bits  =  Double.doubleToRawLongBits(a);  if  (bits  ==  0x800000000000L)  {  return  b;  }  [BUGGY]      long  bits  =  Double.doubleToRawLongBits(a);  if  (bits  ==  0x8000000000000000L)  {  return  b;  }  return  a;  }  [CLASS]  FastMath  ExpIntTable  ExpFracTable  lnMant  CodyWaite  [METHOD]  max  [RETURN_TYPE]  double  final  double  a  final  double  b  [VARIABLES]  boolean  RECOMPUTE_TABLES_AT_RUNTIME  bita  bitb  bitsum  cotanFlag  leftPlane  negate  negative  subnormal  double[]  CBRTTWO  COSINE_TABLE_A  COSINE_TABLE_B  EIGHTHS  EXP_FRAC_TABLE_A  EXP_FRAC_TABLE_B  EXP_INT_TABLE_A  EXP_INT_TABLE_B  SINE_TABLE_A  SINE_TABLE_B  TANGENT_TABLE_A  TANGENT_TABLE_B  hiPrec  hiPrecOut  lnCoef_i  lnCoef_last  lnm  lns  reduceResults  result  long[]  PI_O_4_BITS  RECIP_2PI  double  E  F_11_12  F_13_14  F_15_16  F_1_11  F_1_13  F_1_15  F_1_17  F_1_2  F_1_3  F_1_4  F_1_5  F_1_7  F_1_9  F_3_4  F_5_6  F_7_8  F_9_10  LN_2_A  LN_2_B  PI  TWO_POWER_52  a  a2  aa  ab  absAsinh  absAtanh  b  base  baseA  baseB  c  cD2pH  cRH  cTmpH  cd  cosEpsA  cosEpsB  cosa  cosaa  cosab  cosb  costA  costB  d  d1High  d1Low  d2p  d2pHH  d2pHL  d2pHigh  d2pLow  da  daa  dab  db  denom  denomb  denomr  direction  dx  epsA  epsA2  epsB  epsilon  err  est  esta  estb  extra  facta  factb  finalRemA  finalRemB  fracPartA  fracPartB  fx1  intPartA  intPartB  invx  invy  lna  lnb  lnza  lnzb  lores  mant  na  nb  numer  oneOverXa  p  p2  pi2a  pi2b  pia  pib  r  rHH  rHL  ra  ratio  ratioa  ratiob  rb  recip  recipa  recipb  remA  remB  result  resultHigh  resultLow  resultb  rln10a  rln10b  sinEpsA  sinEpsB  sina  sinb  sintA  sintB  sumA  sumB  t  temp  temp2  tempA  tempB  tempC  tmp  tmp1  tmp2  tmpA  tmpB  tmpHigh  tmpLow  x  x2  xa  xb  xbadj  xpa  xpb  xs  y  ya  yaa  yab  yb  z  za  zaa  zab  zb  double[][]  LN_HI_PREC_COEF  LN_MANT  LN_QUICK_COEF  int  EXP_FRAC_TABLE_LEN  EXP_INT_TABLE_LEN  EXP_INT_TABLE_MAX_INDEX  LN_MANT_LEN  SINE_TABLE_LEN  a  b  bits  e  exp  exp3  exponent  finalK  i  idx  intFrac  intPart  intVal  k  mantissa  mostSignificantLostBit  n  quadrant  scaledExponent  shift  sign  splitFactor  x  long  HEX_40000000  MASK_30BITS  a  ac  ad  b  bc  bd  bits  c  d  inbits  mantissa  mostSignificantLostBit  prod2A  prod2B  prodA  prodB  shpi0  shpiA  shpiB  sign  x  xl  y  yi  z  	projects/Math16/src/main/java/org/apache/commons/math3/util/FastMath.java	0.7071067811865475	3522	3522	2	replace	if(b  ==  0x800000000000L)  {  long  bits  =  Double.doubleToRawLongBits(a);  if  (bits  ==  0x800000000000L)  {  return  b;  }	  if(a    <    0x800000000000L)    {    long    bits    =    Double.doubleToRawLongBits(a);    if    (bits    ==    0x800000000000L)    {    return    b;    }    	non-compiled	[CE]  <identifier>  expected	5	None	replace
50	[BUG]  [BUGGY]  int  bits  =  Double.doubleToRawLongBits(a,  b)-  1;  [CE]  <identifier>  expected  [FE]              AssertionError      [CONTEXT]      }  if  (a  <  b)  {  return  b;  }  if  (a  !=  b)  {  return  Double.NaN;  }        [BUGGY]  int  bits  =  Double.doubleToRawLongBits(a,  b)-  1;  [BUGGY]      if  (bits  ==  0x8000000000000000L)  {  return  b;  }  return  a;  }  [CLASS]  FastMath  ExpIntTable  ExpFracTable  lnMant  CodyWaite  [METHOD]  max  [RETURN_TYPE]  double  final  double  a  final  double  b  [VARIABLES]  boolean  RECOMPUTE_TABLES_AT_RUNTIME  bita  bitb  bitsum  cotanFlag  leftPlane  negate  negative  subnormal  double[]  CBRTTWO  COSINE_TABLE_A  COSINE_TABLE_B  EIGHTHS  EXP_FRAC_TABLE_A  EXP_FRAC_TABLE_B  EXP_INT_TABLE_A  EXP_INT_TABLE_B  SINE_TABLE_A  SINE_TABLE_B  TANGENT_TABLE_A  TANGENT_TABLE_B  hiPrec  hiPrecOut  lnCoef_i  lnCoef_last  lnm  lns  reduceResults  result  long[]  PI_O_4_BITS  RECIP_2PI  double  E  F_11_12  F_13_14  F_15_16  F_1_11  F_1_13  F_1_15  F_1_17  F_1_2  F_1_3  F_1_4  F_1_5  F_1_7  F_1_9  F_3_4  F_5_6  F_7_8  F_9_10  LN_2_A  LN_2_B  PI  TWO_POWER_52  a  a2  aa  ab  absAsinh  absAtanh  b  base  baseA  baseB  c  cD2pH  cRH  cTmpH  cd  cosEpsA  cosEpsB  cosa  cosaa  cosab  cosb  costA  costB  d  d1High  d1Low  d2p  d2pHH  d2pHL  d2pHigh  d2pLow  da  daa  dab  db  denom  denomb  denomr  direction  dx  epsA  epsA2  epsB  epsilon  err  est  esta  estb  extra  facta  factb  finalRemA  finalRemB  fracPartA  fracPartB  fx1  intPartA  intPartB  invx  invy  lna  lnb  lnza  lnzb  lores  mant  na  nb  numer  oneOverXa  p  p2  pi2a  pi2b  pia  pib  r  rHH  rHL  ra  ratio  ratioa  ratiob  rb  recip  recipa  recipb  remA  remB  result  resultHigh  resultLow  resultb  rln10a  rln10b  sinEpsA  sinEpsB  sina  sinb  sintA  sintB  sumA  sumB  t  temp  temp2  tempA  tempB  tempC  tmp  tmp1  tmp2  tmpA  tmpB  tmpHigh  tmpLow  x  x2  xa  xb  xbadj  xpa  xpb  xs  y  ya  yaa  yab  yb  z  za  zaa  zab  zb  double[][]  LN_HI_PREC_COEF  LN_MANT  LN_QUICK_COEF  int  EXP_FRAC_TABLE_LEN  EXP_INT_TABLE_LEN  EXP_INT_TABLE_MAX_INDEX  LN_MANT_LEN  SINE_TABLE_LEN  a  b  bits  e  exp  exp3  exponent  finalK  i  idx  intFrac  intPart  intVal  k  mantissa  mostSignificantLostBit  n  quadrant  scaledExponent  shift  sign  splitFactor  x  long  HEX_40000000  MASK_30BITS  a  ac  ad  b  bc  bd  bits  c  d  inbits  mantissa  mostSignificantLostBit  prod2A  prod2B  prodA  prodB  shpi0  shpiA  shpiB  sign  x  xl  y  yi  z  	projects/Math16/src/main/java/org/apache/commons/math3/util/FastMath.java	0.7071067811865475	3522	3522	2	replace	int  bits  =  Double.doubleToRawLongBits(a,  b)-  1;	  int    bits    =    Double.doubleToRawLongBits(a,    b);    	non-compiled	[CE]  <identifier>  expected	12	None	replace
51	[BUG]  [BUGGY]  intbits  =  b.getIntBits();  [CE]  <identifier>  expected  [FE]                  AssertionError      [CONTEXT]      }  if  (a  <  b)  {  return  b;  }  if  (a  !=  b)  {  return  Double.NaN;  }        [BUGGY]  intbits  =  b.getIntBits();  [BUGGY]      if  (bits  ==  0x8000000000000000L)  {  return  b;  }  return  a;  }  [CLASS]  FastMath  ExpIntTable  ExpFracTable  lnMant  CodyWaite  [METHOD]  max  [RETURN_TYPE]  double  final  double  a  final  double  b  [VARIABLES]  boolean  RECOMPUTE_TABLES_AT_RUNTIME  bita  bitb  bitsum  cotanFlag  leftPlane  negate  negative  subnormal  double[]  CBRTTWO  COSINE_TABLE_A  COSINE_TABLE_B  EIGHTHS  EXP_FRAC_TABLE_A  EXP_FRAC_TABLE_B  EXP_INT_TABLE_A  EXP_INT_TABLE_B  SINE_TABLE_A  SINE_TABLE_B  TANGENT_TABLE_A  TANGENT_TABLE_B  hiPrec  hiPrecOut  lnCoef_i  lnCoef_last  lnm  lns  reduceResults  result  long[]  PI_O_4_BITS  RECIP_2PI  double  E  F_11_12  F_13_14  F_15_16  F_1_11  F_1_13  F_1_15  F_1_17  F_1_2  F_1_3  F_1_4  F_1_5  F_1_7  F_1_9  F_3_4  F_5_6  F_7_8  F_9_10  LN_2_A  LN_2_B  PI  TWO_POWER_52  a  a2  aa  ab  absAsinh  absAtanh  b  base  baseA  baseB  c  cD2pH  cRH  cTmpH  cd  cosEpsA  cosEpsB  cosa  cosaa  cosab  cosb  costA  costB  d  d1High  d1Low  d2p  d2pHH  d2pHL  d2pHigh  d2pLow  da  daa  dab  db  denom  denomb  denomr  direction  dx  epsA  epsA2  epsB  epsilon  err  est  esta  estb  extra  facta  factb  finalRemA  finalRemB  fracPartA  fracPartB  fx1  intPartA  intPartB  invx  invy  lna  lnb  lnza  lnzb  lores  mant  na  nb  numer  oneOverXa  p  p2  pi2a  pi2b  pia  pib  r  rHH  rHL  ra  ratio  ratioa  ratiob  rb  recip  recipa  recipb  remA  remB  result  resultHigh  resultLow  resultb  rln10a  rln10b  sinEpsA  sinEpsB  sina  sinb  sintA  sintB  sumA  sumB  t  temp  temp2  tempA  tempB  tempC  tmp  tmp1  tmp2  tmpA  tmpB  tmpHigh  tmpLow  x  x2  xa  xb  xbadj  xpa  xpb  xs  y  ya  yaa  yab  yb  z  za  zaa  zab  zb  double[][]  LN_HI_PREC_COEF  LN_MANT  LN_QUICK_COEF  int  EXP_FRAC_TABLE_LEN  EXP_INT_TABLE_LEN  EXP_INT_TABLE_MAX_INDEX  LN_MANT_LEN  SINE_TABLE_LEN  a  b  bits  e  exp  exp3  exponent  finalK  i  idx  intFrac  intPart  intVal  k  mantissa  mostSignificantLostBit  n  quadrant  scaledExponent  shift  sign  splitFactor  x  long  HEX_40000000  MASK_30BITS  a  ac  ad  b  bc  bd  bits  c  d  inbits  mantissa  mostSignificantLostBit  prod2A  prod2B  prodA  prodB  shpi0  shpiA  shpiB  sign  x  xl  y  yi  z  	projects/Math16/src/main/java/org/apache/commons/math3/util/FastMath.java	0.7071067811865475	3522	3522	2	replace	intbits  =  b.getIntBits();	  intbits    =    lnMant.getIntBits();    	non-compiled	[CE]  <identifier>  expected	24	None	replace
52	[BUG]  [BUGGY]  if(bits  <  0)  {  return  Double.doubleToRawLongBits(a);  if(bits  ==  0x800000000000000L)  {  return  b;  }  [CE]  <identifier>  expected  [FE]              AssertionError      [CONTEXT]      }  if  (a  <  b)  {  return  b;  }  if  (a  !=  b)  {  return  Double.NaN;  }        [BUGGY]  if(bits  <  0)  {  return  Double.doubleToRawLongBits(a);  if(bits  ==  0x800000000000000L)  {  return  b;  }  [BUGGY]      long  bits  =  Double.doubleToRawLongBits(a);  if  (bits  ==  0x8000000000000000L)  {  return  b;  }  return  a;  }  [CLASS]  FastMath  ExpIntTable  ExpFracTable  lnMant  CodyWaite  [METHOD]  max  [RETURN_TYPE]  double  final  double  a  final  double  b  [VARIABLES]  boolean  RECOMPUTE_TABLES_AT_RUNTIME  bita  bitb  bitsum  cotanFlag  leftPlane  negate  negative  subnormal  double[]  CBRTTWO  COSINE_TABLE_A  COSINE_TABLE_B  EIGHTHS  EXP_FRAC_TABLE_A  EXP_FRAC_TABLE_B  EXP_INT_TABLE_A  EXP_INT_TABLE_B  SINE_TABLE_A  SINE_TABLE_B  TANGENT_TABLE_A  TANGENT_TABLE_B  hiPrec  hiPrecOut  lnCoef_i  lnCoef_last  lnm  lns  reduceResults  result  long[]  PI_O_4_BITS  RECIP_2PI  double  E  F_11_12  F_13_14  F_15_16  F_1_11  F_1_13  F_1_15  F_1_17  F_1_2  F_1_3  F_1_4  F_1_5  F_1_7  F_1_9  F_3_4  F_5_6  F_7_8  F_9_10  LN_2_A  LN_2_B  PI  TWO_POWER_52  a  a2  aa  ab  absAsinh  absAtanh  b  base  baseA  baseB  c  cD2pH  cRH  cTmpH  cd  cosEpsA  cosEpsB  cosa  cosaa  cosab  cosb  costA  costB  d  d1High  d1Low  d2p  d2pHH  d2pHL  d2pHigh  d2pLow  da  daa  dab  db  denom  denomb  denomr  direction  dx  epsA  epsA2  epsB  epsilon  err  est  esta  estb  extra  facta  factb  finalRemA  finalRemB  fracPartA  fracPartB  fx1  intPartA  intPartB  invx  invy  lna  lnb  lnza  lnzb  lores  mant  na  nb  numer  oneOverXa  p  p2  pi2a  pi2b  pia  pib  r  rHH  rHL  ra  ratio  ratioa  ratiob  rb  recip  recipa  recipb  remA  remB  result  resultHigh  resultLow  resultb  rln10a  rln10b  sinEpsA  sinEpsB  sina  sinb  sintA  sintB  sumA  sumB  t  temp  temp2  tempA  tempB  tempC  tmp  tmp1  tmp2  tmpA  tmpB  tmpHigh  tmpLow  x  x2  xa  xb  xbadj  xpa  xpb  xs  y  ya  yaa  yab  yb  z  za  zaa  zab  zb  double[][]  LN_HI_PREC_COEF  LN_MANT  LN_QUICK_COEF  int  EXP_FRAC_TABLE_LEN  EXP_INT_TABLE_LEN  EXP_INT_TABLE_MAX_INDEX  LN_MANT_LEN  SINE_TABLE_LEN  a  b  bits  e  exp  exp3  exponent  finalK  i  idx  intFrac  intPart  intVal  k  mantissa  mostSignificantLostBit  n  quadrant  scaledExponent  shift  sign  splitFactor  x  long  HEX_40000000  MASK_30BITS  a  ac  ad  b  bc  bd  bits  c  d  inbits  mantissa  mostSignificantLostBit  prod2A  prod2B  prodA  prodB  shpi0  shpiA  shpiB  sign  x  xl  y  yi  z  	projects/Math16/src/main/java/org/apache/commons/math3/util/FastMath.java	0.7071067811865475	3522	3522	2	replace	if(bits  <  0)  {  return  Double.doubleToRawLongBits(a);  if(bits  ==  0x800000000000000L)  {  return  b;  }	  if(a    <    b)    {    if(bits    <    0)    {    return    Double.doubleToRawLongBits(a);    if(bits    ==    0x8000000000000000L)    {    return    b;    }    	non-compiled	[CE]  <identifier>  expected	8	None	replace
53	[BUG]  [BUGGY]  if(a  <  b)  {  bits  =  Double.doubleToRawLongBits(a);  if(bits  ==  0x8000000000000000L)  {  return  b;  }  [CE]  <identifier>  expected  [FE]            AssertionError      [CONTEXT]      }  if  (a  <  b)  {  return  b;  }  if  (a  !=  b)  {  return  Double.NaN;  }        [BUGGY]  if(a  <  b)  {  bits  =  Double.doubleToRawLongBits(a);  if(bits  ==  0x8000000000000000L)  {  return  b;  }  [BUGGY]      long  bits  =  Double.doubleToRawLongBits(a);  if  (bits  ==  0x8000000000000000L)  {  return  b;  }  return  a;  }  [CLASS]  FastMath  ExpIntTable  ExpFracTable  lnMant  CodyWaite  [METHOD]  max  [RETURN_TYPE]  double  final  double  a  final  double  b  [VARIABLES]  boolean  RECOMPUTE_TABLES_AT_RUNTIME  bita  bitb  bitsum  cotanFlag  leftPlane  negate  negative  subnormal  double[]  CBRTTWO  COSINE_TABLE_A  COSINE_TABLE_B  EIGHTHS  EXP_FRAC_TABLE_A  EXP_FRAC_TABLE_B  EXP_INT_TABLE_A  EXP_INT_TABLE_B  SINE_TABLE_A  SINE_TABLE_B  TANGENT_TABLE_A  TANGENT_TABLE_B  hiPrec  hiPrecOut  lnCoef_i  lnCoef_last  lnm  lns  reduceResults  result  long[]  PI_O_4_BITS  RECIP_2PI  double  E  F_11_12  F_13_14  F_15_16  F_1_11  F_1_13  F_1_15  F_1_17  F_1_2  F_1_3  F_1_4  F_1_5  F_1_7  F_1_9  F_3_4  F_5_6  F_7_8  F_9_10  LN_2_A  LN_2_B  PI  TWO_POWER_52  a  a2  aa  ab  absAsinh  absAtanh  b  base  baseA  baseB  c  cD2pH  cRH  cTmpH  cd  cosEpsA  cosEpsB  cosa  cosaa  cosab  cosb  costA  costB  d  d1High  d1Low  d2p  d2pHH  d2pHL  d2pHigh  d2pLow  da  daa  dab  db  denom  denomb  denomr  direction  dx  epsA  epsA2  epsB  epsilon  err  est  esta  estb  extra  facta  factb  finalRemA  finalRemB  fracPartA  fracPartB  fx1  intPartA  intPartB  invx  invy  lna  lnb  lnza  lnzb  lores  mant  na  nb  numer  oneOverXa  p  p2  pi2a  pi2b  pia  pib  r  rHH  rHL  ra  ratio  ratioa  ratiob  rb  recip  recipa  recipb  remA  remB  result  resultHigh  resultLow  resultb  rln10a  rln10b  sinEpsA  sinEpsB  sina  sinb  sintA  sintB  sumA  sumB  t  temp  temp2  tempA  tempB  tempC  tmp  tmp1  tmp2  tmpA  tmpB  tmpHigh  tmpLow  x  x2  xa  xb  xbadj  xpa  xpb  xs  y  ya  yaa  yab  yb  z  za  zaa  zab  zb  double[][]  LN_HI_PREC_COEF  LN_MANT  LN_QUICK_COEF  int  EXP_FRAC_TABLE_LEN  EXP_INT_TABLE_LEN  EXP_INT_TABLE_MAX_INDEX  LN_MANT_LEN  SINE_TABLE_LEN  a  b  bits  e  exp  exp3  exponent  finalK  i  idx  intFrac  intPart  intVal  k  mantissa  mostSignificantLostBit  n  quadrant  scaledExponent  shift  sign  splitFactor  x  long  HEX_40000000  MASK_30BITS  a  ac  ad  b  bc  bd  bits  c  d  inbits  mantissa  mostSignificantLostBit  prod2A  prod2B  prodA  prodB  shpi0  shpiA  shpiB  sign  x  xl  y  yi  z  	projects/Math16/src/main/java/org/apache/commons/math3/util/FastMath.java	0.7071067811865475	3522	3522	2	replace	if(a  <  b)  {  bits  =  Double.doubleToRawLongBits(a);  if(bits  ==  0x8000000000000000L)  {  return  b;  }	  if(a    <    b)    {    long    bits    =    Double.doubleToRawLongBits(a);    if(bits    ==    0x8000000000000000L)    {    return    b;    }    	non-compiled	[CE]  <identifier>  expected	22	None	replace
54	[BUG]  [BUGGY]  if(a  <  =  LN_2_A)  {  long  bits  =  Double.doubleToRawLongBits(a);  if(bits  ==  0x8000000000000000L)  {  return  b;  }  [CE]  <identifier>  expected  [FE]              AssertionError      [CONTEXT]      }  if  (a  <  b)  {  return  b;  }  if  (a  !=  b)  {  return  Double.NaN;  }        [BUGGY]  if(a  <  =  LN_2_A)  {  long  bits  =  Double.doubleToRawLongBits(a);  if(bits  ==  0x8000000000000000L)  {  return  b;  }  [BUGGY]      long  bits  =  Double.doubleToRawLongBits(a);  if  (bits  ==  0x8000000000000000L)  {  return  b;  }  return  a;  }  [CLASS]  FastMath  ExpIntTable  ExpFracTable  lnMant  CodyWaite  [METHOD]  max  [RETURN_TYPE]  double  final  double  a  final  double  b  [VARIABLES]  boolean  RECOMPUTE_TABLES_AT_RUNTIME  bita  bitb  bitsum  cotanFlag  leftPlane  negate  negative  subnormal  double[]  CBRTTWO  COSINE_TABLE_A  COSINE_TABLE_B  EIGHTHS  EXP_FRAC_TABLE_A  EXP_FRAC_TABLE_B  EXP_INT_TABLE_A  EXP_INT_TABLE_B  SINE_TABLE_A  SINE_TABLE_B  TANGENT_TABLE_A  TANGENT_TABLE_B  hiPrec  hiPrecOut  lnCoef_i  lnCoef_last  lnm  lns  reduceResults  result  long[]  PI_O_4_BITS  RECIP_2PI  double  E  F_11_12  F_13_14  F_15_16  F_1_11  F_1_13  F_1_15  F_1_17  F_1_2  F_1_3  F_1_4  F_1_5  F_1_7  F_1_9  F_3_4  F_5_6  F_7_8  F_9_10  LN_2_A  LN_2_B  PI  TWO_POWER_52  a  a2  aa  ab  absAsinh  absAtanh  b  base  baseA  baseB  c  cD2pH  cRH  cTmpH  cd  cosEpsA  cosEpsB  cosa  cosaa  cosab  cosb  costA  costB  d  d1High  d1Low  d2p  d2pHH  d2pHL  d2pHigh  d2pLow  da  daa  dab  db  denom  denomb  denomr  direction  dx  epsA  epsA2  epsB  epsilon  err  est  esta  estb  extra  facta  factb  finalRemA  finalRemB  fracPartA  fracPartB  fx1  intPartA  intPartB  invx  invy  lna  lnb  lnza  lnzb  lores  mant  na  nb  numer  oneOverXa  p  p2  pi2a  pi2b  pia  pib  r  rHH  rHL  ra  ratio  ratioa  ratiob  rb  recip  recipa  recipb  remA  remB  result  resultHigh  resultLow  resultb  rln10a  rln10b  sinEpsA  sinEpsB  sina  sinb  sintA  sintB  sumA  sumB  t  temp  temp2  tempA  tempB  tempC  tmp  tmp1  tmp2  tmpA  tmpB  tmpHigh  tmpLow  x  x2  xa  xb  xbadj  xpa  xpb  xs  y  ya  yaa  yab  yb  z  za  zaa  zab  zb  double[][]  LN_HI_PREC_COEF  LN_MANT  LN_QUICK_COEF  int  EXP_FRAC_TABLE_LEN  EXP_INT_TABLE_LEN  EXP_INT_TABLE_MAX_INDEX  LN_MANT_LEN  SINE_TABLE_LEN  a  b  bits  e  exp  exp3  exponent  finalK  i  idx  intFrac  intPart  intVal  k  mantissa  mostSignificantLostBit  n  quadrant  scaledExponent  shift  sign  splitFactor  x  long  HEX_40000000  MASK_30BITS  a  ac  ad  b  bc  bd  bits  c  d  inbits  mantissa  mostSignificantLostBit  prod2A  prod2B  prodA  prodB  shpi0  shpiA  shpiB  sign  x  xl  y  yi  z  	projects/Math16/src/main/java/org/apache/commons/math3/util/FastMath.java	0.7071067811865475	3522	3522	2	replace	if(a  <  =  LN_2_A)  {  long  bits  =  Double.doubleToRawLongBits(a);  if(bits  ==  0x8000000000000000L)  {  return  b;  }	  if(a    <    b)    {    long    bits    =    Double.doubleToRawLongBits(a);    if(bits    ==    0x8000000000000000L)    {    return    b;    }    	non-compiled	[CE]  <identifier>  expected	22	None	replace
55	[BUG]  [BUGGY]  float  bits  =  Double.doubleToLongBits(b);  [CE]  <identifier>  expected  [FE]              AssertionError      [CONTEXT]      }  if  (a  <  b)  {  return  b;  }  if  (a  !=  b)  {  return  Double.NaN;  }        [BUGGY]  float  bits  =  Double.doubleToLongBits(b);  [BUGGY]      if  (bits  ==  0x8000000000000000L)  {  return  b;  }  return  a;  }  [CLASS]  FastMath  ExpIntTable  ExpFracTable  lnMant  CodyWaite  [METHOD]  max  [RETURN_TYPE]  double  final  double  a  final  double  b  [VARIABLES]  boolean  RECOMPUTE_TABLES_AT_RUNTIME  bita  bitb  bitsum  cotanFlag  leftPlane  negate  negative  subnormal  double[]  CBRTTWO  COSINE_TABLE_A  COSINE_TABLE_B  EIGHTHS  EXP_FRAC_TABLE_A  EXP_FRAC_TABLE_B  EXP_INT_TABLE_A  EXP_INT_TABLE_B  SINE_TABLE_A  SINE_TABLE_B  TANGENT_TABLE_A  TANGENT_TABLE_B  hiPrec  hiPrecOut  lnCoef_i  lnCoef_last  lnm  lns  reduceResults  result  long[]  PI_O_4_BITS  RECIP_2PI  double  E  F_11_12  F_13_14  F_15_16  F_1_11  F_1_13  F_1_15  F_1_17  F_1_2  F_1_3  F_1_4  F_1_5  F_1_7  F_1_9  F_3_4  F_5_6  F_7_8  F_9_10  LN_2_A  LN_2_B  PI  TWO_POWER_52  a  a2  aa  ab  absAsinh  absAtanh  b  base  baseA  baseB  c  cD2pH  cRH  cTmpH  cd  cosEpsA  cosEpsB  cosa  cosaa  cosab  cosb  costA  costB  d  d1High  d1Low  d2p  d2pHH  d2pHL  d2pHigh  d2pLow  da  daa  dab  db  denom  denomb  denomr  direction  dx  epsA  epsA2  epsB  epsilon  err  est  esta  estb  extra  facta  factb  finalRemA  finalRemB  fracPartA  fracPartB  fx1  intPartA  intPartB  invx  invy  lna  lnb  lnza  lnzb  lores  mant  na  nb  numer  oneOverXa  p  p2  pi2a  pi2b  pia  pib  r  rHH  rHL  ra  ratio  ratioa  ratiob  rb  recip  recipa  recipb  remA  remB  result  resultHigh  resultLow  resultb  rln10a  rln10b  sinEpsA  sinEpsB  sina  sinb  sintA  sintB  sumA  sumB  t  temp  temp2  tempA  tempB  tempC  tmp  tmp1  tmp2  tmpA  tmpB  tmpHigh  tmpLow  x  x2  xa  xb  xbadj  xpa  xpb  xs  y  ya  yaa  yab  yb  z  za  zaa  zab  zb  double[][]  LN_HI_PREC_COEF  LN_MANT  LN_QUICK_COEF  int  EXP_FRAC_TABLE_LEN  EXP_INT_TABLE_LEN  EXP_INT_TABLE_MAX_INDEX  LN_MANT_LEN  SINE_TABLE_LEN  a  b  bits  e  exp  exp3  exponent  finalK  i  idx  intFrac  intPart  intVal  k  mantissa  mostSignificantLostBit  n  quadrant  scaledExponent  shift  sign  splitFactor  x  long  HEX_40000000  MASK_30BITS  a  ac  ad  b  bc  bd  bits  c  d  inbits  mantissa  mostSignificantLostBit  prod2A  prod2B  prodA  prodB  shpi0  shpiA  shpiB  sign  x  xl  y  yi  z  	projects/Math16/src/main/java/org/apache/commons/math3/util/FastMath.java	0.7071067811865475	3522	3522	2	replace	float  bits  =  Double.doubleToLongBits(b);	  int    bits    =    Double.doubleToLongBits(b);    	non-compiled	[CE]  <identifier>  expected	25	None	replace
56	[BUG]  [BUGGY]  if(bits  <  0x800000000000000L)  {  long  bits  =  Double.doubleToRawLongBits(a);  if  (bits  ==  0x800000000000000L)  {  return  b;  }  [CE]  <identifier>  expected  [FE]              AssertionError      [CONTEXT]      }  if  (a  <  b)  {  return  b;  }  if  (a  !=  b)  {  return  Double.NaN;  }        [BUGGY]  if(bits  <  0x800000000000000L)  {  long  bits  =  Double.doubleToRawLongBits(a);  if  (bits  ==  0x800000000000000L)  {  return  b;  }  [BUGGY]      long  bits  =  Double.doubleToRawLongBits(a);  if  (bits  ==  0x8000000000000000L)  {  return  b;  }  return  a;  }  [CLASS]  FastMath  ExpIntTable  ExpFracTable  lnMant  CodyWaite  [METHOD]  max  [RETURN_TYPE]  double  final  double  a  final  double  b  [VARIABLES]  boolean  RECOMPUTE_TABLES_AT_RUNTIME  bita  bitb  bitsum  cotanFlag  leftPlane  negate  negative  subnormal  double[]  CBRTTWO  COSINE_TABLE_A  COSINE_TABLE_B  EIGHTHS  EXP_FRAC_TABLE_A  EXP_FRAC_TABLE_B  EXP_INT_TABLE_A  EXP_INT_TABLE_B  SINE_TABLE_A  SINE_TABLE_B  TANGENT_TABLE_A  TANGENT_TABLE_B  hiPrec  hiPrecOut  lnCoef_i  lnCoef_last  lnm  lns  reduceResults  result  long[]  PI_O_4_BITS  RECIP_2PI  double  E  F_11_12  F_13_14  F_15_16  F_1_11  F_1_13  F_1_15  F_1_17  F_1_2  F_1_3  F_1_4  F_1_5  F_1_7  F_1_9  F_3_4  F_5_6  F_7_8  F_9_10  LN_2_A  LN_2_B  PI  TWO_POWER_52  a  a2  aa  ab  absAsinh  absAtanh  b  base  baseA  baseB  c  cD2pH  cRH  cTmpH  cd  cosEpsA  cosEpsB  cosa  cosaa  cosab  cosb  costA  costB  d  d1High  d1Low  d2p  d2pHH  d2pHL  d2pHigh  d2pLow  da  daa  dab  db  denom  denomb  denomr  direction  dx  epsA  epsA2  epsB  epsilon  err  est  esta  estb  extra  facta  factb  finalRemA  finalRemB  fracPartA  fracPartB  fx1  intPartA  intPartB  invx  invy  lna  lnb  lnza  lnzb  lores  mant  na  nb  numer  oneOverXa  p  p2  pi2a  pi2b  pia  pib  r  rHH  rHL  ra  ratio  ratioa  ratiob  rb  recip  recipa  recipb  remA  remB  result  resultHigh  resultLow  resultb  rln10a  rln10b  sinEpsA  sinEpsB  sina  sinb  sintA  sintB  sumA  sumB  t  temp  temp2  tempA  tempB  tempC  tmp  tmp1  tmp2  tmpA  tmpB  tmpHigh  tmpLow  x  x2  xa  xb  xbadj  xpa  xpb  xs  y  ya  yaa  yab  yb  z  za  zaa  zab  zb  double[][]  LN_HI_PREC_COEF  LN_MANT  LN_QUICK_COEF  int  EXP_FRAC_TABLE_LEN  EXP_INT_TABLE_LEN  EXP_INT_TABLE_MAX_INDEX  LN_MANT_LEN  SINE_TABLE_LEN  a  b  bits  e  exp  exp3  exponent  finalK  i  idx  intFrac  intPart  intVal  k  mantissa  mostSignificantLostBit  n  quadrant  scaledExponent  shift  sign  splitFactor  x  long  HEX_40000000  MASK_30BITS  a  ac  ad  b  bc  bd  bits  c  d  inbits  mantissa  mostSignificantLostBit  prod2A  prod2B  prodA  prodB  shpi0  shpiA  shpiB  sign  x  xl  y  yi  z  	projects/Math16/src/main/java/org/apache/commons/math3/util/FastMath.java	0.7071067811865475	3522	3522	2	replace	if(bits  <  0x800000000000000L)  {  long  bits  =  Double.doubleToRawLongBits(a);  if  (bits  ==  0x800000000000000L)  {  return  b;  }	  if(a    <    b)    {    long    bits    =    Double.doubleToRawLongBits(a);    if    (bits    ==    0x800000000000000L)    {    return    b;    }    	non-compiled	[CE]  <identifier>  expected	26	None	replace
57	[BUG]  [BUGGY]  if(b  ==  0x800000000000L)  {  long  bits  =  Double.doubleToRawLongBits(a);  if  (bits  ==  0x800000000000000L)  {  return  b;  }  [CE]  <identifier>  expected  [FE]              AssertionError      [CONTEXT]      }  if  (a  <  b)  {  return  b;  }  if  (a  !=  b)  {  return  Double.NaN;  }        [BUGGY]  if(b  ==  0x800000000000L)  {  long  bits  =  Double.doubleToRawLongBits(a);  if  (bits  ==  0x800000000000000L)  {  return  b;  }  [BUGGY]      long  bits  =  Double.doubleToRawLongBits(a);  if  (bits  ==  0x8000000000000000L)  {  return  b;  }  return  a;  }  [CLASS]  FastMath  ExpIntTable  ExpFracTable  lnMant  CodyWaite  [METHOD]  max  [RETURN_TYPE]  double  final  double  a  final  double  b  [VARIABLES]  boolean  RECOMPUTE_TABLES_AT_RUNTIME  bita  bitb  bitsum  cotanFlag  leftPlane  negate  negative  subnormal  double[]  CBRTTWO  COSINE_TABLE_A  COSINE_TABLE_B  EIGHTHS  EXP_FRAC_TABLE_A  EXP_FRAC_TABLE_B  EXP_INT_TABLE_A  EXP_INT_TABLE_B  SINE_TABLE_A  SINE_TABLE_B  TANGENT_TABLE_A  TANGENT_TABLE_B  hiPrec  hiPrecOut  lnCoef_i  lnCoef_last  lnm  lns  reduceResults  result  long[]  PI_O_4_BITS  RECIP_2PI  double  E  F_11_12  F_13_14  F_15_16  F_1_11  F_1_13  F_1_15  F_1_17  F_1_2  F_1_3  F_1_4  F_1_5  F_1_7  F_1_9  F_3_4  F_5_6  F_7_8  F_9_10  LN_2_A  LN_2_B  PI  TWO_POWER_52  a  a2  aa  ab  absAsinh  absAtanh  b  base  baseA  baseB  c  cD2pH  cRH  cTmpH  cd  cosEpsA  cosEpsB  cosa  cosaa  cosab  cosb  costA  costB  d  d1High  d1Low  d2p  d2pHH  d2pHL  d2pHigh  d2pLow  da  daa  dab  db  denom  denomb  denomr  direction  dx  epsA  epsA2  epsB  epsilon  err  est  esta  estb  extra  facta  factb  finalRemA  finalRemB  fracPartA  fracPartB  fx1  intPartA  intPartB  invx  invy  lna  lnb  lnza  lnzb  lores  mant  na  nb  numer  oneOverXa  p  p2  pi2a  pi2b  pia  pib  r  rHH  rHL  ra  ratio  ratioa  ratiob  rb  recip  recipa  recipb  remA  remB  result  resultHigh  resultLow  resultb  rln10a  rln10b  sinEpsA  sinEpsB  sina  sinb  sintA  sintB  sumA  sumB  t  temp  temp2  tempA  tempB  tempC  tmp  tmp1  tmp2  tmpA  tmpB  tmpHigh  tmpLow  x  x2  xa  xb  xbadj  xpa  xpb  xs  y  ya  yaa  yab  yb  z  za  zaa  zab  zb  double[][]  LN_HI_PREC_COEF  LN_MANT  LN_QUICK_COEF  int  EXP_FRAC_TABLE_LEN  EXP_INT_TABLE_LEN  EXP_INT_TABLE_MAX_INDEX  LN_MANT_LEN  SINE_TABLE_LEN  a  b  bits  e  exp  exp3  exponent  finalK  i  idx  intFrac  intPart  intVal  k  mantissa  mostSignificantLostBit  n  quadrant  scaledExponent  shift  sign  splitFactor  x  long  HEX_40000000  MASK_30BITS  a  ac  ad  b  bc  bd  bits  c  d  inbits  mantissa  mostSignificantLostBit  prod2A  prod2B  prodA  prodB  shpi0  shpiA  shpiB  sign  x  xl  y  yi  z  	projects/Math16/src/main/java/org/apache/commons/math3/util/FastMath.java	0.7071067811865475	3522	3522	2	replace	if(b  ==  0x800000000000L)  {  long  bits  =  Double.doubleToRawLongBits(a);  if  (bits  ==  0x800000000000000L)  {  return  b;  }	  if(a    <    0x800000000000L)    {    long    bits    =    Double.doubleToRawLongBits(a);    if    (bits    ==    0x800000000000000L)    {    return    b;    }    	non-compiled	[CE]  <identifier>  expected	1	None	replace
