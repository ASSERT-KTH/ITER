bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  AssertionError.this.add(null);  [CE]  <identifier>  expected  [FE]            AssertionError      [CONTEXT]        [BUGGY]  AssertionError.this.add(null);  [BUGGY]      private  static  final  double  EIGHTHS[]  =  {0,  0.125,  0.25,  0.375,  0.5,  0.625,  0.75,  0.875,  1.0,  1.125,  1.25,  1.375,  1.5,  1.625};  [CLASS]  FastMath  ExpIntTable  ExpFracTable  lnMant  CodyWaite  [VARIABLES]  	projects/Math16/src/main/java/org/apache/commons/math3/util/FastMath.java	0.20851441405707477	284	284	2	replace	AssertionError.this.add(null);	  AssertionError.this.add(lnMant);    	non-compiled	[CE]  <identifier>  expected	18	None	replace
2	[BUG]  [BUGGY]  AssertionError.this.add(new  FastMath(lnMant));  [CE]  <identifier>  expected  [FE]              AssertionError      [CONTEXT]        [BUGGY]  AssertionError.this.add(new  FastMath(lnMant));  [BUGGY]      private  static  final  double  EIGHTHS[]  =  {0,  0.125,  0.25,  0.375,  0.5,  0.625,  0.75,  0.875,  1.0,  1.125,  1.25,  1.375,  1.5,  1.625};  [CLASS]  FastMath  ExpIntTable  ExpFracTable  lnMant  CodyWaite  [VARIABLES]  	projects/Math16/src/main/java/org/apache/commons/math3/util/FastMath.java	0.20851441405707477	284	284	2	replace	AssertionError.this.add(new  FastMath(lnMant));	  AssertionError.this.add(lnMant);    	non-compiled	[CE]  <identifier>  expected	18	None	replace
3	[BUG]  [BUGGY]  private  static  final  double  EIGHTHS[]  =  {  0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0  [CE]  <identifier>  expected  [FE]              AssertionError      [CONTEXT]        [BUGGY]  private  static  final  double  EIGHTHS[]  =  {  0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0  [BUGGY]        [CLASS]  FastMath  ExpIntTable  ExpFracTable  lnMant  CodyWaite  [VARIABLES]  	projects/Math16/src/main/java/org/apache/commons/math3/util/FastMath.java	0.20851441405707477	284	284	2	replace	private  static  final  double  EIGHTHS[]  =  {  0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0	  private    static    final    double    EIGHTHS[]    =    {    0,    1.0,    1.0,    1.0,    1.0,    1.0,    1.0,    1.0,    1.0,    1.0,    1.0,    1.0,    1.0,    1.0,    1.0,    1.0,    1.0,    1.0,    1.0,    1.5,    2.0,    1.625    }    ;    	non-compiled	[CE]  <identifier>  expected	51	None	replace
4	[BUG]  [BUGGY]  private  static  final  double  EIGHTHS[]  =  {  0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0  [CE]  <identifier>  expected  [FE]                AssertionError      [CONTEXT]        [BUGGY]  private  static  final  double  EIGHTHS[]  =  {  0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0  [BUGGY]        [CLASS]  FastMath  ExpIntTable  ExpFracTable  lnMant  CodyWaite  [VARIABLES]  	projects/Math16/src/main/java/org/apache/commons/math3/util/FastMath.java	0.20851441405707477	284	284	2	replace	private  static  final  double  EIGHTHS[]  =  {  0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0	  private    static    final    double    EIGHTHS[]    =    {    0,    1.0,    1.0,    1.0,    1.0,    1.0,    1.0,    1.0,    1.0,    1.0,    1.0,    1.0,    1.0,    1.0,    1.0,    1.0,    1.0,    1.0,    1.0,    1.5,    2.0,    1.625    }    ;    	non-compiled	[CE]  <identifier>  expected	51	None	replace
5	[BUG]  [BUGGY]  aught(ExpIntTable.EXPR_RESULT_TYPE,  0)  {  return  EIGHTHS[];  }  [CE]  <identifier>  expected  [FE]              AssertionError      [CONTEXT]        [BUGGY]  aught(ExpIntTable.EXPR_RESULT_TYPE,  0)  {  return  EIGHTHS[];  }  [BUGGY]      private  static  final  double  EIGHTHS[]  =  {0,  0.125,  0.25,  0.375,  0.5,  0.625,  0.75,  0.875,  1.0,  1.125,  1.25,  1.375,  1.5,  1.625};  [CLASS]  FastMath  ExpIntTable  ExpFracTable  lnMant  CodyWaite  [VARIABLES]  	projects/Math16/src/main/java/org/apache/commons/math3/util/FastMath.java	0.20851441405707477	284	284	2	replace	aught(ExpIntTable.EXPR_RESULT_TYPE,  0)  {  return  EIGHTHS[];  }	  aught(ExpIntTable.EXPR_RESULT_TYPE,    lnMant)    {    return    EIGHTHS[];    }    	non-compiled	[CE]  <identifier>  expected	28	None	replace
6	[BUG]  [BUGGY]  AssertionError.show(lnMant,  1);  [CE]  <identifier>  expected  [FE]            AssertionError      [CONTEXT]        [BUGGY]  AssertionError.show(lnMant,  1);  [BUGGY]      private  static  final  double  EIGHTHS[]  =  {0,  0.125,  0.25,  0.375,  0.5,  0.625,  0.75,  0.875,  1.0,  1.125,  1.25,  1.375,  1.5,  1.625};  [CLASS]  FastMath  ExpIntTable  ExpFracTable  lnMant  CodyWaite  [VARIABLES]  	projects/Math16/src/main/java/org/apache/commons/math3/util/FastMath.java	0.20851441405707477	284	284	2	replace	AssertionError.show(lnMant,  1);	  AssertionError.show(lnMant,    0);    	non-compiled	[CE]  <identifier>  expected	47	None	replace
7	[BUG]  [BUGGY]  AssertionError.show(this,  0);  [CE]  <identifier>  expected  [FE]              AssertionError      [CONTEXT]        [BUGGY]  AssertionError.show(this,  0);  [BUGGY]      private  static  final  double  EIGHTHS[]  =  {0,  0.125,  0.25,  0.375,  0.5,  0.625,  0.75,  0.875,  1.0,  1.125,  1.25,  1.375,  1.5,  1.625};  [CLASS]  FastMath  ExpIntTable  ExpFracTable  lnMant  CodyWaite  [VARIABLES]  	projects/Math16/src/main/java/org/apache/commons/math3/util/FastMath.java	0.20851441405707477	284	284	2	replace	AssertionError.show(this,  0);	  AssertionError.show(lnMant,    0);    	non-compiled	[CE]  <identifier>  expected	47	None	replace
8	[BUG]  [BUGGY]  aughtExceptionHandler.throwAssertionError( "msg.unknown.identity.eight ",  null,  null);  [CE]  <identifier>  expected  [FE]                AssertionError      [CONTEXT]        [BUGGY]  aughtExceptionHandler.throwAssertionError( "msg.unknown.identity.eight ",  null,  null);  [BUGGY]      private  static  final  double  EIGHTHS[]  =  {0,  0.125,  0.25,  0.375,  0.5,  0.625,  0.75,  0.875,  1.0,  1.125,  1.25,  1.375,  1.5,  1.625};  [CLASS]  FastMath  ExpIntTable  ExpFracTable  lnMant  CodyWaite  [VARIABLES]  	projects/Math16/src/main/java/org/apache/commons/math3/util/FastMath.java	0.20851441405707477	284	284	2	replace	aughtExceptionHandler.throwAssertionError( "msg.unknown.identity.eight ",  null,  null);	  aughtExceptionHandler.throwAssertionError(   "msg.unknown.identity.eight   ",    null);    	non-compiled	[CE]  <identifier>  expected	15	None	replace
9	[BUG]  [BUGGY]  Annotations.this.addChangeListener(this);  [CE]  <identifier>  expected  [FE]              AssertionError      [CONTEXT]        [BUGGY]  Annotations.this.addChangeListener(this);  [BUGGY]      private  static  final  double  EIGHTHS[]  =  {0,  0.125,  0.25,  0.375,  0.5,  0.625,  0.75,  0.875,  1.0,  1.125,  1.25,  1.375,  1.5,  1.625};  [CLASS]  FastMath  ExpIntTable  ExpFracTable  lnMant  CodyWaite  [VARIABLES]  	projects/Math16/src/main/java/org/apache/commons/math3/util/FastMath.java	0.20851441405707477	284	284	2	replace	Annotations.this.addChangeListener(this);	  Annotations.this.removeChangeListener(this);    	non-compiled	[CE]  <identifier>  expected	44	None	replace
10	[BUG]  [BUGGY]  aught(ExpIntTable.EXPR_RESULT_TYPE,  lnMant)  {  return  EIGHTHS[1];  }  [CE]  <identifier>  expected  [FE]                AssertionError      [CONTEXT]        [BUGGY]  aught(ExpIntTable.EXPR_RESULT_TYPE,  lnMant)  {  return  EIGHTHS[1];  }  [BUGGY]      private  static  final  double  EIGHTHS[]  =  {0,  0.125,  0.25,  0.375,  0.5,  0.625,  0.75,  0.875,  1.0,  1.125,  1.25,  1.375,  1.5,  1.625};  [CLASS]  FastMath  ExpIntTable  ExpFracTable  lnMant  CodyWaite  [VARIABLES]  	projects/Math16/src/main/java/org/apache/commons/math3/util/FastMath.java	0.20851441405707477	284	284	2	replace	aught(ExpIntTable.EXPR_RESULT_TYPE,  lnMant)  {  return  EIGHTHS[1];  }	  aught(ExpIntTable.EXPR_RESULT_TYPE,    lnMant)    {    return    EIGHTHS[0];    }    	non-compiled	[CE]  <identifier>  expected	34	None	replace
11	[BUG]  [BUGGY]  private  static  final  double  EIGHTHS[]  =  {  0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0  [CE]  <identifier>  expected  [FE]            AssertionError      [CONTEXT]        [BUGGY]  private  static  final  double  EIGHTHS[]  =  {  0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0  [BUGGY]        [CLASS]  FastMath  ExpIntTable  ExpFracTable  lnMant  CodyWaite  [VARIABLES]  	projects/Math16/src/main/java/org/apache/commons/math3/util/FastMath.java	0.20851441405707477	284	284	2	replace	private  static  final  double  EIGHTHS[]  =  {  0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0	  private    static    final    double    EIGHTHS[]    =    {    0,    1.0,    1.0,    1.0,    1.0,    1.0,    1.0,    1.0,    1.0,    1.0,    1.0,    1.0,    1.0,    1.0,    1.0,    1.0,    1.0,    1.0,    1.0,    1.0,    1.0,    1.0,    1.5,    1.625    }    ;    	non-compiled	[CE]  <identifier>  expected	37	None	replace
12	[BUG]  [BUGGY]  aughtExceptionHandler.throwAssertionError( "msg.unknown.identity.eight ",  lnMant,  1.0);  [CE]  <identifier>  expected  [FE]              AssertionError      [CONTEXT]        [BUGGY]  aughtExceptionHandler.throwAssertionError( "msg.unknown.identity.eight ",  lnMant,  1.0);  [BUGGY]      private  static  final  double  EIGHTHS[]  =  {0,  0.125,  0.25,  0.375,  0.5,  0.625,  0.75,  0.875,  1.0,  1.125,  1.25,  1.375,  1.5,  1.625};  [CLASS]  FastMath  ExpIntTable  ExpFracTable  lnMant  CodyWaite  [VARIABLES]  	projects/Math16/src/main/java/org/apache/commons/math3/util/FastMath.java	0.20851441405707477	284	284	2	replace	aughtExceptionHandler.throwAssertionError( "msg.unknown.identity.eight ",  lnMant,  1.0);	  aughtExceptionHandler.throwAssertionError(   "msg.unknown.identity.eight   ",    lnMant);    	non-compiled	[CE]  <identifier>  expected	14	None	replace
13	[BUG]  [BUGGY]  AssertionError.this.add(lnMant,  1);  [CE]  <identifier>  expected  [FE]              AssertionError      [CONTEXT]        [BUGGY]  AssertionError.this.add(lnMant,  1);  [BUGGY]      private  static  final  double  EIGHTHS[]  =  {0,  0.125,  0.25,  0.375,  0.5,  0.625,  0.75,  0.875,  1.0,  1.125,  1.25,  1.375,  1.5,  1.625};  [CLASS]  FastMath  ExpIntTable  ExpFracTable  lnMant  CodyWaite  [VARIABLES]  	projects/Math16/src/main/java/org/apache/commons/math3/util/FastMath.java	0.20851441405707477	284	284	2	replace	AssertionError.this.add(lnMant,  1);	  AssertionError.this.add(lnMant,    0);    	non-compiled	[CE]  <identifier>  expected	19	None	replace
14	[BUG]  [BUGGY]  AssertionError.this.add(0,  lnMant);  [CE]  <identifier>  expected  [FE]                AssertionError      [CONTEXT]        [BUGGY]  AssertionError.this.add(0,  lnMant);  [BUGGY]      private  static  final  double  EIGHTHS[]  =  {0,  0.125,  0.25,  0.375,  0.5,  0.625,  0.75,  0.875,  1.0,  1.125,  1.25,  1.375,  1.5,  1.625};  [CLASS]  FastMath  ExpIntTable  ExpFracTable  lnMant  CodyWaite  [VARIABLES]  	projects/Math16/src/main/java/org/apache/commons/math3/util/FastMath.java	0.20851441405707477	284	284	2	replace	AssertionError.this.add(0,  lnMant);	  AssertionError.this.add(lnMant,    0);    	non-compiled	[CE]  <identifier>  expected	19	None	replace
15	[BUG]  [BUGGY]  ||  ExpIntTable.class.isAssignableFrom( "EIGHT "))  {  return  EIGHTHS[];  [CE]  <identifier>  expected  [FE]              AssertionError      [CONTEXT]        [BUGGY]  ||  ExpIntTable.class.isAssignableFrom( "EIGHT "))  {  return  EIGHTHS[];  [BUGGY]      private  static  final  double  EIGHTHS[]  =  {0,  0.125,  0.25,  0.375,  0.5,  0.625,  0.75,  0.875,  1.0,  1.125,  1.25,  1.375,  1.5,  1.625};  [CLASS]  FastMath  ExpIntTable  ExpFracTable  lnMant  CodyWaite  [VARIABLES]  	projects/Math16/src/main/java/org/apache/commons/math3/util/FastMath.java	0.20851441405707477	284	284	2	replace	||  ExpIntTable.class.isAssignableFrom( "EIGHT "))  {  return  EIGHTHS[];	  ||    ExpIntTable.class.isAssignableFrom(   "EIGHTHS   "))    {    return    EIGHTHS[];    }    else    {    for(int    i    =    0;    i    <    EIGHTHS.length;    ++i)    {    return    EIGHTHS[    	non-compiled	[CE]  <identifier>  expected	26	None	replace
16	[BUG]  [BUGGY]  ||  ExpIntTable.class.isAssignableFrom( "EIGHTHS "))  {  return  EIGHTHS[];  [CE]  <identifier>  expected  [FE]                AssertionError      [CONTEXT]        [BUGGY]  ||  ExpIntTable.class.isAssignableFrom( "EIGHTHS "))  {  return  EIGHTHS[];  [BUGGY]      private  static  final  double  EIGHTHS[]  =  {0,  0.125,  0.25,  0.375,  0.5,  0.625,  0.75,  0.875,  1.0,  1.125,  1.25,  1.375,  1.5,  1.625};  [CLASS]  FastMath  ExpIntTable  ExpFracTable  lnMant  CodyWaite  [VARIABLES]  	projects/Math16/src/main/java/org/apache/commons/math3/util/FastMath.java	0.20851441405707477	284	284	2	replace	||  ExpIntTable.class.isAssignableFrom( "EIGHTHS "))  {  return  EIGHTHS[];	  ||    ExpIntTable.class.isAssignableFrom(   "EIGHTHS   "))    {    return    EIGHTHS[];    }    else    {    for(int    i    =    0;    i    <    EIGHTHS.length;    ++i)    {    return    EIGHTHS[    	non-compiled	[CE]  <identifier>  expected	26	None	replace
17	[BUG]  [BUGGY]  private  static  final  double  EIGHTHS[]  =  {  0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.625,  1.625  }  ;  [CE]  <identifier>  expected  [FE]              AssertionError      [CONTEXT]        [BUGGY]  private  static  final  double  EIGHTHS[]  =  {  0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.625,  1.625  }  ;  [BUGGY]        [CLASS]  FastMath  ExpIntTable  ExpFracTable  lnMant  CodyWaite  [VARIABLES]  	projects/Math16/src/main/java/org/apache/commons/math3/util/FastMath.java	0.20851441405707477	284	284	2	replace	private  static  final  double  EIGHTHS[]  =  {  0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.625,  1.625  }  ;	  private    static    final    double    EIGHTHS[]    =    {    0,    1.0,    1.0,    1.0,    1.0,    1.0,    1.0,    1.0,    1.0,    1.0,    1.0,    1.0,    1.0,    1.0,    1.625,    1.625    }    ;    	non-compiled	[CE]  <identifier>  expected	16	None	replace
18	[BUG]  [BUGGY]  private  static  final  double  EIGHTHS[]  =  {  0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.625,  1.625  }  ;  [CE]  <identifier>  expected  [FE]                AssertionError      [CONTEXT]        [BUGGY]  private  static  final  double  EIGHTHS[]  =  {  0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.625,  1.625  }  ;  [BUGGY]        [CLASS]  FastMath  ExpIntTable  ExpFracTable  lnMant  CodyWaite  [VARIABLES]  	projects/Math16/src/main/java/org/apache/commons/math3/util/FastMath.java	0.20851441405707477	284	284	2	replace	private  static  final  double  EIGHTHS[]  =  {  0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.625,  1.625  }  ;	  private    static    final    double    EIGHTHS[]    =    {    0,    1.0,    1.0,    1.0,    1.0,    1.0,    1.0,    1.0,    1.0,    1.0,    1.0,    1.0,    1.0,    1.0,    1.625,    1.625    }    ;    	non-compiled	[CE]  <identifier>  expected	16	None	replace
19	[BUG]  [BUGGY]  aughtExceptionHandler.throwInternal();  [CE]  <identifier>  expected  [FE]              AssertionError      [CONTEXT]        [BUGGY]  aughtExceptionHandler.throwInternal();  [BUGGY]      private  static  final  double  EIGHTHS[]  =  {0,  0.125,  0.25,  0.375,  0.5,  0.625,  0.75,  0.875,  1.0,  1.125,  1.25,  1.375,  1.5,  1.625};  [CLASS]  FastMath  ExpIntTable  ExpFracTable  lnMant  CodyWaite  [VARIABLES]  	projects/Math16/src/main/java/org/apache/commons/math3/util/FastMath.java	0.20851441405707477	284	284	2	replace	aughtExceptionHandler.throwInternal();	  if(lnMant    ==    null)    {    return    EIGHTHS[1];    }    	non-compiled	[CE]  <identifier>  expected	46	None	replace
20	[BUG]  [BUGGY]  aughtExceptionHandler.throwAssertionError( "msg.unknown.identity.eights.length ");  [CE]  <identifier>  expected  [FE]                AssertionError      [CONTEXT]        [BUGGY]  aughtExceptionHandler.throwAssertionError( "msg.unknown.identity.eights.length ");  [BUGGY]      private  static  final  double  EIGHTHS[]  =  {0,  0.125,  0.25,  0.375,  0.5,  0.625,  0.75,  0.875,  1.0,  1.125,  1.25,  1.375,  1.5,  1.625};  [CLASS]  FastMath  ExpIntTable  ExpFracTable  lnMant  CodyWaite  [VARIABLES]  	projects/Math16/src/main/java/org/apache/commons/math3/util/FastMath.java	0.20851441405707477	284	284	2	replace	aughtExceptionHandler.throwAssertionError( "msg.unknown.identity.eights.length ");	  if(lnMant    ==    null)    {    return    EIGHTHS[1];    }    	non-compiled	[CE]  <identifier>  expected	46	None	replace
21	[BUG]  [BUGGY]  private  static  final  double  EIGHTHS[]  =  {  0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0  [CE]  <identifier>  expected  [FE]            AssertionError      [CONTEXT]        [BUGGY]  private  static  final  double  EIGHTHS[]  =  {  0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0  [BUGGY]        [CLASS]  FastMath  ExpIntTable  ExpFracTable  lnMant  CodyWaite  [VARIABLES]  	projects/Math16/src/main/java/org/apache/commons/math3/util/FastMath.java	0.20851441405707477	284	284	2	replace	private  static  final  double  EIGHTHS[]  =  {  0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0	  private    static    final    double    EIGHTHS[]    =    {    0,    1.0,    1.0,    1.0,    1.0,    1.0,    1.0,    1.0,    1.0,    1.0,    1.0,    1.0,    1.0,    1.0,    1.0,    1.0,    1.0,    1.5,    1.625,    2.0    }    ;    	non-compiled	[CE]  <identifier>  expected	21	None	replace
22	[BUG]  [BUGGY]  aught(ExpIntTable.EXPR_RESULT_NAME,  lnMant)  {  return  EIGHTHS[1];  }  [CE]  <identifier>  expected  [FE]              AssertionError      [CONTEXT]        [BUGGY]  aught(ExpIntTable.EXPR_RESULT_NAME,  lnMant)  {  return  EIGHTHS[1];  }  [BUGGY]      private  static  final  double  EIGHTHS[]  =  {0,  0.125,  0.25,  0.375,  0.5,  0.625,  0.75,  0.875,  1.0,  1.125,  1.25,  1.375,  1.5,  1.625};  [CLASS]  FastMath  ExpIntTable  ExpFracTable  lnMant  CodyWaite  [VARIABLES]  	projects/Math16/src/main/java/org/apache/commons/math3/util/FastMath.java	0.20851441405707477	284	284	2	replace	aught(ExpIntTable.EXPR_RESULT_NAME,  lnMant)  {  return  EIGHTHS[1];  }	  aught(ExpIntTable.EXPR_RESULT_NAME,    lnMant)    {    return    EIGHTHS[0];    }    	non-compiled	[CE]  <identifier>  expected	33	None	replace
23	[BUG]  [BUGGY]  final  int  nan  [CE]  <identifier>  expected  [FE]                AssertionError      [CONTEXT]        [BUGGY]  final  int  nan  [BUGGY]      private  static  final  double  EIGHTHS[]  =  {0,  0.125,  0.25,  0.375,  0.5,  0.625,  0.75,  0.875,  1.0,  1.125,  1.25,  1.375,  1.5,  1.625};  [CLASS]  FastMath  ExpIntTable  ExpFracTable  lnMant  CodyWaite  [VARIABLES]  	projects/Math16/src/main/java/org/apache/commons/math3/util/FastMath.java	0.20851441405707477	284	284	2	replace	final  int  nan	  final    nan    	non-compiled	[CE]  <identifier>  expected	31	None	replace
24	[BUG]  [BUGGY]  final  int[]  EIGHTHS  =  new  int[size()  ];  [CE]  <identifier>  expected  [FE]                  AssertionError      [CONTEXT]        [BUGGY]  final  int[]  EIGHTHS  =  new  int[size()  ];  [BUGGY]      private  static  final  double  EIGHTHS[]  =  {0,  0.125,  0.25,  0.375,  0.5,  0.625,  0.75,  0.875,  1.0,  1.125,  1.25,  1.375,  1.5,  1.625};  [CLASS]  FastMath  ExpIntTable  ExpFracTable  lnMant  CodyWaite  [VARIABLES]  	projects/Math16/src/main/java/org/apache/commons/math3/util/FastMath.java	0.20851441405707477	284	284	2	replace	final  int[]  EIGHTHS  =  new  int[size()  ];	  final    nan    	non-compiled	[CE]  <identifier>  expected	31	None	replace
25	[BUG]  [BUGGY]  private  static  final  double  EIGHTHS[]  =  {  0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0  [CE]  <identifier>  expected  [FE]              AssertionError      [CONTEXT]        [BUGGY]  private  static  final  double  EIGHTHS[]  =  {  0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0  [BUGGY]        [CLASS]  FastMath  ExpIntTable  ExpFracTable  lnMant  CodyWaite  [VARIABLES]  	projects/Math16/src/main/java/org/apache/commons/math3/util/FastMath.java	0.20851441405707477	284	284	2	replace	private  static  final  double  EIGHTHS[]  =  {  0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0	  private    static    final    double    EIGHTHS[]    =    {    0,    1.0,    1.0,    1.0,    1.0,    1.0,    1.0,    1.0,    1.0,    1.0,    1.0,    1.0,    1.0,    1.0,    1.0,    1.0,    1.0,    1.0,    1.0,    1.625    }    ;    	non-compiled	[CE]  <identifier>  expected	2	None	replace
26	[BUG]  [BUGGY]  private  static  final  double  EIGHTHS[]  =  {  0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.625,  1.625  }  ;  [CE]  <identifier>  expected  [FE]              AssertionError      [CONTEXT]        [BUGGY]  private  static  final  double  EIGHTHS[]  =  {  0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.625,  1.625  }  ;  [BUGGY]        [CLASS]  FastMath  ExpIntTable  ExpFracTable  lnMant  CodyWaite  [VARIABLES]  	projects/Math16/src/main/java/org/apache/commons/math3/util/FastMath.java	0.20851441405707477	284	284	2	replace	private  static  final  double  EIGHTHS[]  =  {  0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.625,  1.625  }  ;	  private    static    final    double    EIGHTHS[]    =    {    0,    1.0,    1.0,    1.0,    1.0,    1.0,    1.0,    1.0,    1.0,    1.0,    1.0,    1.0,    1.0,    1.625,    1.625    }    ;    	non-compiled	[CE]  <identifier>  expected	39	None	replace
27	[BUG]  [BUGGY]  ||(lnMant!=  null  &&  lnMant.size()  >  0))  {  return  EIGHTHS[];  }  [CE]  <identifier>  expected  [FE]            AssertionError      [CONTEXT]        [BUGGY]  ||(lnMant!=  null  &&  lnMant.size()  >  0))  {  return  EIGHTHS[];  }  [BUGGY]      private  static  final  double  EIGHTHS[]  =  {0,  0.125,  0.25,  0.375,  0.5,  0.625,  0.75,  0.875,  1.0,  1.125,  1.25,  1.375,  1.5,  1.625};  [CLASS]  FastMath  ExpIntTable  ExpFracTable  lnMant  CodyWaite  [VARIABLES]  	projects/Math16/src/main/java/org/apache/commons/math3/util/FastMath.java	0.20851441405707477	284	284	2	replace	||(lnMant!=  null  &&  lnMant.size()  >  0))  {  return  EIGHTHS[];  }	  ||(lnMant    ==    null    &&    lnMant.size()    >    0))    {    return    EIGHTHS[];    }    	non-compiled	[CE]  <identifier>  expected	5	None	replace
28	[BUG]  [BUGGY]  AnnotationTraversal.traverse(compiler,  this,  null);  [CE]  <identifier>  expected  [FE]                AssertionError      [CONTEXT]        [BUGGY]  AnnotationTraversal.traverse(compiler,  this,  null);  [BUGGY]      private  static  final  double  EIGHTHS[]  =  {0,  0.125,  0.25,  0.375,  0.5,  0.625,  0.75,  0.875,  1.0,  1.125,  1.25,  1.375,  1.5,  1.625};  [CLASS]  FastMath  ExpIntTable  ExpFracTable  lnMant  CodyWaite  [VARIABLES]  	projects/Math16/src/main/java/org/apache/commons/math3/util/FastMath.java	0.20851441405707477	284	284	2	replace	AnnotationTraversal.traverse(compiler,  this,  null);	  AnnotationTraversal.traverse(compiler,    this);    	non-compiled	[CE]  <identifier>  expected	45	None	replace
29	[BUG]  [BUGGY]  AnnotationTraversal.traverse(compiler,  this,  lnMant);  [CE]  <identifier>  expected  [FE]                  AssertionError      [CONTEXT]        [BUGGY]  AnnotationTraversal.traverse(compiler,  this,  lnMant);  [BUGGY]      private  static  final  double  EIGHTHS[]  =  {0,  0.125,  0.25,  0.375,  0.5,  0.625,  0.75,  0.875,  1.0,  1.125,  1.25,  1.375,  1.5,  1.625};  [CLASS]  FastMath  ExpIntTable  ExpFracTable  lnMant  CodyWaite  [VARIABLES]  	projects/Math16/src/main/java/org/apache/commons/math3/util/FastMath.java	0.20851441405707477	284	284	2	replace	AnnotationTraversal.traverse(compiler,  this,  lnMant);	  AnnotationTraversal.traverse(compiler,    this);    	non-compiled	[CE]  <identifier>  expected	45	None	replace
30	[BUG]  [BUGGY]  AssertionError.warning( "ExpIntTable  not  implemented  by  default ");  [CE]  <identifier>  expected  [FE]              AssertionError      [CONTEXT]        [BUGGY]  AssertionError.warning( "ExpIntTable  not  implemented  by  default ");  [BUGGY]      private  static  final  double  EIGHTHS[]  =  {0,  0.125,  0.25,  0.375,  0.5,  0.625,  0.75,  0.875,  1.0,  1.125,  1.25,  1.375,  1.5,  1.625};  [CLASS]  FastMath  ExpIntTable  ExpFracTable  lnMant  CodyWaite  [VARIABLES]  	projects/Math16/src/main/java/org/apache/commons/math3/util/FastMath.java	0.20851441405707477	284	284	2	replace	AssertionError.warning( "ExpIntTable  not  implemented  by  default ");	  AssertionError.warning(   "ExpFracTable    not    implemented    by    default   ");    	non-compiled	[CE]  <identifier>  expected	48	None	replace
31	[BUG]  [BUGGY]  AssertionError.class.isAssignableFrom( "ExpIntTable "))  {  return  EIGHTHS[];  [CE]  <identifier>  expected  [FE]              AssertionError      [CONTEXT]        [BUGGY]  AssertionError.class.isAssignableFrom( "ExpIntTable "))  {  return  EIGHTHS[];  [BUGGY]      private  static  final  double  EIGHTHS[]  =  {0,  0.125,  0.25,  0.375,  0.5,  0.625,  0.75,  0.875,  1.0,  1.125,  1.25,  1.375,  1.5,  1.625};  [CLASS]  FastMath  ExpIntTable  ExpFracTable  lnMant  CodyWaite  [VARIABLES]  	projects/Math16/src/main/java/org/apache/commons/math3/util/FastMath.java	0.20851441405707477	284	284	2	replace	AssertionError.class.isAssignableFrom( "ExpIntTable "))  {  return  EIGHTHS[];	  AssertionError.class.isAssignableFrom(   "ExpIntTable   "))    {    return    EIGHTHS[];    }    else    {    for(int    i    =    0;    i    <    EIGHTHS.length;    ++i)    {    return    EIGHTHS[    	non-compiled	[CE]  <identifier>  expected	4	None	replace
32	[BUG]  [BUGGY]  safeGet(lnMant)  {  for(int  i  =  0;  i  <  ExpIntTable.this.size();  i++)  {  ExpFracTable.this.remove(i);  }  [CE]  <identifier>  expected  [FE]                AssertionError      [CONTEXT]        [BUGGY]  safeGet(lnMant)  {  for(int  i  =  0;  i  <  ExpIntTable.this.size();  i++)  {  ExpFracTable.this.remove(i);  }  [BUGGY]      private  static  final  double  EIGHTHS[]  =  {0,  0.125,  0.25,  0.375,  0.5,  0.625,  0.75,  0.875,  1.0,  1.125,  1.25,  1.375,  1.5,  1.625};  [CLASS]  FastMath  ExpIntTable  ExpFracTable  lnMant  CodyWaite  [VARIABLES]  	projects/Math16/src/main/java/org/apache/commons/math3/util/FastMath.java	0.20851441405707477	284	284	2	replace	safeGet(lnMant)  {  for(int  i  =  0;  i  <  ExpIntTable.this.size();  i++)  {  ExpFracTable.this.remove(i);  }	  safeGet(lnMant)    {    for(int    i    =    0;    i    <    ExpFracTable.this.size();    i++)    {    ExpFracTable.this.remove(i);    }    	non-compiled	[CE]  <identifier>  expected	24	None	replace
33	[BUG]  [BUGGY]  AssertionProvider.this.removeChangeListener(this);  [CE]  <identifier>  expected  [FE]                AssertionError      [CONTEXT]        [BUGGY]  AssertionProvider.this.removeChangeListener(this);  [BUGGY]      private  static  final  double  EIGHTHS[]  =  {0,  0.125,  0.25,  0.375,  0.5,  0.625,  0.75,  0.875,  1.0,  1.125,  1.25,  1.375,  1.5,  1.625};  [CLASS]  FastMath  ExpIntTable  ExpFracTable  lnMant  CodyWaite  [VARIABLES]  	projects/Math16/src/main/java/org/apache/commons/math3/util/FastMath.java	0.20851441405707477	284	284	2	replace	AssertionProvider.this.removeChangeListener(this);	  AnnotationProvider.this.removeChangeListener(this);    	non-compiled	[CE]  <identifier>  expected	10	None	replace
34	[BUG]  [BUGGY]  private  static  final  double  EIGHTHS[]  =  {  0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  [CE]  <identifier>  expected  [FE]              AssertionError      [CONTEXT]        [BUGGY]  private  static  final  double  EIGHTHS[]  =  {  0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  [BUGGY]        [CLASS]  FastMath  ExpIntTable  ExpFracTable  lnMant  CodyWaite  [VARIABLES]  	projects/Math16/src/main/java/org/apache/commons/math3/util/FastMath.java	0.20851441405707477	284	284	2	replace	private  static  final  double  EIGHTHS[]  =  {  0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,	  private    static    final    double    EIGHTHS[]    =    {    0,    1.0,    1.0,    1.0,    1.0,    1.0,    1.0,    1.0,    1.0,    1.0,    1.0,    1.0,    1.0,    1.0,    1.0,    1.0,    1.0,    1.0,    1.5,    1.5,    1.5,    1.625    }    ;    	non-compiled	[CE]  <identifier>  expected	11	None	replace
35	[BUG]  [BUGGY]  AssertionError.class.isAssignableFrom( "ExpIntTable.class "))  {  return  EIGHTHS[];  [CE]  <identifier>  expected  [FE]            AssertionError      [CONTEXT]        [BUGGY]  AssertionError.class.isAssignableFrom( "ExpIntTable.class "))  {  return  EIGHTHS[];  [BUGGY]      private  static  final  double  EIGHTHS[]  =  {0,  0.125,  0.25,  0.375,  0.5,  0.625,  0.75,  0.875,  1.0,  1.125,  1.25,  1.375,  1.5,  1.625};  [CLASS]  FastMath  ExpIntTable  ExpFracTable  lnMant  CodyWaite  [VARIABLES]  	projects/Math16/src/main/java/org/apache/commons/math3/util/FastMath.java	0.20851441405707477	284	284	2	replace	AssertionError.class.isAssignableFrom( "ExpIntTable.class "))  {  return  EIGHTHS[];	  AssertionError.class.isAssignableFrom(   "ExpIntTable.class   "))    {    return    EIGHTHS[];    }    else    {    for(int    i    =    0;    i    <    EIGHTHS.length;    ++i)    {    return    EIGHTHS[    	non-compiled	[CE]  <identifier>  expected	3	None	replace
36	[BUG]  [BUGGY]  private  static  final  double  EIGHTHS[]  =  {  0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.625  }  ;  [CE]  <identifier>  expected  [FE]            AssertionError      [CONTEXT]        [BUGGY]  private  static  final  double  EIGHTHS[]  =  {  0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.625  }  ;  [BUGGY]        [CLASS]  FastMath  ExpIntTable  ExpFracTable  lnMant  CodyWaite  [VARIABLES]  	projects/Math16/src/main/java/org/apache/commons/math3/util/FastMath.java	0.20851441405707477	284	284	2	replace	private  static  final  double  EIGHTHS[]  =  {  0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.625  }  ;	  private    static    final    double    EIGHTHS[]    =    {    0,    1.0,    1.0,    1.0,    1.0,    1.0,    1.0,    1.0,    1.0,    1.0,    1.0,    1.0,    1.0,    1.0,    1.0,    1.0,    1.0,    1.625    }    ;    	non-compiled	[CE]  <identifier>  expected	30	None	replace
37	[BUG]  [BUGGY]  private  static  final  double  EIGHTHS[]  =  {  0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.625  }  ;  [CE]  <identifier>  expected  [FE]              AssertionError      [CONTEXT]        [BUGGY]  private  static  final  double  EIGHTHS[]  =  {  0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.625  }  ;  [BUGGY]        [CLASS]  FastMath  ExpIntTable  ExpFracTable  lnMant  CodyWaite  [VARIABLES]  	projects/Math16/src/main/java/org/apache/commons/math3/util/FastMath.java	0.20851441405707477	284	284	2	replace	private  static  final  double  EIGHTHS[]  =  {  0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.625  }  ;	  private    static    final    double    EIGHTHS[]    =    {    0,    1.0,    1.0,    1.0,    1.0,    1.0,    1.0,    1.0,    1.0,    1.0,    1.0,    1.0,    1.0,    1.0,    1.0,    1.0,    1.0,    1.625    }    ;    	non-compiled	[CE]  <identifier>  expected	30	None	replace
38	[BUG]  [BUGGY]  Annotations.checkState(this.lnMant  ==  null);  [CE]  <identifier>  expected  [FE]                AssertionError      [CONTEXT]        [BUGGY]  Annotations.checkState(this.lnMant  ==  null);  [BUGGY]      private  static  final  double  EIGHTHS[]  =  {0,  0.125,  0.25,  0.375,  0.5,  0.625,  0.75,  0.875,  1.0,  1.125,  1.25,  1.375,  1.5,  1.625};  [CLASS]  FastMath  ExpIntTable  ExpFracTable  lnMant  CodyWaite  [VARIABLES]  	projects/Math16/src/main/java/org/apache/commons/math3/util/FastMath.java	0.20851441405707477	284	284	2	replace	Annotations.checkState(this.lnMant  ==  null);	  Annotations.checkState(lnMant    ==    null);    	non-compiled	[CE]  <identifier>  expected	40	None	replace
39	[BUG]  [BUGGY]  private  static  final  double  EIGHTHS[]  =  {  0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.625,  1.625  }  ;  [CE]  <identifier>  expected  [FE]                AssertionError      [CONTEXT]        [BUGGY]  private  static  final  double  EIGHTHS[]  =  {  0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.625,  1.625  }  ;  [BUGGY]        [CLASS]  FastMath  ExpIntTable  ExpFracTable  lnMant  CodyWaite  [VARIABLES]  	projects/Math16/src/main/java/org/apache/commons/math3/util/FastMath.java	0.20851441405707477	284	284	2	replace	private  static  final  double  EIGHTHS[]  =  {  0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.625,  1.625  }  ;	  private    static    final    double    EIGHTHS[]    =    {    0,    1.0,    1.0,    1.0,    1.0,    1.0,    1.0,    1.0,    1.0,    1.0,    1.0,    1.0,    1.0,    1.0,    1.0,    1.625,    1.625    }    ;    	non-compiled	[CE]  <identifier>  expected	17	None	replace
40	[BUG]  [BUGGY]  private  static  final  double  EIGHTHS[]  =  {  0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.625,  1.625  }  ;  [CE]  <identifier>  expected  [FE]                  AssertionError      [CONTEXT]        [BUGGY]  private  static  final  double  EIGHTHS[]  =  {  0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.625,  1.625  }  ;  [BUGGY]        [CLASS]  FastMath  ExpIntTable  ExpFracTable  lnMant  CodyWaite  [VARIABLES]  	projects/Math16/src/main/java/org/apache/commons/math3/util/FastMath.java	0.20851441405707477	284	284	2	replace	private  static  final  double  EIGHTHS[]  =  {  0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.625,  1.625  }  ;	  private    static    final    double    EIGHTHS[]    =    {    0,    1.0,    1.0,    1.0,    1.0,    1.0,    1.0,    1.0,    1.0,    1.0,    1.0,    1.0,    1.0,    1.0,    1.0,    1.625,    1.625    }    ;    	non-compiled	[CE]  <identifier>  expected	17	None	replace
41	[BUG]  [BUGGY]  private  static  final  double  EIGHTHS[]  =  {  0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.625,  1.625  }  ;  [CE]  <identifier>  expected  [FE]            AssertionError      [CONTEXT]        [BUGGY]  private  static  final  double  EIGHTHS[]  =  {  0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.625,  1.625  }  ;  [BUGGY]        [CLASS]  FastMath  ExpIntTable  ExpFracTable  lnMant  CodyWaite  [VARIABLES]  	projects/Math16/src/main/java/org/apache/commons/math3/util/FastMath.java	0.20851441405707477	284	284	2	replace	private  static  final  double  EIGHTHS[]  =  {  0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.625,  1.625  }  ;	  private    static    final    double    EIGHTHS[]    =    {    0,    1.0,    1.0,    1.0,    1.0,    1.0,    1.0,    1.0,    1.0,    1.0,    1.0,    1.0,    1.0,    1.0,    1.0,    1.0,    1.625,    1.625    }    ;    	non-compiled	[CE]  <identifier>  expected	20	None	replace
42	[BUG]  [BUGGY]  private  static  final  double  EIGHTHS[]  =  {  0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  [CE]  <identifier>  expected  [FE]                AssertionError      [CONTEXT]        [BUGGY]  private  static  final  double  EIGHTHS[]  =  {  0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  [BUGGY]        [CLASS]  FastMath  ExpIntTable  ExpFracTable  lnMant  CodyWaite  [VARIABLES]  	projects/Math16/src/main/java/org/apache/commons/math3/util/FastMath.java	0.20851441405707477	284	284	2	replace	private  static  final  double  EIGHTHS[]  =  {  0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,	  private    static    final    double    EIGHTHS[]    =    {    0,    1.0,    1.0,    1.0,    1.0,    1.0,    1.0,    1.0,    1.0,    1.0,    1.0,    1.0,    1.0,    1.0,    1.0,    1.0,    1.0,    1.0,    1.0,    1.5,    1.5,    1.5,    1.625    }    ;    	non-compiled	[CE]  <identifier>  expected	12	None	replace
43	[BUG]  [BUGGY]  ||(lnMant!=  null  &&  lnMant.length()  >  0))  {  return  EIGHTHS[];  }  [CE]  <identifier>  expected  [FE]              AssertionError      [CONTEXT]        [BUGGY]  ||(lnMant!=  null  &&  lnMant.length()  >  0))  {  return  EIGHTHS[];  }  [BUGGY]      private  static  final  double  EIGHTHS[]  =  {0,  0.125,  0.25,  0.375,  0.5,  0.625,  0.75,  0.875,  1.0,  1.125,  1.25,  1.375,  1.5,  1.625};  [CLASS]  FastMath  ExpIntTable  ExpFracTable  lnMant  CodyWaite  [VARIABLES]  	projects/Math16/src/main/java/org/apache/commons/math3/util/FastMath.java	0.20851441405707477	284	284	2	replace	||(lnMant!=  null  &&  lnMant.length()  >  0))  {  return  EIGHTHS[];  }	  ||(lnMant    ==    null    &&    lnMant.length()    >    0))    {    return    EIGHTHS[];    }    	non-compiled	[CE]  <identifier>  expected	6	None	replace
44	[BUG]  [BUGGY]  ExpFracTable.this.remove(i  +  1);  [CE]  <identifier>  expected  [FE]                  AssertionError      [CONTEXT]        [BUGGY]  ExpFracTable.this.remove(i  +  1);  [BUGGY]      private  static  final  double  EIGHTHS[]  =  {0,  0.125,  0.25,  0.375,  0.5,  0.625,  0.75,  0.875,  1.0,  1.125,  1.25,  1.375,  1.5,  1.625};  [CLASS]  FastMath  ExpIntTable  ExpFracTable  lnMant  CodyWaite  [VARIABLES]  	projects/Math16/src/main/java/org/apache/commons/math3/util/FastMath.java	0.20851441405707477	284	284	2	replace	ExpFracTable.this.remove(i  +  1);	  ExpFracTable.this.remove(i);    	non-compiled	[CE]  <identifier>  expected	8	None	replace
45	[BUG]  [BUGGY]  safeGet(lnMant)  {  for(int  i  =  0;  i  <  ExpIntTable.size();  i++)  {  ExpFracTable.this.remove(i);  }  [CE]  <identifier>  expected  [FE]                  AssertionError      [CONTEXT]        [BUGGY]  safeGet(lnMant)  {  for(int  i  =  0;  i  <  ExpIntTable.size();  i++)  {  ExpFracTable.this.remove(i);  }  [BUGGY]      private  static  final  double  EIGHTHS[]  =  {0,  0.125,  0.25,  0.375,  0.5,  0.625,  0.75,  0.875,  1.0,  1.125,  1.25,  1.375,  1.5,  1.625};  [CLASS]  FastMath  ExpIntTable  ExpFracTable  lnMant  CodyWaite  [VARIABLES]  	projects/Math16/src/main/java/org/apache/commons/math3/util/FastMath.java	0.20851441405707477	284	284	2	replace	safeGet(lnMant)  {  for(int  i  =  0;  i  <  ExpIntTable.size();  i++)  {  ExpFracTable.this.remove(i);  }	  safeGet(lnMant)    {    for(int    i    =    0;    i    <    ExpFracTable.size();    i++)    {    ExpFracTable.this.remove(i);    }    	non-compiled	[CE]  <identifier>  expected	25	None	replace
46	[BUG]  [BUGGY]  private  static  final  double  EIGHTHS[]  =  {  0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0  [CE]  <identifier>  expected  [FE]            AssertionError      [CONTEXT]        [BUGGY]  private  static  final  double  EIGHTHS[]  =  {  0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0  [BUGGY]        [CLASS]  FastMath  ExpIntTable  ExpFracTable  lnMant  CodyWaite  [VARIABLES]  	projects/Math16/src/main/java/org/apache/commons/math3/util/FastMath.java	0.20851441405707477	284	284	2	replace	private  static  final  double  EIGHTHS[]  =  {  0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0	  private    static    final    double    EIGHTHS[]    =    {    0,    1.0,    1.0,    1.0,    1.0,    1.0,    1.0,    1.0,    1.0,    1.0,    1.0,    1.0,    1.0,    1.0,    1.0,    1.0,    1.0,    1.0,    1.625    }    ;    	non-compiled	[CE]  <identifier>  expected	1	None	replace
47	[BUG]  [BUGGY]  safeGet(lnMant.size());  [CE]  <identifier>  expected  [FE]            AssertionError      [CONTEXT]        [BUGGY]  safeGet(lnMant.size());  [BUGGY]      private  static  final  double  EIGHTHS[]  =  {0,  0.125,  0.25,  0.375,  0.5,  0.625,  0.75,  0.875,  1.0,  1.125,  1.25,  1.375,  1.5,  1.625};  [CLASS]  FastMath  ExpIntTable  ExpFracTable  lnMant  CodyWaite  [VARIABLES]  	projects/Math16/src/main/java/org/apache/commons/math3/util/FastMath.java	0.20851441405707477	284	284	2	replace	safeGet(lnMant.size());	  safeGet(lnMant.size()    -    1);    	non-compiled	[CE]  <identifier>  expected	29	None	replace
48	[BUG]  [BUGGY]  ExpFracTable.this.add(lnMant);  [CE]  <identifier>  expected  [FE]                AssertionError      [CONTEXT]        [BUGGY]  ExpFracTable.this.add(lnMant);  [BUGGY]      private  static  final  double  EIGHTHS[]  =  {0,  0.125,  0.25,  0.375,  0.5,  0.625,  0.75,  0.875,  1.0,  1.125,  1.25,  1.375,  1.5,  1.625};  [CLASS]  FastMath  ExpIntTable  ExpFracTable  lnMant  CodyWaite  [VARIABLES]  	projects/Math16/src/main/java/org/apache/commons/math3/util/FastMath.java	0.20851441405707477	284	284	2	replace	ExpFracTable.this.add(lnMant);	  ExpFracTable.this.remove(lnMant);    	non-compiled	[CE]  <identifier>  expected	7	None	replace
49	[BUG]  [BUGGY]  Annotations.this.add(ExpIntTable.class);  [CE]  <identifier>  expected  [FE]                  AssertionError      [CONTEXT]        [BUGGY]  Annotations.this.add(ExpIntTable.class);  [BUGGY]      private  static  final  double  EIGHTHS[]  =  {0,  0.125,  0.25,  0.375,  0.5,  0.625,  0.75,  0.875,  1.0,  1.125,  1.25,  1.375,  1.5,  1.625};  [CLASS]  FastMath  ExpIntTable  ExpFracTable  lnMant  CodyWaite  [VARIABLES]  	projects/Math16/src/main/java/org/apache/commons/math3/util/FastMath.java	0.20851441405707477	284	284	2	replace	Annotations.this.add(ExpIntTable.class);	  Annotations.this.remove(lnMant);    	non-compiled	[CE]  <identifier>  expected	41	None	replace
50	[BUG]  [BUGGY]  Annotations.this.remove(lnMant.getExpFracTable());  [CE]  <identifier>  expected  [FE]                    AssertionError      [CONTEXT]        [BUGGY]  Annotations.this.remove(lnMant.getExpFracTable());  [BUGGY]      private  static  final  double  EIGHTHS[]  =  {0,  0.125,  0.25,  0.375,  0.5,  0.625,  0.75,  0.875,  1.0,  1.125,  1.25,  1.375,  1.5,  1.625};  [CLASS]  FastMath  ExpIntTable  ExpFracTable  lnMant  CodyWaite  [VARIABLES]  	projects/Math16/src/main/java/org/apache/commons/math3/util/FastMath.java	0.20851441405707477	284	284	2	replace	Annotations.this.remove(lnMant.getExpFracTable());	  Annotations.this.remove(lnMant);    	non-compiled	[CE]  <identifier>  expected	41	None	replace
51	[BUG]  [BUGGY]  safeThan  <  =  1;  [CE]  <identifier>  expected  [FE]              AssertionError      [CONTEXT]        [BUGGY]  safeThan  <  =  1;  [BUGGY]      private  static  final  double  EIGHTHS[]  =  {0,  0.125,  0.25,  0.375,  0.5,  0.625,  0.75,  0.875,  1.0,  1.125,  1.25,  1.375,  1.5,  1.625};  [CLASS]  FastMath  ExpIntTable  ExpFracTable  lnMant  CodyWaite  [VARIABLES]  	projects/Math16/src/main/java/org/apache/commons/math3/util/FastMath.java	0.20851441405707477	284	284	2	replace	safeThan  <  =  1;	  safeThan    <    =    0;    	non-compiled	[CE]  <identifier>  expected	32	None	replace
52	[BUG]  [BUGGY]  aughtExceptionHandler.throwAssertionError( "msg.unknown.identity.eight ",  lnMant,  0);  [CE]  <identifier>  expected  [FE]              AssertionError      [CONTEXT]        [BUGGY]  aughtExceptionHandler.throwAssertionError( "msg.unknown.identity.eight ",  lnMant,  0);  [BUGGY]      private  static  final  double  EIGHTHS[]  =  {0,  0.125,  0.25,  0.375,  0.5,  0.625,  0.75,  0.875,  1.0,  1.125,  1.25,  1.375,  1.5,  1.625};  [CLASS]  FastMath  ExpIntTable  ExpFracTable  lnMant  CodyWaite  [VARIABLES]  	projects/Math16/src/main/java/org/apache/commons/math3/util/FastMath.java	0.20851441405707477	284	284	2	replace	aughtExceptionHandler.throwAssertionError( "msg.unknown.identity.eight ",  lnMant,  0);	  aughtExceptionHandler.throwAssertionError(   "msg.unknown.identity.eight   ",    lnMant);    	non-compiled	[CE]  <identifier>  expected	14	None	replace
53	[BUG]  [BUGGY]  ||  ExpIntTable.class.isAssignableFrom( "EIGHT "))  {  return  EIGHTHS[];  }  else  {  for(int  i  =  0;  i  <  EIGHTHS.length;  ++i)  {  return  EIGHTHS[  [CE]  <identifier>  expected  [FE]              AssertionError      [CONTEXT]        [BUGGY]  ||  ExpIntTable.class.isAssignableFrom( "EIGHT "))  {  return  EIGHTHS[];  }  else  {  for(int  i  =  0;  i  <  EIGHTHS.length;  ++i)  {  return  EIGHTHS[  [BUGGY]      private  static  final  double  EIGHTHS[]  =  {0,  0.125,  0.25,  0.375,  0.5,  0.625,  0.75,  0.875,  1.0,  1.125,  1.25,  1.375,  1.5,  1.625};  [CLASS]  FastMath  ExpIntTable  ExpFracTable  lnMant  CodyWaite  [VARIABLES]  	projects/Math16/src/main/java/org/apache/commons/math3/util/FastMath.java	0.20851441405707477	284	284	2	replace	||  ExpIntTable.class.isAssignableFrom( "EIGHT "))  {  return  EIGHTHS[];  }  else  {  for(int  i  =  0;  i  <  EIGHTHS.length;  ++i)  {  return  EIGHTHS[	  if(ExpIntTable.class.isAssignableFrom(   "EIGHT   "))    {    return    EIGHTHS[];    }    else    {    for(int    i    =    0;    i    <    EIGHTHS.length;    ++i)    {    return    EIGHTHS[i]    *    Math.    	non-compiled	[CE]  <identifier>  expected	13	None	replace
54	[BUG]  [BUGGY]  ||  ExpIntTable.class.isAssignableFrom( "EIGHT "))  {  return  EIGHTHS[];  }  else  {  for(int  i  =  0;  i  <  EIGHTHS.length;  ++i)  {  return  E  [CE]  <identifier>  expected  [FE]                AssertionError      [CONTEXT]        [BUGGY]  ||  ExpIntTable.class.isAssignableFrom( "EIGHT "))  {  return  EIGHTHS[];  }  else  {  for(int  i  =  0;  i  <  EIGHTHS.length;  ++i)  {  return  E  [BUGGY]      private  static  final  double  EIGHTHS[]  =  {0,  0.125,  0.25,  0.375,  0.5,  0.625,  0.75,  0.875,  1.0,  1.125,  1.25,  1.375,  1.5,  1.625};  [CLASS]  FastMath  ExpIntTable  ExpFracTable  lnMant  CodyWaite  [VARIABLES]  	projects/Math16/src/main/java/org/apache/commons/math3/util/FastMath.java	0.20851441405707477	284	284	2	replace	||  ExpIntTable.class.isAssignableFrom( "EIGHT "))  {  return  EIGHTHS[];  }  else  {  for(int  i  =  0;  i  <  EIGHTHS.length;  ++i)  {  return  E	  if(ExpIntTable.class.isAssignableFrom(   "EIGHT   "))    {    return    EIGHTHS[];    }    else    {    for(int    i    =    0;    i    <    EIGHTHS.length;    ++i)    {    return    EIGHTHS[i]    *    Math.    	non-compiled	[CE]  <identifier>  expected	13	None	replace
55	[BUG]  [BUGGY]  AnnotationContext.this.addChangeListener(this);  [CE]  <identifier>  expected  [FE]              AssertionError      [CONTEXT]        [BUGGY]  AnnotationContext.this.addChangeListener(this);  [BUGGY]      private  static  final  double  EIGHTHS[]  =  {0,  0.125,  0.25,  0.375,  0.5,  0.625,  0.75,  0.875,  1.0,  1.125,  1.25,  1.375,  1.5,  1.625};  [CLASS]  FastMath  ExpIntTable  ExpFracTable  lnMant  CodyWaite  [VARIABLES]  	projects/Math16/src/main/java/org/apache/commons/math3/util/FastMath.java	0.20851441405707477	284	284	2	replace	AnnotationContext.this.addChangeListener(this);	  AnnotationContext.this.removeChangeListener(this);    	non-compiled	[CE]  <identifier>  expected	9	None	replace
56	[BUG]  [BUGGY]  private  static  final  double  EIGHTHS[]  =  {  0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.625  }  ;  [CE]  <identifier>  expected  [FE]            AssertionError      [CONTEXT]        [BUGGY]  private  static  final  double  EIGHTHS[]  =  {  0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.625  }  ;  [BUGGY]        [CLASS]  FastMath  ExpIntTable  ExpFracTable  lnMant  CodyWaite  [VARIABLES]  	projects/Math16/src/main/java/org/apache/commons/math3/util/FastMath.java	0.20851441405707477	284	284	2	replace	private  static  final  double  EIGHTHS[]  =  {  0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.625  }  ;	  private    static    final    double    EIGHTHS[]    =    {    0,    1.0,    1.0,    1.0,    1.0,    1.0,    1.0,    1.0,    1.0,    1.0,    1.0,    1.0,    1.0,    1.0,    1.0,    1.0,    1.0,    1.625    }    ;    	non-compiled	[CE]  <identifier>  expected	30	None	replace
57	[BUG]  [BUGGY]  aughtExceptionHandler.class.isAssignableFrom( "ExpIntTable "))  {  return  EIGHTHS[];  }  else  {  for(int  i  =  0;  i  <  EIGHTHS.length;  ++i)  {  return  EIGHTHS[  [CE]  <identifier>  expected  [FE]                AssertionError      [CONTEXT]        [BUGGY]  aughtExceptionHandler.class.isAssignableFrom( "ExpIntTable "))  {  return  EIGHTHS[];  }  else  {  for(int  i  =  0;  i  <  EIGHTHS.length;  ++i)  {  return  EIGHTHS[  [BUGGY]      private  static  final  double  EIGHTHS[]  =  {0,  0.125,  0.25,  0.375,  0.5,  0.625,  0.75,  0.875,  1.0,  1.125,  1.25,  1.375,  1.5,  1.625};  [CLASS]  FastMath  ExpIntTable  ExpFracTable  lnMant  CodyWaite  [VARIABLES]  	projects/Math16/src/main/java/org/apache/commons/math3/util/FastMath.java	0.20851441405707477	284	284	2	replace	aughtExceptionHandler.class.isAssignableFrom( "ExpIntTable "))  {  return  EIGHTHS[];  }  else  {  for(int  i  =  0;  i  <  EIGHTHS.length;  ++i)  {  return  EIGHTHS[	  AssertionError.class.isAssignableFrom(   "ExpIntTable   "))    {    return    EIGHTHS[];    }    else    {    for(int    i    =    0;    i    <    EIGHTHS.length;    ++i)    {    return    EIGHTHS[i]    *    2;    }    	non-compiled	[CE]  <identifier>  expected	49	None	replace
58	[BUG]  [BUGGY]  aughtExceptionHandler.throwAssertionError( "msg.unknown.identity.eight ", "Unknown  value ");  [CE]  <identifier>  expected  [FE]                AssertionError      [CONTEXT]        [BUGGY]  aughtExceptionHandler.throwAssertionError( "msg.unknown.identity.eight ", "Unknown  value ");  [BUGGY]      private  static  final  double  EIGHTHS[]  =  {0,  0.125,  0.25,  0.375,  0.5,  0.625,  0.75,  0.875,  1.0,  1.125,  1.25,  1.375,  1.5,  1.625};  [CLASS]  FastMath  ExpIntTable  ExpFracTable  lnMant  CodyWaite  [VARIABLES]  	projects/Math16/src/main/java/org/apache/commons/math3/util/FastMath.java	0.20851441405707477	284	284	2	replace	aughtExceptionHandler.throwAssertionError( "msg.unknown.identity.eight ", "Unknown  value ");	  aughtExceptionHandler.throwAssertionError(   "msg.unknown.identity.eight   ",    null);    	non-compiled	[CE]  <identifier>  expected	15	None	replace
59	[BUG]  [BUGGY]  private  static  final  double  EIGHTHS[]  =  {  0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.5,  1.625,  2.0  }  ;  [CE]  <identifier>  expected  [FE]            AssertionError      [CONTEXT]        [BUGGY]  private  static  final  double  EIGHTHS[]  =  {  0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.5,  1.625,  2.0  }  ;  [BUGGY]        [CLASS]  FastMath  ExpIntTable  ExpFracTable  lnMant  CodyWaite  [VARIABLES]  	projects/Math16/src/main/java/org/apache/commons/math3/util/FastMath.java	0.20851441405707477	284	284	2	replace	private  static  final  double  EIGHTHS[]  =  {  0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.5,  1.625,  2.0  }  ;	  private    static    final    double    EIGHTHS[]    =    {    0,    1.0,    1.0,    1.0,    1.0,    1.0,    1.0,    1.0,    1.0,    1.0,    1.0,    1.0,    1.0,    1.0,    1.0,    1.0,    1.0,    1.5,    1.625,    2.0    }    ;    	non-compiled	[CE]  <identifier>  expected	21	None	replace
60	[BUG]  [BUGGY]  safeGet(lnMant)  {  for(int  i  =  0;  i  <  ExpFracTable.this.size();  i++)  {  ExpFracTable.this.remove(0);  }  [CE]  <identifier>  expected  [FE]                AssertionError      [CONTEXT]        [BUGGY]  safeGet(lnMant)  {  for(int  i  =  0;  i  <  ExpFracTable.this.size();  i++)  {  ExpFracTable.this.remove(0);  }  [BUGGY]      private  static  final  double  EIGHTHS[]  =  {0,  0.125,  0.25,  0.375,  0.5,  0.625,  0.75,  0.875,  1.0,  1.125,  1.25,  1.375,  1.5,  1.625};  [CLASS]  FastMath  ExpIntTable  ExpFracTable  lnMant  CodyWaite  [VARIABLES]  	projects/Math16/src/main/java/org/apache/commons/math3/util/FastMath.java	0.20851441405707477	284	284	2	replace	safeGet(lnMant)  {  for(int  i  =  0;  i  <  ExpFracTable.this.size();  i++)  {  ExpFracTable.this.remove(0);  }	  safeGet(lnMant)    {    for(int    i    =    0;    i    <    ExpFracTable.this.size();    i++)    {    ExpFracTable.this.remove(i);    }    	non-compiled	[CE]  <identifier>  expected	24	None	replace
61	[BUG]  [BUGGY]  AnnotationTraversal.traverse(compiler,  this,  ExpFracTable);  [CE]  <identifier>  expected  [FE]                AssertionError      [CONTEXT]        [BUGGY]  AnnotationTraversal.traverse(compiler,  this,  ExpFracTable);  [BUGGY]      private  static  final  double  EIGHTHS[]  =  {0,  0.125,  0.25,  0.375,  0.5,  0.625,  0.75,  0.875,  1.0,  1.125,  1.25,  1.375,  1.5,  1.625};  [CLASS]  FastMath  ExpIntTable  ExpFracTable  lnMant  CodyWaite  [VARIABLES]  	projects/Math16/src/main/java/org/apache/commons/math3/util/FastMath.java	0.20851441405707477	284	284	2	replace	AnnotationTraversal.traverse(compiler,  this,  ExpFracTable);	  AnnotationTraversal.traverse(compiler,    this);    	non-compiled	[CE]  <identifier>  expected	45	None	replace
62	[BUG]  [BUGGY]  AssertionError.this.add(null,  0);  [CE]  <identifier>  expected  [FE]              AssertionError      [CONTEXT]        [BUGGY]  AssertionError.this.add(null,  0);  [BUGGY]      private  static  final  double  EIGHTHS[]  =  {0,  0.125,  0.25,  0.375,  0.5,  0.625,  0.75,  0.875,  1.0,  1.125,  1.25,  1.375,  1.5,  1.625};  [CLASS]  FastMath  ExpIntTable  ExpFracTable  lnMant  CodyWaite  [VARIABLES]  	projects/Math16/src/main/java/org/apache/commons/math3/util/FastMath.java	0.20851441405707477	284	284	2	replace	AssertionError.this.add(null,  0);	  AssertionError.this.add(lnMant,    0);    	non-compiled	[CE]  <identifier>  expected	19	None	replace
63	[BUG]  [BUGGY]  AssertionError.this.add(ExpIntTable,  0);  [CE]  <identifier>  expected  [FE]                AssertionError      [CONTEXT]        [BUGGY]  AssertionError.this.add(ExpIntTable,  0);  [BUGGY]      private  static  final  double  EIGHTHS[]  =  {0,  0.125,  0.25,  0.375,  0.5,  0.625,  0.75,  0.875,  1.0,  1.125,  1.25,  1.375,  1.5,  1.625};  [CLASS]  FastMath  ExpIntTable  ExpFracTable  lnMant  CodyWaite  [VARIABLES]  	projects/Math16/src/main/java/org/apache/commons/math3/util/FastMath.java	0.20851441405707477	284	284	2	replace	AssertionError.this.add(ExpIntTable,  0);	  AssertionError.this.add(lnMant,    0);    	non-compiled	[CE]  <identifier>  expected	19	None	replace
64	[BUG]  [BUGGY]  static  final  nan  >>  <  identifier>  [CE]  <identifier>  expected  [FE]                AssertionError      [CONTEXT]        [BUGGY]  static  final  nan  >>  <  identifier>  [BUGGY]      private  static  final  double  EIGHTHS[]  =  {0,  0.125,  0.25,  0.375,  0.5,  0.625,  0.75,  0.875,  1.0,  1.125,  1.25,  1.375,  1.5,  1.625};  [CLASS]  FastMath  ExpIntTable  ExpFracTable  lnMant  CodyWaite  [VARIABLES]  	projects/Math16/src/main/java/org/apache/commons/math3/util/FastMath.java	0.20851441405707477	284	284	2	replace	static  final  nan  >>  <  identifier>	  final    nan    	non-compiled	[CE]  <identifier>  expected	31	None	replace
65	[BUG]  [BUGGY]  ExpFracTable.this.remove(null);  [CE]  <identifier>  expected  [FE]                AssertionError      [CONTEXT]        [BUGGY]  ExpFracTable.this.remove(null);  [BUGGY]      private  static  final  double  EIGHTHS[]  =  {0,  0.125,  0.25,  0.375,  0.5,  0.625,  0.75,  0.875,  1.0,  1.125,  1.25,  1.375,  1.5,  1.625};  [CLASS]  FastMath  ExpIntTable  ExpFracTable  lnMant  CodyWaite  [VARIABLES]  	projects/Math16/src/main/java/org/apache/commons/math3/util/FastMath.java	0.20851441405707477	284	284	2	replace	ExpFracTable.this.remove(null);	  ExpFracTable.this.remove(lnMant);    	non-compiled	[CE]  <identifier>  expected	7	None	replace
66	[BUG]  [BUGGY]  AnnotationProvider.this.addChangeListener(this);  [CE]  <identifier>  expected  [FE]                AssertionError      [CONTEXT]        [BUGGY]  AnnotationProvider.this.addChangeListener(this);  [BUGGY]      private  static  final  double  EIGHTHS[]  =  {0,  0.125,  0.25,  0.375,  0.5,  0.625,  0.75,  0.875,  1.0,  1.125,  1.25,  1.375,  1.5,  1.625};  [CLASS]  FastMath  ExpIntTable  ExpFracTable  lnMant  CodyWaite  [VARIABLES]  	projects/Math16/src/main/java/org/apache/commons/math3/util/FastMath.java	0.20851441405707477	284	284	2	replace	AnnotationProvider.this.addChangeListener(this);	  AnnotationProvider.this.removeChangeListener(this);    	non-compiled	[CE]  <identifier>  expected	10	None	replace
67	[BUG]  [BUGGY]  AssertionError.show(this.lnMant,  0);  [CE]  <identifier>  expected  [FE]            AssertionError      [CONTEXT]        [BUGGY]  AssertionError.show(this.lnMant,  0);  [BUGGY]      private  static  final  double  EIGHTHS[]  =  {0,  0.125,  0.25,  0.375,  0.5,  0.625,  0.75,  0.875,  1.0,  1.125,  1.25,  1.375,  1.5,  1.625};  [CLASS]  FastMath  ExpIntTable  ExpFracTable  lnMant  CodyWaite  [VARIABLES]  	projects/Math16/src/main/java/org/apache/commons/math3/util/FastMath.java	0.20851441405707477	284	284	2	replace	AssertionError.show(this.lnMant,  0);	  AssertionError.show(lnMant,    0);    	non-compiled	[CE]  <identifier>  expected	47	None	replace
68	[BUG]  [BUGGY]  Annotations.this.add(ExpIntTable.class,  lnMant);  [CE]  <identifier>  expected  [FE]                  AssertionError      [CONTEXT]        [BUGGY]  Annotations.this.add(ExpIntTable.class,  lnMant);  [BUGGY]      private  static  final  double  EIGHTHS[]  =  {0,  0.125,  0.25,  0.375,  0.5,  0.625,  0.75,  0.875,  1.0,  1.125,  1.25,  1.375,  1.5,  1.625};  [CLASS]  FastMath  ExpIntTable  ExpFracTable  lnMant  CodyWaite  [VARIABLES]  	projects/Math16/src/main/java/org/apache/commons/math3/util/FastMath.java	0.20851441405707477	284	284	2	replace	Annotations.this.add(ExpIntTable.class,  lnMant);	  Annotations.this.remove(lnMant);    	non-compiled	[CE]  <identifier>  expected	41	None	replace
69	[BUG]  [BUGGY]  safely(lnMant)  {  for(int  i  =  0;  i  <  ExpFracTable.size();  i++)  {  ExpFracTable.this.remove(i);  }  [CE]  <identifier>  expected  [FE]                  AssertionError      [CONTEXT]        [BUGGY]  safely(lnMant)  {  for(int  i  =  0;  i  <  ExpFracTable.size();  i++)  {  ExpFracTable.this.remove(i);  }  [BUGGY]      private  static  final  double  EIGHTHS[]  =  {0,  0.125,  0.25,  0.375,  0.5,  0.625,  0.75,  0.875,  1.0,  1.125,  1.25,  1.375,  1.5,  1.625};  [CLASS]  FastMath  ExpIntTable  ExpFracTable  lnMant  CodyWaite  [VARIABLES]  	projects/Math16/src/main/java/org/apache/commons/math3/util/FastMath.java	0.20851441405707477	284	284	2	replace	safely(lnMant)  {  for(int  i  =  0;  i  <  ExpFracTable.size();  i++)  {  ExpFracTable.this.remove(i);  }	  safeGet(lnMant)    {    for(int    i    =    0;    i    <    ExpFracTable.size();    i++)    {    ExpFracTable.this.remove(i);    }    	non-compiled	[CE]  <identifier>  expected	25	None	replace
70	[BUG]  [BUGGY]  AssertionError.this.add(ExpIntTable.class);  [CE]  <identifier>  expected  [FE]            AssertionError      [CONTEXT]        [BUGGY]  AssertionError.this.add(ExpIntTable.class);  [BUGGY]      private  static  final  double  EIGHTHS[]  =  {0,  0.125,  0.25,  0.375,  0.5,  0.625,  0.75,  0.875,  1.0,  1.125,  1.25,  1.375,  1.5,  1.625};  [CLASS]  FastMath  ExpIntTable  ExpFracTable  lnMant  CodyWaite  [VARIABLES]  	projects/Math16/src/main/java/org/apache/commons/math3/util/FastMath.java	0.20851441405707477	284	284	2	replace	AssertionError.this.add(ExpIntTable.class);	  AssertionError.this.add(lnMant);    	non-compiled	[CE]  <identifier>  expected	18	None	replace
71	[BUG]  [BUGGY]  ||  ExpIntTable.class.isAssignableFrom( "EIGHT "))  {  return  EIGHTHS[];  }  [CE]  <identifier>  expected  [FE]              AssertionError      [CONTEXT]        [BUGGY]  ||  ExpIntTable.class.isAssignableFrom( "EIGHT "))  {  return  EIGHTHS[];  }  [BUGGY]      private  static  final  double  EIGHTHS[]  =  {0,  0.125,  0.25,  0.375,  0.5,  0.625,  0.75,  0.875,  1.0,  1.125,  1.25,  1.375,  1.5,  1.625};  [CLASS]  FastMath  ExpIntTable  ExpFracTable  lnMant  CodyWaite  [VARIABLES]  	projects/Math16/src/main/java/org/apache/commons/math3/util/FastMath.java	0.20851441405707477	284	284	2	replace	||  ExpIntTable.class.isAssignableFrom( "EIGHT "))  {  return  EIGHTHS[];  }	  ||    ExpIntTable.class.isAssignableFrom(   "EIGHTHS   "))    {    return    EIGHTHS[];    }    else    {    for(int    i    =    0;    i    <    EIGHTHS.length;    ++i)    {    return    EIGHTHS[    	non-compiled	[CE]  <identifier>  expected	26	None	replace
72	[BUG]  [BUGGY]  AssertionError.this.add(0,  0);  [CE]  <identifier>  expected  [FE]              AssertionError      [CONTEXT]        [BUGGY]  AssertionError.this.add(0,  0);  [BUGGY]      private  static  final  double  EIGHTHS[]  =  {0,  0.125,  0.25,  0.375,  0.5,  0.625,  0.75,  0.875,  1.0,  1.125,  1.25,  1.375,  1.5,  1.625};  [CLASS]  FastMath  ExpIntTable  ExpFracTable  lnMant  CodyWaite  [VARIABLES]  	projects/Math16/src/main/java/org/apache/commons/math3/util/FastMath.java	0.20851441405707477	284	284	2	replace	AssertionError.this.add(0,  0);	  AssertionError.this.add(lnMant,    0);    	non-compiled	[CE]  <identifier>  expected	19	None	replace
73	[BUG]  [BUGGY]  AssertionError.this.add(new  FastMath(lnMant,  0));  [CE]  <identifier>  expected  [FE]                AssertionError      [CONTEXT]        [BUGGY]  AssertionError.this.add(new  FastMath(lnMant,  0));  [BUGGY]      private  static  final  double  EIGHTHS[]  =  {0,  0.125,  0.25,  0.375,  0.5,  0.625,  0.75,  0.875,  1.0,  1.125,  1.25,  1.375,  1.5,  1.625};  [CLASS]  FastMath  ExpIntTable  ExpFracTable  lnMant  CodyWaite  [VARIABLES]  	projects/Math16/src/main/java/org/apache/commons/math3/util/FastMath.java	0.20851441405707477	284	284	2	replace	AssertionError.this.add(new  FastMath(lnMant,  0));	  AssertionError.this.add(lnMant,    0);    	non-compiled	[CE]  <identifier>  expected	19	None	replace
74	[BUG]  [BUGGY]  ExpFracTable.this.remove(0);  [CE]  <identifier>  expected  [FE]                  AssertionError      [CONTEXT]        [BUGGY]  ExpFracTable.this.remove(0);  [BUGGY]      private  static  final  double  EIGHTHS[]  =  {0,  0.125,  0.25,  0.375,  0.5,  0.625,  0.75,  0.875,  1.0,  1.125,  1.25,  1.375,  1.5,  1.625};  [CLASS]  FastMath  ExpIntTable  ExpFracTable  lnMant  CodyWaite  [VARIABLES]  	projects/Math16/src/main/java/org/apache/commons/math3/util/FastMath.java	0.20851441405707477	284	284	2	replace	ExpFracTable.this.remove(0);	  ExpFracTable.this.remove(i);    	non-compiled	[CE]  <identifier>  expected	8	None	replace
75	[BUG]  [BUGGY]  private  static  final  double  EIGHTHS[]  =  {  0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.5,  1.625  }  ;  [CE]  <identifier>  expected  [FE]            AssertionError      [CONTEXT]        [BUGGY]  private  static  final  double  EIGHTHS[]  =  {  0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.5,  1.625  }  ;  [BUGGY]        [CLASS]  FastMath  ExpIntTable  ExpFracTable  lnMant  CodyWaite  [VARIABLES]  	projects/Math16/src/main/java/org/apache/commons/math3/util/FastMath.java	0.20851441405707477	284	284	2	replace	private  static  final  double  EIGHTHS[]  =  {  0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.5,  1.625  }  ;	  private    static    final    double    EIGHTHS[]    =    {    0,    1.0,    1.0,    1.0,    1.0,    1.0,    1.0,    1.0,    1.0,    1.0,    1.0,    1.0,    1.0,    1.0,    1.0,    1.0,    1.0,    1.0,    1.0,    1.0,    1.5,    1.625    }    ;    	non-compiled	[CE]  <identifier>  expected	42	None	replace
76	[BUG]  [BUGGY]  private  static  final  double  EIGHTHS[]  =  {  0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.5,  1.625  }  ;  [CE]  <identifier>  expected  [FE]              AssertionError      [CONTEXT]        [BUGGY]  private  static  final  double  EIGHTHS[]  =  {  0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.5,  1.625  }  ;  [BUGGY]        [CLASS]  FastMath  ExpIntTable  ExpFracTable  lnMant  CodyWaite  [VARIABLES]  	projects/Math16/src/main/java/org/apache/commons/math3/util/FastMath.java	0.20851441405707477	284	284	2	replace	private  static  final  double  EIGHTHS[]  =  {  0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.5,  1.625  }  ;	  private    static    final    double    EIGHTHS[]    =    {    0,    1.0,    1.0,    1.0,    1.0,    1.0,    1.0,    1.0,    1.0,    1.0,    1.0,    1.0,    1.0,    1.0,    1.0,    1.0,    1.0,    1.0,    1.0,    1.0,    1.5,    1.625    }    ;    	non-compiled	[CE]  <identifier>  expected	42	None	replace
77	[BUG]  [BUGGY]  AssertionError.class.isAssignableFrom( "ExpIntTable.class "))  {  return  EIGHTHS[];  }  else  {  for(int  i  =  0;  i  <  EIGHTHS.length;  ++i)  {  return  EIGHTHS  [CE]  <identifier>  expected  [FE]            AssertionError      [CONTEXT]        [BUGGY]  AssertionError.class.isAssignableFrom( "ExpIntTable.class "))  {  return  EIGHTHS[];  }  else  {  for(int  i  =  0;  i  <  EIGHTHS.length;  ++i)  {  return  EIGHTHS  [BUGGY]      private  static  final  double  EIGHTHS[]  =  {0,  0.125,  0.25,  0.375,  0.5,  0.625,  0.75,  0.875,  1.0,  1.125,  1.25,  1.375,  1.5,  1.625};  [CLASS]  FastMath  ExpIntTable  ExpFracTable  lnMant  CodyWaite  [VARIABLES]  	projects/Math16/src/main/java/org/apache/commons/math3/util/FastMath.java	0.20851441405707477	284	284	2	replace	AssertionError.class.isAssignableFrom( "ExpIntTable.class "))  {  return  EIGHTHS[];  }  else  {  for(int  i  =  0;  i  <  EIGHTHS.length;  ++i)  {  return  EIGHTHS	  AssertionError.class.isAssignableFrom(   "ExpIntTable.class   "))    {    return    EIGHTHS[];    }    else    {    for(int    i    =    0;    i    <    EIGHTHS.length;    ++i)    {    return    EIGHTHS[    	non-compiled	[CE]  <identifier>  expected	3	None	replace
78	[BUG]  [BUGGY]  aughtExceptionHandler.throwAssertionError( "msg.unknown.identity.size ",  null);  [CE]  <identifier>  expected  [FE]                AssertionError      [CONTEXT]        [BUGGY]  aughtExceptionHandler.throwAssertionError( "msg.unknown.identity.size ",  null);  [BUGGY]      private  static  final  double  EIGHTHS[]  =  {0,  0.125,  0.25,  0.375,  0.5,  0.625,  0.75,  0.875,  1.0,  1.125,  1.25,  1.375,  1.5,  1.625};  [CLASS]  FastMath  ExpIntTable  ExpFracTable  lnMant  CodyWaite  [VARIABLES]  	projects/Math16/src/main/java/org/apache/commons/math3/util/FastMath.java	0.20851441405707477	284	284	2	replace	aughtExceptionHandler.throwAssertionError( "msg.unknown.identity.size ",  null);	  aughtExceptionHandler.throwAssertionError(   "msg.unknown.identity.eight   ",    null);    	non-compiled	[CE]  <identifier>  expected	15	None	replace
79	[BUG]  [BUGGY]  private  static  final  double  EIGHTHS[]  =  {  0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  [CE]  <identifier>  expected  [FE]                AssertionError      [CONTEXT]        [BUGGY]  private  static  final  double  EIGHTHS[]  =  {  0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  [BUGGY]        [CLASS]  FastMath  ExpIntTable  ExpFracTable  lnMant  CodyWaite  [VARIABLES]  	projects/Math16/src/main/java/org/apache/commons/math3/util/FastMath.java	0.20851441405707477	284	284	2	replace	private  static  final  double  EIGHTHS[]  =  {  0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,	  private    static    final    double    EIGHTHS[]    =    {    0,    1.0,    1.0,    1.0,    1.0,    1.0,    1.0,    1.0,    1.0,    1.0,    1.0,    1.0,    1.0,    1.0,    1.0,    1.0,    1.0,    1.0,    1.0,    1.0,    1.0,    1.0,    1.5,    1.5,    1.625    }    ;    	non-compiled	[CE]  <identifier>  expected	36	None	replace
80	[BUG]  [BUGGY]  private  static  final  double  EIGHTHS[]  =  {  0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  [CE]  <identifier>  expected  [FE]                  AssertionError      [CONTEXT]        [BUGGY]  private  static  final  double  EIGHTHS[]  =  {  0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  [BUGGY]        [CLASS]  FastMath  ExpIntTable  ExpFracTable  lnMant  CodyWaite  [VARIABLES]  	projects/Math16/src/main/java/org/apache/commons/math3/util/FastMath.java	0.20851441405707477	284	284	2	replace	private  static  final  double  EIGHTHS[]  =  {  0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,	  private    static    final    double    EIGHTHS[]    =    {    0,    1.0,    1.0,    1.0,    1.0,    1.0,    1.0,    1.0,    1.0,    1.0,    1.0,    1.0,    1.0,    1.0,    1.0,    1.0,    1.0,    1.0,    1.0,    1.0,    1.0,    1.0,    1.5,    1.5,    1.625    }    ;    	non-compiled	[CE]  <identifier>  expected	36	None	replace
81	[BUG]  [BUGGY]  private  static  final  double  EIGHTHS[]  =  {  0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.5,  1.625,  2.0  }  ;  [CE]  <identifier>  expected  [FE]            AssertionError      [CONTEXT]        [BUGGY]  private  static  final  double  EIGHTHS[]  =  {  0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.5,  1.625,  2.0  }  ;  [BUGGY]        [CLASS]  FastMath  ExpIntTable  ExpFracTable  lnMant  CodyWaite  [VARIABLES]  	projects/Math16/src/main/java/org/apache/commons/math3/util/FastMath.java	0.20851441405707477	284	284	2	replace	private  static  final  double  EIGHTHS[]  =  {  0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.5,  1.625,  2.0  }  ;	  private    static    final    double    EIGHTHS[]    =    {    0,    1.0,    1.0,    1.0,    1.0,    1.0,    1.0,    1.0,    1.0,    1.0,    1.0,    1.0,    1.0,    1.0,    1.0,    1.0,    1.0,    1.5,    1.625,    2.0    }    ;    	non-compiled	[CE]  <identifier>  expected	21	None	replace
82	[BUG]  [BUGGY]  private  static  final  double  EIGHTHS[]  =  {  0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.625  }  ;  [CE]  <identifier>  expected  [FE]            AssertionError      [CONTEXT]        [BUGGY]  private  static  final  double  EIGHTHS[]  =  {  0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.625  }  ;  [BUGGY]        [CLASS]  FastMath  ExpIntTable  ExpFracTable  lnMant  CodyWaite  [VARIABLES]  	projects/Math16/src/main/java/org/apache/commons/math3/util/FastMath.java	0.20851441405707477	284	284	2	replace	private  static  final  double  EIGHTHS[]  =  {  0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.625  }  ;	  private    static    final    double    EIGHTHS[]    =    {    0,    1.0,    1.0,    1.0,    1.0,    1.0,    1.0,    1.0,    1.0,    1.0,    1.0,    1.0,    1.0,    1.0,    1.0,    1.0,    1.0,    1.625    }    ;    	non-compiled	[CE]  <identifier>  expected	30	None	replace
83	[BUG]  [BUGGY]  AssertionError.this.add(ExpIntTable.class,  lnMant);  [CE]  <identifier>  expected  [FE]            AssertionError      [CONTEXT]        [BUGGY]  AssertionError.this.add(ExpIntTable.class,  lnMant);  [BUGGY]      private  static  final  double  EIGHTHS[]  =  {0,  0.125,  0.25,  0.375,  0.5,  0.625,  0.75,  0.875,  1.0,  1.125,  1.25,  1.375,  1.5,  1.625};  [CLASS]  FastMath  ExpIntTable  ExpFracTable  lnMant  CodyWaite  [VARIABLES]  	projects/Math16/src/main/java/org/apache/commons/math3/util/FastMath.java	0.20851441405707477	284	284	2	replace	AssertionError.this.add(ExpIntTable.class,  lnMant);	  AssertionError.this.add(lnMant);    	non-compiled	[CE]  <identifier>  expected	18	None	replace
84	[BUG]  [BUGGY]  AssertionError.warning( "ExpFracTable  not  implemented  by  default. ");  [CE]  <identifier>  expected  [FE]              AssertionError      [CONTEXT]        [BUGGY]  AssertionError.warning( "ExpFracTable  not  implemented  by  default. ");  [BUGGY]      private  static  final  double  EIGHTHS[]  =  {0,  0.125,  0.25,  0.375,  0.5,  0.625,  0.75,  0.875,  1.0,  1.125,  1.25,  1.375,  1.5,  1.625};  [CLASS]  FastMath  ExpIntTable  ExpFracTable  lnMant  CodyWaite  [VARIABLES]  	projects/Math16/src/main/java/org/apache/commons/math3/util/FastMath.java	0.20851441405707477	284	284	2	replace	AssertionError.warning( "ExpFracTable  not  implemented  by  default. ");	  AssertionError.warning(   "ExpFracTable    not    implemented    by    default   ");    	non-compiled	[CE]  <identifier>  expected	48	None	replace
85	[BUG]  [BUGGY]  private  static  final  double  EIGHTHS[]  =  {  0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.5,  1.5,  1.5,  1.5,  1.625  }  ;  [CE]  <identifier>  expected  [FE]              AssertionError      [CONTEXT]        [BUGGY]  private  static  final  double  EIGHTHS[]  =  {  0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.5,  1.5,  1.5,  1.5,  1.625  }  ;  [BUGGY]        [CLASS]  FastMath  ExpIntTable  ExpFracTable  lnMant  CodyWaite  [VARIABLES]  	projects/Math16/src/main/java/org/apache/commons/math3/util/FastMath.java	0.20851441405707477	284	284	2	replace	private  static  final  double  EIGHTHS[]  =  {  0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.5,  1.5,  1.5,  1.5,  1.625  }  ;	  private    static    final    double    EIGHTHS[]    =    {    0,    1.0,    1.0,    1.0,    1.0,    1.0,    1.0,    1.0,    1.0,    1.0,    1.0,    1.0,    1.0,    1.0,    1.0,    1.0,    1.0,    1.0,    1.5,    1.5,    1.5,    1.625    }    ;    	non-compiled	[CE]  <identifier>  expected	11	None	replace
86	[BUG]  [BUGGY]  aughtExceptionHandler.throwAssertionError( "msg.unknown.identity.size ",  lnMant);  [CE]  <identifier>  expected  [FE]              AssertionError      [CONTEXT]        [BUGGY]  aughtExceptionHandler.throwAssertionError( "msg.unknown.identity.size ",  lnMant);  [BUGGY]      private  static  final  double  EIGHTHS[]  =  {0,  0.125,  0.25,  0.375,  0.5,  0.625,  0.75,  0.875,  1.0,  1.125,  1.25,  1.375,  1.5,  1.625};  [CLASS]  FastMath  ExpIntTable  ExpFracTable  lnMant  CodyWaite  [VARIABLES]  	projects/Math16/src/main/java/org/apache/commons/math3/util/FastMath.java	0.20851441405707477	284	284	2	replace	aughtExceptionHandler.throwAssertionError( "msg.unknown.identity.size ",  lnMant);	  aughtExceptionHandler.throwAssertionError(   "msg.unknown.identity.eight   ",    lnMant);    	non-compiled	[CE]  <identifier>  expected	14	None	replace
87	[BUG]  [BUGGY]  AssertionError.show(Locale.ENGLISH,  0);  [CE]  <identifier>  expected  [FE]            AssertionError      [CONTEXT]        [BUGGY]  AssertionError.show(Locale.ENGLISH,  0);  [BUGGY]      private  static  final  double  EIGHTHS[]  =  {0,  0.125,  0.25,  0.375,  0.5,  0.625,  0.75,  0.875,  1.0,  1.125,  1.25,  1.375,  1.5,  1.625};  [CLASS]  FastMath  ExpIntTable  ExpFracTable  lnMant  CodyWaite  [VARIABLES]  	projects/Math16/src/main/java/org/apache/commons/math3/util/FastMath.java	0.20851441405707477	284	284	2	replace	AssertionError.show(Locale.ENGLISH,  0);	  AssertionError.show(lnMant,    0);    	non-compiled	[CE]  <identifier>  expected	47	None	replace
88	[BUG]  [BUGGY]  AssertionError.class.isAssignableFrom( "ExpintTable "))  {  return  EIGHTHS[];  }  else  {  for(int  i  =  0;  i  <  EIGHTHS.length;  ++i)  {  return  EIGHTHS[  [CE]  <identifier>  expected  [FE]              AssertionError      [CONTEXT]        [BUGGY]  AssertionError.class.isAssignableFrom( "ExpintTable "))  {  return  EIGHTHS[];  }  else  {  for(int  i  =  0;  i  <  EIGHTHS.length;  ++i)  {  return  EIGHTHS[  [BUGGY]      private  static  final  double  EIGHTHS[]  =  {0,  0.125,  0.25,  0.375,  0.5,  0.625,  0.75,  0.875,  1.0,  1.125,  1.25,  1.375,  1.5,  1.625};  [CLASS]  FastMath  ExpIntTable  ExpFracTable  lnMant  CodyWaite  [VARIABLES]  	projects/Math16/src/main/java/org/apache/commons/math3/util/FastMath.java	0.20851441405707477	284	284	2	replace	AssertionError.class.isAssignableFrom( "ExpintTable "))  {  return  EIGHTHS[];  }  else  {  for(int  i  =  0;  i  <  EIGHTHS.length;  ++i)  {  return  EIGHTHS[	  AssertionError.class.isAssignableFrom(   "ExpIntTable   "))    {    return    EIGHTHS[];    }    else    {    for(int    i    =    0;    i    <    EIGHTHS.length;    ++i)    {    return    EIGHTHS[    	non-compiled	[CE]  <identifier>  expected	4	None	replace
89	[BUG]  [BUGGY]  safely(lnMant)  {  for(int  i  =  0;  i  <  ExpFracTable.this.size();  i++)  {  ExpFracTable.this.remove(i);  }  [CE]  <identifier>  expected  [FE]                AssertionError      [CONTEXT]        [BUGGY]  safely(lnMant)  {  for(int  i  =  0;  i  <  ExpFracTable.this.size();  i++)  {  ExpFracTable.this.remove(i);  }  [BUGGY]      private  static  final  double  EIGHTHS[]  =  {0,  0.125,  0.25,  0.375,  0.5,  0.625,  0.75,  0.875,  1.0,  1.125,  1.25,  1.375,  1.5,  1.625};  [CLASS]  FastMath  ExpIntTable  ExpFracTable  lnMant  CodyWaite  [VARIABLES]  	projects/Math16/src/main/java/org/apache/commons/math3/util/FastMath.java	0.20851441405707477	284	284	2	replace	safely(lnMant)  {  for(int  i  =  0;  i  <  ExpFracTable.this.size();  i++)  {  ExpFracTable.this.remove(i);  }	  safeGet(lnMant)    {    for(int    i    =    0;    i    <    ExpFracTable.this.size();    i++)    {    ExpFracTable.this.remove(i);    }    	non-compiled	[CE]  <identifier>  expected	24	None	replace
90	[BUG]  [BUGGY]  if(lnMant  ==  null  ||  lnMant.length  <  1)  {  return  EIGHTHS[1];  }  [CE]  <identifier>  expected  [FE]              AssertionError      [CONTEXT]        [BUGGY]  if(lnMant  ==  null  ||  lnMant.length  <  1)  {  return  EIGHTHS[1];  }  [BUGGY]      private  static  final  double  EIGHTHS[]  =  {0,  0.125,  0.25,  0.375,  0.5,  0.625,  0.75,  0.875,  1.0,  1.125,  1.25,  1.375,  1.5,  1.625};  [CLASS]  FastMath  ExpIntTable  ExpFracTable  lnMant  CodyWaite  [VARIABLES]  	projects/Math16/src/main/java/org/apache/commons/math3/util/FastMath.java	0.20851441405707477	284	284	2	replace	if(lnMant  ==  null  ||  lnMant.length  <  1)  {  return  EIGHTHS[1];  }	  if(lnMant    ==    null)    {    return    EIGHTHS[1];    }    	non-compiled	[CE]  <identifier>  expected	46	None	replace
