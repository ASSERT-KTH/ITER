bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  private  static  final  double  EIGHTHS[]  =  {  0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.625  }  ;  [CE]  <identifier>  expected  [FE]        AssertionError    [CONTEXT]      [BUGGY]  private  static  final  double  EIGHTHS[]  =  {  0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.625  }  ;  [BUGGY]      [CLASS]  FastMath  ExpIntTable  ExpFracTable  lnMant  CodyWaite  [VARIABLES]  	projects/Math16/src/main/java/org/apache/commons/math3/util/FastMath.java	0.20851441405707477	284	284	2	replace	private  static  final  double  EIGHTHS[]  =  {  0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.625  }  ;	  private    static    final    double    EIGHTHS[]    =    {    0,    1.0,    1.0,    1.0,    1.0,    1.0,    1.0,    1.0,    1.0,    1.0,    1.0,    1.0,    1.0,    1.625    }    ;    	non-compiled	[CE]  <identifier>  expected	14	None	replace
2	[BUG]  [BUGGY]  private  static  final  double  EIGHTHS[]  =  {  0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.625  }  ;  [CE]  <identifier>  expected  [FE]          AssertionError    [CONTEXT]      [BUGGY]  private  static  final  double  EIGHTHS[]  =  {  0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.625  }  ;  [BUGGY]      [CLASS]  FastMath  ExpIntTable  ExpFracTable  lnMant  CodyWaite  [VARIABLES]  	projects/Math16/src/main/java/org/apache/commons/math3/util/FastMath.java	0.20851441405707477	284	284	2	replace	private  static  final  double  EIGHTHS[]  =  {  0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.625  }  ;	  private    static    final    double    EIGHTHS[]    =    {    0,    1.0,    1.0,    1.0,    1.0,    1.0,    1.0,    1.0,    1.0,    1.0,    1.0,    1.0,    1.0,    1.625    }    ;    	non-compiled	[CE]  <identifier>  expected	14	None	replace
3	[BUG]  [BUGGY]  AssertionError.class.isAssignableFrom( "ExpIntTable.class "))  {  return  EIGHTHS[];  }  else  {  for(int  i  =  0;  i  <  EIGHTHS.length;  ++i)  {  return  EIGHTHS[  [CE]  <identifier>  expected  [FE]        AssertionError    [CONTEXT]      [BUGGY]  AssertionError.class.isAssignableFrom( "ExpIntTable.class "))  {  return  EIGHTHS[];  }  else  {  for(int  i  =  0;  i  <  EIGHTHS.length;  ++i)  {  return  EIGHTHS[  [BUGGY]    private  static  final  double  EIGHTHS[]  =  {0,  0.125,  0.25,  0.375,  0.5,  0.625,  0.75,  0.875,  1.0,  1.125,  1.25,  1.375,  1.5,  1.625};  [CLASS]  FastMath  ExpIntTable  ExpFracTable  lnMant  CodyWaite  [VARIABLES]  	projects/Math16/src/main/java/org/apache/commons/math3/util/FastMath.java	0.20851441405707477	284	284	2	replace	AssertionError.class.isAssignableFrom( "ExpIntTable.class "))  {  return  EIGHTHS[];  }  else  {  for(int  i  =  0;  i  <  EIGHTHS.length;  ++i)  {  return  EIGHTHS[	      if(ExpIntTable.class.isAssignableFrom(   "EIGHTHS   "))    {    return    EIGHTHS[];    }    else    {    for(int    i    =    0;    i    <    EIGHTHS.length;    ++i)    {    return    EIGHTHS[i];    }    	non-compiled	[CE]  <identifier>  expected	11	None	replace
4	[BUG]  [BUGGY]  AssertionError.class.isAssignableFrom( "ExpIntTable "))  {  return  EIGHTHS[];  }  else  {  for(int  i  =  0;  i  <  EIGHTHS.length;  ++i)  {  return  EIGHTHS[  [CE]  <identifier>  expected  [FE]          AssertionError    [CONTEXT]      [BUGGY]  AssertionError.class.isAssignableFrom( "ExpIntTable "))  {  return  EIGHTHS[];  }  else  {  for(int  i  =  0;  i  <  EIGHTHS.length;  ++i)  {  return  EIGHTHS[  [BUGGY]    private  static  final  double  EIGHTHS[]  =  {0,  0.125,  0.25,  0.375,  0.5,  0.625,  0.75,  0.875,  1.0,  1.125,  1.25,  1.375,  1.5,  1.625};  [CLASS]  FastMath  ExpIntTable  ExpFracTable  lnMant  CodyWaite  [VARIABLES]  	projects/Math16/src/main/java/org/apache/commons/math3/util/FastMath.java	0.20851441405707477	284	284	2	replace	AssertionError.class.isAssignableFrom( "ExpIntTable "))  {  return  EIGHTHS[];  }  else  {  for(int  i  =  0;  i  <  EIGHTHS.length;  ++i)  {  return  EIGHTHS[	      if(ExpIntTable.class.isAssignableFrom(   "EIGHTHS   "))    {    return    EIGHTHS[];    }    else    {    for(int    i    =    0;    i    <    EIGHTHS.length;    ++i)    {    return    EIGHTHS[i];    }    	non-compiled	[CE]  <identifier>  expected	11	None	replace
5	[BUG]  [BUGGY]  ||(lnMant  ==  null  &&  lnMant.size()  >  0))  {  return  EIGHTHS[];  }  [CE]  <identifier>  expected  [FE]        AssertionError    [CONTEXT]      [BUGGY]  ||(lnMant  ==  null  &&  lnMant.size()  >  0))  {  return  EIGHTHS[];  }  [BUGGY]    private  static  final  double  EIGHTHS[]  =  {0,  0.125,  0.25,  0.375,  0.5,  0.625,  0.75,  0.875,  1.0,  1.125,  1.25,  1.375,  1.5,  1.625};  [CLASS]  FastMath  ExpIntTable  ExpFracTable  lnMant  CodyWaite  [VARIABLES]  	projects/Math16/src/main/java/org/apache/commons/math3/util/FastMath.java	0.20851441405707477	284	284	2	replace	||(lnMant  ==  null  &&  lnMant.size()  >  0))  {  return  EIGHTHS[];  }	      if(lnMant    ==    null)    {    return    EIGHTHS[];    }    	non-compiled	[CE]  <identifier>  expected	6	None	replace
6	[BUG]  [BUGGY]  ||(lnMant  ==  null  &&  lnMant.length()  >  0))  {  return  EIGHTHS[];  }  [CE]  <identifier>  expected  [FE]          AssertionError    [CONTEXT]      [BUGGY]  ||(lnMant  ==  null  &&  lnMant.length()  >  0))  {  return  EIGHTHS[];  }  [BUGGY]    private  static  final  double  EIGHTHS[]  =  {0,  0.125,  0.25,  0.375,  0.5,  0.625,  0.75,  0.875,  1.0,  1.125,  1.25,  1.375,  1.5,  1.625};  [CLASS]  FastMath  ExpIntTable  ExpFracTable  lnMant  CodyWaite  [VARIABLES]  	projects/Math16/src/main/java/org/apache/commons/math3/util/FastMath.java	0.20851441405707477	284	284	2	replace	||(lnMant  ==  null  &&  lnMant.length()  >  0))  {  return  EIGHTHS[];  }	      if(lnMant    ==    null)    {    return    EIGHTHS[];    }    	non-compiled	[CE]  <identifier>  expected	6	None	replace
7	[BUG]  [BUGGY]  ExpFracTable.this.remove(lnMant);  [CE]  <identifier>  expected  [FE]            AssertionError    [CONTEXT]      [BUGGY]  ExpFracTable.this.remove(lnMant);  [BUGGY]    private  static  final  double  EIGHTHS[]  =  {0,  0.125,  0.25,  0.375,  0.5,  0.625,  0.75,  0.875,  1.0,  1.125,  1.25,  1.375,  1.5,  1.625};  [CLASS]  FastMath  ExpIntTable  ExpFracTable  lnMant  CodyWaite  [VARIABLES]  	projects/Math16/src/main/java/org/apache/commons/math3/util/FastMath.java	0.20851441405707477	284	284	2	replace	ExpFracTable.this.remove(lnMant);	      if(lnMant    ==    null)    {    for(int    i    =    0;    i    <    lnMant;    i++)    {    ExpFracTable.this.remove(i);    }    	non-compiled	[CE]  <identifier>  expected	3	None	replace
8	[BUG]  [BUGGY]  ExpFracTable.this.remove(i);  [CE]  <identifier>  expected  [FE]              AssertionError    [CONTEXT]      [BUGGY]  ExpFracTable.this.remove(i);  [BUGGY]    private  static  final  double  EIGHTHS[]  =  {0,  0.125,  0.25,  0.375,  0.5,  0.625,  0.75,  0.875,  1.0,  1.125,  1.25,  1.375,  1.5,  1.625};  [CLASS]  FastMath  ExpIntTable  ExpFracTable  lnMant  CodyWaite  [VARIABLES]  	projects/Math16/src/main/java/org/apache/commons/math3/util/FastMath.java	0.20851441405707477	284	284	2	replace	ExpFracTable.this.remove(i);	      if(lnMant    ==    null)    {    for(int    i    =    0;    i    <    lnMant;    i++)    {    ExpFracTable.this.remove(i);    }    	non-compiled	[CE]  <identifier>  expected	3	None	replace
9	[BUG]  [BUGGY]  AnnotationContext.this.removeChangeListener(this);  [CE]  <identifier>  expected  [FE]          AssertionError    [CONTEXT]      [BUGGY]  AnnotationContext.this.removeChangeListener(this);  [BUGGY]    private  static  final  double  EIGHTHS[]  =  {0,  0.125,  0.25,  0.375,  0.5,  0.625,  0.75,  0.875,  1.0,  1.125,  1.25,  1.375,  1.5,  1.625};  [CLASS]  FastMath  ExpIntTable  ExpFracTable  lnMant  CodyWaite  [VARIABLES]  	projects/Math16/src/main/java/org/apache/commons/math3/util/FastMath.java	0.20851441405707477	284	284	2	replace	AnnotationContext.this.removeChangeListener(this);	      if(lnMant    ==    null)    {    for(int    i    =    0;    i    <    lnMant;    i++)    {    ExpFracTable.this.removeChangeListener(this);    }    	non-compiled	[CE]  <identifier>  expected	2	None	replace
10	[BUG]  [BUGGY]  AnnotationProvider.this.removeChangeListener(this);  [CE]  <identifier>  expected  [FE]            AssertionError    [CONTEXT]      [BUGGY]  AnnotationProvider.this.removeChangeListener(this);  [BUGGY]    private  static  final  double  EIGHTHS[]  =  {0,  0.125,  0.25,  0.375,  0.5,  0.625,  0.75,  0.875,  1.0,  1.125,  1.25,  1.375,  1.5,  1.625};  [CLASS]  FastMath  ExpIntTable  ExpFracTable  lnMant  CodyWaite  [VARIABLES]  	projects/Math16/src/main/java/org/apache/commons/math3/util/FastMath.java	0.20851441405707477	284	284	2	replace	AnnotationProvider.this.removeChangeListener(this);	      if(lnMant    ==    null)    {    for(int    i    =    0;    i    <    lnMant;    i++)    {    ExpFracTable.this.removeChangeListener(this);    }    	non-compiled	[CE]  <identifier>  expected	2	None	replace
11	[BUG]  [BUGGY]  private  static  final  double  EIGHTHS[]  =  {  0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.5,  1.5,  1.5,  1.625  }  ;  [CE]  <identifier>  expected  [FE]          AssertionError    [CONTEXT]      [BUGGY]  private  static  final  double  EIGHTHS[]  =  {  0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.5,  1.5,  1.5,  1.625  }  ;  [BUGGY]      [CLASS]  FastMath  ExpIntTable  ExpFracTable  lnMant  CodyWaite  [VARIABLES]  	projects/Math16/src/main/java/org/apache/commons/math3/util/FastMath.java	0.20851441405707477	284	284	2	replace	private  static  final  double  EIGHTHS[]  =  {  0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.5,  1.5,  1.5,  1.625  }  ;	  private    static    final    double    EIGHTHS[]    =    {    0,    1.0,    1.0,    1.0,    1.0,    1.0,    1.0,    1.0,    1.0,    1.0,    1.0,    1.25,    1.5,    1.625    }    ;    	non-compiled	[CE]  <identifier>  expected	5	None	replace
12	[BUG]  [BUGGY]  private  static  final  double  EIGHTHS[]  =  {  0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.5,  1.5,  1.5,  1.625  }  ;  [CE]  <identifier>  expected  [FE]            AssertionError    [CONTEXT]      [BUGGY]  private  static  final  double  EIGHTHS[]  =  {  0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.5,  1.5,  1.5,  1.625  }  ;  [BUGGY]      [CLASS]  FastMath  ExpIntTable  ExpFracTable  lnMant  CodyWaite  [VARIABLES]  	projects/Math16/src/main/java/org/apache/commons/math3/util/FastMath.java	0.20851441405707477	284	284	2	replace	private  static  final  double  EIGHTHS[]  =  {  0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.5,  1.5,  1.5,  1.625  }  ;	  private    static    final    double    EIGHTHS[]    =    {    0,    1.0,    1.0,    1.0,    1.0,    1.0,    1.0,    1.0,    1.0,    1.0,    1.0,    1.25,    1.5,    1.625    }    ;    	non-compiled	[CE]  <identifier>  expected	5	None	replace
13	[BUG]  [BUGGY]  if(ExpIntTable.class.isAssignableFrom( "EIGHT "))  {  return  EIGHTHS[];  }  else  {  for(int  i  =  0;  i  <  EIGHTHS.length;  ++i)  {  return  EIGHTHS[i]  *  Math.  [CE]  <identifier>  expected  [FE]          AssertionError    [CONTEXT]      [BUGGY]  if(ExpIntTable.class.isAssignableFrom( "EIGHT "))  {  return  EIGHTHS[];  }  else  {  for(int  i  =  0;  i  <  EIGHTHS.length;  ++i)  {  return  EIGHTHS[i]  *  Math.  [BUGGY]    private  static  final  double  EIGHTHS[]  =  {0,  0.125,  0.25,  0.375,  0.5,  0.625,  0.75,  0.875,  1.0,  1.125,  1.25,  1.375,  1.5,  1.625};  [CLASS]  FastMath  ExpIntTable  ExpFracTable  lnMant  CodyWaite  [VARIABLES]  	projects/Math16/src/main/java/org/apache/commons/math3/util/FastMath.java	0.20851441405707477	284	284	2	replace	if(ExpIntTable.class.isAssignableFrom( "EIGHT "))  {  return  EIGHTHS[];  }  else  {  for(int  i  =  0;  i  <  EIGHTHS.length;  ++i)  {  return  EIGHTHS[i]  *  Math.	      if(ExpIntTable.class.isAssignableFrom(   "EIGHTHS   "))    {    return    EIGHTHS[];    }    else    {    for(int    i    =    0;    i    <    EIGHTHS.length;    ++i)    {    return    EIGHTHS[i]    *    Math.    	non-compiled	[CE]  <identifier>  expected	12	None	replace
14	[BUG]  [BUGGY]  aughtExceptionHandler.throwAssertionError( "msg.unknown.identity.eight ",  lnMant);  [CE]  <identifier>  expected  [FE]          AssertionError    [CONTEXT]      [BUGGY]  aughtExceptionHandler.throwAssertionError( "msg.unknown.identity.eight ",  lnMant);  [BUGGY]    private  static  final  double  EIGHTHS[]  =  {0,  0.125,  0.25,  0.375,  0.5,  0.625,  0.75,  0.875,  1.0,  1.125,  1.25,  1.375,  1.5,  1.625};  [CLASS]  FastMath  ExpIntTable  ExpFracTable  lnMant  CodyWaite  [VARIABLES]  	projects/Math16/src/main/java/org/apache/commons/math3/util/FastMath.java	0.20851441405707477	284	284	2	replace	aughtExceptionHandler.throwAssertionError( "msg.unknown.identity.eight ",  lnMant);	      if(lnMant    ==    null)    {    return    EIGHTHS[0];    }    	non-compiled	[CE]  <identifier>  expected	7	None	replace
15	[BUG]  [BUGGY]  aughtExceptionHandler.throwAssertionError( "msg.unknown.identity.eight ",  null);  [CE]  <identifier>  expected  [FE]            AssertionError    [CONTEXT]      [BUGGY]  aughtExceptionHandler.throwAssertionError( "msg.unknown.identity.eight ",  null);  [BUGGY]    private  static  final  double  EIGHTHS[]  =  {0,  0.125,  0.25,  0.375,  0.5,  0.625,  0.75,  0.875,  1.0,  1.125,  1.25,  1.375,  1.5,  1.625};  [CLASS]  FastMath  ExpIntTable  ExpFracTable  lnMant  CodyWaite  [VARIABLES]  	projects/Math16/src/main/java/org/apache/commons/math3/util/FastMath.java	0.20851441405707477	284	284	2	replace	aughtExceptionHandler.throwAssertionError( "msg.unknown.identity.eight ",  null);	      if(lnMant    ==    null)    {    return    EIGHTHS[0];    }    	non-compiled	[CE]  <identifier>  expected	7	None	replace
16	[BUG]  [BUGGY]  private  static  final  double  EIGHTHS[]  =  {  0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.625,  1.625  }  ;  [CE]  <identifier>  expected  [FE]          AssertionError    [CONTEXT]      [BUGGY]  private  static  final  double  EIGHTHS[]  =  {  0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.625,  1.625  }  ;  [BUGGY]      [CLASS]  FastMath  ExpIntTable  ExpFracTable  lnMant  CodyWaite  [VARIABLES]  	projects/Math16/src/main/java/org/apache/commons/math3/util/FastMath.java	0.20851441405707477	284	284	2	replace	private  static  final  double  EIGHTHS[]  =  {  0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.625,  1.625  }  ;	  private    static    final    double    EIGHTHS[]    =    {    0,    1.0,    1.0,    1.0,    1.0,    1.0,    1.0,    1.0,    1.0,    1.0,    1.0,    1.625,    1.625    }    ;    	non-compiled	[CE]  <identifier>  expected	10	None	replace
17	[BUG]  [BUGGY]  private  static  final  double  EIGHTHS[]  =  {  0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.625,  1.625  }  ;  [CE]  <identifier>  expected  [FE]            AssertionError    [CONTEXT]      [BUGGY]  private  static  final  double  EIGHTHS[]  =  {  0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.625,  1.625  }  ;  [BUGGY]      [CLASS]  FastMath  ExpIntTable  ExpFracTable  lnMant  CodyWaite  [VARIABLES]  	projects/Math16/src/main/java/org/apache/commons/math3/util/FastMath.java	0.20851441405707477	284	284	2	replace	private  static  final  double  EIGHTHS[]  =  {  0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.625,  1.625  }  ;	  private    static    final    double    EIGHTHS[]    =    {    0,    1.0,    1.0,    1.0,    1.0,    1.0,    1.0,    1.0,    1.0,    1.0,    1.0,    1.625,    1.625    }    ;    	non-compiled	[CE]  <identifier>  expected	10	None	replace
18	[BUG]  [BUGGY]  AssertionError.this.add(lnMant);  [CE]  <identifier>  expected  [FE]        AssertionError    [CONTEXT]      [BUGGY]  AssertionError.this.add(lnMant);  [BUGGY]    private  static  final  double  EIGHTHS[]  =  {0,  0.125,  0.25,  0.375,  0.5,  0.625,  0.75,  0.875,  1.0,  1.125,  1.25,  1.375,  1.5,  1.625};  [CLASS]  FastMath  ExpIntTable  ExpFracTable  lnMant  CodyWaite  [VARIABLES]  	projects/Math16/src/main/java/org/apache/commons/math3/util/FastMath.java	0.20851441405707477	284	284	2	replace	AssertionError.this.add(lnMant);	      if(lnMant    ==    null)    {    for(int    i    =    0;    i    <    lnMant.size();    ++i)    {    return    EIGHTHS[i];    }    	non-compiled	[CE]  <identifier>  expected	1	None	replace
19	[BUG]  [BUGGY]  AssertionError.this.add(lnMant,  0);  [CE]  <identifier>  expected  [FE]          AssertionError    [CONTEXT]      [BUGGY]  AssertionError.this.add(lnMant,  0);  [BUGGY]    private  static  final  double  EIGHTHS[]  =  {0,  0.125,  0.25,  0.375,  0.5,  0.625,  0.75,  0.875,  1.0,  1.125,  1.25,  1.375,  1.5,  1.625};  [CLASS]  FastMath  ExpIntTable  ExpFracTable  lnMant  CodyWaite  [VARIABLES]  	projects/Math16/src/main/java/org/apache/commons/math3/util/FastMath.java	0.20851441405707477	284	284	2	replace	AssertionError.this.add(lnMant,  0);	      if(lnMant    ==    null)    {    for(int    i    =    0;    i    <    lnMant.size();    ++i)    {    return    EIGHTHS[i];    }    	non-compiled	[CE]  <identifier>  expected	1	None	replace
20	[BUG]  [BUGGY]  private  static  final  double  EIGHTHS[]  =  {  0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.625,  1.625  }  ;  [CE]  <identifier>  expected  [FE]        AssertionError    [CONTEXT]      [BUGGY]  private  static  final  double  EIGHTHS[]  =  {  0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.625,  1.625  }  ;  [BUGGY]      [CLASS]  FastMath  ExpIntTable  ExpFracTable  lnMant  CodyWaite  [VARIABLES]  	projects/Math16/src/main/java/org/apache/commons/math3/util/FastMath.java	0.20851441405707477	284	284	2	replace	private  static  final  double  EIGHTHS[]  =  {  0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.625,  1.625  }  ;	  private    static    final    double    EIGHTHS[]    =    {    0,    1.0,    1.0,    1.0,    1.0,    1.0,    1.0,    1.0,    1.0,    1.0,    1.0,    1.0,    1.625,    1.625    }    ;    	non-compiled	[CE]  <identifier>  expected	9	None	replace
21	[BUG]  [BUGGY]  private  static  final  double  EIGHTHS[]  =  {  0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.5,  1.625,  2.0  }  ;  [CE]  <identifier>  expected  [FE]        AssertionError    [CONTEXT]      [BUGGY]  private  static  final  double  EIGHTHS[]  =  {  0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.5,  1.625,  2.0  }  ;  [BUGGY]      [CLASS]  FastMath  ExpIntTable  ExpFracTable  lnMant  CodyWaite  [VARIABLES]  	projects/Math16/src/main/java/org/apache/commons/math3/util/FastMath.java	0.20851441405707477	284	284	2	replace	private  static  final  double  EIGHTHS[]  =  {  0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.5,  1.625,  2.0  }  ;	  private    static    final    double    EIGHTHS[]    =    {    0,    1.0,    1.0,    1.0,    1.0,    1.0,    1.0,    1.0,    1.25,    1.375,    1.5,    1.625    }    ;    	non-compiled	[CE]  <identifier>  expected	4	None	replace
22	[BUG]  [BUGGY]  private  static  final  double  EIGHTHS[]  =  {  0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.5,  2.0,  1.625,  1.5,  1.625  }  ;  [CE]  <identifier>  expected  [FE]          AssertionError    [CONTEXT]      [BUGGY]  private  static  final  double  EIGHTHS[]  =  {  0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.5,  2.0,  1.625,  1.5,  1.625  }  ;  [BUGGY]      [CLASS]  FastMath  ExpIntTable  ExpFracTable  lnMant  CodyWaite  [VARIABLES]  	projects/Math16/src/main/java/org/apache/commons/math3/util/FastMath.java	0.20851441405707477	284	284	2	replace	private  static  final  double  EIGHTHS[]  =  {  0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.5,  2.0,  1.625,  1.5,  1.625  }  ;	  private    static    final    double    EIGHTHS[]    =    {    0,    1.0,    1.0,    1.0,    1.0,    1.0,    1.0,    1.0,    1.25,    1.375,    1.5,    1.625    }    ;    	non-compiled	[CE]  <identifier>  expected	4	None	replace
23	[BUG]  [BUGGY]  AssertionError.class.isAssignableFrom( "ExpIntTable "))  {  return  EIGHTHS[];  }  else  {  for(int  i  =  0;  i  <  EIGHTHS.length;  ++i)  {  return  EIGHTHS[i  [CE]  <identifier>  expected  [FE]            AssertionError    [CONTEXT]      [BUGGY]  AssertionError.class.isAssignableFrom( "ExpIntTable "))  {  return  EIGHTHS[];  }  else  {  for(int  i  =  0;  i  <  EIGHTHS.length;  ++i)  {  return  EIGHTHS[i  [BUGGY]    private  static  final  double  EIGHTHS[]  =  {0,  0.125,  0.25,  0.375,  0.5,  0.625,  0.75,  0.875,  1.0,  1.125,  1.25,  1.375,  1.5,  1.625};  [CLASS]  FastMath  ExpIntTable  ExpFracTable  lnMant  CodyWaite  [VARIABLES]  	projects/Math16/src/main/java/org/apache/commons/math3/util/FastMath.java	0.20851441405707477	284	284	2	replace	AssertionError.class.isAssignableFrom( "ExpIntTable "))  {  return  EIGHTHS[];  }  else  {  for(int  i  =  0;  i  <  EIGHTHS.length;  ++i)  {  return  EIGHTHS[i	      if(ExpIntTable.class.isAssignableFrom(   "EIGHTHS   "))    {    return    EIGHTHS[];    }    else    {    for(int    i    =    0;    i    <    EIGHTHS.length;    ++i)    {    return    EIGHTHS[i]    *    2;    }    	non-compiled	[CE]  <identifier>  expected	13	None	replace
24	[BUG]  [BUGGY]  safeGet(lnMant)  {  for(int  i  =  0;  i  <  ExpFracTable.this.size();  i++)  {  ExpFracTable.this.remove(i);  }  [CE]  <identifier>  expected  [FE]            AssertionError    [CONTEXT]      [BUGGY]  safeGet(lnMant)  {  for(int  i  =  0;  i  <  ExpFracTable.this.size();  i++)  {  ExpFracTable.this.remove(i);  }  [BUGGY]    private  static  final  double  EIGHTHS[]  =  {0,  0.125,  0.25,  0.375,  0.5,  0.625,  0.75,  0.875,  1.0,  1.125,  1.25,  1.375,  1.5,  1.625};  [CLASS]  FastMath  ExpIntTable  ExpFracTable  lnMant  CodyWaite  [VARIABLES]  	projects/Math16/src/main/java/org/apache/commons/math3/util/FastMath.java	0.20851441405707477	284	284	2	replace	safeGet(lnMant)  {  for(int  i  =  0;  i  <  ExpFracTable.this.size();  i++)  {  ExpFracTable.this.remove(i);  }	      if(lnMant    ==    null)    {    for(int    i    =    0;    i    <    lnMant;    i++)    {    ExpFracTable.this.remove(i);    }    	non-compiled	[CE]  <identifier>  expected	3	None	replace
25	[BUG]  [BUGGY]  safeGet(lnMant)  {  for(int  i  =  0;  i  <  ExpFracTable.size();  i++)  {  ExpFracTable.this.remove(i);  }  [CE]  <identifier>  expected  [FE]              AssertionError    [CONTEXT]      [BUGGY]  safeGet(lnMant)  {  for(int  i  =  0;  i  <  ExpFracTable.size();  i++)  {  ExpFracTable.this.remove(i);  }  [BUGGY]    private  static  final  double  EIGHTHS[]  =  {0,  0.125,  0.25,  0.375,  0.5,  0.625,  0.75,  0.875,  1.0,  1.125,  1.25,  1.375,  1.5,  1.625};  [CLASS]  FastMath  ExpIntTable  ExpFracTable  lnMant  CodyWaite  [VARIABLES]  	projects/Math16/src/main/java/org/apache/commons/math3/util/FastMath.java	0.20851441405707477	284	284	2	replace	safeGet(lnMant)  {  for(int  i  =  0;  i  <  ExpFracTable.size();  i++)  {  ExpFracTable.this.remove(i);  }	      if(lnMant    ==    null)    {    for(int    i    =    0;    i    <    lnMant;    i++)    {    ExpFracTable.this.remove(i);    }    	non-compiled	[CE]  <identifier>  expected	3	None	replace
26	[BUG]  [BUGGY]  ||  ExpIntTable.class.isAssignableFrom( "EIGHTHS "))  {  return  EIGHTHS[];  }  else  {  for(int  i  =  0;  i  <  EIGHTHS.length;  ++i)  {  return  EIGHTHS[  [CE]  <identifier>  expected  [FE]          AssertionError    [CONTEXT]      [BUGGY]  ||  ExpIntTable.class.isAssignableFrom( "EIGHTHS "))  {  return  EIGHTHS[];  }  else  {  for(int  i  =  0;  i  <  EIGHTHS.length;  ++i)  {  return  EIGHTHS[  [BUGGY]    private  static  final  double  EIGHTHS[]  =  {0,  0.125,  0.25,  0.375,  0.5,  0.625,  0.75,  0.875,  1.0,  1.125,  1.25,  1.375,  1.5,  1.625};  [CLASS]  FastMath  ExpIntTable  ExpFracTable  lnMant  CodyWaite  [VARIABLES]  	projects/Math16/src/main/java/org/apache/commons/math3/util/FastMath.java	0.20851441405707477	284	284	2	replace	||  ExpIntTable.class.isAssignableFrom( "EIGHTHS "))  {  return  EIGHTHS[];  }  else  {  for(int  i  =  0;  i  <  EIGHTHS.length;  ++i)  {  return  EIGHTHS[	      if(ExpIntTable.class.isAssignableFrom(   "EIGHTHS   "))    {    return    EIGHTHS[];    }    else    {    for(int    i    =    0;    i    <    EIGHTHS.length;    ++i)    {    return    EIGHTHS[i]    *    Math.    	non-compiled	[CE]  <identifier>  expected	12	None	replace
27	[BUG]  [BUGGY]  aught(ExpIntTable.EXPR_RESULT_NAME,  lnMant)  {  return  EIGHTHS[];  }  [CE]  <identifier>  expected  [FE]        AssertionError    [CONTEXT]      [BUGGY]  aught(ExpIntTable.EXPR_RESULT_NAME,  lnMant)  {  return  EIGHTHS[];  }  [BUGGY]    private  static  final  double  EIGHTHS[]  =  {0,  0.125,  0.25,  0.375,  0.5,  0.625,  0.75,  0.875,  1.0,  1.125,  1.25,  1.375,  1.5,  1.625};  [CLASS]  FastMath  ExpIntTable  ExpFracTable  lnMant  CodyWaite  [VARIABLES]  	projects/Math16/src/main/java/org/apache/commons/math3/util/FastMath.java	0.20851441405707477	284	284	2	replace	aught(ExpIntTable.EXPR_RESULT_NAME,  lnMant)  {  return  EIGHTHS[];  }	      if(lnMant    ==    null)    {    return    EIGHTHS[];    }    	non-compiled	[CE]  <identifier>  expected	6	None	replace
28	[BUG]  [BUGGY]  aught(ExpIntTable.EXPR_RESULT_TYPE,  lnMant)  {  return  EIGHTHS[];  }  [CE]  <identifier>  expected  [FE]          AssertionError    [CONTEXT]      [BUGGY]  aught(ExpIntTable.EXPR_RESULT_TYPE,  lnMant)  {  return  EIGHTHS[];  }  [BUGGY]    private  static  final  double  EIGHTHS[]  =  {0,  0.125,  0.25,  0.375,  0.5,  0.625,  0.75,  0.875,  1.0,  1.125,  1.25,  1.375,  1.5,  1.625};  [CLASS]  FastMath  ExpIntTable  ExpFracTable  lnMant  CodyWaite  [VARIABLES]  	projects/Math16/src/main/java/org/apache/commons/math3/util/FastMath.java	0.20851441405707477	284	284	2	replace	aught(ExpIntTable.EXPR_RESULT_TYPE,  lnMant)  {  return  EIGHTHS[];  }	      if(lnMant    ==    null)    {    return    EIGHTHS[];    }    	non-compiled	[CE]  <identifier>  expected	6	None	replace
29	[BUG]  [BUGGY]  safeGet(lnMant.size()  -  1);  [CE]  <identifier>  expected  [FE]        AssertionError    [CONTEXT]      [BUGGY]  safeGet(lnMant.size()  -  1);  [BUGGY]    private  static  final  double  EIGHTHS[]  =  {0,  0.125,  0.25,  0.375,  0.5,  0.625,  0.75,  0.875,  1.0,  1.125,  1.25,  1.375,  1.5,  1.625};  [CLASS]  FastMath  ExpIntTable  ExpFracTable  lnMant  CodyWaite  [VARIABLES]  	projects/Math16/src/main/java/org/apache/commons/math3/util/FastMath.java	0.20851441405707477	284	284	2	replace	safeGet(lnMant.size()  -  1);	      if(lnMant    ==    null)    {    for(int    i    =    0;    i    <    lnMant.size();    ++i)    {    return    EIGHTHS[i];    }    	non-compiled	[CE]  <identifier>  expected	1	None	replace
30	[BUG]  [BUGGY]  private  static  final  double  EIGHTHS[]  =  {  0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.625  }  ;  [CE]  <identifier>  expected  [FE]        AssertionError    [CONTEXT]      [BUGGY]  private  static  final  double  EIGHTHS[]  =  {  0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.625  }  ;  [BUGGY]      [CLASS]  FastMath  ExpIntTable  ExpFracTable  lnMant  CodyWaite  [VARIABLES]  	projects/Math16/src/main/java/org/apache/commons/math3/util/FastMath.java	0.20851441405707477	284	284	2	replace	private  static  final  double  EIGHTHS[]  =  {  0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.625  }  ;	  private    static    final    double    EIGHTHS[]    =    {    0,    1.0,    1.0,    1.0,    1.0,    1.0,    1.0,    1.0,    1.0,    1.0,    1.0,    1.0,    1.0,    1.625    }    ;    	non-compiled	[CE]  <identifier>  expected	14	None	replace
31	[BUG]  [BUGGY]  final  nan  [CE]  <identifier>  expected  [FE]            AssertionError    [CONTEXT]      [BUGGY]  final  nan  [BUGGY]    private  static  final  double  EIGHTHS[]  =  {0,  0.125,  0.25,  0.375,  0.5,  0.625,  0.75,  0.875,  1.0,  1.125,  1.25,  1.375,  1.5,  1.625};  [CLASS]  FastMath  ExpIntTable  ExpFracTable  lnMant  CodyWaite  [VARIABLES]  	projects/Math16/src/main/java/org/apache/commons/math3/util/FastMath.java	0.20851441405707477	284	284	2	replace	final  nan	      nan    	non-compiled	[CE]  <identifier>  expected	8	None	replace
32	[BUG]  [BUGGY]  safeThan  <  =  0;  [CE]  <identifier>  expected  [FE]          AssertionError    [CONTEXT]      [BUGGY]  safeThan  <  =  0;  [BUGGY]    private  static  final  double  EIGHTHS[]  =  {0,  0.125,  0.25,  0.375,  0.5,  0.625,  0.75,  0.875,  1.0,  1.125,  1.25,  1.375,  1.5,  1.625};  [CLASS]  FastMath  ExpIntTable  ExpFracTable  lnMant  CodyWaite  [VARIABLES]  	projects/Math16/src/main/java/org/apache/commons/math3/util/FastMath.java	0.20851441405707477	284	284	2	replace	safeThan  <  =  0;	      if(lnMant    ==    null)    {    for(int    i    =    0;    i    <    lnMant;    i++)    {    ExpFracTable.this.removeChangeListener(this);    }    	non-compiled	[CE]  <identifier>  expected	2	None	replace
33	[BUG]  [BUGGY]  aught(ExpIntTable.EXPR_RESULT_NAME,  lnMant)  {  return  EIGHTHS[0];  }  [CE]  <identifier>  expected  [FE]          AssertionError    [CONTEXT]      [BUGGY]  aught(ExpIntTable.EXPR_RESULT_NAME,  lnMant)  {  return  EIGHTHS[0];  }  [BUGGY]    private  static  final  double  EIGHTHS[]  =  {0,  0.125,  0.25,  0.375,  0.5,  0.625,  0.75,  0.875,  1.0,  1.125,  1.25,  1.375,  1.5,  1.625};  [CLASS]  FastMath  ExpIntTable  ExpFracTable  lnMant  CodyWaite  [VARIABLES]  	projects/Math16/src/main/java/org/apache/commons/math3/util/FastMath.java	0.20851441405707477	284	284	2	replace	aught(ExpIntTable.EXPR_RESULT_NAME,  lnMant)  {  return  EIGHTHS[0];  }	      if(lnMant    ==    null)    {    return    EIGHTHS[0];    }    	non-compiled	[CE]  <identifier>  expected	7	None	replace
34	[BUG]  [BUGGY]  aught(ExpIntTable.EXPR_RESULT_TYPE,  lnMant)  {  return  EIGHTHS[0];  }  [CE]  <identifier>  expected  [FE]            AssertionError    [CONTEXT]      [BUGGY]  aught(ExpIntTable.EXPR_RESULT_TYPE,  lnMant)  {  return  EIGHTHS[0];  }  [BUGGY]    private  static  final  double  EIGHTHS[]  =  {0,  0.125,  0.25,  0.375,  0.5,  0.625,  0.75,  0.875,  1.0,  1.125,  1.25,  1.375,  1.5,  1.625};  [CLASS]  FastMath  ExpIntTable  ExpFracTable  lnMant  CodyWaite  [VARIABLES]  	projects/Math16/src/main/java/org/apache/commons/math3/util/FastMath.java	0.20851441405707477	284	284	2	replace	aught(ExpIntTable.EXPR_RESULT_TYPE,  lnMant)  {  return  EIGHTHS[0];  }	      if(lnMant    ==    null)    {    return    EIGHTHS[0];    }    	non-compiled	[CE]  <identifier>  expected	7	None	replace
35	[BUG]  [BUGGY]  private  static  final  double  EIGHTHS[]  =  {  0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.5,  1.5,  1.625  }  ;  [CE]  <identifier>  expected  [FE]          AssertionError    [CONTEXT]      [BUGGY]  private  static  final  double  EIGHTHS[]  =  {  0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.5,  1.5,  1.625  }  ;  [BUGGY]      [CLASS]  FastMath  ExpIntTable  ExpFracTable  lnMant  CodyWaite  [VARIABLES]  	projects/Math16/src/main/java/org/apache/commons/math3/util/FastMath.java	0.20851441405707477	284	284	2	replace	private  static  final  double  EIGHTHS[]  =  {  0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.5,  1.5,  1.625  }  ;	  private    static    final    double    EIGHTHS[]    =    {    0,    1.0,    1.0,    1.0,    1.0,    1.0,    1.0,    1.0,    1.0,    1.0,    1.0,    1.25,    1.5,    1.625    }    ;    	non-compiled	[CE]  <identifier>  expected	5	None	replace
36	[BUG]  [BUGGY]  private  static  final  double  EIGHTHS[]  =  {  0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.5,  1.5,  1.625  }  ;  [CE]  <identifier>  expected  [FE]            AssertionError    [CONTEXT]      [BUGGY]  private  static  final  double  EIGHTHS[]  =  {  0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.5,  1.5,  1.625  }  ;  [BUGGY]      [CLASS]  FastMath  ExpIntTable  ExpFracTable  lnMant  CodyWaite  [VARIABLES]  	projects/Math16/src/main/java/org/apache/commons/math3/util/FastMath.java	0.20851441405707477	284	284	2	replace	private  static  final  double  EIGHTHS[]  =  {  0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.5,  1.5,  1.625  }  ;	  private    static    final    double    EIGHTHS[]    =    {    0,    1.0,    1.0,    1.0,    1.0,    1.0,    1.0,    1.0,    1.0,    1.0,    1.0,    1.25,    1.5,    1.625    }    ;    	non-compiled	[CE]  <identifier>  expected	5	None	replace
37	[BUG]  [BUGGY]  private  static  final  double  EIGHTHS[]  =  {  0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.5,  1.625  }  ;  [CE]  <identifier>  expected  [FE]        AssertionError    [CONTEXT]      [BUGGY]  private  static  final  double  EIGHTHS[]  =  {  0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.5,  1.625  }  ;  [BUGGY]      [CLASS]  FastMath  ExpIntTable  ExpFracTable  lnMant  CodyWaite  [VARIABLES]  	projects/Math16/src/main/java/org/apache/commons/math3/util/FastMath.java	0.20851441405707477	284	284	2	replace	private  static  final  double  EIGHTHS[]  =  {  0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.5,  1.625  }  ;	  private    static    final    double    EIGHTHS[]    =    {    0,    1.0,    1.0,    1.0,    1.0,    1.0,    1.0,    1.0,    1.25,    1.375,    1.5,    1.625    }    ;    	non-compiled	[CE]  <identifier>  expected	4	None	replace
38	[BUG]  [BUGGY]  private  static  final  double  EIGHTHS[]  =  {  0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.5,  1.625,  1.7  }  ;  [CE]  <identifier>  expected  [FE]          AssertionError    [CONTEXT]      [BUGGY]  private  static  final  double  EIGHTHS[]  =  {  0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.5,  1.625,  1.7  }  ;  [BUGGY]      [CLASS]  FastMath  ExpIntTable  ExpFracTable  lnMant  CodyWaite  [VARIABLES]  	projects/Math16/src/main/java/org/apache/commons/math3/util/FastMath.java	0.20851441405707477	284	284	2	replace	private  static  final  double  EIGHTHS[]  =  {  0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.5,  1.625,  1.7  }  ;	  private    static    final    double    EIGHTHS[]    =    {    0,    1.0,    1.0,    1.0,    1.0,    1.0,    1.0,    1.0,    1.25,    1.375,    1.5,    1.625    }    ;    	non-compiled	[CE]  <identifier>  expected	4	None	replace
39	[BUG]  [BUGGY]  private  static  final  double  EIGHTHS[]  =  {  0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.625,  1.625  }  ;  [CE]  <identifier>  expected  [FE]          AssertionError    [CONTEXT]      [BUGGY]  private  static  final  double  EIGHTHS[]  =  {  0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.625,  1.625  }  ;  [BUGGY]      [CLASS]  FastMath  ExpIntTable  ExpFracTable  lnMant  CodyWaite  [VARIABLES]  	projects/Math16/src/main/java/org/apache/commons/math3/util/FastMath.java	0.20851441405707477	284	284	2	replace	private  static  final  double  EIGHTHS[]  =  {  0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.625,  1.625  }  ;	  private    static    final    double    EIGHTHS[]    =    {    0,    1.0,    1.0,    1.0,    1.0,    1.0,    1.0,    1.0,    1.0,    1.0,    1.0,    1.625,    1.625    }    ;    	non-compiled	[CE]  <identifier>  expected	10	None	replace
40	[BUG]  [BUGGY]  Annotations.checkState(lnMant  ==  null);  [CE]  <identifier>  expected  [FE]            AssertionError    [CONTEXT]      [BUGGY]  Annotations.checkState(lnMant  ==  null);  [BUGGY]    private  static  final  double  EIGHTHS[]  =  {0,  0.125,  0.25,  0.375,  0.5,  0.625,  0.75,  0.875,  1.0,  1.125,  1.25,  1.375,  1.5,  1.625};  [CLASS]  FastMath  ExpIntTable  ExpFracTable  lnMant  CodyWaite  [VARIABLES]  	projects/Math16/src/main/java/org/apache/commons/math3/util/FastMath.java	0.20851441405707477	284	284	2	replace	Annotations.checkState(lnMant  ==  null);	      if(lnMant    ==    null)    {    for(int    i    =    0;    i    <    lnMant;    i++)    {    ExpFracTable.this.remove(i);    }    	non-compiled	[CE]  <identifier>  expected	3	None	replace
41	[BUG]  [BUGGY]  Annotations.this.remove(lnMant);  [CE]  <identifier>  expected  [FE]              AssertionError    [CONTEXT]      [BUGGY]  Annotations.this.remove(lnMant);  [BUGGY]    private  static  final  double  EIGHTHS[]  =  {0,  0.125,  0.25,  0.375,  0.5,  0.625,  0.75,  0.875,  1.0,  1.125,  1.25,  1.375,  1.5,  1.625};  [CLASS]  FastMath  ExpIntTable  ExpFracTable  lnMant  CodyWaite  [VARIABLES]  	projects/Math16/src/main/java/org/apache/commons/math3/util/FastMath.java	0.20851441405707477	284	284	2	replace	Annotations.this.remove(lnMant);	      if(lnMant    ==    null)    {    for(int    i    =    0;    i    <    lnMant;    i++)    {    ExpFracTable.this.remove(i);    }    	non-compiled	[CE]  <identifier>  expected	3	None	replace
42	[BUG]  [BUGGY]  private  static  final  double  EIGHTHS[]  =  {  0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.5,  1.625  }  ;  [CE]  <identifier>  expected  [FE]        AssertionError    [CONTEXT]      [BUGGY]  private  static  final  double  EIGHTHS[]  =  {  0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.5,  1.625  }  ;  [BUGGY]      [CLASS]  FastMath  ExpIntTable  ExpFracTable  lnMant  CodyWaite  [VARIABLES]  	projects/Math16/src/main/java/org/apache/commons/math3/util/FastMath.java	0.20851441405707477	284	284	2	replace	private  static  final  double  EIGHTHS[]  =  {  0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.5,  1.625  }  ;	  private    static    final    double    EIGHTHS[]    =    {    0,    1.0,    1.0,    1.0,    1.0,    1.0,    1.0,    1.0,    1.25,    1.375,    1.5,    1.625    }    ;    	non-compiled	[CE]  <identifier>  expected	4	None	replace
43	[BUG]  [BUGGY]  private  static  final  double  EIGHTHS[]  =  {  0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.5,  1.625  }  ;  [CE]  <identifier>  expected  [FE]          AssertionError    [CONTEXT]      [BUGGY]  private  static  final  double  EIGHTHS[]  =  {  0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.5,  1.625  }  ;  [BUGGY]      [CLASS]  FastMath  ExpIntTable  ExpFracTable  lnMant  CodyWaite  [VARIABLES]  	projects/Math16/src/main/java/org/apache/commons/math3/util/FastMath.java	0.20851441405707477	284	284	2	replace	private  static  final  double  EIGHTHS[]  =  {  0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.5,  1.625  }  ;	  private    static    final    double    EIGHTHS[]    =    {    0,    1.0,    1.0,    1.0,    1.0,    1.0,    1.0,    1.0,    1.25,    1.375,    1.5,    1.625    }    ;    	non-compiled	[CE]  <identifier>  expected	4	None	replace
44	[BUG]  [BUGGY]  Annotations.this.removeChangeListener(this);  [CE]  <identifier>  expected  [FE]          AssertionError    [CONTEXT]      [BUGGY]  Annotations.this.removeChangeListener(this);  [BUGGY]    private  static  final  double  EIGHTHS[]  =  {0,  0.125,  0.25,  0.375,  0.5,  0.625,  0.75,  0.875,  1.0,  1.125,  1.25,  1.375,  1.5,  1.625};  [CLASS]  FastMath  ExpIntTable  ExpFracTable  lnMant  CodyWaite  [VARIABLES]  	projects/Math16/src/main/java/org/apache/commons/math3/util/FastMath.java	0.20851441405707477	284	284	2	replace	Annotations.this.removeChangeListener(this);	      if(lnMant    ==    null)    {    for(int    i    =    0;    i    <    lnMant;    i++)    {    ExpFracTable.this.removeChangeListener(this);    }    	non-compiled	[CE]  <identifier>  expected	2	None	replace
45	[BUG]  [BUGGY]  AnnotationTraversal.traverse(compiler,  this);  [CE]  <identifier>  expected  [FE]            AssertionError    [CONTEXT]      [BUGGY]  AnnotationTraversal.traverse(compiler,  this);  [BUGGY]    private  static  final  double  EIGHTHS[]  =  {0,  0.125,  0.25,  0.375,  0.5,  0.625,  0.75,  0.875,  1.0,  1.125,  1.25,  1.375,  1.5,  1.625};  [CLASS]  FastMath  ExpIntTable  ExpFracTable  lnMant  CodyWaite  [VARIABLES]  	projects/Math16/src/main/java/org/apache/commons/math3/util/FastMath.java	0.20851441405707477	284	284	2	replace	AnnotationTraversal.traverse(compiler,  this);	      if(lnMant    ==    null)    {    for(int    i    =    0;    i    <    lnMant;    i++)    {    ExpFracTable.this.removeChangeListener(this);    }    	non-compiled	[CE]  <identifier>  expected	2	None	replace
46	[BUG]  [BUGGY]  if(lnMant  ==  null)  {  return  EIGHTHS[1];  }  [CE]  <identifier>  expected  [FE]          AssertionError    [CONTEXT]      [BUGGY]  if(lnMant  ==  null)  {  return  EIGHTHS[1];  }  [BUGGY]    private  static  final  double  EIGHTHS[]  =  {0,  0.125,  0.25,  0.375,  0.5,  0.625,  0.75,  0.875,  1.0,  1.125,  1.25,  1.375,  1.5,  1.625};  [CLASS]  FastMath  ExpIntTable  ExpFracTable  lnMant  CodyWaite  [VARIABLES]  	projects/Math16/src/main/java/org/apache/commons/math3/util/FastMath.java	0.20851441405707477	284	284	2	replace	if(lnMant  ==  null)  {  return  EIGHTHS[1];  }	      if(lnMant    ==    null)    {    return    EIGHTHS[0];    }    	non-compiled	[CE]  <identifier>  expected	7	None	replace
47	[BUG]  [BUGGY]  AssertionError.show(lnMant,  0);  [CE]  <identifier>  expected  [FE]        AssertionError    [CONTEXT]      [BUGGY]  AssertionError.show(lnMant,  0);  [BUGGY]    private  static  final  double  EIGHTHS[]  =  {0,  0.125,  0.25,  0.375,  0.5,  0.625,  0.75,  0.875,  1.0,  1.125,  1.25,  1.375,  1.5,  1.625};  [CLASS]  FastMath  ExpIntTable  ExpFracTable  lnMant  CodyWaite  [VARIABLES]  	projects/Math16/src/main/java/org/apache/commons/math3/util/FastMath.java	0.20851441405707477	284	284	2	replace	AssertionError.show(lnMant,  0);	      if(lnMant    ==    null)    {    for(int    i    =    0;    i    <    lnMant.size();    ++i)    {    return    EIGHTHS[i];    }    	non-compiled	[CE]  <identifier>  expected	1	None	replace
48	[BUG]  [BUGGY]  AssertionError.warning( "ExpFracTable  not  implemented  by  default ");  [CE]  <identifier>  expected  [FE]          AssertionError    [CONTEXT]      [BUGGY]  AssertionError.warning( "ExpFracTable  not  implemented  by  default ");  [BUGGY]    private  static  final  double  EIGHTHS[]  =  {0,  0.125,  0.25,  0.375,  0.5,  0.625,  0.75,  0.875,  1.0,  1.125,  1.25,  1.375,  1.5,  1.625};  [CLASS]  FastMath  ExpIntTable  ExpFracTable  lnMant  CodyWaite  [VARIABLES]  	projects/Math16/src/main/java/org/apache/commons/math3/util/FastMath.java	0.20851441405707477	284	284	2	replace	AssertionError.warning( "ExpFracTable  not  implemented  by  default ");	      if(lnMant    ==    null)    {    for(int    i    =    0;    i    <    lnMant.size();    ++i)    {    return    EIGHTHS[i];    }    	non-compiled	[CE]  <identifier>  expected	1	None	replace
49	[BUG]  [BUGGY]  AssertionError.class.isAssignableFrom( "ExpIntTable "))  {  return  EIGHTHS[];  }  else  {  for(int  i  =  0;  i  <  EIGHTHS.length;  ++i)  {  return  EIGHTHS[i]  *  2;  }  [CE]  <identifier>  expected  [FE]            AssertionError    [CONTEXT]      [BUGGY]  AssertionError.class.isAssignableFrom( "ExpIntTable "))  {  return  EIGHTHS[];  }  else  {  for(int  i  =  0;  i  <  EIGHTHS.length;  ++i)  {  return  EIGHTHS[i]  *  2;  }  [BUGGY]    private  static  final  double  EIGHTHS[]  =  {0,  0.125,  0.25,  0.375,  0.5,  0.625,  0.75,  0.875,  1.0,  1.125,  1.25,  1.375,  1.5,  1.625};  [CLASS]  FastMath  ExpIntTable  ExpFracTable  lnMant  CodyWaite  [VARIABLES]  	projects/Math16/src/main/java/org/apache/commons/math3/util/FastMath.java	0.20851441405707477	284	284	2	replace	AssertionError.class.isAssignableFrom( "ExpIntTable "))  {  return  EIGHTHS[];  }  else  {  for(int  i  =  0;  i  <  EIGHTHS.length;  ++i)  {  return  EIGHTHS[i]  *  2;  }	      if(ExpIntTable.class.isAssignableFrom(   "EIGHTHS   "))    {    return    EIGHTHS[];    }    else    {    for(int    i    =    0;    i    <    EIGHTHS.length;    ++i)    {    return    EIGHTHS[i]    *    2;    }    	non-compiled	[CE]  <identifier>  expected	13	None	replace
50	[BUG]  [BUGGY]  AssertionError.class.isAssignableFrom( "ExpIntTable "))  {  return  EIGHTHS[];  }  else  {  for(int  i  =  0;  i  <  EIGHTHS.length;  ++i)  {  return  EIGHTHS[i]  *  2  [CE]  <identifier>  expected  [FE]              AssertionError    [CONTEXT]      [BUGGY]  AssertionError.class.isAssignableFrom( "ExpIntTable "))  {  return  EIGHTHS[];  }  else  {  for(int  i  =  0;  i  <  EIGHTHS.length;  ++i)  {  return  EIGHTHS[i]  *  2  [BUGGY]    private  static  final  double  EIGHTHS[]  =  {0,  0.125,  0.25,  0.375,  0.5,  0.625,  0.75,  0.875,  1.0,  1.125,  1.25,  1.375,  1.5,  1.625};  [CLASS]  FastMath  ExpIntTable  ExpFracTable  lnMant  CodyWaite  [VARIABLES]  	projects/Math16/src/main/java/org/apache/commons/math3/util/FastMath.java	0.20851441405707477	284	284	2	replace	AssertionError.class.isAssignableFrom( "ExpIntTable "))  {  return  EIGHTHS[];  }  else  {  for(int  i  =  0;  i  <  EIGHTHS.length;  ++i)  {  return  EIGHTHS[i]  *  2	      if(ExpIntTable.class.isAssignableFrom(   "EIGHTHS   "))    {    return    EIGHTHS[];    }    else    {    for(int    i    =    0;    i    <    EIGHTHS.length;    ++i)    {    return    EIGHTHS[i]    *    2;    }    	non-compiled	[CE]  <identifier>  expected	13	None	replace
51	[BUG]  [BUGGY]  private  static  final  double  EIGHTHS[]  =  {  0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.5,  2.0,  1.625  }  ;  [CE]  <identifier>  expected  [FE]          AssertionError    [CONTEXT]      [BUGGY]  private  static  final  double  EIGHTHS[]  =  {  0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.5,  2.0,  1.625  }  ;  [BUGGY]      [CLASS]  FastMath  ExpIntTable  ExpFracTable  lnMant  CodyWaite  [VARIABLES]  	projects/Math16/src/main/java/org/apache/commons/math3/util/FastMath.java	0.20851441405707477	284	284	2	replace	private  static  final  double  EIGHTHS[]  =  {  0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.5,  2.0,  1.625  }  ;	  private    static    final    double    EIGHTHS[]    =    {    0,    1.0,    1.0,    1.0,    1.0,    1.0,    1.0,    1.0,    1.0,    1.0,    1.0,    1.25,    1.5,    1.625    }    ;    	non-compiled	[CE]  <identifier>  expected	5	None	replace
52	[BUG]  [BUGGY]  private  static  final  double  EIGHTHS[]  =  {  0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.5,  1.5,  1.625  }  ;  [CE]  <identifier>  expected  [FE]            AssertionError    [CONTEXT]      [BUGGY]  private  static  final  double  EIGHTHS[]  =  {  0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.5,  1.5,  1.625  }  ;  [BUGGY]      [CLASS]  FastMath  ExpIntTable  ExpFracTable  lnMant  CodyWaite  [VARIABLES]  	projects/Math16/src/main/java/org/apache/commons/math3/util/FastMath.java	0.20851441405707477	284	284	2	replace	private  static  final  double  EIGHTHS[]  =  {  0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.5,  1.5,  1.625  }  ;	  private    static    final    double    EIGHTHS[]    =    {    0,    1.0,    1.0,    1.0,    1.0,    1.0,    1.0,    1.0,    1.0,    1.0,    1.0,    1.25,    1.5,    1.625    }    ;    	non-compiled	[CE]  <identifier>  expected	5	None	replace
