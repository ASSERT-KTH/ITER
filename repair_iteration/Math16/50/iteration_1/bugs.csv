bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]    if(lnMant  ==  null)  {  for(int  i  =  0;  i  <  lnMant.size();  ++i)  {  return  EIGHTHS[i];  }  [CE]  <identifier>  expected  [FE]    AssertionError  [CONTEXT]    [BUGGY]    if(lnMant  ==  null)  {  for(int  i  =  0;  i  <  lnMant.size();  ++i)  {  return  EIGHTHS[i];  }  [BUGGY]  private  static  final  double  EIGHTHS[]  =  {0,  0.125,  0.25,  0.375,  0.5,  0.625,  0.75,  0.875,  1.0,  1.125,  1.25,  1.375,  1.5,  1.625};  [CLASS]  FastMath  ExpIntTable  ExpFracTable  lnMant  CodyWaite  [VARIABLES]  	projects/Math16/src/main/java/org/apache/commons/math3/util/FastMath.java	0.20851441405707477	284	284	2	replace	    if(lnMant  ==  null)  {  for(int  i  =  0;  i  <  lnMant.size();  ++i)  {  return  EIGHTHS[i];  }		non-compiled	[CE]  <identifier>  expected	100	None	add
2	[BUG]  [BUGGY]    if(lnMant  ==  null)  {  for(int  i  =  0;  i  <  lnMant;  i++)  {  ExpFracTable.this.removeChangeListener(this);  }  [CE]  <identifier>  expected  [FE]      AssertionError  [CONTEXT]    [BUGGY]    if(lnMant  ==  null)  {  for(int  i  =  0;  i  <  lnMant;  i++)  {  ExpFracTable.this.removeChangeListener(this);  }  [BUGGY]  private  static  final  double  EIGHTHS[]  =  {0,  0.125,  0.25,  0.375,  0.5,  0.625,  0.75,  0.875,  1.0,  1.125,  1.25,  1.375,  1.5,  1.625};  [CLASS]  FastMath  ExpIntTable  ExpFracTable  lnMant  CodyWaite  [VARIABLES]  	projects/Math16/src/main/java/org/apache/commons/math3/util/FastMath.java	0.20851441405707477	284	284	2	replace	    if(lnMant  ==  null)  {  for(int  i  =  0;  i  <  lnMant;  i++)  {  ExpFracTable.this.removeChangeListener(this);  }		non-compiled	[CE]  <identifier>  expected	100	None	add
3	[BUG]  [BUGGY]    if(lnMant  ==  null)  {  for(int  i  =  0;  i  <  lnMant;  i++)  {  ExpFracTable.this.remove(i);  }  [CE]  <identifier>  expected  [FE]        AssertionError  [CONTEXT]    [BUGGY]    if(lnMant  ==  null)  {  for(int  i  =  0;  i  <  lnMant;  i++)  {  ExpFracTable.this.remove(i);  }  [BUGGY]  private  static  final  double  EIGHTHS[]  =  {0,  0.125,  0.25,  0.375,  0.5,  0.625,  0.75,  0.875,  1.0,  1.125,  1.25,  1.375,  1.5,  1.625};  [CLASS]  FastMath  ExpIntTable  ExpFracTable  lnMant  CodyWaite  [VARIABLES]  	projects/Math16/src/main/java/org/apache/commons/math3/util/FastMath.java	0.20851441405707477	284	284	2	replace	    if(lnMant  ==  null)  {  for(int  i  =  0;  i  <  lnMant;  i++)  {  ExpFracTable.this.remove(i);  }		non-compiled	[CE]  <identifier>  expected	100	None	add
4	[BUG]  [BUGGY]  private  static  final  double  EIGHTHS[]  =  {  0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.25,  1.375,  1.5,  1.625  }  ;  [CE]  <identifier>  expected  [FE]    AssertionError  [CONTEXT]    [BUGGY]  private  static  final  double  EIGHTHS[]  =  {  0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.25,  1.375,  1.5,  1.625  }  ;  [BUGGY]    [CLASS]  FastMath  ExpIntTable  ExpFracTable  lnMant  CodyWaite  [VARIABLES]  	projects/Math16/src/main/java/org/apache/commons/math3/util/FastMath.java	0.20851441405707477	284	284	2	replace	private  static  final  double  EIGHTHS[]  =  {  0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.25,  1.375,  1.5,  1.625  }  ;	private  static  final  double  EIGHTHS[]  =  {0,  0.125,  0.25,  0.375,  0.5,  0.625,  0.75,  0.875,  1.0,  1.125,  1.25,  1.375,  1.5,  1.625};  	non-compiled	[CE]  <identifier>  expected	99	None	replace
5	[BUG]  [BUGGY]  private  static  final  double  EIGHTHS[]  =  {  0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.25,  1.5,  1.625  }  ;  [CE]  <identifier>  expected  [FE]      AssertionError  [CONTEXT]    [BUGGY]  private  static  final  double  EIGHTHS[]  =  {  0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.25,  1.5,  1.625  }  ;  [BUGGY]    [CLASS]  FastMath  ExpIntTable  ExpFracTable  lnMant  CodyWaite  [VARIABLES]  	projects/Math16/src/main/java/org/apache/commons/math3/util/FastMath.java	0.20851441405707477	284	284	2	replace	private  static  final  double  EIGHTHS[]  =  {  0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.25,  1.5,  1.625  }  ;	private  static  final  double  EIGHTHS[]  =  {0,  0.125,  0.25,  0.375,  0.5,  0.625,  0.75,  0.875,  1.0,  1.125,  1.25,  1.375,  1.5,  1.625};  	non-compiled	[CE]  <identifier>  expected	99	None	replace
6	[BUG]  [BUGGY]    if(lnMant  ==  null)  {  return  EIGHTHS[];  }  [CE]  <identifier>  expected  [FE]    AssertionError  [CONTEXT]    [BUGGY]    if(lnMant  ==  null)  {  return  EIGHTHS[];  }  [BUGGY]  private  static  final  double  EIGHTHS[]  =  {0,  0.125,  0.25,  0.375,  0.5,  0.625,  0.75,  0.875,  1.0,  1.125,  1.25,  1.375,  1.5,  1.625};  [CLASS]  FastMath  ExpIntTable  ExpFracTable  lnMant  CodyWaite  [VARIABLES]  	projects/Math16/src/main/java/org/apache/commons/math3/util/FastMath.java	0.20851441405707477	284	284	2	replace	    if(lnMant  ==  null)  {  return  EIGHTHS[];  }		non-compiled	[CE]  <identifier>  expected	100	None	add
7	[BUG]  [BUGGY]    if(lnMant  ==  null)  {  return  EIGHTHS[0];  }  [CE]  <identifier>  expected  [FE]      AssertionError  [CONTEXT]    [BUGGY]    if(lnMant  ==  null)  {  return  EIGHTHS[0];  }  [BUGGY]  private  static  final  double  EIGHTHS[]  =  {0,  0.125,  0.25,  0.375,  0.5,  0.625,  0.75,  0.875,  1.0,  1.125,  1.25,  1.375,  1.5,  1.625};  [CLASS]  FastMath  ExpIntTable  ExpFracTable  lnMant  CodyWaite  [VARIABLES]  	projects/Math16/src/main/java/org/apache/commons/math3/util/FastMath.java	0.20851441405707477	284	284	2	replace	    if(lnMant  ==  null)  {  return  EIGHTHS[0];  }		non-compiled	[CE]  <identifier>  expected	100	None	add
8	[BUG]  [BUGGY]    nan  [CE]  <identifier>  expected  [FE]        AssertionError  [CONTEXT]    [BUGGY]    nan  [BUGGY]  private  static  final  double  EIGHTHS[]  =  {0,  0.125,  0.25,  0.375,  0.5,  0.625,  0.75,  0.875,  1.0,  1.125,  1.25,  1.375,  1.5,  1.625};  [CLASS]  FastMath  ExpIntTable  ExpFracTable  lnMant  CodyWaite  [VARIABLES]  	projects/Math16/src/main/java/org/apache/commons/math3/util/FastMath.java	0.20851441405707477	284	284	2	replace	    nan		non-compiled	[CE]  <identifier>  expected	100	None	add
9	[BUG]  [BUGGY]  private  static  final  double  EIGHTHS[]  =  {  0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.625,  1.625  }  ;  [CE]  <identifier>  expected  [FE]    AssertionError  [CONTEXT]    [BUGGY]  private  static  final  double  EIGHTHS[]  =  {  0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.625,  1.625  }  ;  [BUGGY]    [CLASS]  FastMath  ExpIntTable  ExpFracTable  lnMant  CodyWaite  [VARIABLES]  	projects/Math16/src/main/java/org/apache/commons/math3/util/FastMath.java	0.20851441405707477	284	284	2	replace	private  static  final  double  EIGHTHS[]  =  {  0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.625,  1.625  }  ;	private  static  final  double  EIGHTHS[]  =  {0,  0.125,  0.25,  0.375,  0.5,  0.625,  0.75,  0.875,  1.0,  1.125,  1.25,  1.375,  1.5,  1.625};  	non-compiled	[CE]  <identifier>  expected	99	None	replace
10	[BUG]  [BUGGY]  private  static  final  double  EIGHTHS[]  =  {  0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.625,  1.625  }  ;  [CE]  <identifier>  expected  [FE]      AssertionError  [CONTEXT]    [BUGGY]  private  static  final  double  EIGHTHS[]  =  {  0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.625,  1.625  }  ;  [BUGGY]    [CLASS]  FastMath  ExpIntTable  ExpFracTable  lnMant  CodyWaite  [VARIABLES]  	projects/Math16/src/main/java/org/apache/commons/math3/util/FastMath.java	0.20851441405707477	284	284	2	replace	private  static  final  double  EIGHTHS[]  =  {  0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.625,  1.625  }  ;	private  static  final  double  EIGHTHS[]  =  {0,  0.125,  0.25,  0.375,  0.5,  0.625,  0.75,  0.875,  1.0,  1.125,  1.25,  1.375,  1.5,  1.625};  	non-compiled	[CE]  <identifier>  expected	99	None	replace
11	[BUG]  [BUGGY]    if(ExpIntTable.class.isAssignableFrom( "EIGHTHS "))  {  return  EIGHTHS[];  }  else  {  for(int  i  =  0;  i  <  EIGHTHS.length;  ++i)  {  return  EIGHTHS[i];  }  [CE]  <identifier>  expected  [FE]    AssertionError  [CONTEXT]    [BUGGY]    if(ExpIntTable.class.isAssignableFrom( "EIGHTHS "))  {  return  EIGHTHS[];  }  else  {  for(int  i  =  0;  i  <  EIGHTHS.length;  ++i)  {  return  EIGHTHS[i];  }  [BUGGY]  private  static  final  double  EIGHTHS[]  =  {0,  0.125,  0.25,  0.375,  0.5,  0.625,  0.75,  0.875,  1.0,  1.125,  1.25,  1.375,  1.5,  1.625};  [CLASS]  FastMath  ExpIntTable  ExpFracTable  lnMant  CodyWaite  [VARIABLES]  	projects/Math16/src/main/java/org/apache/commons/math3/util/FastMath.java	0.20851441405707477	284	284	2	replace	    if(ExpIntTable.class.isAssignableFrom( "EIGHTHS "))  {  return  EIGHTHS[];  }  else  {  for(int  i  =  0;  i  <  EIGHTHS.length;  ++i)  {  return  EIGHTHS[i];  }		non-compiled	[CE]  <identifier>  expected	100	None	add
12	[BUG]  [BUGGY]    if(ExpIntTable.class.isAssignableFrom( "EIGHTHS "))  {  return  EIGHTHS[];  }  else  {  for(int  i  =  0;  i  <  EIGHTHS.length;  ++i)  {  return  EIGHTHS[i]  *  Math.  [CE]  <identifier>  expected  [FE]      AssertionError  [CONTEXT]    [BUGGY]    if(ExpIntTable.class.isAssignableFrom( "EIGHTHS "))  {  return  EIGHTHS[];  }  else  {  for(int  i  =  0;  i  <  EIGHTHS.length;  ++i)  {  return  EIGHTHS[i]  *  Math.  [BUGGY]  private  static  final  double  EIGHTHS[]  =  {0,  0.125,  0.25,  0.375,  0.5,  0.625,  0.75,  0.875,  1.0,  1.125,  1.25,  1.375,  1.5,  1.625};  [CLASS]  FastMath  ExpIntTable  ExpFracTable  lnMant  CodyWaite  [VARIABLES]  	projects/Math16/src/main/java/org/apache/commons/math3/util/FastMath.java	0.20851441405707477	284	284	2	replace	    if(ExpIntTable.class.isAssignableFrom( "EIGHTHS "))  {  return  EIGHTHS[];  }  else  {  for(int  i  =  0;  i  <  EIGHTHS.length;  ++i)  {  return  EIGHTHS[i]  *  Math.		non-compiled	[CE]  <identifier>  expected	100	None	add
13	[BUG]  [BUGGY]    if(ExpIntTable.class.isAssignableFrom( "EIGHTHS "))  {  return  EIGHTHS[];  }  else  {  for(int  i  =  0;  i  <  EIGHTHS.length;  ++i)  {  return  EIGHTHS[i]  *  2;  }  [CE]  <identifier>  expected  [FE]        AssertionError  [CONTEXT]    [BUGGY]    if(ExpIntTable.class.isAssignableFrom( "EIGHTHS "))  {  return  EIGHTHS[];  }  else  {  for(int  i  =  0;  i  <  EIGHTHS.length;  ++i)  {  return  EIGHTHS[i]  *  2;  }  [BUGGY]  private  static  final  double  EIGHTHS[]  =  {0,  0.125,  0.25,  0.375,  0.5,  0.625,  0.75,  0.875,  1.0,  1.125,  1.25,  1.375,  1.5,  1.625};  [CLASS]  FastMath  ExpIntTable  ExpFracTable  lnMant  CodyWaite  [VARIABLES]  	projects/Math16/src/main/java/org/apache/commons/math3/util/FastMath.java	0.20851441405707477	284	284	2	replace	    if(ExpIntTable.class.isAssignableFrom( "EIGHTHS "))  {  return  EIGHTHS[];  }  else  {  for(int  i  =  0;  i  <  EIGHTHS.length;  ++i)  {  return  EIGHTHS[i]  *  2;  }		non-compiled	[CE]  <identifier>  expected	100	None	add
14	[BUG]  [BUGGY]  private  static  final  double  EIGHTHS[]  =  {  0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.625  }  ;  [CE]  <identifier>  expected  [FE]    AssertionError  [CONTEXT]    [BUGGY]  private  static  final  double  EIGHTHS[]  =  {  0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.625  }  ;  [BUGGY]    [CLASS]  FastMath  ExpIntTable  ExpFracTable  lnMant  CodyWaite  [VARIABLES]  	projects/Math16/src/main/java/org/apache/commons/math3/util/FastMath.java	0.20851441405707477	284	284	2	replace	private  static  final  double  EIGHTHS[]  =  {  0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.625  }  ;	private  static  final  double  EIGHTHS[]  =  {0,  0.125,  0.25,  0.375,  0.5,  0.625,  0.75,  0.875,  1.0,  1.125,  1.25,  1.375,  1.5,  1.625};  	non-compiled	[CE]  <identifier>  expected	99	None	replace
