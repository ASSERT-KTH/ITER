bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]    if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }    [BUGGY]  }  else  if(o  instanceof  JsonNull  ||  o  instanceof  JsonNull)  {  [BUGGY]    return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	add	}  else  if(o  instanceof  JsonNull  ||  o  instanceof  JsonNull)  {	  }    else    if(o    instanceof    JsonNull)    {    	compilable	  [FE]  AssertionError  	6	2	replace
2	[BUG]  [BUGGY]  }  else  if(o  instanceof  JsonNull  ||  o  instanceof  JsonNull)  {  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]    if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }    [BUGGY]  }  else  if(o  instanceof  JsonNull  ||  o  instanceof  JsonNull)  {  [BUGGY]    return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	replace	}  else  if(o  instanceof  JsonNull  ||  o  instanceof  JsonNull)  {	  }    else    if(o    instanceof    JsonNull)    {    	compilable	  [FE]  AssertionError  	6	2	replace
3	[BUG]  [BUGGY]  [FE]  ArrayIndexOutOfBoundsException  [FE]      AssertionError    [CONTEXT]    if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }    [BUGGY]  }  else  if(o  instanceof  JsonNull  ||!(o  instanceof  JsonNull  &&!(o  instanceof  JsonNull)))  {  [BUGGY]    return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	add	}  else  if(o  instanceof  JsonNull  ||!(o  instanceof  JsonNull  &&!(o  instanceof  JsonNull)))  {	  }    else    if(o    instanceof    JsonNull)    {    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	6	2	replace
4	[BUG]  [BUGGY]  }  else  if(o  instanceof  JsonNull  ||!(o  instanceof  JsonNull  &&!(o  instanceof  JsonNull)))  {  [FE]  ArrayIndexOutOfBoundsException  [FE]      AssertionError    [CONTEXT]    if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }    [BUGGY]  }  else  if(o  instanceof  JsonNull  ||!(o  instanceof  JsonNull  &&!(o  instanceof  JsonNull)))  {  [BUGGY]    return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	replace	}  else  if(o  instanceof  JsonNull  ||!(o  instanceof  JsonNull  &&!(o  instanceof  JsonNull)))  {	  }    else    if(o    instanceof    JsonNull)    {    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	6	2	replace
5	[BUG]  [BUGGY]  }  else  if(o  instanceof  JsonNull  ||!(o  instanceof  JsonNull  &&!(o  instanceof  JsonNull  &&!(o  instanceof  JsonNull)))  {  [CE]  ')'  expected  [FE]        AssertionError    [CONTEXT]    if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }    [BUGGY]  }  else  if(o  instanceof  JsonNull  ||!(o  instanceof  JsonNull  &&!(o  instanceof  JsonNull  &&!(o  instanceof  JsonNull)))  {  [BUGGY]    return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	replace	}  else  if(o  instanceof  JsonNull  ||!(o  instanceof  JsonNull  &&!(o  instanceof  JsonNull  &&!(o  instanceof  JsonNull)))  {	  }    else    if(o    instanceof    JsonNull)    {    	non-compiled	[CE]  ')'  expected	6	None	replace
6	[BUG]  [BUGGY]  }  else  if(o  instanceof  JsonNull  ||!(o  instanceof  JsonNull  &&!(o  instanceof  JsonNull  &&!(o  instanceof  JsonNull  &&!(o  instanceof  JsonNull))))  {  [CE]  ')'  expected  [FE]          AssertionError    [CONTEXT]    if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }    [BUGGY]  }  else  if(o  instanceof  JsonNull  ||!(o  instanceof  JsonNull  &&!(o  instanceof  JsonNull  &&!(o  instanceof  JsonNull  &&!(o  instanceof  JsonNull))))  {  [BUGGY]    return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	replace	}  else  if(o  instanceof  JsonNull  ||!(o  instanceof  JsonNull  &&!(o  instanceof  JsonNull  &&!(o  instanceof  JsonNull  &&!(o  instanceof  JsonNull))))  {	  }    else    if(o    instanceof    JsonNull)    {    	non-compiled	[CE]  ')'  expected	6	None	replace
7	[BUG]  [BUGGY]  }  else  if(o  instanceof  JsonNull  ||!(o  instanceof  JsonNull  &&  isObject))  {  [CE]  cannot  find  symbol  isObject  [FE]            AssertionError    [CONTEXT]    if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }    [BUGGY]  }  else  if(o  instanceof  JsonNull  ||!(o  instanceof  JsonNull  &&  isObject))  {  [BUGGY]    return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	replace	}  else  if(o  instanceof  JsonNull  ||!(o  instanceof  JsonNull  &&  isObject))  {	  }    else    if(o    instanceof    JsonNull)    {    	non-compiled	[CE]  cannot  find  symbol  isObject	6	None	replace
8	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]    if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }    [BUGGY]  }  else  if(o  instanceof  JsonPrimitive)  {  [BUGGY]    return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	add	}  else  if(o  instanceof  JsonPrimitive)  {	  }    else    if(o    instanceof    JsonArray)    {    	compilable	  [FE]  AssertionError  	4	2	replace
9	[BUG]  [BUGGY]  }  else  if(o  instanceof  JsonPrimitive)  {  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]    if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }    [BUGGY]  }  else  if(o  instanceof  JsonPrimitive)  {  [BUGGY]    return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	replace	}  else  if(o  instanceof  JsonPrimitive)  {	  }    else    if(o    instanceof    JsonArray)    {    	compilable	  [FE]  AssertionError  	4	2	replace
10	[BUG]  [BUGGY]  [FE]  ArrayIndexOutOfBoundsException  [FE]      AssertionError    [CONTEXT]    if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }    [BUGGY]  }  else  if(!(o  instanceof  JsonPrimitive))  {  [BUGGY]    return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	add	}  else  if(!(o  instanceof  JsonPrimitive))  {	  }    else    if(o    instanceof    JsonArray)    {    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	4	2	replace
11	[BUG]  [BUGGY]  }  else  if(!(o  instanceof  JsonPrimitive))  {  [FE]  ArrayIndexOutOfBoundsException  [FE]      AssertionError    [CONTEXT]    if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }    [BUGGY]  }  else  if(!(o  instanceof  JsonPrimitive))  {  [BUGGY]    return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	replace	}  else  if(!(o  instanceof  JsonPrimitive))  {	  }    else    if(o    instanceof    JsonArray)    {    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	4	2	replace
12	[BUG]  [BUGGY]  }  else  if(o  instanceof  JsonType)  {  [CE]  cannot  find  symbol  [FE]        AssertionError    [CONTEXT]    if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }    [BUGGY]  }  else  if(o  instanceof  JsonType)  {  [BUGGY]    return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	replace	}  else  if(o  instanceof  JsonType)  {	  }    else    if(o    instanceof    JsonArray)    {    	non-compiled	[CE]  cannot  find  symbol	4	None	replace
13	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]          AssertionError    [CONTEXT]    if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }    [BUGGY]  }  else  if(o  instanceof  String)  {  [BUGGY]    return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	add	}  else  if(o  instanceof  String)  {	  }    else    if(o    instanceof    JsonArray)    {    	compilable	  [FE]  AssertionError  	4	2	replace
14	[BUG]  [BUGGY]  }  else  if(o  instanceof  String)  {  [FE]  AssertionError  [FE]          AssertionError    [CONTEXT]    if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }    [BUGGY]  }  else  if(o  instanceof  String)  {  [BUGGY]    return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	replace	}  else  if(o  instanceof  String)  {	  }    else    if(o    instanceof    JsonArray)    {    	compilable	  [FE]  AssertionError  	4	2	replace
15	[BUG]  [BUGGY]  }  else  if(o  instanceof  JsonType  <  Object>)  {  [CE]  cannot  find  symbol  [FE]            AssertionError    [CONTEXT]    if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }    [BUGGY]  }  else  if(o  instanceof  JsonType  <  Object>)  {  [BUGGY]    return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	replace	}  else  if(o  instanceof  JsonType  <  Object>)  {	  }    else    if(o    instanceof    JsonArray)    {    	non-compiled	[CE]  cannot  find  symbol	4	None	replace
16	[BUG]  [BUGGY]  }  else  if(o  instanceof  JsonObject  ||  o  instanceof  String)  {  }  else  if(o  instanceof  JsonObject  ||  o  instanceof  String)  {  [CE]  missing  return  statement  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]    if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }    [BUGGY]  }  else  if(o  instanceof  JsonObject  ||  o  instanceof  String)  {  }  else  if(o  instanceof  JsonObject  ||  o  instanceof  String)  {  [BUGGY]    return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	replace	}    else    if(o    instanceof    JsonObject    ||    o    instanceof    String)    {    }  else  if(o  instanceof  JsonObject  ||  o  instanceof  String)  {	  	non-compiled	[CE]  missing  return  statement	19	None	add
17	[BUG]  [BUGGY]  }  else  if(o  instanceof  JsonObject  ||  o  instanceof  String)  {  else  if(o  instanceof  JsonObject  ||  o  instanceof  String)  {  [CE]  'else'  without  'if'  [FE]      ArrayIndexOutOfBoundsException    [CONTEXT]    if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }    [BUGGY]  }  else  if(o  instanceof  JsonObject  ||  o  instanceof  String)  {  else  if(o  instanceof  JsonObject  ||  o  instanceof  String)  {  [BUGGY]    return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	replace	}    else    if(o    instanceof    JsonObject    ||    o    instanceof    String)    {    else  if(o  instanceof  JsonObject  ||  o  instanceof  String)  {	  	non-compiled	[CE]  'else'  without  'if'	19	None	add
18	[BUG]  [BUGGY]  }  else  if(o  instanceof  JsonObject  ||  o  instanceof  String)  {  }  else  if(o  instanceof  JsonObject  ||  o  instanceof  String)  <  return  JsonToken.BEGIN_OBJECT;  [CE]  illegal  start  of  type  [FE]        ArrayIndexOutOfBoundsException    [CONTEXT]    if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }    [BUGGY]  }  else  if(o  instanceof  JsonObject  ||  o  instanceof  String)  {  }  else  if(o  instanceof  JsonObject  ||  o  instanceof  String)  <  return  JsonToken.BEGIN_OBJECT;  [BUGGY]    return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	replace	}    else    if(o    instanceof    JsonObject    ||    o    instanceof    String)    {    }  else  if(o  instanceof  JsonObject  ||  o  instanceof  String)  <  return  JsonToken.BEGIN_OBJECT;	  	non-compiled	[CE]  illegal  start  of  type	19	None	add
19	[BUG]  [BUGGY]  }  else  if(o  instanceof  JsonObject  ||  o  instanceof  String)  {  }  else  if(o  instanceof  JsonObject  ||  o  instanceof  String)  {  return  JsonToken.BEGIN_OBJECT;  }  else  if(o  instanceof  JsonObject  ||  o  instanceof  String)  {  [CE]  missing  return  statement  [FE]          ArrayIndexOutOfBoundsException    [CONTEXT]    if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }    [BUGGY]  }  else  if(o  instanceof  JsonObject  ||  o  instanceof  String)  {  }  else  if(o  instanceof  JsonObject  ||  o  instanceof  String)  {  return  JsonToken.BEGIN_OBJECT;  }  else  if(o  instanceof  JsonObject  ||  o  instanceof  String)  {  [BUGGY]    return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	replace	}    else    if(o    instanceof    JsonObject    ||    o    instanceof    String)    {    }  else  if(o  instanceof  JsonObject  ||  o  instanceof  String)  {  return  JsonToken.BEGIN_OBJECT;  }  else  if(o  instanceof  JsonObject  ||  o  instanceof  String)  {	  	non-compiled	[CE]  missing  return  statement	19	None	add
20	[BUG]  [BUGGY]  }  else  if(o  instanceof  JsonObject  ||  o  instanceof  String)  {  }  else  if(o  instanceof  JsonObject  ||  o  instanceof  String)  <  return  JsonToken.BEGIN_OBJECT;  }  else  if(o  instanceof  JsonObject  ||  o  instanceof  String)  {  [CE]  illegal  start  of  type  [FE]            ArrayIndexOutOfBoundsException    [CONTEXT]    if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }    [BUGGY]  }  else  if(o  instanceof  JsonObject  ||  o  instanceof  String)  {  }  else  if(o  instanceof  JsonObject  ||  o  instanceof  String)  <  return  JsonToken.BEGIN_OBJECT;  }  else  if(o  instanceof  JsonObject  ||  o  instanceof  String)  {  [BUGGY]    return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	replace	}    else    if(o    instanceof    JsonObject    ||    o    instanceof    String)    {    }  else  if(o  instanceof  JsonObject  ||  o  instanceof  String)  <  return  JsonToken.BEGIN_OBJECT;  }  else  if(o  instanceof  JsonObject  ||  o  instanceof  String)  {	  	non-compiled	[CE]  illegal  start  of  type	19	None	add
21	[BUG]  [BUGGY]  }  else  if(o  instanceof  JsonObject  ||  o  instanceof  String)  {  <  }  else  if(o  instanceof  JsonObject  ||  o  instanceof  String)  {  [CE]  illegal  start  of  type  [FE]              ArrayIndexOutOfBoundsException    [CONTEXT]    if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }    [BUGGY]  }  else  if(o  instanceof  JsonObject  ||  o  instanceof  String)  {  <  }  else  if(o  instanceof  JsonObject  ||  o  instanceof  String)  {  [BUGGY]    return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	replace	}    else    if(o    instanceof    JsonObject    ||    o    instanceof    String)    {    <  }  else  if(o  instanceof  JsonObject  ||  o  instanceof  String)  {	  	non-compiled	[CE]  illegal  start  of  type	19	None	add
22	[BUG]  [BUGGY]  }  else  if(o  instanceof  JsonObject  ||  o  instanceof  String)  {  }  else  if(o  instanceof  JsonObject  ||  o  instanceof  String)  {  return  JsonToken.BEGIN_OBJECT;  }  else  if(o  instanceof  JsonObject)  {  [CE]  missing  return  statement  [FE]                ArrayIndexOutOfBoundsException    [CONTEXT]    if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }    [BUGGY]  }  else  if(o  instanceof  JsonObject  ||  o  instanceof  String)  {  }  else  if(o  instanceof  JsonObject  ||  o  instanceof  String)  {  return  JsonToken.BEGIN_OBJECT;  }  else  if(o  instanceof  JsonObject)  {  [BUGGY]    return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	replace	}    else    if(o    instanceof    JsonObject    ||    o    instanceof    String)    {    }  else  if(o  instanceof  JsonObject  ||  o  instanceof  String)  {  return  JsonToken.BEGIN_OBJECT;  }  else  if(o  instanceof  JsonObject)  {	  	non-compiled	[CE]  missing  return  statement	19	None	add
23	[BUG]  [BUGGY]  }  else  if(o  instanceof  JsonObject  ||  o  instanceof  JsonArray)  {  }  else  if(o  instanceof  JsonObject  ||  o  instanceof  JsonArray)  {  [CE]  missing  return  statement  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]    if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }    [BUGGY]  }  else  if(o  instanceof  JsonObject  ||  o  instanceof  JsonArray)  {  }  else  if(o  instanceof  JsonObject  ||  o  instanceof  JsonArray)  {  [BUGGY]    return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	replace	}    else    if(o    instanceof    JsonObject    ||    o    instanceof    JsonArray)    {    }  else  if(o  instanceof  JsonObject  ||  o  instanceof  JsonArray)  {	  	non-compiled	[CE]  missing  return  statement	16	None	add
24	[BUG]  [BUGGY]  }  else  if(o  instanceof  JsonObject  ||  o  instanceof  JsonArray)  {  else  if(o  instanceof  JsonObject  ||  o  instanceof  JsonArray)  {  [CE]  'else'  without  'if'  [FE]      ArrayIndexOutOfBoundsException    [CONTEXT]    if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }    [BUGGY]  }  else  if(o  instanceof  JsonObject  ||  o  instanceof  JsonArray)  {  else  if(o  instanceof  JsonObject  ||  o  instanceof  JsonArray)  {  [BUGGY]    return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	replace	}    else    if(o    instanceof    JsonObject    ||    o    instanceof    JsonArray)    {    else  if(o  instanceof  JsonObject  ||  o  instanceof  JsonArray)  {	  	non-compiled	[CE]  'else'  without  'if'	16	None	add
25	[BUG]  [BUGGY]  }  else  if(o  instanceof  JsonObject  ||  o  instanceof  JsonArray)  {  }  else  if(o  instanceof  JsonObject  ||  o  instanceof  JsonArray)  <  return  JsonToken.BEGIN_OBJECT;  [CE]  illegal  start  of  type  [FE]        ArrayIndexOutOfBoundsException    [CONTEXT]    if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }    [BUGGY]  }  else  if(o  instanceof  JsonObject  ||  o  instanceof  JsonArray)  {  }  else  if(o  instanceof  JsonObject  ||  o  instanceof  JsonArray)  <  return  JsonToken.BEGIN_OBJECT;  [BUGGY]    return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	replace	}    else    if(o    instanceof    JsonObject    ||    o    instanceof    JsonArray)    {    }  else  if(o  instanceof  JsonObject  ||  o  instanceof  JsonArray)  <  return  JsonToken.BEGIN_OBJECT;	  	non-compiled	[CE]  illegal  start  of  type	16	None	add
26	[BUG]  [BUGGY]  }  else  if(o  instanceof  JsonObject  ||  o  instanceof  JsonArray)  {  }  else  if(o  instanceof  JsonObject  ||  o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_OBJECT;  }  else  if(o  instanceof  JsonObject  ||  o  instanceof  JsonArray)  {  [CE]  missing  return  statement  [FE]          ArrayIndexOutOfBoundsException    [CONTEXT]    if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }    [BUGGY]  }  else  if(o  instanceof  JsonObject  ||  o  instanceof  JsonArray)  {  }  else  if(o  instanceof  JsonObject  ||  o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_OBJECT;  }  else  if(o  instanceof  JsonObject  ||  o  instanceof  JsonArray)  {  [BUGGY]    return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	replace	}    else    if(o    instanceof    JsonObject    ||    o    instanceof    JsonArray)    {    }  else  if(o  instanceof  JsonObject  ||  o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_OBJECT;  }  else  if(o  instanceof  JsonObject  ||  o  instanceof  JsonArray)  {	  	non-compiled	[CE]  missing  return  statement	16	None	add
27	[BUG]  [BUGGY]  }  else  if(o  instanceof  JsonObject  ||  o  instanceof  JsonArray)  {  <  }  else  if(o  instanceof  JsonObject  ||  o  instanceof  JsonArray)  {  [CE]  illegal  start  of  type  [FE]            ArrayIndexOutOfBoundsException    [CONTEXT]    if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }    [BUGGY]  }  else  if(o  instanceof  JsonObject  ||  o  instanceof  JsonArray)  {  <  }  else  if(o  instanceof  JsonObject  ||  o  instanceof  JsonArray)  {  [BUGGY]    return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	replace	}    else    if(o    instanceof    JsonObject    ||    o    instanceof    JsonArray)    {    <  }  else  if(o  instanceof  JsonObject  ||  o  instanceof  JsonArray)  {	  	non-compiled	[CE]  illegal  start  of  type	16	None	add
28	[BUG]  [BUGGY]  }  else  if(o  instanceof  JsonObject  ||  o  instanceof  JsonArray)  {  }  else  if(o  instanceof  JsonObject  ||  o  instanceof  JsonArray)  <  return  JsonToken.BEGIN_OBJECT;  }  else  if(o  instanceof  JsonObject  ||  o  instanceof  JsonArray)  {  [CE]  illegal  start  of  type  [FE]              ArrayIndexOutOfBoundsException    [CONTEXT]    if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }    [BUGGY]  }  else  if(o  instanceof  JsonObject  ||  o  instanceof  JsonArray)  {  }  else  if(o  instanceof  JsonObject  ||  o  instanceof  JsonArray)  <  return  JsonToken.BEGIN_OBJECT;  }  else  if(o  instanceof  JsonObject  ||  o  instanceof  JsonArray)  {  [BUGGY]    return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	replace	}    else    if(o    instanceof    JsonObject    ||    o    instanceof    JsonArray)    {    }  else  if(o  instanceof  JsonObject  ||  o  instanceof  JsonArray)  <  return  JsonToken.BEGIN_OBJECT;  }  else  if(o  instanceof  JsonObject  ||  o  instanceof  JsonArray)  {	  	non-compiled	[CE]  illegal  start  of  type	16	None	add
29	[BUG]  [BUGGY]  }  else  if(o  instanceof  JsonObject  ||  o  instanceof  JsonArray)  {  }  else  if(o  instanceof  JsonObject  ||  o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_OBJECT;  }  else  if(o  instanceof  JsonObject)  {  [CE]  missing  return  statement  [FE]                ArrayIndexOutOfBoundsException    [CONTEXT]    if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }    [BUGGY]  }  else  if(o  instanceof  JsonObject  ||  o  instanceof  JsonArray)  {  }  else  if(o  instanceof  JsonObject  ||  o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_OBJECT;  }  else  if(o  instanceof  JsonObject)  {  [BUGGY]    return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	replace	}    else    if(o    instanceof    JsonObject    ||    o    instanceof    JsonArray)    {    }  else  if(o  instanceof  JsonObject  ||  o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_OBJECT;  }  else  if(o  instanceof  JsonObject)  {	  	non-compiled	[CE]  missing  return  statement	16	None	add
30	[BUG]  [BUGGY]  }  else  if(o  instanceof  JsonObject  <  =)  {  [CE]  illegal  start  of  type  [FE]        ArrayIndexOutOfBoundsException    [CONTEXT]    if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }    [BUGGY]  }  else  if(o  instanceof  JsonObject  <  =)  {  [BUGGY]    return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	replace	}  else  if(o  instanceof  JsonObject  <  =)  {	  }    else    if(o    instanceof    JsonObject    {    	non-compiled	[CE]  illegal  start  of  type	18	None	replace
31	[BUG]  [BUGGY]  }  else  if(o  instanceof  JsonObject  ==  {  [CE]  illegal  start  of  expression  [FE]          ArrayIndexOutOfBoundsException    [CONTEXT]    if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }    [BUGGY]  }  else  if(o  instanceof  JsonObject  ==  {  [BUGGY]    return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	replace	}  else  if(o  instanceof  JsonObject  ==  {	  }    else    if(o    instanceof    JsonObject    {    	non-compiled	[CE]  illegal  start  of  expression	18	None	replace
32	[BUG]  [BUGGY]  [FE]  ArrayIndexOutOfBoundsException  [FE]            ArrayIndexOutOfBoundsException    [CONTEXT]    if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }    [BUGGY]  }  else  if(o  instanceof  JsonObject!=  false)  {  [BUGGY]    return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	add	}  else  if(o  instanceof  JsonObject!=  false)  {	  }    else    if(o    instanceof    JsonObject    {    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	18	2	replace
33	[BUG]  [BUGGY]  }  else  if(o  instanceof  JsonObject!=  false)  {  [FE]  ArrayIndexOutOfBoundsException  [FE]            ArrayIndexOutOfBoundsException    [CONTEXT]    if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }    [BUGGY]  }  else  if(o  instanceof  JsonObject!=  false)  {  [BUGGY]    return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	replace	}  else  if(o  instanceof  JsonObject!=  false)  {	  }    else    if(o    instanceof    JsonObject    {    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	18	2	replace
34	[BUG]  [BUGGY]  Integer  o  =(Integer)iterator.next();  [CE]  variable  o  is  already  defined  in  method  peek()  [FE]                    ArrayIndexOutOfBoundsException    [CONTEXT]    if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }    [BUGGY]  Integer  o  =(Integer)iterator.next();  [BUGGY]    return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	replace	Integer  o  =(Integer)iterator.next();	      	non-compiled	[CE]  variable  o  is  already  defined  in  method  peek()	11	None	replace
35	[BUG]  [BUGGY]  JsonToken  token  =(JsonToken)iterator.next();  [CE]  unreachable  statement  [FE]                      ArrayIndexOutOfBoundsException    [CONTEXT]    if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }    [BUGGY]  JsonToken  token  =(JsonToken)iterator.next();  [BUGGY]    return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	replace	JsonToken  token  =(JsonToken)iterator.next();	      	non-compiled	[CE]  unreachable  statement	11	None	replace
36	[BUG]  [BUGGY]  if(o  instanceof  JsonArray)  {  if(isObject)  {  push(iterator.next());  return  JsonToken.NAME;  }  [CE]  illegal  start  of  expression  [FE]                        ArrayIndexOutOfBoundsException    [CONTEXT]    if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }    [BUGGY]  if(o  instanceof  JsonArray)  {  if(isObject)  {  push(iterator.next());  return  JsonToken.NAME;  }  [BUGGY]    return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	replace	if(o  instanceof  JsonArray)  {  if(isObject)  {  push(iterator.next());  return  JsonToken.NAME;  }	      	non-compiled	[CE]  illegal  start  of  expression	11	None	replace
37	[BUG]  [BUGGY]  if(o  instanceof  JsonArray)  {  Object[]  stack  =(Object[])o;  push(stack.size()  -  stack.length);  return  JsonToken.NAME;  }  [CE]  cannot  find  symbol  [FE]                          ArrayIndexOutOfBoundsException    [CONTEXT]    if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }    [BUGGY]  if(o  instanceof  JsonArray)  {  Object[]  stack  =(Object[])o;  push(stack.size()  -  stack.length);  return  JsonToken.NAME;  }  [BUGGY]    return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	replace	if(o  instanceof  JsonArray)  {  Object[]  stack  =(Object[])o;  push(stack.size()  -  stack.length);  return  JsonToken.NAME;  }	      	non-compiled	[CE]  cannot  find  symbol	11	None	replace
38	[BUG]  [BUGGY]  if(o  instanceof  JsonArray)  {  Object[]  stack  =(Object[])o;  push(stack.size()  -  stack.length);  return  JsonToken.BOOLEAN;  }  [CE]  cannot  find  symbol  [FE]                            ArrayIndexOutOfBoundsException    [CONTEXT]    if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }    [BUGGY]  if(o  instanceof  JsonArray)  {  Object[]  stack  =(Object[])o;  push(stack.size()  -  stack.length);  return  JsonToken.BOOLEAN;  }  [BUGGY]    return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	replace	if(o  instanceof  JsonArray)  {  Object[]  stack  =(Object[])o;  push(stack.size()  -  stack.length);  return  JsonToken.BOOLEAN;  }	      	non-compiled	[CE]  cannot  find  symbol	11	None	replace
39	[BUG]  [BUGGY]  if(o  instanceof  JsonArray)  {  Object[]  stack  =(Object[])o;  push(stack.size()  -  stack.length);  return  JsonToken.BEGIN_OBJECT;  }  [CE]  cannot  find  symbol  [FE]                              ArrayIndexOutOfBoundsException    [CONTEXT]    if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }    [BUGGY]  if(o  instanceof  JsonArray)  {  Object[]  stack  =(Object[])o;  push(stack.size()  -  stack.length);  return  JsonToken.BEGIN_OBJECT;  }  [BUGGY]    return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	replace	if(o  instanceof  JsonArray)  {  Object[]  stack  =(Object[])o;  push(stack.size()  -  stack.length);  return  JsonToken.BEGIN_OBJECT;  }	      	non-compiled	[CE]  cannot  find  symbol	11	None	replace
40	[BUG]  [BUGGY]  if(o  instanceof  JsonArray)  {  Object[]  stack  =(Object[])o;  push(stack.size()  -  stack.length);  return  JsonToken.BEGIN_ARRAY;  }  [CE]  cannot  find  symbol  [FE]                                ArrayIndexOutOfBoundsException    [CONTEXT]    if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }    [BUGGY]  if(o  instanceof  JsonArray)  {  Object[]  stack  =(Object[])o;  push(stack.size()  -  stack.length);  return  JsonToken.BEGIN_ARRAY;  }  [BUGGY]    return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	replace	if(o  instanceof  JsonArray)  {  Object[]  stack  =(Object[])o;  push(stack.size()  -  stack.length);  return  JsonToken.BEGIN_ARRAY;  }	      	non-compiled	[CE]  cannot  find  symbol	11	None	replace
41	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]    if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }    [BUGGY]  }  else  if(o  instanceof  JsonObject  &&  o  instanceof  JsonArray)  {  [BUGGY]    return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	add	}  else  if(o  instanceof  JsonObject  &&  o  instanceof  JsonArray)  {	  }    else    if(o    instanceof    JsonObject    ||    o    instanceof    JsonArray)    {    	compilable	  [FE]  AssertionError  	17	2	replace
42	[BUG]  [BUGGY]  }  else  if(o  instanceof  JsonObject  &&  o  instanceof  JsonArray)  {  [FE]  AssertionError  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]    if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }    [BUGGY]  }  else  if(o  instanceof  JsonObject  &&  o  instanceof  JsonArray)  {  [BUGGY]    return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	replace	}  else  if(o  instanceof  JsonObject  &&  o  instanceof  JsonArray)  {	  }    else    if(o    instanceof    JsonObject    ||    o    instanceof    JsonArray)    {    	compilable	  [FE]  AssertionError  	17	2	replace
43	[BUG]  [BUGGY]  }  else  if(o  instanceof  JsonObject  ||  o  instanceof  JsonType)  {  [CE]  cannot  find  symbol  [FE]      ArrayIndexOutOfBoundsException    [CONTEXT]    if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }    [BUGGY]  }  else  if(o  instanceof  JsonObject  ||  o  instanceof  JsonType)  {  [BUGGY]    return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	replace	}  else  if(o  instanceof  JsonObject  ||  o  instanceof  JsonType)  {	  }    else    if(o    instanceof    JsonObject    ||    o    instanceof    JsonArray)    {    	non-compiled	[CE]  cannot  find  symbol	17	None	replace
44	[BUG]  [BUGGY]  [FE]  ArrayIndexOutOfBoundsException  [FE]        ArrayIndexOutOfBoundsException    [CONTEXT]    if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }    [BUGGY]  }  else  if(o  instanceof  JsonObject  ||  o  instanceof  JsonNull)  {  [BUGGY]    return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	add	}  else  if(o  instanceof  JsonObject  ||  o  instanceof  JsonNull)  {	  }    else    if(o    instanceof    JsonObject    ||    o    instanceof    JsonArray)    {    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	17	2	replace
45	[BUG]  [BUGGY]  }  else  if(o  instanceof  JsonObject  ||  o  instanceof  JsonNull)  {  [FE]  ArrayIndexOutOfBoundsException  [FE]        ArrayIndexOutOfBoundsException    [CONTEXT]    if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }    [BUGGY]  }  else  if(o  instanceof  JsonObject  ||  o  instanceof  JsonNull)  {  [BUGGY]    return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	replace	}  else  if(o  instanceof  JsonObject  ||  o  instanceof  JsonNull)  {	  }    else    if(o    instanceof    JsonObject    ||    o    instanceof    JsonArray)    {    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	17	2	replace
46	[BUG]  [BUGGY]  }  else  if(o  instanceof  JsonObject  ||  o  instanceof  JsonEnum)  {  [CE]  cannot  find  symbol  [FE]          ArrayIndexOutOfBoundsException    [CONTEXT]    if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }    [BUGGY]  }  else  if(o  instanceof  JsonObject  ||  o  instanceof  JsonEnum)  {  [BUGGY]    return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	replace	}  else  if(o  instanceof  JsonObject  ||  o  instanceof  JsonEnum)  {	  }    else    if(o    instanceof    JsonObject    ||    o    instanceof    JsonArray)    {    	non-compiled	[CE]  cannot  find  symbol	17	None	replace
47	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]    if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }    [BUGGY]  }  else  if(o  instanceof  JsonObject  &&  o  instanceof  String)  {  [BUGGY]    return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	add	}  else  if(o  instanceof  JsonObject  &&  o  instanceof  String)  {	  }    else    if(o    instanceof    JsonObject    ||    o    instanceof    String)    {    	compilable	  [FE]  AssertionError  	20	2	replace
48	[BUG]  [BUGGY]  }  else  if(o  instanceof  JsonObject  &&  o  instanceof  String)  {  [FE]  AssertionError  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]    if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }    [BUGGY]  }  else  if(o  instanceof  JsonObject  &&  o  instanceof  String)  {  [BUGGY]    return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	replace	}  else  if(o  instanceof  JsonObject  &&  o  instanceof  String)  {	  }    else    if(o    instanceof    JsonObject    ||    o    instanceof    String)    {    	compilable	  [FE]  AssertionError  	20	2	replace
49	[BUG]  [BUGGY]  [FE]  ArrayIndexOutOfBoundsException  [FE]      ArrayIndexOutOfBoundsException    [CONTEXT]    if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }    [BUGGY]  }  else  if(o  instanceof  String  ||  o  instanceof  JsonObject)  {  [BUGGY]    return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	add	}  else  if(o  instanceof  String  ||  o  instanceof  JsonObject)  {	  }    else    if(o    instanceof    JsonObject    ||    o    instanceof    String)    {    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	20	2	replace
50	[BUG]  [BUGGY]  }  else  if(o  instanceof  String  ||  o  instanceof  JsonObject)  {  [FE]  ArrayIndexOutOfBoundsException  [FE]      ArrayIndexOutOfBoundsException    [CONTEXT]    if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }    [BUGGY]  }  else  if(o  instanceof  String  ||  o  instanceof  JsonObject)  {  [BUGGY]    return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	replace	}  else  if(o  instanceof  String  ||  o  instanceof  JsonObject)  {	  }    else    if(o    instanceof    JsonObject    ||    o    instanceof    String)    {    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	20	2	replace
51	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]        ArrayIndexOutOfBoundsException    [CONTEXT]    if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }    [BUGGY]  }  else  if(o  instanceof  JsonArray  ||  o  instanceof  String)  {  [BUGGY]    return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	add	}  else  if(o  instanceof  JsonArray  ||  o  instanceof  String)  {	  }    else    if(o    instanceof    JsonObject    ||    o    instanceof    String)    {    	compilable	  [FE]  AssertionError  	20	2	replace
52	[BUG]  [BUGGY]  }  else  if(o  instanceof  JsonArray  ||  o  instanceof  String)  {  [FE]  AssertionError  [FE]        ArrayIndexOutOfBoundsException    [CONTEXT]    if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }    [BUGGY]  }  else  if(o  instanceof  JsonArray  ||  o  instanceof  String)  {  [BUGGY]    return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	replace	}  else  if(o  instanceof  JsonArray  ||  o  instanceof  String)  {	  }    else    if(o    instanceof    JsonObject    ||    o    instanceof    String)    {    	compilable	  [FE]  AssertionError  	20	2	replace
53	[BUG]  [BUGGY]  [FE]  ArrayIndexOutOfBoundsException  [FE]          ArrayIndexOutOfBoundsException    [CONTEXT]    if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }    [BUGGY]  }  else  if(o  instanceof  JsonObject  ||  o  instanceof  Boolean)  {  [BUGGY]    return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	add	}  else  if(o  instanceof  JsonObject  ||  o  instanceof  Boolean)  {	  }    else    if(o    instanceof    JsonObject    ||    o    instanceof    String)    {    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	20	2	replace
54	[BUG]  [BUGGY]  }  else  if(o  instanceof  JsonObject  ||  o  instanceof  Boolean)  {  [FE]  ArrayIndexOutOfBoundsException  [FE]          ArrayIndexOutOfBoundsException    [CONTEXT]    if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }    [BUGGY]  }  else  if(o  instanceof  JsonObject  ||  o  instanceof  Boolean)  {  [BUGGY]    return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	replace	}  else  if(o  instanceof  JsonObject  ||  o  instanceof  Boolean)  {	  }    else    if(o    instanceof    JsonObject    ||    o    instanceof    String)    {    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	20	2	replace
55	[BUG]  [BUGGY]  }  else  if(o  instanceof  JsonObject  ||  o  instanceof  String  ||  isObject)  {  [CE]  cannot  find  symbol  isObject  [FE]            ArrayIndexOutOfBoundsException    [CONTEXT]    if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }    [BUGGY]  }  else  if(o  instanceof  JsonObject  ||  o  instanceof  String  ||  isObject)  {  [BUGGY]    return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	replace	}  else  if(o  instanceof  JsonObject  ||  o  instanceof  String  ||  isObject)  {	  }    else    if(o    instanceof    JsonObject    ||    o    instanceof    String)    {    	non-compiled	[CE]  cannot  find  symbol  isObject	20	None	replace
56	[BUG]  [BUGGY]  }  else  if(o  instanceof  JsonObject  ||  o  instanceof  JsonPrimitive)  {  }  else  if(o  instanceof  JsonObject  ||  o  instanceof  JsonPrimitive)  {  [CE]  missing  return  statement  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]    if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }    [BUGGY]  }  else  if(o  instanceof  JsonObject  ||  o  instanceof  JsonPrimitive)  {  }  else  if(o  instanceof  JsonObject  ||  o  instanceof  JsonPrimitive)  {  [BUGGY]    return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	replace	}    else    if(o    instanceof    JsonObject    ||    o    instanceof    JsonPrimitive)    {    }  else  if(o  instanceof  JsonObject  ||  o  instanceof  JsonPrimitive)  {	  	non-compiled	[CE]  missing  return  statement	12	None	add
57	[BUG]  [BUGGY]  }  else  if(o  instanceof  JsonObject  ||  o  instanceof  JsonPrimitive)  {  else  if(o  instanceof  JsonObject  ||  o  instanceof  JsonPrimitive)  {  [CE]  'else'  without  'if'  [FE]      ArrayIndexOutOfBoundsException    [CONTEXT]    if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }    [BUGGY]  }  else  if(o  instanceof  JsonObject  ||  o  instanceof  JsonPrimitive)  {  else  if(o  instanceof  JsonObject  ||  o  instanceof  JsonPrimitive)  {  [BUGGY]    return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	replace	}    else    if(o    instanceof    JsonObject    ||    o    instanceof    JsonPrimitive)    {    else  if(o  instanceof  JsonObject  ||  o  instanceof  JsonPrimitive)  {	  	non-compiled	[CE]  'else'  without  'if'	12	None	add
58	[BUG]  [BUGGY]  }  else  if(o  instanceof  JsonObject  ||  o  instanceof  JsonPrimitive)  {  }  else  if(o  instanceof  JsonObject  ||  o  instanceof  JsonPrimitive)  {  return  JsonToken.BEGIN_OBJECT;  }  else  if(o  instanceof  JsonObject  ||  o  instanceof  JsonPrimitive)  {  [CE]  missing  return  statement  [FE]        ArrayIndexOutOfBoundsException    [CONTEXT]    if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }    [BUGGY]  }  else  if(o  instanceof  JsonObject  ||  o  instanceof  JsonPrimitive)  {  }  else  if(o  instanceof  JsonObject  ||  o  instanceof  JsonPrimitive)  {  return  JsonToken.BEGIN_OBJECT;  }  else  if(o  instanceof  JsonObject  ||  o  instanceof  JsonPrimitive)  {  [BUGGY]    return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	replace	}    else    if(o    instanceof    JsonObject    ||    o    instanceof    JsonPrimitive)    {    }  else  if(o  instanceof  JsonObject  ||  o  instanceof  JsonPrimitive)  {  return  JsonToken.BEGIN_OBJECT;  }  else  if(o  instanceof  JsonObject  ||  o  instanceof  JsonPrimitive)  {	  	non-compiled	[CE]  missing  return  statement	12	None	add
59	[BUG]  [BUGGY]  }  else  if(o  instanceof  JsonObject  ||  o  instanceof  JsonPrimitive)  {  }  else  if(o  instanceof  JsonObject  ||  o  instanceof  JsonPrimitive)  <  return  JsonToken.BEGIN_OBJECT;  [CE]  illegal  start  of  type  [FE]          ArrayIndexOutOfBoundsException    [CONTEXT]    if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }    [BUGGY]  }  else  if(o  instanceof  JsonObject  ||  o  instanceof  JsonPrimitive)  {  }  else  if(o  instanceof  JsonObject  ||  o  instanceof  JsonPrimitive)  <  return  JsonToken.BEGIN_OBJECT;  [BUGGY]    return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	replace	}    else    if(o    instanceof    JsonObject    ||    o    instanceof    JsonPrimitive)    {    }  else  if(o  instanceof  JsonObject  ||  o  instanceof  JsonPrimitive)  <  return  JsonToken.BEGIN_OBJECT;	  	non-compiled	[CE]  illegal  start  of  type	12	None	add
60	[BUG]  [BUGGY]  }  else  if(o  instanceof  JsonObject  ||  o  instanceof  JsonPrimitive)  {  <  JsonObject>  push(iterator.next());  return  JsonToken.BEGIN_OBJECT;  }  else  if(o  instanceof  JsonObject  ||  o  instanceof  JsonPrimitive)  {  [CE]  illegal  start  of  expression  [FE]            ArrayIndexOutOfBoundsException    [CONTEXT]    if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }    [BUGGY]  }  else  if(o  instanceof  JsonObject  ||  o  instanceof  JsonPrimitive)  {  <  JsonObject>  push(iterator.next());  return  JsonToken.BEGIN_OBJECT;  }  else  if(o  instanceof  JsonObject  ||  o  instanceof  JsonPrimitive)  {  [BUGGY]    return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	replace	}    else    if(o    instanceof    JsonObject    ||    o    instanceof    JsonPrimitive)    {    <  JsonObject>  push(iterator.next());  return  JsonToken.BEGIN_OBJECT;  }  else  if(o  instanceof  JsonObject  ||  o  instanceof  JsonPrimitive)  {	  	non-compiled	[CE]  illegal  start  of  expression	12	None	add
61	[BUG]  [BUGGY]  }  else  if(o  instanceof  JsonObject  ||  o  instanceof  JsonPrimitive)  {  }  else  if(o  instanceof  JsonObject  ||  o  instanceof  JsonPrimitive)  <  return  JsonToken.BEGIN_OBJECT;  }  else  if(o  instanceof  JsonObject  ||  o  instanceof  JsonPrimitive)  {  [CE]  illegal  start  of  type  [FE]              ArrayIndexOutOfBoundsException    [CONTEXT]    if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }    [BUGGY]  }  else  if(o  instanceof  JsonObject  ||  o  instanceof  JsonPrimitive)  {  }  else  if(o  instanceof  JsonObject  ||  o  instanceof  JsonPrimitive)  <  return  JsonToken.BEGIN_OBJECT;  }  else  if(o  instanceof  JsonObject  ||  o  instanceof  JsonPrimitive)  {  [BUGGY]    return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	replace	}    else    if(o    instanceof    JsonObject    ||    o    instanceof    JsonPrimitive)    {    }  else  if(o  instanceof  JsonObject  ||  o  instanceof  JsonPrimitive)  <  return  JsonToken.BEGIN_OBJECT;  }  else  if(o  instanceof  JsonObject  ||  o  instanceof  JsonPrimitive)  {	  	non-compiled	[CE]  illegal  start  of  type	12	None	add
62	[BUG]  [BUGGY]  }  else  if(o  instanceof  JsonObject  ||  o  instanceof  JsonPrimitive)  {  }  else  if(o  instanceof  JsonObject  ||  o  instanceof  JsonPrimitive)  {  return  JsonToken.BEGIN_OBJECT;  }  else  if(o  instanceof  JsonObject)  {  [CE]  missing  return  statement  [FE]                ArrayIndexOutOfBoundsException    [CONTEXT]    if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }    [BUGGY]  }  else  if(o  instanceof  JsonObject  ||  o  instanceof  JsonPrimitive)  {  }  else  if(o  instanceof  JsonObject  ||  o  instanceof  JsonPrimitive)  {  return  JsonToken.BEGIN_OBJECT;  }  else  if(o  instanceof  JsonObject)  {  [BUGGY]    return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	replace	}    else    if(o    instanceof    JsonObject    ||    o    instanceof    JsonPrimitive)    {    }  else  if(o  instanceof  JsonObject  ||  o  instanceof  JsonPrimitive)  {  return  JsonToken.BEGIN_OBJECT;  }  else  if(o  instanceof  JsonObject)  {	  	non-compiled	[CE]  missing  return  statement	12	None	add
63	[BUG]  [BUGGY]  [FE]  ArrayIndexOutOfBoundsException  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]    if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }    [BUGGY]  }  else  if(!(o  instanceof  String))  {  [BUGGY]    return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	add	}  else  if(!(o  instanceof  String))  {	  }    else    if(!(o    instanceof    JsonArray))    {    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	10	2	replace
64	[BUG]  [BUGGY]  }  else  if(!(o  instanceof  String))  {  [FE]  ArrayIndexOutOfBoundsException  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]    if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }    [BUGGY]  }  else  if(!(o  instanceof  String))  {  [BUGGY]    return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	replace	}  else  if(!(o  instanceof  String))  {	  }    else    if(!(o    instanceof    JsonArray))    {    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	10	2	replace
65	[BUG]  [BUGGY]  }  else  if(!(o  instanceof  JsonType))  {  [CE]  cannot  find  symbol  [FE]      ArrayIndexOutOfBoundsException    [CONTEXT]    if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }    [BUGGY]  }  else  if(!(o  instanceof  JsonType))  {  [BUGGY]    return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	replace	}  else  if(!(o  instanceof  JsonType))  {	  }    else    if(!(o    instanceof    JsonArray))    {    	non-compiled	[CE]  cannot  find  symbol	10	None	replace
66	[BUG]  [BUGGY]  }  else  if(!(o  instanceof  JsonArray)&&  isObject)  {  [CE]  cannot  find  symbol  isObject  [FE]        ArrayIndexOutOfBoundsException    [CONTEXT]    if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }    [BUGGY]  }  else  if(!(o  instanceof  JsonArray)&&  isObject)  {  [BUGGY]    return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	replace	}  else  if(!(o  instanceof  JsonArray)&&  isObject)  {	  }    else    if(!(o    instanceof    JsonArray))    {    	non-compiled	[CE]  cannot  find  symbol  isObject	10	None	replace
67	[BUG]  [BUGGY]  [FE]  ArrayIndexOutOfBoundsException  [FE]          ArrayIndexOutOfBoundsException    [CONTEXT]    if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }    [BUGGY]  }  else  if(!(o  instanceof  JsonNull))  {  [BUGGY]    return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	add	}  else  if(!(o  instanceof  JsonNull))  {	  }    else    if(!(o    instanceof    JsonArray))    {    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	10	2	replace
68	[BUG]  [BUGGY]  }  else  if(!(o  instanceof  JsonNull))  {  [FE]  ArrayIndexOutOfBoundsException  [FE]          ArrayIndexOutOfBoundsException    [CONTEXT]    if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }    [BUGGY]  }  else  if(!(o  instanceof  JsonNull))  {  [BUGGY]    return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	replace	}  else  if(!(o  instanceof  JsonNull))  {	  }    else    if(!(o    instanceof    JsonArray))    {    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	10	2	replace
69	[BUG]  [BUGGY]  }  else  if(o  instanceof  JsonNull)  {  }  else  if(o  instanceof  JsonNull)  {  [CE]  missing  return  statement  [FE]    AssertionError    [CONTEXT]    if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }    [BUGGY]  }  else  if(o  instanceof  JsonNull)  {  }  else  if(o  instanceof  JsonNull)  {  [BUGGY]    return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	replace	}    else    if(o    instanceof    JsonNull)    {    }  else  if(o  instanceof  JsonNull)  {	  	non-compiled	[CE]  missing  return  statement	5	None	add
70	[BUG]  [BUGGY]  }  else  if(o  instanceof  JsonNull)  {  }  else  if(o  instanceof  JsonNull  ||  o  instanceof  JsonNull)  {  [CE]  missing  return  statement  [FE]      AssertionError    [CONTEXT]    if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }    [BUGGY]  }  else  if(o  instanceof  JsonNull)  {  }  else  if(o  instanceof  JsonNull  ||  o  instanceof  JsonNull)  {  [BUGGY]    return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	replace	}    else    if(o    instanceof    JsonNull)    {    }  else  if(o  instanceof  JsonNull  ||  o  instanceof  JsonNull)  {	  	non-compiled	[CE]  missing  return  statement	5	None	add
71	[BUG]  [BUGGY]  }  else  if(o  instanceof  JsonNull)  {  else  if(o  instanceof  JsonNull)  {  [CE]  'else'  without  'if'  [FE]        AssertionError    [CONTEXT]    if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }    [BUGGY]  }  else  if(o  instanceof  JsonNull)  {  else  if(o  instanceof  JsonNull)  {  [BUGGY]    return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	replace	}    else    if(o    instanceof    JsonNull)    {    else  if(o  instanceof  JsonNull)  {	  	non-compiled	[CE]  'else'  without  'if'	5	None	add
72	[BUG]  [BUGGY]  }  else  if(o  instanceof  JsonNull)  {  }  else  if(o  instanceof  JsonNull)  <  return  JsonToken.BEGIN_OBJECT;  [CE]  illegal  start  of  type  [FE]          AssertionError    [CONTEXT]    if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }    [BUGGY]  }  else  if(o  instanceof  JsonNull)  {  }  else  if(o  instanceof  JsonNull)  <  return  JsonToken.BEGIN_OBJECT;  [BUGGY]    return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	replace	}    else    if(o    instanceof    JsonNull)    {    }  else  if(o  instanceof  JsonNull)  <  return  JsonToken.BEGIN_OBJECT;	  	non-compiled	[CE]  illegal  start  of  type	5	None	add
73	[BUG]  [BUGGY]  }  else  if(o  instanceof  JsonNull)  {  return  JsonToken.BEGIN_OBJECT;  }  else  if(o  instanceof  JsonNull)  {  [CE]  missing  return  statement  [FE]            AssertionError    [CONTEXT]    if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }    [BUGGY]  }  else  if(o  instanceof  JsonNull)  {  return  JsonToken.BEGIN_OBJECT;  }  else  if(o  instanceof  JsonNull)  {  [BUGGY]    return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	replace	}    else    if(o    instanceof    JsonNull)    {    return  JsonToken.BEGIN_OBJECT;  }  else  if(o  instanceof  JsonNull)  {	  	non-compiled	[CE]  missing  return  statement	5	None	add
74	[BUG]  [BUGGY]  }  else  if(o  instanceof  JsonNull)  {  }  else  if(o  instanceof  JsonNull)  <  return  JsonToken.NUMBER_OBJECT;  [CE]  illegal  start  of  type  [FE]              AssertionError    [CONTEXT]    if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }    [BUGGY]  }  else  if(o  instanceof  JsonNull)  {  }  else  if(o  instanceof  JsonNull)  <  return  JsonToken.NUMBER_OBJECT;  [BUGGY]    return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	replace	}    else    if(o    instanceof    JsonNull)    {    }  else  if(o  instanceof  JsonNull)  <  return  JsonToken.NUMBER_OBJECT;	  	non-compiled	[CE]  illegal  start  of  type	5	None	add
75	[BUG]  [BUGGY]  }  else  if(o  instanceof  JsonNull)  {  <  }  else  if(o  instanceof  JsonNull)  {  [CE]  illegal  start  of  type  [FE]                AssertionError    [CONTEXT]    if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }    [BUGGY]  }  else  if(o  instanceof  JsonNull)  {  <  }  else  if(o  instanceof  JsonNull)  {  [BUGGY]    return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	replace	}    else    if(o    instanceof    JsonNull)    {    <  }  else  if(o  instanceof  JsonNull)  {	  	non-compiled	[CE]  illegal  start  of  type	5	None	add
76	[BUG]  [BUGGY]  }  else  if(o  instanceof  JsonNull)  {  }  else  if(o  instanceof  JsonNull  ||!(o  instanceof  JsonNull))  {  [CE]  missing  return  statement  [FE]                  AssertionError    [CONTEXT]    if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }    [BUGGY]  }  else  if(o  instanceof  JsonNull)  {  }  else  if(o  instanceof  JsonNull  ||!(o  instanceof  JsonNull))  {  [BUGGY]    return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	replace	}    else    if(o    instanceof    JsonNull)    {    }  else  if(o  instanceof  JsonNull  ||!(o  instanceof  JsonNull))  {	  	non-compiled	[CE]  missing  return  statement	5	None	add
77	[BUG]  [BUGGY]  }  else  if(o  instanceof  JsonArray  <?>)  {  [CE]  type  JsonArray  does  not  take  parameters  [FE]            ArrayIndexOutOfBoundsException    [CONTEXT]    if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }    [BUGGY]  }  else  if(o  instanceof  JsonArray  <?>)  {  [BUGGY]    return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	replace	}  else  if(o  instanceof  JsonArray  <?>)  {	  }    else    if(o    instanceof    JsonObject    <?>)    {    	non-compiled	[CE]  type  JsonArray  does  not  take  parameters	15	None	replace
78	[BUG]  [BUGGY]  }  else  if(o  instanceof  JsonObject  <?>  &&  isObject)  {  [CE]  type  JsonObject  does  not  take  parameters  [FE]              ArrayIndexOutOfBoundsException    [CONTEXT]    if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }    [BUGGY]  }  else  if(o  instanceof  JsonObject  <?>  &&  isObject)  {  [BUGGY]    return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	replace	}  else  if(o  instanceof  JsonObject  <?>  &&  isObject)  {	  }    else    if(o    instanceof    JsonObject    <?>)    {    	non-compiled	[CE]  type  JsonObject  does  not  take  parameters	15	None	replace
79	[BUG]  [BUGGY]  }  else  if(!(o  instanceof  JsonObject  <?>))  {  [CE]  type  JsonObject  does  not  take  parameters  [FE]                ArrayIndexOutOfBoundsException    [CONTEXT]    if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }    [BUGGY]  }  else  if(!(o  instanceof  JsonObject  <?>))  {  [BUGGY]    return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	replace	}  else  if(!(o  instanceof  JsonObject  <?>))  {	  }    else    if(o    instanceof    JsonObject    <?>)    {    	non-compiled	[CE]  type  JsonObject  does  not  take  parameters	15	None	replace
80	[BUG]  [BUGGY]  }  else  if(o  instanceof  JsonNumber  <?>)  {  [CE]  cannot  find  symbol  [FE]                  ArrayIndexOutOfBoundsException    [CONTEXT]    if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }    [BUGGY]  }  else  if(o  instanceof  JsonNumber  <?>)  {  [BUGGY]    return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	replace	}  else  if(o  instanceof  JsonNumber  <?>)  {	  }    else    if(o    instanceof    JsonObject    <?>)    {    	non-compiled	[CE]  cannot  find  symbol	15	None	replace
81	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]                    ArrayIndexOutOfBoundsException    [CONTEXT]    if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }    [BUGGY]  }  else  if(o  instanceof  JsonObject  ==  false)  {  [BUGGY]    return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	add	}  else  if(o  instanceof  JsonObject  ==  false)  {	  }    else    if(o    instanceof    JsonObject    <?>)    {    	compilable	  [FE]  AssertionError  	15	2	replace
82	[BUG]  [BUGGY]  }  else  if(o  instanceof  JsonObject  ==  false)  {  [FE]  AssertionError  [FE]                    ArrayIndexOutOfBoundsException    [CONTEXT]    if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }    [BUGGY]  }  else  if(o  instanceof  JsonObject  ==  false)  {  [BUGGY]    return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	replace	}  else  if(o  instanceof  JsonObject  ==  false)  {	  }    else    if(o    instanceof    JsonObject    <?>)    {    	compilable	  [FE]  AssertionError  	15	2	replace
83	[BUG]  [BUGGY]  }  else  if(!(o  instanceof  JsonArray))  {  }  else  if(!(o  instanceof  JsonArray))  {  [CE]  missing  return  statement  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]    if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }    [BUGGY]  }  else  if(!(o  instanceof  JsonArray))  {  }  else  if(!(o  instanceof  JsonArray))  {  [BUGGY]    return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	replace	}    else    if(!(o    instanceof    JsonArray))    {    }  else  if(!(o  instanceof  JsonArray))  {	  	non-compiled	[CE]  missing  return  statement	9	None	add
84	[BUG]  [BUGGY]  }  else  if(!(o  instanceof  JsonArray))  {  }  else  if(!(o  instanceof  JsonArray))  <  return  JsonToken.BEGIN_OBJECT;  [CE]  illegal  start  of  type  [FE]      ArrayIndexOutOfBoundsException    [CONTEXT]    if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }    [BUGGY]  }  else  if(!(o  instanceof  JsonArray))  {  }  else  if(!(o  instanceof  JsonArray))  <  return  JsonToken.BEGIN_OBJECT;  [BUGGY]    return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	replace	}    else    if(!(o    instanceof    JsonArray))    {    }  else  if(!(o  instanceof  JsonArray))  <  return  JsonToken.BEGIN_OBJECT;	  	non-compiled	[CE]  illegal  start  of  type	9	None	add
85	[BUG]  [BUGGY]  }  else  if(!(o  instanceof  JsonArray))  {  }  else  if(!(o  instanceof  JsonArray)  ||(o  instanceof  JsonArray))  {  [CE]  missing  return  statement  [FE]        ArrayIndexOutOfBoundsException    [CONTEXT]    if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }    [BUGGY]  }  else  if(!(o  instanceof  JsonArray))  {  }  else  if(!(o  instanceof  JsonArray)  ||(o  instanceof  JsonArray))  {  [BUGGY]    return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	replace	}    else    if(!(o    instanceof    JsonArray))    {    }  else  if(!(o  instanceof  JsonArray)  ||(o  instanceof  JsonArray))  {	  	non-compiled	[CE]  missing  return  statement	9	None	add
86	[BUG]  [BUGGY]  }  else  if(!(o  instanceof  JsonArray))  {  <  }  else  if(!(o  instanceof  JsonArray))  {  [CE]  illegal  start  of  type  [FE]          ArrayIndexOutOfBoundsException    [CONTEXT]    if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }    [BUGGY]  }  else  if(!(o  instanceof  JsonArray))  {  <  }  else  if(!(o  instanceof  JsonArray))  {  [BUGGY]    return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	replace	}    else    if(!(o    instanceof    JsonArray))    {    <  }  else  if(!(o  instanceof  JsonArray))  {	  	non-compiled	[CE]  illegal  start  of  type	9	None	add
87	[BUG]  [BUGGY]  }  else  if(!(o  instanceof  JsonArray))  {  }  else  if(!(o  instanceof  JsonArray)&&!(o  instanceof  JsonArray))  {  [CE]  missing  return  statement  [FE]            ArrayIndexOutOfBoundsException    [CONTEXT]    if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }    [BUGGY]  }  else  if(!(o  instanceof  JsonArray))  {  }  else  if(!(o  instanceof  JsonArray)&&!(o  instanceof  JsonArray))  {  [BUGGY]    return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	replace	}    else    if(!(o    instanceof    JsonArray))    {    }  else  if(!(o  instanceof  JsonArray)&&!(o  instanceof  JsonArray))  {	  	non-compiled	[CE]  missing  return  statement	9	None	add
88	[BUG]  [BUGGY]  }  else  if(!(o  instanceof  JsonArray))  {  else  if(!(o  instanceof  JsonArray))  {  [CE]  'else'  without  'if'  [FE]              ArrayIndexOutOfBoundsException    [CONTEXT]    if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }    [BUGGY]  }  else  if(!(o  instanceof  JsonArray))  {  else  if(!(o  instanceof  JsonArray))  {  [BUGGY]    return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	replace	}    else    if(!(o    instanceof    JsonArray))    {    else  if(!(o  instanceof  JsonArray))  {	  	non-compiled	[CE]  'else'  without  'if'	9	None	add
89	[BUG]  [BUGGY]  }  else  if(!(o  instanceof  JsonArray))  {  }  else  if(!(o  instanceof  JsonArray)  ||!(o  instanceof  JsonArray))  {  [CE]  missing  return  statement  [FE]                ArrayIndexOutOfBoundsException    [CONTEXT]    if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }    [BUGGY]  }  else  if(!(o  instanceof  JsonArray))  {  }  else  if(!(o  instanceof  JsonArray)  ||!(o  instanceof  JsonArray))  {  [BUGGY]    return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	replace	}    else    if(!(o    instanceof    JsonArray))    {    }  else  if(!(o  instanceof  JsonArray)  ||!(o  instanceof  JsonArray))  {	  	non-compiled	[CE]  missing  return  statement	9	None	add
90	[BUG]  [BUGGY]  }  else  if(!(o  instanceof  JsonArray))  {  }  else  if(!(o  instanceof  JsonArray))  <  return  JsonToken.BEGIN_ARRAY;  [CE]  illegal  start  of  type  [FE]                  ArrayIndexOutOfBoundsException    [CONTEXT]    if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }    [BUGGY]  }  else  if(!(o  instanceof  JsonArray))  {  }  else  if(!(o  instanceof  JsonArray))  <  return  JsonToken.BEGIN_ARRAY;  [BUGGY]    return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	replace	}    else    if(!(o    instanceof    JsonArray))    {    }  else  if(!(o  instanceof  JsonArray))  <  return  JsonToken.BEGIN_ARRAY;	  	non-compiled	[CE]  illegal  start  of  type	9	None	add
91	[BUG]  [BUGGY]  }  else  if(!(o  instanceof  JsonObject))  {  }  else  if(!(o  instanceof  JsonObject))  {  [CE]  missing  return  statement  [FE]    AssertionError    [CONTEXT]    if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }    [BUGGY]  }  else  if(!(o  instanceof  JsonObject))  {  }  else  if(!(o  instanceof  JsonObject))  {  [BUGGY]    return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	replace	}    else    if(!(o    instanceof    JsonObject))    {    }  else  if(!(o  instanceof  JsonObject))  {	  	non-compiled	[CE]  missing  return  statement	1	None	add
92	[BUG]  [BUGGY]  }  else  if(!(o  instanceof  JsonObject))  {  }  else  if(!(o  instanceof  JsonObject))  <  return  JsonToken.BEGIN_OBJECT;  [CE]  illegal  start  of  type  [FE]      AssertionError    [CONTEXT]    if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }    [BUGGY]  }  else  if(!(o  instanceof  JsonObject))  {  }  else  if(!(o  instanceof  JsonObject))  <  return  JsonToken.BEGIN_OBJECT;  [BUGGY]    return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	replace	}    else    if(!(o    instanceof    JsonObject))    {    }  else  if(!(o  instanceof  JsonObject))  <  return  JsonToken.BEGIN_OBJECT;	  	non-compiled	[CE]  illegal  start  of  type	1	None	add
93	[BUG]  [BUGGY]  }  else  if(!(o  instanceof  JsonObject))  {  }  else  if(!(o  instanceof  JsonObject)&&!(o  instanceof  JsonObject))  {  [CE]  missing  return  statement  [FE]        AssertionError    [CONTEXT]    if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }    [BUGGY]  }  else  if(!(o  instanceof  JsonObject))  {  }  else  if(!(o  instanceof  JsonObject)&&!(o  instanceof  JsonObject))  {  [BUGGY]    return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	replace	}    else    if(!(o    instanceof    JsonObject))    {    }  else  if(!(o  instanceof  JsonObject)&&!(o  instanceof  JsonObject))  {	  	non-compiled	[CE]  missing  return  statement	1	None	add
94	[BUG]  [BUGGY]  }  else  if(!(o  instanceof  JsonObject))  {  }  else  if(!(o  instanceof  JsonObject)  ||(o  instanceof  JsonObject))  {  [CE]  missing  return  statement  [FE]          AssertionError    [CONTEXT]    if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }    [BUGGY]  }  else  if(!(o  instanceof  JsonObject))  {  }  else  if(!(o  instanceof  JsonObject)  ||(o  instanceof  JsonObject))  {  [BUGGY]    return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	replace	}    else    if(!(o    instanceof    JsonObject))    {    }  else  if(!(o  instanceof  JsonObject)  ||(o  instanceof  JsonObject))  {	  	non-compiled	[CE]  missing  return  statement	1	None	add
95	[BUG]  [BUGGY]  }  else  if(!(o  instanceof  JsonObject))  {  else  if(!(o  instanceof  JsonObject))  {  [CE]  'else'  without  'if'  [FE]            AssertionError    [CONTEXT]    if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }    [BUGGY]  }  else  if(!(o  instanceof  JsonObject))  {  else  if(!(o  instanceof  JsonObject))  {  [BUGGY]    return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	replace	}    else    if(!(o    instanceof    JsonObject))    {    else  if(!(o  instanceof  JsonObject))  {	  	non-compiled	[CE]  'else'  without  'if'	1	None	add
96	[BUG]  [BUGGY]  }  else  if(!(o  instanceof  JsonObject))  {  }  else  if(!(o  instanceof  JsonObject)  ||!(o  instanceof  JsonObject))  {  [CE]  missing  return  statement  [FE]              AssertionError    [CONTEXT]    if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }    [BUGGY]  }  else  if(!(o  instanceof  JsonObject))  {  }  else  if(!(o  instanceof  JsonObject)  ||!(o  instanceof  JsonObject))  {  [BUGGY]    return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	replace	}    else    if(!(o    instanceof    JsonObject))    {    }  else  if(!(o  instanceof  JsonObject)  ||!(o  instanceof  JsonObject))  {	  	non-compiled	[CE]  missing  return  statement	1	None	add
97	[BUG]  [BUGGY]  }  else  if(!(o  instanceof  JsonObject))  {  <  }  else  if(!(o  instanceof  JsonObject))  {  [CE]  illegal  start  of  type  [FE]                AssertionError    [CONTEXT]    if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }    [BUGGY]  }  else  if(!(o  instanceof  JsonObject))  {  <  }  else  if(!(o  instanceof  JsonObject))  {  [BUGGY]    return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	replace	}    else    if(!(o    instanceof    JsonObject))    {    <  }  else  if(!(o  instanceof  JsonObject))  {	  	non-compiled	[CE]  illegal  start  of  type	1	None	add
98	[BUG]  [BUGGY]  }  else  if(o  instanceof  JsonArray)  {  }  else  if(o  instanceof  JsonArray)  {  [CE]  missing  return  statement  [FE]    AssertionError    [CONTEXT]    if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }    [BUGGY]  }  else  if(o  instanceof  JsonArray)  {  }  else  if(o  instanceof  JsonArray)  {  [BUGGY]    return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	replace	}    else    if(o    instanceof    JsonArray)    {    }  else  if(o  instanceof  JsonArray)  {	  	non-compiled	[CE]  missing  return  statement	3	None	add
99	[BUG]  [BUGGY]  }  else  if(o  instanceof  JsonArray)  {  }  else  if(o  instanceof  JsonArray  ||  o  instanceof  JsonArray)  {  [CE]  missing  return  statement  [FE]      AssertionError    [CONTEXT]    if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }    [BUGGY]  }  else  if(o  instanceof  JsonArray)  {  }  else  if(o  instanceof  JsonArray  ||  o  instanceof  JsonArray)  {  [BUGGY]    return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	replace	}    else    if(o    instanceof    JsonArray)    {    }  else  if(o  instanceof  JsonArray  ||  o  instanceof  JsonArray)  {	  	non-compiled	[CE]  missing  return  statement	3	None	add
100	[BUG]  [BUGGY]  }  else  if(o  instanceof  JsonArray)  {  }  else  if(o  instanceof  JsonArray)  <  return  JsonToken.BEGIN_OBJECT;  [CE]  illegal  start  of  type  [FE]        AssertionError    [CONTEXT]    if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }    [BUGGY]  }  else  if(o  instanceof  JsonArray)  {  }  else  if(o  instanceof  JsonArray)  <  return  JsonToken.BEGIN_OBJECT;  [BUGGY]    return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	replace	}    else    if(o    instanceof    JsonArray)    {    }  else  if(o  instanceof  JsonArray)  <  return  JsonToken.BEGIN_OBJECT;	  	non-compiled	[CE]  illegal  start  of  type	3	None	add
101	[BUG]  [BUGGY]  }  else  if(o  instanceof  JsonArray)  {  }  else  if(o  instanceof  JsonArray  ||  o  instanceof  JsonObject)  {  [CE]  missing  return  statement  [FE]          AssertionError    [CONTEXT]    if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }    [BUGGY]  }  else  if(o  instanceof  JsonArray)  {  }  else  if(o  instanceof  JsonArray  ||  o  instanceof  JsonObject)  {  [BUGGY]    return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	replace	}    else    if(o    instanceof    JsonArray)    {    }  else  if(o  instanceof  JsonArray  ||  o  instanceof  JsonObject)  {	  	non-compiled	[CE]  missing  return  statement	3	None	add
102	[BUG]  [BUGGY]  }  else  if(o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_OBJECT;  }  else  if(o  instanceof  JsonArray)  {  [CE]  missing  return  statement  [FE]            AssertionError    [CONTEXT]    if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }    [BUGGY]  }  else  if(o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_OBJECT;  }  else  if(o  instanceof  JsonArray)  {  [BUGGY]    return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	replace	}    else    if(o    instanceof    JsonArray)    {    return  JsonToken.BEGIN_OBJECT;  }  else  if(o  instanceof  JsonArray)  {	  	non-compiled	[CE]  missing  return  statement	3	None	add
103	[BUG]  [BUGGY]  }  else  if(o  instanceof  JsonArray)  {  }  else  if(o  instanceof  JsonArray)  <  return  JsonToken.NUMBER_OBJECT;  [CE]  illegal  start  of  type  [FE]              AssertionError    [CONTEXT]    if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }    [BUGGY]  }  else  if(o  instanceof  JsonArray)  {  }  else  if(o  instanceof  JsonArray)  <  return  JsonToken.NUMBER_OBJECT;  [BUGGY]    return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	replace	}    else    if(o    instanceof    JsonArray)    {    }  else  if(o  instanceof  JsonArray)  <  return  JsonToken.NUMBER_OBJECT;	  	non-compiled	[CE]  illegal  start  of  type	3	None	add
104	[BUG]  [BUGGY]  }  else  if(o  instanceof  JsonArray)  {  }  else  if(o  instanceof  JsonArray)  <  return  JsonToken.NUMBER_ARRAY;  [CE]  illegal  start  of  type  [FE]                AssertionError    [CONTEXT]    if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }    [BUGGY]  }  else  if(o  instanceof  JsonArray)  {  }  else  if(o  instanceof  JsonArray)  <  return  JsonToken.NUMBER_ARRAY;  [BUGGY]    return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	replace	}    else    if(o    instanceof    JsonArray)    {    }  else  if(o  instanceof  JsonArray)  <  return  JsonToken.NUMBER_ARRAY;	  	non-compiled	[CE]  illegal  start  of  type	3	None	add
105	[BUG]  [BUGGY]  }  else  if(o  instanceof  JsonArray)  {  }  else  if(o  instanceof  JsonObject)  {  [CE]  missing  return  statement  [FE]                  AssertionError    [CONTEXT]    if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }    [BUGGY]  }  else  if(o  instanceof  JsonArray)  {  }  else  if(o  instanceof  JsonObject)  {  [BUGGY]    return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	replace	}    else    if(o    instanceof    JsonArray)    {    }  else  if(o  instanceof  JsonObject)  {	  	non-compiled	[CE]  missing  return  statement	3	None	add
106	[BUG]  [BUGGY]  }  else  if(!(o  instanceof  JsonObject  instanceof  String))  {  [CE]  unexpected  type  [FE]    AssertionError    [CONTEXT]    if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }    [BUGGY]  }  else  if(!(o  instanceof  JsonObject  instanceof  String))  {  [BUGGY]    return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	replace	}  else  if(!(o  instanceof  JsonObject  instanceof  String))  {	  }    else    if(!(o    instanceof    JsonObject))    {    	non-compiled	[CE]  unexpected  type	2	None	replace
107	[BUG]  [BUGGY]  }  else  if(!(o  instanceof  JsonNumber))  {  [CE]  cannot  find  symbol  [FE]      AssertionError    [CONTEXT]    if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }    [BUGGY]  }  else  if(!(o  instanceof  JsonNumber))  {  [BUGGY]    return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	replace	}  else  if(!(o  instanceof  JsonNumber))  {	  }    else    if(!(o    instanceof    JsonObject))    {    	non-compiled	[CE]  cannot  find  symbol	2	None	replace
108	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]    if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }    [BUGGY]  }  else  if(o  instanceof  JsonObject  &&  o  instanceof  JsonPrimitive)  {  [BUGGY]    return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	add	}  else  if(o  instanceof  JsonObject  &&  o  instanceof  JsonPrimitive)  {	  }    else    if(o    instanceof    JsonObject    ||    o    instanceof    JsonPrimitive)    {    	compilable	  [FE]  AssertionError  	13	2	replace
109	[BUG]  [BUGGY]  }  else  if(o  instanceof  JsonObject  &&  o  instanceof  JsonPrimitive)  {  [FE]  AssertionError  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]    if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }    [BUGGY]  }  else  if(o  instanceof  JsonObject  &&  o  instanceof  JsonPrimitive)  {  [BUGGY]    return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	replace	}  else  if(o  instanceof  JsonObject  &&  o  instanceof  JsonPrimitive)  {	  }    else    if(o    instanceof    JsonObject    ||    o    instanceof    JsonPrimitive)    {    	compilable	  [FE]  AssertionError  	13	2	replace
110	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]      ArrayIndexOutOfBoundsException    [CONTEXT]    if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }    [BUGGY]  }  else  if(o  instanceof  JsonArray  ||  o  instanceof  JsonPrimitive)  {  [BUGGY]    return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	add	}  else  if(o  instanceof  JsonArray  ||  o  instanceof  JsonPrimitive)  {	  }    else    if(o    instanceof    JsonObject    ||    o    instanceof    JsonPrimitive)    {    	compilable	  [FE]  AssertionError  	13	2	replace
111	[BUG]  [BUGGY]  }  else  if(o  instanceof  JsonArray  ||  o  instanceof  JsonPrimitive)  {  [FE]  AssertionError  [FE]      ArrayIndexOutOfBoundsException    [CONTEXT]    if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }    [BUGGY]  }  else  if(o  instanceof  JsonArray  ||  o  instanceof  JsonPrimitive)  {  [BUGGY]    return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	replace	}  else  if(o  instanceof  JsonArray  ||  o  instanceof  JsonPrimitive)  {	  }    else    if(o    instanceof    JsonObject    ||    o    instanceof    JsonPrimitive)    {    	compilable	  [FE]  AssertionError  	13	2	replace
112	[BUG]  [BUGGY]  }  else  if(o  instanceof  JsonNumber  &&  isObject)  {  [CE]  cannot  find  symbol  [FE]                ArrayIndexOutOfBoundsException    [CONTEXT]    if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }    [BUGGY]  }  else  if(o  instanceof  JsonNumber  &&  isObject)  {  [BUGGY]    return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	replace	}  else  if(o  instanceof  JsonNumber  &&  isObject)  {	  }    else    if(o    instanceof    JsonNumber)    {    	non-compiled	[CE]  cannot  find  symbol	8	None	replace
113	[BUG]  [BUGGY]  }  else  if(o  instanceof  JsonNumber  ||  o  instanceof  JsonArray)  {  [CE]  cannot  find  symbol  [FE]                  ArrayIndexOutOfBoundsException    [CONTEXT]    if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }    [BUGGY]  }  else  if(o  instanceof  JsonNumber  ||  o  instanceof  JsonArray)  {  [BUGGY]    return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	replace	}  else  if(o  instanceof  JsonNumber  ||  o  instanceof  JsonArray)  {	  }    else    if(o    instanceof    JsonNumber)    {    	non-compiled	[CE]  cannot  find  symbol	8	None	replace
114	[BUG]  [BUGGY]  }  else  if(o  instanceof  JsonNumber  ||  o  instanceof  JsonObject)  {  [CE]  cannot  find  symbol  [FE]                    ArrayIndexOutOfBoundsException    [CONTEXT]    if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }    [BUGGY]  }  else  if(o  instanceof  JsonNumber  ||  o  instanceof  JsonObject)  {  [BUGGY]    return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	replace	}  else  if(o  instanceof  JsonNumber  ||  o  instanceof  JsonObject)  {	  }    else    if(o    instanceof    JsonNumber)    {    	non-compiled	[CE]  cannot  find  symbol	8	None	replace
115	[BUG]  [BUGGY]  }  else  if(o  instanceof  JsonNumber  ||  o  instanceof  JsonLong)  {  [CE]  cannot  find  symbol  [FE]                      ArrayIndexOutOfBoundsException    [CONTEXT]    if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }    [BUGGY]  }  else  if(o  instanceof  JsonNumber  ||  o  instanceof  JsonLong)  {  [BUGGY]    return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	replace	}  else  if(o  instanceof  JsonNumber  ||  o  instanceof  JsonLong)  {	  }    else    if(o    instanceof    JsonNumber)    {    	non-compiled	[CE]  cannot  find  symbol	8	None	replace
116	[BUG]  [BUGGY]  }  else  if(o  instanceof  JsonNumber  ||  o  instanceof  JsonString)  {  [CE]  cannot  find  symbol  [FE]                        ArrayIndexOutOfBoundsException    [CONTEXT]    if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }    [BUGGY]  }  else  if(o  instanceof  JsonNumber  ||  o  instanceof  JsonString)  {  [BUGGY]    return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	replace	}  else  if(o  instanceof  JsonNumber  ||  o  instanceof  JsonString)  {	  }    else    if(o    instanceof    JsonNumber)    {    	non-compiled	[CE]  cannot  find  symbol	8	None	replace
117	[BUG]  [BUGGY]  }  else  if(o  instanceof  JsonNumber  ||  o  instanceof  JsonPrimitive)  {  [CE]  cannot  find  symbol  [FE]                          ArrayIndexOutOfBoundsException    [CONTEXT]    if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }    [BUGGY]  }  else  if(o  instanceof  JsonNumber  ||  o  instanceof  JsonPrimitive)  {  [BUGGY]    return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	replace	}  else  if(o  instanceof  JsonNumber  ||  o  instanceof  JsonPrimitive)  {	  }    else    if(o    instanceof    JsonNumber)    {    	non-compiled	[CE]  cannot  find  symbol	8	None	replace
118	[BUG]  [BUGGY]  }  else  if(o  instanceof  JsonObject  ==  1)  {  [CE]  incomparable  types:  boolean  and  int  [FE]              ArrayIndexOutOfBoundsException    [CONTEXT]    if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }    [BUGGY]  }  else  if(o  instanceof  JsonObject  ==  1)  {  [BUGGY]    return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	replace	}  else  if(o  instanceof  JsonObject  ==  1)  {	  }    else    if(o    instanceof    JsonObject    <    =    1)    {    	non-compiled	[CE]  incomparable  types:  boolean  and  int	7	None	replace
119	[BUG]  [BUGGY]  }  else  if(o  instanceof  JsonObject  <  1)  {  [CE]  illegal  start  of  type  [FE]                ArrayIndexOutOfBoundsException    [CONTEXT]    if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }    [BUGGY]  }  else  if(o  instanceof  JsonObject  <  1)  {  [BUGGY]    return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	replace	}  else  if(o  instanceof  JsonObject  <  1)  {	  }    else    if(o    instanceof    JsonObject    <    =    1)    {    	non-compiled	[CE]  illegal  start  of  type	7	None	replace
120	[BUG]  [BUGGY]  }  else  if(o  instanceof  JsonObject!=  1)  {  [CE]  incomparable  types:  boolean  and  int  [FE]                  ArrayIndexOutOfBoundsException    [CONTEXT]    if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }    [BUGGY]  }  else  if(o  instanceof  JsonObject!=  1)  {  [BUGGY]    return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	replace	}  else  if(o  instanceof  JsonObject!=  1)  {	  }    else    if(o    instanceof    JsonObject    <    =    1)    {    	non-compiled	[CE]  incomparable  types:  boolean  and  int	7	None	replace
121	[BUG]  [BUGGY]  }  else  if(o  instanceof  JsonObject  >=  1)  {  [CE]  bad  operand  types  for  binary  operator  '>='  [FE]                    ArrayIndexOutOfBoundsException    [CONTEXT]    if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }    [BUGGY]  }  else  if(o  instanceof  JsonObject  >=  1)  {  [BUGGY]    return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	replace	}  else  if(o  instanceof  JsonObject  >=  1)  {	  }    else    if(o    instanceof    JsonObject    <    =    1)    {    	non-compiled	[CE]  bad  operand  types  for  binary  operator  '>='	7	None	replace
122	[BUG]  [BUGGY]  }  else  if(o  instanceof  JsonObject  &&  o  instanceof  JsonNumber)  {  [CE]  cannot  find  symbol  [FE]          ArrayIndexOutOfBoundsException    [CONTEXT]    if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }    [BUGGY]  }  else  if(o  instanceof  JsonObject  &&  o  instanceof  JsonNumber)  {  [BUGGY]    return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	replace	}  else  if(o  instanceof  JsonObject  &&  o  instanceof  JsonNumber)  {	  }    else    if(o    instanceof    JsonObject    ||    o    instanceof    JsonNumber)    {    	non-compiled	[CE]  cannot  find  symbol	14	None	replace
123	[BUG]  [BUGGY]  }  else  if(o  instanceof  JsonObject  ||  o  instanceof  JsonNumber  ||  isObject)  {  [CE]  cannot  find  symbol  [FE]            ArrayIndexOutOfBoundsException    [CONTEXT]    if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }    [BUGGY]  }  else  if(o  instanceof  JsonObject  ||  o  instanceof  JsonNumber  ||  isObject)  {  [BUGGY]    return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	replace	}  else  if(o  instanceof  JsonObject  ||  o  instanceof  JsonNumber  ||  isObject)  {	  }    else    if(o    instanceof    JsonObject    ||    o    instanceof    JsonNumber)    {    	non-compiled	[CE]  cannot  find  symbol	14	None	replace
124	[BUG]  [BUGGY]  }  else  if(o  instanceof  JsonObject  ||  o  instanceof  JsonNumber  ||!(o  instanceof  JsonArray))  {  [CE]  cannot  find  symbol  [FE]              ArrayIndexOutOfBoundsException    [CONTEXT]    if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }    [BUGGY]  }  else  if(o  instanceof  JsonObject  ||  o  instanceof  JsonNumber  ||!(o  instanceof  JsonArray))  {  [BUGGY]    return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	replace	}  else  if(o  instanceof  JsonObject  ||  o  instanceof  JsonNumber  ||!(o  instanceof  JsonArray))  {	  }    else    if(o    instanceof    JsonObject    ||    o    instanceof    JsonNumber)    {    	non-compiled	[CE]  cannot  find  symbol	14	None	replace
125	[BUG]  [BUGGY]  }  else  if(o  instanceof  JsonObject  ||!(o  instanceof  JsonNumber))  {  [CE]  cannot  find  symbol  [FE]                ArrayIndexOutOfBoundsException    [CONTEXT]    if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }    [BUGGY]  }  else  if(o  instanceof  JsonObject  ||!(o  instanceof  JsonNumber))  {  [BUGGY]    return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	replace	}  else  if(o  instanceof  JsonObject  ||!(o  instanceof  JsonNumber))  {	  }    else    if(o    instanceof    JsonObject    ||    o    instanceof    JsonNumber)    {    	non-compiled	[CE]  cannot  find  symbol	14	None	replace
126	[BUG]  [BUGGY]  }  else  if(o  instanceof  JsonObject  ||  o  instanceof  JsonNumber  ||!(o  instanceof  JsonPrimitive))  {  [CE]  cannot  find  symbol  [FE]                  ArrayIndexOutOfBoundsException    [CONTEXT]    if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }    [BUGGY]  }  else  if(o  instanceof  JsonObject  ||  o  instanceof  JsonNumber  ||!(o  instanceof  JsonPrimitive))  {  [BUGGY]    return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	replace	}  else  if(o  instanceof  JsonObject  ||  o  instanceof  JsonNumber  ||!(o  instanceof  JsonPrimitive))  {	  }    else    if(o    instanceof    JsonObject    ||    o    instanceof    JsonNumber)    {    	non-compiled	[CE]  cannot  find  symbol	14	None	replace
127	[BUG]  [BUGGY]  }  else  if(o  instanceof  JsonObject  ||  o  instanceof  JsonNumber  ||!(o  instanceof  JsonNull))  {  [CE]  cannot  find  symbol  [FE]                    ArrayIndexOutOfBoundsException    [CONTEXT]    if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }    [BUGGY]  }  else  if(o  instanceof  JsonObject  ||  o  instanceof  JsonNumber  ||!(o  instanceof  JsonNull))  {  [BUGGY]    return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	replace	}  else  if(o  instanceof  JsonObject  ||  o  instanceof  JsonNumber  ||!(o  instanceof  JsonNull))  {	  }    else    if(o    instanceof    JsonObject    ||    o    instanceof    JsonNumber)    {    	non-compiled	[CE]  cannot  find  symbol	14	None	replace
128	[BUG]  [BUGGY]  }  else  if(o  instanceof  JsonLong)  {  [CE]  cannot  find  symbol  [FE]                ArrayIndexOutOfBoundsException    [CONTEXT]    if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }    [BUGGY]  }  else  if(o  instanceof  JsonLong)  {  [BUGGY]    return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	replace	}  else  if(o  instanceof  JsonLong)  {	  }    else    if(o    instanceof    JsonNumber)    {    	non-compiled	[CE]  cannot  find  symbol	8	None	replace
129	[BUG]  [BUGGY]  }  else  if(o  instanceof  JsonObject  ==  [CE]  illegal  start  of  expression  [FE]        ArrayIndexOutOfBoundsException    [CONTEXT]    if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }    [BUGGY]  }  else  if(o  instanceof  JsonObject  ==  [BUGGY]    return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	replace	}  else  if(o  instanceof  JsonObject  ==	  }    else    if(o    instanceof    JsonObject    {    	non-compiled	[CE]  illegal  start  of  expression	18	None	replace
130	[BUG]  [BUGGY]  }  else  if(o  instanceof  JsonObject  <  =  ')'  expected  [CE]  illegal  start  of  type  [FE]          ArrayIndexOutOfBoundsException    [CONTEXT]    if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }    [BUGGY]  }  else  if(o  instanceof  JsonObject  <  =  ')'  expected  [BUGGY]    return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	replace	}  else  if(o  instanceof  JsonObject  <  =  ')'  expected	  }    else    if(o    instanceof    JsonObject    {    	non-compiled	[CE]  illegal  start  of  type	18	None	replace
131	[BUG]  [BUGGY]  }  else  if(!(o  instanceof  JsonArray))  {  ArrayIndexOutOfBoundsException  e  =(ArrayIndexOutOfBoundsException)iterator.next();  [CE]  cannot  find  symbol  iterator  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]    if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }    [BUGGY]  }  else  if(!(o  instanceof  JsonArray))  {  ArrayIndexOutOfBoundsException  e  =(ArrayIndexOutOfBoundsException)iterator.next();  [BUGGY]    return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	replace	}    else    if(!(o    instanceof    JsonArray))    {    ArrayIndexOutOfBoundsException  e  =(ArrayIndexOutOfBoundsException)iterator.next();	  	non-compiled	[CE]  cannot  find  symbol  iterator	9	None	add
132	[BUG]  [BUGGY]  }  else  if(!(o  instanceof  JsonArray))  {  ArrayIndexOutOfBoundsException  a  =(ArrayIndexOutOfBoundsException)iterator.next();  [CE]  cannot  find  symbol  iterator  [FE]      ArrayIndexOutOfBoundsException    [CONTEXT]    if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }    [BUGGY]  }  else  if(!(o  instanceof  JsonArray))  {  ArrayIndexOutOfBoundsException  a  =(ArrayIndexOutOfBoundsException)iterator.next();  [BUGGY]    return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	replace	}    else    if(!(o    instanceof    JsonArray))    {    ArrayIndexOutOfBoundsException  a  =(ArrayIndexOutOfBoundsException)iterator.next();	  	non-compiled	[CE]  cannot  find  symbol  iterator	9	None	add
133	[BUG]  [BUGGY]  }  else  if(!(o  instanceof  JsonArray))  {  ArrayIndexOutOfBoundsException  e  =  new  ArrayIndexOutOfBoundsException(iterator.next());  [CE]  cannot  find  symbol  iterator  [FE]        ArrayIndexOutOfBoundsException    [CONTEXT]    if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }    [BUGGY]  }  else  if(!(o  instanceof  JsonArray))  {  ArrayIndexOutOfBoundsException  e  =  new  ArrayIndexOutOfBoundsException(iterator.next());  [BUGGY]    return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	replace	}    else    if(!(o    instanceof    JsonArray))    {    ArrayIndexOutOfBoundsException  e  =  new  ArrayIndexOutOfBoundsException(iterator.next());	  	non-compiled	[CE]  cannot  find  symbol  iterator	9	None	add
134	[BUG]  [BUGGY]  }  else  if(!(o  instanceof  JsonArray))  {  ArrayIndexOutOfBoundsException  e  =  new  ArrayIndexOutOfBoundsException(pathNames[0],  pathNames[1]);  [CE]  no  suitable  constructor  found  for  ArrayIndexOutOfBoundsException(String,String)  [FE]          ArrayIndexOutOfBoundsException    [CONTEXT]    if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }    [BUGGY]  }  else  if(!(o  instanceof  JsonArray))  {  ArrayIndexOutOfBoundsException  e  =  new  ArrayIndexOutOfBoundsException(pathNames[0],  pathNames[1]);  [BUGGY]    return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	replace	}    else    if(!(o    instanceof    JsonArray))    {    ArrayIndexOutOfBoundsException  e  =  new  ArrayIndexOutOfBoundsException(pathNames[0],  pathNames[1]);	  	non-compiled	[CE]  no  suitable  constructor  found  for  ArrayIndexOutOfBoundsException(String,String)	9	None	add
135	[BUG]  [BUGGY]  }  else  if(!(o  instanceof  JsonArray))  {  ArrayIndexOutOfBoundsException  e  =  new  ArrayIndexOutOfBoundsException(pathNames[0],  stackSize[1]);  [CE]  array  required,  but  int  found  [FE]            ArrayIndexOutOfBoundsException    [CONTEXT]    if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }    [BUGGY]  }  else  if(!(o  instanceof  JsonArray))  {  ArrayIndexOutOfBoundsException  e  =  new  ArrayIndexOutOfBoundsException(pathNames[0],  stackSize[1]);  [BUGGY]    return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	replace	}    else    if(!(o    instanceof    JsonArray))    {    ArrayIndexOutOfBoundsException  e  =  new  ArrayIndexOutOfBoundsException(pathNames[0],  stackSize[1]);	  	non-compiled	[CE]  array  required,  but  int  found	9	None	add
136	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]    if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }    [BUGGY]  }  else  if(!(o  instanceof  JsonObject  ||  o  instanceof  JsonArray))  {  [BUGGY]    return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	add	}  else  if(!(o  instanceof  JsonObject  ||  o  instanceof  JsonArray))  {	  }    else    if(!(o    instanceof    JsonObject))    {    	compilable	  [FE]  AssertionError  	2	2	replace
137	[BUG]  [BUGGY]  }  else  if(!(o  instanceof  JsonObject  ||  o  instanceof  JsonArray))  {  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]    if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }    [BUGGY]  }  else  if(!(o  instanceof  JsonObject  ||  o  instanceof  JsonArray))  {  [BUGGY]    return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	replace	}  else  if(!(o  instanceof  JsonObject  ||  o  instanceof  JsonArray))  {	  }    else    if(!(o    instanceof    JsonObject))    {    	compilable	  [FE]  AssertionError  	2	2	replace
138	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]    if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }    [BUGGY]  }  else  if(!(o  instanceof  JsonObject  ||  o  instanceof  JsonPrimitive))  {  [BUGGY]    return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	add	}  else  if(!(o  instanceof  JsonObject  ||  o  instanceof  JsonPrimitive))  {	  }    else    if(!(o    instanceof    JsonObject))    {    	compilable	  [FE]  AssertionError  	2	2	replace
139	[BUG]  [BUGGY]  }  else  if(!(o  instanceof  JsonObject  ||  o  instanceof  JsonPrimitive))  {  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]    if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }    [BUGGY]  }  else  if(!(o  instanceof  JsonObject  ||  o  instanceof  JsonPrimitive))  {  [BUGGY]    return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	replace	}  else  if(!(o  instanceof  JsonObject  ||  o  instanceof  JsonPrimitive))  {	  }    else    if(!(o    instanceof    JsonObject))    {    	compilable	  [FE]  AssertionError  	2	2	replace
140	[BUG]  [BUGGY]  }  else  if(!(o  instanceof  JsonObject  ||  o  instanceof  JsonNumber))  {  [CE]  cannot  find  symbol  [FE]        AssertionError    [CONTEXT]    if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }    [BUGGY]  }  else  if(!(o  instanceof  JsonObject  ||  o  instanceof  JsonNumber))  {  [BUGGY]    return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	replace	}  else  if(!(o  instanceof  JsonObject  ||  o  instanceof  JsonNumber))  {	  }    else    if(!(o    instanceof    JsonObject))    {    	non-compiled	[CE]  cannot  find  symbol	2	None	replace
141	[BUG]  [BUGGY]  }  else  if(!(o  instanceof  JsonObject)&&  isObject)  {  [CE]  cannot  find  symbol  isObject  [FE]          AssertionError    [CONTEXT]    if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }    [BUGGY]  }  else  if(!(o  instanceof  JsonObject)&&  isObject)  {  [BUGGY]    return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	replace	}  else  if(!(o  instanceof  JsonObject)&&  isObject)  {	  }    else    if(!(o    instanceof    JsonObject))    {    	non-compiled	[CE]  cannot  find  symbol  isObject	2	None	replace
142	[BUG]  [BUGGY]  }  else  if(o  instanceof  JsonNull  ||!(o  instanceof  JsonNull  &&!(o  instanceof  JsonNull  &&!(o  instanceof  JsonNull  &&!(o  instanceof  JsonNull)))  {  [CE]  [FE]    AssertionError    [CONTEXT]    if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }    [BUGGY]  }  else  if(o  instanceof  JsonNull  ||!(o  instanceof  JsonNull  &&!(o  instanceof  JsonNull  &&!(o  instanceof  JsonNull  &&!(o  instanceof  JsonNull)))  {  [BUGGY]    return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	replace	}  else  if(o  instanceof  JsonNull  ||!(o  instanceof  JsonNull  &&!(o  instanceof  JsonNull  &&!(o  instanceof  JsonNull  &&!(o  instanceof  JsonNull)))  {	  }    else    if(o    instanceof    JsonNull)    {    	non-compiled	[CE]  	6	None	replace
143	[BUG]  [BUGGY]  [FE]  ArrayIndexOutOfBoundsException  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]    if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }    [BUGGY]  }  else  if(o  instanceof  JsonObject  ||  o  instanceof  JsonArray  ||  o  instanceof  JsonPrimitive)  {  [BUGGY]    return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	add	}  else  if(o  instanceof  JsonObject  ||  o  instanceof  JsonArray  ||  o  instanceof  JsonPrimitive)  {	  }    else    if(o    instanceof    JsonObject    ||    o    instanceof    JsonArray)    {    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	17	2	replace
144	[BUG]  [BUGGY]  }  else  if(o  instanceof  JsonObject  ||  o  instanceof  JsonArray  ||  o  instanceof  JsonPrimitive)  {  [FE]  ArrayIndexOutOfBoundsException  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]    if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }    [BUGGY]  }  else  if(o  instanceof  JsonObject  ||  o  instanceof  JsonArray  ||  o  instanceof  JsonPrimitive)  {  [BUGGY]    return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	replace	}  else  if(o  instanceof  JsonObject  ||  o  instanceof  JsonArray  ||  o  instanceof  JsonPrimitive)  {	  }    else    if(o    instanceof    JsonObject    ||    o    instanceof    JsonArray)    {    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	17	2	replace
145	[BUG]  [BUGGY]  [FE]  ArrayIndexOutOfBoundsException  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]    if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }    [BUGGY]  }  else  if(!(o  instanceof  JsonArray  ||  o  instanceof  JsonPrimitive))  {  [BUGGY]    return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	add	}  else  if(!(o  instanceof  JsonArray  ||  o  instanceof  JsonPrimitive))  {	  }    else    if(!(o    instanceof    JsonArray))    {    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	10	2	replace
146	[BUG]  [BUGGY]  }  else  if(!(o  instanceof  JsonArray  ||  o  instanceof  JsonPrimitive))  {  [FE]  ArrayIndexOutOfBoundsException  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]    if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }    [BUGGY]  }  else  if(!(o  instanceof  JsonArray  ||  o  instanceof  JsonPrimitive))  {  [BUGGY]    return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	replace	}  else  if(!(o  instanceof  JsonArray  ||  o  instanceof  JsonPrimitive))  {	  }    else    if(!(o    instanceof    JsonArray))    {    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	10	2	replace
147	[BUG]  [BUGGY]  }  else  if(!(o  instanceof  JsonArray)||  isObject)  {  [CE]  cannot  find  symbol  isObject  [FE]      ArrayIndexOutOfBoundsException    [CONTEXT]    if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }    [BUGGY]  }  else  if(!(o  instanceof  JsonArray)||  isObject)  {  [BUGGY]    return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	replace	}  else  if(!(o  instanceof  JsonArray)||  isObject)  {	  }    else    if(!(o    instanceof    JsonArray))    {    	non-compiled	[CE]  cannot  find  symbol  isObject	10	None	replace
148	[BUG]  [BUGGY]  }  else  if(o  instanceof  JsonObject  ||  o  instanceof  String)  {  ArrayIndexOutOfBoundsException  e  =(ArrayIndexOutOfBoundsException)iterator.next();  [CE]  cannot  find  symbol  iterator  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]    if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }    [BUGGY]  }  else  if(o  instanceof  JsonObject  ||  o  instanceof  String)  {  ArrayIndexOutOfBoundsException  e  =(ArrayIndexOutOfBoundsException)iterator.next();  [BUGGY]    return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	replace	}    else    if(o    instanceof    JsonObject    ||    o    instanceof    String)    {    ArrayIndexOutOfBoundsException  e  =(ArrayIndexOutOfBoundsException)iterator.next();	  	non-compiled	[CE]  cannot  find  symbol  iterator	19	None	add
149	[BUG]  [BUGGY]  }  else  if(o  instanceof  JsonObject  ||  o  instanceof  String)  {  ArrayIndexOutOfBoundsException  e  =  new  ArrayIndexOutOfBoundsException(iterator.next());  [CE]  cannot  find  symbol  iterator  [FE]      ArrayIndexOutOfBoundsException    [CONTEXT]    if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }    [BUGGY]  }  else  if(o  instanceof  JsonObject  ||  o  instanceof  String)  {  ArrayIndexOutOfBoundsException  e  =  new  ArrayIndexOutOfBoundsException(iterator.next());  [BUGGY]    return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	replace	}    else    if(o    instanceof    JsonObject    ||    o    instanceof    String)    {    ArrayIndexOutOfBoundsException  e  =  new  ArrayIndexOutOfBoundsException(iterator.next());	  	non-compiled	[CE]  cannot  find  symbol  iterator	19	None	add
150	[BUG]  [BUGGY]  }  else  if(o  instanceof  JsonObject  ||  o  instanceof  String)  {  ArrayIndexOutOfBoundsException  e  =  new  ArrayIndexOutOfBoundsException(pathNames[0],  pathNames[1]);  [CE]  no  suitable  constructor  found  for  ArrayIndexOutOfBoundsException(String,String)  [FE]        ArrayIndexOutOfBoundsException    [CONTEXT]    if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }    [BUGGY]  }  else  if(o  instanceof  JsonObject  ||  o  instanceof  String)  {  ArrayIndexOutOfBoundsException  e  =  new  ArrayIndexOutOfBoundsException(pathNames[0],  pathNames[1]);  [BUGGY]    return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	replace	}    else    if(o    instanceof    JsonObject    ||    o    instanceof    String)    {    ArrayIndexOutOfBoundsException  e  =  new  ArrayIndexOutOfBoundsException(pathNames[0],  pathNames[1]);	  	non-compiled	[CE]  no  suitable  constructor  found  for  ArrayIndexOutOfBoundsException(String,String)	19	None	add
151	[BUG]  [BUGGY]  [FE]  ArrayIndexOutOfBoundsException  [FE]          ArrayIndexOutOfBoundsException    [CONTEXT]    if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }    [BUGGY]  }  else  if(o  instanceof  JsonObject  ||  o  instanceof  String)  {  return  JsonToken.BEGIN_OBJECT;  [BUGGY]    return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	add	}    else    if(o    instanceof    JsonObject    ||    o    instanceof    String)    {    return  JsonToken.BEGIN_OBJECT;	  	compilable	  [FE]  ArrayIndexOutOfBoundsException  	19	2	add
152	[BUG]  [BUGGY]  }  else  if(o  instanceof  JsonObject  ||  o  instanceof  String)  {  return  JsonToken.BEGIN_OBJECT;  [FE]  ArrayIndexOutOfBoundsException  [FE]          ArrayIndexOutOfBoundsException    [CONTEXT]    if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }    [BUGGY]  }  else  if(o  instanceof  JsonObject  ||  o  instanceof  String)  {  return  JsonToken.BEGIN_OBJECT;  [BUGGY]    return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	replace	}    else    if(o    instanceof    JsonObject    ||    o    instanceof    String)    {    return  JsonToken.BEGIN_OBJECT;	  	compilable	  [FE]  ArrayIndexOutOfBoundsException  	19	2	add
153	[BUG]  [BUGGY]  }  else  if(o  instanceof  JsonNull)  {  }  else  if(o  instanceof  JsonNull)  {  return  JsonToken.BEGIN_OBJECT;  }  else  if(o  instanceof  JsonNull)  {  [CE]  missing  return  statement  [FE]    AssertionError    [CONTEXT]    if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }    [BUGGY]  }  else  if(o  instanceof  JsonNull)  {  }  else  if(o  instanceof  JsonNull)  {  return  JsonToken.BEGIN_OBJECT;  }  else  if(o  instanceof  JsonNull)  {  [BUGGY]    return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	replace	}    else    if(o    instanceof    JsonNull)    {    }  else  if(o  instanceof  JsonNull)  {  return  JsonToken.BEGIN_OBJECT;  }  else  if(o  instanceof  JsonNull)  {	  	non-compiled	[CE]  missing  return  statement	5	None	add
154	[BUG]  [BUGGY]  [FE]  ArrayIndexOutOfBoundsException  [FE]      AssertionError    [CONTEXT]    if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }    [BUGGY]  }  else  if(o  instanceof  JsonNull)  {  return  JsonToken.BEGIN_OBJECT;  [BUGGY]    return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	add	}    else    if(o    instanceof    JsonNull)    {    return  JsonToken.BEGIN_OBJECT;	  	compilable	  [FE]  ArrayIndexOutOfBoundsException  	5	2	add
155	[BUG]  [BUGGY]  }  else  if(o  instanceof  JsonNull)  {  return  JsonToken.BEGIN_OBJECT;  [FE]  ArrayIndexOutOfBoundsException  [FE]      AssertionError    [CONTEXT]    if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }    [BUGGY]  }  else  if(o  instanceof  JsonNull)  {  return  JsonToken.BEGIN_OBJECT;  [BUGGY]    return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	replace	}    else    if(o    instanceof    JsonNull)    {    return  JsonToken.BEGIN_OBJECT;	  	compilable	  [FE]  ArrayIndexOutOfBoundsException  	5	2	add
156	[BUG]  [BUGGY]  }  else  if(!(o  instanceof  JsonObject))  {  object  =(o  instanceof  JsonObject)?  JsonToken.BEGIN_OBJECT  :  JsonToken.BEGIN_OBJECT;  }  else  if(!(o  instanceof  JsonObject))  {  [CE]  cannot  find  symbol  object  [FE]    AssertionError    [CONTEXT]    if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }    [BUGGY]  }  else  if(!(o  instanceof  JsonObject))  {  object  =(o  instanceof  JsonObject)?  JsonToken.BEGIN_OBJECT  :  JsonToken.BEGIN_OBJECT;  }  else  if(!(o  instanceof  JsonObject))  {  [BUGGY]    return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	replace	}    else    if(!(o    instanceof    JsonObject))    {    object  =(o  instanceof  JsonObject)?  JsonToken.BEGIN_OBJECT  :  JsonToken.BEGIN_OBJECT;  }  else  if(!(o  instanceof  JsonObject))  {	  	non-compiled	[CE]  cannot  find  symbol  object	1	None	add
157	[BUG]  [BUGGY]  }  else  if(!(o  instanceof  JsonObject))  {  ((  JsonObject)o).setObject(isObject?  JsonToken.END_OBJECT  :  JsonToken.END_OBJECT);  [CE]  cannot  find  symbol  isObject  [FE]      AssertionError    [CONTEXT]    if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }    [BUGGY]  }  else  if(!(o  instanceof  JsonObject))  {  ((  JsonObject)o).setObject(isObject?  JsonToken.END_OBJECT  :  JsonToken.END_OBJECT);  [BUGGY]    return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	replace	}    else    if(!(o    instanceof    JsonObject))    {    ((  JsonObject)o).setObject(isObject?  JsonToken.END_OBJECT  :  JsonToken.END_OBJECT);	  	non-compiled	[CE]  cannot  find  symbol  isObject	1	None	add
158	[BUG]  [BUGGY]  }  else  if(!(o  instanceof  JsonObject))  {  object  =(o  instanceof  JsonObject)?  JsonToken.BEGIN_OBJECT  :  JsonToken.BEGIN_OBJECT;  [CE]  cannot  find  symbol  object  [FE]        AssertionError    [CONTEXT]    if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }    [BUGGY]  }  else  if(!(o  instanceof  JsonObject))  {  object  =(o  instanceof  JsonObject)?  JsonToken.BEGIN_OBJECT  :  JsonToken.BEGIN_OBJECT;  [BUGGY]    return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	replace	}    else    if(!(o    instanceof    JsonObject))    {    object  =(o  instanceof  JsonObject)?  JsonToken.BEGIN_OBJECT  :  JsonToken.BEGIN_OBJECT;	  	non-compiled	[CE]  cannot  find  symbol  object	1	None	add
159	[BUG]  [BUGGY]  }  else  if(!(o  instanceof  JsonObject))  {  ((  JsonObject)o).setObject(isObject?  JsonToken.BEGIN_OBJECT  :  JsonToken.END_OBJECT);  [CE]  cannot  find  symbol  isObject  [FE]          AssertionError    [CONTEXT]    if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }    [BUGGY]  }  else  if(!(o  instanceof  JsonObject))  {  ((  JsonObject)o).setObject(isObject?  JsonToken.BEGIN_OBJECT  :  JsonToken.END_OBJECT);  [BUGGY]    return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	replace	}    else    if(!(o    instanceof    JsonObject))    {    ((  JsonObject)o).setObject(isObject?  JsonToken.BEGIN_OBJECT  :  JsonToken.END_OBJECT);	  	non-compiled	[CE]  cannot  find  symbol  isObject	1	None	add
160	[BUG]  [BUGGY]  }  else  if(!(o  instanceof  JsonObject))  {  ((  JsonObject)o).setObject(isObject?  JsonToken.BEGIN_OBJECT  :  JsonToken.BEGIN_OBJECT);  }  else  if(!(o  instanceof  JsonObject))  {  [CE]  cannot  find  symbol  isObject  [FE]            AssertionError    [CONTEXT]    if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }    [BUGGY]  }  else  if(!(o  instanceof  JsonObject))  {  ((  JsonObject)o).setObject(isObject?  JsonToken.BEGIN_OBJECT  :  JsonToken.BEGIN_OBJECT);  }  else  if(!(o  instanceof  JsonObject))  {  [BUGGY]    return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	replace	}    else    if(!(o    instanceof    JsonObject))    {    ((  JsonObject)o).setObject(isObject?  JsonToken.BEGIN_OBJECT  :  JsonToken.BEGIN_OBJECT);  }  else  if(!(o  instanceof  JsonObject))  {	  	non-compiled	[CE]  cannot  find  symbol  isObject	1	None	add
161	[BUG]  [BUGGY]  }  else  if(!(o  instanceof  JsonObject))  {  ((  JsonObject)o).setObject(isObject?  JsonToken.BEGIN_OBJECT  :  JsonToken.BEGIN_OBJECT);  [CE]  cannot  find  symbol  isObject  [FE]              AssertionError    [CONTEXT]    if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }    [BUGGY]  }  else  if(!(o  instanceof  JsonObject))  {  ((  JsonObject)o).setObject(isObject?  JsonToken.BEGIN_OBJECT  :  JsonToken.BEGIN_OBJECT);  [BUGGY]    return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	replace	}    else    if(!(o    instanceof    JsonObject))    {    ((  JsonObject)o).setObject(isObject?  JsonToken.BEGIN_OBJECT  :  JsonToken.BEGIN_OBJECT);	  	non-compiled	[CE]  cannot  find  symbol  isObject	1	None	add
162	[BUG]  [BUGGY]  }  else  if(!(o  instanceof  JsonObject))  {  ((  JsonObject)o).setObject(isObject?  JsonToken.BEGIN_OBJECT  :  JsonToken.END_OBJECT);  }  else  if(!(o  instanceof  JsonObject))  {  [CE]  cannot  find  symbol  isObject  [FE]                AssertionError    [CONTEXT]    if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }    [BUGGY]  }  else  if(!(o  instanceof  JsonObject))  {  ((  JsonObject)o).setObject(isObject?  JsonToken.BEGIN_OBJECT  :  JsonToken.END_OBJECT);  }  else  if(!(o  instanceof  JsonObject))  {  [BUGGY]    return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	replace	}    else    if(!(o    instanceof    JsonObject))    {    ((  JsonObject)o).setObject(isObject?  JsonToken.BEGIN_OBJECT  :  JsonToken.END_OBJECT);  }  else  if(!(o  instanceof  JsonObject))  {	  	non-compiled	[CE]  cannot  find  symbol  isObject	1	None	add
163	[BUG]  [BUGGY]  [FE]  ArrayIndexOutOfBoundsException  [FE]    AssertionError    [CONTEXT]    if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }    [BUGGY]  }  else  if(o  instanceof  JsonArray  ||  o  instanceof  JsonObject)  {  [BUGGY]    return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	add	}  else  if(o  instanceof  JsonArray  ||  o  instanceof  JsonObject)  {	  }    else    if(o    instanceof    JsonArray)    {    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	4	2	replace
164	[BUG]  [BUGGY]  }  else  if(o  instanceof  JsonArray  ||  o  instanceof  JsonObject)  {  [FE]  ArrayIndexOutOfBoundsException  [FE]    AssertionError    [CONTEXT]    if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }    [BUGGY]  }  else  if(o  instanceof  JsonArray  ||  o  instanceof  JsonObject)  {  [BUGGY]    return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	replace	}  else  if(o  instanceof  JsonArray  ||  o  instanceof  JsonObject)  {	  }    else    if(o    instanceof    JsonArray)    {    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	4	2	replace
165	[BUG]  [BUGGY]  [FE]  ArrayIndexOutOfBoundsException  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]    if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }    [BUGGY]  }  else  if(o  instanceof  JsonObject  ||  o  instanceof  JsonPrimitive)  {  return  JsonToken.BEGIN_OBJECT;  [BUGGY]    return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	add	}    else    if(o    instanceof    JsonObject    ||    o    instanceof    JsonPrimitive)    {    return  JsonToken.BEGIN_OBJECT;	  	compilable	  [FE]  ArrayIndexOutOfBoundsException  	12	2	add
166	[BUG]  [BUGGY]  }  else  if(o  instanceof  JsonObject  ||  o  instanceof  JsonPrimitive)  {  return  JsonToken.BEGIN_OBJECT;  [FE]  ArrayIndexOutOfBoundsException  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]    if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }    [BUGGY]  }  else  if(o  instanceof  JsonObject  ||  o  instanceof  JsonPrimitive)  {  return  JsonToken.BEGIN_OBJECT;  [BUGGY]    return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	replace	}    else    if(o    instanceof    JsonObject    ||    o    instanceof    JsonPrimitive)    {    return  JsonToken.BEGIN_OBJECT;	  	compilable	  [FE]  ArrayIndexOutOfBoundsException  	12	2	add
167	[BUG]  [BUGGY]  }  else  if(o  instanceof  JsonObject  ||  o  instanceof  JsonPrimitive)  {  instanceof  JsonObject  ||  o  instanceof  JsonPrimitive)  {  [CE]  illegal  start  of  expression  [FE]      ArrayIndexOutOfBoundsException    [CONTEXT]    if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }    [BUGGY]  }  else  if(o  instanceof  JsonObject  ||  o  instanceof  JsonPrimitive)  {  instanceof  JsonObject  ||  o  instanceof  JsonPrimitive)  {  [BUGGY]    return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	replace	}    else    if(o    instanceof    JsonObject    ||    o    instanceof    JsonPrimitive)    {    instanceof  JsonObject  ||  o  instanceof  JsonPrimitive)  {	  	non-compiled	[CE]  illegal  start  of  expression	12	None	add
168	[BUG]  [BUGGY]  }  else  if(o  instanceof  JsonObject  ||  o  instanceof  JsonPrimitive)  {  ArrayIndexOutOfBoundsException  e  =  new  ArrayIndexOutOfBoundsException(pathNames[0],  pathNames[1]);  [CE]  no  suitable  constructor  found  for  ArrayIndexOutOfBoundsException(String,String)  [FE]        ArrayIndexOutOfBoundsException    [CONTEXT]    if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }    [BUGGY]  }  else  if(o  instanceof  JsonObject  ||  o  instanceof  JsonPrimitive)  {  ArrayIndexOutOfBoundsException  e  =  new  ArrayIndexOutOfBoundsException(pathNames[0],  pathNames[1]);  [BUGGY]    return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	replace	}    else    if(o    instanceof    JsonObject    ||    o    instanceof    JsonPrimitive)    {    ArrayIndexOutOfBoundsException  e  =  new  ArrayIndexOutOfBoundsException(pathNames[0],  pathNames[1]);	  	non-compiled	[CE]  no  suitable  constructor  found  for  ArrayIndexOutOfBoundsException(String,String)	12	None	add
169	[BUG]  [BUGGY]  }  else  if(o  instanceof  JsonObject  ||  o  instanceof  JsonPrimitive)  {  ArrayIndexOutOfBoundsException  e  =  new  ArrayIndexOutOfBoundsException(iterator.next());  [CE]  cannot  find  symbol  iterator  [FE]          ArrayIndexOutOfBoundsException    [CONTEXT]    if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }    [BUGGY]  }  else  if(o  instanceof  JsonObject  ||  o  instanceof  JsonPrimitive)  {  ArrayIndexOutOfBoundsException  e  =  new  ArrayIndexOutOfBoundsException(iterator.next());  [BUGGY]    return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	replace	}    else    if(o    instanceof    JsonObject    ||    o    instanceof    JsonPrimitive)    {    ArrayIndexOutOfBoundsException  e  =  new  ArrayIndexOutOfBoundsException(iterator.next());	  	non-compiled	[CE]  cannot  find  symbol  iterator	12	None	add
170	[BUG]  [BUGGY]  }  else  if(o  instanceof  JsonArray)  {  else  if(o  instanceof  JsonArray)  {  [CE]  'else'  without  'if'  [FE]    AssertionError    [CONTEXT]    if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }    [BUGGY]  }  else  if(o  instanceof  JsonArray)  {  else  if(o  instanceof  JsonArray)  {  [BUGGY]    return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	replace	}    else    if(o    instanceof    JsonArray)    {    else  if(o  instanceof  JsonArray)  {	  	non-compiled	[CE]  'else'  without  'if'	3	None	add
171	[BUG]  [BUGGY]  [FE]  ArrayIndexOutOfBoundsException  [FE]      AssertionError    [CONTEXT]    if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }    [BUGGY]  }  else  if(o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_OBJECT;  [BUGGY]    return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	add	}    else    if(o    instanceof    JsonArray)    {    return  JsonToken.BEGIN_OBJECT;	  	compilable	  [FE]  ArrayIndexOutOfBoundsException  	3	2	add
172	[BUG]  [BUGGY]  }  else  if(o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_OBJECT;  [FE]  ArrayIndexOutOfBoundsException  [FE]      AssertionError    [CONTEXT]    if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }    [BUGGY]  }  else  if(o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_OBJECT;  [BUGGY]    return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	replace	}    else    if(o    instanceof    JsonArray)    {    return  JsonToken.BEGIN_OBJECT;	  	compilable	  [FE]  ArrayIndexOutOfBoundsException  	3	2	add
173	[BUG]  [BUGGY]  }  else  if(o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if(o  instanceof  JsonArray)  {  [CE]  missing  return  statement  [FE]        AssertionError    [CONTEXT]    if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }    [BUGGY]  }  else  if(o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if(o  instanceof  JsonArray)  {  [BUGGY]    return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	replace	}    else    if(o    instanceof    JsonArray)    {    return  JsonToken.BEGIN_ARRAY;  }  else  if(o  instanceof  JsonArray)  {	  	non-compiled	[CE]  missing  return  statement	3	None	add
174	[BUG]  [BUGGY]  [FE]  ArrayIndexOutOfBoundsException  [FE]          AssertionError    [CONTEXT]    if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }    [BUGGY]  }  else  if(o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  [BUGGY]    return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	add	}    else    if(o    instanceof    JsonArray)    {    return  JsonToken.BEGIN_ARRAY;	  	compilable	  [FE]  ArrayIndexOutOfBoundsException  	3	2	add
175	[BUG]  [BUGGY]  }  else  if(o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  [FE]  ArrayIndexOutOfBoundsException  [FE]          AssertionError    [CONTEXT]    if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }    [BUGGY]  }  else  if(o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  [BUGGY]    return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	replace	}    else    if(o    instanceof    JsonArray)    {    return  JsonToken.BEGIN_ARRAY;	  	compilable	  [FE]  ArrayIndexOutOfBoundsException  	3	2	add
176	[BUG]  [BUGGY]  }  else  if(o  instanceof  JsonArray)  {  <  }  else  if(o  instanceof  JsonArray)  {  [CE]  illegal  start  of  type  [FE]            AssertionError    [CONTEXT]    if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }    [BUGGY]  }  else  if(o  instanceof  JsonArray)  {  <  }  else  if(o  instanceof  JsonArray)  {  [BUGGY]    return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	replace	}    else    if(o    instanceof    JsonArray)    {    <  }  else  if(o  instanceof  JsonArray)  {	  	non-compiled	[CE]  illegal  start  of  type	3	None	add
177	[BUG]  [BUGGY]  }  else  if(o  instanceof  JsonObject  <?>  ||  o  instanceof  JsonArray)  {  [CE]  type  JsonObject  does  not  take  parameters  [FE]            ArrayIndexOutOfBoundsException    [CONTEXT]    if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }    [BUGGY]  }  else  if(o  instanceof  JsonObject  <?>  ||  o  instanceof  JsonArray)  {  [BUGGY]    return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	replace	}  else  if(o  instanceof  JsonObject  <?>  ||  o  instanceof  JsonArray)  {	  }    else    if(o    instanceof    JsonObject    <?>)    {    	non-compiled	[CE]  type  JsonObject  does  not  take  parameters	15	None	replace
178	[BUG]  [BUGGY]  }  else  if(o  instanceof  JsonObject  <?>  ||  isObject)  {  [CE]  type  JsonObject  does  not  take  parameters  [FE]              ArrayIndexOutOfBoundsException    [CONTEXT]    if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }    [BUGGY]  }  else  if(o  instanceof  JsonObject  <?>  ||  isObject)  {  [BUGGY]    return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	replace	}  else  if(o  instanceof  JsonObject  <?>  ||  isObject)  {	  }    else    if(o    instanceof    JsonObject    <?>)    {    	non-compiled	[CE]  type  JsonObject  does  not  take  parameters	15	None	replace
179	[BUG]  [BUGGY]  [FE]  ArrayIndexOutOfBoundsException  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]    if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }    [BUGGY]  }  else  if(o  instanceof  JsonObject  ||  o  instanceof  JsonObject)  {  [BUGGY]    return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	add	}  else  if(o  instanceof  JsonObject  ||  o  instanceof  JsonObject)  {	  }    else    if(o    instanceof    JsonObject    ||    o    instanceof    JsonPrimitive)    {    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	13	2	replace
180	[BUG]  [BUGGY]  }  else  if(o  instanceof  JsonObject  ||  o  instanceof  JsonObject)  {  [FE]  ArrayIndexOutOfBoundsException  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]    if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }    [BUGGY]  }  else  if(o  instanceof  JsonObject  ||  o  instanceof  JsonObject)  {  [BUGGY]    return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	replace	}  else  if(o  instanceof  JsonObject  ||  o  instanceof  JsonObject)  {	  }    else    if(o    instanceof    JsonObject    ||    o    instanceof    JsonPrimitive)    {    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	13	2	replace
181	[BUG]  [BUGGY]  [FE]  ArrayIndexOutOfBoundsException  [FE]      ArrayIndexOutOfBoundsException    [CONTEXT]    if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }    [BUGGY]  }  else  if(o  instanceof  JsonObject  &&!(o  instanceof  JsonPrimitive))  {  [BUGGY]    return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	add	}  else  if(o  instanceof  JsonObject  &&!(o  instanceof  JsonPrimitive))  {	  }    else    if(o    instanceof    JsonObject    ||    o    instanceof    JsonPrimitive)    {    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	13	2	replace
182	[BUG]  [BUGGY]  }  else  if(o  instanceof  JsonObject  &&!(o  instanceof  JsonPrimitive))  {  [FE]  ArrayIndexOutOfBoundsException  [FE]      ArrayIndexOutOfBoundsException    [CONTEXT]    if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }    [BUGGY]  }  else  if(o  instanceof  JsonObject  &&!(o  instanceof  JsonPrimitive))  {  [BUGGY]    return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	replace	}  else  if(o  instanceof  JsonObject  &&!(o  instanceof  JsonPrimitive))  {	  }    else    if(o    instanceof    JsonObject    ||    o    instanceof    JsonPrimitive)    {    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	13	2	replace
183	[BUG]  [BUGGY]  }  else  if(o  instanceof  JsonObject  ||  o  instanceof  JsonString)  {  [CE]  cannot  find  symbol  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]    if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }    [BUGGY]  }  else  if(o  instanceof  JsonObject  ||  o  instanceof  JsonString)  {  [BUGGY]    return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	replace	}  else  if(o  instanceof  JsonObject  ||  o  instanceof  JsonString)  {	  }    else    if(o    instanceof    JsonObject    ||    o    instanceof    String)    {    	non-compiled	[CE]  cannot  find  symbol	20	None	replace
184	[BUG]  [BUGGY]  }  else  if(o  instanceof  JsonObject  ||  o  instanceof  JsonLong)  {  [CE]  cannot  find  symbol  [FE]      ArrayIndexOutOfBoundsException    [CONTEXT]    if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }    [BUGGY]  }  else  if(o  instanceof  JsonObject  ||  o  instanceof  JsonLong)  {  [BUGGY]    return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	replace	}  else  if(o  instanceof  JsonObject  ||  o  instanceof  JsonLong)  {	  }    else    if(o    instanceof    JsonObject    ||    o    instanceof    String)    {    	non-compiled	[CE]  cannot  find  symbol	20	None	replace
185	[BUG]  [BUGGY]  Object  o  =  iterator.next();  [CE]  variable  o  is  already  defined  in  method  peek()  [FE]                    ArrayIndexOutOfBoundsException    [CONTEXT]    if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }    [BUGGY]  Object  o  =  iterator.next();  [BUGGY]    return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	replace	Object  o  =  iterator.next();	      	non-compiled	[CE]  variable  o  is  already  defined  in  method  peek()	11	None	replace
186	[BUG]  [BUGGY]  if(o  ==  null)  {  if(isObject)  {  return  JsonToken.NAME;  }  [CE]  illegal  start  of  expression  [FE]                      ArrayIndexOutOfBoundsException    [CONTEXT]    if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }    [BUGGY]  if(o  ==  null)  {  if(isObject)  {  return  JsonToken.NAME;  }  [BUGGY]    return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	replace	if(o  ==  null)  {  if(isObject)  {  return  JsonToken.NAME;  }	      	non-compiled	[CE]  illegal  start  of  expression	11	None	replace
187	[BUG]  [BUGGY]  Iterator  <  Object>  iterator  =  stacks.iterator();  [CE]  variable  iterator  is  already  defined  in  method  peek()  [FE]                        ArrayIndexOutOfBoundsException    [CONTEXT]    if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }    [BUGGY]  Iterator  <  Object>  iterator  =  stacks.iterator();  [BUGGY]    return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	replace	Iterator  <  Object>  iterator  =  stacks.iterator();	      	non-compiled	[CE]  variable  iterator  is  already  defined  in  method  peek()	11	None	replace
188	[BUG]  [BUGGY]  Iterator  iterator  =  stacks.iterator();  [CE]  variable  iterator  is  already  defined  in  method  peek()  [FE]                          ArrayIndexOutOfBoundsException    [CONTEXT]    if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }    [BUGGY]  Iterator  iterator  =  stacks.iterator();  [BUGGY]    return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	replace	Iterator  iterator  =  stacks.iterator();	      	non-compiled	[CE]  variable  iterator  is  already  defined  in  method  peek()	11	None	replace
189	[BUG]  [BUGGY]  if(o  ==  null)  {  if(isObject)  {  return  JsonToken.START_OBJECT;  }  [CE]  illegal  start  of  expression  [FE]                            ArrayIndexOutOfBoundsException    [CONTEXT]    if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }    [BUGGY]  if(o  ==  null)  {  if(isObject)  {  return  JsonToken.START_OBJECT;  }  [BUGGY]    return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	replace	if(o  ==  null)  {  if(isObject)  {  return  JsonToken.START_OBJECT;  }	      	non-compiled	[CE]  illegal  start  of  expression	11	None	replace
190	[BUG]  [BUGGY]  if(o  ==  null)  {  if(isObject)  {  return  JsonToken.FIELD_NAME;  }  [CE]  illegal  start  of  expression  [FE]                              ArrayIndexOutOfBoundsException    [CONTEXT]    if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }    [BUGGY]  if(o  ==  null)  {  if(isObject)  {  return  JsonToken.FIELD_NAME;  }  [BUGGY]    return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	replace	if(o  ==  null)  {  if(isObject)  {  return  JsonToken.FIELD_NAME;  }	      	non-compiled	[CE]  illegal  start  of  expression	11	None	replace
191	[BUG]  [BUGGY]  if(o  ==  null)  {  if(isObject)  {  return  JsonToken.END_OBJECT;  }  [CE]  illegal  start  of  expression  [FE]                                ArrayIndexOutOfBoundsException    [CONTEXT]    if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }    [BUGGY]  if(o  ==  null)  {  if(isObject)  {  return  JsonToken.END_OBJECT;  }  [BUGGY]    return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	replace	if(o  ==  null)  {  if(isObject)  {  return  JsonToken.END_OBJECT;  }	      	non-compiled	[CE]  illegal  start  of  expression	11	None	replace
192	[BUG]  [BUGGY]  }  else  if(o  instanceof  JsonObject  ||  o  instanceof  JsonArray)  {  ArrayIndexOutOfBoundsException  e  =  new  ArrayIndexOutOfBoundsException(iterator.next());  [CE]  cannot  find  symbol  iterator  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]    if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }    [BUGGY]  }  else  if(o  instanceof  JsonObject  ||  o  instanceof  JsonArray)  {  ArrayIndexOutOfBoundsException  e  =  new  ArrayIndexOutOfBoundsException(iterator.next());  [BUGGY]    return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	replace	}    else    if(o    instanceof    JsonObject    ||    o    instanceof    JsonArray)    {    ArrayIndexOutOfBoundsException  e  =  new  ArrayIndexOutOfBoundsException(iterator.next());	  	non-compiled	[CE]  cannot  find  symbol  iterator	16	None	add
193	[BUG]  [BUGGY]  [FE]  ArrayIndexOutOfBoundsException  [FE]      ArrayIndexOutOfBoundsException    [CONTEXT]    if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }    [BUGGY]  }  else  if(o  instanceof  JsonObject  ||  o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_OBJECT;  [BUGGY]    return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	add	}    else    if(o    instanceof    JsonObject    ||    o    instanceof    JsonArray)    {    return  JsonToken.BEGIN_OBJECT;	  	compilable	  [FE]  ArrayIndexOutOfBoundsException  	16	2	add
194	[BUG]  [BUGGY]  }  else  if(o  instanceof  JsonObject  ||  o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_OBJECT;  [FE]  ArrayIndexOutOfBoundsException  [FE]      ArrayIndexOutOfBoundsException    [CONTEXT]    if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }    [BUGGY]  }  else  if(o  instanceof  JsonObject  ||  o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_OBJECT;  [BUGGY]    return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	replace	}    else    if(o    instanceof    JsonObject    ||    o    instanceof    JsonArray)    {    return  JsonToken.BEGIN_OBJECT;	  	compilable	  [FE]  ArrayIndexOutOfBoundsException  	16	2	add
195	[BUG]  [BUGGY]  }  else  if(o  instanceof  JsonObject  ||  o  instanceof  JsonArray)  {  ArrayIndexOutOfBoundsException  e  =  new  ArrayIndexOutOfBoundsException(pathNames[0],  pathNames[1]);  [CE]  no  suitable  constructor  found  for  ArrayIndexOutOfBoundsException(String,String)  [FE]        ArrayIndexOutOfBoundsException    [CONTEXT]    if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }    [BUGGY]  }  else  if(o  instanceof  JsonObject  ||  o  instanceof  JsonArray)  {  ArrayIndexOutOfBoundsException  e  =  new  ArrayIndexOutOfBoundsException(pathNames[0],  pathNames[1]);  [BUGGY]    return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	replace	}    else    if(o    instanceof    JsonObject    ||    o    instanceof    JsonArray)    {    ArrayIndexOutOfBoundsException  e  =  new  ArrayIndexOutOfBoundsException(pathNames[0],  pathNames[1]);	  	non-compiled	[CE]  no  suitable  constructor  found  for  ArrayIndexOutOfBoundsException(String,String)	16	None	add
196	[BUG]  [BUGGY]  }  else  if(o  instanceof  JsonObject  ||  o  instanceof  JsonArray)  {  instanceof  JsonObject  ||  o  instanceof  JsonArray)  {  [CE]  illegal  start  of  expression  [FE]          ArrayIndexOutOfBoundsException    [CONTEXT]    if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }    [BUGGY]  }  else  if(o  instanceof  JsonObject  ||  o  instanceof  JsonArray)  {  instanceof  JsonObject  ||  o  instanceof  JsonArray)  {  [BUGGY]    return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	replace	}    else    if(o    instanceof    JsonObject    ||    o    instanceof    JsonArray)    {    instanceof  JsonObject  ||  o  instanceof  JsonArray)  {	  	non-compiled	[CE]  illegal  start  of  expression	16	None	add
197	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]    if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }    [BUGGY]  }  else  if(o  instanceof  JsonToken)  {  [BUGGY]    return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	add	}  else  if(o  instanceof  JsonToken)  {	  }    else    if(o    instanceof    JsonArray)    {    	compilable	  [FE]  AssertionError  	4	2	replace
198	[BUG]  [BUGGY]  }  else  if(o  instanceof  JsonToken)  {  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]    if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }    [BUGGY]  }  else  if(o  instanceof  JsonToken)  {  [BUGGY]    return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	replace	}  else  if(o  instanceof  JsonToken)  {	  }    else    if(o    instanceof    JsonArray)    {    	compilable	  [FE]  AssertionError  	4	2	replace
199	[BUG]  [BUGGY]  }  else  if(o  instanceof  JsonArray  <  Object>)  {  [CE]  type  JsonArray  does  not  take  parameters  [FE]      AssertionError    [CONTEXT]    if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }    [BUGGY]  }  else  if(o  instanceof  JsonArray  <  Object>)  {  [BUGGY]    return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	replace	}  else  if(o  instanceof  JsonArray  <  Object>)  {	  }    else    if(o    instanceof    JsonArray)    {    	non-compiled	[CE]  type  JsonArray  does  not  take  parameters	4	None	replace
200	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]        AssertionError    [CONTEXT]    if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }    [BUGGY]  }  else  if(o  instanceof  JsonArray  ||  o  instanceof  JsonArray)  {  [BUGGY]    return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	add	}  else  if(o  instanceof  JsonArray  ||  o  instanceof  JsonArray)  {	  }    else    if(o    instanceof    JsonArray)    {    	compilable	  [FE]  AssertionError  	4	2	replace
201	[BUG]  [BUGGY]  }  else  if(o  instanceof  JsonArray  ||  o  instanceof  JsonArray)  {  [FE]  AssertionError  [FE]        AssertionError    [CONTEXT]    if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }    [BUGGY]  }  else  if(o  instanceof  JsonArray  ||  o  instanceof  JsonArray)  {  [BUGGY]    return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	replace	}  else  if(o  instanceof  JsonArray  ||  o  instanceof  JsonArray)  {	  }    else    if(o    instanceof    JsonArray)    {    	compilable	  [FE]  AssertionError  	4	2	replace
202	[BUG]  [BUGGY]  }  else  if(o  instanceof  JsonArray)  {  }  else  if(o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_OBJECT;  }  else  if(o  instanceof  JsonArray)  {  [CE]  missing  return  statement  [FE]    AssertionError    [CONTEXT]    if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }    [BUGGY]  }  else  if(o  instanceof  JsonArray)  {  }  else  if(o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_OBJECT;  }  else  if(o  instanceof  JsonArray)  {  [BUGGY]    return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	replace	}    else    if(o    instanceof    JsonArray)    {    }  else  if(o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_OBJECT;  }  else  if(o  instanceof  JsonArray)  {	  	non-compiled	[CE]  missing  return  statement	3	None	add
203	[BUG]  [BUGGY]  }  else  if(o  instanceof  JsonArray)  {  }  else  if(o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if(o  instanceof  JsonArray)  {  [CE]  missing  return  statement  [FE]      AssertionError    [CONTEXT]    if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }    [BUGGY]  }  else  if(o  instanceof  JsonArray)  {  }  else  if(o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if(o  instanceof  JsonArray)  {  [BUGGY]    return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	replace	}    else    if(o    instanceof    JsonArray)    {    }  else  if(o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if(o  instanceof  JsonArray)  {	  	non-compiled	[CE]  missing  return  statement	3	None	add
204	[BUG]  [BUGGY]  }  else  if(o  instanceof  JsonArray)  {  }  else  if(o  instanceof  JsonArray)  <  return  JsonToken.BEGIN_ARRAY;  [CE]  illegal  start  of  type  [FE]        AssertionError    [CONTEXT]    if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }    [BUGGY]  }  else  if(o  instanceof  JsonArray)  {  }  else  if(o  instanceof  JsonArray)  <  return  JsonToken.BEGIN_ARRAY;  [BUGGY]    return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	replace	}    else    if(o    instanceof    JsonArray)    {    }  else  if(o  instanceof  JsonArray)  <  return  JsonToken.BEGIN_ARRAY;	  	non-compiled	[CE]  illegal  start  of  type	3	None	add
205	[BUG]  [BUGGY]  }  else  if(o  instanceof  JsonArray)  {  }  else  if(o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_OBJECT;  [CE]  missing  return  statement  [FE]          AssertionError    [CONTEXT]    if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }    [BUGGY]  }  else  if(o  instanceof  JsonArray)  {  }  else  if(o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_OBJECT;  [BUGGY]    return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	replace	}    else    if(o    instanceof    JsonArray)    {    }  else  if(o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_OBJECT;	  	non-compiled	[CE]  missing  return  statement	3	None	add
206	[BUG]  [BUGGY]  }  else  if(!(o  instanceof  JsonObject))  {  }  else  if(!(o  instanceof  JsonObject))  {  return  JsonToken.BEGIN_OBJECT;  }  else  if(!(o  instanceof  JsonObject))  {  [CE]  missing  return  statement  [FE]    AssertionError    [CONTEXT]    if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }    [BUGGY]  }  else  if(!(o  instanceof  JsonObject))  {  }  else  if(!(o  instanceof  JsonObject))  {  return  JsonToken.BEGIN_OBJECT;  }  else  if(!(o  instanceof  JsonObject))  {  [BUGGY]    return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	replace	}    else    if(!(o    instanceof    JsonObject))    {    }  else  if(!(o  instanceof  JsonObject))  {  return  JsonToken.BEGIN_OBJECT;  }  else  if(!(o  instanceof  JsonObject))  {	  	non-compiled	[CE]  missing  return  statement	1	None	add
207	[BUG]  [BUGGY]  }  else  if(!(o  instanceof  JsonObject))  {  }  else  if(!(o  instanceof  JsonObject))  {  case  JsonToken.BEGIN_OBJECT:  return  JsonToken.BEGIN_OBJECT;  [CE]  orphaned  case  [FE]      AssertionError    [CONTEXT]    if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }    [BUGGY]  }  else  if(!(o  instanceof  JsonObject))  {  }  else  if(!(o  instanceof  JsonObject))  {  case  JsonToken.BEGIN_OBJECT:  return  JsonToken.BEGIN_OBJECT;  [BUGGY]    return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	replace	}    else    if(!(o    instanceof    JsonObject))    {    }  else  if(!(o  instanceof  JsonObject))  {  case  JsonToken.BEGIN_OBJECT:  return  JsonToken.BEGIN_OBJECT;	  	non-compiled	[CE]  orphaned  case	1	None	add
208	[BUG]  [BUGGY]  }  else  if(!(o  instanceof  JsonObject))  {  }  else  if(!(o  instanceof  JsonObject))  {  aught  return  JsonToken.BEGIN_OBJECT;  }  else  if(!(o  instanceof  JsonObject))  {  [CE]  not  a  statement  [FE]        AssertionError    [CONTEXT]    if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }    [BUGGY]  }  else  if(!(o  instanceof  JsonObject))  {  }  else  if(!(o  instanceof  JsonObject))  {  aught  return  JsonToken.BEGIN_OBJECT;  }  else  if(!(o  instanceof  JsonObject))  {  [BUGGY]    return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	replace	}    else    if(!(o    instanceof    JsonObject))    {    }  else  if(!(o  instanceof  JsonObject))  {  aught  return  JsonToken.BEGIN_OBJECT;  }  else  if(!(o  instanceof  JsonObject))  {	  	non-compiled	[CE]  not  a  statement	1	None	add
209	[BUG]  [BUGGY]  }  else  if(!(o  instanceof  JsonObject))  {  }  else  if(!(o  instanceof  JsonObject))  {  case  JsonToken.BEGIN_OBJECT:  return  JsonToken.BEGIN_ARRAY;  [CE]  orphaned  case  [FE]          AssertionError    [CONTEXT]    if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }    [BUGGY]  }  else  if(!(o  instanceof  JsonObject))  {  }  else  if(!(o  instanceof  JsonObject))  {  case  JsonToken.BEGIN_OBJECT:  return  JsonToken.BEGIN_ARRAY;  [BUGGY]    return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	replace	}    else    if(!(o    instanceof    JsonObject))    {    }  else  if(!(o  instanceof  JsonObject))  {  case  JsonToken.BEGIN_OBJECT:  return  JsonToken.BEGIN_ARRAY;	  	non-compiled	[CE]  orphaned  case	1	None	add
210	[BUG]  [BUGGY]  }  else  if(!(o  instanceof  JsonObject))  {  }  else  if(!(o  instanceof  JsonObject))  {  return  JsonToken.BEGIN_OBJECT;  }  [CE]  illegal  start  of  type  [FE]            AssertionError    [CONTEXT]    if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }    [BUGGY]  }  else  if(!(o  instanceof  JsonObject))  {  }  else  if(!(o  instanceof  JsonObject))  {  return  JsonToken.BEGIN_OBJECT;  }  [BUGGY]    return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	replace	}    else    if(!(o    instanceof    JsonObject))    {    }  else  if(!(o  instanceof  JsonObject))  {  return  JsonToken.BEGIN_OBJECT;  }	  	non-compiled	[CE]  illegal  start  of  type	1	None	add
211	[BUG]  [BUGGY]  }  else  if(!(o  instanceof  JsonObject))  {  }  else  if(!(o  instanceof  JsonObject))  {  case  JsonToken.BEGIN_OBJECT:  return  JsonToken.BEGIN_OBJECT;  break;  [CE]  orphaned  case  [FE]              AssertionError    [CONTEXT]    if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }    [BUGGY]  }  else  if(!(o  instanceof  JsonObject))  {  }  else  if(!(o  instanceof  JsonObject))  {  case  JsonToken.BEGIN_OBJECT:  return  JsonToken.BEGIN_OBJECT;  break;  [BUGGY]    return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	replace	}    else    if(!(o    instanceof    JsonObject))    {    }  else  if(!(o  instanceof  JsonObject))  {  case  JsonToken.BEGIN_OBJECT:  return  JsonToken.BEGIN_OBJECT;  break;	  	non-compiled	[CE]  orphaned  case	1	None	add
212	[BUG]  [BUGGY]  }  else  if(o  instanceof  JsonObject  <  =  0)  {  [CE]  illegal  start  of  type  [FE]              ArrayIndexOutOfBoundsException    [CONTEXT]    if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }    [BUGGY]  }  else  if(o  instanceof  JsonObject  <  =  0)  {  [BUGGY]    return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	replace	}  else  if(o  instanceof  JsonObject  <  =  0)  {	  }    else    if(o    instanceof    JsonObject    <    =    1)    {    	non-compiled	[CE]  illegal  start  of  type	7	None	replace
213	[BUG]  [BUGGY]  }  else  if(o  instanceof  JsonObject!=  ')'  {  [CE]  ')'  expected  [FE]        ArrayIndexOutOfBoundsException    [CONTEXT]    if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }    [BUGGY]  }  else  if(o  instanceof  JsonObject!=  ')'  {  [BUGGY]    return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	replace	}  else  if(o  instanceof  JsonObject!=  ')'  {	  }    else    if(o    instanceof    JsonObject    {    	non-compiled	[CE]  ')'  expected	18	None	replace
214	[BUG]  [BUGGY]  }  else  if(o  instanceof  JsonObject!=  ')')  {  [CE]  incomparable  types:  boolean  and  char  [FE]          ArrayIndexOutOfBoundsException    [CONTEXT]    if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }    [BUGGY]  }  else  if(o  instanceof  JsonObject!=  ')')  {  [BUGGY]    return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	replace	}  else  if(o  instanceof  JsonObject!=  ')')  {	  }    else    if(o    instanceof    JsonObject    {    	non-compiled	[CE]  incomparable  types:  boolean  and  char	18	None	replace
215	[BUG]  [BUGGY]  }  else  if(!(o  instanceof  JsonArray))  {  }  else  if(!(o  instanceof  JsonArray))  {  return  JsonToken.BEGIN_OBJECT;  }  else  if(!(o  instanceof  JsonArray))  {  [CE]  missing  return  statement  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]    if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }    [BUGGY]  }  else  if(!(o  instanceof  JsonArray))  {  }  else  if(!(o  instanceof  JsonArray))  {  return  JsonToken.BEGIN_OBJECT;  }  else  if(!(o  instanceof  JsonArray))  {  [BUGGY]    return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	replace	}    else    if(!(o    instanceof    JsonArray))    {    }  else  if(!(o  instanceof  JsonArray))  {  return  JsonToken.BEGIN_OBJECT;  }  else  if(!(o  instanceof  JsonArray))  {	  	non-compiled	[CE]  missing  return  statement	9	None	add
216	[BUG]  [BUGGY]  }  else  if(!(o  instanceof  JsonArray))  {  }  else  if(!(o  instanceof  JsonArray))  {  aught  return  JsonToken.BEGIN_OBJECT;  }  else  if(!(o  instanceof  JsonArray))  {  [CE]  not  a  statement  [FE]      ArrayIndexOutOfBoundsException    [CONTEXT]    if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }    [BUGGY]  }  else  if(!(o  instanceof  JsonArray))  {  }  else  if(!(o  instanceof  JsonArray))  {  aught  return  JsonToken.BEGIN_OBJECT;  }  else  if(!(o  instanceof  JsonArray))  {  [BUGGY]    return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	replace	}    else    if(!(o    instanceof    JsonArray))    {    }  else  if(!(o  instanceof  JsonArray))  {  aught  return  JsonToken.BEGIN_OBJECT;  }  else  if(!(o  instanceof  JsonArray))  {	  	non-compiled	[CE]  not  a  statement	9	None	add
217	[BUG]  [BUGGY]  }  else  if(!(o  instanceof  JsonArray))  {  }  else  if(!(o  instanceof  JsonArray))  {  case  JsonToken.BEGIN_OBJECT:  return  JsonToken.BEGIN_ARRAY;  [CE]  orphaned  case  [FE]        ArrayIndexOutOfBoundsException    [CONTEXT]    if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }    [BUGGY]  }  else  if(!(o  instanceof  JsonArray))  {  }  else  if(!(o  instanceof  JsonArray))  {  case  JsonToken.BEGIN_OBJECT:  return  JsonToken.BEGIN_ARRAY;  [BUGGY]    return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	replace	}    else    if(!(o    instanceof    JsonArray))    {    }  else  if(!(o  instanceof  JsonArray))  {  case  JsonToken.BEGIN_OBJECT:  return  JsonToken.BEGIN_ARRAY;	  	non-compiled	[CE]  orphaned  case	9	None	add
218	[BUG]  [BUGGY]  }  else  if(!(o  instanceof  JsonArray))  {  }  else  if(!(o  instanceof  JsonArray))  {  case  JsonToken.BEGIN_ARRAY:  return  JsonToken.BEGIN_OBJECT;  [CE]  orphaned  case  [FE]          ArrayIndexOutOfBoundsException    [CONTEXT]    if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }    [BUGGY]  }  else  if(!(o  instanceof  JsonArray))  {  }  else  if(!(o  instanceof  JsonArray))  {  case  JsonToken.BEGIN_ARRAY:  return  JsonToken.BEGIN_OBJECT;  [BUGGY]    return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	replace	}    else    if(!(o    instanceof    JsonArray))    {    }  else  if(!(o  instanceof  JsonArray))  {  case  JsonToken.BEGIN_ARRAY:  return  JsonToken.BEGIN_OBJECT;	  	non-compiled	[CE]  orphaned  case	9	None	add
219	[BUG]  [BUGGY]  }  else  if(!(o  instanceof  JsonArray))  {  }  else  if(!(o  instanceof  JsonArray))  {  case  JsonToken.BEGIN_OBJECT:  return  JsonToken.BEGIN_OBJECT;  [CE]  orphaned  case  [FE]            ArrayIndexOutOfBoundsException    [CONTEXT]    if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }    [BUGGY]  }  else  if(!(o  instanceof  JsonArray))  {  }  else  if(!(o  instanceof  JsonArray))  {  case  JsonToken.BEGIN_OBJECT:  return  JsonToken.BEGIN_OBJECT;  [BUGGY]    return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	replace	}    else    if(!(o    instanceof    JsonArray))    {    }  else  if(!(o  instanceof  JsonArray))  {  case  JsonToken.BEGIN_OBJECT:  return  JsonToken.BEGIN_OBJECT;	  	non-compiled	[CE]  orphaned  case	9	None	add
220	[BUG]  [BUGGY]  }  else  if(o  instanceof  JsonNull)  {  }  else  if(o  instanceof  JsonNull)  {  return  JsonToken.BEGIN_NUMBER;  }  else  if(o  instanceof  JsonNull)  {  [CE]  cannot  find  symbol  BEGIN_NUMBER  [FE]    AssertionError    [CONTEXT]    if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }    [BUGGY]  }  else  if(o  instanceof  JsonNull)  {  }  else  if(o  instanceof  JsonNull)  {  return  JsonToken.BEGIN_NUMBER;  }  else  if(o  instanceof  JsonNull)  {  [BUGGY]    return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	replace	}    else    if(o    instanceof    JsonNull)    {    }  else  if(o  instanceof  JsonNull)  {  return  JsonToken.BEGIN_NUMBER;  }  else  if(o  instanceof  JsonNull)  {	  	non-compiled	[CE]  cannot  find  symbol  BEGIN_NUMBER	5	None	add
221	[BUG]  [BUGGY]  }  else  if(o  instanceof  JsonNull)  {  }  else  if(o  instanceof  JsonNull)  {  return  JsonToken.BEGIN_OBJECT;  [CE]  missing  return  statement  [FE]      AssertionError    [CONTEXT]    if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }    [BUGGY]  }  else  if(o  instanceof  JsonNull)  {  }  else  if(o  instanceof  JsonNull)  {  return  JsonToken.BEGIN_OBJECT;  [BUGGY]    return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	replace	}    else    if(o    instanceof    JsonNull)    {    }  else  if(o  instanceof  JsonNull)  {  return  JsonToken.BEGIN_OBJECT;	  	non-compiled	[CE]  missing  return  statement	5	None	add
222	[BUG]  [BUGGY]  }  else  if(o  instanceof  JsonNull)  {  }  else  if(o  instanceof  JsonNull)  <  return  JsonToken.BEGIN_NULL;  [CE]  illegal  start  of  type  [FE]        AssertionError    [CONTEXT]    if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }    [BUGGY]  }  else  if(o  instanceof  JsonNull)  {  }  else  if(o  instanceof  JsonNull)  <  return  JsonToken.BEGIN_NULL;  [BUGGY]    return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	replace	}    else    if(o    instanceof    JsonNull)    {    }  else  if(o  instanceof  JsonNull)  <  return  JsonToken.BEGIN_NULL;	  	non-compiled	[CE]  illegal  start  of  type	5	None	add
223	[BUG]  [BUGGY]  if(o  ==  null)return  JsonToken.NUMBER;  else  {  push(iterator.next());  return  JsonToken.START_OBJECT;  }  [CE]  cannot  find  symbol  START_OBJECT  [FE]                    ArrayIndexOutOfBoundsException    [CONTEXT]    if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }    [BUGGY]  if(o  ==  null)return  JsonToken.NUMBER;  else  {  push(iterator.next());  return  JsonToken.START_OBJECT;  }  [BUGGY]    return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	replace	if(o  ==  null)return  JsonToken.NUMBER;  else  {  push(iterator.next());  return  JsonToken.START_OBJECT;  }	      	non-compiled	[CE]  cannot  find  symbol  START_OBJECT	11	None	replace
224	[BUG]  [BUGGY]  o  =  iterator.next();  [CE]  unreachable  statement  [FE]                      ArrayIndexOutOfBoundsException    [CONTEXT]    if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }    [BUGGY]  o  =  iterator.next();  [BUGGY]    return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	replace	o  =  iterator.next();	      	non-compiled	[CE]  unreachable  statement	11	None	replace
225	[BUG]  [BUGGY]  if(o  ==  null)return  JsonToken.NULL;  if(isObject)  {  push(iterator.next());  return  JsonToken.NAME;  }  [CE]  unreachable  statement  [FE]                        ArrayIndexOutOfBoundsException    [CONTEXT]    if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }    [BUGGY]  if(o  ==  null)return  JsonToken.NULL;  if(isObject)  {  push(iterator.next());  return  JsonToken.NAME;  }  [BUGGY]    return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	replace	if(o  ==  null)return  JsonToken.NULL;  if(isObject)  {  push(iterator.next());  return  JsonToken.NAME;  }	      	non-compiled	[CE]  unreachable  statement	11	None	replace
226	[BUG]  [BUGGY]  if(o  ==  null)return  JsonToken.NUMBER;  else  {  push(iterator.next());  return  JsonToken.END_ARRAY;  }  [CE]  unreachable  statement  [FE]                          ArrayIndexOutOfBoundsException    [CONTEXT]    if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }    [BUGGY]  if(o  ==  null)return  JsonToken.NUMBER;  else  {  push(iterator.next());  return  JsonToken.END_ARRAY;  }  [BUGGY]    return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	replace	if(o  ==  null)return  JsonToken.NUMBER;  else  {  push(iterator.next());  return  JsonToken.END_ARRAY;  }	      	non-compiled	[CE]  unreachable  statement	11	None	replace
227	[BUG]  [BUGGY]  }  else  if(o  instanceof  JsonNumber  ||  o  instanceof  String)  {  [CE]  cannot  find  symbol  [FE]                ArrayIndexOutOfBoundsException    [CONTEXT]    if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }    [BUGGY]  }  else  if(o  instanceof  JsonNumber  ||  o  instanceof  String)  {  [BUGGY]    return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	replace	}  else  if(o  instanceof  JsonNumber  ||  o  instanceof  String)  {	  }    else    if(o    instanceof    JsonNumber)    {    	non-compiled	[CE]  cannot  find  symbol	8	None	replace
228	[BUG]  [BUGGY]  }  else  if(o  instanceof  JsonObject  ||  o  instanceof  JsonPrimitive)  {  }  else  if(o  instanceof  JsonObject  ||  o  instanceof  JsonPrimitive)  {  return  JsonToken.BEGIN_OBJECT;  }  else  if(o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_OBJECT;  }  [CE]  illegal  start  of  type  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]    if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }    [BUGGY]  }  else  if(o  instanceof  JsonObject  ||  o  instanceof  JsonPrimitive)  {  }  else  if(o  instanceof  JsonObject  ||  o  instanceof  JsonPrimitive)  {  return  JsonToken.BEGIN_OBJECT;  }  else  if(o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_OBJECT;  }  [BUGGY]    return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	replace	}    else    if(o    instanceof    JsonObject    ||    o    instanceof    JsonPrimitive)    {    }  else  if(o  instanceof  JsonObject  ||  o  instanceof  JsonPrimitive)  {  return  JsonToken.BEGIN_OBJECT;  }  else  if(o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_OBJECT;  }	  	non-compiled	[CE]  illegal  start  of  type	12	None	add
229	[BUG]  [BUGGY]  }  else  if(o  instanceof  JsonObject  ||  o  instanceof  JsonPrimitive)  {  object  =  o  instanceof  JsonObject  ||  o  instanceof  JsonPrimitive)  {  return  JsonToken.BEGIN_OBJECT;  }  else  if(o  instanceof  JsonObject  ||  o  instanceof  JsonPrimitive)  {  [CE]  ';'  expected  [FE]      ArrayIndexOutOfBoundsException    [CONTEXT]    if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }    [BUGGY]  }  else  if(o  instanceof  JsonObject  ||  o  instanceof  JsonPrimitive)  {  object  =  o  instanceof  JsonObject  ||  o  instanceof  JsonPrimitive)  {  return  JsonToken.BEGIN_OBJECT;  }  else  if(o  instanceof  JsonObject  ||  o  instanceof  JsonPrimitive)  {  [BUGGY]    return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	replace	}    else    if(o    instanceof    JsonObject    ||    o    instanceof    JsonPrimitive)    {    object  =  o  instanceof  JsonObject  ||  o  instanceof  JsonPrimitive)  {  return  JsonToken.BEGIN_OBJECT;  }  else  if(o  instanceof  JsonObject  ||  o  instanceof  JsonPrimitive)  {	  	non-compiled	[CE]  ';'  expected	12	None	add
230	[BUG]  [BUGGY]  }  else  if(o  instanceof  JsonObject  ||  o  instanceof  JsonPrimitive)  {  }  else  if(o  instanceof  JsonObject  ||  o  instanceof  JsonPrimitive)  {  return  JsonToken.BEGIN_OBJECT;  }  else  if(o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  [CE]  illegal  start  of  type  [FE]        ArrayIndexOutOfBoundsException    [CONTEXT]    if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }    [BUGGY]  }  else  if(o  instanceof  JsonObject  ||  o  instanceof  JsonPrimitive)  {  }  else  if(o  instanceof  JsonObject  ||  o  instanceof  JsonPrimitive)  {  return  JsonToken.BEGIN_OBJECT;  }  else  if(o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  [BUGGY]    return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	replace	}    else    if(o    instanceof    JsonObject    ||    o    instanceof    JsonPrimitive)    {    }  else  if(o  instanceof  JsonObject  ||  o  instanceof  JsonPrimitive)  {  return  JsonToken.BEGIN_OBJECT;  }  else  if(o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }	  	non-compiled	[CE]  illegal  start  of  type	12	None	add
231	[BUG]  [BUGGY]  }  else  if(o  instanceof  JsonObject  ||  o  instanceof  JsonArray)  {  <  JsonObject>  push(iterator.next());  return  JsonToken.BEGIN_OBJECT;  }  else  if(o  instanceof  JsonObject  ||  o  instanceof  JsonArray)  {  [CE]  illegal  start  of  expression  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]    if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }    [BUGGY]  }  else  if(o  instanceof  JsonObject  ||  o  instanceof  JsonArray)  {  <  JsonObject>  push(iterator.next());  return  JsonToken.BEGIN_OBJECT;  }  else  if(o  instanceof  JsonObject  ||  o  instanceof  JsonArray)  {  [BUGGY]    return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	replace	}    else    if(o    instanceof    JsonObject    ||    o    instanceof    JsonArray)    {    <  JsonObject>  push(iterator.next());  return  JsonToken.BEGIN_OBJECT;  }  else  if(o  instanceof  JsonObject  ||  o  instanceof  JsonArray)  {	  	non-compiled	[CE]  illegal  start  of  expression	16	None	add
232	[BUG]  [BUGGY]  }  else  if(o  instanceof  JsonObject  ||  o  instanceof  JsonArray)  {  <  JsonObject>  push(iterator.next());  return  JsonToken.BEGIN_OBJECT;  [CE]  illegal  start  of  expression  [FE]      ArrayIndexOutOfBoundsException    [CONTEXT]    if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }    [BUGGY]  }  else  if(o  instanceof  JsonObject  ||  o  instanceof  JsonArray)  {  <  JsonObject>  push(iterator.next());  return  JsonToken.BEGIN_OBJECT;  [BUGGY]    return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	replace	}    else    if(o    instanceof    JsonObject    ||    o    instanceof    JsonArray)    {    <  JsonObject>  push(iterator.next());  return  JsonToken.BEGIN_OBJECT;	  	non-compiled	[CE]  illegal  start  of  expression	16	None	add
233	[BUG]  [BUGGY]  }  else  if(o  instanceof  JsonObject  ||  o  instanceof  JsonArray)  {  }  else  if(o  instanceof  JsonObject  ||  o  instanceof  JsonArray)  {  aught  return  JsonToken.BEGIN_OBJECT;  }  else  if(o  instanceof  JsonObject)  {  [CE]  not  a  statement  [FE]        ArrayIndexOutOfBoundsException    [CONTEXT]    if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }    [BUGGY]  }  else  if(o  instanceof  JsonObject  ||  o  instanceof  JsonArray)  {  }  else  if(o  instanceof  JsonObject  ||  o  instanceof  JsonArray)  {  aught  return  JsonToken.BEGIN_OBJECT;  }  else  if(o  instanceof  JsonObject)  {  [BUGGY]    return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	replace	}    else    if(o    instanceof    JsonObject    ||    o    instanceof    JsonArray)    {    }  else  if(o  instanceof  JsonObject  ||  o  instanceof  JsonArray)  {  aught  return  JsonToken.BEGIN_OBJECT;  }  else  if(o  instanceof  JsonObject)  {	  	non-compiled	[CE]  not  a  statement	16	None	add
234	[BUG]  [BUGGY]  }  else  if(o  instanceof  JsonObject  ||  o  instanceof  JsonArray)  {  }  else  if(o  instanceof  JsonObject  ||  o  instanceof  JsonArray)  {  case  JsonToken.BEGIN_OBJECT:  return  JsonToken.BEGIN_OBJECT;  [CE]  orphaned  case  [FE]          ArrayIndexOutOfBoundsException    [CONTEXT]    if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }    [BUGGY]  }  else  if(o  instanceof  JsonObject  ||  o  instanceof  JsonArray)  {  }  else  if(o  instanceof  JsonObject  ||  o  instanceof  JsonArray)  {  case  JsonToken.BEGIN_OBJECT:  return  JsonToken.BEGIN_OBJECT;  [BUGGY]    return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	replace	}    else    if(o    instanceof    JsonObject    ||    o    instanceof    JsonArray)    {    }  else  if(o  instanceof  JsonObject  ||  o  instanceof  JsonArray)  {  case  JsonToken.BEGIN_OBJECT:  return  JsonToken.BEGIN_OBJECT;	  	non-compiled	[CE]  orphaned  case	16	None	add
235	[BUG]  [BUGGY]  }  else  if(o  instanceof  JsonNull  ||!(o  instanceof  JsonNull  &&!(o  instanceof  JsonNull  &&!((  JsonNull)o).getClass().isArray()))  {  [CE]  ')'  expected  [FE]    AssertionError    [CONTEXT]    if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }    [BUGGY]  }  else  if(o  instanceof  JsonNull  ||!(o  instanceof  JsonNull  &&!(o  instanceof  JsonNull  &&!((  JsonNull)o).getClass().isArray()))  {  [BUGGY]    return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	replace	}  else  if(o  instanceof  JsonNull  ||!(o  instanceof  JsonNull  &&!(o  instanceof  JsonNull  &&!((  JsonNull)o).getClass().isArray()))  {	  }    else    if(o    instanceof    JsonNull)    {    	non-compiled	[CE]  ')'  expected	6	None	replace
236	[BUG]  [BUGGY]  }  else  if(o  instanceof  JsonNull  ||!(o  instanceof  JsonNull  &&!(o  instanceof  JsonNull  &&!((  JsonNull)o).isObject()))  {  [CE]  ')'  expected  [FE]      AssertionError    [CONTEXT]    if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }    [BUGGY]  }  else  if(o  instanceof  JsonNull  ||!(o  instanceof  JsonNull  &&!(o  instanceof  JsonNull  &&!((  JsonNull)o).isObject()))  {  [BUGGY]    return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	replace	}  else  if(o  instanceof  JsonNull  ||!(o  instanceof  JsonNull  &&!(o  instanceof  JsonNull  &&!((  JsonNull)o).isObject()))  {	  }    else    if(o    instanceof    JsonNull)    {    	non-compiled	[CE]  ')'  expected	6	None	replace
237	[BUG]  [BUGGY]  }  else  if(o  instanceof  JsonNull  ||!(o  instanceof  JsonNull  &&!(o  instanceof  JsonNull  &&!((  JsonNull)o).isArray()))  {  [CE]  ')'  expected  [FE]        AssertionError    [CONTEXT]    if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }    [BUGGY]  }  else  if(o  instanceof  JsonNull  ||!(o  instanceof  JsonNull  &&!(o  instanceof  JsonNull  &&!((  JsonNull)o).isArray()))  {  [BUGGY]    return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	replace	}  else  if(o  instanceof  JsonNull  ||!(o  instanceof  JsonNull  &&!(o  instanceof  JsonNull  &&!((  JsonNull)o).isArray()))  {	  }    else    if(o    instanceof    JsonNull)    {    	non-compiled	[CE]  ')'  expected	6	None	replace
238	[BUG]  [BUGGY]  }  else  if(o  instanceof  JsonObject  ||  o  instanceof  String)  {  }  else  if(o  instanceof  JsonObject  ||  o  instanceof  String)  {  return  JsonToken.BEGIN_OBJECT;  }  else  if(o  instanceof  JsonObject)  {  return  JsonToken.BEGIN_OBJECT;  }  [CE]  illegal  start  of  type  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]    if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }    [BUGGY]  }  else  if(o  instanceof  JsonObject  ||  o  instanceof  String)  {  }  else  if(o  instanceof  JsonObject  ||  o  instanceof  String)  {  return  JsonToken.BEGIN_OBJECT;  }  else  if(o  instanceof  JsonObject)  {  return  JsonToken.BEGIN_OBJECT;  }  [BUGGY]    return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	replace	}    else    if(o    instanceof    JsonObject    ||    o    instanceof    String)    {    }  else  if(o  instanceof  JsonObject  ||  o  instanceof  String)  {  return  JsonToken.BEGIN_OBJECT;  }  else  if(o  instanceof  JsonObject)  {  return  JsonToken.BEGIN_OBJECT;  }	  	non-compiled	[CE]  illegal  start  of  type	19	None	add
239	[BUG]  [BUGGY]  }  else  if(o  instanceof  JsonObject  ||  o  instanceof  String)  {  }  else  if(o  instanceof  JsonObject  ||  o  instanceof  String)  {  return  JsonToken.BEGIN_OBJECT;  }  else  if(o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_OBJECT;  }  [CE]  illegal  start  of  type  [FE]      ArrayIndexOutOfBoundsException    [CONTEXT]    if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }    [BUGGY]  }  else  if(o  instanceof  JsonObject  ||  o  instanceof  String)  {  }  else  if(o  instanceof  JsonObject  ||  o  instanceof  String)  {  return  JsonToken.BEGIN_OBJECT;  }  else  if(o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_OBJECT;  }  [BUGGY]    return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	replace	}    else    if(o    instanceof    JsonObject    ||    o    instanceof    String)    {    }  else  if(o  instanceof  JsonObject  ||  o  instanceof  String)  {  return  JsonToken.BEGIN_OBJECT;  }  else  if(o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_OBJECT;  }	  	non-compiled	[CE]  illegal  start  of  type	19	None	add
240	[BUG]  [BUGGY]  }  else  if(o  instanceof  JsonObject  ||  o  instanceof  String)  {  }  else  if(o  instanceof  JsonObject  ||  o  instanceof  String)  {  return  JsonToken.BEGIN_OBJECT;  }  else  if(o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  [CE]  illegal  start  of  type  [FE]        ArrayIndexOutOfBoundsException    [CONTEXT]    if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }    [BUGGY]  }  else  if(o  instanceof  JsonObject  ||  o  instanceof  String)  {  }  else  if(o  instanceof  JsonObject  ||  o  instanceof  String)  {  return  JsonToken.BEGIN_OBJECT;  }  else  if(o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  [BUGGY]    return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	replace	}    else    if(o    instanceof    JsonObject    ||    o    instanceof    String)    {    }  else  if(o  instanceof  JsonObject  ||  o  instanceof  String)  {  return  JsonToken.BEGIN_OBJECT;  }  else  if(o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }	  	non-compiled	[CE]  illegal  start  of  type	19	None	add
241	[BUG]  [BUGGY]  }  else  if(o  instanceof  JsonObject  ||  o  instanceof  JsonUnknown)  {  [CE]  cannot  find  symbol  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]    if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }    [BUGGY]  }  else  if(o  instanceof  JsonObject  ||  o  instanceof  JsonUnknown)  {  [BUGGY]    return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	replace	}  else  if(o  instanceof  JsonObject  ||  o  instanceof  JsonUnknown)  {	  }    else    if(o    instanceof    JsonObject    ||    o    instanceof    JsonPrimitive)    {    	non-compiled	[CE]  cannot  find  symbol	13	None	replace
242	[BUG]  [BUGGY]  [FE]  ArrayIndexOutOfBoundsException  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]    if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }    [BUGGY]  }  else  if(o  instanceof  JsonObject  ||  o  instanceof  Class  <?>)  {  [BUGGY]    return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	add	}  else  if(o  instanceof  JsonObject  ||  o  instanceof  Class  <?>)  {	  }    else    if(o    instanceof    JsonObject    ||    o    instanceof    String)    {    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	20	2	replace
243	[BUG]  [BUGGY]  }  else  if(o  instanceof  JsonObject  ||  o  instanceof  Class  <?>)  {  [FE]  ArrayIndexOutOfBoundsException  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]    if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }    [BUGGY]  }  else  if(o  instanceof  JsonObject  ||  o  instanceof  Class  <?>)  {  [BUGGY]    return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	replace	}  else  if(o  instanceof  JsonObject  ||  o  instanceof  Class  <?>)  {	  }    else    if(o    instanceof    JsonObject    ||    o    instanceof    String)    {    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	20	2	replace
244	[BUG]  [BUGGY]  [FE]  ArrayIndexOutOfBoundsException  [FE]      ArrayIndexOutOfBoundsException    [CONTEXT]    if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }    [BUGGY]  }  else  if(o  instanceof  JsonObject  ||  o  instanceof  String  ||  o  instanceof  Class  <?>)  {  [BUGGY]    return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	add	}  else  if(o  instanceof  JsonObject  ||  o  instanceof  String  ||  o  instanceof  Class  <?>)  {	  }    else    if(o    instanceof    JsonObject    ||    o    instanceof    String)    {    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	20	2	replace
245	[BUG]  [BUGGY]  }  else  if(o  instanceof  JsonObject  ||  o  instanceof  String  ||  o  instanceof  Class  <?>)  {  [FE]  ArrayIndexOutOfBoundsException  [FE]      ArrayIndexOutOfBoundsException    [CONTEXT]    if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }    [BUGGY]  }  else  if(o  instanceof  JsonObject  ||  o  instanceof  String  ||  o  instanceof  Class  <?>)  {  [BUGGY]    return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	replace	}  else  if(o  instanceof  JsonObject  ||  o  instanceof  String  ||  o  instanceof  Class  <?>)  {	  }    else    if(o    instanceof    JsonObject    ||    o    instanceof    String)    {    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	20	2	replace
246	[BUG]  [BUGGY]  [FE]  ArrayIndexOutOfBoundsException  [FE]        ArrayIndexOutOfBoundsException    [CONTEXT]    if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }    [BUGGY]  }  else  if(o  instanceof  JsonObject  ||  o  instanceof  String  ||  o  instanceof  Boolean)  {  [BUGGY]    return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	add	}  else  if(o  instanceof  JsonObject  ||  o  instanceof  String  ||  o  instanceof  Boolean)  {	  }    else    if(o    instanceof    JsonObject    ||    o    instanceof    String)    {    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	20	2	replace
247	[BUG]  [BUGGY]  }  else  if(o  instanceof  JsonObject  ||  o  instanceof  String  ||  o  instanceof  Boolean)  {  [FE]  ArrayIndexOutOfBoundsException  [FE]        ArrayIndexOutOfBoundsException    [CONTEXT]    if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }    [BUGGY]  }  else  if(o  instanceof  JsonObject  ||  o  instanceof  String  ||  o  instanceof  Boolean)  {  [BUGGY]    return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	replace	}  else  if(o  instanceof  JsonObject  ||  o  instanceof  String  ||  o  instanceof  Boolean)  {	  }    else    if(o    instanceof    JsonObject    ||    o    instanceof    String)    {    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	20	2	replace
248	[BUG]  [BUGGY]  [FE]  ArrayIndexOutOfBoundsException  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]    if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }    [BUGGY]  }  else  if(!(o  instanceof  JsonArray)||!(o  instanceof  JsonArray))  {  [BUGGY]    return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	add	}  else  if(!(o  instanceof  JsonArray)||!(o  instanceof  JsonArray))  {	  }    else    if(!(o    instanceof    JsonArray))    {    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	10	2	replace
249	[BUG]  [BUGGY]  }  else  if(!(o  instanceof  JsonArray)||!(o  instanceof  JsonArray))  {  [FE]  ArrayIndexOutOfBoundsException  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]    if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }    [BUGGY]  }  else  if(!(o  instanceof  JsonArray)||!(o  instanceof  JsonArray))  {  [BUGGY]    return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	replace	}  else  if(!(o  instanceof  JsonArray)||!(o  instanceof  JsonArray))  {	  }    else    if(!(o    instanceof    JsonArray))    {    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	10	2	replace
250	[BUG]  [BUGGY]  [FE]  ArrayIndexOutOfBoundsException  [FE]      ArrayIndexOutOfBoundsException    [CONTEXT]    if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }    [BUGGY]  }  else  if(!(o  instanceof  JsonArray)||!(o  instanceof  JsonPrimitive))  {  [BUGGY]    return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	add	}  else  if(!(o  instanceof  JsonArray)||!(o  instanceof  JsonPrimitive))  {	  }    else    if(!(o    instanceof    JsonArray))    {    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	10	2	replace
251	[BUG]  [BUGGY]  }  else  if(!(o  instanceof  JsonArray)||!(o  instanceof  JsonPrimitive))  {  [FE]  ArrayIndexOutOfBoundsException  [FE]      ArrayIndexOutOfBoundsException    [CONTEXT]    if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }    [BUGGY]  }  else  if(!(o  instanceof  JsonArray)||!(o  instanceof  JsonPrimitive))  {  [BUGGY]    return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	replace	}  else  if(!(o  instanceof  JsonArray)||!(o  instanceof  JsonPrimitive))  {	  }    else    if(!(o    instanceof    JsonArray))    {    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	10	2	replace
252	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]    if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }    [BUGGY]  }  else  if(!(o  instanceof  JsonObject  ||  o  instanceof  String))  {  [BUGGY]    return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	add	}  else  if(!(o  instanceof  JsonObject  ||  o  instanceof  String))  {	  }    else    if(!(o    instanceof    JsonObject))    {    	compilable	  [FE]  AssertionError  	2	2	replace
253	[BUG]  [BUGGY]  }  else  if(!(o  instanceof  JsonObject  ||  o  instanceof  String))  {  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]    if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }    [BUGGY]  }  else  if(!(o  instanceof  JsonObject  ||  o  instanceof  String))  {  [BUGGY]    return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	replace	}  else  if(!(o  instanceof  JsonObject  ||  o  instanceof  String))  {	  }    else    if(!(o    instanceof    JsonObject))    {    	compilable	  [FE]  AssertionError  	2	2	replace
254	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]    if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }    [BUGGY]  }  else  if(!(o  instanceof  JsonObject  ||  o  instanceof  Boolean))  {  [BUGGY]    return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	add	}  else  if(!(o  instanceof  JsonObject  ||  o  instanceof  Boolean))  {	  }    else    if(!(o    instanceof    JsonObject))    {    	compilable	  [FE]  AssertionError  	2	2	replace
255	[BUG]  [BUGGY]  }  else  if(!(o  instanceof  JsonObject  ||  o  instanceof  Boolean))  {  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]    if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }    [BUGGY]  }  else  if(!(o  instanceof  JsonObject  ||  o  instanceof  Boolean))  {  [BUGGY]    return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	replace	}  else  if(!(o  instanceof  JsonObject  ||  o  instanceof  Boolean))  {	  }    else    if(!(o    instanceof    JsonObject))    {    	compilable	  [FE]  AssertionError  	2	2	replace
256	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]        AssertionError    [CONTEXT]    if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }    [BUGGY]  }  else  if(!(o  instanceof  JsonObject  ||  o  instanceof  Number))  {  [BUGGY]    return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	add	}  else  if(!(o  instanceof  JsonObject  ||  o  instanceof  Number))  {	  }    else    if(!(o    instanceof    JsonObject))    {    	compilable	  [FE]  AssertionError  	2	2	replace
257	[BUG]  [BUGGY]  }  else  if(!(o  instanceof  JsonObject  ||  o  instanceof  Number))  {  [FE]  AssertionError  [FE]        AssertionError    [CONTEXT]    if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }    [BUGGY]  }  else  if(!(o  instanceof  JsonObject  ||  o  instanceof  Number))  {  [BUGGY]    return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	replace	}  else  if(!(o  instanceof  JsonObject  ||  o  instanceof  Number))  {	  }    else    if(!(o    instanceof    JsonObject))    {    	compilable	  [FE]  AssertionError  	2	2	replace
258	[BUG]  [BUGGY]  }  else  if(o  instanceof  JsonArray  ||  o  instanceof  JsonNumber)  {  [CE]  cannot  find  symbol  [FE]          ArrayIndexOutOfBoundsException    [CONTEXT]    if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }    [BUGGY]  }  else  if(o  instanceof  JsonArray  ||  o  instanceof  JsonNumber)  {  [BUGGY]    return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	replace	}  else  if(o  instanceof  JsonArray  ||  o  instanceof  JsonNumber)  {	  }    else    if(o    instanceof    JsonObject    ||    o    instanceof    JsonNumber)    {    	non-compiled	[CE]  cannot  find  symbol	14	None	replace
