bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  }  else  if(o  instanceof  JsonString  ||  o  instanceof  JsonObject)  {  [CE]  cannot  find  symbol  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]      if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }      [BUGGY]  }  else  if(o  instanceof  JsonString  ||  o  instanceof  JsonObject)  {  [BUGGY]      return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	replace	}  else  if(o  instanceof  JsonString  ||  o  instanceof  JsonObject)  {	  }    else    if(o    instanceof    String    ||    o    instanceof    JsonObject)    {    	non-compiled	[CE]  cannot  find  symbol	50	None	replace
2	[BUG]  [BUGGY]  [FE]  ArrayIndexOutOfBoundsException  [FE]      ArrayIndexOutOfBoundsException    [CONTEXT]      if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }      [BUGGY]  }  else  if(o  instanceof  JsonObject  ||!(o  instanceof  String))  {  [BUGGY]      return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	add	}  else  if(o  instanceof  JsonObject  ||!(o  instanceof  String))  {	  }    else    if(o    instanceof    String    ||    o    instanceof    JsonObject)    {    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	50	2	replace
3	[BUG]  [BUGGY]  }  else  if(o  instanceof  JsonObject  ||!(o  instanceof  String))  {  [FE]  ArrayIndexOutOfBoundsException  [FE]      ArrayIndexOutOfBoundsException    [CONTEXT]      if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }      [BUGGY]  }  else  if(o  instanceof  JsonObject  ||!(o  instanceof  String))  {  [BUGGY]      return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	replace	}  else  if(o  instanceof  JsonObject  ||!(o  instanceof  String))  {	  }    else    if(o    instanceof    String    ||    o    instanceof    JsonObject)    {    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	50	2	replace
4	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]        ArrayIndexOutOfBoundsException    [CONTEXT]      if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }      [BUGGY]  }  else  if(o  instanceof  String  ||  o  instanceof  JsonArray)  {  [BUGGY]      return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	add	}  else  if(o  instanceof  String  ||  o  instanceof  JsonArray)  {	  }    else    if(o    instanceof    String    ||    o    instanceof    JsonObject)    {    	compilable	  [FE]  AssertionError  	50	2	replace
5	[BUG]  [BUGGY]  }  else  if(o  instanceof  String  ||  o  instanceof  JsonArray)  {  [FE]  AssertionError  [FE]        ArrayIndexOutOfBoundsException    [CONTEXT]      if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }      [BUGGY]  }  else  if(o  instanceof  String  ||  o  instanceof  JsonArray)  {  [BUGGY]      return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	replace	}  else  if(o  instanceof  String  ||  o  instanceof  JsonArray)  {	  }    else    if(o    instanceof    String    ||    o    instanceof    JsonObject)    {    	compilable	  [FE]  AssertionError  	50	2	replace
6	[BUG]  [BUGGY]  }  else  if(!(o  instanceof  JsonPrimitive))  {  ArrayIndexOutOfBoundsException  a  =(ArrayIndexOutOfBoundsException)iterator.next();  [CE]  cannot  find  symbol  iterator  [FE]          ArrayIndexOutOfBoundsException      [CONTEXT]      if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }      [BUGGY]  }  else  if(!(o  instanceof  JsonPrimitive))  {  ArrayIndexOutOfBoundsException  a  =(ArrayIndexOutOfBoundsException)iterator.next();  [BUGGY]      return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	replace	}  else  if(!(o  instanceof  JsonPrimitive))  {  ArrayIndexOutOfBoundsException  a  =(ArrayIndexOutOfBoundsException)iterator.next();	  }    else    if(!(o    instanceof    JsonArray))    {    ArrayIndexOutOfBoundsException    a    =(ArrayIndexOutOfBoundsException)iterator.next();    	non-compiled	[CE]  cannot  find  symbol  iterator	132	None	replace
7	[BUG]  [BUGGY]  }  else  if(!(o  instanceof  JsonNull))  {  ArrayIndexOutOfBoundsException  a  =(ArrayIndexOutOfBoundsException)iterator.next();  [CE]  cannot  find  symbol  iterator  [FE]            ArrayIndexOutOfBoundsException      [CONTEXT]      if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }      [BUGGY]  }  else  if(!(o  instanceof  JsonNull))  {  ArrayIndexOutOfBoundsException  a  =(ArrayIndexOutOfBoundsException)iterator.next();  [BUGGY]      return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	replace	}  else  if(!(o  instanceof  JsonNull))  {  ArrayIndexOutOfBoundsException  a  =(ArrayIndexOutOfBoundsException)iterator.next();	  }    else    if(!(o    instanceof    JsonArray))    {    ArrayIndexOutOfBoundsException    a    =(ArrayIndexOutOfBoundsException)iterator.next();    	non-compiled	[CE]  cannot  find  symbol  iterator	132	None	replace
8	[BUG]  [BUGGY]  }  else  if(o  instanceof  ArrayIndexOutOfBoundsException)  {  ArrayIndexOutOfBoundsException  a  =(ArrayIndexOutOfBoundsException)iterator.next();  [CE]  cannot  find  symbol  iterator  [FE]              ArrayIndexOutOfBoundsException      [CONTEXT]      if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }      [BUGGY]  }  else  if(o  instanceof  ArrayIndexOutOfBoundsException)  {  ArrayIndexOutOfBoundsException  a  =(ArrayIndexOutOfBoundsException)iterator.next();  [BUGGY]      return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	replace	}  else  if(o  instanceof  ArrayIndexOutOfBoundsException)  {  ArrayIndexOutOfBoundsException  a  =(ArrayIndexOutOfBoundsException)iterator.next();	  }    else    if(!(o    instanceof    JsonArray))    {    ArrayIndexOutOfBoundsException    a    =(ArrayIndexOutOfBoundsException)iterator.next();    	non-compiled	[CE]  cannot  find  symbol  iterator	132	None	replace
9	[BUG]  [BUGGY]  }  else  if(!(o  instanceof  JsonObject))  {  ArrayIndexOutOfBoundsException  a  =(ArrayIndexOutOfBoundsException)iterator.next();  [CE]  cannot  find  symbol  iterator  [FE]                ArrayIndexOutOfBoundsException      [CONTEXT]      if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }      [BUGGY]  }  else  if(!(o  instanceof  JsonObject))  {  ArrayIndexOutOfBoundsException  a  =(ArrayIndexOutOfBoundsException)iterator.next();  [BUGGY]      return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	replace	}  else  if(!(o  instanceof  JsonObject))  {  ArrayIndexOutOfBoundsException  a  =(ArrayIndexOutOfBoundsException)iterator.next();	  }    else    if(!(o    instanceof    JsonArray))    {    ArrayIndexOutOfBoundsException    a    =(ArrayIndexOutOfBoundsException)iterator.next();    	non-compiled	[CE]  cannot  find  symbol  iterator	132	None	replace
10	[BUG]  [BUGGY]  }  else  if(!isObject)  {  ArrayIndexOutOfBoundsException  a  =(ArrayIndexOutOfBoundsException)iterator.next();  [CE]  cannot  find  symbol  isObject  [FE]                  ArrayIndexOutOfBoundsException      [CONTEXT]      if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }      [BUGGY]  }  else  if(!isObject)  {  ArrayIndexOutOfBoundsException  a  =(ArrayIndexOutOfBoundsException)iterator.next();  [BUGGY]      return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	replace	}  else  if(!isObject)  {  ArrayIndexOutOfBoundsException  a  =(ArrayIndexOutOfBoundsException)iterator.next();	  }    else    if(!(o    instanceof    JsonArray))    {    ArrayIndexOutOfBoundsException    a    =(ArrayIndexOutOfBoundsException)iterator.next();    	non-compiled	[CE]  cannot  find  symbol  isObject	132	None	replace
11	[BUG]  [BUGGY]  }  else  if(!(o  instanceof  JsonArray))  {  ArrayIndexOutOfBoundsException  a  =(ArrayIndexOutOfBoundsException)element.next();  [CE]  cannot  find  symbol  element  [FE]                    ArrayIndexOutOfBoundsException      [CONTEXT]      if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }      [BUGGY]  }  else  if(!(o  instanceof  JsonArray))  {  ArrayIndexOutOfBoundsException  a  =(ArrayIndexOutOfBoundsException)element.next();  [BUGGY]      return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	replace	}  else  if(!(o  instanceof  JsonArray))  {  ArrayIndexOutOfBoundsException  a  =(ArrayIndexOutOfBoundsException)element.next();	  }    else    if(!(o    instanceof    JsonArray))    {    ArrayIndexOutOfBoundsException    a    =(ArrayIndexOutOfBoundsException)iterator.next();    	non-compiled	[CE]  cannot  find  symbol  element	132	None	replace
12	[BUG]  [BUGGY]  }  else  if(!(o  instanceof  String))  {  }  else  if(!(o  instanceof  String))  {  [CE]  missing  return  statement  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]      if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }      [BUGGY]  }  else  if(!(o  instanceof  String))  {  }  else  if(!(o  instanceof  String))  {  [BUGGY]      return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	replace	}    else    if(!(o    instanceof    String))    {    }  else  if(!(o  instanceof  String))  {	  	non-compiled	[CE]  missing  return  statement	63	None	add
13	[BUG]  [BUGGY]  }  else  if(!(o  instanceof  String))  {  }  else  if(!(o  instanceof  String))  <  return  JsonToken.BEGIN_OBJECT;  [CE]  illegal  start  of  type  [FE]      ArrayIndexOutOfBoundsException    [CONTEXT]      if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }      [BUGGY]  }  else  if(!(o  instanceof  String))  {  }  else  if(!(o  instanceof  String))  <  return  JsonToken.BEGIN_OBJECT;  [BUGGY]      return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	replace	}    else    if(!(o    instanceof    String))    {    }  else  if(!(o  instanceof  String))  <  return  JsonToken.BEGIN_OBJECT;	  	non-compiled	[CE]  illegal  start  of  type	63	None	add
14	[BUG]  [BUGGY]  }  else  if(!(o  instanceof  String))  {  else  if(!(o  instanceof  String))  {  [CE]  'else'  without  'if'  [FE]        ArrayIndexOutOfBoundsException    [CONTEXT]      if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }      [BUGGY]  }  else  if(!(o  instanceof  String))  {  else  if(!(o  instanceof  String))  {  [BUGGY]      return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	replace	}    else    if(!(o    instanceof    String))    {    else  if(!(o  instanceof  String))  {	  	non-compiled	[CE]  'else'  without  'if'	63	None	add
15	[BUG]  [BUGGY]  }  else  if(!(o  instanceof  String))  {  <  }  else  if(!(o  instanceof  String))  {  [CE]  illegal  start  of  type  [FE]          ArrayIndexOutOfBoundsException    [CONTEXT]      if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }      [BUGGY]  }  else  if(!(o  instanceof  String))  {  <  }  else  if(!(o  instanceof  String))  {  [BUGGY]      return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	replace	}    else    if(!(o    instanceof    String))    {    <  }  else  if(!(o  instanceof  String))  {	  	non-compiled	[CE]  illegal  start  of  type	63	None	add
16	[BUG]  [BUGGY]  }  else  if(!(o  instanceof  String))  {  }  else  if(!(o  instanceof  String)  ||(o  instanceof  String))  {  [CE]  missing  return  statement  [FE]            ArrayIndexOutOfBoundsException    [CONTEXT]      if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }      [BUGGY]  }  else  if(!(o  instanceof  String))  {  }  else  if(!(o  instanceof  String)  ||(o  instanceof  String))  {  [BUGGY]      return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	replace	}    else    if(!(o    instanceof    String))    {    }  else  if(!(o  instanceof  String)  ||(o  instanceof  String))  {	  	non-compiled	[CE]  missing  return  statement	63	None	add
17	[BUG]  [BUGGY]  }  else  if(!(o  instanceof  String))  {  }  else  if(!(o  instanceof  String)&&!(o  instanceof  String))  {  [CE]  missing  return  statement  [FE]              ArrayIndexOutOfBoundsException    [CONTEXT]      if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }      [BUGGY]  }  else  if(!(o  instanceof  String))  {  }  else  if(!(o  instanceof  String)&&!(o  instanceof  String))  {  [BUGGY]      return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	replace	}    else    if(!(o    instanceof    String))    {    }  else  if(!(o  instanceof  String)&&!(o  instanceof  String))  {	  	non-compiled	[CE]  missing  return  statement	63	None	add
18	[BUG]  [BUGGY]  }  else  if(!(o  instanceof  String))  {  }  else  if(!(o  instanceof  String)  ||(o  instanceof  JsonString))  {  [CE]  cannot  find  symbol  [FE]                ArrayIndexOutOfBoundsException    [CONTEXT]      if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }      [BUGGY]  }  else  if(!(o  instanceof  String))  {  }  else  if(!(o  instanceof  String)  ||(o  instanceof  JsonString))  {  [BUGGY]      return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	replace	}    else    if(!(o    instanceof    String))    {    }  else  if(!(o  instanceof  String)  ||(o  instanceof  JsonString))  {	  	non-compiled	[CE]  cannot  find  symbol	63	None	add
19	[BUG]  [BUGGY]  }  else  if(!(o  instanceof  String))  {  }  else  if(!(o  instanceof  String))  <  JsonToken.BEGIN_OBJECT;  [CE]  >  expected  [FE]                  ArrayIndexOutOfBoundsException    [CONTEXT]      if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }      [BUGGY]  }  else  if(!(o  instanceof  String))  {  }  else  if(!(o  instanceof  String))  <  JsonToken.BEGIN_OBJECT;  [BUGGY]      return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	replace	}    else    if(!(o    instanceof    String))    {    }  else  if(!(o  instanceof  String))  <  JsonToken.BEGIN_OBJECT;	  	non-compiled	[CE]  >  expected	63	None	add
20	[BUG]  [BUGGY]  }  else  if(o  instanceof  JsonType  <  Object>  ||  o  instanceof  JsonArray)  {  [CE]  cannot  find  symbol  [FE]                AssertionError      [CONTEXT]      if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }      [BUGGY]  }  else  if(o  instanceof  JsonType  <  Object>  ||  o  instanceof  JsonArray)  {  [BUGGY]      return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	replace	}  else  if(o  instanceof  JsonType  <  Object>  ||  o  instanceof  JsonArray)  {	  }    else    if(o    instanceof    JsonType    <    Object>)    {    	non-compiled	[CE]  cannot  find  symbol	15	None	replace
21	[BUG]  [BUGGY]  }  else  if(o  instanceof  JsonType  >=  Object>)  {  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }      [BUGGY]  }  else  if(o  instanceof  JsonType  >=  Object>)  {  [BUGGY]      return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	replace	}  else  if(o  instanceof  JsonType  >=  Object>)  {	  }    else    if(o    instanceof    JsonType    <    Object>)    {    	non-compiled	[CE]  illegal  start  of  expression	15	None	replace
22	[BUG]  [BUGGY]  }  else  if(o  instanceof  JsonType  <  Object>  ||  o  instanceof  JsonPrimitive)  {  [CE]  cannot  find  symbol  [FE]                    AssertionError      [CONTEXT]      if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }      [BUGGY]  }  else  if(o  instanceof  JsonType  <  Object>  ||  o  instanceof  JsonPrimitive)  {  [BUGGY]      return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	replace	}  else  if(o  instanceof  JsonType  <  Object>  ||  o  instanceof  JsonPrimitive)  {	  }    else    if(o    instanceof    JsonType    <    Object>)    {    	non-compiled	[CE]  cannot  find  symbol	15	None	replace
23	[BUG]  [BUGGY]  }  else  if(!(o  instanceof  JsonType  <  Object>))  {  [CE]  cannot  find  symbol  [FE]                      AssertionError      [CONTEXT]      if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }      [BUGGY]  }  else  if(!(o  instanceof  JsonType  <  Object>))  {  [BUGGY]      return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	replace	}  else  if(!(o  instanceof  JsonType  <  Object>))  {	  }    else    if(o    instanceof    JsonType    <    Object>)    {    	non-compiled	[CE]  cannot  find  symbol	15	None	replace
24	[BUG]  [BUGGY]  }  else  if(o  instanceof  JsonType  <  Object>  ||!(o  instanceof  JsonArray))  {  [CE]  cannot  find  symbol  [FE]                        AssertionError      [CONTEXT]      if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }      [BUGGY]  }  else  if(o  instanceof  JsonType  <  Object>  ||!(o  instanceof  JsonArray))  {  [BUGGY]      return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	replace	}  else  if(o  instanceof  JsonType  <  Object>  ||!(o  instanceof  JsonArray))  {	  }    else    if(o    instanceof    JsonType    <    Object>)    {    	non-compiled	[CE]  cannot  find  symbol	15	None	replace
25	[BUG]  [BUGGY]  }    else    if(o    instanceof    JsonObject    ||    o    instanceof    String)    {    return  JsonToken.BEGIN_OBJECT;  }  else  if(o  instanceof  JsonObject  ||  o  instanceof  String)  {  return  JsonToken.BEGIN_OBJECT;  }  [CE]  illegal  start  of  type  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]      if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }      [BUGGY]  }    else    if(o    instanceof    JsonObject    ||    o    instanceof    String)    {    return  JsonToken.BEGIN_OBJECT;  }  else  if(o  instanceof  JsonObject  ||  o  instanceof  String)  {  return  JsonToken.BEGIN_OBJECT;  }  [BUGGY]      return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	replace	}        else        if(o        instanceof        JsonObject        ||        o        instanceof        String)        {        return    JsonToken.BEGIN_OBJECT;    }  else  if(o  instanceof  JsonObject  ||  o  instanceof  String)  {  return  JsonToken.BEGIN_OBJECT;  }	  	non-compiled	[CE]  illegal  start  of  type	151	None	add
26	[BUG]  [BUGGY]  }    else    if(o    instanceof    JsonObject    ||    o    instanceof    String)    {    return  JsonToken.BEGIN_OBJECT;  }  else  if(o  instanceof  JsonObject  ||  o  instanceof  String)  {  return  JsonToken.BEGIN_OBJECT;  }  else  if(o  instanceof  JsonObject  ||  o  instanceof  String)  {  return  JsonToken.BEGIN_OBJECT;  }  [CE]  illegal  start  of  type  [FE]      ArrayIndexOutOfBoundsException    [CONTEXT]      if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }      [BUGGY]  }    else    if(o    instanceof    JsonObject    ||    o    instanceof    String)    {    return  JsonToken.BEGIN_OBJECT;  }  else  if(o  instanceof  JsonObject  ||  o  instanceof  String)  {  return  JsonToken.BEGIN_OBJECT;  }  else  if(o  instanceof  JsonObject  ||  o  instanceof  String)  {  return  JsonToken.BEGIN_OBJECT;  }  [BUGGY]      return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	replace	}        else        if(o        instanceof        JsonObject        ||        o        instanceof        String)        {        return    JsonToken.BEGIN_OBJECT;    }  else  if(o  instanceof  JsonObject  ||  o  instanceof  String)  {  return  JsonToken.BEGIN_OBJECT;  }  else  if(o  instanceof  JsonObject  ||  o  instanceof  String)  {  return  JsonToken.BEGIN_OBJECT;  }	  	non-compiled	[CE]  illegal  start  of  type	151	None	add
27	[BUG]  [BUGGY]  }    else    if(o    instanceof    JsonObject    ||    o    instanceof    String)    {    return  JsonToken.BEGIN_OBJECT;  else  if(o  instanceof  JsonObject  ||  o  instanceof  String)  {  return  JsonToken.BEGIN_OBJECT;  }  [CE]  'else'  without  'if'  [FE]        ArrayIndexOutOfBoundsException    [CONTEXT]      if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }      [BUGGY]  }    else    if(o    instanceof    JsonObject    ||    o    instanceof    String)    {    return  JsonToken.BEGIN_OBJECT;  else  if(o  instanceof  JsonObject  ||  o  instanceof  String)  {  return  JsonToken.BEGIN_OBJECT;  }  [BUGGY]      return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	replace	}        else        if(o        instanceof        JsonObject        ||        o        instanceof        String)        {        return    JsonToken.BEGIN_OBJECT;    else  if(o  instanceof  JsonObject  ||  o  instanceof  String)  {  return  JsonToken.BEGIN_OBJECT;  }	  	non-compiled	[CE]  'else'  without  'if'	151	None	add
28	[BUG]  [BUGGY]  [FE]  ArrayIndexOutOfBoundsException  [FE]          ArrayIndexOutOfBoundsException    [CONTEXT]      if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }      [BUGGY]  }    else    if(o    instanceof    JsonObject    ||    o    instanceof    String)    {    return  JsonToken.BEGIN_OBJECT;  }  else  if(o  instanceof  JsonObject  ||  o  instanceof  String)  {  return  JsonToken.BEGIN_OBJECT;  }  else  if(o  instanceof  JsonObject  ||  o  instanceof  String)  {  return  JsonToken.BEGIN_OBJECT;  [BUGGY]      return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	add	}        else        if(o        instanceof        JsonObject        ||        o        instanceof        String)        {        return    JsonToken.BEGIN_OBJECT;    }  else  if(o  instanceof  JsonObject  ||  o  instanceof  String)  {  return  JsonToken.BEGIN_OBJECT;  }  else  if(o  instanceof  JsonObject  ||  o  instanceof  String)  {  return  JsonToken.BEGIN_OBJECT;	  	compilable	  [FE]  ArrayIndexOutOfBoundsException  	151	2	add
29	[BUG]  [BUGGY]  }    else    if(o    instanceof    JsonObject    ||    o    instanceof    String)    {    return  JsonToken.BEGIN_OBJECT;  }  else  if(o  instanceof  JsonObject  ||  o  instanceof  String)  {  return  JsonToken.BEGIN_OBJECT;  }  else  if(o  instanceof  JsonObject  ||  o  instanceof  String)  {  return  JsonToken.BEGIN_OBJECT;  [FE]  ArrayIndexOutOfBoundsException  [FE]          ArrayIndexOutOfBoundsException    [CONTEXT]      if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }      [BUGGY]  }    else    if(o    instanceof    JsonObject    ||    o    instanceof    String)    {    return  JsonToken.BEGIN_OBJECT;  }  else  if(o  instanceof  JsonObject  ||  o  instanceof  String)  {  return  JsonToken.BEGIN_OBJECT;  }  else  if(o  instanceof  JsonObject  ||  o  instanceof  String)  {  return  JsonToken.BEGIN_OBJECT;  [BUGGY]      return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	replace	}        else        if(o        instanceof        JsonObject        ||        o        instanceof        String)        {        return    JsonToken.BEGIN_OBJECT;    }  else  if(o  instanceof  JsonObject  ||  o  instanceof  String)  {  return  JsonToken.BEGIN_OBJECT;  }  else  if(o  instanceof  JsonObject  ||  o  instanceof  String)  {  return  JsonToken.BEGIN_OBJECT;	  	compilable	  [FE]  ArrayIndexOutOfBoundsException  	151	2	add
30	[BUG]  [BUGGY]  }    else    if(o    instanceof    JsonObject    ||    o    instanceof    String)    {    return  JsonToken.BEGIN_OBJECT;  if(o  instanceof  JsonObject  ||  o  instanceof  String)  {  return  JsonToken.BEGIN_OBJECT;  }  else  if(o  instanceof  JsonObject  ||  o  instanceof  String)  {  return  JsonToken.BEGIN_OBJECT;  }  [CE]  unreachable  statement  [FE]            ArrayIndexOutOfBoundsException    [CONTEXT]      if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }      [BUGGY]  }    else    if(o    instanceof    JsonObject    ||    o    instanceof    String)    {    return  JsonToken.BEGIN_OBJECT;  if(o  instanceof  JsonObject  ||  o  instanceof  String)  {  return  JsonToken.BEGIN_OBJECT;  }  else  if(o  instanceof  JsonObject  ||  o  instanceof  String)  {  return  JsonToken.BEGIN_OBJECT;  }  [BUGGY]      return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	replace	}        else        if(o        instanceof        JsonObject        ||        o        instanceof        String)        {        return    JsonToken.BEGIN_OBJECT;    if(o  instanceof  JsonObject  ||  o  instanceof  String)  {  return  JsonToken.BEGIN_OBJECT;  }  else  if(o  instanceof  JsonObject  ||  o  instanceof  String)  {  return  JsonToken.BEGIN_OBJECT;  }	  	non-compiled	[CE]  unreachable  statement	151	None	add
31	[BUG]  [BUGGY]  [FE]  ArrayIndexOutOfBoundsException  [FE]              ArrayIndexOutOfBoundsException    [CONTEXT]      if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }      [BUGGY]  }    else    if(o    instanceof    JsonObject    ||    o    instanceof    String)    {    return  JsonToken.BEGIN_OBJECT;  }  else  if(o  instanceof  JsonObject  ||  o  instanceof  String)  {  return  JsonToken.BEGIN_OBJECT;  [BUGGY]      return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	add	}        else        if(o        instanceof        JsonObject        ||        o        instanceof        String)        {        return    JsonToken.BEGIN_OBJECT;    }  else  if(o  instanceof  JsonObject  ||  o  instanceof  String)  {  return  JsonToken.BEGIN_OBJECT;	  	compilable	  [FE]  ArrayIndexOutOfBoundsException  	151	2	add
32	[BUG]  [BUGGY]  }    else    if(o    instanceof    JsonObject    ||    o    instanceof    String)    {    return  JsonToken.BEGIN_OBJECT;  }  else  if(o  instanceof  JsonObject  ||  o  instanceof  String)  {  return  JsonToken.BEGIN_OBJECT;  [FE]  ArrayIndexOutOfBoundsException  [FE]              ArrayIndexOutOfBoundsException    [CONTEXT]      if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }      [BUGGY]  }    else    if(o    instanceof    JsonObject    ||    o    instanceof    String)    {    return  JsonToken.BEGIN_OBJECT;  }  else  if(o  instanceof  JsonObject  ||  o  instanceof  String)  {  return  JsonToken.BEGIN_OBJECT;  [BUGGY]      return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	replace	}        else        if(o        instanceof        JsonObject        ||        o        instanceof        String)        {        return    JsonToken.BEGIN_OBJECT;    }  else  if(o  instanceof  JsonObject  ||  o  instanceof  String)  {  return  JsonToken.BEGIN_OBJECT;	  	compilable	  [FE]  ArrayIndexOutOfBoundsException  	151	2	add
33	[BUG]  [BUGGY]  }    else    if(o    instanceof    JsonObject    ||    o    instanceof    String)    {    return  JsonToken.BEGIN_OBJECT;  else  if(o  instanceof  JsonObject  ||  o  instanceof  String)  {  return  JsonToken.BEGIN_OBJECT;  }  else  if(o  instanceof  JsonObject  ||  o  instanceof  String)  {  return  JsonToken.BEGIN_OBJECT;  }  [CE]  'else'  without  'if'  [FE]                ArrayIndexOutOfBoundsException    [CONTEXT]      if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }      [BUGGY]  }    else    if(o    instanceof    JsonObject    ||    o    instanceof    String)    {    return  JsonToken.BEGIN_OBJECT;  else  if(o  instanceof  JsonObject  ||  o  instanceof  String)  {  return  JsonToken.BEGIN_OBJECT;  }  else  if(o  instanceof  JsonObject  ||  o  instanceof  String)  {  return  JsonToken.BEGIN_OBJECT;  }  [BUGGY]      return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	replace	}        else        if(o        instanceof        JsonObject        ||        o        instanceof        String)        {        return    JsonToken.BEGIN_OBJECT;    else  if(o  instanceof  JsonObject  ||  o  instanceof  String)  {  return  JsonToken.BEGIN_OBJECT;  }  else  if(o  instanceof  JsonObject  ||  o  instanceof  String)  {  return  JsonToken.BEGIN_OBJECT;  }	  	non-compiled	[CE]  'else'  without  'if'	151	None	add
34	[BUG]  [BUGGY]  }    else    if(o    instanceof    JsonObject    ||    o    instanceof    String)    {    return  JsonToken.BEGIN_OBJECT;  }  else  if(o  instanceof  JsonObject  ||  o  instanceof  String)  {  return  JsonToken.BEGIN_OBJECT;  }  else  if(o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_OBJECT;  }  [CE]  illegal  start  of  type  [FE]                  ArrayIndexOutOfBoundsException    [CONTEXT]      if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }      [BUGGY]  }    else    if(o    instanceof    JsonObject    ||    o    instanceof    String)    {    return  JsonToken.BEGIN_OBJECT;  }  else  if(o  instanceof  JsonObject  ||  o  instanceof  String)  {  return  JsonToken.BEGIN_OBJECT;  }  else  if(o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_OBJECT;  }  [BUGGY]      return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	replace	}        else        if(o        instanceof        JsonObject        ||        o        instanceof        String)        {        return    JsonToken.BEGIN_OBJECT;    }  else  if(o  instanceof  JsonObject  ||  o  instanceof  String)  {  return  JsonToken.BEGIN_OBJECT;  }  else  if(o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_OBJECT;  }	  	non-compiled	[CE]  illegal  start  of  type	151	None	add
35	[BUG]  [BUGGY]  }  else  if(o  instanceof  String)  {  }  else  if(o  instanceof  JsonObject  ||  o  instanceof  JsonPrimitive)  {  return  JsonToken.BEGIN_OBJECT;  }  [CE]  illegal  start  of  type  [FE]              ArrayIndexOutOfBoundsException      [CONTEXT]      if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }      [BUGGY]  }  else  if(o  instanceof  String)  {  }  else  if(o  instanceof  JsonObject  ||  o  instanceof  JsonPrimitive)  {  return  JsonToken.BEGIN_OBJECT;  }  [BUGGY]      return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	replace	}  else  if(o  instanceof  String)  {  }  else  if(o  instanceof  JsonObject  ||  o  instanceof  JsonPrimitive)  {  return  JsonToken.BEGIN_OBJECT;  }	  }    else    if(o    instanceof    JsonObject    ||    o    instanceof    JsonPrimitive)    {    }    else    if(o    instanceof    JsonObject    ||    o    instanceof    JsonPrimitive)    <    return    JsonToken.BEGIN_OBJECT;    	non-compiled	[CE]  illegal  start  of  type	59	None	replace
36	[BUG]  [BUGGY]  }  else  if(o  instanceof  JsonObject  &&  o  instanceof  JsonPrimitive)  <  return  JsonToken.BEGIN_OBJECT;  [CE]  illegal  start  of  type  [FE]                ArrayIndexOutOfBoundsException      [CONTEXT]      if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }      [BUGGY]  }  else  if(o  instanceof  JsonObject  &&  o  instanceof  JsonPrimitive)  <  return  JsonToken.BEGIN_OBJECT;  [BUGGY]      return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	replace	}  else  if(o  instanceof  JsonObject  &&  o  instanceof  JsonPrimitive)  <  return  JsonToken.BEGIN_OBJECT;	  }    else    if(o    instanceof    JsonObject    ||    o    instanceof    JsonPrimitive)    {    }    else    if(o    instanceof    JsonObject    ||    o    instanceof    JsonPrimitive)    <    return    JsonToken.BEGIN_OBJECT;    	non-compiled	[CE]  illegal  start  of  type	59	None	replace
37	[BUG]  [BUGGY]  }  else  if(o  instanceof  JsonObject)  {  }  else  if(o  instanceof  JsonObject  ||  o  instanceof  JsonPrimitive)  {  return  JsonToken.BEGIN_OBJECT;  }  [CE]  illegal  start  of  type  [FE]                  ArrayIndexOutOfBoundsException      [CONTEXT]      if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }      [BUGGY]  }  else  if(o  instanceof  JsonObject)  {  }  else  if(o  instanceof  JsonObject  ||  o  instanceof  JsonPrimitive)  {  return  JsonToken.BEGIN_OBJECT;  }  [BUGGY]      return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	replace	}  else  if(o  instanceof  JsonObject)  {  }  else  if(o  instanceof  JsonObject  ||  o  instanceof  JsonPrimitive)  {  return  JsonToken.BEGIN_OBJECT;  }	  }    else    if(o    instanceof    JsonObject    ||    o    instanceof    JsonPrimitive)    {    }    else    if(o    instanceof    JsonObject    ||    o    instanceof    JsonPrimitive)    <    return    JsonToken.BEGIN_OBJECT;    	non-compiled	[CE]  illegal  start  of  type	59	None	replace
38	[BUG]  [BUGGY]  }  else  if(o  instanceof  JsonObject)  {  }  else  if(o  instanceof  JsonObject  ||  o  instanceof  JsonPrimitive)  <  return  JsonToken.BEGIN_OBJECT;  [CE]  illegal  start  of  type  [FE]                    ArrayIndexOutOfBoundsException      [CONTEXT]      if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }      [BUGGY]  }  else  if(o  instanceof  JsonObject)  {  }  else  if(o  instanceof  JsonObject  ||  o  instanceof  JsonPrimitive)  <  return  JsonToken.BEGIN_OBJECT;  [BUGGY]      return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	replace	}  else  if(o  instanceof  JsonObject)  {  }  else  if(o  instanceof  JsonObject  ||  o  instanceof  JsonPrimitive)  <  return  JsonToken.BEGIN_OBJECT;	  }    else    if(o    instanceof    JsonObject    ||    o    instanceof    JsonPrimitive)    {    }    else    if(o    instanceof    JsonObject    ||    o    instanceof    JsonPrimitive)    <    return    JsonToken.BEGIN_OBJECT;    	non-compiled	[CE]  illegal  start  of  type	59	None	replace
39	[BUG]  [BUGGY]  }  else  if(o  instanceof  String)  {  }  else  if(o  instanceof  JsonObject  ||  o  instanceof  JsonPrimitive)  <  return  JsonToken.BEGIN_OBJECT;  [CE]  illegal  start  of  type  [FE]                      ArrayIndexOutOfBoundsException      [CONTEXT]      if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }      [BUGGY]  }  else  if(o  instanceof  String)  {  }  else  if(o  instanceof  JsonObject  ||  o  instanceof  JsonPrimitive)  <  return  JsonToken.BEGIN_OBJECT;  [BUGGY]      return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	replace	}  else  if(o  instanceof  String)  {  }  else  if(o  instanceof  JsonObject  ||  o  instanceof  JsonPrimitive)  <  return  JsonToken.BEGIN_OBJECT;	  }    else    if(o    instanceof    JsonObject    ||    o    instanceof    JsonPrimitive)    {    }    else    if(o    instanceof    JsonObject    ||    o    instanceof    JsonPrimitive)    <    return    JsonToken.BEGIN_OBJECT;    	non-compiled	[CE]  illegal  start  of  type	59	None	replace
40	[BUG]  [BUGGY]  }  else  if(o  instanceof  JsonNull  ||!(o  instanceof  JsonNull  &&  isArray))  {  [CE]  cannot  find  symbol  isArray  [FE]                AssertionError      [CONTEXT]      if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }      [BUGGY]  }  else  if(o  instanceof  JsonNull  ||!(o  instanceof  JsonNull  &&  isArray))  {  [BUGGY]      return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	replace	}  else  if(o  instanceof  JsonNull  ||!(o  instanceof  JsonNull  &&  isArray))  {	  }    else    if(o    instanceof    JsonNull    ||!(o    instanceof    JsonNull    &&    isObject))    {    	non-compiled	[CE]  cannot  find  symbol  isArray	7	None	replace
41	[BUG]  [BUGGY]  }  else  if(o  instanceof  JsonNull  ||!(o  instanceof  JsonNull  &&  Primitive.EMPTY_STRING_OBJECT))  {  [CE]  cannot  find  symbol  Primitive  [FE]                  AssertionError      [CONTEXT]      if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }      [BUGGY]  }  else  if(o  instanceof  JsonNull  ||!(o  instanceof  JsonNull  &&  Primitive.EMPTY_STRING_OBJECT))  {  [BUGGY]      return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	replace	}  else  if(o  instanceof  JsonNull  ||!(o  instanceof  JsonNull  &&  Primitive.EMPTY_STRING_OBJECT))  {	  }    else    if(o    instanceof    JsonNull    ||!(o    instanceof    JsonNull    &&    isObject))    {    	non-compiled	[CE]  cannot  find  symbol  Primitive	7	None	replace
42	[BUG]  [BUGGY]  }  else  if(o  instanceof  JsonNull  ||!(o  instanceof  JsonNull  &&  hasObject()))  {  [CE]  cannot  find  symbol  [FE]                    AssertionError      [CONTEXT]      if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }      [BUGGY]  }  else  if(o  instanceof  JsonNull  ||!(o  instanceof  JsonNull  &&  hasObject()))  {  [BUGGY]      return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	replace	}  else  if(o  instanceof  JsonNull  ||!(o  instanceof  JsonNull  &&  hasObject()))  {	  }    else    if(o    instanceof    JsonNull    ||!(o    instanceof    JsonNull    &&    isObject))    {    	non-compiled	[CE]  cannot  find  symbol	7	None	replace
43	[BUG]  [BUGGY]  }  else  if(o  instanceof  JsonNull  ||!(o  instanceof  JsonNull  &&  isObjectType))  {  [CE]  cannot  find  symbol  isObjectType  [FE]                      AssertionError      [CONTEXT]      if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }      [BUGGY]  }  else  if(o  instanceof  JsonNull  ||!(o  instanceof  JsonNull  &&  isObjectType))  {  [BUGGY]      return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	replace	}  else  if(o  instanceof  JsonNull  ||!(o  instanceof  JsonNull  &&  isObjectType))  {	  }    else    if(o    instanceof    JsonNull    ||!(o    instanceof    JsonNull    &&    isObject))    {    	non-compiled	[CE]  cannot  find  symbol  isObjectType	7	None	replace
44	[BUG]  [BUGGY]  }  else  if(o  instanceof  JsonNull  ||!(o  instanceof  JsonNull  &&  areObject))  {  [CE]  cannot  find  symbol  areObject  [FE]                        AssertionError      [CONTEXT]      if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }      [BUGGY]  }  else  if(o  instanceof  JsonNull  ||!(o  instanceof  JsonNull  &&  areObject))  {  [BUGGY]      return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	replace	}  else  if(o  instanceof  JsonNull  ||!(o  instanceof  JsonNull  &&  areObject))  {	  }    else    if(o    instanceof    JsonNull    ||!(o    instanceof    JsonNull    &&    isObject))    {    	non-compiled	[CE]  cannot  find  symbol  areObject	7	None	replace
45	[BUG]  [BUGGY]  [FE]  ArrayIndexOutOfBoundsException  [FE]              AssertionError      [CONTEXT]      if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }      [BUGGY]  }  else  if(!(o  instanceof  JsonArray)||!(o  instanceof  JsonObject))  {  [BUGGY]      return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	add	}  else  if(!(o  instanceof  JsonArray)||!(o  instanceof  JsonObject))  {	  }    else    if(!(o    instanceof    JsonObject))    {    }    else    if(!(o    instanceof    JsonObject)    ||(o    instanceof    JsonObject))    {    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	94	2	replace
46	[BUG]  [BUGGY]  }  else  if(!(o  instanceof  JsonArray)||!(o  instanceof  JsonObject))  {  [FE]  ArrayIndexOutOfBoundsException  [FE]              AssertionError      [CONTEXT]      if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }      [BUGGY]  }  else  if(!(o  instanceof  JsonArray)||!(o  instanceof  JsonObject))  {  [BUGGY]      return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	replace	}  else  if(!(o  instanceof  JsonArray)||!(o  instanceof  JsonObject))  {	  }    else    if(!(o    instanceof    JsonObject))    {    }    else    if(!(o    instanceof    JsonObject)    ||(o    instanceof    JsonObject))    {    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	94	2	replace
47	[BUG]  [BUGGY]  [FE]  ArrayIndexOutOfBoundsException  [FE]                AssertionError      [CONTEXT]      if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }      [BUGGY]  }  else  if(!(o  instanceof  String)||!(o  instanceof  JsonObject))  {  [BUGGY]      return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	add	}  else  if(!(o  instanceof  String)||!(o  instanceof  JsonObject))  {	  }    else    if(!(o    instanceof    JsonObject))    {    }    else    if(!(o    instanceof    JsonObject)    ||(o    instanceof    JsonObject))    {    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	94	2	replace
48	[BUG]  [BUGGY]  }  else  if(!(o  instanceof  String)||!(o  instanceof  JsonObject))  {  [FE]  ArrayIndexOutOfBoundsException  [FE]                AssertionError      [CONTEXT]      if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }      [BUGGY]  }  else  if(!(o  instanceof  String)||!(o  instanceof  JsonObject))  {  [BUGGY]      return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	replace	}  else  if(!(o  instanceof  String)||!(o  instanceof  JsonObject))  {	  }    else    if(!(o    instanceof    JsonObject))    {    }    else    if(!(o    instanceof    JsonObject)    ||(o    instanceof    JsonObject))    {    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	94	2	replace
49	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]                  AssertionError      [CONTEXT]      if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }      [BUGGY]  }  else  if(!(o  instanceof  JsonObject)&&!(o  instanceof  JsonObject))  {  [BUGGY]      return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	add	}  else  if(!(o  instanceof  JsonObject)&&!(o  instanceof  JsonObject))  {	  }    else    if(!(o    instanceof    JsonObject))    {    }    else    if(!(o    instanceof    JsonObject)    ||(o    instanceof    JsonObject))    {    	compilable	  [FE]  AssertionError  	94	2	replace
50	[BUG]  [BUGGY]  }  else  if(!(o  instanceof  JsonObject)&&!(o  instanceof  JsonObject))  {  [FE]  AssertionError  [FE]                  AssertionError      [CONTEXT]      if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }      [BUGGY]  }  else  if(!(o  instanceof  JsonObject)&&!(o  instanceof  JsonObject))  {  [BUGGY]      return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	replace	}  else  if(!(o  instanceof  JsonObject)&&!(o  instanceof  JsonObject))  {	  }    else    if(!(o    instanceof    JsonObject))    {    }    else    if(!(o    instanceof    JsonObject)    ||(o    instanceof    JsonObject))    {    	compilable	  [FE]  AssertionError  	94	2	replace
51	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]                    AssertionError      [CONTEXT]      if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }      [BUGGY]  }  else  if(!(o  instanceof  String)&&!(o  instanceof  JsonObject))  {  [BUGGY]      return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	add	}  else  if(!(o  instanceof  String)&&!(o  instanceof  JsonObject))  {	  }    else    if(!(o    instanceof    JsonObject))    {    }    else    if(!(o    instanceof    JsonObject)    ||(o    instanceof    JsonObject))    {    	compilable	  [FE]  AssertionError  	94	2	replace
52	[BUG]  [BUGGY]  }  else  if(!(o  instanceof  String)&&!(o  instanceof  JsonObject))  {  [FE]  AssertionError  [FE]                    AssertionError      [CONTEXT]      if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }      [BUGGY]  }  else  if(!(o  instanceof  String)&&!(o  instanceof  JsonObject))  {  [BUGGY]      return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	replace	}  else  if(!(o  instanceof  String)&&!(o  instanceof  JsonObject))  {	  }    else    if(!(o    instanceof    JsonObject))    {    }    else    if(!(o    instanceof    JsonObject)    ||(o    instanceof    JsonObject))    {    	compilable	  [FE]  AssertionError  	94	2	replace
53	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]                      AssertionError      [CONTEXT]      if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }      [BUGGY]  }  else  if(!(o  instanceof  JsonArray)&&!(o  instanceof  JsonObject))  {  [BUGGY]      return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	add	}  else  if(!(o  instanceof  JsonArray)&&!(o  instanceof  JsonObject))  {	  }    else    if(!(o    instanceof    JsonObject))    {    }    else    if(!(o    instanceof    JsonObject)    ||(o    instanceof    JsonObject))    {    	compilable	  [FE]  AssertionError  	94	2	replace
54	[BUG]  [BUGGY]  }  else  if(!(o  instanceof  JsonArray)&&!(o  instanceof  JsonObject))  {  [FE]  AssertionError  [FE]                      AssertionError      [CONTEXT]      if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }      [BUGGY]  }  else  if(!(o  instanceof  JsonArray)&&!(o  instanceof  JsonObject))  {  [BUGGY]      return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	replace	}  else  if(!(o  instanceof  JsonArray)&&!(o  instanceof  JsonObject))  {	  }    else    if(!(o    instanceof    JsonObject))    {    }    else    if(!(o    instanceof    JsonObject)    ||(o    instanceof    JsonObject))    {    	compilable	  [FE]  AssertionError  	94	2	replace
55	[BUG]  [BUGGY]  [FE]  ArrayIndexOutOfBoundsException  [FE]                        AssertionError      [CONTEXT]      if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }      [BUGGY]  }  else  if(!(o  instanceof  JsonObject)||!(o  instanceof  JsonArray))  {  [BUGGY]      return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	add	}  else  if(!(o  instanceof  JsonObject)||!(o  instanceof  JsonArray))  {	  }    else    if(!(o    instanceof    JsonObject))    {    }    else    if(!(o    instanceof    JsonObject)    ||(o    instanceof    JsonObject))    {    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	94	2	replace
56	[BUG]  [BUGGY]  }  else  if(!(o  instanceof  JsonObject)||!(o  instanceof  JsonArray))  {  [FE]  ArrayIndexOutOfBoundsException  [FE]                        AssertionError      [CONTEXT]      if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }      [BUGGY]  }  else  if(!(o  instanceof  JsonObject)||!(o  instanceof  JsonArray))  {  [BUGGY]      return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	replace	}  else  if(!(o  instanceof  JsonObject)||!(o  instanceof  JsonArray))  {	  }    else    if(!(o    instanceof    JsonObject))    {    }    else    if(!(o    instanceof    JsonObject)    ||(o    instanceof    JsonObject))    {    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	94	2	replace
57	[BUG]  [BUGGY]  }  else  if(o  instanceof  JsonString)  {  [CE]  cannot  find  symbol  [FE]    AssertionError    [CONTEXT]      if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }      [BUGGY]  }  else  if(o  instanceof  JsonString)  {  [BUGGY]      return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	replace	}  else  if(o  instanceof  JsonString)  {	  }    else    if(o    instanceof    JsonToken)    {    	non-compiled	[CE]  cannot  find  symbol	198	None	replace
58	[BUG]  [BUGGY]  }  else  if(o  instanceof  JsonEnum)  {  [CE]  cannot  find  symbol  [FE]      AssertionError    [CONTEXT]      if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }      [BUGGY]  }  else  if(o  instanceof  JsonEnum)  {  [BUGGY]      return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	replace	}  else  if(o  instanceof  JsonEnum)  {	  }    else    if(o    instanceof    JsonToken)    {    	non-compiled	[CE]  cannot  find  symbol	198	None	replace
59	[BUG]  [BUGGY]  }  else  if(o  instanceof  JsonUnknown)  {  [CE]  cannot  find  symbol  [FE]        AssertionError    [CONTEXT]      if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }      [BUGGY]  }  else  if(o  instanceof  JsonUnknown)  {  [BUGGY]      return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	replace	}  else  if(o  instanceof  JsonUnknown)  {	  }    else    if(o    instanceof    JsonToken)    {    	non-compiled	[CE]  cannot  find  symbol	198	None	replace
60	[BUG]  [BUGGY]  }  else  if(o  instanceof  JsonObject  >=  false)  {  [CE]  bad  operand  types  for  binary  operator  '>='  [FE]            ArrayIndexOutOfBoundsException      [CONTEXT]      if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }      [BUGGY]  }  else  if(o  instanceof  JsonObject  >=  false)  {  [BUGGY]      return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	replace	}  else  if(o  instanceof  JsonObject  >=  false)  {	  }    else    if(o    instanceof    JsonObject    <    =)    {    	non-compiled	[CE]  bad  operand  types  for  binary  operator  '>='	30	None	replace
61	[BUG]  [BUGGY]  }  else  if(o  instanceof  JsonObject  >>  false)  {  [CE]  cannot  find  symbol  JsonObject  [FE]              ArrayIndexOutOfBoundsException      [CONTEXT]      if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }      [BUGGY]  }  else  if(o  instanceof  JsonObject  >>  false)  {  [BUGGY]      return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	replace	}  else  if(o  instanceof  JsonObject  >>  false)  {	  }    else    if(o    instanceof    JsonObject    <    =)    {    	non-compiled	[CE]  cannot  find  symbol  JsonObject	30	None	replace
62	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }      [BUGGY]  }  else  if(o  instanceof  JsonPrimitive  ||  o  instanceof  String)  {  [BUGGY]      return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	add	}  else  if(o  instanceof  JsonPrimitive  ||  o  instanceof  String)  {	  }    else    if(o    instanceof    JsonArray    ||    o    instanceof    String)    {    	compilable	  [FE]  AssertionError  	52	2	replace
63	[BUG]  [BUGGY]  }  else  if(o  instanceof  JsonPrimitive  ||  o  instanceof  String)  {  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }      [BUGGY]  }  else  if(o  instanceof  JsonPrimitive  ||  o  instanceof  String)  {  [BUGGY]      return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	replace	}  else  if(o  instanceof  JsonPrimitive  ||  o  instanceof  String)  {	  }    else    if(o    instanceof    JsonArray    ||    o    instanceof    String)    {    	compilable	  [FE]  AssertionError  	52	2	replace
64	[BUG]  [BUGGY]  }  else  if(o  instanceof  JsonType  <  Object>||  o  instanceof  String)  {  [CE]  cannot  find  symbol  [FE]      AssertionError    [CONTEXT]      if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }      [BUGGY]  }  else  if(o  instanceof  JsonType  <  Object>||  o  instanceof  String)  {  [BUGGY]      return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	replace	}  else  if(o  instanceof  JsonType  <  Object>||  o  instanceof  String)  {	  }    else    if(o    instanceof    JsonArray    ||    o    instanceof    String)    {    	non-compiled	[CE]  cannot  find  symbol	52	None	replace
65	[BUG]  [BUGGY]  if(isObject)return  JsonToken.NUMBER;  else  {  push(iterator.next());  return  JsonToken.END_ARRAY;  }  [CE]  unreachable  statement  [FE]                              ArrayIndexOutOfBoundsException      [CONTEXT]      if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }      [BUGGY]  if(isObject)return  JsonToken.NUMBER;  else  {  push(iterator.next());  return  JsonToken.END_ARRAY;  }  [BUGGY]      return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	replace	if(isObject)return  JsonToken.NUMBER;  else  {  push(iterator.next());  return  JsonToken.END_ARRAY;  }	  if(o    ==    null)return    JsonToken.NUMBER;    else    {    push(iterator.next());    return    JsonToken.END_ARRAY;    }    	non-compiled	[CE]  unreachable  statement	226	None	replace
66	[BUG]  [BUGGY]  else  if(o  ==  null)return  JsonToken.NUMBER;  else  {  push(iterator.next());  return  JsonToken.END_ARRAY;  }  [CE]  'else'  without  'if'  [FE]                                ArrayIndexOutOfBoundsException      [CONTEXT]      if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }      [BUGGY]  else  if(o  ==  null)return  JsonToken.NUMBER;  else  {  push(iterator.next());  return  JsonToken.END_ARRAY;  }  [BUGGY]      return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	replace	else  if(o  ==  null)return  JsonToken.NUMBER;  else  {  push(iterator.next());  return  JsonToken.END_ARRAY;  }	  if(o    ==    null)return    JsonToken.NUMBER;    else    {    push(iterator.next());    return    JsonToken.END_ARRAY;    }    	non-compiled	[CE]  'else'  without  'if'	226	None	replace
67	[BUG]  [BUGGY]  else  if(o  instanceof  JsonArray)  {  if(isObject)  return  JsonToken.NUMBER;  else  {  push(iterator.next());  return  JsonToken.END_ARRAY;  }  [CE]  'else'  without  'if'  [FE]                                  ArrayIndexOutOfBoundsException      [CONTEXT]      if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }      [BUGGY]  else  if(o  instanceof  JsonArray)  {  if(isObject)  return  JsonToken.NUMBER;  else  {  push(iterator.next());  return  JsonToken.END_ARRAY;  }  [BUGGY]      return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	replace	else  if(o  instanceof  JsonArray)  {  if(isObject)  return  JsonToken.NUMBER;  else  {  push(iterator.next());  return  JsonToken.END_ARRAY;  }	  if(o    ==    null)return    JsonToken.NUMBER;    else    {    push(iterator.next());    return    JsonToken.END_ARRAY;    }    	non-compiled	[CE]  'else'  without  'if'	226	None	replace
68	[BUG]  [BUGGY]  return  JsonToken.NUMBER;  else  {  push(iterator.next());  return  JsonToken.END_ARRAY;  }  [CE]  'else'  without  'if'  [FE]                                    ArrayIndexOutOfBoundsException      [CONTEXT]      if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }      [BUGGY]  return  JsonToken.NUMBER;  else  {  push(iterator.next());  return  JsonToken.END_ARRAY;  }  [BUGGY]      return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	replace	return  JsonToken.NUMBER;  else  {  push(iterator.next());  return  JsonToken.END_ARRAY;  }	  if(o    ==    null)return    JsonToken.NUMBER;    else    {    push(iterator.next());    return    JsonToken.END_ARRAY;    }    	non-compiled	[CE]  'else'  without  'if'	226	None	replace
69	[BUG]  [BUGGY]  [FE]  ArrayIndexOutOfBoundsException  [FE]              ArrayIndexOutOfBoundsException      [CONTEXT]      if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }      [BUGGY]  }  else  if(!(o  instanceof  JsonArray  ||  o  instanceof  JsonArray))  {  [BUGGY]      return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	add	}  else  if(!(o  instanceof  JsonArray  ||  o  instanceof  JsonArray))  {	  }    else    if(!(o    instanceof    JsonArray))    {    <    }    else    if(!(o    instanceof    JsonArray))    {    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	86	2	replace
70	[BUG]  [BUGGY]  }  else  if(!(o  instanceof  JsonArray  ||  o  instanceof  JsonArray))  {  [FE]  ArrayIndexOutOfBoundsException  [FE]              ArrayIndexOutOfBoundsException      [CONTEXT]      if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }      [BUGGY]  }  else  if(!(o  instanceof  JsonArray  ||  o  instanceof  JsonArray))  {  [BUGGY]      return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	replace	}  else  if(!(o  instanceof  JsonArray  ||  o  instanceof  JsonArray))  {	  }    else    if(!(o    instanceof    JsonArray))    {    <    }    else    if(!(o    instanceof    JsonArray))    {    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	86	2	replace
71	[BUG]  [BUGGY]  }  else  if(!(o  instanceof  JsonObject  ||  o  instanceof  JsonArray))  {  }  else  if(!(o  instanceof  JsonObject  ||  o  instanceof  JsonArray))  {  [CE]  missing  return  statement  [FE]    AssertionError    [CONTEXT]      if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }      [BUGGY]  }  else  if(!(o  instanceof  JsonObject  ||  o  instanceof  JsonArray))  {  }  else  if(!(o  instanceof  JsonObject  ||  o  instanceof  JsonArray))  {  [BUGGY]      return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	replace	}    else    if(!(o    instanceof    JsonObject    ||    o    instanceof    JsonArray))    {    }  else  if(!(o  instanceof  JsonObject  ||  o  instanceof  JsonArray))  {	  	non-compiled	[CE]  missing  return  statement	136	None	add
72	[BUG]  [BUGGY]  }  else  if(!(o  instanceof  JsonObject  ||  o  instanceof  JsonArray))  {  else  if(!(o  instanceof  JsonObject  ||  o  instanceof  JsonArray))  {  [CE]  'else'  without  'if'  [FE]      AssertionError    [CONTEXT]      if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }      [BUGGY]  }  else  if(!(o  instanceof  JsonObject  ||  o  instanceof  JsonArray))  {  else  if(!(o  instanceof  JsonObject  ||  o  instanceof  JsonArray))  {  [BUGGY]      return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	replace	}    else    if(!(o    instanceof    JsonObject    ||    o    instanceof    JsonArray))    {    else  if(!(o  instanceof  JsonObject  ||  o  instanceof  JsonArray))  {	  	non-compiled	[CE]  'else'  without  'if'	136	None	add
73	[BUG]  [BUGGY]  }  else  if(!(o  instanceof  JsonObject  ||  o  instanceof  JsonArray))  {  }  else  if(!(o  instanceof  JsonObject  ||  o  instanceof  JsonArray))  <  return  JsonToken.BEGIN_OBJECT;  [CE]  illegal  start  of  type  [FE]        AssertionError    [CONTEXT]      if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }      [BUGGY]  }  else  if(!(o  instanceof  JsonObject  ||  o  instanceof  JsonArray))  {  }  else  if(!(o  instanceof  JsonObject  ||  o  instanceof  JsonArray))  <  return  JsonToken.BEGIN_OBJECT;  [BUGGY]      return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	replace	}    else    if(!(o    instanceof    JsonObject    ||    o    instanceof    JsonArray))    {    }  else  if(!(o  instanceof  JsonObject  ||  o  instanceof  JsonArray))  <  return  JsonToken.BEGIN_OBJECT;	  	non-compiled	[CE]  illegal  start  of  type	136	None	add
74	[BUG]  [BUGGY]  }  else  if(!(o  instanceof  JsonObject  ||  o  instanceof  JsonArray))  {  <  }  else  if(!(o  instanceof  JsonObject  ||  o  instanceof  JsonArray))  {  [CE]  illegal  start  of  type  [FE]          AssertionError    [CONTEXT]      if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }      [BUGGY]  }  else  if(!(o  instanceof  JsonObject  ||  o  instanceof  JsonArray))  {  <  }  else  if(!(o  instanceof  JsonObject  ||  o  instanceof  JsonArray))  {  [BUGGY]      return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	replace	}    else    if(!(o    instanceof    JsonObject    ||    o    instanceof    JsonArray))    {    <  }  else  if(!(o  instanceof  JsonObject  ||  o  instanceof  JsonArray))  {	  	non-compiled	[CE]  illegal  start  of  type	136	None	add
75	[BUG]  [BUGGY]  }  else  if(!(o  instanceof  JsonObject  ||  o  instanceof  JsonArray))  {  }  else  if(!(o  instanceof  JSONObject  ||  o  instanceof  JsonArray))  {  [CE]  cannot  find  symbol  [FE]            AssertionError    [CONTEXT]      if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }      [BUGGY]  }  else  if(!(o  instanceof  JsonObject  ||  o  instanceof  JsonArray))  {  }  else  if(!(o  instanceof  JSONObject  ||  o  instanceof  JsonArray))  {  [BUGGY]      return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	replace	}    else    if(!(o    instanceof    JsonObject    ||    o    instanceof    JsonArray))    {    }  else  if(!(o  instanceof  JSONObject  ||  o  instanceof  JsonArray))  {	  	non-compiled	[CE]  cannot  find  symbol	136	None	add
76	[BUG]  [BUGGY]  }  else  if(!(o  instanceof  JsonObject  ||  o  instanceof  JsonArray))  {  }  else  if(!(o  instanceof  JsonObject  ||  o  instanceof  JSONArray))  {  [CE]  cannot  find  symbol  [FE]              AssertionError    [CONTEXT]      if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }      [BUGGY]  }  else  if(!(o  instanceof  JsonObject  ||  o  instanceof  JsonArray))  {  }  else  if(!(o  instanceof  JsonObject  ||  o  instanceof  JSONArray))  {  [BUGGY]      return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	replace	}    else    if(!(o    instanceof    JsonObject    ||    o    instanceof    JsonArray))    {    }  else  if(!(o  instanceof  JsonObject  ||  o  instanceof  JSONArray))  {	  	non-compiled	[CE]  cannot  find  symbol	136	None	add
77	[BUG]  [BUGGY]  }  else  if(o  instanceof  JsonNull  ||!(o  instanceof  JsonNull  &&!((  JsonNull)o).isObject())  {  [CE]  ')'  expected  [FE]            AssertionError      [CONTEXT]      if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }      [BUGGY]  }  else  if(o  instanceof  JsonNull  ||!(o  instanceof  JsonNull  &&!((  JsonNull)o).isObject())  {  [BUGGY]      return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	replace	}  else  if(o  instanceof  JsonNull  ||!(o  instanceof  JsonNull  &&!((  JsonNull)o).isObject())  {	  }    else    if(o    instanceof    JsonNull    ||!(o    instanceof    JsonNull    &&!(o    instanceof    JsonNull    &&!((    JsonNull)o).isArray()))    {    	non-compiled	[CE]  ')'  expected	237	None	replace
78	[BUG]  [BUGGY]  }  else  if(o  instanceof  JsonNull  ||!(o  instanceof  JsonNull  &&!((  JsonNull)o).isArray()))  {  [CE]  cannot  find  symbol  [FE]              AssertionError      [CONTEXT]      if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }      [BUGGY]  }  else  if(o  instanceof  JsonNull  ||!(o  instanceof  JsonNull  &&!((  JsonNull)o).isArray()))  {  [BUGGY]      return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	replace	}  else  if(o  instanceof  JsonNull  ||!(o  instanceof  JsonNull  &&!((  JsonNull)o).isArray()))  {	  }    else    if(o    instanceof    JsonNull    ||!(o    instanceof    JsonNull    &&!(o    instanceof    JsonNull    &&!((    JsonNull)o).isArray()))    {    	non-compiled	[CE]  cannot  find  symbol	237	None	replace
79	[BUG]  [BUGGY]  }  else  if(o  instanceof  String  ||  o  instanceof  JsonNull  ||!(o  instanceof  JsonNull  &&!((  JsonNull)o).isArray()))  {  [CE]  cannot  find  symbol  [FE]                AssertionError      [CONTEXT]      if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }      [BUGGY]  }  else  if(o  instanceof  String  ||  o  instanceof  JsonNull  ||!(o  instanceof  JsonNull  &&!((  JsonNull)o).isArray()))  {  [BUGGY]      return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	replace	}  else  if(o  instanceof  String  ||  o  instanceof  JsonNull  ||!(o  instanceof  JsonNull  &&!((  JsonNull)o).isArray()))  {	  }    else    if(o    instanceof    JsonNull    ||!(o    instanceof    JsonNull    &&!(o    instanceof    JsonNull    &&!((    JsonNull)o).isArray()))    {    	non-compiled	[CE]  cannot  find  symbol	237	None	replace
80	[BUG]  [BUGGY]  }  else  if(o  instanceof  JsonNull  &&!(o  instanceof  JsonNull  &&!((  JsonNull)o).isArray()))  {  [CE]  cannot  find  symbol  [FE]                  AssertionError      [CONTEXT]      if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }      [BUGGY]  }  else  if(o  instanceof  JsonNull  &&!(o  instanceof  JsonNull  &&!((  JsonNull)o).isArray()))  {  [BUGGY]      return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	replace	}  else  if(o  instanceof  JsonNull  &&!(o  instanceof  JsonNull  &&!((  JsonNull)o).isArray()))  {	  }    else    if(o    instanceof    JsonNull    ||!(o    instanceof    JsonNull    &&!(o    instanceof    JsonNull    &&!((    JsonNull)o).isArray()))    {    	non-compiled	[CE]  cannot  find  symbol	237	None	replace
81	[BUG]  [BUGGY]  }  else  if(o  instanceof  JsonNull  ||!(o  instanceof  JsonNull  &&!((  JsonNull)o).isNumber()))  {  [CE]  cannot  find  symbol  [FE]                    AssertionError      [CONTEXT]      if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }      [BUGGY]  }  else  if(o  instanceof  JsonNull  ||!(o  instanceof  JsonNull  &&!((  JsonNull)o).isNumber()))  {  [BUGGY]      return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	replace	}  else  if(o  instanceof  JsonNull  ||!(o  instanceof  JsonNull  &&!((  JsonNull)o).isNumber()))  {	  }    else    if(o    instanceof    JsonNull    ||!(o    instanceof    JsonNull    &&!(o    instanceof    JsonNull    &&!((    JsonNull)o).isArray()))    {    	non-compiled	[CE]  cannot  find  symbol	237	None	replace
82	[BUG]  [BUGGY]  }  else  if(o  instanceof  JsonNull  ||!(o  instanceof  JsonNull  &&!((  JsonNull)o).isEmpty())  {  [CE]  ')'  expected  [FE]                      AssertionError      [CONTEXT]      if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }      [BUGGY]  }  else  if(o  instanceof  JsonNull  ||!(o  instanceof  JsonNull  &&!((  JsonNull)o).isEmpty())  {  [BUGGY]      return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	replace	}  else  if(o  instanceof  JsonNull  ||!(o  instanceof  JsonNull  &&!((  JsonNull)o).isEmpty())  {	  }    else    if(o    instanceof    JsonNull    ||!(o    instanceof    JsonNull    &&!(o    instanceof    JsonNull    &&!((    JsonNull)o).isArray()))    {    	non-compiled	[CE]  ')'  expected	237	None	replace
83	[BUG]  [BUGGY]  }    else    if(o    instanceof    JsonObject    ||    o    instanceof    JsonArray)    {    return  JsonToken.BEGIN_OBJECT;  }  else  if(o  instanceof  JsonObject  ||  o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_OBJECT;  }  [CE]  illegal  start  of  type  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]      if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }      [BUGGY]  }    else    if(o    instanceof    JsonObject    ||    o    instanceof    JsonArray)    {    return  JsonToken.BEGIN_OBJECT;  }  else  if(o  instanceof  JsonObject  ||  o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_OBJECT;  }  [BUGGY]      return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	replace	}        else        if(o        instanceof        JsonObject        ||        o        instanceof        JsonArray)        {        return    JsonToken.BEGIN_OBJECT;    }  else  if(o  instanceof  JsonObject  ||  o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_OBJECT;  }	  	non-compiled	[CE]  illegal  start  of  type	193	None	add
84	[BUG]  [BUGGY]  }    else    if(o    instanceof    JsonObject    ||    o    instanceof    JsonArray)    {    return  JsonToken.BEGIN_OBJECT;  }  else  if(o  instanceof  JsonObject  ||  o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_OBJECT;  }  else  if(o  instanceof  JsonObject  ||  o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_OBJECT;  }  [CE]  illegal  start  of  type  [FE]      ArrayIndexOutOfBoundsException    [CONTEXT]      if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }      [BUGGY]  }    else    if(o    instanceof    JsonObject    ||    o    instanceof    JsonArray)    {    return  JsonToken.BEGIN_OBJECT;  }  else  if(o  instanceof  JsonObject  ||  o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_OBJECT;  }  else  if(o  instanceof  JsonObject  ||  o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_OBJECT;  }  [BUGGY]      return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	replace	}        else        if(o        instanceof        JsonObject        ||        o        instanceof        JsonArray)        {        return    JsonToken.BEGIN_OBJECT;    }  else  if(o  instanceof  JsonObject  ||  o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_OBJECT;  }  else  if(o  instanceof  JsonObject  ||  o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_OBJECT;  }	  	non-compiled	[CE]  illegal  start  of  type	193	None	add
85	[BUG]  [BUGGY]  }    else    if(o    instanceof    JsonObject    ||    o    instanceof    JsonArray)    {    return  JsonToken.BEGIN_OBJECT;  else  if(o  instanceof  JsonObject  ||  o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_OBJECT;  }  [CE]  'else'  without  'if'  [FE]        ArrayIndexOutOfBoundsException    [CONTEXT]      if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }      [BUGGY]  }    else    if(o    instanceof    JsonObject    ||    o    instanceof    JsonArray)    {    return  JsonToken.BEGIN_OBJECT;  else  if(o  instanceof  JsonObject  ||  o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_OBJECT;  }  [BUGGY]      return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	replace	}        else        if(o        instanceof        JsonObject        ||        o        instanceof        JsonArray)        {        return    JsonToken.BEGIN_OBJECT;    else  if(o  instanceof  JsonObject  ||  o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_OBJECT;  }	  	non-compiled	[CE]  'else'  without  'if'	193	None	add
86	[BUG]  [BUGGY]  [FE]  ArrayIndexOutOfBoundsException  [FE]          ArrayIndexOutOfBoundsException    [CONTEXT]      if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }      [BUGGY]  }    else    if(o    instanceof    JsonObject    ||    o    instanceof    JsonArray)    {    return  JsonToken.BEGIN_OBJECT;  }  else  if(o  instanceof  JsonObject  ||  o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_OBJECT;  }  else  if(o  instanceof  JsonObject  ||  o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_OBJECT;  [BUGGY]      return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	add	}        else        if(o        instanceof        JsonObject        ||        o        instanceof        JsonArray)        {        return    JsonToken.BEGIN_OBJECT;    }  else  if(o  instanceof  JsonObject  ||  o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_OBJECT;  }  else  if(o  instanceof  JsonObject  ||  o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_OBJECT;	  	compilable	  [FE]  ArrayIndexOutOfBoundsException  	193	2	add
87	[BUG]  [BUGGY]  }    else    if(o    instanceof    JsonObject    ||    o    instanceof    JsonArray)    {    return  JsonToken.BEGIN_OBJECT;  }  else  if(o  instanceof  JsonObject  ||  o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_OBJECT;  }  else  if(o  instanceof  JsonObject  ||  o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_OBJECT;  [FE]  ArrayIndexOutOfBoundsException  [FE]          ArrayIndexOutOfBoundsException    [CONTEXT]      if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }      [BUGGY]  }    else    if(o    instanceof    JsonObject    ||    o    instanceof    JsonArray)    {    return  JsonToken.BEGIN_OBJECT;  }  else  if(o  instanceof  JsonObject  ||  o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_OBJECT;  }  else  if(o  instanceof  JsonObject  ||  o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_OBJECT;  [BUGGY]      return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	replace	}        else        if(o        instanceof        JsonObject        ||        o        instanceof        JsonArray)        {        return    JsonToken.BEGIN_OBJECT;    }  else  if(o  instanceof  JsonObject  ||  o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_OBJECT;  }  else  if(o  instanceof  JsonObject  ||  o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_OBJECT;	  	compilable	  [FE]  ArrayIndexOutOfBoundsException  	193	2	add
88	[BUG]  [BUGGY]  }    else    if(o    instanceof    JsonObject    ||    o    instanceof    JsonArray)    {    return  JsonToken.BEGIN_OBJECT;  }  else  if(o  instanceof  JsonObject  ||  o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_OBJECT;  }  else  if(o  instanceof  JsonObject  ||  o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_OBJ  [CE]  ';'  expected  [FE]            ArrayIndexOutOfBoundsException    [CONTEXT]      if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }      [BUGGY]  }    else    if(o    instanceof    JsonObject    ||    o    instanceof    JsonArray)    {    return  JsonToken.BEGIN_OBJECT;  }  else  if(o  instanceof  JsonObject  ||  o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_OBJECT;  }  else  if(o  instanceof  JsonObject  ||  o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_OBJ  [BUGGY]      return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	replace	}        else        if(o        instanceof        JsonObject        ||        o        instanceof        JsonArray)        {        return    JsonToken.BEGIN_OBJECT;    }  else  if(o  instanceof  JsonObject  ||  o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_OBJECT;  }  else  if(o  instanceof  JsonObject  ||  o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_OBJ	  	non-compiled	[CE]  ';'  expected	193	None	add
89	[BUG]  [BUGGY]  }    else    if(o    instanceof    JsonObject    ||    o    instanceof    JsonArray)    {    return  JsonToken.BEGIN_OBJECT;  if(o  instanceof  JsonObject  ||  o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_OBJECT;  }  else  if(o  instanceof  JsonObject  ||  o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_OBJECT;  }  [CE]  unreachable  statement  [FE]              ArrayIndexOutOfBoundsException    [CONTEXT]      if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }      [BUGGY]  }    else    if(o    instanceof    JsonObject    ||    o    instanceof    JsonArray)    {    return  JsonToken.BEGIN_OBJECT;  if(o  instanceof  JsonObject  ||  o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_OBJECT;  }  else  if(o  instanceof  JsonObject  ||  o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_OBJECT;  }  [BUGGY]      return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	replace	}        else        if(o        instanceof        JsonObject        ||        o        instanceof        JsonArray)        {        return    JsonToken.BEGIN_OBJECT;    if(o  instanceof  JsonObject  ||  o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_OBJECT;  }  else  if(o  instanceof  JsonObject  ||  o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_OBJECT;  }	  	non-compiled	[CE]  unreachable  statement	193	None	add
90	[BUG]  [BUGGY]  }    else    if(o    instanceof    JsonObject    ||    o    instanceof    JsonArray)    {    return  JsonToken.BEGIN_OBJECT;  else  if(o  instanceof  JsonObject  ||  o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_OBJECT;  }  else  if(o  instanceof  JsonObject  ||  o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_OBJECT;  }  [CE]  'else'  without  'if'  [FE]                ArrayIndexOutOfBoundsException    [CONTEXT]      if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }      [BUGGY]  }    else    if(o    instanceof    JsonObject    ||    o    instanceof    JsonArray)    {    return  JsonToken.BEGIN_OBJECT;  else  if(o  instanceof  JsonObject  ||  o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_OBJECT;  }  else  if(o  instanceof  JsonObject  ||  o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_OBJECT;  }  [BUGGY]      return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	replace	}        else        if(o        instanceof        JsonObject        ||        o        instanceof        JsonArray)        {        return    JsonToken.BEGIN_OBJECT;    else  if(o  instanceof  JsonObject  ||  o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_OBJECT;  }  else  if(o  instanceof  JsonObject  ||  o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_OBJECT;  }	  	non-compiled	[CE]  'else'  without  'if'	193	None	add
91	[BUG]  [BUGGY]  [FE]  ArrayIndexOutOfBoundsException  [FE]                  ArrayIndexOutOfBoundsException    [CONTEXT]      if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }      [BUGGY]  }    else    if(o    instanceof    JsonObject    ||    o    instanceof    JsonArray)    {    return  JsonToken.BEGIN_OBJECT;  }  else  if(o  instanceof  JsonObject  ||  o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_OBJECT;  [BUGGY]      return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	add	}        else        if(o        instanceof        JsonObject        ||        o        instanceof        JsonArray)        {        return    JsonToken.BEGIN_OBJECT;    }  else  if(o  instanceof  JsonObject  ||  o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_OBJECT;	  	compilable	  [FE]  ArrayIndexOutOfBoundsException  	193	2	add
92	[BUG]  [BUGGY]  }    else    if(o    instanceof    JsonObject    ||    o    instanceof    JsonArray)    {    return  JsonToken.BEGIN_OBJECT;  }  else  if(o  instanceof  JsonObject  ||  o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_OBJECT;  [FE]  ArrayIndexOutOfBoundsException  [FE]                  ArrayIndexOutOfBoundsException    [CONTEXT]      if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }      [BUGGY]  }    else    if(o    instanceof    JsonObject    ||    o    instanceof    JsonArray)    {    return  JsonToken.BEGIN_OBJECT;  }  else  if(o  instanceof  JsonObject  ||  o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_OBJECT;  [BUGGY]      return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	replace	}        else        if(o        instanceof        JsonObject        ||        o        instanceof        JsonArray)        {        return    JsonToken.BEGIN_OBJECT;    }  else  if(o  instanceof  JsonObject  ||  o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_OBJECT;	  	compilable	  [FE]  ArrayIndexOutOfBoundsException  	193	2	add
93	[BUG]  [BUGGY]  }  else  if(o  instanceof  JsonObject  &&  o  instanceof  String)  {  }  else  if(o  instanceof  JsonObject  &&  o  instanceof  String)  {  [CE]  missing  return  statement  [FE]    AssertionError    [CONTEXT]      if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }      [BUGGY]  }  else  if(o  instanceof  JsonObject  &&  o  instanceof  String)  {  }  else  if(o  instanceof  JsonObject  &&  o  instanceof  String)  {  [BUGGY]      return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	replace	}    else    if(o    instanceof    JsonObject    &&    o    instanceof    String)    {    }  else  if(o  instanceof  JsonObject  &&  o  instanceof  String)  {	  	non-compiled	[CE]  missing  return  statement	47	None	add
94	[BUG]  [BUGGY]  }  else  if(o  instanceof  JsonObject  &&  o  instanceof  String)  {  }  else  if(o  instanceof  JsonObject  &&  o  instanceof  String)  <  return  JsonToken.BEGIN_OBJECT;  }  else  if(o  instanceof  JsonObject  &&  o  instanceof  String)  {  [CE]  illegal  start  of  type  [FE]      AssertionError    [CONTEXT]      if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }      [BUGGY]  }  else  if(o  instanceof  JsonObject  &&  o  instanceof  String)  {  }  else  if(o  instanceof  JsonObject  &&  o  instanceof  String)  <  return  JsonToken.BEGIN_OBJECT;  }  else  if(o  instanceof  JsonObject  &&  o  instanceof  String)  {  [BUGGY]      return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	replace	}    else    if(o    instanceof    JsonObject    &&    o    instanceof    String)    {    }  else  if(o  instanceof  JsonObject  &&  o  instanceof  String)  <  return  JsonToken.BEGIN_OBJECT;  }  else  if(o  instanceof  JsonObject  &&  o  instanceof  String)  {	  	non-compiled	[CE]  illegal  start  of  type	47	None	add
95	[BUG]  [BUGGY]  }  else  if(o  instanceof  JsonObject  &&  o  instanceof  String)  {  else  if(o  instanceof  JsonObject  &&  o  instanceof  String)  {  [CE]  'else'  without  'if'  [FE]        AssertionError    [CONTEXT]      if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }      [BUGGY]  }  else  if(o  instanceof  JsonObject  &&  o  instanceof  String)  {  else  if(o  instanceof  JsonObject  &&  o  instanceof  String)  {  [BUGGY]      return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	replace	}    else    if(o    instanceof    JsonObject    &&    o    instanceof    String)    {    else  if(o  instanceof  JsonObject  &&  o  instanceof  String)  {	  	non-compiled	[CE]  'else'  without  'if'	47	None	add
96	[BUG]  [BUGGY]  }  else  if(o  instanceof  JsonObject  &&  o  instanceof  String)  {  }  else  if(o  instanceof  JsonObject  &&  o  instanceof  String)  <  return  JsonToken.BEGIN_OBJECT;  [CE]  illegal  start  of  type  [FE]          AssertionError    [CONTEXT]      if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }      [BUGGY]  }  else  if(o  instanceof  JsonObject  &&  o  instanceof  String)  {  }  else  if(o  instanceof  JsonObject  &&  o  instanceof  String)  <  return  JsonToken.BEGIN_OBJECT;  [BUGGY]      return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	replace	}    else    if(o    instanceof    JsonObject    &&    o    instanceof    String)    {    }  else  if(o  instanceof  JsonObject  &&  o  instanceof  String)  <  return  JsonToken.BEGIN_OBJECT;	  	non-compiled	[CE]  illegal  start  of  type	47	None	add
97	[BUG]  [BUGGY]  }  else  if(o  instanceof  JsonObject  &&  o  instanceof  String)  {  }  else  if(o  instanceof  JsonObject  &&  o  instanceof  String)  {  return  JsonToken.BEGIN_OBJECT;  }  else  if(o  instanceof  JsonObject  &&  o  instanceof  String)  {  [CE]  missing  return  statement  [FE]            AssertionError    [CONTEXT]      if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }      [BUGGY]  }  else  if(o  instanceof  JsonObject  &&  o  instanceof  String)  {  }  else  if(o  instanceof  JsonObject  &&  o  instanceof  String)  {  return  JsonToken.BEGIN_OBJECT;  }  else  if(o  instanceof  JsonObject  &&  o  instanceof  String)  {  [BUGGY]      return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	replace	}    else    if(o    instanceof    JsonObject    &&    o    instanceof    String)    {    }  else  if(o  instanceof  JsonObject  &&  o  instanceof  String)  {  return  JsonToken.BEGIN_OBJECT;  }  else  if(o  instanceof  JsonObject  &&  o  instanceof  String)  {	  	non-compiled	[CE]  missing  return  statement	47	None	add
98	[BUG]  [BUGGY]  }  else  if(o  instanceof  JsonObject  &&  o  instanceof  String)  {  }  else  if(o  instanceof  JsonObject  &&  o  instanceof  String)  ==  return  JsonToken.BEGIN_OBJECT;  }  else  if(o  instanceof  JsonObject  &&  o  instanceof  String)  {  [CE]  illegal  start  of  expression  [FE]              AssertionError    [CONTEXT]      if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }      [BUGGY]  }  else  if(o  instanceof  JsonObject  &&  o  instanceof  String)  {  }  else  if(o  instanceof  JsonObject  &&  o  instanceof  String)  ==  return  JsonToken.BEGIN_OBJECT;  }  else  if(o  instanceof  JsonObject  &&  o  instanceof  String)  {  [BUGGY]      return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	replace	}    else    if(o    instanceof    JsonObject    &&    o    instanceof    String)    {    }  else  if(o  instanceof  JsonObject  &&  o  instanceof  String)  ==  return  JsonToken.BEGIN_OBJECT;  }  else  if(o  instanceof  JsonObject  &&  o  instanceof  String)  {	  	non-compiled	[CE]  illegal  start  of  expression	47	None	add
99	[BUG]  [BUGGY]  }  else  if(o  instanceof  JsonObject  &&  o  instanceof  String)  {  }  else  if(o  instanceof  JsonObject  ||  o  instanceof  String)  {  [CE]  missing  return  statement  [FE]                AssertionError    [CONTEXT]      if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }      [BUGGY]  }  else  if(o  instanceof  JsonObject  &&  o  instanceof  String)  {  }  else  if(o  instanceof  JsonObject  ||  o  instanceof  String)  {  [BUGGY]      return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	replace	}    else    if(o    instanceof    JsonObject    &&    o    instanceof    String)    {    }  else  if(o  instanceof  JsonObject  ||  o  instanceof  String)  {	  	non-compiled	[CE]  missing  return  statement	47	None	add
100	[BUG]  [BUGGY]  }  else  if(o  instanceof  JsonObject  &&  o  instanceof  String)  {  }  else  if(o  instanceof  JsonObject  &&  o  instanceof  String)  <  return  JsonToken.BEGIN_OBJECT;  }  else  if(o  instanceof  JsonObject)  {  [CE]  illegal  start  of  type  [FE]                  AssertionError    [CONTEXT]      if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }      [BUGGY]  }  else  if(o  instanceof  JsonObject  &&  o  instanceof  String)  {  }  else  if(o  instanceof  JsonObject  &&  o  instanceof  String)  <  return  JsonToken.BEGIN_OBJECT;  }  else  if(o  instanceof  JsonObject)  {  [BUGGY]      return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	replace	}    else    if(o    instanceof    JsonObject    &&    o    instanceof    String)    {    }  else  if(o  instanceof  JsonObject  &&  o  instanceof  String)  <  return  JsonToken.BEGIN_OBJECT;  }  else  if(o  instanceof  JsonObject)  {	  	non-compiled	[CE]  illegal  start  of  type	47	None	add
101	[BUG]  [BUGGY]  [FE]  ArrayIndexOutOfBoundsException  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]      if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }      [BUGGY]  }  else  if(o  instanceof  JsonObject  ||!(o  instanceof  JsonPrimitive))  {  [BUGGY]      return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	add	}  else  if(o  instanceof  JsonObject  ||!(o  instanceof  JsonPrimitive))  {	  }    else    if(o    instanceof    JsonObject    &&!(o    instanceof    JsonPrimitive))    {    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	182	2	replace
102	[BUG]  [BUGGY]  }  else  if(o  instanceof  JsonObject  ||!(o  instanceof  JsonPrimitive))  {  [FE]  ArrayIndexOutOfBoundsException  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]      if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }      [BUGGY]  }  else  if(o  instanceof  JsonObject  ||!(o  instanceof  JsonPrimitive))  {  [BUGGY]      return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	replace	}  else  if(o  instanceof  JsonObject  ||!(o  instanceof  JsonPrimitive))  {	  }    else    if(o    instanceof    JsonObject    &&!(o    instanceof    JsonPrimitive))    {    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	182	2	replace
103	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]      ArrayIndexOutOfBoundsException    [CONTEXT]      if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }      [BUGGY]  }  else  if(o  instanceof  JsonArray  &&!(o  instanceof  JsonPrimitive))  {  [BUGGY]      return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	add	}  else  if(o  instanceof  JsonArray  &&!(o  instanceof  JsonPrimitive))  {	  }    else    if(o    instanceof    JsonObject    &&!(o    instanceof    JsonPrimitive))    {    	compilable	  [FE]  AssertionError  	182	2	replace
104	[BUG]  [BUGGY]  }  else  if(o  instanceof  JsonArray  &&!(o  instanceof  JsonPrimitive))  {  [FE]  AssertionError  [FE]      ArrayIndexOutOfBoundsException    [CONTEXT]      if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }      [BUGGY]  }  else  if(o  instanceof  JsonArray  &&!(o  instanceof  JsonPrimitive))  {  [BUGGY]      return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	replace	}  else  if(o  instanceof  JsonArray  &&!(o  instanceof  JsonPrimitive))  {	  }    else    if(o    instanceof    JsonObject    &&!(o    instanceof    JsonPrimitive))    {    	compilable	  [FE]  AssertionError  	182	2	replace
105	[BUG]  [BUGGY]  [FE]  ArrayIndexOutOfBoundsException  [FE]        ArrayIndexOutOfBoundsException    [CONTEXT]      if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }      [BUGGY]  }  else  if(o  instanceof  JsonObject  &&!(o  instanceof  JsonArray))  {  [BUGGY]      return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	add	}  else  if(o  instanceof  JsonObject  &&!(o  instanceof  JsonArray))  {	  }    else    if(o    instanceof    JsonObject    &&!(o    instanceof    JsonPrimitive))    {    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	182	2	replace
106	[BUG]  [BUGGY]  }  else  if(o  instanceof  JsonObject  &&!(o  instanceof  JsonArray))  {  [FE]  ArrayIndexOutOfBoundsException  [FE]        ArrayIndexOutOfBoundsException    [CONTEXT]      if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }      [BUGGY]  }  else  if(o  instanceof  JsonObject  &&!(o  instanceof  JsonArray))  {  [BUGGY]      return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	replace	}  else  if(o  instanceof  JsonObject  &&!(o  instanceof  JsonArray))  {	  }    else    if(o    instanceof    JsonObject    &&!(o    instanceof    JsonPrimitive))    {    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	182	2	replace
107	[BUG]  [BUGGY]  [FE]  ArrayIndexOutOfBoundsException  [FE]          ArrayIndexOutOfBoundsException    [CONTEXT]      if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }      [BUGGY]  }  else  if(o  instanceof  JsonArray  ||!(o  instanceof  JsonPrimitive))  {  [BUGGY]      return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	add	}  else  if(o  instanceof  JsonArray  ||!(o  instanceof  JsonPrimitive))  {	  }    else    if(o    instanceof    JsonObject    &&!(o    instanceof    JsonPrimitive))    {    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	182	2	replace
108	[BUG]  [BUGGY]  }  else  if(o  instanceof  JsonArray  ||!(o  instanceof  JsonPrimitive))  {  [FE]  ArrayIndexOutOfBoundsException  [FE]          ArrayIndexOutOfBoundsException    [CONTEXT]      if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }      [BUGGY]  }  else  if(o  instanceof  JsonArray  ||!(o  instanceof  JsonPrimitive))  {  [BUGGY]      return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	replace	}  else  if(o  instanceof  JsonArray  ||!(o  instanceof  JsonPrimitive))  {	  }    else    if(o    instanceof    JsonObject    &&!(o    instanceof    JsonPrimitive))    {    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	182	2	replace
109	[BUG]  [BUGGY]  [FE]  ArrayIndexOutOfBoundsException  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]      if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }      [BUGGY]  }  else  if(!(o  instanceof  JsonPrimitive  ||  o  instanceof  JsonPrimitive))  {  [BUGGY]      return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	add	}  else  if(!(o  instanceof  JsonPrimitive  ||  o  instanceof  JsonPrimitive))  {	  }    else    if(!(o    instanceof    JsonArray    ||    o    instanceof    JsonPrimitive))    {    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	146	2	replace
110	[BUG]  [BUGGY]  }  else  if(!(o  instanceof  JsonPrimitive  ||  o  instanceof  JsonPrimitive))  {  [FE]  ArrayIndexOutOfBoundsException  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]      if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }      [BUGGY]  }  else  if(!(o  instanceof  JsonPrimitive  ||  o  instanceof  JsonPrimitive))  {  [BUGGY]      return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	replace	}  else  if(!(o  instanceof  JsonPrimitive  ||  o  instanceof  JsonPrimitive))  {	  }    else    if(!(o    instanceof    JsonArray    ||    o    instanceof    JsonPrimitive))    {    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	146	2	replace
111	[BUG]  [BUGGY]  }  else  if(!(o  instanceof  JsonArray  ||  o  instanceof  JsonPrimitive)&&  isObject)  {  [CE]  cannot  find  symbol  isObject  [FE]      ArrayIndexOutOfBoundsException    [CONTEXT]      if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }      [BUGGY]  }  else  if(!(o  instanceof  JsonArray  ||  o  instanceof  JsonPrimitive)&&  isObject)  {  [BUGGY]      return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	replace	}  else  if(!(o  instanceof  JsonArray  ||  o  instanceof  JsonPrimitive)&&  isObject)  {	  }    else    if(!(o    instanceof    JsonArray    ||    o    instanceof    JsonPrimitive))    {    	non-compiled	[CE]  cannot  find  symbol  isObject	146	None	replace
112	[BUG]  [BUGGY]  [FE]  ArrayIndexOutOfBoundsException  [FE]        ArrayIndexOutOfBoundsException    [CONTEXT]      if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }      [BUGGY]  }  else  if(!(o  instanceof  JsonArray  &&  o  instanceof  JsonPrimitive))  {  [BUGGY]      return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	add	}  else  if(!(o  instanceof  JsonArray  &&  o  instanceof  JsonPrimitive))  {	  }    else    if(!(o    instanceof    JsonArray    ||    o    instanceof    JsonPrimitive))    {    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	146	2	replace
113	[BUG]  [BUGGY]  }  else  if(!(o  instanceof  JsonArray  &&  o  instanceof  JsonPrimitive))  {  [FE]  ArrayIndexOutOfBoundsException  [FE]        ArrayIndexOutOfBoundsException    [CONTEXT]      if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }      [BUGGY]  }  else  if(!(o  instanceof  JsonArray  &&  o  instanceof  JsonPrimitive))  {  [BUGGY]      return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	replace	}  else  if(!(o  instanceof  JsonArray  &&  o  instanceof  JsonPrimitive))  {	  }    else    if(!(o    instanceof    JsonArray    ||    o    instanceof    JsonPrimitive))    {    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	146	2	replace
114	[BUG]  [BUGGY]  [FE]  ArrayIndexOutOfBoundsException  [FE]          ArrayIndexOutOfBoundsException    [CONTEXT]      if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }      [BUGGY]  }  else  if(!(o  instanceof  JsonPrimitive  ||  o  instanceof  JsonArray))  {  [BUGGY]      return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	add	}  else  if(!(o  instanceof  JsonPrimitive  ||  o  instanceof  JsonArray))  {	  }    else    if(!(o    instanceof    JsonArray    ||    o    instanceof    JsonPrimitive))    {    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	146	2	replace
115	[BUG]  [BUGGY]  }  else  if(!(o  instanceof  JsonPrimitive  ||  o  instanceof  JsonArray))  {  [FE]  ArrayIndexOutOfBoundsException  [FE]          ArrayIndexOutOfBoundsException    [CONTEXT]      if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }      [BUGGY]  }  else  if(!(o  instanceof  JsonPrimitive  ||  o  instanceof  JsonArray))  {  [BUGGY]      return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	replace	}  else  if(!(o  instanceof  JsonPrimitive  ||  o  instanceof  JsonArray))  {	  }    else    if(!(o    instanceof    JsonArray    ||    o    instanceof    JsonPrimitive))    {    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	146	2	replace
116	[BUG]  [BUGGY]  }  else  if(!(o  instanceof  JsonType  ||  o  instanceof  JsonPrimitive))  {  [CE]  cannot  find  symbol  [FE]            ArrayIndexOutOfBoundsException    [CONTEXT]      if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }      [BUGGY]  }  else  if(!(o  instanceof  JsonType  ||  o  instanceof  JsonPrimitive))  {  [BUGGY]      return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	replace	}  else  if(!(o  instanceof  JsonType  ||  o  instanceof  JsonPrimitive))  {	  }    else    if(!(o    instanceof    JsonArray    ||    o    instanceof    JsonPrimitive))    {    	non-compiled	[CE]  cannot  find  symbol	146	None	replace
117	[BUG]  [BUGGY]  }  else  if(o  instanceof  JsonString  ||  o  instanceof  JsonString)  {  [CE]  cannot  find  symbol  [FE]              ArrayIndexOutOfBoundsException      [CONTEXT]      if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }      [BUGGY]  }  else  if(o  instanceof  JsonString  ||  o  instanceof  JsonString)  {  [BUGGY]      return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	replace	}  else  if(o  instanceof  JsonString  ||  o  instanceof  JsonString)  {	  }    else    if(o    instanceof    JsonObject    ||    o    instanceof    JsonArray)    {    }    else    if(o    instanceof    JsonObject    ||    o    instanceof    JsonArray)    {    return    JsonToken.BEGIN_OBJECT;    }    else    if(o    instanceof    JsonObject    ||    o    instanceof    JsonArray)    {    	non-compiled	[CE]  cannot  find  symbol	26	None	replace
118	[BUG]  [BUGGY]  }  else  if(o  instanceof  String  ||  o  instanceof  JsonString)  {  [CE]  cannot  find  symbol  [FE]                ArrayIndexOutOfBoundsException      [CONTEXT]      if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }      [BUGGY]  }  else  if(o  instanceof  String  ||  o  instanceof  JsonString)  {  [BUGGY]      return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	replace	}  else  if(o  instanceof  String  ||  o  instanceof  JsonString)  {	  }    else    if(o    instanceof    JsonObject    ||    o    instanceof    JsonArray)    {    }    else    if(o    instanceof    JsonObject    ||    o    instanceof    JsonArray)    {    return    JsonToken.BEGIN_OBJECT;    }    else    if(o    instanceof    JsonObject    ||    o    instanceof    JsonArray)    {    	non-compiled	[CE]  cannot  find  symbol	26	None	replace
119	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]                  ArrayIndexOutOfBoundsException      [CONTEXT]      if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }      [BUGGY]  }  else  if(o  instanceof  JsonPrimitive  ||  o  instanceof  JsonPrimitive)  {  [BUGGY]      return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	add	}  else  if(o  instanceof  JsonPrimitive  ||  o  instanceof  JsonPrimitive)  {	  }    else    if(o    instanceof    JsonObject    ||    o    instanceof    JsonArray)    {    }    else    if(o    instanceof    JsonObject    ||    o    instanceof    JsonArray)    {    return    JsonToken.BEGIN_OBJECT;    }    else    if(o    instanceof    JsonObject    ||    o    instanceof    JsonArray)    {    	compilable	  [FE]  AssertionError  	26	2	replace
120	[BUG]  [BUGGY]  }  else  if(o  instanceof  JsonPrimitive  ||  o  instanceof  JsonPrimitive)  {  [FE]  AssertionError  [FE]                  ArrayIndexOutOfBoundsException      [CONTEXT]      if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }      [BUGGY]  }  else  if(o  instanceof  JsonPrimitive  ||  o  instanceof  JsonPrimitive)  {  [BUGGY]      return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	replace	}  else  if(o  instanceof  JsonPrimitive  ||  o  instanceof  JsonPrimitive)  {	  }    else    if(o    instanceof    JsonObject    ||    o    instanceof    JsonArray)    {    }    else    if(o    instanceof    JsonObject    ||    o    instanceof    JsonArray)    {    return    JsonToken.BEGIN_OBJECT;    }    else    if(o    instanceof    JsonObject    ||    o    instanceof    JsonArray)    {    	compilable	  [FE]  AssertionError  	26	2	replace
121	[BUG]  [BUGGY]  }  else  if(o  instanceof  JsonArray  &&  o  instanceof  JsonNumber)  {  [CE]  cannot  find  symbol  [FE]              ArrayIndexOutOfBoundsException      [CONTEXT]      if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }      [BUGGY]  }  else  if(o  instanceof  JsonArray  &&  o  instanceof  JsonNumber)  {  [BUGGY]      return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	replace	}  else  if(o  instanceof  JsonArray  &&  o  instanceof  JsonNumber)  {	  }    else    if(o    instanceof    JsonArray    ||    o    instanceof    JsonNumber)    {    	non-compiled	[CE]  cannot  find  symbol	258	None	replace
122	[BUG]  [BUGGY]  }  else  if(o  instanceof  JsonArray  ||  o  instanceof  JsonNumber  ||  isObject)  {  [CE]  cannot  find  symbol  [FE]                ArrayIndexOutOfBoundsException      [CONTEXT]      if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }      [BUGGY]  }  else  if(o  instanceof  JsonArray  ||  o  instanceof  JsonNumber  ||  isObject)  {  [BUGGY]      return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	replace	}  else  if(o  instanceof  JsonArray  ||  o  instanceof  JsonNumber  ||  isObject)  {	  }    else    if(o    instanceof    JsonArray    ||    o    instanceof    JsonNumber)    {    	non-compiled	[CE]  cannot  find  symbol	258	None	replace
123	[BUG]  [BUGGY]  }  else  if(o  instanceof  JsonArray  ||  o  instanceof  JsonNumber  ||!(o  instanceof  JsonPrimitive))  {  [CE]  cannot  find  symbol  [FE]                  ArrayIndexOutOfBoundsException      [CONTEXT]      if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }      [BUGGY]  }  else  if(o  instanceof  JsonArray  ||  o  instanceof  JsonNumber  ||!(o  instanceof  JsonPrimitive))  {  [BUGGY]      return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	replace	}  else  if(o  instanceof  JsonArray  ||  o  instanceof  JsonNumber  ||!(o  instanceof  JsonPrimitive))  {	  }    else    if(o    instanceof    JsonArray    ||    o    instanceof    JsonNumber)    {    	non-compiled	[CE]  cannot  find  symbol	258	None	replace
124	[BUG]  [BUGGY]  }  else  if(o  instanceof  JsonArray  ||!(o  instanceof  JsonNumber))  {  [CE]  cannot  find  symbol  [FE]                    ArrayIndexOutOfBoundsException      [CONTEXT]      if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }      [BUGGY]  }  else  if(o  instanceof  JsonArray  ||!(o  instanceof  JsonNumber))  {  [BUGGY]      return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	replace	}  else  if(o  instanceof  JsonArray  ||!(o  instanceof  JsonNumber))  {	  }    else    if(o    instanceof    JsonArray    ||    o    instanceof    JsonNumber)    {    	non-compiled	[CE]  cannot  find  symbol	258	None	replace
125	[BUG]  [BUGGY]  }  else  if(o  instanceof  JsonArray  ||  o  instanceof  JsonNumber  &&  isObject)  {  [CE]  cannot  find  symbol  [FE]                      ArrayIndexOutOfBoundsException      [CONTEXT]      if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }      [BUGGY]  }  else  if(o  instanceof  JsonArray  ||  o  instanceof  JsonNumber  &&  isObject)  {  [BUGGY]      return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	replace	}  else  if(o  instanceof  JsonArray  ||  o  instanceof  JsonNumber  &&  isObject)  {	  }    else    if(o    instanceof    JsonArray    ||    o    instanceof    JsonNumber)    {    	non-compiled	[CE]  cannot  find  symbol	258	None	replace
126	[BUG]  [BUGGY]  [FE]  ArrayIndexOutOfBoundsException  [FE]    AssertionError    [CONTEXT]      if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }      [BUGGY]  }  else  if(!(o  instanceof  JsonObject  &&  o  instanceof  String))  {  [BUGGY]      return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	add	}  else  if(!(o  instanceof  JsonObject  &&  o  instanceof  String))  {	  }    else    if(!(o    instanceof    JsonObject    ||    o    instanceof    String))    {    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	253	2	replace
127	[BUG]  [BUGGY]  }  else  if(!(o  instanceof  JsonObject  &&  o  instanceof  String))  {  [FE]  ArrayIndexOutOfBoundsException  [FE]    AssertionError    [CONTEXT]      if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }      [BUGGY]  }  else  if(!(o  instanceof  JsonObject  &&  o  instanceof  String))  {  [BUGGY]      return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	replace	}  else  if(!(o  instanceof  JsonObject  &&  o  instanceof  String))  {	  }    else    if(!(o    instanceof    JsonObject    ||    o    instanceof    String))    {    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	253	2	replace
128	[BUG]  [BUGGY]  [FE]  ArrayIndexOutOfBoundsException  [FE]      AssertionError    [CONTEXT]      if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }      [BUGGY]  }  else  if(!(o  instanceof  JsonArray  ||  o  instanceof  String))  {  [BUGGY]      return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	add	}  else  if(!(o  instanceof  JsonArray  ||  o  instanceof  String))  {	  }    else    if(!(o    instanceof    JsonObject    ||    o    instanceof    String))    {    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	253	2	replace
129	[BUG]  [BUGGY]  }  else  if(!(o  instanceof  JsonArray  ||  o  instanceof  String))  {  [FE]  ArrayIndexOutOfBoundsException  [FE]      AssertionError    [CONTEXT]      if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }      [BUGGY]  }  else  if(!(o  instanceof  JsonArray  ||  o  instanceof  String))  {  [BUGGY]      return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	replace	}  else  if(!(o  instanceof  JsonArray  ||  o  instanceof  String))  {	  }    else    if(!(o    instanceof    JsonObject    ||    o    instanceof    String))    {    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	253	2	replace
130	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]        AssertionError    [CONTEXT]      if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }      [BUGGY]  }  else  if(!(o  instanceof  String  ||  o  instanceof  JsonObject))  {  [BUGGY]      return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	add	}  else  if(!(o  instanceof  String  ||  o  instanceof  JsonObject))  {	  }    else    if(!(o    instanceof    JsonObject    ||    o    instanceof    String))    {    	compilable	  [FE]  AssertionError  	253	2	replace
131	[BUG]  [BUGGY]  }  else  if(!(o  instanceof  String  ||  o  instanceof  JsonObject))  {  [FE]  AssertionError  [FE]        AssertionError    [CONTEXT]      if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }      [BUGGY]  }  else  if(!(o  instanceof  String  ||  o  instanceof  JsonObject))  {  [BUGGY]      return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	replace	}  else  if(!(o  instanceof  String  ||  o  instanceof  JsonObject))  {	  }    else    if(!(o    instanceof    JsonObject    ||    o    instanceof    String))    {    	compilable	  [FE]  AssertionError  	253	2	replace
132	[BUG]  [BUGGY]  [FE]  ArrayIndexOutOfBoundsException  [FE]          AssertionError    [CONTEXT]      if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }      [BUGGY]  }  else  if(o  instanceof  JsonObject  &&!(o  instanceof  String))  {  [BUGGY]      return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	add	}  else  if(o  instanceof  JsonObject  &&!(o  instanceof  String))  {	  }    else    if(!(o    instanceof    JsonObject    ||    o    instanceof    String))    {    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	253	2	replace
133	[BUG]  [BUGGY]  }  else  if(o  instanceof  JsonObject  &&!(o  instanceof  String))  {  [FE]  ArrayIndexOutOfBoundsException  [FE]          AssertionError    [CONTEXT]      if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }      [BUGGY]  }  else  if(o  instanceof  JsonObject  &&!(o  instanceof  String))  {  [BUGGY]      return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	replace	}  else  if(o  instanceof  JsonObject  &&!(o  instanceof  String))  {	  }    else    if(!(o    instanceof    JsonObject    ||    o    instanceof    String))    {    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	253	2	replace
134	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]            AssertionError    [CONTEXT]      if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }      [BUGGY]  }  else  if(!(o  instanceof  JsonObject  ||  o  instanceof  String  ||  o  instanceof  Boolean))  {  [BUGGY]      return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	add	}  else  if(!(o  instanceof  JsonObject  ||  o  instanceof  String  ||  o  instanceof  Boolean))  {	  }    else    if(!(o    instanceof    JsonObject    ||    o    instanceof    String))    {    	compilable	  [FE]  AssertionError  	253	2	replace
135	[BUG]  [BUGGY]  }  else  if(!(o  instanceof  JsonObject  ||  o  instanceof  String  ||  o  instanceof  Boolean))  {  [FE]  AssertionError  [FE]            AssertionError    [CONTEXT]      if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }      [BUGGY]  }  else  if(!(o  instanceof  JsonObject  ||  o  instanceof  String  ||  o  instanceof  Boolean))  {  [BUGGY]      return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	replace	}  else  if(!(o  instanceof  JsonObject  ||  o  instanceof  String  ||  o  instanceof  Boolean))  {	  }    else    if(!(o    instanceof    JsonObject    ||    o    instanceof    String))    {    	compilable	  [FE]  AssertionError  	253	2	replace
136	[BUG]  [BUGGY]  }  [CE]  illegal  start  of  type  [FE]            ArrayIndexOutOfBoundsException      [CONTEXT]      if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }      [BUGGY]  }  [BUGGY]      return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	replace	}	  }    else    if(o    instanceof    JsonObject    ||    o    instanceof    JsonPrimitive)    {    }    else    if(o    instanceof    JsonObject    ||    o    instanceof    JsonPrimitive)    {    return    JsonToken.BEGIN_OBJECT;    }    else    if(o    instanceof    JsonArray)    {    return    JsonToken.BEGIN_ARRAY;    }    	non-compiled	[CE]  illegal  start  of  type	230	None	replace
137	[BUG]  [BUGGY]  }  else  if(o  instanceof  JsonPrimitive)  {  return  JsonToken.BEGIN_OBJECT;  }  [CE]  illegal  start  of  type  [FE]              ArrayIndexOutOfBoundsException      [CONTEXT]      if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }      [BUGGY]  }  else  if(o  instanceof  JsonPrimitive)  {  return  JsonToken.BEGIN_OBJECT;  }  [BUGGY]      return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	replace	}  else  if(o  instanceof  JsonPrimitive)  {  return  JsonToken.BEGIN_OBJECT;  }	  }    else    if(o    instanceof    JsonObject    ||    o    instanceof    JsonPrimitive)    {    }    else    if(o    instanceof    JsonObject    ||    o    instanceof    JsonPrimitive)    {    return    JsonToken.BEGIN_OBJECT;    }    else    if(o    instanceof    JsonArray)    {    return    JsonToken.BEGIN_ARRAY;    }    	non-compiled	[CE]  illegal  start  of  type	230	None	replace
138	[BUG]  [BUGGY]  }  else  if(o  instanceof  JsonPrimitive  ||  o  instanceof  JsonPrimitive)  {  return  JsonToken.BEGIN_OBJECT;  }  [CE]  illegal  start  of  type  [FE]                ArrayIndexOutOfBoundsException      [CONTEXT]      if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }      [BUGGY]  }  else  if(o  instanceof  JsonPrimitive  ||  o  instanceof  JsonPrimitive)  {  return  JsonToken.BEGIN_OBJECT;  }  [BUGGY]      return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	replace	}  else  if(o  instanceof  JsonPrimitive  ||  o  instanceof  JsonPrimitive)  {  return  JsonToken.BEGIN_OBJECT;  }	  }    else    if(o    instanceof    JsonObject    ||    o    instanceof    JsonPrimitive)    {    }    else    if(o    instanceof    JsonObject    ||    o    instanceof    JsonPrimitive)    {    return    JsonToken.BEGIN_OBJECT;    }    else    if(o    instanceof    JsonArray)    {    return    JsonToken.BEGIN_ARRAY;    }    	non-compiled	[CE]  illegal  start  of  type	230	None	replace
139	[BUG]  [BUGGY]  }  else  if(o  instanceof  JsonPrimitive  ||  o  instanceof  JsonObject)  {  return  JsonToken.BEGIN_OBJECT;  }  [CE]  illegal  start  of  type  [FE]                  ArrayIndexOutOfBoundsException      [CONTEXT]      if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }      [BUGGY]  }  else  if(o  instanceof  JsonPrimitive  ||  o  instanceof  JsonObject)  {  return  JsonToken.BEGIN_OBJECT;  }  [BUGGY]      return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	replace	}  else  if(o  instanceof  JsonPrimitive  ||  o  instanceof  JsonObject)  {  return  JsonToken.BEGIN_OBJECT;  }	  }    else    if(o    instanceof    JsonObject    ||    o    instanceof    JsonPrimitive)    {    }    else    if(o    instanceof    JsonObject    ||    o    instanceof    JsonPrimitive)    {    return    JsonToken.BEGIN_OBJECT;    }    else    if(o    instanceof    JsonArray)    {    return    JsonToken.BEGIN_ARRAY;    }    	non-compiled	[CE]  illegal  start  of  type	230	None	replace
140	[BUG]  [BUGGY]  }  else  if(o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_OBJECT;  }  [CE]  illegal  start  of  type  [FE]                    ArrayIndexOutOfBoundsException      [CONTEXT]      if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }      [BUGGY]  }  else  if(o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_OBJECT;  }  [BUGGY]      return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	replace	}  else  if(o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_OBJECT;  }	  }    else    if(o    instanceof    JsonObject    ||    o    instanceof    JsonPrimitive)    {    }    else    if(o    instanceof    JsonObject    ||    o    instanceof    JsonPrimitive)    {    return    JsonToken.BEGIN_OBJECT;    }    else    if(o    instanceof    JsonArray)    {    return    JsonToken.BEGIN_ARRAY;    }    	non-compiled	[CE]  illegal  start  of  type	230	None	replace
141	[BUG]  [BUGGY]  }  else  if(o  instanceof  JsonObject)  {  return  JsonToken.BEGIN_OBJECT;  }  [CE]  illegal  start  of  type  [FE]                      ArrayIndexOutOfBoundsException      [CONTEXT]      if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }      [BUGGY]  }  else  if(o  instanceof  JsonObject)  {  return  JsonToken.BEGIN_OBJECT;  }  [BUGGY]      return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	replace	}  else  if(o  instanceof  JsonObject)  {  return  JsonToken.BEGIN_OBJECT;  }	  }    else    if(o    instanceof    JsonObject    ||    o    instanceof    JsonPrimitive)    {    }    else    if(o    instanceof    JsonObject    ||    o    instanceof    JsonPrimitive)    {    return    JsonToken.BEGIN_OBJECT;    }    else    if(o    instanceof    JsonArray)    {    return    JsonToken.BEGIN_ARRAY;    }    	non-compiled	[CE]  illegal  start  of  type	230	None	replace
142	[BUG]  [BUGGY]  }    else    if(o    instanceof    JsonNull)    {    return  JsonToken.BEGIN_OBJECT;  }  else  if(o  instanceof  JsonNull)  {  return  JsonToken.BEGIN_OBJECT;  }  else  if(o  instanceof  JsonNull)  {  return  JsonToken.BEGIN_OBJECT;  }  [CE]  illegal  start  of  type  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]      if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }      [BUGGY]  }    else    if(o    instanceof    JsonNull)    {    return  JsonToken.BEGIN_OBJECT;  }  else  if(o  instanceof  JsonNull)  {  return  JsonToken.BEGIN_OBJECT;  }  else  if(o  instanceof  JsonNull)  {  return  JsonToken.BEGIN_OBJECT;  }  [BUGGY]      return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	replace	}        else        if(o        instanceof        JsonNull)        {        return    JsonToken.BEGIN_OBJECT;    }  else  if(o  instanceof  JsonNull)  {  return  JsonToken.BEGIN_OBJECT;  }  else  if(o  instanceof  JsonNull)  {  return  JsonToken.BEGIN_OBJECT;  }	  	non-compiled	[CE]  illegal  start  of  type	154	None	add
143	[BUG]  [BUGGY]  }    else    if(o    instanceof    JsonNull)    {    return  JsonToken.BEGIN_OBJECT;  }  else  if(o  instanceof  JsonNull)  {  return  JsonToken.BEGIN_OBJECT;  }  [CE]  illegal  start  of  type  [FE]      ArrayIndexOutOfBoundsException    [CONTEXT]      if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }      [BUGGY]  }    else    if(o    instanceof    JsonNull)    {    return  JsonToken.BEGIN_OBJECT;  }  else  if(o  instanceof  JsonNull)  {  return  JsonToken.BEGIN_OBJECT;  }  [BUGGY]      return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	replace	}        else        if(o        instanceof        JsonNull)        {        return    JsonToken.BEGIN_OBJECT;    }  else  if(o  instanceof  JsonNull)  {  return  JsonToken.BEGIN_OBJECT;  }	  	non-compiled	[CE]  illegal  start  of  type	154	None	add
144	[BUG]  [BUGGY]  }    else    if(o    instanceof    JsonNull)    {    return  JsonToken.BEGIN_OBJECT;  else  if(o  instanceof  JsonNull)  {  return  JsonToken.BEGIN_OBJECT;  }  else  if(o  instanceof  JsonNull)  {  return  JsonToken.BEGIN_OBJECT;  }  [CE]  'else'  without  'if'  [FE]        ArrayIndexOutOfBoundsException    [CONTEXT]      if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }      [BUGGY]  }    else    if(o    instanceof    JsonNull)    {    return  JsonToken.BEGIN_OBJECT;  else  if(o  instanceof  JsonNull)  {  return  JsonToken.BEGIN_OBJECT;  }  else  if(o  instanceof  JsonNull)  {  return  JsonToken.BEGIN_OBJECT;  }  [BUGGY]      return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	replace	}        else        if(o        instanceof        JsonNull)        {        return    JsonToken.BEGIN_OBJECT;    else  if(o  instanceof  JsonNull)  {  return  JsonToken.BEGIN_OBJECT;  }  else  if(o  instanceof  JsonNull)  {  return  JsonToken.BEGIN_OBJECT;  }	  	non-compiled	[CE]  'else'  without  'if'	154	None	add
145	[BUG]  [BUGGY]  }    else    if(o    instanceof    JsonNull)    {    return  JsonToken.BEGIN_OBJECT;  }  else  if(o  instanceof  JsonNull)  {  return  JsonToken.BEGIN_OBJECT;  }  else  if(o  instanceof  JsonNull)  {  return  JsonToken.END_OBJECT;  }  [CE]  illegal  start  of  type  [FE]          ArrayIndexOutOfBoundsException    [CONTEXT]      if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }      [BUGGY]  }    else    if(o    instanceof    JsonNull)    {    return  JsonToken.BEGIN_OBJECT;  }  else  if(o  instanceof  JsonNull)  {  return  JsonToken.BEGIN_OBJECT;  }  else  if(o  instanceof  JsonNull)  {  return  JsonToken.END_OBJECT;  }  [BUGGY]      return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	replace	}        else        if(o        instanceof        JsonNull)        {        return    JsonToken.BEGIN_OBJECT;    }  else  if(o  instanceof  JsonNull)  {  return  JsonToken.BEGIN_OBJECT;  }  else  if(o  instanceof  JsonNull)  {  return  JsonToken.END_OBJECT;  }	  	non-compiled	[CE]  illegal  start  of  type	154	None	add
146	[BUG]  [BUGGY]  }    else    if(o    instanceof    JsonNull)    {    return  JsonToken.BEGIN_OBJECT;  }  else  if(o  instanceof  JsonNull)  {  return  JsonToken.BEGIN_OBJECT;  }  else  if(o  instanceof  JsonNull)  {  return  JsonToken.NAME;  }  [CE]  illegal  start  of  type  [FE]            ArrayIndexOutOfBoundsException    [CONTEXT]      if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }      [BUGGY]  }    else    if(o    instanceof    JsonNull)    {    return  JsonToken.BEGIN_OBJECT;  }  else  if(o  instanceof  JsonNull)  {  return  JsonToken.BEGIN_OBJECT;  }  else  if(o  instanceof  JsonNull)  {  return  JsonToken.NAME;  }  [BUGGY]      return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	replace	}        else        if(o        instanceof        JsonNull)        {        return    JsonToken.BEGIN_OBJECT;    }  else  if(o  instanceof  JsonNull)  {  return  JsonToken.BEGIN_OBJECT;  }  else  if(o  instanceof  JsonNull)  {  return  JsonToken.NAME;  }	  	non-compiled	[CE]  illegal  start  of  type	154	None	add
147	[BUG]  [BUGGY]  }    else    if(o    instanceof    JsonNull)    {    return  JsonToken.BEGIN_OBJECT;  }  else  if(o  instanceof  JsonNull)  {  return  JsonToken.BEGIN_OBJECT;  }  else  if(o  instanceof  JsonNull)  {  return  JsonToken.BEGIN_NAME;  }  [CE]  illegal  start  of  type  [FE]              ArrayIndexOutOfBoundsException    [CONTEXT]      if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }      [BUGGY]  }    else    if(o    instanceof    JsonNull)    {    return  JsonToken.BEGIN_OBJECT;  }  else  if(o  instanceof  JsonNull)  {  return  JsonToken.BEGIN_OBJECT;  }  else  if(o  instanceof  JsonNull)  {  return  JsonToken.BEGIN_NAME;  }  [BUGGY]      return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	replace	}        else        if(o        instanceof        JsonNull)        {        return    JsonToken.BEGIN_OBJECT;    }  else  if(o  instanceof  JsonNull)  {  return  JsonToken.BEGIN_OBJECT;  }  else  if(o  instanceof  JsonNull)  {  return  JsonToken.BEGIN_NAME;  }	  	non-compiled	[CE]  illegal  start  of  type	154	None	add
148	[BUG]  [BUGGY]  }    else    if(o    instanceof    JsonNull)    {    return  JsonToken.BEGIN_OBJECT;  }  else  if(o  instanceof  JsonNull)  {  return  JsonToken.BEGIN_OBJECT;  }  else  if(o  instanceof  JsonNull)  {  return  JsonToken.BEGIN_ARRAY;  }  [CE]  illegal  start  of  type  [FE]                ArrayIndexOutOfBoundsException    [CONTEXT]      if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }      [BUGGY]  }    else    if(o    instanceof    JsonNull)    {    return  JsonToken.BEGIN_OBJECT;  }  else  if(o  instanceof  JsonNull)  {  return  JsonToken.BEGIN_OBJECT;  }  else  if(o  instanceof  JsonNull)  {  return  JsonToken.BEGIN_ARRAY;  }  [BUGGY]      return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	replace	}        else        if(o        instanceof        JsonNull)        {        return    JsonToken.BEGIN_OBJECT;    }  else  if(o  instanceof  JsonNull)  {  return  JsonToken.BEGIN_OBJECT;  }  else  if(o  instanceof  JsonNull)  {  return  JsonToken.BEGIN_ARRAY;  }	  	non-compiled	[CE]  illegal  start  of  type	154	None	add
149	[BUG]  [BUGGY]  }    else    if(o    instanceof    JsonNull)    {    return  JsonToken.BEGIN_OBJECT;  }  else  if(o  instanceof  JsonNull)  {  return  JsonToken.BEGIN_OBJECT;  }  else  if(o  instanceof  JsonNull)  {  return  JsonToken.BEGIN_NUMBER;  }  [CE]  illegal  start  of  type  [FE]                  ArrayIndexOutOfBoundsException    [CONTEXT]      if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }      [BUGGY]  }    else    if(o    instanceof    JsonNull)    {    return  JsonToken.BEGIN_OBJECT;  }  else  if(o  instanceof  JsonNull)  {  return  JsonToken.BEGIN_OBJECT;  }  else  if(o  instanceof  JsonNull)  {  return  JsonToken.BEGIN_NUMBER;  }  [BUGGY]      return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	replace	}        else        if(o        instanceof        JsonNull)        {        return    JsonToken.BEGIN_OBJECT;    }  else  if(o  instanceof  JsonNull)  {  return  JsonToken.BEGIN_OBJECT;  }  else  if(o  instanceof  JsonNull)  {  return  JsonToken.BEGIN_NUMBER;  }	  	non-compiled	[CE]  illegal  start  of  type	154	None	add
150	[BUG]  [BUGGY]  }  else  if(o  instanceof  JsonObject  &&  o  instanceof  JsonPrimitive)  {  }  else  if(o  instanceof  JsonObject  &&  o  instanceof  JsonPrimitive)  {  [CE]  missing  return  statement  [FE]    AssertionError    [CONTEXT]      if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }      [BUGGY]  }  else  if(o  instanceof  JsonObject  &&  o  instanceof  JsonPrimitive)  {  }  else  if(o  instanceof  JsonObject  &&  o  instanceof  JsonPrimitive)  {  [BUGGY]      return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	replace	}    else    if(o    instanceof    JsonObject    &&    o    instanceof    JsonPrimitive)    {    }  else  if(o  instanceof  JsonObject  &&  o  instanceof  JsonPrimitive)  {	  	non-compiled	[CE]  missing  return  statement	108	None	add
151	[BUG]  [BUGGY]  }  else  if(o  instanceof  JsonObject  &&  o  instanceof  JsonPrimitive)  {  else  if(o  instanceof  JsonObject  &&  o  instanceof  JsonPrimitive)  {  [CE]  'else'  without  'if'  [FE]      AssertionError    [CONTEXT]      if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }      [BUGGY]  }  else  if(o  instanceof  JsonObject  &&  o  instanceof  JsonPrimitive)  {  else  if(o  instanceof  JsonObject  &&  o  instanceof  JsonPrimitive)  {  [BUGGY]      return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	replace	}    else    if(o    instanceof    JsonObject    &&    o    instanceof    JsonPrimitive)    {    else  if(o  instanceof  JsonObject  &&  o  instanceof  JsonPrimitive)  {	  	non-compiled	[CE]  'else'  without  'if'	108	None	add
152	[BUG]  [BUGGY]  }  else  if(o  instanceof  JsonObject  &&  o  instanceof  JsonPrimitive)  {  }  else  if(o  instanceof  JsonObject  ||  o  instanceof  JsonPrimitive)  {  [CE]  missing  return  statement  [FE]        AssertionError    [CONTEXT]      if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }      [BUGGY]  }  else  if(o  instanceof  JsonObject  &&  o  instanceof  JsonPrimitive)  {  }  else  if(o  instanceof  JsonObject  ||  o  instanceof  JsonPrimitive)  {  [BUGGY]      return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	replace	}    else    if(o    instanceof    JsonObject    &&    o    instanceof    JsonPrimitive)    {    }  else  if(o  instanceof  JsonObject  ||  o  instanceof  JsonPrimitive)  {	  	non-compiled	[CE]  missing  return  statement	108	None	add
153	[BUG]  [BUGGY]  }  else  if(o  instanceof  JsonObject  &&  o  instanceof  JsonPrimitive)  {  }  else  if(o  instanceof  JsonObject  &&  o  instanceof  JsonPrimitive)  <  return  JsonToken.BEGIN_OBJECT;  [CE]  illegal  start  of  type  [FE]          AssertionError    [CONTEXT]      if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }      [BUGGY]  }  else  if(o  instanceof  JsonObject  &&  o  instanceof  JsonPrimitive)  {  }  else  if(o  instanceof  JsonObject  &&  o  instanceof  JsonPrimitive)  <  return  JsonToken.BEGIN_OBJECT;  [BUGGY]      return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	replace	}    else    if(o    instanceof    JsonObject    &&    o    instanceof    JsonPrimitive)    {    }  else  if(o  instanceof  JsonObject  &&  o  instanceof  JsonPrimitive)  <  return  JsonToken.BEGIN_OBJECT;	  	non-compiled	[CE]  illegal  start  of  type	108	None	add
154	[BUG]  [BUGGY]  }  else  if(o  instanceof  JsonObject  &&  o  instanceof  JsonPrimitive)  {  <  }  else  if(o  instanceof  JsonObject  &&  o  instanceof  JsonPrimitive)  {  [CE]  illegal  start  of  type  [FE]            AssertionError    [CONTEXT]      if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }      [BUGGY]  }  else  if(o  instanceof  JsonObject  &&  o  instanceof  JsonPrimitive)  {  <  }  else  if(o  instanceof  JsonObject  &&  o  instanceof  JsonPrimitive)  {  [BUGGY]      return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	replace	}    else    if(o    instanceof    JsonObject    &&    o    instanceof    JsonPrimitive)    {    <  }  else  if(o  instanceof  JsonObject  &&  o  instanceof  JsonPrimitive)  {	  	non-compiled	[CE]  illegal  start  of  type	108	None	add
155	[BUG]  [BUGGY]  }  else  if(o  instanceof  JsonObject  &&  o  instanceof  JsonPrimitive)  {  }  else  if(e  instanceof  JsonObject  &&  o  instanceof  JsonPrimitive)  {  [CE]  cannot  find  symbol  e  [FE]              AssertionError    [CONTEXT]      if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }      [BUGGY]  }  else  if(o  instanceof  JsonObject  &&  o  instanceof  JsonPrimitive)  {  }  else  if(e  instanceof  JsonObject  &&  o  instanceof  JsonPrimitive)  {  [BUGGY]      return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	replace	}    else    if(o    instanceof    JsonObject    &&    o    instanceof    JsonPrimitive)    {    }  else  if(e  instanceof  JsonObject  &&  o  instanceof  JsonPrimitive)  {	  	non-compiled	[CE]  cannot  find  symbol  e	108	None	add
156	[BUG]  [BUGGY]  }  else  if(o  instanceof  JsonObject  &&  o  instanceof  JsonPrimitive)  {  }  else  if(o  instanceof  JsonArray  &&  o  instanceof  JsonPrimitive)  {  [CE]  missing  return  statement  [FE]                AssertionError    [CONTEXT]      if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }      [BUGGY]  }  else  if(o  instanceof  JsonObject  &&  o  instanceof  JsonPrimitive)  {  }  else  if(o  instanceof  JsonArray  &&  o  instanceof  JsonPrimitive)  {  [BUGGY]      return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	replace	}    else    if(o    instanceof    JsonObject    &&    o    instanceof    JsonPrimitive)    {    }  else  if(o  instanceof  JsonArray  &&  o  instanceof  JsonPrimitive)  {	  	non-compiled	[CE]  missing  return  statement	108	None	add
157	[BUG]  [BUGGY]  }  else  if(o  instanceof  JsonObject  &&  o  instanceof  JsonPrimitive)  {  }  else  if(o  instanceof  JsonObject  &&  o  instanceof  JsonPrimitive  ||  o  instanceof  JsonPrimitive)  {  [CE]  missing  return  statement  [FE]                  AssertionError    [CONTEXT]      if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }      [BUGGY]  }  else  if(o  instanceof  JsonObject  &&  o  instanceof  JsonPrimitive)  {  }  else  if(o  instanceof  JsonObject  &&  o  instanceof  JsonPrimitive  ||  o  instanceof  JsonPrimitive)  {  [BUGGY]      return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	replace	}    else    if(o    instanceof    JsonObject    &&    o    instanceof    JsonPrimitive)    {    }  else  if(o  instanceof  JsonObject  &&  o  instanceof  JsonPrimitive  ||  o  instanceof  JsonPrimitive)  {	  	non-compiled	[CE]  missing  return  statement	108	None	add
158	[BUG]  [BUGGY]  }  else  if(o  instanceof  JsonObject  &&  o  instanceof  String)  {  ArrayIndexOutOfBoundsException  e  =(ArrayIndexOutOfBoundsException)iterator.next();  [CE]  cannot  find  symbol  iterator  [FE]        ArrayIndexOutOfBoundsException      [CONTEXT]      if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }      [BUGGY]  }  else  if(o  instanceof  JsonObject  &&  o  instanceof  String)  {  ArrayIndexOutOfBoundsException  e  =(ArrayIndexOutOfBoundsException)iterator.next();  [BUGGY]      return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	replace	}  else  if(o  instanceof  JsonObject  &&  o  instanceof  String)  {  ArrayIndexOutOfBoundsException  e  =(ArrayIndexOutOfBoundsException)iterator.next();	  }    else    if(o    instanceof    JsonObject    ||    o    instanceof    String)    {    ArrayIndexOutOfBoundsException    e    =(ArrayIndexOutOfBoundsException)iterator.next();    	non-compiled	[CE]  cannot  find  symbol  iterator	148	None	replace
159	[BUG]  [BUGGY]  }  else  if(o  instanceof  JsonObject)  {  ArrayIndexOutOfBoundsException  e  =(ArrayIndexOutOfBoundsException)iterator.next();  [CE]  cannot  find  symbol  iterator  [FE]          ArrayIndexOutOfBoundsException      [CONTEXT]      if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }      [BUGGY]  }  else  if(o  instanceof  JsonObject)  {  ArrayIndexOutOfBoundsException  e  =(ArrayIndexOutOfBoundsException)iterator.next();  [BUGGY]      return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	replace	}  else  if(o  instanceof  JsonObject)  {  ArrayIndexOutOfBoundsException  e  =(ArrayIndexOutOfBoundsException)iterator.next();	  }    else    if(o    instanceof    JsonObject    ||    o    instanceof    String)    {    ArrayIndexOutOfBoundsException    e    =(ArrayIndexOutOfBoundsException)iterator.next();    	non-compiled	[CE]  cannot  find  symbol  iterator	148	None	replace
160	[BUG]  [BUGGY]  }  else  if(o  instanceof  JsonObject  ||  o  instanceof  String)  {  ArrayIndexOutOfBoundsException  en  =(ArrayIndexOutOfBoundsException)iterator.next();  [CE]  cannot  find  symbol  iterator  [FE]            ArrayIndexOutOfBoundsException      [CONTEXT]      if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }      [BUGGY]  }  else  if(o  instanceof  JsonObject  ||  o  instanceof  String)  {  ArrayIndexOutOfBoundsException  en  =(ArrayIndexOutOfBoundsException)iterator.next();  [BUGGY]      return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	replace	}  else  if(o  instanceof  JsonObject  ||  o  instanceof  String)  {  ArrayIndexOutOfBoundsException  en  =(ArrayIndexOutOfBoundsException)iterator.next();	  }    else    if(o    instanceof    JsonObject    ||    o    instanceof    String)    {    ArrayIndexOutOfBoundsException    e    =(ArrayIndexOutOfBoundsException)iterator.next();    	non-compiled	[CE]  cannot  find  symbol  iterator	148	None	replace
161	[BUG]  [BUGGY]  }  else  if(o  instanceof  JsonObject  ||  o  instanceof  String)  {  Exception  e  =(Exception)iterator.next();  [CE]  cannot  find  symbol  iterator  [FE]              ArrayIndexOutOfBoundsException      [CONTEXT]      if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }      [BUGGY]  }  else  if(o  instanceof  JsonObject  ||  o  instanceof  String)  {  Exception  e  =(Exception)iterator.next();  [BUGGY]      return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	replace	}  else  if(o  instanceof  JsonObject  ||  o  instanceof  String)  {  Exception  e  =(Exception)iterator.next();	  }    else    if(o    instanceof    JsonObject    ||    o    instanceof    String)    {    ArrayIndexOutOfBoundsException    e    =(ArrayIndexOutOfBoundsException)iterator.next();    	non-compiled	[CE]  cannot  find  symbol  iterator	148	None	replace
162	[BUG]  [BUGGY]  }  else  if(o  instanceof  String  ||  o  instanceof  JsonNumber)  {  [CE]  cannot  find  symbol  [FE]                    ArrayIndexOutOfBoundsException      [CONTEXT]      if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }      [BUGGY]  }  else  if(o  instanceof  String  ||  o  instanceof  JsonNumber)  {  [BUGGY]      return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	replace	}  else  if(o  instanceof  String  ||  o  instanceof  JsonNumber)  {	  }    else    if(o    instanceof    JsonNumber    ||    o    instanceof    String)    {    	non-compiled	[CE]  cannot  find  symbol	227	None	replace
163	[BUG]  [BUGGY]  }  else  if(o  instanceof  JsonNumber  &&  o  instanceof  String)  {  [CE]  cannot  find  symbol  [FE]                      ArrayIndexOutOfBoundsException      [CONTEXT]      if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }      [BUGGY]  }  else  if(o  instanceof  JsonNumber  &&  o  instanceof  String)  {  [BUGGY]      return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	replace	}  else  if(o  instanceof  JsonNumber  &&  o  instanceof  String)  {	  }    else    if(o    instanceof    JsonNumber    ||    o    instanceof    String)    {    	non-compiled	[CE]  cannot  find  symbol	227	None	replace
164	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]                        ArrayIndexOutOfBoundsException      [CONTEXT]      if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }      [BUGGY]  }  else  if(o  instanceof  Number  ||  o  instanceof  String)  {  [BUGGY]      return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	add	}  else  if(o  instanceof  Number  ||  o  instanceof  String)  {	  }    else    if(o    instanceof    JsonNumber    ||    o    instanceof    String)    {    	compilable	  [FE]  AssertionError  	227	2	replace
165	[BUG]  [BUGGY]  }  else  if(o  instanceof  Number  ||  o  instanceof  String)  {  [FE]  AssertionError  [FE]                        ArrayIndexOutOfBoundsException      [CONTEXT]      if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }      [BUGGY]  }  else  if(o  instanceof  Number  ||  o  instanceof  String)  {  [BUGGY]      return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	replace	}  else  if(o  instanceof  Number  ||  o  instanceof  String)  {	  }    else    if(o    instanceof    JsonNumber    ||    o    instanceof    String)    {    	compilable	  [FE]  AssertionError  	227	2	replace
166	[BUG]  [BUGGY]  }  else  if(o  instanceof  JsonNumber  ||  o  instanceof  String  ||  isObject)  {  [CE]  cannot  find  symbol  [FE]                          ArrayIndexOutOfBoundsException      [CONTEXT]      if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }      [BUGGY]  }  else  if(o  instanceof  JsonNumber  ||  o  instanceof  String  ||  isObject)  {  [BUGGY]      return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	replace	}  else  if(o  instanceof  JsonNumber  ||  o  instanceof  String  ||  isObject)  {	  }    else    if(o    instanceof    JsonNumber    ||    o    instanceof    String)    {    	non-compiled	[CE]  cannot  find  symbol	227	None	replace
167	[BUG]  [BUGGY]  }  else  if(o  instanceof  JsonNumber  ||  o  instanceof  String  ||  o  instanceof  JsonPrimitive)  {  [CE]  cannot  find  symbol  [FE]                            ArrayIndexOutOfBoundsException      [CONTEXT]      if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }      [BUGGY]  }  else  if(o  instanceof  JsonNumber  ||  o  instanceof  String  ||  o  instanceof  JsonPrimitive)  {  [BUGGY]      return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	replace	}  else  if(o  instanceof  JsonNumber  ||  o  instanceof  String  ||  o  instanceof  JsonPrimitive)  {	  }    else    if(o    instanceof    JsonNumber    ||    o    instanceof    String)    {    	non-compiled	[CE]  cannot  find  symbol	227	None	replace
168	[BUG]  [BUGGY]  }  else  if(o  instanceof  JsonNumber  ||  o  instanceof  String  ||!(o  instanceof  JsonString))  {  [CE]  cannot  find  symbol  [FE]                              ArrayIndexOutOfBoundsException      [CONTEXT]      if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }      [BUGGY]  }  else  if(o  instanceof  JsonNumber  ||  o  instanceof  String  ||!(o  instanceof  JsonString))  {  [BUGGY]      return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	replace	}  else  if(o  instanceof  JsonNumber  ||  o  instanceof  String  ||!(o  instanceof  JsonString))  {	  }    else    if(o    instanceof    JsonNumber    ||    o    instanceof    String)    {    	non-compiled	[CE]  cannot  find  symbol	227	None	replace
169	[BUG]  [BUGGY]  return  JsonToken.BEGIN_OBJECT;  [CE]  unreachable  statement  [FE]          AssertionError      [CONTEXT]      if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }      [BUGGY]  return  JsonToken.BEGIN_OBJECT;  [BUGGY]      return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	replace	return  JsonToken.BEGIN_OBJECT;	  }    else    if(!(o    instanceof    JsonObject))    {    }    else    if(!(o    instanceof    JsonObject))    {    case    JsonToken.BEGIN_OBJECT:    return    JsonToken.BEGIN_OBJECT;    	non-compiled	[CE]  unreachable  statement	207	None	replace
170	[BUG]  [BUGGY]  }  else  if(o  instanceof  JsonArray)  {  }  [CE]  illegal  start  of  type  [FE]            AssertionError      [CONTEXT]      if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }      [BUGGY]  }  else  if(o  instanceof  JsonArray)  {  }  [BUGGY]      return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	replace	}  else  if(o  instanceof  JsonArray)  {  }	  }    else    if(!(o    instanceof    JsonObject))    {    }    else    if(!(o    instanceof    JsonObject))    {    case    JsonToken.BEGIN_OBJECT:    return    JsonToken.BEGIN_OBJECT;    	non-compiled	[CE]  illegal  start  of  type	207	None	replace
171	[BUG]  [BUGGY]  [FE]  ArrayIndexOutOfBoundsException  [FE]                    AssertionError      [CONTEXT]      if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }      [BUGGY]  }  else  if(o  instanceof  JsonNull  ||!(o  instanceof  JsonNull))  {  [BUGGY]      return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	add	}  else  if(o  instanceof  JsonNull  ||!(o  instanceof  JsonNull))  {	  }    else    if(o    instanceof    JsonNull)    {    <    }    else    if(o    instanceof    JsonNull)    {    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	75	2	replace
172	[BUG]  [BUGGY]  }  else  if(o  instanceof  JsonNull  ||!(o  instanceof  JsonNull))  {  [FE]  ArrayIndexOutOfBoundsException  [FE]                    AssertionError      [CONTEXT]      if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }      [BUGGY]  }  else  if(o  instanceof  JsonNull  ||!(o  instanceof  JsonNull))  {  [BUGGY]      return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	replace	}  else  if(o  instanceof  JsonNull  ||!(o  instanceof  JsonNull))  {	  }    else    if(o    instanceof    JsonNull)    {    <    }    else    if(o    instanceof    JsonNull)    {    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	75	2	replace
173	[BUG]  [BUGGY]  }  else  if(o  instanceof  String)  {  }  else  if(o  instanceof  String)  {  [CE]  missing  return  statement  [FE]    AssertionError    [CONTEXT]      if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }      [BUGGY]  }  else  if(o  instanceof  String)  {  }  else  if(o  instanceof  String)  {  [BUGGY]      return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	replace	}    else    if(o    instanceof    String)    {    }  else  if(o  instanceof  String)  {	  	non-compiled	[CE]  missing  return  statement	13	None	add
174	[BUG]  [BUGGY]  }  else  if(o  instanceof  String)  {  }  else  if(o  instanceof  String)  <  return  JsonToken.BEGIN_OBJECT;  [CE]  illegal  start  of  type  [FE]      AssertionError    [CONTEXT]      if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }      [BUGGY]  }  else  if(o  instanceof  String)  {  }  else  if(o  instanceof  String)  <  return  JsonToken.BEGIN_OBJECT;  [BUGGY]      return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	replace	}    else    if(o    instanceof    String)    {    }  else  if(o  instanceof  String)  <  return  JsonToken.BEGIN_OBJECT;	  	non-compiled	[CE]  illegal  start  of  type	13	None	add
175	[BUG]  [BUGGY]  }  else  if(o  instanceof  String)  {  return  JsonToken.BEGIN_OBJECT;  }  else  if(o  instanceof  String)  {  [CE]  missing  return  statement  [FE]        AssertionError    [CONTEXT]      if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }      [BUGGY]  }  else  if(o  instanceof  String)  {  return  JsonToken.BEGIN_OBJECT;  }  else  if(o  instanceof  String)  {  [BUGGY]      return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	replace	}    else    if(o    instanceof    String)    {    return  JsonToken.BEGIN_OBJECT;  }  else  if(o  instanceof  String)  {	  	non-compiled	[CE]  missing  return  statement	13	None	add
176	[BUG]  [BUGGY]  }  else  if(o  instanceof  String)  {  else  if(o  instanceof  String)  {  [CE]  'else'  without  'if'  [FE]          AssertionError    [CONTEXT]      if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }      [BUGGY]  }  else  if(o  instanceof  String)  {  else  if(o  instanceof  String)  {  [BUGGY]      return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	replace	}    else    if(o    instanceof    String)    {    else  if(o  instanceof  String)  {	  	non-compiled	[CE]  'else'  without  'if'	13	None	add
177	[BUG]  [BUGGY]  [FE]  ArrayIndexOutOfBoundsException  [FE]            AssertionError    [CONTEXT]      if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }      [BUGGY]  }  else  if(o  instanceof  String)  {  return  JsonToken.BEGIN_OBJECT;  [BUGGY]      return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	add	}    else    if(o    instanceof    String)    {    return  JsonToken.BEGIN_OBJECT;	  	compilable	  [FE]  ArrayIndexOutOfBoundsException  	13	2	add
178	[BUG]  [BUGGY]  }  else  if(o  instanceof  String)  {  return  JsonToken.BEGIN_OBJECT;  [FE]  ArrayIndexOutOfBoundsException  [FE]            AssertionError    [CONTEXT]      if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }      [BUGGY]  }  else  if(o  instanceof  String)  {  return  JsonToken.BEGIN_OBJECT;  [BUGGY]      return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	replace	}    else    if(o    instanceof    String)    {    return  JsonToken.BEGIN_OBJECT;	  	compilable	  [FE]  ArrayIndexOutOfBoundsException  	13	2	add
179	[BUG]  [BUGGY]  }  else  if(o  instanceof  String)  {  }  else  if(o  instanceof  String)  <  =  JsonToken.BEGIN_OBJECT;  [CE]  illegal  start  of  type  [FE]              AssertionError    [CONTEXT]      if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }      [BUGGY]  }  else  if(o  instanceof  String)  {  }  else  if(o  instanceof  String)  <  =  JsonToken.BEGIN_OBJECT;  [BUGGY]      return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	replace	}    else    if(o    instanceof    String)    {    }  else  if(o  instanceof  String)  <  =  JsonToken.BEGIN_OBJECT;	  	non-compiled	[CE]  illegal  start  of  type	13	None	add
180	[BUG]  [BUGGY]  }  else  if(o  instanceof  String)  {  }  else  if(o  instanceof  String)  <  JsonToken.BEGIN_OBJECT;  [CE]  >  expected  [FE]                AssertionError    [CONTEXT]      if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }      [BUGGY]  }  else  if(o  instanceof  String)  {  }  else  if(o  instanceof  String)  <  JsonToken.BEGIN_OBJECT;  [BUGGY]      return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	replace	}    else    if(o    instanceof    String)    {    }  else  if(o  instanceof  String)  <  JsonToken.BEGIN_OBJECT;	  	non-compiled	[CE]  >  expected	13	None	add
181	[BUG]  [BUGGY]  }  else  if(o  instanceof  String)  {  }  else  if(o.getClass().equals(JsonToken.STRING))  {  [CE]  missing  return  statement  [FE]                  AssertionError    [CONTEXT]      if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }      [BUGGY]  }  else  if(o  instanceof  String)  {  }  else  if(o.getClass().equals(JsonToken.STRING))  {  [BUGGY]      return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	replace	}    else    if(o    instanceof    String)    {    }  else  if(o.getClass().equals(JsonToken.STRING))  {	  	non-compiled	[CE]  missing  return  statement	13	None	add
182	[BUG]  [BUGGY]  }  else  if(o  instanceof  JsonObject  ==  null)  {  [CE]  incomparable  types:  boolean  and  <null>  [FE]    AssertionError    [CONTEXT]      if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }      [BUGGY]  }  else  if(o  instanceof  JsonObject  ==  null)  {  [BUGGY]      return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	replace	}  else  if(o  instanceof  JsonObject  ==  null)  {	  }    else    if(o    instanceof    JsonObject    ==    false)    {    	non-compiled	[CE]  incomparable  types:  boolean  and  <null>	82	None	replace
183	[BUG]  [BUGGY]  }  else  if(o  instanceof  JsonObject  {  false)  {  [CE]  ')'  expected  [FE]      AssertionError    [CONTEXT]      if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }      [BUGGY]  }  else  if(o  instanceof  JsonObject  {  false)  {  [BUGGY]      return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	replace	}  else  if(o  instanceof  JsonObject  {  false)  {	  }    else    if(o    instanceof    JsonObject    ==    false)    {    	non-compiled	[CE]  ')'  expected	82	None	replace
184	[BUG]  [BUGGY]  }  else  if(o  instanceof  JsonObject  <  =  false)  {  [CE]  illegal  start  of  type  [FE]        AssertionError    [CONTEXT]      if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }      [BUGGY]  }  else  if(o  instanceof  JsonObject  <  =  false)  {  [BUGGY]      return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	replace	}  else  if(o  instanceof  JsonObject  <  =  false)  {	  }    else    if(o    instanceof    JsonObject    ==    false)    {    	non-compiled	[CE]  illegal  start  of  type	82	None	replace
185	[BUG]  [BUGGY]  }  else  if(o  instanceof  JsonObject  [Delete]  false)  {  [CE]  [FE]          AssertionError    [CONTEXT]      if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }      [BUGGY]  }  else  if(o  instanceof  JsonObject  [Delete]  false)  {  [BUGGY]      return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	replace	}  else  if(o  instanceof  JsonObject  [Delete]  false)  {	  }    else    if(o    instanceof    JsonObject    ==    false)    {    	non-compiled	[CE]  	82	None	replace
186	[BUG]  [BUGGY]  }  else  if(!(o  instanceof  JsonArray))  {  ((  JsonObject)o).setObject(isObject?  JsonToken.END_OBJECT  :  JsonToken.END_OBJECT);  }  [CE]  illegal  start  of  type  [FE]          AssertionError      [CONTEXT]      if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }      [BUGGY]  }  else  if(!(o  instanceof  JsonArray))  {  ((  JsonObject)o).setObject(isObject?  JsonToken.END_OBJECT  :  JsonToken.END_OBJECT);  }  [BUGGY]      return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	replace	}  else  if(!(o  instanceof  JsonArray))  {  ((  JsonObject)o).setObject(isObject?  JsonToken.END_OBJECT  :  JsonToken.END_OBJECT);  }	  }    else    if(!(o    instanceof    JsonObject))    {    ((    JsonObject)o).setObject(isObject?    JsonToken.END_OBJECT    :    JsonToken.END_OBJECT);    	non-compiled	[CE]  illegal  start  of  type	157	None	replace
187	[BUG]  [BUGGY]  }  else  if(!(o  instanceof  JsonArray))  {  ((  JsonObject)o).setObject(isObject?  JsonToken.END_OBJECT  :  JsonToken.END_OBJECT);  [CE]  cannot  find  symbol  isObject  [FE]            AssertionError      [CONTEXT]      if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }      [BUGGY]  }  else  if(!(o  instanceof  JsonArray))  {  ((  JsonObject)o).setObject(isObject?  JsonToken.END_OBJECT  :  JsonToken.END_OBJECT);  [BUGGY]      return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	replace	}  else  if(!(o  instanceof  JsonArray))  {  ((  JsonObject)o).setObject(isObject?  JsonToken.END_OBJECT  :  JsonToken.END_OBJECT);	  }    else    if(!(o    instanceof    JsonObject))    {    ((    JsonObject)o).setObject(isObject?    JsonToken.END_OBJECT    :    JsonToken.END_OBJECT);    	non-compiled	[CE]  cannot  find  symbol  isObject	157	None	replace
188	[BUG]  [BUGGY]  }  else  if(!(o  instanceof  JsonObject))  {  ((  JsonObject)o).setObject(isObject?  JsonToken.END_OBJECT  :  JsonToken.END_OBJECT);  }  [CE]  illegal  start  of  type  [FE]              AssertionError      [CONTEXT]      if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }      [BUGGY]  }  else  if(!(o  instanceof  JsonObject))  {  ((  JsonObject)o).setObject(isObject?  JsonToken.END_OBJECT  :  JsonToken.END_OBJECT);  }  [BUGGY]      return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	replace	}  else  if(!(o  instanceof  JsonObject))  {  ((  JsonObject)o).setObject(isObject?  JsonToken.END_OBJECT  :  JsonToken.END_OBJECT);  }	  }    else    if(!(o    instanceof    JsonObject))    {    ((    JsonObject)o).setObject(isObject?    JsonToken.END_OBJECT    :    JsonToken.END_OBJECT);    	non-compiled	[CE]  illegal  start  of  type	157	None	replace
189	[BUG]  [BUGGY]  }  else  if(!(o  instanceof  JsonString))  {  ((  JsonString)o).setObject(isObject?  JsonToken.END_OBJECT  :  JsonToken.END_OBJECT);  [CE]  cannot  find  symbol  [FE]                AssertionError      [CONTEXT]      if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }      [BUGGY]  }  else  if(!(o  instanceof  JsonString))  {  ((  JsonString)o).setObject(isObject?  JsonToken.END_OBJECT  :  JsonToken.END_OBJECT);  [BUGGY]      return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	replace	}  else  if(!(o  instanceof  JsonString))  {  ((  JsonString)o).setObject(isObject?  JsonToken.END_OBJECT  :  JsonToken.END_OBJECT);	  }    else    if(!(o    instanceof    JsonObject))    {    ((    JsonObject)o).setObject(isObject?    JsonToken.END_OBJECT    :    JsonToken.END_OBJECT);    	non-compiled	[CE]  cannot  find  symbol	157	None	replace
190	[BUG]  [BUGGY]  }  else  if(o  instanceof  JsonObject)  {  ((  JsonObject)o).setObject(isObject?  JsonToken.END_OBJECT  :  JsonToken.END_OBJECT);  [CE]  cannot  find  symbol  isObject  [FE]                  AssertionError      [CONTEXT]      if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }      [BUGGY]  }  else  if(o  instanceof  JsonObject)  {  ((  JsonObject)o).setObject(isObject?  JsonToken.END_OBJECT  :  JsonToken.END_OBJECT);  [BUGGY]      return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	replace	}  else  if(o  instanceof  JsonObject)  {  ((  JsonObject)o).setObject(isObject?  JsonToken.END_OBJECT  :  JsonToken.END_OBJECT);	  }    else    if(!(o    instanceof    JsonObject))    {    ((    JsonObject)o).setObject(isObject?    JsonToken.END_OBJECT    :    JsonToken.END_OBJECT);    	non-compiled	[CE]  cannot  find  symbol  isObject	157	None	replace
191	[BUG]  [BUGGY]  }  else  if(!(o  instanceof  JsonPrimitive))  {  ((  JsonPrimitive)o).setObject(isObject?  JsonToken.END_OBJECT  :  JsonToken.END_OBJECT);  [CE]  cannot  find  symbol  isObject  [FE]                    AssertionError      [CONTEXT]      if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }      [BUGGY]  }  else  if(!(o  instanceof  JsonPrimitive))  {  ((  JsonPrimitive)o).setObject(isObject?  JsonToken.END_OBJECT  :  JsonToken.END_OBJECT);  [BUGGY]      return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	replace	}  else  if(!(o  instanceof  JsonPrimitive))  {  ((  JsonPrimitive)o).setObject(isObject?  JsonToken.END_OBJECT  :  JsonToken.END_OBJECT);	  }    else    if(!(o    instanceof    JsonObject))    {    ((    JsonObject)o).setObject(isObject?    JsonToken.END_OBJECT    :    JsonToken.END_OBJECT);    	non-compiled	[CE]  cannot  find  symbol  isObject	157	None	replace
192	[BUG]  [BUGGY]  }  else  if(o  instanceof  JsonObject  ||  o  instanceof  String  ||  isArray)  {  [CE]  cannot  find  symbol  isArray  [FE]                ArrayIndexOutOfBoundsException      [CONTEXT]      if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }      [BUGGY]  }  else  if(o  instanceof  JsonObject  ||  o  instanceof  String  ||  isArray)  {  [BUGGY]      return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	replace	}  else  if(o  instanceof  JsonObject  ||  o  instanceof  String  ||  isArray)  {	  }    else    if(o    instanceof    JsonObject    ||    o    instanceof    String    ||    isObject)    {    	non-compiled	[CE]  cannot  find  symbol  isArray	55	None	replace
193	[BUG]  [BUGGY]  }  else  if(o  instanceof  JsonObject  ||  o  instanceof  String  ||  isNumber)  {  [CE]  cannot  find  symbol  isNumber  [FE]                  ArrayIndexOutOfBoundsException      [CONTEXT]      if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }      [BUGGY]  }  else  if(o  instanceof  JsonObject  ||  o  instanceof  String  ||  isNumber)  {  [BUGGY]      return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	replace	}  else  if(o  instanceof  JsonObject  ||  o  instanceof  String  ||  isNumber)  {	  }    else    if(o    instanceof    JsonObject    ||    o    instanceof    String    ||    isObject)    {    	non-compiled	[CE]  cannot  find  symbol  isNumber	55	None	replace
194	[BUG]  [BUGGY]  }  else  if(o  instanceof  JsonObject  ||  o  instanceof  String  ||  isUnknown)  {  [CE]  cannot  find  symbol  isUnknown  [FE]                    ArrayIndexOutOfBoundsException      [CONTEXT]      if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }      [BUGGY]  }  else  if(o  instanceof  JsonObject  ||  o  instanceof  String  ||  isUnknown)  {  [BUGGY]      return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	replace	}  else  if(o  instanceof  JsonObject  ||  o  instanceof  String  ||  isUnknown)  {	  }    else    if(o    instanceof    JsonObject    ||    o    instanceof    String    ||    isObject)    {    	non-compiled	[CE]  cannot  find  symbol  isUnknown	55	None	replace
195	[BUG]  [BUGGY]  }  else  if(o  instanceof  JsonObject  ||  o  instanceof  String  ||  isInterface)  {  [CE]  cannot  find  symbol  isInterface  [FE]                      ArrayIndexOutOfBoundsException      [CONTEXT]      if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }      [BUGGY]  }  else  if(o  instanceof  JsonObject  ||  o  instanceof  String  ||  isInterface)  {  [BUGGY]      return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	replace	}  else  if(o  instanceof  JsonObject  ||  o  instanceof  String  ||  isInterface)  {	  }    else    if(o    instanceof    JsonObject    ||    o    instanceof    String    ||    isObject)    {    	non-compiled	[CE]  cannot  find  symbol  isInterface	55	None	replace
196	[BUG]  [BUGGY]  }  else  if(o  instanceof  JsonObject  ||  o  instanceof  String  ||  isEnum)  {  [CE]  cannot  find  symbol  isEnum  [FE]                        ArrayIndexOutOfBoundsException      [CONTEXT]      if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }      [BUGGY]  }  else  if(o  instanceof  JsonObject  ||  o  instanceof  String  ||  isEnum)  {  [BUGGY]      return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	replace	}  else  if(o  instanceof  JsonObject  ||  o  instanceof  String  ||  isEnum)  {	  }    else    if(o    instanceof    JsonObject    ||    o    instanceof    String    ||    isObject)    {    	non-compiled	[CE]  cannot  find  symbol  isEnum	55	None	replace
197	[BUG]  [BUGGY]  }  else  if(o  instanceof  JsonObject  ||  o  instanceof  String  ||  isNullable)  {  [CE]  cannot  find  symbol  isNullable  [FE]                          ArrayIndexOutOfBoundsException      [CONTEXT]      if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }      [BUGGY]  }  else  if(o  instanceof  JsonObject  ||  o  instanceof  String  ||  isNullable)  {  [BUGGY]      return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	replace	}  else  if(o  instanceof  JsonObject  ||  o  instanceof  String  ||  isNullable)  {	  }    else    if(o    instanceof    JsonObject    ||    o    instanceof    String    ||    isObject)    {    	non-compiled	[CE]  cannot  find  symbol  isNullable	55	None	replace
198	[BUG]  [BUGGY]  parent  ==  null  ||  isObject)  {  return  JsonToken.NAME;  }  [CE]  not  a  statement  [FE]                          ArrayIndexOutOfBoundsException      [CONTEXT]      if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }      [BUGGY]  parent  ==  null  ||  isObject)  {  return  JsonToken.NAME;  }  [BUGGY]      return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	replace	parent  ==  null  ||  isObject)  {  return  JsonToken.NAME;  }	  if(o    ==    null)    {    if(isObject)    {    return    JsonToken.NAME;    }    	non-compiled	[CE]  not  a  statement	186	None	replace
199	[BUG]  [BUGGY]  parent  ==  null  &&  isObject)  {  return  JsonToken.NAME;  }  [CE]  not  a  statement  [FE]                            ArrayIndexOutOfBoundsException      [CONTEXT]      if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }      [BUGGY]  parent  ==  null  &&  isObject)  {  return  JsonToken.NAME;  }  [BUGGY]      return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	replace	parent  ==  null  &&  isObject)  {  return  JsonToken.NAME;  }	  if(o    ==    null)    {    if(isObject)    {    return    JsonToken.NAME;    }    	non-compiled	[CE]  not  a  statement	186	None	replace
200	[BUG]  [BUGGY]  parent  ==  null  ||  isObject)  {  return  JsonToken.NAME;  [CE]  not  a  statement  [FE]                              ArrayIndexOutOfBoundsException      [CONTEXT]      if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }      [BUGGY]  parent  ==  null  ||  isObject)  {  return  JsonToken.NAME;  [BUGGY]      return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	replace	parent  ==  null  ||  isObject)  {  return  JsonToken.NAME;	  if(o    ==    null)    {    if(isObject)    {    return    JsonToken.NAME;    }    	non-compiled	[CE]  not  a  statement	186	None	replace
201	[BUG]  [BUGGY]  parent!=  null  ||  isObject)  {  return  JsonToken.NAME;  }  [CE]  not  a  statement  [FE]                                ArrayIndexOutOfBoundsException      [CONTEXT]      if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }      [BUGGY]  parent!=  null  ||  isObject)  {  return  JsonToken.NAME;  }  [BUGGY]      return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	replace	parent!=  null  ||  isObject)  {  return  JsonToken.NAME;  }	  if(o    ==    null)    {    if(isObject)    {    return    JsonToken.NAME;    }    	non-compiled	[CE]  not  a  statement	186	None	replace
202	[BUG]  [BUGGY]  parent!=  null  &&  isObject)  {  return  JsonToken.NAME;  }  [CE]  not  a  statement  [FE]                                  ArrayIndexOutOfBoundsException      [CONTEXT]      if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }      [BUGGY]  parent!=  null  &&  isObject)  {  return  JsonToken.NAME;  }  [BUGGY]      return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	replace	parent!=  null  &&  isObject)  {  return  JsonToken.NAME;  }	  if(o    ==    null)    {    if(isObject)    {    return    JsonToken.NAME;    }    	non-compiled	[CE]  not  a  statement	186	None	replace
203	[BUG]  [BUGGY]  parent!=  null  ||  isObject)  {  return  JsonToken.NAME;  [CE]  not  a  statement  [FE]                                    ArrayIndexOutOfBoundsException      [CONTEXT]      if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }      [BUGGY]  parent!=  null  ||  isObject)  {  return  JsonToken.NAME;  [BUGGY]      return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	replace	parent!=  null  ||  isObject)  {  return  JsonToken.NAME;	  if(o    ==    null)    {    if(isObject)    {    return    JsonToken.NAME;    }    	non-compiled	[CE]  not  a  statement	186	None	replace
204	[BUG]  [BUGGY]  aughtExceptionHandler.throwAsUnquotedException( " ");  [CE]  cannot  find  symbol  aughtExceptionHandler  [FE]                                      ArrayIndexOutOfBoundsException      [CONTEXT]      if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }      [BUGGY]  aughtExceptionHandler.throwAsUnquotedException( " ");  [BUGGY]      return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	replace	aughtExceptionHandler.throwAsUnquotedException( " ");	  if(o    ==    null)    {    if(isObject)    {    return    JsonToken.NAME;    }    	non-compiled	[CE]  cannot  find  symbol  aughtExceptionHandler	186	None	replace
205	[BUG]  [BUGGY]  }  else  if(o  instanceof  JsonObject  ==  false)  {  }  else  if(o  instanceof  JsonObject  ==  false)  {  [CE]  missing  return  statement  [FE]    AssertionError    [CONTEXT]      if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }      [BUGGY]  }  else  if(o  instanceof  JsonObject  ==  false)  {  }  else  if(o  instanceof  JsonObject  ==  false)  {  [BUGGY]      return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	replace	}    else    if(o    instanceof    JsonObject    ==    false)    {    }  else  if(o  instanceof  JsonObject  ==  false)  {	  	non-compiled	[CE]  missing  return  statement	81	None	add
206	[BUG]  [BUGGY]  }  else  if(o  instanceof  JsonObject  ==  false)  {  else  if(o  instanceof  JsonObject  ==  false)  {  [CE]  'else'  without  'if'  [FE]      AssertionError    [CONTEXT]      if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }      [BUGGY]  }  else  if(o  instanceof  JsonObject  ==  false)  {  else  if(o  instanceof  JsonObject  ==  false)  {  [BUGGY]      return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	replace	}    else    if(o    instanceof    JsonObject    ==    false)    {    else  if(o  instanceof  JsonObject  ==  false)  {	  	non-compiled	[CE]  'else'  without  'if'	81	None	add
207	[BUG]  [BUGGY]  }  else  if(o  instanceof  JsonObject  ==  false)  {  }  else  if(o  instanceof  JsonObject  {  false)  {  [CE]  ')'  expected  [FE]        AssertionError    [CONTEXT]      if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }      [BUGGY]  }  else  if(o  instanceof  JsonObject  ==  false)  {  }  else  if(o  instanceof  JsonObject  {  false)  {  [BUGGY]      return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	replace	}    else    if(o    instanceof    JsonObject    ==    false)    {    }  else  if(o  instanceof  JsonObject  {  false)  {	  	non-compiled	[CE]  ')'  expected	81	None	add
208	[BUG]  [BUGGY]  }  else  if(o  instanceof  JsonObject  ==  false)  {  }  else  if(o  instanceof  JsonObject!=  false)  {  [CE]  missing  return  statement  [FE]          AssertionError    [CONTEXT]      if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }      [BUGGY]  }  else  if(o  instanceof  JsonObject  ==  false)  {  }  else  if(o  instanceof  JsonObject!=  false)  {  [BUGGY]      return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	replace	}    else    if(o    instanceof    JsonObject    ==    false)    {    }  else  if(o  instanceof  JsonObject!=  false)  {	  	non-compiled	[CE]  missing  return  statement	81	None	add
209	[BUG]  [BUGGY]  }  else  if(o  instanceof  JsonObject  ==  false)  {  }  else  if(o  instanceof  JsonObject  >=  false)  {  [CE]  bad  operand  types  for  binary  operator  '>='  [FE]            AssertionError    [CONTEXT]      if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }      [BUGGY]  }  else  if(o  instanceof  JsonObject  ==  false)  {  }  else  if(o  instanceof  JsonObject  >=  false)  {  [BUGGY]      return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	replace	}    else    if(o    instanceof    JsonObject    ==    false)    {    }  else  if(o  instanceof  JsonObject  >=  false)  {	  	non-compiled	[CE]  bad  operand  types  for  binary  operator  '>='	81	None	add
210	[BUG]  [BUGGY]  }  else  if(o  instanceof  JsonObject  ==  false)  {  }  else  if(o  instanceof  JsonObject  ==  true)  {  [CE]  missing  return  statement  [FE]              AssertionError    [CONTEXT]      if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }      [BUGGY]  }  else  if(o  instanceof  JsonObject  ==  false)  {  }  else  if(o  instanceof  JsonObject  ==  true)  {  [BUGGY]      return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	replace	}    else    if(o    instanceof    JsonObject    ==    false)    {    }  else  if(o  instanceof  JsonObject  ==  true)  {	  	non-compiled	[CE]  missing  return  statement	81	None	add
211	[BUG]  [BUGGY]  }  else  if(o  instanceof  JsonObject  ==  false)  {  <  }  else  if(o  instanceof  JsonObject  ==  false)  {  [CE]  illegal  start  of  type  [FE]                AssertionError    [CONTEXT]      if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }      [BUGGY]  }  else  if(o  instanceof  JsonObject  ==  false)  {  <  }  else  if(o  instanceof  JsonObject  ==  false)  {  [BUGGY]      return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	replace	}    else    if(o    instanceof    JsonObject    ==    false)    {    <  }  else  if(o  instanceof  JsonObject  ==  false)  {	  	non-compiled	[CE]  illegal  start  of  type	81	None	add
212	[BUG]  [BUGGY]  [FE]  ArrayIndexOutOfBoundsException  [FE]                  AssertionError    [CONTEXT]      if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }      [BUGGY]  }  else  if(o  instanceof  JsonObject  ==  false)  {  return  JsonToken.BEGIN_OBJECT;  [BUGGY]      return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	add	}    else    if(o    instanceof    JsonObject    ==    false)    {    return  JsonToken.BEGIN_OBJECT;	  	compilable	  [FE]  ArrayIndexOutOfBoundsException  	81	2	add
213	[BUG]  [BUGGY]  }  else  if(o  instanceof  JsonObject  ==  false)  {  return  JsonToken.BEGIN_OBJECT;  [FE]  ArrayIndexOutOfBoundsException  [FE]                  AssertionError    [CONTEXT]      if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }      [BUGGY]  }  else  if(o  instanceof  JsonObject  ==  false)  {  return  JsonToken.BEGIN_OBJECT;  [BUGGY]      return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	replace	}    else    if(o    instanceof    JsonObject    ==    false)    {    return  JsonToken.BEGIN_OBJECT;	  	compilable	  [FE]  ArrayIndexOutOfBoundsException  	81	2	add
214	[BUG]  [BUGGY]  }  else  if(o  instanceof  JsonObject  ==  ')'  {  [CE]  ')'  expected  [FE]            ArrayIndexOutOfBoundsException      [CONTEXT]      if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }      [BUGGY]  }  else  if(o  instanceof  JsonObject  ==  ')'  {  [BUGGY]      return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	replace	}  else  if(o  instanceof  JsonObject  ==  ')'  {	  }    else    if(o    instanceof    JsonObject!=    ')'    {    	non-compiled	[CE]  ')'  expected	213	None	replace
215	[BUG]  [BUGGY]  }  else  if(o  instanceof  JsonObject  ==  0)  {  [CE]  incomparable  types:  boolean  and  int  [FE]              ArrayIndexOutOfBoundsException      [CONTEXT]      if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }      [BUGGY]  }  else  if(o  instanceof  JsonObject  ==  0)  {  [BUGGY]      return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	replace	}  else  if(o  instanceof  JsonObject  ==  0)  {	  }    else    if(o    instanceof    JsonObject!=    ')'    {    	non-compiled	[CE]  incomparable  types:  boolean  and  int	213	None	replace
216	[BUG]  [BUGGY]  }  else  if(o  instanceof  JsonObject!=  0)  {  [CE]  incomparable  types:  boolean  and  int  [FE]                ArrayIndexOutOfBoundsException      [CONTEXT]      if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }      [BUGGY]  }  else  if(o  instanceof  JsonObject!=  0)  {  [BUGGY]      return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	replace	}  else  if(o  instanceof  JsonObject!=  0)  {	  }    else    if(o    instanceof    JsonObject!=    ')'    {    	non-compiled	[CE]  incomparable  types:  boolean  and  int	213	None	replace
217	[BUG]  [BUGGY]  }  else  if(o  instanceof  JsonObject  >=  ')'  {  [CE]  ')'  expected  [FE]                  ArrayIndexOutOfBoundsException      [CONTEXT]      if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }      [BUGGY]  }  else  if(o  instanceof  JsonObject  >=  ')'  {  [BUGGY]      return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	replace	}  else  if(o  instanceof  JsonObject  >=  ')'  {	  }    else    if(o    instanceof    JsonObject!=    ')'    {    	non-compiled	[CE]  ')'  expected	213	None	replace
218	[BUG]  [BUGGY]  }  else  if(o  instanceof  JsonObject  >=  0)  {  [CE]  bad  operand  types  for  binary  operator  '>='  [FE]                    ArrayIndexOutOfBoundsException      [CONTEXT]      if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }      [BUGGY]  }  else  if(o  instanceof  JsonObject  >=  0)  {  [BUGGY]      return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	replace	}  else  if(o  instanceof  JsonObject  >=  0)  {	  }    else    if(o    instanceof    JsonObject!=    ')'    {    	non-compiled	[CE]  bad  operand  types  for  binary  operator  '>='	213	None	replace
219	[BUG]  [BUGGY]  [FE]  ArrayIndexOutOfBoundsException  [FE]              AssertionError      [CONTEXT]      if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }      [BUGGY]  }  else  if(o.getClass()!=  getClass())  {  [BUGGY]      return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	add	}  else  if(o.getClass()!=  getClass())  {	  }    else    if(!(o    instanceof    JsonObject))    {    }    else    if(!(o    instanceof    JsonObject))    {    case    JsonToken.BEGIN_OBJECT:    return    JsonToken.BEGIN_ARRAY;    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	209	2	replace
220	[BUG]  [BUGGY]  }  else  if(o.getClass()!=  getClass())  {  [FE]  ArrayIndexOutOfBoundsException  [FE]              AssertionError      [CONTEXT]      if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }      [BUGGY]  }  else  if(o.getClass()!=  getClass())  {  [BUGGY]      return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	replace	}  else  if(o.getClass()!=  getClass())  {	  }    else    if(!(o    instanceof    JsonObject))    {    }    else    if(!(o    instanceof    JsonObject))    {    case    JsonToken.BEGIN_OBJECT:    return    JsonToken.BEGIN_ARRAY;    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	209	2	replace
221	[BUG]  [BUGGY]  }  else  if(!(o  instanceof  JsonObject  ||  o  instanceof  String))  {  }  else  if(!(o  instanceof  JsonObject  ||  o  instanceof  String))  {  [CE]  missing  return  statement  [FE]    AssertionError    [CONTEXT]      if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }      [BUGGY]  }  else  if(!(o  instanceof  JsonObject  ||  o  instanceof  String))  {  }  else  if(!(o  instanceof  JsonObject  ||  o  instanceof  String))  {  [BUGGY]      return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	replace	}    else    if(!(o    instanceof    JsonObject    ||    o    instanceof    String))    {    }  else  if(!(o  instanceof  JsonObject  ||  o  instanceof  String))  {	  	non-compiled	[CE]  missing  return  statement	252	None	add
222	[BUG]  [BUGGY]  }  else  if(!(o  instanceof  JsonObject  ||  o  instanceof  String))  {  else  if(!(o  instanceof  JsonObject  ||  o  instanceof  String))  {  [CE]  'else'  without  'if'  [FE]      AssertionError    [CONTEXT]      if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }      [BUGGY]  }  else  if(!(o  instanceof  JsonObject  ||  o  instanceof  String))  {  else  if(!(o  instanceof  JsonObject  ||  o  instanceof  String))  {  [BUGGY]      return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	replace	}    else    if(!(o    instanceof    JsonObject    ||    o    instanceof    String))    {    else  if(!(o  instanceof  JsonObject  ||  o  instanceof  String))  {	  	non-compiled	[CE]  'else'  without  'if'	252	None	add
223	[BUG]  [BUGGY]  }  else  if(!(o  instanceof  JsonObject  ||  o  instanceof  String))  {  }  else  if(!(o  instanceof  JsonObject  ||  o  instanceof  String))  <  return  JsonToken.BEGIN_OBJECT;  [CE]  illegal  start  of  type  [FE]        AssertionError    [CONTEXT]      if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }      [BUGGY]  }  else  if(!(o  instanceof  JsonObject  ||  o  instanceof  String))  {  }  else  if(!(o  instanceof  JsonObject  ||  o  instanceof  String))  <  return  JsonToken.BEGIN_OBJECT;  [BUGGY]      return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	replace	}    else    if(!(o    instanceof    JsonObject    ||    o    instanceof    String))    {    }  else  if(!(o  instanceof  JsonObject  ||  o  instanceof  String))  <  return  JsonToken.BEGIN_OBJECT;	  	non-compiled	[CE]  illegal  start  of  type	252	None	add
224	[BUG]  [BUGGY]  }  else  if(!(o  instanceof  JsonObject  ||  o  instanceof  String))  {  <  }  else  if(!(o  instanceof  JsonObject  ||  o  instanceof  String))  {  [CE]  illegal  start  of  type  [FE]          AssertionError    [CONTEXT]      if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }      [BUGGY]  }  else  if(!(o  instanceof  JsonObject  ||  o  instanceof  String))  {  <  }  else  if(!(o  instanceof  JsonObject  ||  o  instanceof  String))  {  [BUGGY]      return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	replace	}    else    if(!(o    instanceof    JsonObject    ||    o    instanceof    String))    {    <  }  else  if(!(o  instanceof  JsonObject  ||  o  instanceof  String))  {	  	non-compiled	[CE]  illegal  start  of  type	252	None	add
225	[BUG]  [BUGGY]  }  else  if(!(o  instanceof  JsonObject  ||  o  instanceof  String))  {  }  else  if(!(o  instanceof  JSONObject  ||  o  instanceof  String))  {  [CE]  cannot  find  symbol  [FE]            AssertionError    [CONTEXT]      if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }      [BUGGY]  }  else  if(!(o  instanceof  JsonObject  ||  o  instanceof  String))  {  }  else  if(!(o  instanceof  JSONObject  ||  o  instanceof  String))  {  [BUGGY]      return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	replace	}    else    if(!(o    instanceof    JsonObject    ||    o    instanceof    String))    {    }  else  if(!(o  instanceof  JSONObject  ||  o  instanceof  String))  {	  	non-compiled	[CE]  cannot  find  symbol	252	None	add
226	[BUG]  [BUGGY]  }  else  if(!(o  instanceof  JsonObject  ||  o  instanceof  String))  {  {  }  else  if(!(o  instanceof  JsonObject  ||  o  instanceof  String))  {  [CE]  'else'  without  'if'  [FE]              AssertionError    [CONTEXT]      if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }      [BUGGY]  }  else  if(!(o  instanceof  JsonObject  ||  o  instanceof  String))  {  {  }  else  if(!(o  instanceof  JsonObject  ||  o  instanceof  String))  {  [BUGGY]      return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	replace	}    else    if(!(o    instanceof    JsonObject    ||    o    instanceof    String))    {    {  }  else  if(!(o  instanceof  JsonObject  ||  o  instanceof  String))  {	  	non-compiled	[CE]  'else'  without  'if'	252	None	add
227	[BUG]  [BUGGY]  }  else  if(o  instanceof  JsonNull)  {  return  JsonToken.BEGIN_OBJECT;  }  [CE]  illegal  start  of  type  [FE]          AssertionError      [CONTEXT]      if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }      [BUGGY]  }  else  if(o  instanceof  JsonNull)  {  return  JsonToken.BEGIN_OBJECT;  }  [BUGGY]      return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	replace	}  else  if(o  instanceof  JsonNull)  {  return  JsonToken.BEGIN_OBJECT;  }	  }    else    if(o    instanceof    JsonNull)    {    }    else    if(o    instanceof    JsonNull)    {    return    JsonToken.BEGIN_OBJECT;    	non-compiled	[CE]  illegal  start  of  type	221	None	replace
228	[BUG]  [BUGGY]  }  else  if(!(o  instanceof  JsonObject))  {  object  =(object  instanceof  JsonObject)?  JsonToken.BEGIN_OBJECT  :  JsonToken.BEGIN_OBJECT;  [CE]  cannot  find  symbol  object  [FE]            AssertionError      [CONTEXT]      if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }      [BUGGY]  }  else  if(!(o  instanceof  JsonObject))  {  object  =(object  instanceof  JsonObject)?  JsonToken.BEGIN_OBJECT  :  JsonToken.BEGIN_OBJECT;  [BUGGY]      return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	replace	}  else  if(!(o  instanceof  JsonObject))  {  object  =(object  instanceof  JsonObject)?  JsonToken.BEGIN_OBJECT  :  JsonToken.BEGIN_OBJECT;	  }    else    if(!(o    instanceof    JsonObject))    {    object    =(o    instanceof    JsonObject)?    JsonToken.BEGIN_OBJECT    :    JsonToken.BEGIN_OBJECT;    	non-compiled	[CE]  cannot  find  symbol  object	158	None	replace
229	[BUG]  [BUGGY]  }  else  if(!(o  instanceof  JsonObject))  {  object  =(jsonToken  instanceof  JsonObject)?  JsonToken.BEGIN_OBJECT  :  JsonToken.BEGIN_OBJECT;  [CE]  cannot  find  symbol  object  [FE]              AssertionError      [CONTEXT]      if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }      [BUGGY]  }  else  if(!(o  instanceof  JsonObject))  {  object  =(jsonToken  instanceof  JsonObject)?  JsonToken.BEGIN_OBJECT  :  JsonToken.BEGIN_OBJECT;  [BUGGY]      return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	replace	}  else  if(!(o  instanceof  JsonObject))  {  object  =(jsonToken  instanceof  JsonObject)?  JsonToken.BEGIN_OBJECT  :  JsonToken.BEGIN_OBJECT;	  }    else    if(!(o    instanceof    JsonObject))    {    object    =(o    instanceof    JsonObject)?    JsonToken.BEGIN_OBJECT    :    JsonToken.BEGIN_OBJECT;    	non-compiled	[CE]  cannot  find  symbol  object	158	None	replace
230	[BUG]  [BUGGY]  }  else  if(!(o  instanceof  JsonObject))  {  object  =(JsonObject)?  JsonToken.BEGIN_OBJECT  :  JsonToken.BEGIN_OBJECT;  [CE]  cannot  find  symbol  object  [FE]                AssertionError      [CONTEXT]      if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }      [BUGGY]  }  else  if(!(o  instanceof  JsonObject))  {  object  =(JsonObject)?  JsonToken.BEGIN_OBJECT  :  JsonToken.BEGIN_OBJECT;  [BUGGY]      return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	replace	}  else  if(!(o  instanceof  JsonObject))  {  object  =(JsonObject)?  JsonToken.BEGIN_OBJECT  :  JsonToken.BEGIN_OBJECT;	  }    else    if(!(o    instanceof    JsonObject))    {    object    =(o    instanceof    JsonObject)?    JsonToken.BEGIN_OBJECT    :    JsonToken.BEGIN_OBJECT;    	non-compiled	[CE]  cannot  find  symbol  object	158	None	replace
231	[BUG]  [BUGGY]  }  else  if(!(o  instanceof  JsonObject))  {  return(JsonObject)?  JsonToken.BEGIN_OBJECT  :  JsonToken.BEGIN_OBJECT;  [CE]  cannot  find  symbol  JsonObject  [FE]                  AssertionError      [CONTEXT]      if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }      [BUGGY]  }  else  if(!(o  instanceof  JsonObject))  {  return(JsonObject)?  JsonToken.BEGIN_OBJECT  :  JsonToken.BEGIN_OBJECT;  [BUGGY]      return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	replace	}  else  if(!(o  instanceof  JsonObject))  {  return(JsonObject)?  JsonToken.BEGIN_OBJECT  :  JsonToken.BEGIN_OBJECT;	  }    else    if(!(o    instanceof    JsonObject))    {    object    =(o    instanceof    JsonObject)?    JsonToken.BEGIN_OBJECT    :    JsonToken.BEGIN_OBJECT;    	non-compiled	[CE]  cannot  find  symbol  JsonObject	158	None	replace
232	[BUG]  [BUGGY]  }  else  if(!(o  instanceof  JsonObject))  {  object  =(JsonObject)isObject?  JsonToken.BEGIN_OBJECT  :  JsonToken.BEGIN_OBJECT;  [CE]  cannot  find  symbol  object  [FE]                    AssertionError      [CONTEXT]      if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }      [BUGGY]  }  else  if(!(o  instanceof  JsonObject))  {  object  =(JsonObject)isObject?  JsonToken.BEGIN_OBJECT  :  JsonToken.BEGIN_OBJECT;  [BUGGY]      return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	replace	}  else  if(!(o  instanceof  JsonObject))  {  object  =(JsonObject)isObject?  JsonToken.BEGIN_OBJECT  :  JsonToken.BEGIN_OBJECT;	  }    else    if(!(o    instanceof    JsonObject))    {    object    =(o    instanceof    JsonObject)?    JsonToken.BEGIN_OBJECT    :    JsonToken.BEGIN_OBJECT;    	non-compiled	[CE]  cannot  find  symbol  object	158	None	replace
233	[BUG]  [BUGGY]  }  else  if(o  instanceof  JsonObject)  {  object  =(JsonObject)o  instanceof  JsonObject?  JsonToken.BEGIN_OBJECT  :  JsonToken.BEGIN_OBJECT;  [CE]  cannot  find  symbol  object  [FE]                      AssertionError      [CONTEXT]      if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }      [BUGGY]  }  else  if(o  instanceof  JsonObject)  {  object  =(JsonObject)o  instanceof  JsonObject?  JsonToken.BEGIN_OBJECT  :  JsonToken.BEGIN_OBJECT;  [BUGGY]      return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	replace	}  else  if(o  instanceof  JsonObject)  {  object  =(JsonObject)o  instanceof  JsonObject?  JsonToken.BEGIN_OBJECT  :  JsonToken.BEGIN_OBJECT;	  }    else    if(!(o    instanceof    JsonObject))    {    object    =(o    instanceof    JsonObject)?    JsonToken.BEGIN_OBJECT    :    JsonToken.BEGIN_OBJECT;    	non-compiled	[CE]  cannot  find  symbol  object	158	None	replace
234	[BUG]  [BUGGY]  }  else  if(!(o  instanceof  JsonNull)&&  isObject)  {  [CE]  cannot  find  symbol  isObject  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]      if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }      [BUGGY]  }  else  if(!(o  instanceof  JsonNull)&&  isObject)  {  [BUGGY]      return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	replace	}  else  if(!(o  instanceof  JsonNull)&&  isObject)  {	  }    else    if(!(o    instanceof    JsonNull))    {    	non-compiled	[CE]  cannot  find  symbol  isObject	68	None	replace
235	[BUG]  [BUGGY]  [FE]  ArrayIndexOutOfBoundsException  [FE]      ArrayIndexOutOfBoundsException    [CONTEXT]      if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }      [BUGGY]  }  else  if(!(o  instanceof  JsonNull)&&!(o  instanceof  JsonNull))  {  [BUGGY]      return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	add	}  else  if(!(o  instanceof  JsonNull)&&!(o  instanceof  JsonNull))  {	  }    else    if(!(o    instanceof    JsonNull))    {    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	68	2	replace
236	[BUG]  [BUGGY]  }  else  if(!(o  instanceof  JsonNull)&&!(o  instanceof  JsonNull))  {  [FE]  ArrayIndexOutOfBoundsException  [FE]      ArrayIndexOutOfBoundsException    [CONTEXT]      if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }      [BUGGY]  }  else  if(!(o  instanceof  JsonNull)&&!(o  instanceof  JsonNull))  {  [BUGGY]      return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	replace	}  else  if(!(o  instanceof  JsonNull)&&!(o  instanceof  JsonNull))  {	  }    else    if(!(o    instanceof    JsonNull))    {    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	68	2	replace
237	[BUG]  [BUGGY]  [FE]  ArrayIndexOutOfBoundsException  [FE]        ArrayIndexOutOfBoundsException    [CONTEXT]      if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }      [BUGGY]  }  else  if(!(o  instanceof  JsonNull)||!(o  instanceof  JsonNull))  {  [BUGGY]      return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	add	}  else  if(!(o  instanceof  JsonNull)||!(o  instanceof  JsonNull))  {	  }    else    if(!(o    instanceof    JsonNull))    {    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	68	2	replace
238	[BUG]  [BUGGY]  }  else  if(!(o  instanceof  JsonNull)||!(o  instanceof  JsonNull))  {  [FE]  ArrayIndexOutOfBoundsException  [FE]        ArrayIndexOutOfBoundsException    [CONTEXT]      if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }      [BUGGY]  }  else  if(!(o  instanceof  JsonNull)||!(o  instanceof  JsonNull))  {  [BUGGY]      return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	replace	}  else  if(!(o  instanceof  JsonNull)||!(o  instanceof  JsonNull))  {	  }    else    if(!(o    instanceof    JsonNull))    {    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	68	2	replace
239	[BUG]  [BUGGY]  [FE]  ArrayIndexOutOfBoundsException  [FE]          ArrayIndexOutOfBoundsException    [CONTEXT]      if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }      [BUGGY]  }  else  if(!(o  instanceof  JsonNull  ||  o  instanceof  JsonNull))  {  [BUGGY]      return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	add	}  else  if(!(o  instanceof  JsonNull  ||  o  instanceof  JsonNull))  {	  }    else    if(!(o    instanceof    JsonNull))    {    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	68	2	replace
240	[BUG]  [BUGGY]  }  else  if(!(o  instanceof  JsonNull  ||  o  instanceof  JsonNull))  {  [FE]  ArrayIndexOutOfBoundsException  [FE]          ArrayIndexOutOfBoundsException    [CONTEXT]      if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }      [BUGGY]  }  else  if(!(o  instanceof  JsonNull  ||  o  instanceof  JsonNull))  {  [BUGGY]      return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	replace	}  else  if(!(o  instanceof  JsonNull  ||  o  instanceof  JsonNull))  {	  }    else    if(!(o    instanceof    JsonNull))    {    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	68	2	replace
241	[BUG]  [BUGGY]  }  else  if(o  instanceof  JsonObject  &&  o  instanceof  JsonArray)  {  }  else  if(o  instanceof  JsonObject  &&  o  instanceof  JsonArray)  {  [CE]  missing  return  statement  [FE]    AssertionError    [CONTEXT]      if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }      [BUGGY]  }  else  if(o  instanceof  JsonObject  &&  o  instanceof  JsonArray)  {  }  else  if(o  instanceof  JsonObject  &&  o  instanceof  JsonArray)  {  [BUGGY]      return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	replace	}    else    if(o    instanceof    JsonObject    &&    o    instanceof    JsonArray)    {    }  else  if(o  instanceof  JsonObject  &&  o  instanceof  JsonArray)  {	  	non-compiled	[CE]  missing  return  statement	41	None	add
242	[BUG]  [BUGGY]  }  else  if(o  instanceof  JsonObject  &&  o  instanceof  JsonArray)  {  }  else  if(o  instanceof  JsonObject  &&  o  instanceof  JsonArray)  <  return  JsonToken.BEGIN_OBJECT;  [CE]  illegal  start  of  type  [FE]      AssertionError    [CONTEXT]      if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }      [BUGGY]  }  else  if(o  instanceof  JsonObject  &&  o  instanceof  JsonArray)  {  }  else  if(o  instanceof  JsonObject  &&  o  instanceof  JsonArray)  <  return  JsonToken.BEGIN_OBJECT;  [BUGGY]      return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	replace	}    else    if(o    instanceof    JsonObject    &&    o    instanceof    JsonArray)    {    }  else  if(o  instanceof  JsonObject  &&  o  instanceof  JsonArray)  <  return  JsonToken.BEGIN_OBJECT;	  	non-compiled	[CE]  illegal  start  of  type	41	None	add
243	[BUG]  [BUGGY]  }  else  if(o  instanceof  JsonObject  &&  o  instanceof  JsonArray)  {  else  if(o  instanceof  JsonObject  &&  o  instanceof  JsonArray)  {  [CE]  'else'  without  'if'  [FE]        AssertionError    [CONTEXT]      if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }      [BUGGY]  }  else  if(o  instanceof  JsonObject  &&  o  instanceof  JsonArray)  {  else  if(o  instanceof  JsonObject  &&  o  instanceof  JsonArray)  {  [BUGGY]      return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	replace	}    else    if(o    instanceof    JsonObject    &&    o    instanceof    JsonArray)    {    else  if(o  instanceof  JsonObject  &&  o  instanceof  JsonArray)  {	  	non-compiled	[CE]  'else'  without  'if'	41	None	add
244	[BUG]  [BUGGY]  }  else  if(o  instanceof  JsonObject  &&  o  instanceof  JsonArray)  {  }  else  if(o  instanceof  JsonObject  &&  o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_OBJECT;  }  else  if(o  instanceof  JsonObject  &&  o  instanceof  JsonArray)  {  [CE]  missing  return  statement  [FE]          AssertionError    [CONTEXT]      if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }      [BUGGY]  }  else  if(o  instanceof  JsonObject  &&  o  instanceof  JsonArray)  {  }  else  if(o  instanceof  JsonObject  &&  o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_OBJECT;  }  else  if(o  instanceof  JsonObject  &&  o  instanceof  JsonArray)  {  [BUGGY]      return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	replace	}    else    if(o    instanceof    JsonObject    &&    o    instanceof    JsonArray)    {    }  else  if(o  instanceof  JsonObject  &&  o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_OBJECT;  }  else  if(o  instanceof  JsonObject  &&  o  instanceof  JsonArray)  {	  	non-compiled	[CE]  missing  return  statement	41	None	add
245	[BUG]  [BUGGY]  }  else  if(o  instanceof  JsonObject  &&  o  instanceof  JsonArray)  {  }  else  if(o  instanceof  JsonObject  ||  o  instanceof  JsonArray)  {  [CE]  missing  return  statement  [FE]            AssertionError    [CONTEXT]      if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }      [BUGGY]  }  else  if(o  instanceof  JsonObject  &&  o  instanceof  JsonArray)  {  }  else  if(o  instanceof  JsonObject  ||  o  instanceof  JsonArray)  {  [BUGGY]      return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	replace	}    else    if(o    instanceof    JsonObject    &&    o    instanceof    JsonArray)    {    }  else  if(o  instanceof  JsonObject  ||  o  instanceof  JsonArray)  {	  	non-compiled	[CE]  missing  return  statement	41	None	add
246	[BUG]  [BUGGY]  }  else  if(o  instanceof  JsonObject  &&  o  instanceof  JsonArray)  {  }  else  if(o  instanceof  JsonObject  &&  o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_OBJECT;  }  else  if(o  instanceof  JsonObject)  {  [CE]  missing  return  statement  [FE]              AssertionError    [CONTEXT]      if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }      [BUGGY]  }  else  if(o  instanceof  JsonObject  &&  o  instanceof  JsonArray)  {  }  else  if(o  instanceof  JsonObject  &&  o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_OBJECT;  }  else  if(o  instanceof  JsonObject)  {  [BUGGY]      return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	replace	}    else    if(o    instanceof    JsonObject    &&    o    instanceof    JsonArray)    {    }  else  if(o  instanceof  JsonObject  &&  o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_OBJECT;  }  else  if(o  instanceof  JsonObject)  {	  	non-compiled	[CE]  missing  return  statement	41	None	add
247	[BUG]  [BUGGY]  }  else  if(o  instanceof  JsonObject  &&  o  instanceof  JsonArray)  {  }  else  if(o  instanceof  JsonObject  &&  o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_OBJECT;  }  else  if(o  instanceof  JsonObject  ||  o  instanceof  JsonArray)  {  [CE]  missing  return  statement  [FE]                AssertionError    [CONTEXT]      if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }      [BUGGY]  }  else  if(o  instanceof  JsonObject  &&  o  instanceof  JsonArray)  {  }  else  if(o  instanceof  JsonObject  &&  o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_OBJECT;  }  else  if(o  instanceof  JsonObject  ||  o  instanceof  JsonArray)  {  [BUGGY]      return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	replace	}    else    if(o    instanceof    JsonObject    &&    o    instanceof    JsonArray)    {    }  else  if(o  instanceof  JsonObject  &&  o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_OBJECT;  }  else  if(o  instanceof  JsonObject  ||  o  instanceof  JsonArray)  {	  	non-compiled	[CE]  missing  return  statement	41	None	add
248	[BUG]  [BUGGY]  }  else  if(o  instanceof  JsonObject  &&  o  instanceof  JsonArray)  {  }  else  if(o  instanceof  JsonObject  &&  o  instanceof  JsonArray)  <  return  JsonToken.BEGIN_OBJECT;  }  else  if(o  instanceof  JsonObject  &&  o  instanceof  JsonArray)  {  [CE]  illegal  start  of  type  [FE]                  AssertionError    [CONTEXT]      if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }      [BUGGY]  }  else  if(o  instanceof  JsonObject  &&  o  instanceof  JsonArray)  {  }  else  if(o  instanceof  JsonObject  &&  o  instanceof  JsonArray)  <  return  JsonToken.BEGIN_OBJECT;  }  else  if(o  instanceof  JsonObject  &&  o  instanceof  JsonArray)  {  [BUGGY]      return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	replace	}    else    if(o    instanceof    JsonObject    &&    o    instanceof    JsonArray)    {    }  else  if(o  instanceof  JsonObject  &&  o  instanceof  JsonArray)  <  return  JsonToken.BEGIN_OBJECT;  }  else  if(o  instanceof  JsonObject  &&  o  instanceof  JsonArray)  {	  	non-compiled	[CE]  illegal  start  of  type	41	None	add
249	[BUG]  [BUGGY]  }  else  if(o  instanceof  JsonPrimitive)  {  }  else  if(o  instanceof  JsonPrimitive)  {  return  JsonToken.NUMBER_OBJECT;  }  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]      if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }      [BUGGY]  }  else  if(o  instanceof  JsonPrimitive)  {  }  else  if(o  instanceof  JsonPrimitive)  {  return  JsonToken.NUMBER_OBJECT;  }  [BUGGY]      return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	replace	}  else  if(o  instanceof  JsonPrimitive)  {  }  else  if(o  instanceof  JsonPrimitive)  {  return  JsonToken.NUMBER_OBJECT;  }	  }    else    if(o    instanceof    JsonArray)    {    }    else    if(o    instanceof    JsonArray)    <    return    JsonToken.NUMBER_OBJECT;    	non-compiled	[CE]  illegal  start  of  type	103	None	replace
250	[BUG]  [BUGGY]  }  else  if(o  instanceof  JsonNull)  {  }  else  if(o  instanceof  JsonNull)  {  return  JsonToken.NUMBER_OBJECT;  }  [CE]  illegal  start  of  type  [FE]                    AssertionError      [CONTEXT]      if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }      [BUGGY]  }  else  if(o  instanceof  JsonNull)  {  }  else  if(o  instanceof  JsonNull)  {  return  JsonToken.NUMBER_OBJECT;  }  [BUGGY]      return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	replace	}  else  if(o  instanceof  JsonNull)  {  }  else  if(o  instanceof  JsonNull)  {  return  JsonToken.NUMBER_OBJECT;  }	  }    else    if(o    instanceof    JsonArray)    {    }    else    if(o    instanceof    JsonArray)    <    return    JsonToken.NUMBER_OBJECT;    	non-compiled	[CE]  illegal  start  of  type	103	None	replace
251	[BUG]  [BUGGY]  }  else  if(o  instanceof  String)  {  }  else  if(o  instanceof  JsonString)  {  return  JsonToken.NUMBER_OBJECT;  }  [CE]  illegal  start  of  type  [FE]                      AssertionError      [CONTEXT]      if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }      [BUGGY]  }  else  if(o  instanceof  String)  {  }  else  if(o  instanceof  JsonString)  {  return  JsonToken.NUMBER_OBJECT;  }  [BUGGY]      return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	replace	}  else  if(o  instanceof  String)  {  }  else  if(o  instanceof  JsonString)  {  return  JsonToken.NUMBER_OBJECT;  }	  }    else    if(o    instanceof    JsonArray)    {    }    else    if(o    instanceof    JsonArray)    <    return    JsonToken.NUMBER_OBJECT;    	non-compiled	[CE]  illegal  start  of  type	103	None	replace
252	[BUG]  [BUGGY]  }  else  if(o  instanceof  String)  {  }  else  if(o  instanceof  JsonArray)  {  return  JsonToken.NUMBER_OBJECT;  }  [CE]  illegal  start  of  type  [FE]                        AssertionError      [CONTEXT]      if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }      [BUGGY]  }  else  if(o  instanceof  String)  {  }  else  if(o  instanceof  JsonArray)  {  return  JsonToken.NUMBER_OBJECT;  }  [BUGGY]      return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	replace	}  else  if(o  instanceof  String)  {  }  else  if(o  instanceof  JsonArray)  {  return  JsonToken.NUMBER_OBJECT;  }	  }    else    if(o    instanceof    JsonArray)    {    }    else    if(o    instanceof    JsonArray)    <    return    JsonToken.NUMBER_OBJECT;    	non-compiled	[CE]  illegal  start  of  type	103	None	replace
253	[BUG]  [BUGGY]  }  else  if(o  instanceof  JsonPrimitive)  {  }  else  if(o  instanceof  String)  {  return  JsonToken.NUMBER_OBJECT;  }  [CE]  illegal  start  of  type  [FE]                          AssertionError      [CONTEXT]      if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }      [BUGGY]  }  else  if(o  instanceof  JsonPrimitive)  {  }  else  if(o  instanceof  String)  {  return  JsonToken.NUMBER_OBJECT;  }  [BUGGY]      return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	replace	}  else  if(o  instanceof  JsonPrimitive)  {  }  else  if(o  instanceof  String)  {  return  JsonToken.NUMBER_OBJECT;  }	  }    else    if(o    instanceof    JsonArray)    {    }    else    if(o    instanceof    JsonArray)    <    return    JsonToken.NUMBER_OBJECT;    	non-compiled	[CE]  illegal  start  of  type	103	None	replace
254	[BUG]  [BUGGY]  }  else  if(o  instanceof  JsonPrimitive)  {  }  else  if(o  instanceof  Number)  {  return  JsonToken.NUMBER_OBJECT;  }  [CE]  illegal  start  of  type  [FE]                            AssertionError      [CONTEXT]      if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }      [BUGGY]  }  else  if(o  instanceof  JsonPrimitive)  {  }  else  if(o  instanceof  Number)  {  return  JsonToken.NUMBER_OBJECT;  }  [BUGGY]      return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	replace	}  else  if(o  instanceof  JsonPrimitive)  {  }  else  if(o  instanceof  Number)  {  return  JsonToken.NUMBER_OBJECT;  }	  }    else    if(o    instanceof    JsonArray)    {    }    else    if(o    instanceof    JsonArray)    <    return    JsonToken.NUMBER_OBJECT;    	non-compiled	[CE]  illegal  start  of  type	103	None	replace
255	[BUG]  [BUGGY]  }    else    if(o    instanceof    JsonArray)    {    return  JsonToken.BEGIN_OBJECT;  }  else  if(o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_OBJECT;  }  else  if(o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_OBJECT;  }  [CE]  illegal  start  of  type  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]      if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }      [BUGGY]  }    else    if(o    instanceof    JsonArray)    {    return  JsonToken.BEGIN_OBJECT;  }  else  if(o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_OBJECT;  }  else  if(o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_OBJECT;  }  [BUGGY]      return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	replace	}        else        if(o        instanceof        JsonArray)        {        return    JsonToken.BEGIN_OBJECT;    }  else  if(o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_OBJECT;  }  else  if(o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_OBJECT;  }	  	non-compiled	[CE]  illegal  start  of  type	171	None	add
256	[BUG]  [BUGGY]  }    else    if(o    instanceof    JsonArray)    {    return  JsonToken.BEGIN_OBJECT;  }  else  if(o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_OBJECT;  }  [CE]  illegal  start  of  type  [FE]      ArrayIndexOutOfBoundsException    [CONTEXT]      if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }      [BUGGY]  }    else    if(o    instanceof    JsonArray)    {    return  JsonToken.BEGIN_OBJECT;  }  else  if(o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_OBJECT;  }  [BUGGY]      return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	replace	}        else        if(o        instanceof        JsonArray)        {        return    JsonToken.BEGIN_OBJECT;    }  else  if(o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_OBJECT;  }	  	non-compiled	[CE]  illegal  start  of  type	171	None	add
257	[BUG]  [BUGGY]  }    else    if(o    instanceof    JsonArray)    {    return  JsonToken.BEGIN_OBJECT;  }  else  if(o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_OBJECT;  }  else  if(o  instanceof  JsonArray)  {  return  JsonToken.END_OBJECT;  }  [CE]  illegal  start  of  type  [FE]        ArrayIndexOutOfBoundsException    [CONTEXT]      if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }      [BUGGY]  }    else    if(o    instanceof    JsonArray)    {    return  JsonToken.BEGIN_OBJECT;  }  else  if(o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_OBJECT;  }  else  if(o  instanceof  JsonArray)  {  return  JsonToken.END_OBJECT;  }  [BUGGY]      return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	replace	}        else        if(o        instanceof        JsonArray)        {        return    JsonToken.BEGIN_OBJECT;    }  else  if(o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_OBJECT;  }  else  if(o  instanceof  JsonArray)  {  return  JsonToken.END_OBJECT;  }	  	non-compiled	[CE]  illegal  start  of  type	171	None	add
258	[BUG]  [BUGGY]  }    else    if(o    instanceof    JsonArray)    {    return  JsonToken.BEGIN_OBJECT;  }  else  if(o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_OBJECT;  }  else  if(o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  [CE]  illegal  start  of  type  [FE]          ArrayIndexOutOfBoundsException    [CONTEXT]      if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }      [BUGGY]  }    else    if(o    instanceof    JsonArray)    {    return  JsonToken.BEGIN_OBJECT;  }  else  if(o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_OBJECT;  }  else  if(o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  [BUGGY]      return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	replace	}        else        if(o        instanceof        JsonArray)        {        return    JsonToken.BEGIN_OBJECT;    }  else  if(o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_OBJECT;  }  else  if(o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }	  	non-compiled	[CE]  illegal  start  of  type	171	None	add
259	[BUG]  [BUGGY]  }    else    if(o    instanceof    JsonArray)    {    return  JsonToken.BEGIN_OBJECT;  }  else  if(o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_OBJECT;  }  else  if(o  instanceof  JsonArray)  {  return  JsonToken.NAME;  }  [CE]  illegal  start  of  type  [FE]            ArrayIndexOutOfBoundsException    [CONTEXT]      if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }      [BUGGY]  }    else    if(o    instanceof    JsonArray)    {    return  JsonToken.BEGIN_OBJECT;  }  else  if(o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_OBJECT;  }  else  if(o  instanceof  JsonArray)  {  return  JsonToken.NAME;  }  [BUGGY]      return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	replace	}        else        if(o        instanceof        JsonArray)        {        return    JsonToken.BEGIN_OBJECT;    }  else  if(o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_OBJECT;  }  else  if(o  instanceof  JsonArray)  {  return  JsonToken.NAME;  }	  	non-compiled	[CE]  illegal  start  of  type	171	None	add
260	[BUG]  [BUGGY]  }    else    if(o    instanceof    JsonArray)    {    return  JsonToken.BEGIN_OBJECT;  else  if(o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_OBJECT;  }  else  if(o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_OBJECT;  }  [CE]  'else'  without  'if'  [FE]              ArrayIndexOutOfBoundsException    [CONTEXT]      if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }      [BUGGY]  }    else    if(o    instanceof    JsonArray)    {    return  JsonToken.BEGIN_OBJECT;  else  if(o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_OBJECT;  }  else  if(o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_OBJECT;  }  [BUGGY]      return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	replace	}        else        if(o        instanceof        JsonArray)        {        return    JsonToken.BEGIN_OBJECT;    else  if(o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_OBJECT;  }  else  if(o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_OBJECT;  }	  	non-compiled	[CE]  'else'  without  'if'	171	None	add
261	[BUG]  [BUGGY]  }    else    if(o    instanceof    JsonArray)    {    return  JsonToken.BEGIN_OBJECT;  }  else  if(o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_OBJECT;  }  else  if(o  instanceof  JsonArray)  {  return  JsonToken.BOOLEAN;  }  [CE]  illegal  start  of  type  [FE]                ArrayIndexOutOfBoundsException    [CONTEXT]      if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }      [BUGGY]  }    else    if(o    instanceof    JsonArray)    {    return  JsonToken.BEGIN_OBJECT;  }  else  if(o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_OBJECT;  }  else  if(o  instanceof  JsonArray)  {  return  JsonToken.BOOLEAN;  }  [BUGGY]      return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	replace	}        else        if(o        instanceof        JsonArray)        {        return    JsonToken.BEGIN_OBJECT;    }  else  if(o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_OBJECT;  }  else  if(o  instanceof  JsonArray)  {  return  JsonToken.BOOLEAN;  }	  	non-compiled	[CE]  illegal  start  of  type	171	None	add
262	[BUG]  [BUGGY]  }    else    if(o    instanceof    JsonArray)    {    return  JsonToken.BEGIN_OBJECT;  }  else  if(o  instanceof  JsonArray)  {  return  JsonToken.BOOLEAN;  }  else  if(o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_OBJECT;  }  [CE]  illegal  start  of  type  [FE]                  ArrayIndexOutOfBoundsException    [CONTEXT]      if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }      [BUGGY]  }    else    if(o    instanceof    JsonArray)    {    return  JsonToken.BEGIN_OBJECT;  }  else  if(o  instanceof  JsonArray)  {  return  JsonToken.BOOLEAN;  }  else  if(o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_OBJECT;  }  [BUGGY]      return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	replace	}        else        if(o        instanceof        JsonArray)        {        return    JsonToken.BEGIN_OBJECT;    }  else  if(o  instanceof  JsonArray)  {  return  JsonToken.BOOLEAN;  }  else  if(o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_OBJECT;  }	  	non-compiled	[CE]  illegal  start  of  type	171	None	add
263	[BUG]  [BUGGY]  }  else  if(o  instanceof  JsonObject  ||  o  instanceof  String)  {  return  JsonToken.BEGIN_OBJECT;  }  [CE]  illegal  start  of  type  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]      if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }      [BUGGY]  }  else  if(o  instanceof  JsonObject  ||  o  instanceof  String)  {  return  JsonToken.BEGIN_OBJECT;  }  [BUGGY]      return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	replace	}  else  if(o  instanceof  JsonObject  ||  o  instanceof  String)  {  return  JsonToken.BEGIN_OBJECT;  }	  }    else    if(o    instanceof    JsonObject    ||    o    instanceof    String)    {    return    JsonToken.BEGIN_OBJECT;    	non-compiled	[CE]  illegal  start  of  type	152	None	replace
264	[BUG]  [BUGGY]  }  else  if(o  instanceof  JsonArray  ||  o  instanceof  String)  {  return  JsonToken.BEGIN_OBJECT;  }  [CE]  illegal  start  of  type  [FE]      ArrayIndexOutOfBoundsException    [CONTEXT]      if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }      [BUGGY]  }  else  if(o  instanceof  JsonArray  ||  o  instanceof  String)  {  return  JsonToken.BEGIN_OBJECT;  }  [BUGGY]      return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	replace	}  else  if(o  instanceof  JsonArray  ||  o  instanceof  String)  {  return  JsonToken.BEGIN_OBJECT;  }	  }    else    if(o    instanceof    JsonObject    ||    o    instanceof    String)    {    return    JsonToken.BEGIN_OBJECT;    	non-compiled	[CE]  illegal  start  of  type	152	None	replace
265	[BUG]  [BUGGY]  }  else  if(o  instanceof  JsonObject  &&  o  instanceof  String)  {  return  JsonToken.BEGIN_OBJECT;  }  [CE]  illegal  start  of  type  [FE]        ArrayIndexOutOfBoundsException    [CONTEXT]      if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }      [BUGGY]  }  else  if(o  instanceof  JsonObject  &&  o  instanceof  String)  {  return  JsonToken.BEGIN_OBJECT;  }  [BUGGY]      return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	replace	}  else  if(o  instanceof  JsonObject  &&  o  instanceof  String)  {  return  JsonToken.BEGIN_OBJECT;  }	  }    else    if(o    instanceof    JsonObject    ||    o    instanceof    String)    {    return    JsonToken.BEGIN_OBJECT;    	non-compiled	[CE]  illegal  start  of  type	152	None	replace
266	[BUG]  [BUGGY]  }  else  if(o  instanceof  JsonString  ||  o  instanceof  JsonObject)  {  return  JsonToken.BEGIN_OBJECT;  }  [CE]  illegal  start  of  type  [FE]          ArrayIndexOutOfBoundsException    [CONTEXT]      if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }      [BUGGY]  }  else  if(o  instanceof  JsonString  ||  o  instanceof  JsonObject)  {  return  JsonToken.BEGIN_OBJECT;  }  [BUGGY]      return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	replace	}  else  if(o  instanceof  JsonString  ||  o  instanceof  JsonObject)  {  return  JsonToken.BEGIN_OBJECT;  }	  }    else    if(o    instanceof    JsonObject    ||    o    instanceof    String)    {    return    JsonToken.BEGIN_OBJECT;    	non-compiled	[CE]  illegal  start  of  type	152	None	replace
267	[BUG]  [BUGGY]  }  else  if(o  instanceof  JsonObject  ||  o  instanceof  Boolean)  {  return  JsonToken.BEGIN_OBJECT;  }  [CE]  illegal  start  of  type  [FE]            ArrayIndexOutOfBoundsException    [CONTEXT]      if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }      [BUGGY]  }  else  if(o  instanceof  JsonObject  ||  o  instanceof  Boolean)  {  return  JsonToken.BEGIN_OBJECT;  }  [BUGGY]      return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	replace	}  else  if(o  instanceof  JsonObject  ||  o  instanceof  Boolean)  {  return  JsonToken.BEGIN_OBJECT;  }	  }    else    if(o    instanceof    JsonObject    ||    o    instanceof    String)    {    return    JsonToken.BEGIN_OBJECT;    	non-compiled	[CE]  illegal  start  of  type	152	None	replace
268	[BUG]  [BUGGY]  }  else  if(!(o  instanceof  JsonPrimitive))  {  case  JsonToken.BEGIN_OBJECT:  return  JsonToken.BEGIN_OBJECT;  [CE]  orphaned  case  [FE]                ArrayIndexOutOfBoundsException      [CONTEXT]      if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }      [BUGGY]  }  else  if(!(o  instanceof  JsonPrimitive))  {  case  JsonToken.BEGIN_OBJECT:  return  JsonToken.BEGIN_OBJECT;  [BUGGY]      return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	replace	}  else  if(!(o  instanceof  JsonPrimitive))  {  case  JsonToken.BEGIN_OBJECT:  return  JsonToken.BEGIN_OBJECT;	  }    else    if(!(o    instanceof    JsonArray))    {    }    else    if(!(o    instanceof    JsonArray))    {    case    JsonToken.BEGIN_OBJECT:    return    JsonToken.BEGIN_OBJECT;    	non-compiled	[CE]  orphaned  case	219	None	replace
269	[BUG]  [BUGGY]  }  else  if(isObject)  {  case  JsonToken.BEGIN_OBJECT:  return  JsonToken.BEGIN_OBJECT;  [CE]  orphaned  case  [FE]                  ArrayIndexOutOfBoundsException      [CONTEXT]      if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }      [BUGGY]  }  else  if(isObject)  {  case  JsonToken.BEGIN_OBJECT:  return  JsonToken.BEGIN_OBJECT;  [BUGGY]      return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	replace	}  else  if(isObject)  {  case  JsonToken.BEGIN_OBJECT:  return  JsonToken.BEGIN_OBJECT;	  }    else    if(!(o    instanceof    JsonArray))    {    }    else    if(!(o    instanceof    JsonArray))    {    case    JsonToken.BEGIN_OBJECT:    return    JsonToken.BEGIN_OBJECT;    	non-compiled	[CE]  orphaned  case	219	None	replace
270	[BUG]  [BUGGY]  }  else  if(!(o  instanceof  JsonArray))  {  case  JsonToken.BEGIN_OBJECT:  return  JsonToken.BEGIN_OBJECT;  [CE]  orphaned  case  [FE]                    ArrayIndexOutOfBoundsException      [CONTEXT]      if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }      [BUGGY]  }  else  if(!(o  instanceof  JsonArray))  {  case  JsonToken.BEGIN_OBJECT:  return  JsonToken.BEGIN_OBJECT;  [BUGGY]      return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	replace	}  else  if(!(o  instanceof  JsonArray))  {  case  JsonToken.BEGIN_OBJECT:  return  JsonToken.BEGIN_OBJECT;	  }    else    if(!(o    instanceof    JsonArray))    {    }    else    if(!(o    instanceof    JsonArray))    {    case    JsonToken.BEGIN_OBJECT:    return    JsonToken.BEGIN_OBJECT;    	non-compiled	[CE]  orphaned  case	219	None	replace
271	[BUG]  [BUGGY]  }  else  if(o  instanceof  JsonPrimitive)  {  case  JsonToken.BEGIN_OBJECT:  return  JsonToken.BEGIN_OBJECT;  [CE]  orphaned  case  [FE]                      ArrayIndexOutOfBoundsException      [CONTEXT]      if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }      [BUGGY]  }  else  if(o  instanceof  JsonPrimitive)  {  case  JsonToken.BEGIN_OBJECT:  return  JsonToken.BEGIN_OBJECT;  [BUGGY]      return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	replace	}  else  if(o  instanceof  JsonPrimitive)  {  case  JsonToken.BEGIN_OBJECT:  return  JsonToken.BEGIN_OBJECT;	  }    else    if(!(o    instanceof    JsonArray))    {    }    else    if(!(o    instanceof    JsonArray))    {    case    JsonToken.BEGIN_OBJECT:    return    JsonToken.BEGIN_OBJECT;    	non-compiled	[CE]  orphaned  case	219	None	replace
272	[BUG]  [BUGGY]  }  else  if(!(o  instanceof  String))  {  case  JsonToken.BEGIN_OBJECT:  return  JsonToken.BEGIN_OBJECT;  [CE]  orphaned  case  [FE]                        ArrayIndexOutOfBoundsException      [CONTEXT]      if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }      [BUGGY]  }  else  if(!(o  instanceof  String))  {  case  JsonToken.BEGIN_OBJECT:  return  JsonToken.BEGIN_OBJECT;  [BUGGY]      return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	replace	}  else  if(!(o  instanceof  String))  {  case  JsonToken.BEGIN_OBJECT:  return  JsonToken.BEGIN_OBJECT;	  }    else    if(!(o    instanceof    JsonArray))    {    }    else    if(!(o    instanceof    JsonArray))    {    case    JsonToken.BEGIN_OBJECT:    return    JsonToken.BEGIN_OBJECT;    	non-compiled	[CE]  orphaned  case	219	None	replace
273	[BUG]  [BUGGY]  }  else  if(!(o  instanceof  JsonNull))  {  case  JsonToken.BEGIN_OBJECT:  return  JsonToken.BEGIN_OBJECT;  [CE]  orphaned  case  [FE]                          ArrayIndexOutOfBoundsException      [CONTEXT]      if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }      [BUGGY]  }  else  if(!(o  instanceof  JsonNull))  {  case  JsonToken.BEGIN_OBJECT:  return  JsonToken.BEGIN_OBJECT;  [BUGGY]      return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	replace	}  else  if(!(o  instanceof  JsonNull))  {  case  JsonToken.BEGIN_OBJECT:  return  JsonToken.BEGIN_OBJECT;	  }    else    if(!(o    instanceof    JsonArray))    {    }    else    if(!(o    instanceof    JsonArray))    {    case    JsonToken.BEGIN_OBJECT:    return    JsonToken.BEGIN_OBJECT;    	non-compiled	[CE]  orphaned  case	219	None	replace
274	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }      [BUGGY]  }  else  if(o  instanceof  JsonPrimitive  ||  o  instanceof  JsonArray)  {  [BUGGY]      return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	add	}  else  if(o  instanceof  JsonPrimitive  ||  o  instanceof  JsonArray)  {	  }    else    if(o    instanceof    JsonArray    ||    o    instanceof    JsonPrimitive)    {    	compilable	  [FE]  AssertionError  	111	2	replace
275	[BUG]  [BUGGY]  }  else  if(o  instanceof  JsonPrimitive  ||  o  instanceof  JsonArray)  {  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }      [BUGGY]  }  else  if(o  instanceof  JsonPrimitive  ||  o  instanceof  JsonArray)  {  [BUGGY]      return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	replace	}  else  if(o  instanceof  JsonPrimitive  ||  o  instanceof  JsonArray)  {	  }    else    if(o    instanceof    JsonArray    ||    o    instanceof    JsonPrimitive)    {    	compilable	  [FE]  AssertionError  	111	2	replace
276	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]                  AssertionError      [CONTEXT]      if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }      [BUGGY]  }  else  if(!(o  instanceof  JsonObject)||!(o  instanceof  JsonObject))  {  [BUGGY]      return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	add	}  else  if(!(o  instanceof  JsonObject)||!(o  instanceof  JsonObject))  {	  }    else    if(!(o    instanceof    JsonObject))    {    }    else    if(!(o    instanceof    JsonObject)    ||!(o    instanceof    JsonObject))    {    	compilable	  [FE]  AssertionError  	96	2	replace
277	[BUG]  [BUGGY]  }  else  if(!(o  instanceof  JsonObject)||!(o  instanceof  JsonObject))  {  [FE]  AssertionError  [FE]                  AssertionError      [CONTEXT]      if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }      [BUGGY]  }  else  if(!(o  instanceof  JsonObject)||!(o  instanceof  JsonObject))  {  [BUGGY]      return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	replace	}  else  if(!(o  instanceof  JsonObject)||!(o  instanceof  JsonObject))  {	  }    else    if(!(o    instanceof    JsonObject))    {    }    else    if(!(o    instanceof    JsonObject)    ||!(o    instanceof    JsonObject))    {    	compilable	  [FE]  AssertionError  	96	2	replace
278	[BUG]  [BUGGY]  }  else  if(!(o  instanceof  String)||!(o  instanceof  JsonString))  {  [CE]  cannot  find  symbol  [FE]                    AssertionError      [CONTEXT]      if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }      [BUGGY]  }  else  if(!(o  instanceof  String)||!(o  instanceof  JsonString))  {  [BUGGY]      return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	replace	}  else  if(!(o  instanceof  String)||!(o  instanceof  JsonString))  {	  }    else    if(!(o    instanceof    JsonObject))    {    }    else    if(!(o    instanceof    JsonObject)    ||!(o    instanceof    JsonObject))    {    	non-compiled	[CE]  cannot  find  symbol	96	None	replace
279	[BUG]  [BUGGY]  [FE]  ArrayIndexOutOfBoundsException  [FE]                      AssertionError      [CONTEXT]      if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }      [BUGGY]  }  else  if(!(o  instanceof  JsonPrimitive)||!(o  instanceof  JsonObject))  {  [BUGGY]      return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	add	}  else  if(!(o  instanceof  JsonPrimitive)||!(o  instanceof  JsonObject))  {	  }    else    if(!(o    instanceof    JsonObject))    {    }    else    if(!(o    instanceof    JsonObject)    ||!(o    instanceof    JsonObject))    {    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	96	2	replace
280	[BUG]  [BUGGY]  }  else  if(!(o  instanceof  JsonPrimitive)||!(o  instanceof  JsonObject))  {  [FE]  ArrayIndexOutOfBoundsException  [FE]                      AssertionError      [CONTEXT]      if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }      [BUGGY]  }  else  if(!(o  instanceof  JsonPrimitive)||!(o  instanceof  JsonObject))  {  [BUGGY]      return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	replace	}  else  if(!(o  instanceof  JsonPrimitive)||!(o  instanceof  JsonObject))  {	  }    else    if(!(o    instanceof    JsonObject))    {    }    else    if(!(o    instanceof    JsonObject)    ||!(o    instanceof    JsonObject))    {    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	96	2	replace
281	[BUG]  [BUGGY]  [FE]  ArrayIndexOutOfBoundsException  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]      if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }      [BUGGY]  }  else  if(o  instanceof  JsonObject  ||  o  instanceof  Boolean  ||  o  instanceof  Class  <?>)  {  [BUGGY]      return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	add	}  else  if(o  instanceof  JsonObject  ||  o  instanceof  Boolean  ||  o  instanceof  Class  <?>)  {	  }    else    if(o    instanceof    JsonObject    ||    o    instanceof    String    ||    o    instanceof    Class    <?>)    {    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	245	2	replace
282	[BUG]  [BUGGY]  }  else  if(o  instanceof  JsonObject  ||  o  instanceof  Boolean  ||  o  instanceof  Class  <?>)  {  [FE]  ArrayIndexOutOfBoundsException  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]      if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }      [BUGGY]  }  else  if(o  instanceof  JsonObject  ||  o  instanceof  Boolean  ||  o  instanceof  Class  <?>)  {  [BUGGY]      return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	replace	}  else  if(o  instanceof  JsonObject  ||  o  instanceof  Boolean  ||  o  instanceof  Class  <?>)  {	  }    else    if(o    instanceof    JsonObject    ||    o    instanceof    String    ||    o    instanceof    Class    <?>)    {    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	245	2	replace
283	[BUG]  [BUGGY]  [FE]  ArrayIndexOutOfBoundsException  [FE]      ArrayIndexOutOfBoundsException    [CONTEXT]      if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }      [BUGGY]  }  else  if(o  instanceof  JsonObject  ||  o  instanceof  Character  ||  o  instanceof  Class  <?>)  {  [BUGGY]      return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	add	}  else  if(o  instanceof  JsonObject  ||  o  instanceof  Character  ||  o  instanceof  Class  <?>)  {	  }    else    if(o    instanceof    JsonObject    ||    o    instanceof    String    ||    o    instanceof    Class    <?>)    {    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	245	2	replace
284	[BUG]  [BUGGY]  }  else  if(o  instanceof  JsonObject  ||  o  instanceof  Character  ||  o  instanceof  Class  <?>)  {  [FE]  ArrayIndexOutOfBoundsException  [FE]      ArrayIndexOutOfBoundsException    [CONTEXT]      if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }      [BUGGY]  }  else  if(o  instanceof  JsonObject  ||  o  instanceof  Character  ||  o  instanceof  Class  <?>)  {  [BUGGY]      return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	replace	}  else  if(o  instanceof  JsonObject  ||  o  instanceof  Character  ||  o  instanceof  Class  <?>)  {	  }    else    if(o    instanceof    JsonObject    ||    o    instanceof    String    ||    o    instanceof    Class    <?>)    {    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	245	2	replace
285	[BUG]  [BUGGY]  [FE]  ArrayIndexOutOfBoundsException  [FE]        ArrayIndexOutOfBoundsException    [CONTEXT]      if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }      [BUGGY]  }  else  if(o  instanceof  JsonObject  ||  o  instanceof  Number  ||  o  instanceof  Class  <?>)  {  [BUGGY]      return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	add	}  else  if(o  instanceof  JsonObject  ||  o  instanceof  Number  ||  o  instanceof  Class  <?>)  {	  }    else    if(o    instanceof    JsonObject    ||    o    instanceof    String    ||    o    instanceof    Class    <?>)    {    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	245	2	replace
286	[BUG]  [BUGGY]  }  else  if(o  instanceof  JsonObject  ||  o  instanceof  Number  ||  o  instanceof  Class  <?>)  {  [FE]  ArrayIndexOutOfBoundsException  [FE]        ArrayIndexOutOfBoundsException    [CONTEXT]      if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }      [BUGGY]  }  else  if(o  instanceof  JsonObject  ||  o  instanceof  Number  ||  o  instanceof  Class  <?>)  {  [BUGGY]      return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	replace	}  else  if(o  instanceof  JsonObject  ||  o  instanceof  Number  ||  o  instanceof  Class  <?>)  {	  }    else    if(o    instanceof    JsonObject    ||    o    instanceof    String    ||    o    instanceof    Class    <?>)    {    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	245	2	replace
287	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]          ArrayIndexOutOfBoundsException    [CONTEXT]      if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }      [BUGGY]  }  else  if(o  instanceof  JsonObject  &&  o  instanceof  String  ||  o  instanceof  Class  <?>)  {  [BUGGY]      return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	add	}  else  if(o  instanceof  JsonObject  &&  o  instanceof  String  ||  o  instanceof  Class  <?>)  {	  }    else    if(o    instanceof    JsonObject    ||    o    instanceof    String    ||    o    instanceof    Class    <?>)    {    	compilable	  [FE]  AssertionError  	245	2	replace
288	[BUG]  [BUGGY]  }  else  if(o  instanceof  JsonObject  &&  o  instanceof  String  ||  o  instanceof  Class  <?>)  {  [FE]  AssertionError  [FE]          ArrayIndexOutOfBoundsException    [CONTEXT]      if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }      [BUGGY]  }  else  if(o  instanceof  JsonObject  &&  o  instanceof  String  ||  o  instanceof  Class  <?>)  {  [BUGGY]      return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	replace	}  else  if(o  instanceof  JsonObject  &&  o  instanceof  String  ||  o  instanceof  Class  <?>)  {	  }    else    if(o    instanceof    JsonObject    ||    o    instanceof    String    ||    o    instanceof    Class    <?>)    {    	compilable	  [FE]  AssertionError  	245	2	replace
289	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]            ArrayIndexOutOfBoundsException    [CONTEXT]      if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }      [BUGGY]  }  else  if(o  instanceof  JsonArray  ||  o  instanceof  String  ||  o  instanceof  Class  <?>)  {  [BUGGY]      return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	add	}  else  if(o  instanceof  JsonArray  ||  o  instanceof  String  ||  o  instanceof  Class  <?>)  {	  }    else    if(o    instanceof    JsonObject    ||    o    instanceof    String    ||    o    instanceof    Class    <?>)    {    	compilable	  [FE]  AssertionError  	245	2	replace
290	[BUG]  [BUGGY]  }  else  if(o  instanceof  JsonArray  ||  o  instanceof  String  ||  o  instanceof  Class  <?>)  {  [FE]  AssertionError  [FE]            ArrayIndexOutOfBoundsException    [CONTEXT]      if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }      [BUGGY]  }  else  if(o  instanceof  JsonArray  ||  o  instanceof  String  ||  o  instanceof  Class  <?>)  {  [BUGGY]      return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	replace	}  else  if(o  instanceof  JsonArray  ||  o  instanceof  String  ||  o  instanceof  Class  <?>)  {	  }    else    if(o    instanceof    JsonObject    ||    o    instanceof    String    ||    o    instanceof    Class    <?>)    {    	compilable	  [FE]  AssertionError  	245	2	replace
291	[BUG]  [BUGGY]  }  else  if(o  instanceof  JsonNull  ||!(o  instanceof  JsonNull  &&!((  JsonNull)o).getClass().isAssignableFrom(JsonNull.class))  {  [CE]  ')'  expected  [FE]        AssertionError      [CONTEXT]      if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }      [BUGGY]  }  else  if(o  instanceof  JsonNull  ||!(o  instanceof  JsonNull  &&!((  JsonNull)o).getClass().isAssignableFrom(JsonNull.class))  {  [BUGGY]      return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	replace	}  else  if(o  instanceof  JsonNull  ||!(o  instanceof  JsonNull  &&!((  JsonNull)o).getClass().isAssignableFrom(JsonNull.class))  {	  }    else    if(o    instanceof    JsonNull    ||!(o    instanceof    JsonNull    &&!(o    instanceof    JsonNull    &&!((    JsonNull)o).getClass().isArray()))    {    	non-compiled	[CE]  ')'  expected	235	None	replace
292	[BUG]  [BUGGY]  }  else  if(o  instanceof  JsonNull  ||!(o  instanceof  JsonNull  &&!((  JsonNull)o).getClass().isAssignableFrom(JsonToken.BEGIN_OBJECT))  {  [CE]  ')'  expected  [FE]          AssertionError      [CONTEXT]      if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }      [BUGGY]  }  else  if(o  instanceof  JsonNull  ||!(o  instanceof  JsonNull  &&!((  JsonNull)o).getClass().isAssignableFrom(JsonToken.BEGIN_OBJECT))  {  [BUGGY]      return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	replace	}  else  if(o  instanceof  JsonNull  ||!(o  instanceof  JsonNull  &&!((  JsonNull)o).getClass().isAssignableFrom(JsonToken.BEGIN_OBJECT))  {	  }    else    if(o    instanceof    JsonNull    ||!(o    instanceof    JsonNull    &&!(o    instanceof    JsonNull    &&!((    JsonNull)o).getClass().isArray()))    {    	non-compiled	[CE]  ')'  expected	235	None	replace
293	[BUG]  [BUGGY]  }  else  if(o  instanceof  JsonNull  ||!(o  instanceof  JsonNull  &&!((  JsonNull)o).getClass().isArray())  {  [CE]  ')'  expected  [FE]            AssertionError      [CONTEXT]      if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }      [BUGGY]  }  else  if(o  instanceof  JsonNull  ||!(o  instanceof  JsonNull  &&!((  JsonNull)o).getClass().isArray())  {  [BUGGY]      return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	replace	}  else  if(o  instanceof  JsonNull  ||!(o  instanceof  JsonNull  &&!((  JsonNull)o).getClass().isArray())  {	  }    else    if(o    instanceof    JsonNull    ||!(o    instanceof    JsonNull    &&!(o    instanceof    JsonNull    &&!((    JsonNull)o).getClass().isArray()))    {    	non-compiled	[CE]  ')'  expected	235	None	replace
294	[BUG]  [BUGGY]  }  else  if(o  instanceof  JsonNull  ||!(o  instanceof  JsonNull  &&!((  JsonNull)o).getClass().isAssignmentOp())  {  [CE]  ')'  expected  [FE]              AssertionError      [CONTEXT]      if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }      [BUGGY]  }  else  if(o  instanceof  JsonNull  ||!(o  instanceof  JsonNull  &&!((  JsonNull)o).getClass().isAssignmentOp())  {  [BUGGY]      return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	replace	}  else  if(o  instanceof  JsonNull  ||!(o  instanceof  JsonNull  &&!((  JsonNull)o).getClass().isAssignmentOp())  {	  }    else    if(o    instanceof    JsonNull    ||!(o    instanceof    JsonNull    &&!(o    instanceof    JsonNull    &&!((    JsonNull)o).getClass().isArray()))    {    	non-compiled	[CE]  ')'  expected	235	None	replace
295	[BUG]  [BUGGY]  }  else  if(o  instanceof  JsonNull  ||!(o  instanceof  JsonNull  &&!((  JsonNull)o).getClass().isAssignableFrom(JsonToken.END_OBJECT))  {  [CE]  ')'  expected  [FE]                AssertionError      [CONTEXT]      if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }      [BUGGY]  }  else  if(o  instanceof  JsonNull  ||!(o  instanceof  JsonNull  &&!((  JsonNull)o).getClass().isAssignableFrom(JsonToken.END_OBJECT))  {  [BUGGY]      return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	replace	}  else  if(o  instanceof  JsonNull  ||!(o  instanceof  JsonNull  &&!((  JsonNull)o).getClass().isAssignableFrom(JsonToken.END_OBJECT))  {	  }    else    if(o    instanceof    JsonNull    ||!(o    instanceof    JsonNull    &&!(o    instanceof    JsonNull    &&!((    JsonNull)o).getClass().isArray()))    {    	non-compiled	[CE]  ')'  expected	235	None	replace
296	[BUG]  [BUGGY]  }  else  if(o  instanceof  JsonNull  ||!(o  instanceof  JsonNull  &&!((  JsonNull)o).getClass().isArray()  ||  isObject)  {  [CE]  ')'  expected  [FE]                  AssertionError      [CONTEXT]      if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }      [BUGGY]  }  else  if(o  instanceof  JsonNull  ||!(o  instanceof  JsonNull  &&!((  JsonNull)o).getClass().isArray()  ||  isObject)  {  [BUGGY]      return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	replace	}  else  if(o  instanceof  JsonNull  ||!(o  instanceof  JsonNull  &&!((  JsonNull)o).getClass().isArray()  ||  isObject)  {	  }    else    if(o    instanceof    JsonNull    ||!(o    instanceof    JsonNull    &&!(o    instanceof    JsonNull    &&!((    JsonNull)o).getClass().isArray()))    {    	non-compiled	[CE]  ')'  expected	235	None	replace
297	[BUG]  [BUGGY]  }  else  if(o  instanceof  JsonNull  ||!(o  instanceof  JsonNull  &&!((  JsonNull)o).getClass().isAssignableFrom(JsonToken.START_OBJECT))  {  [CE]  ')'  expected  [FE]                    AssertionError      [CONTEXT]      if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }      [BUGGY]  }  else  if(o  instanceof  JsonNull  ||!(o  instanceof  JsonNull  &&!((  JsonNull)o).getClass().isAssignableFrom(JsonToken.START_OBJECT))  {  [BUGGY]      return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	replace	}  else  if(o  instanceof  JsonNull  ||!(o  instanceof  JsonNull  &&!((  JsonNull)o).getClass().isAssignableFrom(JsonToken.START_OBJECT))  {	  }    else    if(o    instanceof    JsonNull    ||!(o    instanceof    JsonNull    &&!(o    instanceof    JsonNull    &&!((    JsonNull)o).getClass().isArray()))    {    	non-compiled	[CE]  ')'  expected	235	None	replace
298	[BUG]  [BUGGY]  }  else  if(o  instanceof  JsonObject  ||  o  instanceof  JsonLiteral)  {  [CE]  cannot  find  symbol  [FE]          ArrayIndexOutOfBoundsException      [CONTEXT]      if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }      [BUGGY]  }  else  if(o  instanceof  JsonObject  ||  o  instanceof  JsonLiteral)  {  [BUGGY]      return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	replace	}  else  if(o  instanceof  JsonObject  ||  o  instanceof  JsonLiteral)  {	  }    else    if(o    instanceof    JsonObject    ||    o    instanceof    JsonPrimitive)    {    else    if(o    instanceof    JsonObject    ||    o    instanceof    JsonPrimitive)    {    	non-compiled	[CE]  cannot  find  symbol	57	None	replace
299	[BUG]  [BUGGY]  }  else  if(o  instanceof  JsonObject  <  1  ||  isObject)  {  [CE]  illegal  start  of  type  [FE]                    ArrayIndexOutOfBoundsException      [CONTEXT]      if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }      [BUGGY]  }  else  if(o  instanceof  JsonObject  <  1  ||  isObject)  {  [BUGGY]      return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	replace	}  else  if(o  instanceof  JsonObject  <  1  ||  isObject)  {	  }    else    if(o    instanceof    JsonObject    <    1)    {    	non-compiled	[CE]  illegal  start  of  type	119	None	replace
300	[BUG]  [BUGGY]  }  else  if(o  instanceof  JsonObject  <  0)  {  [CE]  illegal  start  of  type  [FE]                      ArrayIndexOutOfBoundsException      [CONTEXT]      if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }      [BUGGY]  }  else  if(o  instanceof  JsonObject  <  0)  {  [BUGGY]      return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	replace	}  else  if(o  instanceof  JsonObject  <  0)  {	  }    else    if(o    instanceof    JsonObject    <    1)    {    	non-compiled	[CE]  illegal  start  of  type	119	None	replace
301	[BUG]  [BUGGY]  }  else  if(o  instanceof  JsonArray  <  1)  {  [CE]  illegal  start  of  type  [FE]                        ArrayIndexOutOfBoundsException      [CONTEXT]      if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }      [BUGGY]  }  else  if(o  instanceof  JsonArray  <  1)  {  [BUGGY]      return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	replace	}  else  if(o  instanceof  JsonArray  <  1)  {	  }    else    if(o    instanceof    JsonObject    <    1)    {    	non-compiled	[CE]  illegal  start  of  type	119	None	replace
302	[BUG]  [BUGGY]  [FE]  ArrayIndexOutOfBoundsException  [FE]                ArrayIndexOutOfBoundsException      [CONTEXT]      if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }      [BUGGY]  }  else  if(!(o  instanceof  JsonPrimitive)&&!(o  instanceof  JsonPrimitive))  {  [BUGGY]      return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	add	}  else  if(!(o  instanceof  JsonPrimitive)&&!(o  instanceof  JsonPrimitive))  {	  }    else    if(!(o    instanceof    JsonArray))    {    }    else    if(!(o    instanceof    JsonArray)&&!(o    instanceof    JsonArray))    {    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	87	2	replace
303	[BUG]  [BUGGY]  }  else  if(!(o  instanceof  JsonPrimitive)&&!(o  instanceof  JsonPrimitive))  {  [FE]  ArrayIndexOutOfBoundsException  [FE]                ArrayIndexOutOfBoundsException      [CONTEXT]      if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }      [BUGGY]  }  else  if(!(o  instanceof  JsonPrimitive)&&!(o  instanceof  JsonPrimitive))  {  [BUGGY]      return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	replace	}  else  if(!(o  instanceof  JsonPrimitive)&&!(o  instanceof  JsonPrimitive))  {	  }    else    if(!(o    instanceof    JsonArray))    {    }    else    if(!(o    instanceof    JsonArray)&&!(o    instanceof    JsonArray))    {    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	87	2	replace
304	[BUG]  [BUGGY]  [FE]  ArrayIndexOutOfBoundsException  [FE]                  ArrayIndexOutOfBoundsException      [CONTEXT]      if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }      [BUGGY]  }  else  if(!(o  instanceof  String)&&!(o  instanceof  JsonArray))  {  [BUGGY]      return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	add	}  else  if(!(o  instanceof  String)&&!(o  instanceof  JsonArray))  {	  }    else    if(!(o    instanceof    JsonArray))    {    }    else    if(!(o    instanceof    JsonArray)&&!(o    instanceof    JsonArray))    {    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	87	2	replace
305	[BUG]  [BUGGY]  }  else  if(!(o  instanceof  String)&&!(o  instanceof  JsonArray))  {  [FE]  ArrayIndexOutOfBoundsException  [FE]                  ArrayIndexOutOfBoundsException      [CONTEXT]      if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }      [BUGGY]  }  else  if(!(o  instanceof  String)&&!(o  instanceof  JsonArray))  {  [BUGGY]      return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	replace	}  else  if(!(o  instanceof  String)&&!(o  instanceof  JsonArray))  {	  }    else    if(!(o    instanceof    JsonArray))    {    }    else    if(!(o    instanceof    JsonArray)&&!(o    instanceof    JsonArray))    {    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	87	2	replace
306	[BUG]  [BUGGY]  [FE]  ArrayIndexOutOfBoundsException  [FE]                    ArrayIndexOutOfBoundsException      [CONTEXT]      if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }      [BUGGY]  }  else  if(!(o  instanceof  JsonArray)&&!(o  instanceof  JsonArray))  {  [BUGGY]      return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	add	}  else  if(!(o  instanceof  JsonArray)&&!(o  instanceof  JsonArray))  {	  }    else    if(!(o    instanceof    JsonArray))    {    }    else    if(!(o    instanceof    JsonArray)&&!(o    instanceof    JsonArray))    {    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	87	2	replace
307	[BUG]  [BUGGY]  }  else  if(!(o  instanceof  JsonArray)&&!(o  instanceof  JsonArray))  {  [FE]  ArrayIndexOutOfBoundsException  [FE]                    ArrayIndexOutOfBoundsException      [CONTEXT]      if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }      [BUGGY]  }  else  if(!(o  instanceof  JsonArray)&&!(o  instanceof  JsonArray))  {  [BUGGY]      return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	replace	}  else  if(!(o  instanceof  JsonArray)&&!(o  instanceof  JsonArray))  {	  }    else    if(!(o    instanceof    JsonArray))    {    }    else    if(!(o    instanceof    JsonArray)&&!(o    instanceof    JsonArray))    {    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	87	2	replace
308	[BUG]  [BUGGY]  }  else  if(!(o  instanceof  String)&&!(o  instanceof  JsonString))  {  [CE]  cannot  find  symbol  [FE]                      ArrayIndexOutOfBoundsException      [CONTEXT]      if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }      [BUGGY]  }  else  if(!(o  instanceof  String)&&!(o  instanceof  JsonString))  {  [BUGGY]      return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	replace	}  else  if(!(o  instanceof  String)&&!(o  instanceof  JsonString))  {	  }    else    if(!(o    instanceof    JsonArray))    {    }    else    if(!(o    instanceof    JsonArray)&&!(o    instanceof    JsonArray))    {    	non-compiled	[CE]  cannot  find  symbol	87	None	replace
309	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]                        ArrayIndexOutOfBoundsException      [CONTEXT]      if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }      [BUGGY]  }  else  if(!(o  instanceof  JsonObject)&&!(o  instanceof  JsonArray))  {  [BUGGY]      return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	add	}  else  if(!(o  instanceof  JsonObject)&&!(o  instanceof  JsonArray))  {	  }    else    if(!(o    instanceof    JsonArray))    {    }    else    if(!(o    instanceof    JsonArray)&&!(o    instanceof    JsonArray))    {    	compilable	  [FE]  AssertionError  	87	2	replace
310	[BUG]  [BUGGY]  }  else  if(!(o  instanceof  JsonObject)&&!(o  instanceof  JsonArray))  {  [FE]  AssertionError  [FE]                        ArrayIndexOutOfBoundsException      [CONTEXT]      if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }      [BUGGY]  }  else  if(!(o  instanceof  JsonObject)&&!(o  instanceof  JsonArray))  {  [BUGGY]      return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	replace	}  else  if(!(o  instanceof  JsonObject)&&!(o  instanceof  JsonArray))  {	  }    else    if(!(o    instanceof    JsonArray))    {    }    else    if(!(o    instanceof    JsonArray)&&!(o    instanceof    JsonArray))    {    	compilable	  [FE]  AssertionError  	87	2	replace
311	[BUG]  [BUGGY]  }  else  if(isObject)  {  [CE]  cannot  find  symbol  isObject  [FE]                          ArrayIndexOutOfBoundsException      [CONTEXT]      if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }      [BUGGY]  }  else  if(isObject)  {  [BUGGY]      return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	replace	}  else  if(isObject)  {	  }    else    if(!(o    instanceof    JsonArray))    {    }    else    if(!(o    instanceof    JsonArray)&&!(o    instanceof    JsonArray))    {    	non-compiled	[CE]  cannot  find  symbol  isObject	87	None	replace
312	[BUG]  [BUGGY]  else  if(o  instanceof  JsonPrimitive)  {  return  JsonToken.BEGIN_OBJECT;  }  [CE]  'else'  without  'if'  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]      if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }      [BUGGY]  else  if(o  instanceof  JsonPrimitive)  {  return  JsonToken.BEGIN_OBJECT;  }  [BUGGY]      return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	replace	else  if(o  instanceof  JsonPrimitive)  {  return  JsonToken.BEGIN_OBJECT;  }	  }    else    if(o    instanceof    JsonArray)    {    return    JsonToken.BEGIN_OBJECT;    	non-compiled	[CE]  'else'  without  'if'	172	None	replace
313	[BUG]  [BUGGY]  }  else  if(o  instanceof  JsonType)  {  return  JsonToken.BEGIN_OBJECT;  }  [CE]  illegal  start  of  type  [FE]      ArrayIndexOutOfBoundsException    [CONTEXT]      if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }      [BUGGY]  }  else  if(o  instanceof  JsonType)  {  return  JsonToken.BEGIN_OBJECT;  }  [BUGGY]      return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	replace	}  else  if(o  instanceof  JsonType)  {  return  JsonToken.BEGIN_OBJECT;  }	  }    else    if(o    instanceof    JsonArray)    {    return    JsonToken.BEGIN_OBJECT;    	non-compiled	[CE]  illegal  start  of  type	172	None	replace
314	[BUG]  [BUGGY]  }  else  if(o  instanceof  String)  {  return  JsonToken.BEGIN_OBJECT;  }  [CE]  illegal  start  of  type  [FE]        ArrayIndexOutOfBoundsException    [CONTEXT]      if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }      [BUGGY]  }  else  if(o  instanceof  String)  {  return  JsonToken.BEGIN_OBJECT;  }  [BUGGY]      return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	replace	}  else  if(o  instanceof  String)  {  return  JsonToken.BEGIN_OBJECT;  }	  }    else    if(o    instanceof    JsonArray)    {    return    JsonToken.BEGIN_OBJECT;    	non-compiled	[CE]  illegal  start  of  type	172	None	replace
315	[BUG]  [BUGGY]  }  else  if(!(o  instanceof  JsonPrimitive))  {  return  JsonToken.BEGIN_OBJECT;  }  [CE]  illegal  start  of  type  [FE]          ArrayIndexOutOfBoundsException    [CONTEXT]      if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }      [BUGGY]  }  else  if(!(o  instanceof  JsonPrimitive))  {  return  JsonToken.BEGIN_OBJECT;  }  [BUGGY]      return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	replace	}  else  if(!(o  instanceof  JsonPrimitive))  {  return  JsonToken.BEGIN_OBJECT;  }	  }    else    if(o    instanceof    JsonArray)    {    return    JsonToken.BEGIN_OBJECT;    	non-compiled	[CE]  illegal  start  of  type	172	None	replace
316	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]        ArrayIndexOutOfBoundsException      [CONTEXT]      if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }      [BUGGY]  }  else  if(o  instanceof  String  ||  o  instanceof  JsonPrimitive)  {  [BUGGY]      return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	add	}  else  if(o  instanceof  String  ||  o  instanceof  JsonPrimitive)  {	  }    else    if(o    instanceof    JsonObject    ||    o    instanceof    JsonPrimitive)    {    }    else    if(o    instanceof    JsonObject    ||    o    instanceof    JsonPrimitive)    {    	compilable	  [FE]  AssertionError  	56	2	replace
317	[BUG]  [BUGGY]  }  else  if(o  instanceof  String  ||  o  instanceof  JsonPrimitive)  {  [FE]  AssertionError  [FE]        ArrayIndexOutOfBoundsException      [CONTEXT]      if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }      [BUGGY]  }  else  if(o  instanceof  String  ||  o  instanceof  JsonPrimitive)  {  [BUGGY]      return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	replace	}  else  if(o  instanceof  String  ||  o  instanceof  JsonPrimitive)  {	  }    else    if(o    instanceof    JsonObject    ||    o    instanceof    JsonPrimitive)    {    }    else    if(o    instanceof    JsonObject    ||    o    instanceof    JsonPrimitive)    {    	compilable	  [FE]  AssertionError  	56	2	replace
318	[BUG]  [BUGGY]  }  else  if(o  instanceof  String  ||  o  instanceof  JsonObject)  {  }  else  if(o  instanceof  String  ||  o  instanceof  JsonObject)  {  [CE]  missing  return  statement  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]      if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }      [BUGGY]  }  else  if(o  instanceof  String  ||  o  instanceof  JsonObject)  {  }  else  if(o  instanceof  String  ||  o  instanceof  JsonObject)  {  [BUGGY]      return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	replace	}    else    if(o    instanceof    String    ||    o    instanceof    JsonObject)    {    }  else  if(o  instanceof  String  ||  o  instanceof  JsonObject)  {	  	non-compiled	[CE]  missing  return  statement	49	None	add
319	[BUG]  [BUGGY]  }  else  if(o  instanceof  String  ||  o  instanceof  JsonObject)  {  else  if(o  instanceof  String  ||  o  instanceof  JsonObject)  {  [CE]  'else'  without  'if'  [FE]      ArrayIndexOutOfBoundsException    [CONTEXT]      if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }      [BUGGY]  }  else  if(o  instanceof  String  ||  o  instanceof  JsonObject)  {  else  if(o  instanceof  String  ||  o  instanceof  JsonObject)  {  [BUGGY]      return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	replace	}    else    if(o    instanceof    String    ||    o    instanceof    JsonObject)    {    else  if(o  instanceof  String  ||  o  instanceof  JsonObject)  {	  	non-compiled	[CE]  'else'  without  'if'	49	None	add
320	[BUG]  [BUGGY]  }  else  if(o  instanceof  String  ||  o  instanceof  JsonObject)  {  }  else  if(o  instanceof  String  ||  o  instanceof  JsonObject)  {  return  JsonToken.BEGIN_OBJECT;  }  else  if(o  instanceof  String  ||  o  instanceof  JsonObject)  {  [CE]  missing  return  statement  [FE]        ArrayIndexOutOfBoundsException    [CONTEXT]      if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }      [BUGGY]  }  else  if(o  instanceof  String  ||  o  instanceof  JsonObject)  {  }  else  if(o  instanceof  String  ||  o  instanceof  JsonObject)  {  return  JsonToken.BEGIN_OBJECT;  }  else  if(o  instanceof  String  ||  o  instanceof  JsonObject)  {  [BUGGY]      return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	replace	}    else    if(o    instanceof    String    ||    o    instanceof    JsonObject)    {    }  else  if(o  instanceof  String  ||  o  instanceof  JsonObject)  {  return  JsonToken.BEGIN_OBJECT;  }  else  if(o  instanceof  String  ||  o  instanceof  JsonObject)  {	  	non-compiled	[CE]  missing  return  statement	49	None	add
321	[BUG]  [BUGGY]  }  else  if(o  instanceof  String  ||  o  instanceof  JsonObject)  {  }  else  if(o  instanceof  String  ||  o  instanceof  JsonObject)  <  return  JsonToken.BEGIN_OBJECT;  [CE]  illegal  start  of  type  [FE]          ArrayIndexOutOfBoundsException    [CONTEXT]      if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }      [BUGGY]  }  else  if(o  instanceof  String  ||  o  instanceof  JsonObject)  {  }  else  if(o  instanceof  String  ||  o  instanceof  JsonObject)  <  return  JsonToken.BEGIN_OBJECT;  [BUGGY]      return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	replace	}    else    if(o    instanceof    String    ||    o    instanceof    JsonObject)    {    }  else  if(o  instanceof  String  ||  o  instanceof  JsonObject)  <  return  JsonToken.BEGIN_OBJECT;	  	non-compiled	[CE]  illegal  start  of  type	49	None	add
322	[BUG]  [BUGGY]  }  else  if(o  instanceof  String  ||  o  instanceof  JsonObject)  {  }  else  if(o  instanceof  String  ||  o  instanceof  JsonObject)  <  return  JsonToken.BEGIN_OBJECT;  }  else  if(o  instanceof  String  ||  o  instanceof  JsonObject)  {  [CE]  illegal  start  of  type  [FE]            ArrayIndexOutOfBoundsException    [CONTEXT]      if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }      [BUGGY]  }  else  if(o  instanceof  String  ||  o  instanceof  JsonObject)  {  }  else  if(o  instanceof  String  ||  o  instanceof  JsonObject)  <  return  JsonToken.BEGIN_OBJECT;  }  else  if(o  instanceof  String  ||  o  instanceof  JsonObject)  {  [BUGGY]      return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	replace	}    else    if(o    instanceof    String    ||    o    instanceof    JsonObject)    {    }  else  if(o  instanceof  String  ||  o  instanceof  JsonObject)  <  return  JsonToken.BEGIN_OBJECT;  }  else  if(o  instanceof  String  ||  o  instanceof  JsonObject)  {	  	non-compiled	[CE]  illegal  start  of  type	49	None	add
323	[BUG]  [BUGGY]  }  else  if(o  instanceof  String  ||  o  instanceof  JsonObject)  {  <  }  else  if(o  instanceof  String  ||  o  instanceof  JsonObject)  {  [CE]  illegal  start  of  type  [FE]              ArrayIndexOutOfBoundsException    [CONTEXT]      if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }      [BUGGY]  }  else  if(o  instanceof  String  ||  o  instanceof  JsonObject)  {  <  }  else  if(o  instanceof  String  ||  o  instanceof  JsonObject)  {  [BUGGY]      return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	replace	}    else    if(o    instanceof    String    ||    o    instanceof    JsonObject)    {    <  }  else  if(o  instanceof  String  ||  o  instanceof  JsonObject)  {	  	non-compiled	[CE]  illegal  start  of  type	49	None	add
324	[BUG]  [BUGGY]  }  else  if(o  instanceof  String  ||  o  instanceof  JsonObject)  {  }  else  if(o  instanceof  String  ||  o  instanceof  JsonObject)  {  return  JsonToken.BEGIN_OBJECT;  }  else  if(o  instanceof  Boolean  ||  o  instanceof  JsonObject)  {  [CE]  missing  return  statement  [FE]                ArrayIndexOutOfBoundsException    [CONTEXT]      if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }      [BUGGY]  }  else  if(o  instanceof  String  ||  o  instanceof  JsonObject)  {  }  else  if(o  instanceof  String  ||  o  instanceof  JsonObject)  {  return  JsonToken.BEGIN_OBJECT;  }  else  if(o  instanceof  Boolean  ||  o  instanceof  JsonObject)  {  [BUGGY]      return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	replace	}    else    if(o    instanceof    String    ||    o    instanceof    JsonObject)    {    }  else  if(o  instanceof  String  ||  o  instanceof  JsonObject)  {  return  JsonToken.BEGIN_OBJECT;  }  else  if(o  instanceof  Boolean  ||  o  instanceof  JsonObject)  {	  	non-compiled	[CE]  missing  return  statement	49	None	add
325	[BUG]  [BUGGY]  }  else  if(o  instanceof  String  ||  o  instanceof  JsonObject)  {  }  else  if(o  instanceof  String  ||  o  instanceof  JsonObject)  {  return  JsonToken.BEGIN_OBJECT;  }  else  if(o  instanceof  Character  ||  o  instanceof  JsonObject)  {  [CE]  missing  return  statement  [FE]                  ArrayIndexOutOfBoundsException    [CONTEXT]      if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }      [BUGGY]  }  else  if(o  instanceof  String  ||  o  instanceof  JsonObject)  {  }  else  if(o  instanceof  String  ||  o  instanceof  JsonObject)  {  return  JsonToken.BEGIN_OBJECT;  }  else  if(o  instanceof  Character  ||  o  instanceof  JsonObject)  {  [BUGGY]      return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	replace	}    else    if(o    instanceof    String    ||    o    instanceof    JsonObject)    {    }  else  if(o  instanceof  String  ||  o  instanceof  JsonObject)  {  return  JsonToken.BEGIN_OBJECT;  }  else  if(o  instanceof  Character  ||  o  instanceof  JsonObject)  {	  	non-compiled	[CE]  missing  return  statement	49	None	add
326	[BUG]  [BUGGY]  }  else  if(!(o  instanceof  JsonArray))  {  ((  JsonObject)o).setObject(isObject?  JsonToken.BEGIN_OBJECT  :  JsonToken.END_OBJECT);  }  [CE]  illegal  start  of  type  [FE]              AssertionError      [CONTEXT]      if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }      [BUGGY]  }  else  if(!(o  instanceof  JsonArray))  {  ((  JsonObject)o).setObject(isObject?  JsonToken.BEGIN_OBJECT  :  JsonToken.END_OBJECT);  }  [BUGGY]      return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	replace	}  else  if(!(o  instanceof  JsonArray))  {  ((  JsonObject)o).setObject(isObject?  JsonToken.BEGIN_OBJECT  :  JsonToken.END_OBJECT);  }	  }    else    if(!(o    instanceof    JsonObject))    {    ((    JsonObject)o).setObject(isObject?    JsonToken.BEGIN_OBJECT    :    JsonToken.END_OBJECT);    	non-compiled	[CE]  illegal  start  of  type	159	None	replace
327	[BUG]  [BUGGY]  }  else  if(!(o  instanceof  JsonObject))  {  ((  JsonObject)o).setObject(isObject?  JsonToken.BEGIN_OBJECT  :  JsonToken.END_OBJECT);  }  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]      if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }      [BUGGY]  }  else  if(!(o  instanceof  JsonObject))  {  ((  JsonObject)o).setObject(isObject?  JsonToken.BEGIN_OBJECT  :  JsonToken.END_OBJECT);  }  [BUGGY]      return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	replace	}  else  if(!(o  instanceof  JsonObject))  {  ((  JsonObject)o).setObject(isObject?  JsonToken.BEGIN_OBJECT  :  JsonToken.END_OBJECT);  }	  }    else    if(!(o    instanceof    JsonObject))    {    ((    JsonObject)o).setObject(isObject?    JsonToken.BEGIN_OBJECT    :    JsonToken.END_OBJECT);    	non-compiled	[CE]  illegal  start  of  type	159	None	replace
328	[BUG]  [BUGGY]  }  else  if(!(o  instanceof  JsonArray))  {  ((  JsonObject)o).setObject(isObject?  JsonToken.BEGIN_OBJECT  :  JsonToken.END_OBJECT);  [CE]  cannot  find  symbol  isObject  [FE]                  AssertionError      [CONTEXT]      if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }      [BUGGY]  }  else  if(!(o  instanceof  JsonArray))  {  ((  JsonObject)o).setObject(isObject?  JsonToken.BEGIN_OBJECT  :  JsonToken.END_OBJECT);  [BUGGY]      return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	replace	}  else  if(!(o  instanceof  JsonArray))  {  ((  JsonObject)o).setObject(isObject?  JsonToken.BEGIN_OBJECT  :  JsonToken.END_OBJECT);	  }    else    if(!(o    instanceof    JsonObject))    {    ((    JsonObject)o).setObject(isObject?    JsonToken.BEGIN_OBJECT    :    JsonToken.END_OBJECT);    	non-compiled	[CE]  cannot  find  symbol  isObject	159	None	replace
329	[BUG]  [BUGGY]  }  else  if(o  instanceof  JsonObject)  {  ((  JsonObject)o).setObject(isObject?  JsonToken.BEGIN_OBJECT  :  JsonToken.END_OBJECT);  }  [CE]  illegal  start  of  type  [FE]                    AssertionError      [CONTEXT]      if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }      [BUGGY]  }  else  if(o  instanceof  JsonObject)  {  ((  JsonObject)o).setObject(isObject?  JsonToken.BEGIN_OBJECT  :  JsonToken.END_OBJECT);  }  [BUGGY]      return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	replace	}  else  if(o  instanceof  JsonObject)  {  ((  JsonObject)o).setObject(isObject?  JsonToken.BEGIN_OBJECT  :  JsonToken.END_OBJECT);  }	  }    else    if(!(o    instanceof    JsonObject))    {    ((    JsonObject)o).setObject(isObject?    JsonToken.BEGIN_OBJECT    :    JsonToken.END_OBJECT);    	non-compiled	[CE]  illegal  start  of  type	159	None	replace
330	[BUG]  [BUGGY]  }  else  if(!(o  instanceof  JsonString))  {  ((  JsonString)o).setObject(isObject?  JsonToken.BEGIN_OBJECT  :  JsonToken.END_OBJECT);  [CE]  cannot  find  symbol  [FE]                      AssertionError      [CONTEXT]      if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }      [BUGGY]  }  else  if(!(o  instanceof  JsonString))  {  ((  JsonString)o).setObject(isObject?  JsonToken.BEGIN_OBJECT  :  JsonToken.END_OBJECT);  [BUGGY]      return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	replace	}  else  if(!(o  instanceof  JsonString))  {  ((  JsonString)o).setObject(isObject?  JsonToken.BEGIN_OBJECT  :  JsonToken.END_OBJECT);	  }    else    if(!(o    instanceof    JsonObject))    {    ((    JsonObject)o).setObject(isObject?    JsonToken.BEGIN_OBJECT    :    JsonToken.END_OBJECT);    	non-compiled	[CE]  cannot  find  symbol	159	None	replace
331	[BUG]  [BUGGY]  }  else  if(o  instanceof  JsonObject)  {  ((  JsonObject)o).setObject(isObject?  JsonToken.BEGIN_OBJECT  :  JsonToken.END_OBJECT);  [CE]  cannot  find  symbol  isObject  [FE]                        AssertionError      [CONTEXT]      if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }      [BUGGY]  }  else  if(o  instanceof  JsonObject)  {  ((  JsonObject)o).setObject(isObject?  JsonToken.BEGIN_OBJECT  :  JsonToken.END_OBJECT);  [BUGGY]      return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	replace	}  else  if(o  instanceof  JsonObject)  {  ((  JsonObject)o).setObject(isObject?  JsonToken.BEGIN_OBJECT  :  JsonToken.END_OBJECT);	  }    else    if(!(o    instanceof    JsonObject))    {    ((    JsonObject)o).setObject(isObject?    JsonToken.BEGIN_OBJECT    :    JsonToken.END_OBJECT);    	non-compiled	[CE]  cannot  find  symbol  isObject	159	None	replace
332	[BUG]  [BUGGY]  }  else  if(o  instanceof  JsonObject  ||  o  instanceof  JsonPrimitive)  {  return  JsonToken.BEGIN_OBJECT;  }  [CE]  illegal  start  of  type  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]      if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }      [BUGGY]  }  else  if(o  instanceof  JsonObject  ||  o  instanceof  JsonPrimitive)  {  return  JsonToken.BEGIN_OBJECT;  }  [BUGGY]      return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	replace	}  else  if(o  instanceof  JsonObject  ||  o  instanceof  JsonPrimitive)  {  return  JsonToken.BEGIN_OBJECT;  }	  }    else    if(o    instanceof    JsonObject    ||    o    instanceof    JsonPrimitive)    {    return    JsonToken.BEGIN_OBJECT;    	non-compiled	[CE]  illegal  start  of  type	166	None	replace
333	[BUG]  [BUGGY]  }  else  if(o  instanceof  JsonArray  ||  o  instanceof  JsonPrimitive)  {  return  JsonToken.BEGIN_OBJECT;  }  [CE]  illegal  start  of  type  [FE]      ArrayIndexOutOfBoundsException    [CONTEXT]      if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }      [BUGGY]  }  else  if(o  instanceof  JsonArray  ||  o  instanceof  JsonPrimitive)  {  return  JsonToken.BEGIN_OBJECT;  }  [BUGGY]      return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	replace	}  else  if(o  instanceof  JsonArray  ||  o  instanceof  JsonPrimitive)  {  return  JsonToken.BEGIN_OBJECT;  }	  }    else    if(o    instanceof    JsonObject    ||    o    instanceof    JsonPrimitive)    {    return    JsonToken.BEGIN_OBJECT;    	non-compiled	[CE]  illegal  start  of  type	166	None	replace
334	[BUG]  [BUGGY]  }  else  if(o  instanceof  JsonObject  ||  o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_OBJECT;  }  [CE]  illegal  start  of  type  [FE]        ArrayIndexOutOfBoundsException    [CONTEXT]      if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }      [BUGGY]  }  else  if(o  instanceof  JsonObject  ||  o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_OBJECT;  }  [BUGGY]      return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	replace	}  else  if(o  instanceof  JsonObject  ||  o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_OBJECT;  }	  }    else    if(o    instanceof    JsonObject    ||    o    instanceof    JsonPrimitive)    {    return    JsonToken.BEGIN_OBJECT;    	non-compiled	[CE]  illegal  start  of  type	166	None	replace
335	[BUG]  [BUGGY]  }  else  if(o  instanceof  JsonObject  &&  o  instanceof  JsonPrimitive)  {  return  JsonToken.BEGIN_OBJECT;  }  [CE]  illegal  start  of  type  [FE]          ArrayIndexOutOfBoundsException    [CONTEXT]      if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }      [BUGGY]  }  else  if(o  instanceof  JsonObject  &&  o  instanceof  JsonPrimitive)  {  return  JsonToken.BEGIN_OBJECT;  }  [BUGGY]      return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	replace	}  else  if(o  instanceof  JsonObject  &&  o  instanceof  JsonPrimitive)  {  return  JsonToken.BEGIN_OBJECT;  }	  }    else    if(o    instanceof    JsonObject    ||    o    instanceof    JsonPrimitive)    {    return    JsonToken.BEGIN_OBJECT;    	non-compiled	[CE]  illegal  start  of  type	166	None	replace
336	[BUG]  [BUGGY]  }  else  if(o  instanceof  JsonObject  ||  o  instanceof  Class  <?>)  {  }  else  if(o  instanceof  JsonObject  ||  o  instanceof  Class  <?>)  {  [CE]  missing  return  statement  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]      if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }      [BUGGY]  }  else  if(o  instanceof  JsonObject  ||  o  instanceof  Class  <?>)  {  }  else  if(o  instanceof  JsonObject  ||  o  instanceof  Class  <?>)  {  [BUGGY]      return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	replace	}    else    if(o    instanceof    JsonObject    ||    o    instanceof    Class    <?>)    {    }  else  if(o  instanceof  JsonObject  ||  o  instanceof  Class  <?>)  {	  	non-compiled	[CE]  missing  return  statement	242	None	add
337	[BUG]  [BUGGY]  }  else  if(o  instanceof  JsonObject  ||  o  instanceof  Class  <?>)  {  else  if(o  instanceof  JsonObject  ||  o  instanceof  Class  <?>)  {  [CE]  'else'  without  'if'  [FE]      ArrayIndexOutOfBoundsException    [CONTEXT]      if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }      [BUGGY]  }  else  if(o  instanceof  JsonObject  ||  o  instanceof  Class  <?>)  {  else  if(o  instanceof  JsonObject  ||  o  instanceof  Class  <?>)  {  [BUGGY]      return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	replace	}    else    if(o    instanceof    JsonObject    ||    o    instanceof    Class    <?>)    {    else  if(o  instanceof  JsonObject  ||  o  instanceof  Class  <?>)  {	  	non-compiled	[CE]  'else'  without  'if'	242	None	add
338	[BUG]  [BUGGY]  }  else  if(o  instanceof  JsonObject  ||  o  instanceof  Class  <?>)  {  }  else  if(o  instanceof  JsonObject  ||  o  instanceof  Class  >=?>)  {  [CE]  illegal  start  of  expression  [FE]        ArrayIndexOutOfBoundsException    [CONTEXT]      if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }      [BUGGY]  }  else  if(o  instanceof  JsonObject  ||  o  instanceof  Class  <?>)  {  }  else  if(o  instanceof  JsonObject  ||  o  instanceof  Class  >=?>)  {  [BUGGY]      return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	replace	}    else    if(o    instanceof    JsonObject    ||    o    instanceof    Class    <?>)    {    }  else  if(o  instanceof  JsonObject  ||  o  instanceof  Class  >=?>)  {	  	non-compiled	[CE]  illegal  start  of  expression	242	None	add
339	[BUG]  [BUGGY]  }  else  if(o  instanceof  JsonObject  ||  o  instanceof  Class  <?>)  {  <  }  else  if(o  instanceof  JsonObject  ||  o  instanceof  Class  <?>)  {  [CE]  illegal  start  of  type  [FE]          ArrayIndexOutOfBoundsException    [CONTEXT]      if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }      [BUGGY]  }  else  if(o  instanceof  JsonObject  ||  o  instanceof  Class  <?>)  {  <  }  else  if(o  instanceof  JsonObject  ||  o  instanceof  Class  <?>)  {  [BUGGY]      return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	replace	}    else    if(o    instanceof    JsonObject    ||    o    instanceof    Class    <?>)    {    <  }  else  if(o  instanceof  JsonObject  ||  o  instanceof  Class  <?>)  {	  	non-compiled	[CE]  illegal  start  of  type	242	None	add
340	[BUG]  [BUGGY]  }  else  if(o  instanceof  JsonObject  ||  o  instanceof  Class  <?>)  {  }  else  if(o  instanceof  JsonObject  ||  o  instanceof  Class  ==?>)  {  [CE]  illegal  start  of  expression  [FE]            ArrayIndexOutOfBoundsException    [CONTEXT]      if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }      [BUGGY]  }  else  if(o  instanceof  JsonObject  ||  o  instanceof  Class  <?>)  {  }  else  if(o  instanceof  JsonObject  ||  o  instanceof  Class  ==?>)  {  [BUGGY]      return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	replace	}    else    if(o    instanceof    JsonObject    ||    o    instanceof    Class    <?>)    {    }  else  if(o  instanceof  JsonObject  ||  o  instanceof  Class  ==?>)  {	  	non-compiled	[CE]  illegal  start  of  expression	242	None	add
341	[BUG]  [BUGGY]  }  else  if(o  instanceof  JsonObject  ||  o  instanceof  Class  <?>)  {  }  else  if(o  instanceof  JsonObject  ||  o  instanceof  Category  <?>)  {  [CE]  cannot  find  symbol  [FE]              ArrayIndexOutOfBoundsException    [CONTEXT]      if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }      [BUGGY]  }  else  if(o  instanceof  JsonObject  ||  o  instanceof  Class  <?>)  {  }  else  if(o  instanceof  JsonObject  ||  o  instanceof  Category  <?>)  {  [BUGGY]      return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	replace	}    else    if(o    instanceof    JsonObject    ||    o    instanceof    Class    <?>)    {    }  else  if(o  instanceof  JsonObject  ||  o  instanceof  Category  <?>)  {	  	non-compiled	[CE]  cannot  find  symbol	242	None	add
342	[BUG]  [BUGGY]  }  else  if(o  instanceof  JsonObject  ||  o  instanceof  Class  <?>)  {  }  else  if(o  instanceof  JSONObject  ||  o  instanceof  Class  <?>)  {  [CE]  cannot  find  symbol  [FE]                ArrayIndexOutOfBoundsException    [CONTEXT]      if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }      [BUGGY]  }  else  if(o  instanceof  JsonObject  ||  o  instanceof  Class  <?>)  {  }  else  if(o  instanceof  JSONObject  ||  o  instanceof  Class  <?>)  {  [BUGGY]      return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	replace	}    else    if(o    instanceof    JsonObject    ||    o    instanceof    Class    <?>)    {    }  else  if(o  instanceof  JSONObject  ||  o  instanceof  Class  <?>)  {	  	non-compiled	[CE]  cannot  find  symbol	242	None	add
343	[BUG]  [BUGGY]  }  else  if(o  instanceof  JsonPrimitive)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  type  [FE]            ArrayIndexOutOfBoundsException      [CONTEXT]      if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }      [BUGGY]  }  else  if(o  instanceof  JsonPrimitive)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	replace	}  else  if(o  instanceof  JsonPrimitive)  {  throw  new  IllegalArgumentException( " ");  }	  }    else    if(o    instanceof    JsonObject    ||    o    instanceof    String)    {    }    else    if(o    instanceof    JsonObject    ||    o    instanceof    String)    {    return    JsonToken.BEGIN_OBJECT;    }    else    if(o    instanceof    JsonArray)    {    return    JsonToken.BEGIN_ARRAY;    }    	non-compiled	[CE]  illegal  start  of  type	240	None	replace
344	[BUG]  [BUGGY]  }  else  if(o  instanceof  JsonPrimitive)  {  return  JsonToken.NUMBER_OBJECT;  }  [CE]  illegal  start  of  type  [FE]              ArrayIndexOutOfBoundsException      [CONTEXT]      if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }      [BUGGY]  }  else  if(o  instanceof  JsonPrimitive)  {  return  JsonToken.NUMBER_OBJECT;  }  [BUGGY]      return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	replace	}  else  if(o  instanceof  JsonPrimitive)  {  return  JsonToken.NUMBER_OBJECT;  }	  }    else    if(o    instanceof    JsonObject    ||    o    instanceof    String)    {    }    else    if(o    instanceof    JsonObject    ||    o    instanceof    String)    {    return    JsonToken.BEGIN_OBJECT;    }    else    if(o    instanceof    JsonArray)    {    return    JsonToken.BEGIN_ARRAY;    }    	non-compiled	[CE]  illegal  start  of  type	240	None	replace
345	[BUG]  [BUGGY]  }  else  if(o  instanceof  JsonObject!=  false)  {  }  else  if(o  instanceof  JsonObject!=  false)  {  [CE]  missing  return  statement  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]      if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }      [BUGGY]  }  else  if(o  instanceof  JsonObject!=  false)  {  }  else  if(o  instanceof  JsonObject!=  false)  {  [BUGGY]      return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	replace	}    else    if(o    instanceof    JsonObject!=    false)    {    }  else  if(o  instanceof  JsonObject!=  false)  {	  	non-compiled	[CE]  missing  return  statement	32	None	add
346	[BUG]  [BUGGY]  }  else  if(o  instanceof  JsonObject!=  false)  {  }  else  if(o  instanceof  JsonObject  ==  false)  {  [CE]  missing  return  statement  [FE]      ArrayIndexOutOfBoundsException    [CONTEXT]      if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }      [BUGGY]  }  else  if(o  instanceof  JsonObject!=  false)  {  }  else  if(o  instanceof  JsonObject  ==  false)  {  [BUGGY]      return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	replace	}    else    if(o    instanceof    JsonObject!=    false)    {    }  else  if(o  instanceof  JsonObject  ==  false)  {	  	non-compiled	[CE]  missing  return  statement	32	None	add
347	[BUG]  [BUGGY]  }  else  if(o  instanceof  JsonObject!=  false)  {  }  else  if(o  instanceof  JsonObject  >>  false)  {  [CE]  cannot  find  symbol  JsonObject  [FE]        ArrayIndexOutOfBoundsException    [CONTEXT]      if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }      [BUGGY]  }  else  if(o  instanceof  JsonObject!=  false)  {  }  else  if(o  instanceof  JsonObject  >>  false)  {  [BUGGY]      return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	replace	}    else    if(o    instanceof    JsonObject!=    false)    {    }  else  if(o  instanceof  JsonObject  >>  false)  {	  	non-compiled	[CE]  cannot  find  symbol  JsonObject	32	None	add
348	[BUG]  [BUGGY]  }  else  if(o  instanceof  JsonObject!=  false)  {  }  else  if(o  instanceof  JsonObject  >=  false)  {  [CE]  bad  operand  types  for  binary  operator  '>='  [FE]          ArrayIndexOutOfBoundsException    [CONTEXT]      if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }      [BUGGY]  }  else  if(o  instanceof  JsonObject!=  false)  {  }  else  if(o  instanceof  JsonObject  >=  false)  {  [BUGGY]      return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	replace	}    else    if(o    instanceof    JsonObject!=    false)    {    }  else  if(o  instanceof  JsonObject  >=  false)  {	  	non-compiled	[CE]  bad  operand  types  for  binary  operator  '>='	32	None	add
349	[BUG]  [BUGGY]  }  else  if(o  instanceof  JsonObject!=  false)  {  else  if(o  instanceof  JsonObject!=  false)  {  [CE]  'else'  without  'if'  [FE]            ArrayIndexOutOfBoundsException    [CONTEXT]      if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }      [BUGGY]  }  else  if(o  instanceof  JsonObject!=  false)  {  else  if(o  instanceof  JsonObject!=  false)  {  [BUGGY]      return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	replace	}    else    if(o    instanceof    JsonObject!=    false)    {    else  if(o  instanceof  JsonObject!=  false)  {	  	non-compiled	[CE]  'else'  without  'if'	32	None	add
350	[BUG]  [BUGGY]  }  else  if(o  instanceof  JsonObject!=  false)  {  }  else  if(o  instanceof  JsonObject  [Delete]  false)  {  [CE]  [FE]              ArrayIndexOutOfBoundsException    [CONTEXT]      if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }      [BUGGY]  }  else  if(o  instanceof  JsonObject!=  false)  {  }  else  if(o  instanceof  JsonObject  [Delete]  false)  {  [BUGGY]      return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	replace	}    else    if(o    instanceof    JsonObject!=    false)    {    }  else  if(o  instanceof  JsonObject  [Delete]  false)  {	  	non-compiled	[CE]  	32	None	add
351	[BUG]  [BUGGY]  }  else  if(o  instanceof  JsonObject!=  false)  {  else  if(o  instanceof  JsonObject  ==  false)  {  [CE]  'else'  without  'if'  [FE]                ArrayIndexOutOfBoundsException    [CONTEXT]      if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }      [BUGGY]  }  else  if(o  instanceof  JsonObject!=  false)  {  else  if(o  instanceof  JsonObject  ==  false)  {  [BUGGY]      return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	replace	}    else    if(o    instanceof    JsonObject!=    false)    {    else  if(o  instanceof  JsonObject  ==  false)  {	  	non-compiled	[CE]  'else'  without  'if'	32	None	add
352	[BUG]  [BUGGY]  [FE]  ArrayIndexOutOfBoundsException  [FE]                  ArrayIndexOutOfBoundsException    [CONTEXT]      if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }      [BUGGY]  }  else  if(o  instanceof  JsonObject!=  false)  {  return  JsonToken.BEGIN_OBJECT;  [BUGGY]      return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	add	}    else    if(o    instanceof    JsonObject!=    false)    {    return  JsonToken.BEGIN_OBJECT;	  	compilable	  [FE]  ArrayIndexOutOfBoundsException  	32	2	add
353	[BUG]  [BUGGY]  }  else  if(o  instanceof  JsonObject!=  false)  {  return  JsonToken.BEGIN_OBJECT;  [FE]  ArrayIndexOutOfBoundsException  [FE]                  ArrayIndexOutOfBoundsException    [CONTEXT]      if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }      [BUGGY]  }  else  if(o  instanceof  JsonObject!=  false)  {  return  JsonToken.BEGIN_OBJECT;  [BUGGY]      return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	replace	}    else    if(o    instanceof    JsonObject!=    false)    {    return  JsonToken.BEGIN_OBJECT;	  	compilable	  [FE]  ArrayIndexOutOfBoundsException  	32	2	add
354	[BUG]  [BUGGY]  }  else  if(o  instanceof  JsonNumber  &&  o  instanceof  JsonPrimitive)  {  [CE]  cannot  find  symbol  [FE]                              ArrayIndexOutOfBoundsException      [CONTEXT]      if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }      [BUGGY]  }  else  if(o  instanceof  JsonNumber  &&  o  instanceof  JsonPrimitive)  {  [BUGGY]      return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	replace	}  else  if(o  instanceof  JsonNumber  &&  o  instanceof  JsonPrimitive)  {	  }    else    if(o    instanceof    JsonNumber    ||    o    instanceof    JsonPrimitive)    {    	non-compiled	[CE]  cannot  find  symbol	117	None	replace
355	[BUG]  [BUGGY]  }  else  if(o  instanceof  JsonNumber  ||  o  instanceof  JsonPrimitive  ||  isObject)  {  [CE]  cannot  find  symbol  [FE]                                ArrayIndexOutOfBoundsException      [CONTEXT]      if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }      [BUGGY]  }  else  if(o  instanceof  JsonNumber  ||  o  instanceof  JsonPrimitive  ||  isObject)  {  [BUGGY]      return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	replace	}  else  if(o  instanceof  JsonNumber  ||  o  instanceof  JsonPrimitive  ||  isObject)  {	  }    else    if(o    instanceof    JsonNumber    ||    o    instanceof    JsonPrimitive)    {    	non-compiled	[CE]  cannot  find  symbol	117	None	replace
356	[BUG]  [BUGGY]  }  else  if(o  instanceof  JsonNumber  ||  o  instanceof  JsonPrimitive  =  false)  {  [CE]  cannot  find  symbol  [FE]                                  ArrayIndexOutOfBoundsException      [CONTEXT]      if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }      [BUGGY]  }  else  if(o  instanceof  JsonNumber  ||  o  instanceof  JsonPrimitive  =  false)  {  [BUGGY]      return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	replace	}  else  if(o  instanceof  JsonNumber  ||  o  instanceof  JsonPrimitive  =  false)  {	  }    else    if(o    instanceof    JsonNumber    ||    o    instanceof    JsonPrimitive)    {    	non-compiled	[CE]  cannot  find  symbol	117	None	replace
357	[BUG]  [BUGGY]  }  else  if(o  instanceof  JsonNumber  ||  o  instanceof  JsonPrimitive  <  UNREADABLE_READER)  {  [CE]  >  expected  [FE]                                    ArrayIndexOutOfBoundsException      [CONTEXT]      if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }      [BUGGY]  }  else  if(o  instanceof  JsonNumber  ||  o  instanceof  JsonPrimitive  <  UNREADABLE_READER)  {  [BUGGY]      return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	replace	}  else  if(o  instanceof  JsonNumber  ||  o  instanceof  JsonPrimitive  <  UNREADABLE_READER)  {	  }    else    if(o    instanceof    JsonNumber    ||    o    instanceof    JsonPrimitive)    {    	non-compiled	[CE]  >  expected	117	None	replace
358	[BUG]  [BUGGY]  }  else  if(o  instanceof  JsonNumber  ||!(o  instanceof  JsonPrimitive))  {  [CE]  cannot  find  symbol  [FE]                                      ArrayIndexOutOfBoundsException      [CONTEXT]      if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }      [BUGGY]  }  else  if(o  instanceof  JsonNumber  ||!(o  instanceof  JsonPrimitive))  {  [BUGGY]      return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	replace	}  else  if(o  instanceof  JsonNumber  ||!(o  instanceof  JsonPrimitive))  {	  }    else    if(o    instanceof    JsonNumber    ||    o    instanceof    JsonPrimitive)    {    	non-compiled	[CE]  cannot  find  symbol	117	None	replace
359	[BUG]  [BUGGY]  }  else  if(o  instanceof  JsonNumber  ||  o  instanceof  JsonPrimitive  {  [CE]  ')'  expected  [FE]                                        ArrayIndexOutOfBoundsException      [CONTEXT]      if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }      [BUGGY]  }  else  if(o  instanceof  JsonNumber  ||  o  instanceof  JsonPrimitive  {  [BUGGY]      return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	replace	}  else  if(o  instanceof  JsonNumber  ||  o  instanceof  JsonPrimitive  {	  }    else    if(o    instanceof    JsonNumber    ||    o    instanceof    JsonPrimitive)    {    	non-compiled	[CE]  ')'  expected	117	None	replace
360	[BUG]  [BUGGY]  }  else  if(o  instanceof  JsonNumber  &&  o  instanceof  JsonString)  {  [CE]  cannot  find  symbol  [FE]                            ArrayIndexOutOfBoundsException      [CONTEXT]      if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }      [BUGGY]  }  else  if(o  instanceof  JsonNumber  &&  o  instanceof  JsonString)  {  [BUGGY]      return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	replace	}  else  if(o  instanceof  JsonNumber  &&  o  instanceof  JsonString)  {	  }    else    if(o    instanceof    JsonNumber    ||    o    instanceof    JsonString)    {    	non-compiled	[CE]  cannot  find  symbol	116	None	replace
361	[BUG]  [BUGGY]  }  else  if(o  instanceof  JsonString  ||  o  instanceof  JsonNumber)  {  [CE]  cannot  find  symbol  [FE]                              ArrayIndexOutOfBoundsException      [CONTEXT]      if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }      [BUGGY]  }  else  if(o  instanceof  JsonString  ||  o  instanceof  JsonNumber)  {  [BUGGY]      return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	replace	}  else  if(o  instanceof  JsonString  ||  o  instanceof  JsonNumber)  {	  }    else    if(o    instanceof    JsonNumber    ||    o    instanceof    JsonString)    {    	non-compiled	[CE]  cannot  find  symbol	116	None	replace
362	[BUG]  [BUGGY]  }  else  if(o  instanceof  JsonNumber  ||!(o  instanceof  JsonString))  {  [CE]  cannot  find  symbol  [FE]                                ArrayIndexOutOfBoundsException      [CONTEXT]      if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }      [BUGGY]  }  else  if(o  instanceof  JsonNumber  ||!(o  instanceof  JsonString))  {  [BUGGY]      return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	replace	}  else  if(o  instanceof  JsonNumber  ||!(o  instanceof  JsonString))  {	  }    else    if(o    instanceof    JsonNumber    ||    o    instanceof    JsonString)    {    	non-compiled	[CE]  cannot  find  symbol	116	None	replace
363	[BUG]  [BUGGY]  }  else  if(o  instanceof  JsonNumber  ||  o.getClass()  instanceof  JsonString)  {  [CE]  cannot  find  symbol  [FE]                                  ArrayIndexOutOfBoundsException      [CONTEXT]      if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }      [BUGGY]  }  else  if(o  instanceof  JsonNumber  ||  o.getClass()  instanceof  JsonString)  {  [BUGGY]      return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	replace	}  else  if(o  instanceof  JsonNumber  ||  o.getClass()  instanceof  JsonString)  {	  }    else    if(o    instanceof    JsonNumber    ||    o    instanceof    JsonString)    {    	non-compiled	[CE]  cannot  find  symbol	116	None	replace
364	[BUG]  [BUGGY]  }  else  if(o  instanceof  JsonNull  ||  o  instanceof  JsonString)  {  [CE]  cannot  find  symbol  [FE]                                    ArrayIndexOutOfBoundsException      [CONTEXT]      if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }      [BUGGY]  }  else  if(o  instanceof  JsonNull  ||  o  instanceof  JsonString)  {  [BUGGY]      return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	replace	}  else  if(o  instanceof  JsonNull  ||  o  instanceof  JsonString)  {	  }    else    if(o    instanceof    JsonNumber    ||    o    instanceof    JsonString)    {    	non-compiled	[CE]  cannot  find  symbol	116	None	replace
365	[BUG]  [BUGGY]  }    else    if(o    instanceof    JsonObject    ||    o    instanceof    JsonPrimitive)    {    return  JsonToken.BEGIN_OBJECT;  }  else  if(o  instanceof  JsonObject  ||  o  instanceof  JsonPrimitive)  {  return  JsonToken.BEGIN_OBJECT;  }  [CE]  illegal  start  of  type  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]      if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }      [BUGGY]  }    else    if(o    instanceof    JsonObject    ||    o    instanceof    JsonPrimitive)    {    return  JsonToken.BEGIN_OBJECT;  }  else  if(o  instanceof  JsonObject  ||  o  instanceof  JsonPrimitive)  {  return  JsonToken.BEGIN_OBJECT;  }  [BUGGY]      return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	replace	}        else        if(o        instanceof        JsonObject        ||        o        instanceof        JsonPrimitive)        {        return    JsonToken.BEGIN_OBJECT;    }  else  if(o  instanceof  JsonObject  ||  o  instanceof  JsonPrimitive)  {  return  JsonToken.BEGIN_OBJECT;  }	  	non-compiled	[CE]  illegal  start  of  type	165	None	add
366	[BUG]  [BUGGY]  }    else    if(o    instanceof    JsonObject    ||    o    instanceof    JsonPrimitive)    {    return  JsonToken.BEGIN_OBJECT;  }  else  if(o  instanceof  JsonObject  ||  o  instanceof  JsonPrimitive)  {  return  JsonToken.BEGIN_OBJECT;  }  else  if(o  instanceof  JsonObject  ||  o  instanceof  JsonPrimitive)  {  return  JsonToken.BEGIN_OBJECT;  }  [CE]  illegal  start  of  type  [FE]      ArrayIndexOutOfBoundsException    [CONTEXT]      if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }      [BUGGY]  }    else    if(o    instanceof    JsonObject    ||    o    instanceof    JsonPrimitive)    {    return  JsonToken.BEGIN_OBJECT;  }  else  if(o  instanceof  JsonObject  ||  o  instanceof  JsonPrimitive)  {  return  JsonToken.BEGIN_OBJECT;  }  else  if(o  instanceof  JsonObject  ||  o  instanceof  JsonPrimitive)  {  return  JsonToken.BEGIN_OBJECT;  }  [BUGGY]      return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	replace	}        else        if(o        instanceof        JsonObject        ||        o        instanceof        JsonPrimitive)        {        return    JsonToken.BEGIN_OBJECT;    }  else  if(o  instanceof  JsonObject  ||  o  instanceof  JsonPrimitive)  {  return  JsonToken.BEGIN_OBJECT;  }  else  if(o  instanceof  JsonObject  ||  o  instanceof  JsonPrimitive)  {  return  JsonToken.BEGIN_OBJECT;  }	  	non-compiled	[CE]  illegal  start  of  type	165	None	add
367	[BUG]  [BUGGY]  }    else    if(o    instanceof    JsonObject    ||    o    instanceof    JsonPrimitive)    {    return  JsonToken.BEGIN_OBJECT;  }  else  if(o  instanceof  JsonObject  ||  o  instanceof  JsonPrimitive)  {  return  JsonToken.BEGIN_OBJECT;  }  else  if(o  instanceof  JsonObject  ||  o  instanceof  JsonPrimitive)  {  return  JsonToken.BEGIN_OBJ  [CE]  ';'  expected  [FE]        ArrayIndexOutOfBoundsException    [CONTEXT]      if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }      [BUGGY]  }    else    if(o    instanceof    JsonObject    ||    o    instanceof    JsonPrimitive)    {    return  JsonToken.BEGIN_OBJECT;  }  else  if(o  instanceof  JsonObject  ||  o  instanceof  JsonPrimitive)  {  return  JsonToken.BEGIN_OBJECT;  }  else  if(o  instanceof  JsonObject  ||  o  instanceof  JsonPrimitive)  {  return  JsonToken.BEGIN_OBJ  [BUGGY]      return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	replace	}        else        if(o        instanceof        JsonObject        ||        o        instanceof        JsonPrimitive)        {        return    JsonToken.BEGIN_OBJECT;    }  else  if(o  instanceof  JsonObject  ||  o  instanceof  JsonPrimitive)  {  return  JsonToken.BEGIN_OBJECT;  }  else  if(o  instanceof  JsonObject  ||  o  instanceof  JsonPrimitive)  {  return  JsonToken.BEGIN_OBJ	  	non-compiled	[CE]  ';'  expected	165	None	add
368	[BUG]  [BUGGY]  }    else    if(o    instanceof    JsonObject    ||    o    instanceof    JsonPrimitive)    {    return  JsonToken.BEGIN_OBJECT;  }  else  if(o  instanceof  JsonObject  ||  o  instanceof  JsonPrimitive)  {  return  JsonToken.BEGIN_OBJECT;  }  else  if(o  instanceof  JsonObject  ||  o  instanceof  JsonPrimitive)  {  return  JsonToken.BEGIN_OB  [CE]  ';'  expected  [FE]          ArrayIndexOutOfBoundsException    [CONTEXT]      if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }      [BUGGY]  }    else    if(o    instanceof    JsonObject    ||    o    instanceof    JsonPrimitive)    {    return  JsonToken.BEGIN_OBJECT;  }  else  if(o  instanceof  JsonObject  ||  o  instanceof  JsonPrimitive)  {  return  JsonToken.BEGIN_OBJECT;  }  else  if(o  instanceof  JsonObject  ||  o  instanceof  JsonPrimitive)  {  return  JsonToken.BEGIN_OB  [BUGGY]      return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	replace	}        else        if(o        instanceof        JsonObject        ||        o        instanceof        JsonPrimitive)        {        return    JsonToken.BEGIN_OBJECT;    }  else  if(o  instanceof  JsonObject  ||  o  instanceof  JsonPrimitive)  {  return  JsonToken.BEGIN_OBJECT;  }  else  if(o  instanceof  JsonObject  ||  o  instanceof  JsonPrimitive)  {  return  JsonToken.BEGIN_OB	  	non-compiled	[CE]  ';'  expected	165	None	add
369	[BUG]  [BUGGY]  [FE]  ArrayIndexOutOfBoundsException  [FE]            ArrayIndexOutOfBoundsException    [CONTEXT]      if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }      [BUGGY]  }    else    if(o    instanceof    JsonObject    ||    o    instanceof    JsonPrimitive)    {    return  JsonToken.BEGIN_OBJECT;  }  else  if(o  instanceof  JsonObject  ||  o  instanceof  JsonPrimitive)  {  return  JsonToken.BEGIN_OBJECT;  }  else  if(o  instanceof  JsonObject  ||  o  instanceof  JsonPrimitive)  {  return  JsonToken.BEGIN_OBJECT;  [BUGGY]      return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	add	}        else        if(o        instanceof        JsonObject        ||        o        instanceof        JsonPrimitive)        {        return    JsonToken.BEGIN_OBJECT;    }  else  if(o  instanceof  JsonObject  ||  o  instanceof  JsonPrimitive)  {  return  JsonToken.BEGIN_OBJECT;  }  else  if(o  instanceof  JsonObject  ||  o  instanceof  JsonPrimitive)  {  return  JsonToken.BEGIN_OBJECT;	  	compilable	  [FE]  ArrayIndexOutOfBoundsException  	165	2	add
370	[BUG]  [BUGGY]  }    else    if(o    instanceof    JsonObject    ||    o    instanceof    JsonPrimitive)    {    return  JsonToken.BEGIN_OBJECT;  }  else  if(o  instanceof  JsonObject  ||  o  instanceof  JsonPrimitive)  {  return  JsonToken.BEGIN_OBJECT;  }  else  if(o  instanceof  JsonObject  ||  o  instanceof  JsonPrimitive)  {  return  JsonToken.BEGIN_OBJECT;  [FE]  ArrayIndexOutOfBoundsException  [FE]            ArrayIndexOutOfBoundsException    [CONTEXT]      if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }      [BUGGY]  }    else    if(o    instanceof    JsonObject    ||    o    instanceof    JsonPrimitive)    {    return  JsonToken.BEGIN_OBJECT;  }  else  if(o  instanceof  JsonObject  ||  o  instanceof  JsonPrimitive)  {  return  JsonToken.BEGIN_OBJECT;  }  else  if(o  instanceof  JsonObject  ||  o  instanceof  JsonPrimitive)  {  return  JsonToken.BEGIN_OBJECT;  [BUGGY]      return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	replace	}        else        if(o        instanceof        JsonObject        ||        o        instanceof        JsonPrimitive)        {        return    JsonToken.BEGIN_OBJECT;    }  else  if(o  instanceof  JsonObject  ||  o  instanceof  JsonPrimitive)  {  return  JsonToken.BEGIN_OBJECT;  }  else  if(o  instanceof  JsonObject  ||  o  instanceof  JsonPrimitive)  {  return  JsonToken.BEGIN_OBJECT;	  	compilable	  [FE]  ArrayIndexOutOfBoundsException  	165	2	add
371	[BUG]  [BUGGY]  }    else    if(o    instanceof    JsonObject    ||    o    instanceof    JsonPrimitive)    {    return  JsonToken.BEGIN_OBJECT;  }  else  if(o  instanceof  JsonObject  ||  o  instanceof  JsonPrimitive)  {  return  JsonToken.BEGIN_OBJECT;  }  else  if(o  instanceof  JsonObject  ||  o  instanceof  JsonPrimitive)  {  return  JsonToken.BEGIN_  [CE]  ';'  expected  [FE]              ArrayIndexOutOfBoundsException    [CONTEXT]      if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }      [BUGGY]  }    else    if(o    instanceof    JsonObject    ||    o    instanceof    JsonPrimitive)    {    return  JsonToken.BEGIN_OBJECT;  }  else  if(o  instanceof  JsonObject  ||  o  instanceof  JsonPrimitive)  {  return  JsonToken.BEGIN_OBJECT;  }  else  if(o  instanceof  JsonObject  ||  o  instanceof  JsonPrimitive)  {  return  JsonToken.BEGIN_  [BUGGY]      return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	replace	}        else        if(o        instanceof        JsonObject        ||        o        instanceof        JsonPrimitive)        {        return    JsonToken.BEGIN_OBJECT;    }  else  if(o  instanceof  JsonObject  ||  o  instanceof  JsonPrimitive)  {  return  JsonToken.BEGIN_OBJECT;  }  else  if(o  instanceof  JsonObject  ||  o  instanceof  JsonPrimitive)  {  return  JsonToken.BEGIN_	  	non-compiled	[CE]  ';'  expected	165	None	add
372	[BUG]  [BUGGY]  }    else    if(o    instanceof    JsonObject    ||    o    instanceof    JsonPrimitive)    {    return  JsonToken.BEGIN_OBJECT;  }  else  if(o  instanceof  JsonObject  ||  o  instanceof  JsonPrimitive)  {  return  JsonToken.BEGIN_OBJECT;  }  else  if(o  instanceof  JsonObject  ||  o  instanceof  JsonPrimitive)  {  return  JsonToken.BEGIN  [CE]  ';'  expected  [FE]                ArrayIndexOutOfBoundsException    [CONTEXT]      if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }      [BUGGY]  }    else    if(o    instanceof    JsonObject    ||    o    instanceof    JsonPrimitive)    {    return  JsonToken.BEGIN_OBJECT;  }  else  if(o  instanceof  JsonObject  ||  o  instanceof  JsonPrimitive)  {  return  JsonToken.BEGIN_OBJECT;  }  else  if(o  instanceof  JsonObject  ||  o  instanceof  JsonPrimitive)  {  return  JsonToken.BEGIN  [BUGGY]      return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	replace	}        else        if(o        instanceof        JsonObject        ||        o        instanceof        JsonPrimitive)        {        return    JsonToken.BEGIN_OBJECT;    }  else  if(o  instanceof  JsonObject  ||  o  instanceof  JsonPrimitive)  {  return  JsonToken.BEGIN_OBJECT;  }  else  if(o  instanceof  JsonObject  ||  o  instanceof  JsonPrimitive)  {  return  JsonToken.BEGIN	  	non-compiled	[CE]  ';'  expected	165	None	add
373	[BUG]  [BUGGY]  }    else    if(o    instanceof    JsonObject    ||    o    instanceof    JsonPrimitive)    {    return  JsonToken.BEGIN_OBJECT;  }  else  if(o  instanceof  JsonObject  ||  o  instanceof  JsonPrimitive)  {  return  JsonToken.BEGIN_OBJECT;  }  else  if(o  instanceof  JsonObject  ||  o  instanceof  JsonPrimitive)  {  return  JsonToken.BEGIN_OBJECT  [CE]  ';'  expected  [FE]                  ArrayIndexOutOfBoundsException    [CONTEXT]      if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }      [BUGGY]  }    else    if(o    instanceof    JsonObject    ||    o    instanceof    JsonPrimitive)    {    return  JsonToken.BEGIN_OBJECT;  }  else  if(o  instanceof  JsonObject  ||  o  instanceof  JsonPrimitive)  {  return  JsonToken.BEGIN_OBJECT;  }  else  if(o  instanceof  JsonObject  ||  o  instanceof  JsonPrimitive)  {  return  JsonToken.BEGIN_OBJECT  [BUGGY]      return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	replace	}        else        if(o        instanceof        JsonObject        ||        o        instanceof        JsonPrimitive)        {        return    JsonToken.BEGIN_OBJECT;    }  else  if(o  instanceof  JsonObject  ||  o  instanceof  JsonPrimitive)  {  return  JsonToken.BEGIN_OBJECT;  }  else  if(o  instanceof  JsonObject  ||  o  instanceof  JsonPrimitive)  {  return  JsonToken.BEGIN_OBJECT	  	non-compiled	[CE]  ';'  expected	165	None	add
374	[BUG]  [BUGGY]  }  else  if(o  instanceof  JsonObject  ||  o  instanceof  JsonLocal)  {  [CE]  cannot  find  symbol  [FE]          ArrayIndexOutOfBoundsException      [CONTEXT]      if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }      [BUGGY]  }  else  if(o  instanceof  JsonObject  ||  o  instanceof  JsonLocal)  {  [BUGGY]      return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	replace	}  else  if(o  instanceof  JsonObject  ||  o  instanceof  JsonLocal)  {	  }    else    if(o    instanceof    JsonObject    ||    o    instanceof    JsonArray)    {    else    if(o    instanceof    JsonObject    ||    o    instanceof    JsonArray)    {    	non-compiled	[CE]  cannot  find  symbol	24	None	replace
375	[BUG]  [BUGGY]  }  else  if(o  instanceof  JsonObject  ==  ||  isObject)  {  [CE]  illegal  start  of  expression  [FE]              ArrayIndexOutOfBoundsException      [CONTEXT]      if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }      [BUGGY]  }  else  if(o  instanceof  JsonObject  ==  ||  isObject)  {  [BUGGY]      return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	replace	}  else  if(o  instanceof  JsonObject  ==  ||  isObject)  {	  }    else    if(o    instanceof    JsonObject    ==    {    	non-compiled	[CE]  illegal  start  of  expression	31	None	replace
376	[BUG]  [BUGGY]  }  else  if(o  instanceof  JsonArray  {  [CE]  ')'  expected  [FE]                ArrayIndexOutOfBoundsException      [CONTEXT]      if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }      [BUGGY]  }  else  if(o  instanceof  JsonArray  {  [BUGGY]      return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	replace	}  else  if(o  instanceof  JsonArray  {	  }    else    if(o    instanceof    JsonObject    ==    {    	non-compiled	[CE]  ')'  expected	31	None	replace
377	[BUG]  [BUGGY]  [FE]  ArrayIndexOutOfBoundsException  [FE]          ArrayIndexOutOfBoundsException      [CONTEXT]      if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }      [BUGGY]  }  else  if(o  instanceof  JsonPrimitive  ||  o  instanceof  JsonObject)  {  [BUGGY]      return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	add	}  else  if(o  instanceof  JsonPrimitive  ||  o  instanceof  JsonObject)  {	  }    else    if(o    instanceof    JsonObject    ||    o    instanceof    JsonArray)    {    <    JsonObject>    push(iterator.next());    return    JsonToken.BEGIN_OBJECT;    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	232	2	replace
378	[BUG]  [BUGGY]  }  else  if(o  instanceof  JsonPrimitive  ||  o  instanceof  JsonObject)  {  [FE]  ArrayIndexOutOfBoundsException  [FE]          ArrayIndexOutOfBoundsException      [CONTEXT]      if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }      [BUGGY]  }  else  if(o  instanceof  JsonPrimitive  ||  o  instanceof  JsonObject)  {  [BUGGY]      return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	replace	}  else  if(o  instanceof  JsonPrimitive  ||  o  instanceof  JsonObject)  {	  }    else    if(o    instanceof    JsonObject    ||    o    instanceof    JsonArray)    {    <    JsonObject>    push(iterator.next());    return    JsonToken.BEGIN_OBJECT;    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	232	2	replace
379	[BUG]  [BUGGY]  }  else  if(!(o  instanceof  JsonString))  {  [CE]  cannot  find  symbol  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]      if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }      [BUGGY]  }  else  if(!(o  instanceof  JsonString))  {  [BUGGY]      return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	replace	}  else  if(!(o  instanceof  JsonString))  {	  }    else    if(!(o    instanceof    String))    {    	non-compiled	[CE]  cannot  find  symbol	64	None	replace
380	[BUG]  [BUGGY]  }  else  if(!(o  instanceof  String)&&  isObject)  {  [CE]  cannot  find  symbol  isObject  [FE]      ArrayIndexOutOfBoundsException    [CONTEXT]      if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }      [BUGGY]  }  else  if(!(o  instanceof  String)&&  isObject)  {  [BUGGY]      return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	replace	}  else  if(!(o  instanceof  String)&&  isObject)  {	  }    else    if(!(o    instanceof    String))    {    	non-compiled	[CE]  cannot  find  symbol  isObject	64	None	replace
381	[BUG]  [BUGGY]  [FE]  ArrayIndexOutOfBoundsException  [FE]                        ArrayIndexOutOfBoundsException      [CONTEXT]      if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }      [BUGGY]  }  else  if(o  instanceof  JsonObject  ||  o  instanceof  JsonNull  ||!(o  instanceof  JsonNull))  {  [BUGGY]      return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	add	}  else  if(o  instanceof  JsonObject  ||  o  instanceof  JsonNull  ||!(o  instanceof  JsonNull))  {	  }    else    if(o    instanceof    JsonObject    ||    o    instanceof    JsonNumber    ||!(o    instanceof    JsonNull))    {    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	127	2	replace
382	[BUG]  [BUGGY]  }  else  if(o  instanceof  JsonObject  ||  o  instanceof  JsonNull  ||!(o  instanceof  JsonNull))  {  [FE]  ArrayIndexOutOfBoundsException  [FE]                        ArrayIndexOutOfBoundsException      [CONTEXT]      if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }      [BUGGY]  }  else  if(o  instanceof  JsonObject  ||  o  instanceof  JsonNull  ||!(o  instanceof  JsonNull))  {  [BUGGY]      return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	replace	}  else  if(o  instanceof  JsonObject  ||  o  instanceof  JsonNull  ||!(o  instanceof  JsonNull))  {	  }    else    if(o    instanceof    JsonObject    ||    o    instanceof    JsonNumber    ||!(o    instanceof    JsonNull))    {    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	127	2	replace
383	[BUG]  [BUGGY]  }  else  if(o  instanceof  JsonObject  ||  o  instanceof  JsonNumber  ||  isObject(o))  {  [CE]  cannot  find  symbol  [FE]                          ArrayIndexOutOfBoundsException      [CONTEXT]      if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }      [BUGGY]  }  else  if(o  instanceof  JsonObject  ||  o  instanceof  JsonNumber  ||  isObject(o))  {  [BUGGY]      return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	replace	}  else  if(o  instanceof  JsonObject  ||  o  instanceof  JsonNumber  ||  isObject(o))  {	  }    else    if(o    instanceof    JsonObject    ||    o    instanceof    JsonNumber    ||!(o    instanceof    JsonNull))    {    	non-compiled	[CE]  cannot  find  symbol	127	None	replace
384	[BUG]  [BUGGY]  }  else  if(o  instanceof  JsonObject  ||  o.getClass()  instanceof  JsonNumber  ||!(o  instanceof  JsonNull))  {  [CE]  cannot  find  symbol  [FE]                            ArrayIndexOutOfBoundsException      [CONTEXT]      if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }      [BUGGY]  }  else  if(o  instanceof  JsonObject  ||  o.getClass()  instanceof  JsonNumber  ||!(o  instanceof  JsonNull))  {  [BUGGY]      return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	replace	}  else  if(o  instanceof  JsonObject  ||  o.getClass()  instanceof  JsonNumber  ||!(o  instanceof  JsonNull))  {	  }    else    if(o    instanceof    JsonObject    ||    o    instanceof    JsonNumber    ||!(o    instanceof    JsonNull))    {    	non-compiled	[CE]  cannot  find  symbol	127	None	replace
385	[BUG]  [BUGGY]  }  else  if(o  instanceof  JsonObject  ||  o  instanceof  JsonNumber  ||!(o  instanceof  JsonNull)&&  isObject)  {  [CE]  cannot  find  symbol  [FE]                              ArrayIndexOutOfBoundsException      [CONTEXT]      if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }      [BUGGY]  }  else  if(o  instanceof  JsonObject  ||  o  instanceof  JsonNumber  ||!(o  instanceof  JsonNull)&&  isObject)  {  [BUGGY]      return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	replace	}  else  if(o  instanceof  JsonObject  ||  o  instanceof  JsonNumber  ||!(o  instanceof  JsonNull)&&  isObject)  {	  }    else    if(o    instanceof    JsonObject    ||    o    instanceof    JsonNumber    ||!(o    instanceof    JsonNull))    {    	non-compiled	[CE]  cannot  find  symbol	127	None	replace
386	[BUG]  [BUGGY]  [FE]  ArrayIndexOutOfBoundsException  [FE]    AssertionError    [CONTEXT]      if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }      [BUGGY]  }  else  if(!(o  instanceof  JsonObject  &&  o  instanceof  Number))  {  [BUGGY]      return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	add	}  else  if(!(o  instanceof  JsonObject  &&  o  instanceof  Number))  {	  }    else    if(!(o    instanceof    JsonObject    ||    o    instanceof    Number))    {    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	257	2	replace
387	[BUG]  [BUGGY]  }  else  if(!(o  instanceof  JsonObject  &&  o  instanceof  Number))  {  [FE]  ArrayIndexOutOfBoundsException  [FE]    AssertionError    [CONTEXT]      if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }      [BUGGY]  }  else  if(!(o  instanceof  JsonObject  &&  o  instanceof  Number))  {  [BUGGY]      return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	replace	}  else  if(!(o  instanceof  JsonObject  &&  o  instanceof  Number))  {	  }    else    if(!(o    instanceof    JsonObject    ||    o    instanceof    Number))    {    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	257	2	replace
388	[BUG]  [BUGGY]  [FE]  ArrayIndexOutOfBoundsException  [FE]      AssertionError    [CONTEXT]      if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }      [BUGGY]  }  else  if(!(o  instanceof  JsonArray  ||  o  instanceof  Number))  {  [BUGGY]      return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	add	}  else  if(!(o  instanceof  JsonArray  ||  o  instanceof  Number))  {	  }    else    if(!(o    instanceof    JsonObject    ||    o    instanceof    Number))    {    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	257	2	replace
389	[BUG]  [BUGGY]  }  else  if(!(o  instanceof  JsonArray  ||  o  instanceof  Number))  {  [FE]  ArrayIndexOutOfBoundsException  [FE]      AssertionError    [CONTEXT]      if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }      [BUGGY]  }  else  if(!(o  instanceof  JsonArray  ||  o  instanceof  Number))  {  [BUGGY]      return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	replace	}  else  if(!(o  instanceof  JsonArray  ||  o  instanceof  Number))  {	  }    else    if(!(o    instanceof    JsonObject    ||    o    instanceof    Number))    {    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	257	2	replace
390	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]        AssertionError    [CONTEXT]      if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }      [BUGGY]  }  else  if(!(o  instanceof  JsonObject  ||  o  instanceof  Boolean  ||  o  instanceof  Character))  {  [BUGGY]      return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	add	}  else  if(!(o  instanceof  JsonObject  ||  o  instanceof  Boolean  ||  o  instanceof  Character))  {	  }    else    if(!(o    instanceof    JsonObject    ||    o    instanceof    Number))    {    	compilable	  [FE]  AssertionError  	257	2	replace
391	[BUG]  [BUGGY]  }  else  if(!(o  instanceof  JsonObject  ||  o  instanceof  Boolean  ||  o  instanceof  Character))  {  [FE]  AssertionError  [FE]        AssertionError    [CONTEXT]      if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }      [BUGGY]  }  else  if(!(o  instanceof  JsonObject  ||  o  instanceof  Boolean  ||  o  instanceof  Character))  {  [BUGGY]      return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	replace	}  else  if(!(o  instanceof  JsonObject  ||  o  instanceof  Boolean  ||  o  instanceof  Character))  {	  }    else    if(!(o    instanceof    JsonObject    ||    o    instanceof    Number))    {    	compilable	  [FE]  AssertionError  	257	2	replace
392	[BUG]  [BUGGY]  }  else  if(!(o  instanceof  JsonObject  ||  o  instanceof  Number)&&  isObject)  {  [CE]  cannot  find  symbol  isObject  [FE]          AssertionError    [CONTEXT]      if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }      [BUGGY]  }  else  if(!(o  instanceof  JsonObject  ||  o  instanceof  Number)&&  isObject)  {  [BUGGY]      return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	replace	}  else  if(!(o  instanceof  JsonObject  ||  o  instanceof  Number)&&  isObject)  {	  }    else    if(!(o    instanceof    JsonObject    ||    o    instanceof    Number))    {    	non-compiled	[CE]  cannot  find  symbol  isObject	257	None	replace
393	[BUG]  [BUGGY]  if(isObject)  {  push(iterator.next());  return  JsonToken.NAME;  }  [CE]  unreachable  statement  [FE]                            ArrayIndexOutOfBoundsException      [CONTEXT]      if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }      [BUGGY]  if(isObject)  {  push(iterator.next());  return  JsonToken.NAME;  }  [BUGGY]      return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	replace	if(isObject)  {  push(iterator.next());  return  JsonToken.NAME;  }	  if(o    instanceof    JsonArray)    {    if(isObject)    {    push(iterator.next());    return    JsonToken.NAME;    }    	non-compiled	[CE]  unreachable  statement	36	None	replace
394	[BUG]  [BUGGY]  peech(iterator.next());  return  JsonToken.NAME;  [CE]  cannot  find  symbol  [FE]                              ArrayIndexOutOfBoundsException      [CONTEXT]      if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }      [BUGGY]  peech(iterator.next());  return  JsonToken.NAME;  [BUGGY]      return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	replace	peech(iterator.next());  return  JsonToken.NAME;	  if(o    instanceof    JsonArray)    {    if(isObject)    {    push(iterator.next());    return    JsonToken.NAME;    }    	non-compiled	[CE]  cannot  find  symbol	36	None	replace
395	[BUG]  [BUGGY]  pull(iterator.next());  return  JsonToken.NAME;  [CE]  cannot  find  symbol  [FE]                                ArrayIndexOutOfBoundsException      [CONTEXT]      if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }      [BUGGY]  pull(iterator.next());  return  JsonToken.NAME;  [BUGGY]      return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	replace	pull(iterator.next());  return  JsonToken.NAME;	  if(o    instanceof    JsonArray)    {    if(isObject)    {    push(iterator.next());    return    JsonToken.NAME;    }    	non-compiled	[CE]  cannot  find  symbol	36	None	replace
396	[BUG]  [BUGGY]  parent  ==  ((  JsonPrimitive)o).getParent();  [CE]  not  a  statement  [FE]                                  ArrayIndexOutOfBoundsException      [CONTEXT]      if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }      [BUGGY]  parent  ==  ((  JsonPrimitive)o).getParent();  [BUGGY]      return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	replace	parent  ==  ((  JsonPrimitive)o).getParent();	  if(o    instanceof    JsonArray)    {    if(isObject)    {    push(iterator.next());    return    JsonToken.NAME;    }    	non-compiled	[CE]  not  a  statement	36	None	replace
397	[BUG]  [BUGGY]  parent!=  null  &&  parent  ==  iterator.next();  [CE]  not  a  statement  [FE]                                    ArrayIndexOutOfBoundsException      [CONTEXT]      if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }      [BUGGY]  parent!=  null  &&  parent  ==  iterator.next();  [BUGGY]      return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	replace	parent!=  null  &&  parent  ==  iterator.next();	  if(o    instanceof    JsonArray)    {    if(isObject)    {    push(iterator.next());    return    JsonToken.NAME;    }    	non-compiled	[CE]  not  a  statement	36	None	replace
398	[BUG]  [BUGGY]  parent  ==  ((  JsonPrimitive)o).getValue();  [CE]  not  a  statement  [FE]                                      ArrayIndexOutOfBoundsException      [CONTEXT]      if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }      [BUGGY]  parent  ==  ((  JsonPrimitive)o).getValue();  [BUGGY]      return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	replace	parent  ==  ((  JsonPrimitive)o).getValue();	  if(o    instanceof    JsonArray)    {    if(isObject)    {    push(iterator.next());    return    JsonToken.NAME;    }    	non-compiled	[CE]  not  a  statement	36	None	replace
399	[BUG]  [BUGGY]  }  else  if(o  instanceof  JsonObject  ||!(o  instanceof  JsonNull  &&!(o  instanceof  JsonNull  &&!(o  instanceof  JsonNull  &&!(o  instanceof  JsonNull  &&!(o  instanceof  JsonNull)  [CE]  ')'  expected  [FE]        AssertionError      [CONTEXT]      if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }      [BUGGY]  }  else  if(o  instanceof  JsonObject  ||!(o  instanceof  JsonNull  &&!(o  instanceof  JsonNull  &&!(o  instanceof  JsonNull  &&!(o  instanceof  JsonNull  &&!(o  instanceof  JsonNull)  [BUGGY]      return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	replace	}  else  if(o  instanceof  JsonObject  ||!(o  instanceof  JsonNull  &&!(o  instanceof  JsonNull  &&!(o  instanceof  JsonNull  &&!(o  instanceof  JsonNull  &&!(o  instanceof  JsonNull)	  }    else    if(o    instanceof    JsonNull    ||!(o    instanceof    JsonNull    &&!(o    instanceof    JsonNull    &&!(o    instanceof    JsonNull    &&!(o    instanceof    JsonNull)))    {    	non-compiled	[CE]  ')'  expected	142	None	replace
400	[BUG]  [BUGGY]  }  else  if(o  instanceof  JsonArray  ||  o  instanceof  JsonNull  ||!(o  instanceof  JsonNull  &&!(o  instanceof  JsonNull  &&!(o  instanceof  JsonNull  &&!(o  instanceof  JsonNull  &&  [CE]  illegal  start  of  expression  [FE]          AssertionError      [CONTEXT]      if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }      [BUGGY]  }  else  if(o  instanceof  JsonArray  ||  o  instanceof  JsonNull  ||!(o  instanceof  JsonNull  &&!(o  instanceof  JsonNull  &&!(o  instanceof  JsonNull  &&!(o  instanceof  JsonNull  &&  [BUGGY]      return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	replace	}  else  if(o  instanceof  JsonArray  ||  o  instanceof  JsonNull  ||!(o  instanceof  JsonNull  &&!(o  instanceof  JsonNull  &&!(o  instanceof  JsonNull  &&!(o  instanceof  JsonNull  &&	  }    else    if(o    instanceof    JsonNull    ||!(o    instanceof    JsonNull    &&!(o    instanceof    JsonNull    &&!(o    instanceof    JsonNull    &&!(o    instanceof    JsonNull)))    {    	non-compiled	[CE]  illegal  start  of  expression	142	None	replace
401	[BUG]  [BUGGY]  }  else  if(o  instanceof  JsonObject  ||!(o  instanceof  JsonNull  &&!(o  instanceof  JsonNull  &&!(o  instanceof  JsonNull  &&!(o  instanceof  JsonNull)))  {  [CE]  [FE]            AssertionError      [CONTEXT]      if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }      [BUGGY]  }  else  if(o  instanceof  JsonObject  ||!(o  instanceof  JsonNull  &&!(o  instanceof  JsonNull  &&!(o  instanceof  JsonNull  &&!(o  instanceof  JsonNull)))  {  [BUGGY]      return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	replace	}  else  if(o  instanceof  JsonObject  ||!(o  instanceof  JsonNull  &&!(o  instanceof  JsonNull  &&!(o  instanceof  JsonNull  &&!(o  instanceof  JsonNull)))  {	  }    else    if(o    instanceof    JsonNull    ||!(o    instanceof    JsonNull    &&!(o    instanceof    JsonNull    &&!(o    instanceof    JsonNull    &&!(o    instanceof    JsonNull)))    {    	non-compiled	[CE]  	142	None	replace
402	[BUG]  [BUGGY]  }  else  if(o  instanceof  JsonObject  ||!(o  instanceof  JsonNull  &&!(o  instanceof  JsonNull  &&!(o  instanceof  JsonNull  &&!(o  instanceof  JsonNull  &&!(o  instanceof  JsonNull  [CE]  ')'  expected  [FE]              AssertionError      [CONTEXT]      if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }      [BUGGY]  }  else  if(o  instanceof  JsonObject  ||!(o  instanceof  JsonNull  &&!(o  instanceof  JsonNull  &&!(o  instanceof  JsonNull  &&!(o  instanceof  JsonNull  &&!(o  instanceof  JsonNull  [BUGGY]      return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	replace	}  else  if(o  instanceof  JsonObject  ||!(o  instanceof  JsonNull  &&!(o  instanceof  JsonNull  &&!(o  instanceof  JsonNull  &&!(o  instanceof  JsonNull  &&!(o  instanceof  JsonNull	  }    else    if(o    instanceof    JsonNull    ||!(o    instanceof    JsonNull    &&!(o    instanceof    JsonNull    &&!(o    instanceof    JsonNull    &&!(o    instanceof    JsonNull)))    {    	non-compiled	[CE]  ')'  expected	142	None	replace
403	[BUG]  [BUGGY]  }  else  if(o  instanceof  String  ||  o  instanceof  JsonNull  ||!(o  instanceof  JsonNull  &&!(o  instanceof  JsonNull  &&!(o  instanceof  JsonNull  &&!(o  instanceof  JsonNull  &&!  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }      [BUGGY]  }  else  if(o  instanceof  String  ||  o  instanceof  JsonNull  ||!(o  instanceof  JsonNull  &&!(o  instanceof  JsonNull  &&!(o  instanceof  JsonNull  &&!(o  instanceof  JsonNull  &&!  [BUGGY]      return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	replace	}  else  if(o  instanceof  String  ||  o  instanceof  JsonNull  ||!(o  instanceof  JsonNull  &&!(o  instanceof  JsonNull  &&!(o  instanceof  JsonNull  &&!(o  instanceof  JsonNull  &&!	  }    else    if(o    instanceof    JsonNull    ||!(o    instanceof    JsonNull    &&!(o    instanceof    JsonNull    &&!(o    instanceof    JsonNull    &&!(o    instanceof    JsonNull)))    {    	non-compiled	[CE]  illegal  start  of  expression	142	None	replace
404	[BUG]  [BUGGY]  }  else  if(o  instanceof  JsonObject  ||!(o  instanceof  JsonNull  &&!(o  instanceof  JsonNull  &&!(o  instanceof  JsonNull  &&!(o  instanceof  JsonNull  &&!(o  instanceof  JsonNull)))  {  [CE]  [FE]                  AssertionError      [CONTEXT]      if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }      [BUGGY]  }  else  if(o  instanceof  JsonObject  ||!(o  instanceof  JsonNull  &&!(o  instanceof  JsonNull  &&!(o  instanceof  JsonNull  &&!(o  instanceof  JsonNull  &&!(o  instanceof  JsonNull)))  {  [BUGGY]      return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	replace	}  else  if(o  instanceof  JsonObject  ||!(o  instanceof  JsonNull  &&!(o  instanceof  JsonNull  &&!(o  instanceof  JsonNull  &&!(o  instanceof  JsonNull  &&!(o  instanceof  JsonNull)))  {	  }    else    if(o    instanceof    JsonNull    ||!(o    instanceof    JsonNull    &&!(o    instanceof    JsonNull    &&!(o    instanceof    JsonNull    &&!(o    instanceof    JsonNull)))    {    	non-compiled	[CE]  	142	None	replace
405	[BUG]  [BUGGY]  }  else  if(o  instanceof  JsonObject  >>  0)  {  [CE]  cannot  find  symbol  JsonObject  [FE]                  ArrayIndexOutOfBoundsException      [CONTEXT]      if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }      [BUGGY]  }  else  if(o  instanceof  JsonObject  >>  0)  {  [BUGGY]      return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	replace	}  else  if(o  instanceof  JsonObject  >>  0)  {	  }    else    if(o    instanceof    JsonObject    <    =    0)    {    	non-compiled	[CE]  cannot  find  symbol  JsonObject	212	None	replace
406	[BUG]  [BUGGY]  [FE]  ArrayIndexOutOfBoundsException  [FE]              AssertionError      [CONTEXT]      if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }      [BUGGY]  }  else  if(o  instanceof  JsonObject  ||!(o  instanceof  JsonArray))  {  [BUGGY]      return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	add	}  else  if(o  instanceof  JsonObject  ||!(o  instanceof  JsonArray))  {	  }    else    if(o    instanceof    JsonArray)    {    }    else    if(o    instanceof    JsonArray    ||    o    instanceof    JsonObject)    {    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	101	2	replace
407	[BUG]  [BUGGY]  }  else  if(o  instanceof  JsonObject  ||!(o  instanceof  JsonArray))  {  [FE]  ArrayIndexOutOfBoundsException  [FE]              AssertionError      [CONTEXT]      if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }      [BUGGY]  }  else  if(o  instanceof  JsonObject  ||!(o  instanceof  JsonArray))  {  [BUGGY]      return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	replace	}  else  if(o  instanceof  JsonObject  ||!(o  instanceof  JsonArray))  {	  }    else    if(o    instanceof    JsonArray)    {    }    else    if(o    instanceof    JsonArray    ||    o    instanceof    JsonObject)    {    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	101	2	replace
408	[BUG]  [BUGGY]  }  else  if(o  instanceof  JsonObject  &&  o  instanceof  String)  {  ArrayIndexOutOfBoundsException  e  =  new  ArrayIndexOutOfBoundsException(iterator.next());  [CE]  cannot  find  symbol  iterator  [FE]          ArrayIndexOutOfBoundsException      [CONTEXT]      if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }      [BUGGY]  }  else  if(o  instanceof  JsonObject  &&  o  instanceof  String)  {  ArrayIndexOutOfBoundsException  e  =  new  ArrayIndexOutOfBoundsException(iterator.next());  [BUGGY]      return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	replace	}  else  if(o  instanceof  JsonObject  &&  o  instanceof  String)  {  ArrayIndexOutOfBoundsException  e  =  new  ArrayIndexOutOfBoundsException(iterator.next());	  }    else    if(o    instanceof    JsonObject    ||    o    instanceof    String)    {    ArrayIndexOutOfBoundsException    e    =    new    ArrayIndexOutOfBoundsException(iterator.next());    	non-compiled	[CE]  cannot  find  symbol  iterator	149	None	replace
409	[BUG]  [BUGGY]  }  else  if(o  instanceof  JsonObject)  {  ArrayIndexOutOfBoundsException  e  =  new  ArrayIndexOutOfBoundsException(iterator.next());  [CE]  cannot  find  symbol  iterator  [FE]            ArrayIndexOutOfBoundsException      [CONTEXT]      if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }      [BUGGY]  }  else  if(o  instanceof  JsonObject)  {  ArrayIndexOutOfBoundsException  e  =  new  ArrayIndexOutOfBoundsException(iterator.next());  [BUGGY]      return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	replace	}  else  if(o  instanceof  JsonObject)  {  ArrayIndexOutOfBoundsException  e  =  new  ArrayIndexOutOfBoundsException(iterator.next());	  }    else    if(o    instanceof    JsonObject    ||    o    instanceof    String)    {    ArrayIndexOutOfBoundsException    e    =    new    ArrayIndexOutOfBoundsException(iterator.next());    	non-compiled	[CE]  cannot  find  symbol  iterator	149	None	replace
410	[BUG]  [BUGGY]  }  else  if(o  instanceof  JsonObject  ||  o  instanceof  String)  {  ArrayIndexOutOfBoundsException  e  =  new  ArrayIndexOutOfBoundsException(iterator.getClass());  [CE]  cannot  find  symbol  iterator  [FE]              ArrayIndexOutOfBoundsException      [CONTEXT]      if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }      [BUGGY]  }  else  if(o  instanceof  JsonObject  ||  o  instanceof  String)  {  ArrayIndexOutOfBoundsException  e  =  new  ArrayIndexOutOfBoundsException(iterator.getClass());  [BUGGY]      return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	replace	}  else  if(o  instanceof  JsonObject  ||  o  instanceof  String)  {  ArrayIndexOutOfBoundsException  e  =  new  ArrayIndexOutOfBoundsException(iterator.getClass());	  }    else    if(o    instanceof    JsonObject    ||    o    instanceof    String)    {    ArrayIndexOutOfBoundsException    e    =    new    ArrayIndexOutOfBoundsException(iterator.next());    	non-compiled	[CE]  cannot  find  symbol  iterator	149	None	replace
411	[BUG]  [BUGGY]  }  else  if(o  instanceof  JsonObject  ||  o  instanceof  String)  {  ArrayIndexOutOfBoundsException  e  =  new  ArrayIndexOutOfBoundsException(primitive.next());  [CE]  cannot  find  symbol  primitive  [FE]                ArrayIndexOutOfBoundsException      [CONTEXT]      if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }      [BUGGY]  }  else  if(o  instanceof  JsonObject  ||  o  instanceof  String)  {  ArrayIndexOutOfBoundsException  e  =  new  ArrayIndexOutOfBoundsException(primitive.next());  [BUGGY]      return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	replace	}  else  if(o  instanceof  JsonObject  ||  o  instanceof  String)  {  ArrayIndexOutOfBoundsException  e  =  new  ArrayIndexOutOfBoundsException(primitive.next());	  }    else    if(o    instanceof    JsonObject    ||    o    instanceof    String)    {    ArrayIndexOutOfBoundsException    e    =    new    ArrayIndexOutOfBoundsException(iterator.next());    	non-compiled	[CE]  cannot  find  symbol  primitive	149	None	replace
412	[BUG]  [BUGGY]  }  else  if(o  instanceof  JsonObject  ||  o  instanceof  String)  {  ArrayIndexOutOfBoundsException  e  =  new  ArrayIndexOutOfBoundsException(iterator.getCurrentToken());  [CE]  cannot  find  symbol  iterator  [FE]                  ArrayIndexOutOfBoundsException      [CONTEXT]      if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }      [BUGGY]  }  else  if(o  instanceof  JsonObject  ||  o  instanceof  String)  {  ArrayIndexOutOfBoundsException  e  =  new  ArrayIndexOutOfBoundsException(iterator.getCurrentToken());  [BUGGY]      return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	replace	}  else  if(o  instanceof  JsonObject  ||  o  instanceof  String)  {  ArrayIndexOutOfBoundsException  e  =  new  ArrayIndexOutOfBoundsException(iterator.getCurrentToken());	  }    else    if(o    instanceof    JsonObject    ||    o    instanceof    String)    {    ArrayIndexOutOfBoundsException    e    =    new    ArrayIndexOutOfBoundsException(iterator.next());    	non-compiled	[CE]  cannot  find  symbol  iterator	149	None	replace
413	[BUG]  [BUGGY]  }  else  if(o  instanceof  JsonObject  ||  o  instanceof  String)  {  ArrayIndexOutOfBoundsException  e  =  new  ArrayIndexOutOfBoundsException(iterator.getMessage());  [CE]  cannot  find  symbol  iterator  [FE]                    ArrayIndexOutOfBoundsException      [CONTEXT]      if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }      [BUGGY]  }  else  if(o  instanceof  JsonObject  ||  o  instanceof  String)  {  ArrayIndexOutOfBoundsException  e  =  new  ArrayIndexOutOfBoundsException(iterator.getMessage());  [BUGGY]      return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	replace	}  else  if(o  instanceof  JsonObject  ||  o  instanceof  String)  {  ArrayIndexOutOfBoundsException  e  =  new  ArrayIndexOutOfBoundsException(iterator.getMessage());	  }    else    if(o    instanceof    JsonObject    ||    o    instanceof    String)    {    ArrayIndexOutOfBoundsException    e    =    new    ArrayIndexOutOfBoundsException(iterator.next());    	non-compiled	[CE]  cannot  find  symbol  iterator	149	None	replace
414	[BUG]  [BUGGY]  }  else  if(o  instanceof  JsonObject  &&  o  instanceof  JsonPrimitive)  {  ArrayIndexOutOfBoundsException  e  =  new  ArrayIndexOutOfBoundsException(iterator.next());  [CE]  cannot  find  symbol  iterator  [FE]              ArrayIndexOutOfBoundsException      [CONTEXT]      if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }      [BUGGY]  }  else  if(o  instanceof  JsonObject  &&  o  instanceof  JsonPrimitive)  {  ArrayIndexOutOfBoundsException  e  =  new  ArrayIndexOutOfBoundsException(iterator.next());  [BUGGY]      return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	replace	}  else  if(o  instanceof  JsonObject  &&  o  instanceof  JsonPrimitive)  {  ArrayIndexOutOfBoundsException  e  =  new  ArrayIndexOutOfBoundsException(iterator.next());	  }    else    if(o    instanceof    JsonObject    ||    o    instanceof    JsonPrimitive)    {    ArrayIndexOutOfBoundsException    e    =    new    ArrayIndexOutOfBoundsException(iterator.next());    	non-compiled	[CE]  cannot  find  symbol  iterator	169	None	replace
415	[BUG]  [BUGGY]  }  else  if(o  instanceof  JsonObject  ||  o  instanceof  JsonPrimitive)  {  ArrayIndexOutOfBoundsException  e  =  new  ArrayIndexOutOfBoundsException(primitive.next());  [CE]  cannot  find  symbol  primitive  [FE]                ArrayIndexOutOfBoundsException      [CONTEXT]      if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }      [BUGGY]  }  else  if(o  instanceof  JsonObject  ||  o  instanceof  JsonPrimitive)  {  ArrayIndexOutOfBoundsException  e  =  new  ArrayIndexOutOfBoundsException(primitive.next());  [BUGGY]      return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	replace	}  else  if(o  instanceof  JsonObject  ||  o  instanceof  JsonPrimitive)  {  ArrayIndexOutOfBoundsException  e  =  new  ArrayIndexOutOfBoundsException(primitive.next());	  }    else    if(o    instanceof    JsonObject    ||    o    instanceof    JsonPrimitive)    {    ArrayIndexOutOfBoundsException    e    =    new    ArrayIndexOutOfBoundsException(iterator.next());    	non-compiled	[CE]  cannot  find  symbol  primitive	169	None	replace
416	[BUG]  [BUGGY]  }  else  if(o  instanceof  JsonObject  ||  o  instanceof  JsonPrimitive)  {  ArrayIndexOutOfBoundsException  e  =  new  ArrayIndexOutOfBoundsException(iterator.getClass());  [CE]  cannot  find  symbol  iterator  [FE]                  ArrayIndexOutOfBoundsException      [CONTEXT]      if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }      [BUGGY]  }  else  if(o  instanceof  JsonObject  ||  o  instanceof  JsonPrimitive)  {  ArrayIndexOutOfBoundsException  e  =  new  ArrayIndexOutOfBoundsException(iterator.getClass());  [BUGGY]      return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	replace	}  else  if(o  instanceof  JsonObject  ||  o  instanceof  JsonPrimitive)  {  ArrayIndexOutOfBoundsException  e  =  new  ArrayIndexOutOfBoundsException(iterator.getClass());	  }    else    if(o    instanceof    JsonObject    ||    o    instanceof    JsonPrimitive)    {    ArrayIndexOutOfBoundsException    e    =    new    ArrayIndexOutOfBoundsException(iterator.next());    	non-compiled	[CE]  cannot  find  symbol  iterator	169	None	replace
417	[BUG]  [BUGGY]  }  else  if(o  instanceof  JsonObject  ||  o  instanceof  JsonPrimitive)  {  ArrayIndexOutOfBoundsException  e  =  new  ArrayIndexOutOfBoundsException(item.next());  [CE]  cannot  find  symbol  item  [FE]                    ArrayIndexOutOfBoundsException      [CONTEXT]      if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }      [BUGGY]  }  else  if(o  instanceof  JsonObject  ||  o  instanceof  JsonPrimitive)  {  ArrayIndexOutOfBoundsException  e  =  new  ArrayIndexOutOfBoundsException(item.next());  [BUGGY]      return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	replace	}  else  if(o  instanceof  JsonObject  ||  o  instanceof  JsonPrimitive)  {  ArrayIndexOutOfBoundsException  e  =  new  ArrayIndexOutOfBoundsException(item.next());	  }    else    if(o    instanceof    JsonObject    ||    o    instanceof    JsonPrimitive)    {    ArrayIndexOutOfBoundsException    e    =    new    ArrayIndexOutOfBoundsException(iterator.next());    	non-compiled	[CE]  cannot  find  symbol  item	169	None	replace
418	[BUG]  [BUGGY]  }  else  if(o  instanceof  JsonObject  ||  o  instanceof  JsonPrimitive)  {  ArrayIndexOutOfBoundsException  e  =  new  ArrayIndexOutOfBoundsException(iterator.getCurrentToken());  [CE]  cannot  find  symbol  iterator  [FE]                      ArrayIndexOutOfBoundsException      [CONTEXT]      if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }      [BUGGY]  }  else  if(o  instanceof  JsonObject  ||  o  instanceof  JsonPrimitive)  {  ArrayIndexOutOfBoundsException  e  =  new  ArrayIndexOutOfBoundsException(iterator.getCurrentToken());  [BUGGY]      return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	replace	}  else  if(o  instanceof  JsonObject  ||  o  instanceof  JsonPrimitive)  {  ArrayIndexOutOfBoundsException  e  =  new  ArrayIndexOutOfBoundsException(iterator.getCurrentToken());	  }    else    if(o    instanceof    JsonObject    ||    o    instanceof    JsonPrimitive)    {    ArrayIndexOutOfBoundsException    e    =    new    ArrayIndexOutOfBoundsException(iterator.next());    	non-compiled	[CE]  cannot  find  symbol  iterator	169	None	replace
419	[BUG]  [BUGGY]  [FE]  ArrayIndexOutOfBoundsException  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]      if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }      [BUGGY]  }  else  if(o  instanceof  JsonArray  ||!(o  instanceof  JsonNull  &&!(o  instanceof  JsonNull)))  {  [BUGGY]      return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	add	}  else  if(o  instanceof  JsonArray  ||!(o  instanceof  JsonNull  &&!(o  instanceof  JsonNull)))  {	  }    else    if(o    instanceof    JsonNull    ||!(o    instanceof    JsonNull    &&!(o    instanceof    JsonNull)))    {    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	4	2	replace
420	[BUG]  [BUGGY]  }  else  if(o  instanceof  JsonArray  ||!(o  instanceof  JsonNull  &&!(o  instanceof  JsonNull)))  {  [FE]  ArrayIndexOutOfBoundsException  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]      if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }      [BUGGY]  }  else  if(o  instanceof  JsonArray  ||!(o  instanceof  JsonNull  &&!(o  instanceof  JsonNull)))  {  [BUGGY]      return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	replace	}  else  if(o  instanceof  JsonArray  ||!(o  instanceof  JsonNull  &&!(o  instanceof  JsonNull)))  {	  }    else    if(o    instanceof    JsonNull    ||!(o    instanceof    JsonNull    &&!(o    instanceof    JsonNull)))    {    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	4	2	replace
421	[BUG]  [BUGGY]  [FE]  ArrayIndexOutOfBoundsException  [FE]      ArrayIndexOutOfBoundsException    [CONTEXT]      if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }      [BUGGY]  }  else  if(o  instanceof  JsonObject  ||!(o  instanceof  JsonNull  &&!(o  instanceof  JsonNull)))  {  [BUGGY]      return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	add	}  else  if(o  instanceof  JsonObject  ||!(o  instanceof  JsonNull  &&!(o  instanceof  JsonNull)))  {	  }    else    if(o    instanceof    JsonNull    ||!(o    instanceof    JsonNull    &&!(o    instanceof    JsonNull)))    {    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	4	2	replace
422	[BUG]  [BUGGY]  }  else  if(o  instanceof  JsonObject  ||!(o  instanceof  JsonNull  &&!(o  instanceof  JsonNull)))  {  [FE]  ArrayIndexOutOfBoundsException  [FE]      ArrayIndexOutOfBoundsException    [CONTEXT]      if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }      [BUGGY]  }  else  if(o  instanceof  JsonObject  ||!(o  instanceof  JsonNull  &&!(o  instanceof  JsonNull)))  {  [BUGGY]      return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	replace	}  else  if(o  instanceof  JsonObject  ||!(o  instanceof  JsonNull  &&!(o  instanceof  JsonNull)))  {	  }    else    if(o    instanceof    JsonNull    ||!(o    instanceof    JsonNull    &&!(o    instanceof    JsonNull)))    {    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	4	2	replace
423	[BUG]  [BUGGY]  [FE]  ArrayIndexOutOfBoundsException  [FE]        ArrayIndexOutOfBoundsException    [CONTEXT]      if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }      [BUGGY]  }  else  if(o  instanceof  String  ||  o  instanceof  JsonNull  ||!(o  instanceof  JsonNull  &&!(o  instanceof  JsonNull)))  {  [BUGGY]      return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	add	}  else  if(o  instanceof  String  ||  o  instanceof  JsonNull  ||!(o  instanceof  JsonNull  &&!(o  instanceof  JsonNull)))  {	  }    else    if(o    instanceof    JsonNull    ||!(o    instanceof    JsonNull    &&!(o    instanceof    JsonNull)))    {    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	4	2	replace
424	[BUG]  [BUGGY]  }  else  if(o  instanceof  String  ||  o  instanceof  JsonNull  ||!(o  instanceof  JsonNull  &&!(o  instanceof  JsonNull)))  {  [FE]  ArrayIndexOutOfBoundsException  [FE]        ArrayIndexOutOfBoundsException    [CONTEXT]      if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }      [BUGGY]  }  else  if(o  instanceof  String  ||  o  instanceof  JsonNull  ||!(o  instanceof  JsonNull  &&!(o  instanceof  JsonNull)))  {  [BUGGY]      return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	replace	}  else  if(o  instanceof  String  ||  o  instanceof  JsonNull  ||!(o  instanceof  JsonNull  &&!(o  instanceof  JsonNull)))  {	  }    else    if(o    instanceof    JsonNull    ||!(o    instanceof    JsonNull    &&!(o    instanceof    JsonNull)))    {    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	4	2	replace
425	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]          ArrayIndexOutOfBoundsException    [CONTEXT]      if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }      [BUGGY]  }  else  if(o  instanceof  JsonNull  &&!(o  instanceof  JsonNull  &&!(o  instanceof  JsonNull)))  {  [BUGGY]      return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	add	}  else  if(o  instanceof  JsonNull  &&!(o  instanceof  JsonNull  &&!(o  instanceof  JsonNull)))  {	  }    else    if(o    instanceof    JsonNull    ||!(o    instanceof    JsonNull    &&!(o    instanceof    JsonNull)))    {    	compilable	  [FE]  AssertionError  	4	2	replace
426	[BUG]  [BUGGY]  }  else  if(o  instanceof  JsonNull  &&!(o  instanceof  JsonNull  &&!(o  instanceof  JsonNull)))  {  [FE]  AssertionError  [FE]          ArrayIndexOutOfBoundsException    [CONTEXT]      if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }      [BUGGY]  }  else  if(o  instanceof  JsonNull  &&!(o  instanceof  JsonNull  &&!(o  instanceof  JsonNull)))  {  [BUGGY]      return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	replace	}  else  if(o  instanceof  JsonNull  &&!(o  instanceof  JsonNull  &&!(o  instanceof  JsonNull)))  {	  }    else    if(o    instanceof    JsonNull    ||!(o    instanceof    JsonNull    &&!(o    instanceof    JsonNull)))    {    	compilable	  [FE]  AssertionError  	4	2	replace
427	[BUG]  [BUGGY]  [FE]  ArrayIndexOutOfBoundsException  [FE]            ArrayIndexOutOfBoundsException    [CONTEXT]      if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }      [BUGGY]  }  else  if(o  instanceof  String  ||!(o  instanceof  JsonNull  &&!(o  instanceof  JsonNull)))  {  [BUGGY]      return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	add	}  else  if(o  instanceof  String  ||!(o  instanceof  JsonNull  &&!(o  instanceof  JsonNull)))  {	  }    else    if(o    instanceof    JsonNull    ||!(o    instanceof    JsonNull    &&!(o    instanceof    JsonNull)))    {    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	4	2	replace
428	[BUG]  [BUGGY]  }  else  if(o  instanceof  String  ||!(o  instanceof  JsonNull  &&!(o  instanceof  JsonNull)))  {  [FE]  ArrayIndexOutOfBoundsException  [FE]            ArrayIndexOutOfBoundsException    [CONTEXT]      if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }      [BUGGY]  }  else  if(o  instanceof  String  ||!(o  instanceof  JsonNull  &&!(o  instanceof  JsonNull)))  {  [BUGGY]      return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	replace	}  else  if(o  instanceof  String  ||!(o  instanceof  JsonNull  &&!(o  instanceof  JsonNull)))  {	  }    else    if(o    instanceof    JsonNull    ||!(o    instanceof    JsonNull    &&!(o    instanceof    JsonNull)))    {    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	4	2	replace
429	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]              ArrayIndexOutOfBoundsException    [CONTEXT]      if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }      [BUGGY]  }  else  if(o  instanceof  JsonNull  ||!(o  instanceof  JsonNull  ||!(o  instanceof  JsonNull)))  {  [BUGGY]      return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	add	}  else  if(o  instanceof  JsonNull  ||!(o  instanceof  JsonNull  ||!(o  instanceof  JsonNull)))  {	  }    else    if(o    instanceof    JsonNull    ||!(o    instanceof    JsonNull    &&!(o    instanceof    JsonNull)))    {    	compilable	  [FE]  AssertionError  	4	2	replace
430	[BUG]  [BUGGY]  }  else  if(o  instanceof  JsonNull  ||!(o  instanceof  JsonNull  ||!(o  instanceof  JsonNull)))  {  [FE]  AssertionError  [FE]              ArrayIndexOutOfBoundsException    [CONTEXT]      if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }      [BUGGY]  }  else  if(o  instanceof  JsonNull  ||!(o  instanceof  JsonNull  ||!(o  instanceof  JsonNull)))  {  [BUGGY]      return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	replace	}  else  if(o  instanceof  JsonNull  ||!(o  instanceof  JsonNull  ||!(o  instanceof  JsonNull)))  {	  }    else    if(o    instanceof    JsonNull    ||!(o    instanceof    JsonNull    &&!(o    instanceof    JsonNull)))    {    	compilable	  [FE]  AssertionError  	4	2	replace
431	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]      if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }      [BUGGY]  }  else  if(o  instanceof  JsonArray  &&  o  instanceof  JsonObject)  {  [BUGGY]      return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	add	}  else  if(o  instanceof  JsonArray  &&  o  instanceof  JsonObject)  {	  }    else    if(o    instanceof    JsonArray    ||    o    instanceof    JsonObject)    {    	compilable	  [FE]  AssertionError  	164	2	replace
432	[BUG]  [BUGGY]  }  else  if(o  instanceof  JsonArray  &&  o  instanceof  JsonObject)  {  [FE]  AssertionError  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]      if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }      [BUGGY]  }  else  if(o  instanceof  JsonArray  &&  o  instanceof  JsonObject)  {  [BUGGY]      return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	replace	}  else  if(o  instanceof  JsonArray  &&  o  instanceof  JsonObject)  {	  }    else    if(o    instanceof    JsonArray    ||    o    instanceof    JsonObject)    {    	compilable	  [FE]  AssertionError  	164	2	replace
433	[BUG]  [BUGGY]  }  else  if(!(o  instanceof  JsonPrimitive))  {  ArrayIndexOutOfBoundsException  e  =(ArrayIndexOutOfBoundsException)iterator.next();  [CE]  cannot  find  symbol  iterator  [FE]        ArrayIndexOutOfBoundsException      [CONTEXT]      if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }      [BUGGY]  }  else  if(!(o  instanceof  JsonPrimitive))  {  ArrayIndexOutOfBoundsException  e  =(ArrayIndexOutOfBoundsException)iterator.next();  [BUGGY]      return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	replace	}  else  if(!(o  instanceof  JsonPrimitive))  {  ArrayIndexOutOfBoundsException  e  =(ArrayIndexOutOfBoundsException)iterator.next();	  }    else    if(!(o    instanceof    JsonArray))    {    ArrayIndexOutOfBoundsException    e    =(ArrayIndexOutOfBoundsException)iterator.next();    	non-compiled	[CE]  cannot  find  symbol  iterator	131	None	replace
434	[BUG]  [BUGGY]  }  else  if(!(o  instanceof  JsonNull))  {  ArrayIndexOutOfBoundsException  e  =(ArrayIndexOutOfBoundsException)iterator.next();  [CE]  cannot  find  symbol  iterator  [FE]          ArrayIndexOutOfBoundsException      [CONTEXT]      if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }      [BUGGY]  }  else  if(!(o  instanceof  JsonNull))  {  ArrayIndexOutOfBoundsException  e  =(ArrayIndexOutOfBoundsException)iterator.next();  [BUGGY]      return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	replace	}  else  if(!(o  instanceof  JsonNull))  {  ArrayIndexOutOfBoundsException  e  =(ArrayIndexOutOfBoundsException)iterator.next();	  }    else    if(!(o    instanceof    JsonArray))    {    ArrayIndexOutOfBoundsException    e    =(ArrayIndexOutOfBoundsException)iterator.next();    	non-compiled	[CE]  cannot  find  symbol  iterator	131	None	replace
435	[BUG]  [BUGGY]  }  else  if(o  instanceof  ArrayIndexOutOfBoundsException)  {  ArrayIndexOutOfBoundsException  e  =(ArrayIndexOutOfBoundsException)iterator.next();  [CE]  cannot  find  symbol  iterator  [FE]            ArrayIndexOutOfBoundsException      [CONTEXT]      if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }      [BUGGY]  }  else  if(o  instanceof  ArrayIndexOutOfBoundsException)  {  ArrayIndexOutOfBoundsException  e  =(ArrayIndexOutOfBoundsException)iterator.next();  [BUGGY]      return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	replace	}  else  if(o  instanceof  ArrayIndexOutOfBoundsException)  {  ArrayIndexOutOfBoundsException  e  =(ArrayIndexOutOfBoundsException)iterator.next();	  }    else    if(!(o    instanceof    JsonArray))    {    ArrayIndexOutOfBoundsException    e    =(ArrayIndexOutOfBoundsException)iterator.next();    	non-compiled	[CE]  cannot  find  symbol  iterator	131	None	replace
436	[BUG]  [BUGGY]  }  else  if(!(o  instanceof  JsonObject))  {  ArrayIndexOutOfBoundsException  e  =(ArrayIndexOutOfBoundsException)iterator.next();  [CE]  cannot  find  symbol  iterator  [FE]              ArrayIndexOutOfBoundsException      [CONTEXT]      if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }      [BUGGY]  }  else  if(!(o  instanceof  JsonObject))  {  ArrayIndexOutOfBoundsException  e  =(ArrayIndexOutOfBoundsException)iterator.next();  [BUGGY]      return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	replace	}  else  if(!(o  instanceof  JsonObject))  {  ArrayIndexOutOfBoundsException  e  =(ArrayIndexOutOfBoundsException)iterator.next();	  }    else    if(!(o    instanceof    JsonArray))    {    ArrayIndexOutOfBoundsException    e    =(ArrayIndexOutOfBoundsException)iterator.next();    	non-compiled	[CE]  cannot  find  symbol  iterator	131	None	replace
437	[BUG]  [BUGGY]  }  else  if(!(o  instanceof  JsonArray))  {  ArrayIndexOutOfBoundsException  e  =(ArrayIndexOutOfBoundsException)object.next();  [CE]  cannot  find  symbol  object  [FE]                ArrayIndexOutOfBoundsException      [CONTEXT]      if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }      [BUGGY]  }  else  if(!(o  instanceof  JsonArray))  {  ArrayIndexOutOfBoundsException  e  =(ArrayIndexOutOfBoundsException)object.next();  [BUGGY]      return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	replace	}  else  if(!(o  instanceof  JsonArray))  {  ArrayIndexOutOfBoundsException  e  =(ArrayIndexOutOfBoundsException)object.next();	  }    else    if(!(o    instanceof    JsonArray))    {    ArrayIndexOutOfBoundsException    e    =(ArrayIndexOutOfBoundsException)iterator.next();    	non-compiled	[CE]  cannot  find  symbol  object	131	None	replace
438	[BUG]  [BUGGY]  }  else  if(o  instanceof  JsonObject  &&  o  instanceof  JsonLong)  {  [CE]  cannot  find  symbol  [FE]          ArrayIndexOutOfBoundsException      [CONTEXT]      if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }      [BUGGY]  }  else  if(o  instanceof  JsonObject  &&  o  instanceof  JsonLong)  {  [BUGGY]      return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	replace	}  else  if(o  instanceof  JsonObject  &&  o  instanceof  JsonLong)  {	  }    else    if(o    instanceof    JsonObject    ||    o    instanceof    JsonLong)    {    	non-compiled	[CE]  cannot  find  symbol	184	None	replace
439	[BUG]  [BUGGY]  }  else  if(o  instanceof  JsonObject  ||  o  instanceof  JsonLong  ||  isObject)  {  [CE]  cannot  find  symbol  [FE]            ArrayIndexOutOfBoundsException      [CONTEXT]      if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }      [BUGGY]  }  else  if(o  instanceof  JsonObject  ||  o  instanceof  JsonLong  ||  isObject)  {  [BUGGY]      return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	replace	}  else  if(o  instanceof  JsonObject  ||  o  instanceof  JsonLong  ||  isObject)  {	  }    else    if(o    instanceof    JsonObject    ||    o    instanceof    JsonLong)    {    	non-compiled	[CE]  cannot  find  symbol	184	None	replace
440	[BUG]  [BUGGY]  }  else  if(o  instanceof  JsonObject  ||  o  instanceof  JsonLong  ||!(o  instanceof  JsonLong))  {  [CE]  cannot  find  symbol  [FE]              ArrayIndexOutOfBoundsException      [CONTEXT]      if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }      [BUGGY]  }  else  if(o  instanceof  JsonObject  ||  o  instanceof  JsonLong  ||!(o  instanceof  JsonLong))  {  [BUGGY]      return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	replace	}  else  if(o  instanceof  JsonObject  ||  o  instanceof  JsonLong  ||!(o  instanceof  JsonLong))  {	  }    else    if(o    instanceof    JsonObject    ||    o    instanceof    JsonLong)    {    	non-compiled	[CE]  cannot  find  symbol	184	None	replace
441	[BUG]  [BUGGY]  }  else  if(o  instanceof  JsonObject  ||!(o  instanceof  JsonLong))  {  [CE]  cannot  find  symbol  [FE]                ArrayIndexOutOfBoundsException      [CONTEXT]      if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }      [BUGGY]  }  else  if(o  instanceof  JsonObject  ||!(o  instanceof  JsonLong))  {  [BUGGY]      return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	replace	}  else  if(o  instanceof  JsonObject  ||!(o  instanceof  JsonLong))  {	  }    else    if(o    instanceof    JsonObject    ||    o    instanceof    JsonLong)    {    	non-compiled	[CE]  cannot  find  symbol	184	None	replace
442	[BUG]  [BUGGY]  }  else  if(o  instanceof  JsonObject  ||  o  instanceof  JsonLong  ||  o  instanceof  JsonLong)  {  [CE]  cannot  find  symbol  [FE]                  ArrayIndexOutOfBoundsException      [CONTEXT]      if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }      [BUGGY]  }  else  if(o  instanceof  JsonObject  ||  o  instanceof  JsonLong  ||  o  instanceof  JsonLong)  {  [BUGGY]      return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	replace	}  else  if(o  instanceof  JsonObject  ||  o  instanceof  JsonLong  ||  o  instanceof  JsonLong)  {	  }    else    if(o    instanceof    JsonObject    ||    o    instanceof    JsonLong)    {    	non-compiled	[CE]  cannot  find  symbol	184	None	replace
443	[BUG]  [BUGGY]  }  else  if(o  instanceof  JsonObject  ||  o  instanceof  JsonLong  ||  o  instanceof  JsonPrimitive)  {  [CE]  cannot  find  symbol  [FE]                    ArrayIndexOutOfBoundsException      [CONTEXT]      if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }      [BUGGY]  }  else  if(o  instanceof  JsonObject  ||  o  instanceof  JsonLong  ||  o  instanceof  JsonPrimitive)  {  [BUGGY]      return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	replace	}  else  if(o  instanceof  JsonObject  ||  o  instanceof  JsonLong  ||  o  instanceof  JsonPrimitive)  {	  }    else    if(o    instanceof    JsonObject    ||    o    instanceof    JsonLong)    {    	non-compiled	[CE]  cannot  find  symbol	184	None	replace
444	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]          AssertionError      [CONTEXT]      if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }      [BUGGY]  }  else  if(o  instanceof  JsonArray  ||  o  instanceof  JsonNull)  {  [BUGGY]      return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	add	}  else  if(o  instanceof  JsonArray  ||  o  instanceof  JsonNull)  {	  }    else    if(o    instanceof    JsonNull)    {    }    else    if(o    instanceof    JsonNull    ||    o    instanceof    JsonNull)    {    	compilable	  [FE]  AssertionError  	70	2	replace
445	[BUG]  [BUGGY]  }  else  if(o  instanceof  JsonArray  ||  o  instanceof  JsonNull)  {  [FE]  AssertionError  [FE]          AssertionError      [CONTEXT]      if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }      [BUGGY]  }  else  if(o  instanceof  JsonArray  ||  o  instanceof  JsonNull)  {  [BUGGY]      return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	replace	}  else  if(o  instanceof  JsonArray  ||  o  instanceof  JsonNull)  {	  }    else    if(o    instanceof    JsonNull)    {    }    else    if(o    instanceof    JsonNull    ||    o    instanceof    JsonNull)    {    	compilable	  [FE]  AssertionError  	70	2	replace
446	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]            AssertionError      [CONTEXT]      if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }      [BUGGY]  }  else  if(o  instanceof  String  ||  o  instanceof  JsonNull)  {  [BUGGY]      return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	add	}  else  if(o  instanceof  String  ||  o  instanceof  JsonNull)  {	  }    else    if(o    instanceof    JsonNull)    {    }    else    if(o    instanceof    JsonNull    ||    o    instanceof    JsonNull)    {    	compilable	  [FE]  AssertionError  	70	2	replace
447	[BUG]  [BUGGY]  }  else  if(o  instanceof  String  ||  o  instanceof  JsonNull)  {  [FE]  AssertionError  [FE]            AssertionError      [CONTEXT]      if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }      [BUGGY]  }  else  if(o  instanceof  String  ||  o  instanceof  JsonNull)  {  [BUGGY]      return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	replace	}  else  if(o  instanceof  String  ||  o  instanceof  JsonNull)  {	  }    else    if(o    instanceof    JsonNull)    {    }    else    if(o    instanceof    JsonNull    ||    o    instanceof    JsonNull)    {    	compilable	  [FE]  AssertionError  	70	2	replace
448	[BUG]  [BUGGY]  }  else  if(!(o  instanceof  JsonType  ||  o  instanceof  JsonArray))  {  [CE]  cannot  find  symbol  [FE]          ArrayIndexOutOfBoundsException      [CONTEXT]      if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }      [BUGGY]  }  else  if(!(o  instanceof  JsonType  ||  o  instanceof  JsonArray))  {  [BUGGY]      return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	replace	}  else  if(!(o  instanceof  JsonType  ||  o  instanceof  JsonArray))  {	  }    else    if(!(o    instanceof    JsonType))    {    	non-compiled	[CE]  cannot  find  symbol	65	None	replace
449	[BUG]  [BUGGY]  }  else  if(!(o  instanceof  JsonType  ||  o  instanceof  JsonObject))  {  [CE]  cannot  find  symbol  [FE]            ArrayIndexOutOfBoundsException      [CONTEXT]      if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }      [BUGGY]  }  else  if(!(o  instanceof  JsonType  ||  o  instanceof  JsonObject))  {  [BUGGY]      return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	replace	}  else  if(!(o  instanceof  JsonType  ||  o  instanceof  JsonObject))  {	  }    else    if(!(o    instanceof    JsonType))    {    	non-compiled	[CE]  cannot  find  symbol	65	None	replace
450	[BUG]  [BUGGY]  }  else  if(!(o  instanceof  JsonType  ||  o  instanceof  String))  {  [CE]  cannot  find  symbol  [FE]              ArrayIndexOutOfBoundsException      [CONTEXT]      if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }      [BUGGY]  }  else  if(!(o  instanceof  JsonType  ||  o  instanceof  String))  {  [BUGGY]      return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	replace	}  else  if(!(o  instanceof  JsonType  ||  o  instanceof  String))  {	  }    else    if(!(o    instanceof    JsonType))    {    	non-compiled	[CE]  cannot  find  symbol	65	None	replace
451	[BUG]  [BUGGY]  }  else  if(!(o  instanceof  JsonType  ||  o  instanceof  Boolean))  {  [CE]  cannot  find  symbol  [FE]                ArrayIndexOutOfBoundsException      [CONTEXT]      if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }      [BUGGY]  }  else  if(!(o  instanceof  JsonType  ||  o  instanceof  Boolean))  {  [BUGGY]      return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	replace	}  else  if(!(o  instanceof  JsonType  ||  o  instanceof  Boolean))  {	  }    else    if(!(o    instanceof    JsonType))    {    	non-compiled	[CE]  cannot  find  symbol	65	None	replace
452	[BUG]  [BUGGY]  }  else  if(!(o  instanceof  JsonType  ||  o  instanceof  JsonLabel))  {  [CE]  cannot  find  symbol  [FE]                  ArrayIndexOutOfBoundsException      [CONTEXT]      if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }      [BUGGY]  }  else  if(!(o  instanceof  JsonType  ||  o  instanceof  JsonLabel))  {  [BUGGY]      return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	replace	}  else  if(!(o  instanceof  JsonType  ||  o  instanceof  JsonLabel))  {	  }    else    if(!(o    instanceof    JsonType))    {    	non-compiled	[CE]  cannot  find  symbol	65	None	replace
453	[BUG]  [BUGGY]  }  else  if(!(o  instanceof  JsonType  ||  o  instanceof  JsonString))  {  [CE]  cannot  find  symbol  [FE]                    ArrayIndexOutOfBoundsException      [CONTEXT]      if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }      [BUGGY]  }  else  if(!(o  instanceof  JsonType  ||  o  instanceof  JsonString))  {  [BUGGY]      return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	replace	}  else  if(!(o  instanceof  JsonType  ||  o  instanceof  JsonString))  {	  }    else    if(!(o    instanceof    JsonType))    {    	non-compiled	[CE]  cannot  find  symbol	65	None	replace
454	[BUG]  [BUGGY]  }  else  if(o  instanceof  JsonObject  ||  o  instanceof  String  ||  o  instanceof  Boolean  ||  isObject)  {  [CE]  cannot  find  symbol  isObject  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]      if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }      [BUGGY]  }  else  if(o  instanceof  JsonObject  ||  o  instanceof  String  ||  o  instanceof  Boolean  ||  isObject)  {  [BUGGY]      return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	replace	}  else  if(o  instanceof  JsonObject  ||  o  instanceof  String  ||  o  instanceof  Boolean  ||  isObject)  {	  }    else    if(o    instanceof    JsonObject    ||    o    instanceof    String    ||    o    instanceof    Boolean)    {    	non-compiled	[CE]  cannot  find  symbol  isObject	247	None	replace
455	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]      ArrayIndexOutOfBoundsException    [CONTEXT]      if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }      [BUGGY]  }  else  if(o  instanceof  JsonObject  &&  o  instanceof  String  ||  o  instanceof  Boolean)  {  [BUGGY]      return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	add	}  else  if(o  instanceof  JsonObject  &&  o  instanceof  String  ||  o  instanceof  Boolean)  {	  }    else    if(o    instanceof    JsonObject    ||    o    instanceof    String    ||    o    instanceof    Boolean)    {    	compilable	  [FE]  AssertionError  	247	2	replace
456	[BUG]  [BUGGY]  }  else  if(o  instanceof  JsonObject  &&  o  instanceof  String  ||  o  instanceof  Boolean)  {  [FE]  AssertionError  [FE]      ArrayIndexOutOfBoundsException    [CONTEXT]      if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }      [BUGGY]  }  else  if(o  instanceof  JsonObject  &&  o  instanceof  String  ||  o  instanceof  Boolean)  {  [BUGGY]      return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	replace	}  else  if(o  instanceof  JsonObject  &&  o  instanceof  String  ||  o  instanceof  Boolean)  {	  }    else    if(o    instanceof    JsonObject    ||    o    instanceof    String    ||    o    instanceof    Boolean)    {    	compilable	  [FE]  AssertionError  	247	2	replace
457	[BUG]  [BUGGY]  [FE]  ArrayIndexOutOfBoundsException  [FE]        ArrayIndexOutOfBoundsException    [CONTEXT]      if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }      [BUGGY]  }  else  if(o  instanceof  JsonObject  ||  o  instanceof  String  ||  o  instanceof  Integer)  {  [BUGGY]      return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	add	}  else  if(o  instanceof  JsonObject  ||  o  instanceof  String  ||  o  instanceof  Integer)  {	  }    else    if(o    instanceof    JsonObject    ||    o    instanceof    String    ||    o    instanceof    Boolean)    {    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	247	2	replace
458	[BUG]  [BUGGY]  }  else  if(o  instanceof  JsonObject  ||  o  instanceof  String  ||  o  instanceof  Integer)  {  [FE]  ArrayIndexOutOfBoundsException  [FE]        ArrayIndexOutOfBoundsException    [CONTEXT]      if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }      [BUGGY]  }  else  if(o  instanceof  JsonObject  ||  o  instanceof  String  ||  o  instanceof  Integer)  {  [BUGGY]      return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	replace	}  else  if(o  instanceof  JsonObject  ||  o  instanceof  String  ||  o  instanceof  Integer)  {	  }    else    if(o    instanceof    JsonObject    ||    o    instanceof    String    ||    o    instanceof    Boolean)    {    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	247	2	replace
459	[BUG]  [BUGGY]  [FE]  ArrayIndexOutOfBoundsException  [FE]          ArrayIndexOutOfBoundsException    [CONTEXT]      if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }      [BUGGY]  }  else  if(o  instanceof  JsonObject  ||  o  instanceof  Number  ||  o  instanceof  Boolean)  {  [BUGGY]      return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	add	}  else  if(o  instanceof  JsonObject  ||  o  instanceof  Number  ||  o  instanceof  Boolean)  {	  }    else    if(o    instanceof    JsonObject    ||    o    instanceof    String    ||    o    instanceof    Boolean)    {    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	247	2	replace
460	[BUG]  [BUGGY]  }  else  if(o  instanceof  JsonObject  ||  o  instanceof  Number  ||  o  instanceof  Boolean)  {  [FE]  ArrayIndexOutOfBoundsException  [FE]          ArrayIndexOutOfBoundsException    [CONTEXT]      if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }      [BUGGY]  }  else  if(o  instanceof  JsonObject  ||  o  instanceof  Number  ||  o  instanceof  Boolean)  {  [BUGGY]      return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	replace	}  else  if(o  instanceof  JsonObject  ||  o  instanceof  Number  ||  o  instanceof  Boolean)  {	  }    else    if(o    instanceof    JsonObject    ||    o    instanceof    String    ||    o    instanceof    Boolean)    {    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	247	2	replace
461	[BUG]  [BUGGY]  [FE]  ArrayIndexOutOfBoundsException  [FE]            ArrayIndexOutOfBoundsException    [CONTEXT]      if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }      [BUGGY]  }  else  if(o  instanceof  JsonObject  ||  o  instanceof  String  ||  o  instanceof  Boolean  ||  o  instanceof  Integer)  {  [BUGGY]      return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	add	}  else  if(o  instanceof  JsonObject  ||  o  instanceof  String  ||  o  instanceof  Boolean  ||  o  instanceof  Integer)  {	  }    else    if(o    instanceof    JsonObject    ||    o    instanceof    String    ||    o    instanceof    Boolean)    {    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	247	2	replace
462	[BUG]  [BUGGY]  }  else  if(o  instanceof  JsonObject  ||  o  instanceof  String  ||  o  instanceof  Boolean  ||  o  instanceof  Integer)  {  [FE]  ArrayIndexOutOfBoundsException  [FE]            ArrayIndexOutOfBoundsException    [CONTEXT]      if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }      [BUGGY]  }  else  if(o  instanceof  JsonObject  ||  o  instanceof  String  ||  o  instanceof  Boolean  ||  o  instanceof  Integer)  {  [BUGGY]      return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	replace	}  else  if(o  instanceof  JsonObject  ||  o  instanceof  String  ||  o  instanceof  Boolean  ||  o  instanceof  Integer)  {	  }    else    if(o    instanceof    JsonObject    ||    o    instanceof    String    ||    o    instanceof    Boolean)    {    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	247	2	replace
463	[BUG]  [BUGGY]  [FE]  ArrayIndexOutOfBoundsException  [FE]              ArrayIndexOutOfBoundsException    [CONTEXT]      if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }      [BUGGY]  }  else  if(o  instanceof  JsonObject  ||  o  instanceof  String  ||!(o  instanceof  Boolean))  {  [BUGGY]      return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	add	}  else  if(o  instanceof  JsonObject  ||  o  instanceof  String  ||!(o  instanceof  Boolean))  {	  }    else    if(o    instanceof    JsonObject    ||    o    instanceof    String    ||    o    instanceof    Boolean)    {    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	247	2	replace
464	[BUG]  [BUGGY]  }  else  if(o  instanceof  JsonObject  ||  o  instanceof  String  ||!(o  instanceof  Boolean))  {  [FE]  ArrayIndexOutOfBoundsException  [FE]              ArrayIndexOutOfBoundsException    [CONTEXT]      if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }      [BUGGY]  }  else  if(o  instanceof  JsonObject  ||  o  instanceof  String  ||!(o  instanceof  Boolean))  {  [BUGGY]      return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	replace	}  else  if(o  instanceof  JsonObject  ||  o  instanceof  String  ||!(o  instanceof  Boolean))  {	  }    else    if(o    instanceof    JsonObject    ||    o    instanceof    String    ||    o    instanceof    Boolean)    {    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	247	2	replace
465	[BUG]  [BUGGY]  [FE]  ArrayIndexOutOfBoundsException  [FE]        AssertionError      [CONTEXT]      if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }      [BUGGY]  }  else  if(o  instanceof  JsonElement)  {  [BUGGY]      return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	add	}  else  if(o  instanceof  JsonElement)  {	  }    else    if(o    instanceof    JsonArray)    {    else    if(o    instanceof    JsonArray)    {    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	170	2	replace
466	[BUG]  [BUGGY]  }  else  if(o  instanceof  JsonElement)  {  [FE]  ArrayIndexOutOfBoundsException  [FE]        AssertionError      [CONTEXT]      if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }      [BUGGY]  }  else  if(o  instanceof  JsonElement)  {  [BUGGY]      return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	replace	}  else  if(o  instanceof  JsonElement)  {	  }    else    if(o    instanceof    JsonArray)    {    else    if(o    instanceof    JsonArray)    {    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	170	2	replace
467	[BUG]  [BUGGY]  }  else  if(o  instanceof  JsonToken.BEGIN_OBJECT)  {  [CE]  cannot  find  symbol  [FE]          AssertionError      [CONTEXT]      if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }      [BUGGY]  }  else  if(o  instanceof  JsonToken.BEGIN_OBJECT)  {  [BUGGY]      return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	replace	}  else  if(o  instanceof  JsonToken.BEGIN_OBJECT)  {	  }    else    if(o    instanceof    JsonArray)    {    else    if(o    instanceof    JsonArray)    {    	non-compiled	[CE]  cannot  find  symbol	170	None	replace
468	[BUG]  [BUGGY]  }  else  if(!(o  instanceof  JsonArray  <?>))  {  [CE]  type  JsonArray  does  not  take  parameters  [FE]                ArrayIndexOutOfBoundsException      [CONTEXT]      if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }      [BUGGY]  }  else  if(!(o  instanceof  JsonArray  <?>))  {  [BUGGY]      return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	replace	}  else  if(!(o  instanceof  JsonArray  <?>))  {	  }    else    if(o    instanceof    JsonArray    <?>)    {    	non-compiled	[CE]  type  JsonArray  does  not  take  parameters	77	None	replace
469	[BUG]  [BUGGY]  }  else  if(o  instanceof  JsonType  <?>)  {  [CE]  cannot  find  symbol  [FE]                  ArrayIndexOutOfBoundsException      [CONTEXT]      if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }      [BUGGY]  }  else  if(o  instanceof  JsonType  <?>)  {  [BUGGY]      return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	replace	}  else  if(o  instanceof  JsonType  <?>)  {	  }    else    if(o    instanceof    JsonArray    <?>)    {    	non-compiled	[CE]  cannot  find  symbol	77	None	replace
470	[BUG]  [BUGGY]  }  else  if(o  instanceof  JsonToken)  {  }  else  if(o  instanceof  JsonToken)  {  [CE]  missing  return  statement  [FE]    AssertionError    [CONTEXT]      if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }      [BUGGY]  }  else  if(o  instanceof  JsonToken)  {  }  else  if(o  instanceof  JsonToken)  {  [BUGGY]      return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	replace	}    else    if(o    instanceof    JsonToken)    {    }  else  if(o  instanceof  JsonToken)  {	  	non-compiled	[CE]  missing  return  statement	197	None	add
471	[BUG]  [BUGGY]  }  else  if(o  instanceof  JsonToken)  {  }  else  if(o  instanceof  JsonToken)  <  return  JsonToken.BEGIN_OBJECT;  [CE]  illegal  start  of  type  [FE]      AssertionError    [CONTEXT]      if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }      [BUGGY]  }  else  if(o  instanceof  JsonToken)  {  }  else  if(o  instanceof  JsonToken)  <  return  JsonToken.BEGIN_OBJECT;  [BUGGY]      return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	replace	}    else    if(o    instanceof    JsonToken)    {    }  else  if(o  instanceof  JsonToken)  <  return  JsonToken.BEGIN_OBJECT;	  	non-compiled	[CE]  illegal  start  of  type	197	None	add
472	[BUG]  [BUGGY]  }  else  if(o  instanceof  JsonToken)  {  else  if(o  instanceof  JsonToken)  {  [CE]  'else'  without  'if'  [FE]        AssertionError    [CONTEXT]      if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }      [BUGGY]  }  else  if(o  instanceof  JsonToken)  {  else  if(o  instanceof  JsonToken)  {  [BUGGY]      return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	replace	}    else    if(o    instanceof    JsonToken)    {    else  if(o  instanceof  JsonToken)  {	  	non-compiled	[CE]  'else'  without  'if'	197	None	add
473	[BUG]  [BUGGY]  }  else  if(o  instanceof  JsonToken)  {  return  JsonToken.BEGIN_OBJECT;  }  else  if(o  instanceof  JsonArray)  {  [CE]  missing  return  statement  [FE]          AssertionError    [CONTEXT]      if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }      [BUGGY]  }  else  if(o  instanceof  JsonToken)  {  return  JsonToken.BEGIN_OBJECT;  }  else  if(o  instanceof  JsonArray)  {  [BUGGY]      return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	replace	}    else    if(o    instanceof    JsonToken)    {    return  JsonToken.BEGIN_OBJECT;  }  else  if(o  instanceof  JsonArray)  {	  	non-compiled	[CE]  missing  return  statement	197	None	add
474	[BUG]  [BUGGY]  }  else  if(o  instanceof  JsonToken)  {  return  JsonToken.BEGIN_OBJECT;  }  else  if(o  instanceof  JsonToken)  {  [CE]  missing  return  statement  [FE]            AssertionError    [CONTEXT]      if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }      [BUGGY]  }  else  if(o  instanceof  JsonToken)  {  return  JsonToken.BEGIN_OBJECT;  }  else  if(o  instanceof  JsonToken)  {  [BUGGY]      return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	replace	}    else    if(o    instanceof    JsonToken)    {    return  JsonToken.BEGIN_OBJECT;  }  else  if(o  instanceof  JsonToken)  {	  	non-compiled	[CE]  missing  return  statement	197	None	add
475	[BUG]  [BUGGY]  }  else  if(o  instanceof  JsonToken)  {  <  }  else  if(o  instanceof  JsonToken)  {  [CE]  illegal  start  of  type  [FE]              AssertionError    [CONTEXT]      if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }      [BUGGY]  }  else  if(o  instanceof  JsonToken)  {  <  }  else  if(o  instanceof  JsonToken)  {  [BUGGY]      return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	replace	}    else    if(o    instanceof    JsonToken)    {    <  }  else  if(o  instanceof  JsonToken)  {	  	non-compiled	[CE]  illegal  start  of  type	197	None	add
476	[BUG]  [BUGGY]  [FE]  ArrayIndexOutOfBoundsException  [FE]                AssertionError    [CONTEXT]      if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }      [BUGGY]  }  else  if(o  instanceof  JsonToken)  {  return  JsonToken.BEGIN_OBJECT;  [BUGGY]      return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	add	}    else    if(o    instanceof    JsonToken)    {    return  JsonToken.BEGIN_OBJECT;	  	compilable	  [FE]  ArrayIndexOutOfBoundsException  	197	2	add
477	[BUG]  [BUGGY]  }  else  if(o  instanceof  JsonToken)  {  return  JsonToken.BEGIN_OBJECT;  [FE]  ArrayIndexOutOfBoundsException  [FE]                AssertionError    [CONTEXT]      if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }      [BUGGY]  }  else  if(o  instanceof  JsonToken)  {  return  JsonToken.BEGIN_OBJECT;  [BUGGY]      return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	replace	}    else    if(o    instanceof    JsonToken)    {    return  JsonToken.BEGIN_OBJECT;	  	compilable	  [FE]  ArrayIndexOutOfBoundsException  	197	2	add
478	[BUG]  [BUGGY]  }  else  if(o  instanceof  JsonToken)  {  }  else  if(o  instanceof  JsonToken)  <  =  JsonToken.BEGIN_OBJECT;  [CE]  illegal  start  of  type  [FE]                  AssertionError    [CONTEXT]      if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }      [BUGGY]  }  else  if(o  instanceof  JsonToken)  {  }  else  if(o  instanceof  JsonToken)  <  =  JsonToken.BEGIN_OBJECT;  [BUGGY]      return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	replace	}    else    if(o    instanceof    JsonToken)    {    }  else  if(o  instanceof  JsonToken)  <  =  JsonToken.BEGIN_OBJECT;	  	non-compiled	[CE]  illegal  start  of  type	197	None	add
479	[BUG]  [BUGGY]  }  else  if(!(o  instanceof  JsonObject  instanceof  String)&&  isObject)  {  [CE]  unexpected  type  [FE]        AssertionError      [CONTEXT]      if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }      [BUGGY]  }  else  if(!(o  instanceof  JsonObject  instanceof  String)&&  isObject)  {  [BUGGY]      return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	replace	}  else  if(!(o  instanceof  JsonObject  instanceof  String)&&  isObject)  {	  }    else    if(!(o    instanceof    JsonObject    instanceof    String))    {    	non-compiled	[CE]  unexpected  type	106	None	replace
480	[BUG]  [BUGGY]  }  else  if(!(o  instanceof  JsonObject  instanceof  Number))  {  [CE]  unexpected  type  [FE]          AssertionError      [CONTEXT]      if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }      [BUGGY]  }  else  if(!(o  instanceof  JsonObject  instanceof  Number))  {  [BUGGY]      return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	replace	}  else  if(!(o  instanceof  JsonObject  instanceof  Number))  {	  }    else    if(!(o    instanceof    JsonObject    instanceof    String))    {    	non-compiled	[CE]  unexpected  type	106	None	replace
481	[BUG]  [BUGGY]  }  else  if(!(o  instanceof  JsonObject  instanceof  String  ||  o  instanceof  JsonString))  {  [CE]  unexpected  type  [FE]            AssertionError      [CONTEXT]      if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }      [BUGGY]  }  else  if(!(o  instanceof  JsonObject  instanceof  String  ||  o  instanceof  JsonString))  {  [BUGGY]      return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	replace	}  else  if(!(o  instanceof  JsonObject  instanceof  String  ||  o  instanceof  JsonString))  {	  }    else    if(!(o    instanceof    JsonObject    instanceof    String))    {    	non-compiled	[CE]  unexpected  type	106	None	replace
482	[BUG]  [BUGGY]  }  else  if(!(o  instanceof  JsonObject  instanceof  String)||  isObject)  {  [CE]  unexpected  type  [FE]              AssertionError      [CONTEXT]      if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }      [BUGGY]  }  else  if(!(o  instanceof  JsonObject  instanceof  String)||  isObject)  {  [BUGGY]      return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	replace	}  else  if(!(o  instanceof  JsonObject  instanceof  String)||  isObject)  {	  }    else    if(!(o    instanceof    JsonObject    instanceof    String))    {    	non-compiled	[CE]  unexpected  type	106	None	replace
483	[BUG]  [BUGGY]  }  else  if(o  instanceof  JsonString  ||  o  instanceof  JsonObject!=  ')')  {  [CE]  cannot  find  symbol  [FE]              ArrayIndexOutOfBoundsException      [CONTEXT]      if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }      [BUGGY]  }  else  if(o  instanceof  JsonString  ||  o  instanceof  JsonObject!=  ')')  {  [BUGGY]      return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	replace	}  else  if(o  instanceof  JsonString  ||  o  instanceof  JsonObject!=  ')')  {	  }    else    if(o    instanceof    JsonObject!=    ')')    {    	non-compiled	[CE]  cannot  find  symbol	214	None	replace
484	[BUG]  [BUGGY]  }  else  if(o  instanceof  JsonString  ||  o  instanceof  JsonObject  >>  ')')  {  [CE]  cannot  find  symbol  [FE]                ArrayIndexOutOfBoundsException      [CONTEXT]      if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }      [BUGGY]  }  else  if(o  instanceof  JsonString  ||  o  instanceof  JsonObject  >>  ')')  {  [BUGGY]      return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	replace	}  else  if(o  instanceof  JsonString  ||  o  instanceof  JsonObject  >>  ')')  {	  }    else    if(o    instanceof    JsonObject!=    ')')    {    	non-compiled	[CE]  cannot  find  symbol	214	None	replace
485	[BUG]  [BUGGY]  }  else  if(o  instanceof  JsonObject  ==  ')')  {  [CE]  incomparable  types:  boolean  and  char  [FE]                  ArrayIndexOutOfBoundsException      [CONTEXT]      if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }      [BUGGY]  }  else  if(o  instanceof  JsonObject  ==  ')')  {  [BUGGY]      return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	replace	}  else  if(o  instanceof  JsonObject  ==  ')')  {	  }    else    if(o    instanceof    JsonObject!=    ')')    {    	non-compiled	[CE]  incomparable  types:  boolean  and  char	214	None	replace
486	[BUG]  [BUGGY]  }  else  if(o  instanceof  JsonString  ||  o  instanceof  JsonObject  ==  ')')  {  [CE]  cannot  find  symbol  [FE]                    ArrayIndexOutOfBoundsException      [CONTEXT]      if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }      [BUGGY]  }  else  if(o  instanceof  JsonString  ||  o  instanceof  JsonObject  ==  ')')  {  [BUGGY]      return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	replace	}  else  if(o  instanceof  JsonString  ||  o  instanceof  JsonObject  ==  ')')  {	  }    else    if(o    instanceof    JsonObject!=    ')')    {    	non-compiled	[CE]  cannot  find  symbol	214	None	replace
487	[BUG]  [BUGGY]  }  else  if(o  instanceof  JsonObject  <  =  ')')  {  [CE]  illegal  start  of  type  [FE]                      ArrayIndexOutOfBoundsException      [CONTEXT]      if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }      [BUGGY]  }  else  if(o  instanceof  JsonObject  <  =  ')')  {  [BUGGY]      return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	replace	}  else  if(o  instanceof  JsonObject  <  =  ')')  {	  }    else    if(o    instanceof    JsonObject!=    ')')    {    	non-compiled	[CE]  illegal  start  of  type	214	None	replace
488	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }      [BUGGY]  }  else  if(o  instanceof  JsonArray  &&  o  instanceof  JsonPrimitive)  {  [BUGGY]      return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	add	}  else  if(o  instanceof  JsonArray  &&  o  instanceof  JsonPrimitive)  {	  }    else    if(o    instanceof    JsonObject    &&    o    instanceof    JsonPrimitive)    {    	compilable	  [FE]  AssertionError  	109	2	replace
489	[BUG]  [BUGGY]  }  else  if(o  instanceof  JsonArray  &&  o  instanceof  JsonPrimitive)  {  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }      [BUGGY]  }  else  if(o  instanceof  JsonArray  &&  o  instanceof  JsonPrimitive)  {  [BUGGY]      return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	replace	}  else  if(o  instanceof  JsonArray  &&  o  instanceof  JsonPrimitive)  {	  }    else    if(o    instanceof    JsonObject    &&    o    instanceof    JsonPrimitive)    {    	compilable	  [FE]  AssertionError  	109	2	replace
490	[BUG]  [BUGGY]  }  else  if(o  instanceof  JsonObject  &&  isObject)  {  [CE]  cannot  find  symbol  isObject  [FE]      AssertionError    [CONTEXT]      if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }      [BUGGY]  }  else  if(o  instanceof  JsonObject  &&  isObject)  {  [BUGGY]      return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	replace	}  else  if(o  instanceof  JsonObject  &&  isObject)  {	  }    else    if(o    instanceof    JsonObject    &&    o    instanceof    JsonPrimitive)    {    	non-compiled	[CE]  cannot  find  symbol  isObject	109	None	replace
491	[BUG]  [BUGGY]  }    else    if(o    instanceof    JsonArray)    {    return  JsonToken.BEGIN_ARRAY;  }  else  if(o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_OBJECT;  }  else  if(o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_OBJECT;  }  [CE]  illegal  start  of  type  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]      if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }      [BUGGY]  }    else    if(o    instanceof    JsonArray)    {    return  JsonToken.BEGIN_ARRAY;  }  else  if(o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_OBJECT;  }  else  if(o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_OBJECT;  }  [BUGGY]      return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	replace	}        else        if(o        instanceof        JsonArray)        {        return    JsonToken.BEGIN_ARRAY;    }  else  if(o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_OBJECT;  }  else  if(o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_OBJECT;  }	  	non-compiled	[CE]  illegal  start  of  type	174	None	add
492	[BUG]  [BUGGY]  }    else    if(o    instanceof    JsonArray)    {    return  JsonToken.BEGIN_ARRAY;  }  else  if(o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_OBJECT;  }  else  if(o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  [CE]  illegal  start  of  type  [FE]      ArrayIndexOutOfBoundsException    [CONTEXT]      if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }      [BUGGY]  }    else    if(o    instanceof    JsonArray)    {    return  JsonToken.BEGIN_ARRAY;  }  else  if(o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_OBJECT;  }  else  if(o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  [BUGGY]      return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	replace	}        else        if(o        instanceof        JsonArray)        {        return    JsonToken.BEGIN_ARRAY;    }  else  if(o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_OBJECT;  }  else  if(o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }	  	non-compiled	[CE]  illegal  start  of  type	174	None	add
493	[BUG]  [BUGGY]  }    else    if(o    instanceof    JsonArray)    {    return  JsonToken.BEGIN_ARRAY;  }  else  if(o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if(o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_OBJECT;  }  [CE]  illegal  start  of  type  [FE]        ArrayIndexOutOfBoundsException    [CONTEXT]      if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }      [BUGGY]  }    else    if(o    instanceof    JsonArray)    {    return  JsonToken.BEGIN_ARRAY;  }  else  if(o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if(o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_OBJECT;  }  [BUGGY]      return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	replace	}        else        if(o        instanceof        JsonArray)        {        return    JsonToken.BEGIN_ARRAY;    }  else  if(o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if(o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_OBJECT;  }	  	non-compiled	[CE]  illegal  start  of  type	174	None	add
494	[BUG]  [BUGGY]  }    else    if(o    instanceof    JsonArray)    {    return  JsonToken.BEGIN_ARRAY;  }  else  if(o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_OBJECT;  }  [CE]  illegal  start  of  type  [FE]          ArrayIndexOutOfBoundsException    [CONTEXT]      if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }      [BUGGY]  }    else    if(o    instanceof    JsonArray)    {    return  JsonToken.BEGIN_ARRAY;  }  else  if(o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_OBJECT;  }  [BUGGY]      return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	replace	}        else        if(o        instanceof        JsonArray)        {        return    JsonToken.BEGIN_ARRAY;    }  else  if(o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_OBJECT;  }	  	non-compiled	[CE]  illegal  start  of  type	174	None	add
495	[BUG]  [BUGGY]  }    else    if(o    instanceof    JsonArray)    {    return  JsonToken.BEGIN_ARRAY;  }  else  if(o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_OBJECT;  }  else  if(o  instanceof  JsonArray)  {  return  JsonToken.END_OBJECT;  }  [CE]  illegal  start  of  type  [FE]            ArrayIndexOutOfBoundsException    [CONTEXT]      if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }      [BUGGY]  }    else    if(o    instanceof    JsonArray)    {    return  JsonToken.BEGIN_ARRAY;  }  else  if(o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_OBJECT;  }  else  if(o  instanceof  JsonArray)  {  return  JsonToken.END_OBJECT;  }  [BUGGY]      return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	replace	}        else        if(o        instanceof        JsonArray)        {        return    JsonToken.BEGIN_ARRAY;    }  else  if(o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_OBJECT;  }  else  if(o  instanceof  JsonArray)  {  return  JsonToken.END_OBJECT;  }	  	non-compiled	[CE]  illegal  start  of  type	174	None	add
496	[BUG]  [BUGGY]  }    else    if(o    instanceof    JsonArray)    {    return  JsonToken.BEGIN_ARRAY;  }  else  if(o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_OBJECT;  }  else  if(o  instanceof  JsonArray)  {  return  JsonToken.NAME;  }  [CE]  illegal  start  of  type  [FE]              ArrayIndexOutOfBoundsException    [CONTEXT]      if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }      [BUGGY]  }    else    if(o    instanceof    JsonArray)    {    return  JsonToken.BEGIN_ARRAY;  }  else  if(o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_OBJECT;  }  else  if(o  instanceof  JsonArray)  {  return  JsonToken.NAME;  }  [BUGGY]      return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	replace	}        else        if(o        instanceof        JsonArray)        {        return    JsonToken.BEGIN_ARRAY;    }  else  if(o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_OBJECT;  }  else  if(o  instanceof  JsonArray)  {  return  JsonToken.NAME;  }	  	non-compiled	[CE]  illegal  start  of  type	174	None	add
497	[BUG]  [BUGGY]  }    else    if(o    instanceof    JsonArray)    {    return  JsonToken.BEGIN_ARRAY;  }  else  if(o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_OBJECT;  }  else  if(o  instanceof  JsonArray)  {  return  JsonToken.BOOLEAN;  }  [CE]  illegal  start  of  type  [FE]                ArrayIndexOutOfBoundsException    [CONTEXT]      if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }      [BUGGY]  }    else    if(o    instanceof    JsonArray)    {    return  JsonToken.BEGIN_ARRAY;  }  else  if(o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_OBJECT;  }  else  if(o  instanceof  JsonArray)  {  return  JsonToken.BOOLEAN;  }  [BUGGY]      return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	replace	}        else        if(o        instanceof        JsonArray)        {        return    JsonToken.BEGIN_ARRAY;    }  else  if(o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_OBJECT;  }  else  if(o  instanceof  JsonArray)  {  return  JsonToken.BOOLEAN;  }	  	non-compiled	[CE]  illegal  start  of  type	174	None	add
498	[BUG]  [BUGGY]  }    else    if(o    instanceof    JsonArray)    {    return  JsonToken.BEGIN_ARRAY;  else  if(o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_OBJECT;  }  else  if(o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_OBJECT;  }  [CE]  'else'  without  'if'  [FE]                  ArrayIndexOutOfBoundsException    [CONTEXT]      if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }      [BUGGY]  }    else    if(o    instanceof    JsonArray)    {    return  JsonToken.BEGIN_ARRAY;  else  if(o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_OBJECT;  }  else  if(o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_OBJECT;  }  [BUGGY]      return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	replace	}        else        if(o        instanceof        JsonArray)        {        return    JsonToken.BEGIN_ARRAY;    else  if(o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_OBJECT;  }  else  if(o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_OBJECT;  }	  	non-compiled	[CE]  'else'  without  'if'	174	None	add
499	[BUG]  [BUGGY]  }  else  if(o  instanceof  JsonPrimitive)  {  return  JsonToken.BEGIN_OBJECT;  [CE]  unreachable  statement  [FE]              AssertionError      [CONTEXT]      if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }      [BUGGY]  }  else  if(o  instanceof  JsonPrimitive)  {  return  JsonToken.BEGIN_OBJECT;  [BUGGY]      return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	replace	}  else  if(o  instanceof  JsonPrimitive)  {  return  JsonToken.BEGIN_OBJECT;	  }    else    if(o    instanceof    JsonArray)    {    }    else    if(o    instanceof    JsonArray)    {    return    JsonToken.BEGIN_OBJECT;    	non-compiled	[CE]  unreachable  statement	205	None	replace
500	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]      if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }      [BUGGY]  }  else  if(o  instanceof  JsonObject  &&  o  instanceof  JsonNull)  {  [BUGGY]      return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	add	}  else  if(o  instanceof  JsonObject  &&  o  instanceof  JsonNull)  {	  }    else    if(o    instanceof    JsonObject    ||    o    instanceof    JsonNull)    {    	compilable	  [FE]  AssertionError  	45	2	replace
501	[BUG]  [BUGGY]  }  else  if(o  instanceof  JsonObject  &&  o  instanceof  JsonNull)  {  [FE]  AssertionError  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]      if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }      [BUGGY]  }  else  if(o  instanceof  JsonObject  &&  o  instanceof  JsonNull)  {  [BUGGY]      return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	replace	}  else  if(o  instanceof  JsonObject  &&  o  instanceof  JsonNull)  {	  }    else    if(o    instanceof    JsonObject    ||    o    instanceof    JsonNull)    {    	compilable	  [FE]  AssertionError  	45	2	replace
502	[BUG]  [BUGGY]  [FE]  ArrayIndexOutOfBoundsException  [FE]      ArrayIndexOutOfBoundsException    [CONTEXT]      if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }      [BUGGY]  }  else  if(o  instanceof  JsonNull  ||  o  instanceof  JsonObject)  {  [BUGGY]      return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	add	}  else  if(o  instanceof  JsonNull  ||  o  instanceof  JsonObject)  {	  }    else    if(o    instanceof    JsonObject    ||    o    instanceof    JsonNull)    {    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	45	2	replace
503	[BUG]  [BUGGY]  }  else  if(o  instanceof  JsonNull  ||  o  instanceof  JsonObject)  {  [FE]  ArrayIndexOutOfBoundsException  [FE]      ArrayIndexOutOfBoundsException    [CONTEXT]      if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }      [BUGGY]  }  else  if(o  instanceof  JsonNull  ||  o  instanceof  JsonObject)  {  [BUGGY]      return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	replace	}  else  if(o  instanceof  JsonNull  ||  o  instanceof  JsonObject)  {	  }    else    if(o    instanceof    JsonObject    ||    o    instanceof    JsonNull)    {    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	45	2	replace
504	[BUG]  [BUGGY]  }  else  if(!(o  instanceof  JsonArray)||!(o  instanceof  JsonPrimitive))  {  }  else  if(!(o  instanceof  JsonArray)||!(o  instanceof  JsonPrimitive))  {  [CE]  missing  return  statement  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]      if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }      [BUGGY]  }  else  if(!(o  instanceof  JsonArray)||!(o  instanceof  JsonPrimitive))  {  }  else  if(!(o  instanceof  JsonArray)||!(o  instanceof  JsonPrimitive))  {  [BUGGY]      return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	replace	}    else    if(!(o    instanceof    JsonArray)||!(o    instanceof    JsonPrimitive))    {    }  else  if(!(o  instanceof  JsonArray)||!(o  instanceof  JsonPrimitive))  {	  	non-compiled	[CE]  missing  return  statement	250	None	add
505	[BUG]  [BUGGY]  }  else  if(!(o  instanceof  JsonArray)||!(o  instanceof  JsonPrimitive))  {  else  if(!(o  instanceof  JsonArray)||!(o  instanceof  JsonPrimitive))  {  [CE]  'else'  without  'if'  [FE]      ArrayIndexOutOfBoundsException    [CONTEXT]      if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }      [BUGGY]  }  else  if(!(o  instanceof  JsonArray)||!(o  instanceof  JsonPrimitive))  {  else  if(!(o  instanceof  JsonArray)||!(o  instanceof  JsonPrimitive))  {  [BUGGY]      return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	replace	}    else    if(!(o    instanceof    JsonArray)||!(o    instanceof    JsonPrimitive))    {    else  if(!(o  instanceof  JsonArray)||!(o  instanceof  JsonPrimitive))  {	  	non-compiled	[CE]  'else'  without  'if'	250	None	add
506	[BUG]  [BUGGY]  }  else  if(!(o  instanceof  JsonArray)||!(o  instanceof  JsonPrimitive))  {  <  }  else  if(!(o  instanceof  JsonArray)||!(o  instanceof  JsonPrimitive))  {  [CE]  illegal  start  of  type  [FE]        ArrayIndexOutOfBoundsException    [CONTEXT]      if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }      [BUGGY]  }  else  if(!(o  instanceof  JsonArray)||!(o  instanceof  JsonPrimitive))  {  <  }  else  if(!(o  instanceof  JsonArray)||!(o  instanceof  JsonPrimitive))  {  [BUGGY]      return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	replace	}    else    if(!(o    instanceof    JsonArray)||!(o    instanceof    JsonPrimitive))    {    <  }  else  if(!(o  instanceof  JsonArray)||!(o  instanceof  JsonPrimitive))  {	  	non-compiled	[CE]  illegal  start  of  type	250	None	add
507	[BUG]  [BUGGY]  }  else  if(!(o  instanceof  JsonArray)||!(o  instanceof  JsonPrimitive))  {  }  else  if(!(o  instanceof  JsonArray)&&!(o  instanceof  JsonPrimitive))  {  [CE]  missing  return  statement  [FE]          ArrayIndexOutOfBoundsException    [CONTEXT]      if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }      [BUGGY]  }  else  if(!(o  instanceof  JsonArray)||!(o  instanceof  JsonPrimitive))  {  }  else  if(!(o  instanceof  JsonArray)&&!(o  instanceof  JsonPrimitive))  {  [BUGGY]      return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	replace	}    else    if(!(o    instanceof    JsonArray)||!(o    instanceof    JsonPrimitive))    {    }  else  if(!(o  instanceof  JsonArray)&&!(o  instanceof  JsonPrimitive))  {	  	non-compiled	[CE]  missing  return  statement	250	None	add
508	[BUG]  [BUGGY]  }  else  if(!(o  instanceof  JsonArray)||!(o  instanceof  JsonPrimitive))  {  }  else  if(!(o  instanceof  JsonArray)&|!(o  instanceof  JsonPrimitive))  {  [CE]  illegal  start  of  expression  [FE]            ArrayIndexOutOfBoundsException    [CONTEXT]      if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }      [BUGGY]  }  else  if(!(o  instanceof  JsonArray)||!(o  instanceof  JsonPrimitive))  {  }  else  if(!(o  instanceof  JsonArray)&|!(o  instanceof  JsonPrimitive))  {  [BUGGY]      return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	replace	}    else    if(!(o    instanceof    JsonArray)||!(o    instanceof    JsonPrimitive))    {    }  else  if(!(o  instanceof  JsonArray)&|!(o  instanceof  JsonPrimitive))  {	  	non-compiled	[CE]  illegal  start  of  expression	250	None	add
509	[BUG]  [BUGGY]  }  else  if(!(o  instanceof  JsonArray)||!(o  instanceof  JsonPrimitive))  {  }  else  if(!(o  instanceof  JsonArray)||! "(o  instanceof  JsonPrimitive))  {  [CE]  unclosed  string  literal  [FE]              ArrayIndexOutOfBoundsException    [CONTEXT]      if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }      [BUGGY]  }  else  if(!(o  instanceof  JsonArray)||!(o  instanceof  JsonPrimitive))  {  }  else  if(!(o  instanceof  JsonArray)||! "(o  instanceof  JsonPrimitive))  {  [BUGGY]      return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	replace	}    else    if(!(o    instanceof    JsonArray)||!(o    instanceof    JsonPrimitive))    {    }  else  if(!(o  instanceof  JsonArray)||! "(o  instanceof  JsonPrimitive))  {	  	non-compiled	[CE]  unclosed  string  literal	250	None	add
510	[BUG]  [BUGGY]  }  else  if(o  instanceof  JsonObject  {  0)  {  [CE]  ')'  expected  [FE]                  ArrayIndexOutOfBoundsException      [CONTEXT]      if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }      [BUGGY]  }  else  if(o  instanceof  JsonObject  {  0)  {  [BUGGY]      return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	replace	}  else  if(o  instanceof  JsonObject  {  0)  {	  }    else    if(o    instanceof    JsonObject    ==    1)    {    	non-compiled	[CE]  ')'  expected	118	None	replace
511	[BUG]  [BUGGY]  }  else  if(o  instanceof  JsonArray  {  1)  {  [CE]  ')'  expected  [FE]                    ArrayIndexOutOfBoundsException      [CONTEXT]      if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }      [BUGGY]  }  else  if(o  instanceof  JsonArray  {  1)  {  [BUGGY]      return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	replace	}  else  if(o  instanceof  JsonArray  {  1)  {	  }    else    if(o    instanceof    JsonObject    ==    1)    {    	non-compiled	[CE]  ')'  expected	118	None	replace
512	[BUG]  [BUGGY]  Object[]  stack  =(Object[])o;  push(stack.size()  -  stack.length);  return  JsonToken.BOOLEAN;  [CE]  cannot  find  symbol  [FE]                                ArrayIndexOutOfBoundsException      [CONTEXT]      if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }      [BUGGY]  Object[]  stack  =(Object[])o;  push(stack.size()  -  stack.length);  return  JsonToken.BOOLEAN;  [BUGGY]      return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	replace	Object[]  stack  =(Object[])o;  push(stack.size()  -  stack.length);  return  JsonToken.BOOLEAN;	  if(o    instanceof    JsonArray)    {    Object[]    stack    =(Object[])o;    push(stack.size()    -    stack.length);    return    JsonToken.BOOLEAN;    }    	non-compiled	[CE]  cannot  find  symbol	38	None	replace
513	[BUG]  [BUGGY]  if(o  instanceof  Object[])  {  Object[]  stack  =(Object[])o;  push(stack.size()  -  stack.length);  return  JsonToken.BOOLEAN;  }  [CE]  cannot  find  symbol  [FE]                                  ArrayIndexOutOfBoundsException      [CONTEXT]      if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }      [BUGGY]  if(o  instanceof  Object[])  {  Object[]  stack  =(Object[])o;  push(stack.size()  -  stack.length);  return  JsonToken.BOOLEAN;  }  [BUGGY]      return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	replace	if(o  instanceof  Object[])  {  Object[]  stack  =(Object[])o;  push(stack.size()  -  stack.length);  return  JsonToken.BOOLEAN;  }	  if(o    instanceof    JsonArray)    {    Object[]    stack    =(Object[])o;    push(stack.size()    -    stack.length);    return    JsonToken.BOOLEAN;    }    	non-compiled	[CE]  cannot  find  symbol	38	None	replace
514	[BUG]  [BUGGY]  pull(stack.size()  -  stack.length);  return  JsonToken.BOOLEAN;  [CE]  cannot  find  symbol  [FE]                                    ArrayIndexOutOfBoundsException      [CONTEXT]      if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }      [BUGGY]  pull(stack.size()  -  stack.length);  return  JsonToken.BOOLEAN;  [BUGGY]      return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	replace	pull(stack.size()  -  stack.length);  return  JsonToken.BOOLEAN;	  if(o    instanceof    JsonArray)    {    Object[]    stack    =(Object[])o;    push(stack.size()    -    stack.length);    return    JsonToken.BOOLEAN;    }    	non-compiled	[CE]  cannot  find  symbol	38	None	replace
515	[BUG]  [BUGGY]  pom(stack.size()  -  stack.length);  return  JsonToken.BOOLEAN;  [CE]  cannot  find  symbol  [FE]                                      ArrayIndexOutOfBoundsException      [CONTEXT]      if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }      [BUGGY]  pom(stack.size()  -  stack.length);  return  JsonToken.BOOLEAN;  [BUGGY]      return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	replace	pom(stack.size()  -  stack.length);  return  JsonToken.BOOLEAN;	  if(o    instanceof    JsonArray)    {    Object[]    stack    =(Object[])o;    push(stack.size()    -    stack.length);    return    JsonToken.BOOLEAN;    }    	non-compiled	[CE]  cannot  find  symbol	38	None	replace
516	[BUG]  [BUGGY]  Stack  stack  =(Object[])o;  push(stack.size()  -  stack.length);  return  JsonToken.BOOLEAN;  [CE]  cannot  find  symbol  [FE]                                        ArrayIndexOutOfBoundsException      [CONTEXT]      if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }      [BUGGY]  Stack  stack  =(Object[])o;  push(stack.size()  -  stack.length);  return  JsonToken.BOOLEAN;  [BUGGY]      return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	replace	Stack  stack  =(Object[])o;  push(stack.size()  -  stack.length);  return  JsonToken.BOOLEAN;	  if(o    instanceof    JsonArray)    {    Object[]    stack    =(Object[])o;    push(stack.size()    -    stack.length);    return    JsonToken.BOOLEAN;    }    	non-compiled	[CE]  cannot  find  symbol	38	None	replace
517	[BUG]  [BUGGY]  push(stack.size()  -  stack.length);  return  JsonToken.BOOLEAN;  [CE]  cannot  find  symbol  [FE]                                          ArrayIndexOutOfBoundsException      [CONTEXT]      if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }      [BUGGY]  push(stack.size()  -  stack.length);  return  JsonToken.BOOLEAN;  [BUGGY]      return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	replace	push(stack.size()  -  stack.length);  return  JsonToken.BOOLEAN;	  if(o    instanceof    JsonArray)    {    Object[]    stack    =(Object[])o;    push(stack.size()    -    stack.length);    return    JsonToken.BOOLEAN;    }    	non-compiled	[CE]  cannot  find  symbol	38	None	replace
518	[BUG]  [BUGGY]  }  else  if(o  instanceof  JsonString  ||  o  instanceof  JsonPrimitive)  {  [CE]  cannot  find  symbol  [FE]                ArrayIndexOutOfBoundsException      [CONTEXT]      if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }      [BUGGY]  }  else  if(o  instanceof  JsonString  ||  o  instanceof  JsonPrimitive)  {  [BUGGY]      return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	replace	}  else  if(o  instanceof  JsonString  ||  o  instanceof  JsonPrimitive)  {	  }    else    if(o    instanceof    JsonObject    ||    o    instanceof    JsonPrimitive)    {    <    JsonObject>    push(iterator.next());    return    JsonToken.BEGIN_OBJECT;    }    else    if(o    instanceof    JsonObject    ||    o    instanceof    JsonPrimitive)    {    	non-compiled	[CE]  cannot  find  symbol	60	None	replace
519	[BUG]  [BUGGY]  [FE]  ArrayIndexOutOfBoundsException  [FE]                  ArrayIndexOutOfBoundsException      [CONTEXT]      if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }      [BUGGY]  }  else  if(o  instanceof  JsonObject  &&!(o  instanceof  JsonArray  ||  o  instanceof  JsonPrimitive))  {  [BUGGY]      return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	add	}  else  if(o  instanceof  JsonObject  &&!(o  instanceof  JsonArray  ||  o  instanceof  JsonPrimitive))  {	  }    else    if(o    instanceof    JsonObject    ||    o    instanceof    JsonPrimitive)    {    <    JsonObject>    push(iterator.next());    return    JsonToken.BEGIN_OBJECT;    }    else    if(o    instanceof    JsonObject    ||    o    instanceof    JsonPrimitive)    {    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	60	2	replace
520	[BUG]  [BUGGY]  }  else  if(o  instanceof  JsonObject  &&!(o  instanceof  JsonArray  ||  o  instanceof  JsonPrimitive))  {  [FE]  ArrayIndexOutOfBoundsException  [FE]                  ArrayIndexOutOfBoundsException      [CONTEXT]      if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }      [BUGGY]  }  else  if(o  instanceof  JsonObject  &&!(o  instanceof  JsonArray  ||  o  instanceof  JsonPrimitive))  {  [BUGGY]      return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	replace	}  else  if(o  instanceof  JsonObject  &&!(o  instanceof  JsonArray  ||  o  instanceof  JsonPrimitive))  {	  }    else    if(o    instanceof    JsonObject    ||    o    instanceof    JsonPrimitive)    {    <    JsonObject>    push(iterator.next());    return    JsonToken.BEGIN_OBJECT;    }    else    if(o    instanceof    JsonObject    ||    o    instanceof    JsonPrimitive)    {    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	60	2	replace
521	[BUG]  [BUGGY]  }  else  if(!(o  instanceof  JsonArray)&&  isObject  ||  isObject)  {  [CE]  cannot  find  symbol  isObject  [FE]            ArrayIndexOutOfBoundsException      [CONTEXT]      if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }      [BUGGY]  }  else  if(!(o  instanceof  JsonArray)&&  isObject  ||  isObject)  {  [BUGGY]      return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	replace	}  else  if(!(o  instanceof  JsonArray)&&  isObject  ||  isObject)  {	  }    else    if(!(o    instanceof    JsonArray)&&    isObject)    {    	non-compiled	[CE]  cannot  find  symbol  isObject	66	None	replace
522	[BUG]  [BUGGY]  }  else  if(!(o  instanceof  JsonArray)&&  isFunctionObject)  {  [CE]  cannot  find  symbol  isFunctionObject  [FE]              ArrayIndexOutOfBoundsException      [CONTEXT]      if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }      [BUGGY]  }  else  if(!(o  instanceof  JsonArray)&&  isFunctionObject)  {  [BUGGY]      return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	replace	}  else  if(!(o  instanceof  JsonArray)&&  isFunctionObject)  {	  }    else    if(!(o    instanceof    JsonArray)&&    isObject)    {    	non-compiled	[CE]  cannot  find  symbol  isFunctionObject	66	None	replace
523	[BUG]  [BUGGY]  }  else  if(!(o  instanceof  JsonArray)&&  isNumberObject)  {  [CE]  cannot  find  symbol  isNumberObject  [FE]                ArrayIndexOutOfBoundsException      [CONTEXT]      if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }      [BUGGY]  }  else  if(!(o  instanceof  JsonArray)&&  isNumberObject)  {  [BUGGY]      return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	replace	}  else  if(!(o  instanceof  JsonArray)&&  isNumberObject)  {	  }    else    if(!(o    instanceof    JsonArray)&&    isObject)    {    	non-compiled	[CE]  cannot  find  symbol  isNumberObject	66	None	replace
524	[BUG]  [BUGGY]  }  else  if(!(o  instanceof  JsonArray)&&  isNumber)  {  [CE]  cannot  find  symbol  isNumber  [FE]                  ArrayIndexOutOfBoundsException      [CONTEXT]      if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }      [BUGGY]  }  else  if(!(o  instanceof  JsonArray)&&  isNumber)  {  [BUGGY]      return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	replace	}  else  if(!(o  instanceof  JsonArray)&&  isNumber)  {	  }    else    if(!(o    instanceof    JsonArray)&&    isObject)    {    	non-compiled	[CE]  cannot  find  symbol  isNumber	66	None	replace
525	[BUG]  [BUGGY]  }  else  if(!(o  instanceof  JsonArray)&&  isNullOrEmpty)  {  [CE]  cannot  find  symbol  isNullOrEmpty  [FE]                    ArrayIndexOutOfBoundsException      [CONTEXT]      if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }      [BUGGY]  }  else  if(!(o  instanceof  JsonArray)&&  isNullOrEmpty)  {  [BUGGY]      return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	replace	}  else  if(!(o  instanceof  JsonArray)&&  isNullOrEmpty)  {	  }    else    if(!(o    instanceof    JsonArray)&&    isObject)    {    	non-compiled	[CE]  cannot  find  symbol  isNullOrEmpty	66	None	replace
526	[BUG]  [BUGGY]  }  else  if(o  instanceof  JsonArray)  {  ArrayIndexOutOfBoundsException  e  =  new  ArrayIndexOutOfBoundsException(pathNames[0],  stackSize[1]);  [CE]  array  required,  but  int  found  [FE]                ArrayIndexOutOfBoundsException      [CONTEXT]      if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }      [BUGGY]  }  else  if(o  instanceof  JsonArray)  {  ArrayIndexOutOfBoundsException  e  =  new  ArrayIndexOutOfBoundsException(pathNames[0],  stackSize[1]);  [BUGGY]      return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	replace	}  else  if(o  instanceof  JsonArray)  {  ArrayIndexOutOfBoundsException  e  =  new  ArrayIndexOutOfBoundsException(pathNames[0],  stackSize[1]);	  }    else    if(!(o    instanceof    JsonArray))    {    ArrayIndexOutOfBoundsException    e    =    new    ArrayIndexOutOfBoundsException(pathNames[0],    stackSize[1]);    	non-compiled	[CE]  array  required,  but  int  found	135	None	replace
527	[BUG]  [BUGGY]  }  else  if(isObject)  {  ArrayIndexOutOfBoundsException  e  =  new  ArrayIndexOutOfBoundsException(pathNames[0],  stackSize[1]);  [CE]  cannot  find  symbol  isObject  [FE]                  ArrayIndexOutOfBoundsException      [CONTEXT]      if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }      [BUGGY]  }  else  if(isObject)  {  ArrayIndexOutOfBoundsException  e  =  new  ArrayIndexOutOfBoundsException(pathNames[0],  stackSize[1]);  [BUGGY]      return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	replace	}  else  if(isObject)  {  ArrayIndexOutOfBoundsException  e  =  new  ArrayIndexOutOfBoundsException(pathNames[0],  stackSize[1]);	  }    else    if(!(o    instanceof    JsonArray))    {    ArrayIndexOutOfBoundsException    e    =    new    ArrayIndexOutOfBoundsException(pathNames[0],    stackSize[1]);    	non-compiled	[CE]  cannot  find  symbol  isObject	135	None	replace
528	[BUG]  [BUGGY]  instanceof  ArrayIndexOutOfBoundsException  :  new  ArrayIndexOutOfBoundsException(pathNames[0],  stackSize[1]);  [CE]  illegal  start  of  expression  [FE]                    ArrayIndexOutOfBoundsException      [CONTEXT]      if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }      [BUGGY]  instanceof  ArrayIndexOutOfBoundsException  :  new  ArrayIndexOutOfBoundsException(pathNames[0],  stackSize[1]);  [BUGGY]      return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	replace	instanceof  ArrayIndexOutOfBoundsException  :  new  ArrayIndexOutOfBoundsException(pathNames[0],  stackSize[1]);	  }    else    if(!(o    instanceof    JsonArray))    {    ArrayIndexOutOfBoundsException    e    =    new    ArrayIndexOutOfBoundsException(pathNames[0],    stackSize[1]);    	non-compiled	[CE]  illegal  start  of  expression	135	None	replace
529	[BUG]  [BUGGY]  instanceof  ArrayIndexOutOfBoundsException  &=  new  ArrayIndexOutOfBoundsException(pathNames[0],  stackSize[1]);  [CE]  illegal  start  of  expression  [FE]                      ArrayIndexOutOfBoundsException      [CONTEXT]      if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }      [BUGGY]  instanceof  ArrayIndexOutOfBoundsException  &=  new  ArrayIndexOutOfBoundsException(pathNames[0],  stackSize[1]);  [BUGGY]      return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	replace	instanceof  ArrayIndexOutOfBoundsException  &=  new  ArrayIndexOutOfBoundsException(pathNames[0],  stackSize[1]);	  }    else    if(!(o    instanceof    JsonArray))    {    ArrayIndexOutOfBoundsException    e    =    new    ArrayIndexOutOfBoundsException(pathNames[0],    stackSize[1]);    	non-compiled	[CE]  illegal  start  of  expression	135	None	replace
530	[BUG]  [BUGGY]  }  else  if(!(o  instanceof  JsonArray))  {  ArrayIndexOutOfBoundsException  e  =  new  ArrayIndexOutOfBoundsException(pathNames[0],  pathSize[1]);  [CE]  cannot  find  symbol  pathSize  [FE]                        ArrayIndexOutOfBoundsException      [CONTEXT]      if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }      [BUGGY]  }  else  if(!(o  instanceof  JsonArray))  {  ArrayIndexOutOfBoundsException  e  =  new  ArrayIndexOutOfBoundsException(pathNames[0],  pathSize[1]);  [BUGGY]      return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	replace	}  else  if(!(o  instanceof  JsonArray))  {  ArrayIndexOutOfBoundsException  e  =  new  ArrayIndexOutOfBoundsException(pathNames[0],  pathSize[1]);	  }    else    if(!(o    instanceof    JsonArray))    {    ArrayIndexOutOfBoundsException    e    =    new    ArrayIndexOutOfBoundsException(pathNames[0],    stackSize[1]);    	non-compiled	[CE]  cannot  find  symbol  pathSize	135	None	replace
531	[BUG]  [BUGGY]  }  else  if(o  instanceof  JsonNull)  {  }  else  if(o  instanceof  JsonNull)  {  return  JsonToken.BEGIN_OBJECT;  }  [CE]  illegal  start  of  type  [FE]              AssertionError      [CONTEXT]      if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }      [BUGGY]  }  else  if(o  instanceof  JsonNull)  {  }  else  if(o  instanceof  JsonNull)  {  return  JsonToken.BEGIN_OBJECT;  }  [BUGGY]      return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	replace	}  else  if(o  instanceof  JsonNull)  {  }  else  if(o  instanceof  JsonNull)  {  return  JsonToken.BEGIN_OBJECT;  }	  }    else    if(o    instanceof    JsonNull)    {    }    else    if(o    instanceof    JsonNull)    <    return    JsonToken.BEGIN_OBJECT;    	non-compiled	[CE]  illegal  start  of  type	72	None	replace
532	[BUG]  [BUGGY]  }  else  if(o  instanceof  JsonArray)  {  }  else  if(o  instanceof  JsonNull)  {  return  JsonToken.BEGIN_OBJECT;  }  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]      if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }      [BUGGY]  }  else  if(o  instanceof  JsonArray)  {  }  else  if(o  instanceof  JsonNull)  {  return  JsonToken.BEGIN_OBJECT;  }  [BUGGY]      return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	replace	}  else  if(o  instanceof  JsonArray)  {  }  else  if(o  instanceof  JsonNull)  {  return  JsonToken.BEGIN_OBJECT;  }	  }    else    if(o    instanceof    JsonNull)    {    }    else    if(o    instanceof    JsonNull)    <    return    JsonToken.BEGIN_OBJECT;    	non-compiled	[CE]  illegal  start  of  type	72	None	replace
533	[BUG]  [BUGGY]  }  else  if(o  instanceof  String)  {  }  else  if(o  instanceof  JsonNull)  {  return  JsonToken.BEGIN_OBJECT;  }  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]      if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }      [BUGGY]  }  else  if(o  instanceof  String)  {  }  else  if(o  instanceof  JsonNull)  {  return  JsonToken.BEGIN_OBJECT;  }  [BUGGY]      return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	replace	}  else  if(o  instanceof  String)  {  }  else  if(o  instanceof  JsonNull)  {  return  JsonToken.BEGIN_OBJECT;  }	  }    else    if(o    instanceof    JsonNull)    {    }    else    if(o    instanceof    JsonNull)    <    return    JsonToken.BEGIN_OBJECT;    	non-compiled	[CE]  illegal  start  of  type	72	None	replace
534	[BUG]  [BUGGY]  }  else  if(o  instanceof  JsonNull)  {  }  else  if(o  instanceof  JsonNull  ||  o  instanceof  JsonNull)  {  return  JsonToken.BEGIN_OBJECT;  }  [CE]  illegal  start  of  type  [FE]                    AssertionError      [CONTEXT]      if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }      [BUGGY]  }  else  if(o  instanceof  JsonNull)  {  }  else  if(o  instanceof  JsonNull  ||  o  instanceof  JsonNull)  {  return  JsonToken.BEGIN_OBJECT;  }  [BUGGY]      return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	replace	}  else  if(o  instanceof  JsonNull)  {  }  else  if(o  instanceof  JsonNull  ||  o  instanceof  JsonNull)  {  return  JsonToken.BEGIN_OBJECT;  }	  }    else    if(o    instanceof    JsonNull)    {    }    else    if(o    instanceof    JsonNull)    <    return    JsonToken.BEGIN_OBJECT;    	non-compiled	[CE]  illegal  start  of  type	72	None	replace
535	[BUG]  [BUGGY]  }  else  if(o  instanceof  JsonNumber)  {  }  else  if(o  instanceof  JsonNull)  {  return  JsonToken.BEGIN_OBJECT;  }  [CE]  illegal  start  of  type  [FE]                      AssertionError      [CONTEXT]      if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }      [BUGGY]  }  else  if(o  instanceof  JsonNumber)  {  }  else  if(o  instanceof  JsonNull)  {  return  JsonToken.BEGIN_OBJECT;  }  [BUGGY]      return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	replace	}  else  if(o  instanceof  JsonNumber)  {  }  else  if(o  instanceof  JsonNull)  {  return  JsonToken.BEGIN_OBJECT;  }	  }    else    if(o    instanceof    JsonNull)    {    }    else    if(o    instanceof    JsonNull)    <    return    JsonToken.BEGIN_OBJECT;    	non-compiled	[CE]  illegal  start  of  type	72	None	replace
536	[BUG]  [BUGGY]  }  else  if(o  instanceof  JsonString)  {  }  else  if(o  instanceof  JsonNull)  {  return  JsonToken.BEGIN_OBJECT;  }  [CE]  illegal  start  of  type  [FE]                        AssertionError      [CONTEXT]      if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }      [BUGGY]  }  else  if(o  instanceof  JsonString)  {  }  else  if(o  instanceof  JsonNull)  {  return  JsonToken.BEGIN_OBJECT;  }  [BUGGY]      return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	replace	}  else  if(o  instanceof  JsonString)  {  }  else  if(o  instanceof  JsonNull)  {  return  JsonToken.BEGIN_OBJECT;  }	  }    else    if(o    instanceof    JsonNull)    {    }    else    if(o    instanceof    JsonNull)    <    return    JsonToken.BEGIN_OBJECT;    	non-compiled	[CE]  illegal  start  of  type	72	None	replace
537	[BUG]  [BUGGY]  }  else  if(!(o  instanceof  JsonArray))  {  ((  JsonObject)o).setObject(isObject?  JsonToken.BEGIN_OBJECT  :  JsonToken.BEGIN_OBJECT);  [CE]  cannot  find  symbol  isObject  [FE]                  AssertionError      [CONTEXT]      if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }      [BUGGY]  }  else  if(!(o  instanceof  JsonArray))  {  ((  JsonObject)o).setObject(isObject?  JsonToken.BEGIN_OBJECT  :  JsonToken.BEGIN_OBJECT);  [BUGGY]      return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	replace	}  else  if(!(o  instanceof  JsonArray))  {  ((  JsonObject)o).setObject(isObject?  JsonToken.BEGIN_OBJECT  :  JsonToken.BEGIN_OBJECT);	  }    else    if(!(o    instanceof    JsonObject))    {    ((    JsonObject)o).setObject(isObject?    JsonToken.BEGIN_OBJECT    :    JsonToken.BEGIN_OBJECT);    	non-compiled	[CE]  cannot  find  symbol  isObject	161	None	replace
538	[BUG]  [BUGGY]  }  else  if(!(o  instanceof  JsonArray))  {  ((  JsonObject)o).setObject(isObject?  JsonToken.BEGIN_OBJECT  :  JsonToken.BEGIN_OBJECT);  }  [CE]  illegal  start  of  type  [FE]                    AssertionError      [CONTEXT]      if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }      [BUGGY]  }  else  if(!(o  instanceof  JsonArray))  {  ((  JsonObject)o).setObject(isObject?  JsonToken.BEGIN_OBJECT  :  JsonToken.BEGIN_OBJECT);  }  [BUGGY]      return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	replace	}  else  if(!(o  instanceof  JsonArray))  {  ((  JsonObject)o).setObject(isObject?  JsonToken.BEGIN_OBJECT  :  JsonToken.BEGIN_OBJECT);  }	  }    else    if(!(o    instanceof    JsonObject))    {    ((    JsonObject)o).setObject(isObject?    JsonToken.BEGIN_OBJECT    :    JsonToken.BEGIN_OBJECT);    	non-compiled	[CE]  illegal  start  of  type	161	None	replace
539	[BUG]  [BUGGY]  }  else  if(o  instanceof  JsonObject)  {  ((  JsonObject)o).setObject(isObject?  JsonToken.BEGIN_OBJECT  :  JsonToken.BEGIN_OBJECT);  [CE]  cannot  find  symbol  isObject  [FE]                      AssertionError      [CONTEXT]      if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }      [BUGGY]  }  else  if(o  instanceof  JsonObject)  {  ((  JsonObject)o).setObject(isObject?  JsonToken.BEGIN_OBJECT  :  JsonToken.BEGIN_OBJECT);  [BUGGY]      return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	replace	}  else  if(o  instanceof  JsonObject)  {  ((  JsonObject)o).setObject(isObject?  JsonToken.BEGIN_OBJECT  :  JsonToken.BEGIN_OBJECT);	  }    else    if(!(o    instanceof    JsonObject))    {    ((    JsonObject)o).setObject(isObject?    JsonToken.BEGIN_OBJECT    :    JsonToken.BEGIN_OBJECT);    	non-compiled	[CE]  cannot  find  symbol  isObject	161	None	replace
540	[BUG]  [BUGGY]  }  else  if(!(o  instanceof  JsonObject))  {  ((  JsonObject)o).setObject(isObject?  JsonToken.BEGIN_OBJECT  :  JsonToken.BEGIN_OBJECT);  }  [CE]  illegal  start  of  type  [FE]                        AssertionError      [CONTEXT]      if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }      [BUGGY]  }  else  if(!(o  instanceof  JsonObject))  {  ((  JsonObject)o).setObject(isObject?  JsonToken.BEGIN_OBJECT  :  JsonToken.BEGIN_OBJECT);  }  [BUGGY]      return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	replace	}  else  if(!(o  instanceof  JsonObject))  {  ((  JsonObject)o).setObject(isObject?  JsonToken.BEGIN_OBJECT  :  JsonToken.BEGIN_OBJECT);  }	  }    else    if(!(o    instanceof    JsonObject))    {    ((    JsonObject)o).setObject(isObject?    JsonToken.BEGIN_OBJECT    :    JsonToken.BEGIN_OBJECT);    	non-compiled	[CE]  illegal  start  of  type	161	None	replace
541	[BUG]  [BUGGY]  }  else  if(!(o  instanceof  JsonString))  {  ((  JsonString)o).setObject(isObject?  JsonToken.BEGIN_OBJECT  :  JsonToken.BEGIN_OBJECT);  [CE]  cannot  find  symbol  [FE]                          AssertionError      [CONTEXT]      if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }      [BUGGY]  }  else  if(!(o  instanceof  JsonString))  {  ((  JsonString)o).setObject(isObject?  JsonToken.BEGIN_OBJECT  :  JsonToken.BEGIN_OBJECT);  [BUGGY]      return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	replace	}  else  if(!(o  instanceof  JsonString))  {  ((  JsonString)o).setObject(isObject?  JsonToken.BEGIN_OBJECT  :  JsonToken.BEGIN_OBJECT);	  }    else    if(!(o    instanceof    JsonObject))    {    ((    JsonObject)o).setObject(isObject?    JsonToken.BEGIN_OBJECT    :    JsonToken.BEGIN_OBJECT);    	non-compiled	[CE]  cannot  find  symbol	161	None	replace
542	[BUG]  [BUGGY]  }  else  if(o  instanceof  JsonObject)  {  ((  JsonObject)o).setObject(isObject?  JsonToken.BEGIN_OBJECT  :  JsonToken.BEGIN_OBJECT);  }  [CE]  illegal  start  of  type  [FE]                            AssertionError      [CONTEXT]      if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }      [BUGGY]  }  else  if(o  instanceof  JsonObject)  {  ((  JsonObject)o).setObject(isObject?  JsonToken.BEGIN_OBJECT  :  JsonToken.BEGIN_OBJECT);  }  [BUGGY]      return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	replace	}  else  if(o  instanceof  JsonObject)  {  ((  JsonObject)o).setObject(isObject?  JsonToken.BEGIN_OBJECT  :  JsonToken.BEGIN_OBJECT);  }	  }    else    if(!(o    instanceof    JsonObject))    {    ((    JsonObject)o).setObject(isObject?    JsonToken.BEGIN_OBJECT    :    JsonToken.BEGIN_OBJECT);    	non-compiled	[CE]  illegal  start  of  type	161	None	replace
543	[BUG]  [BUGGY]  }  else  if(!(o  instanceof  JsonArray  <  Object>))  {  [CE]  type  JsonArray  does  not  take  parameters  [FE]          AssertionError      [CONTEXT]      if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }      [BUGGY]  }  else  if(!(o  instanceof  JsonArray  <  Object>))  {  [BUGGY]      return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	replace	}  else  if(!(o  instanceof  JsonArray  <  Object>))  {	  }    else    if(o    instanceof    JsonArray    <    Object>)    {    	non-compiled	[CE]  type  JsonArray  does  not  take  parameters	199	None	replace
544	[BUG]  [BUGGY]  }  else  if(o  instanceof  JsonNumber  <  Object>)  {  [CE]  cannot  find  symbol  [FE]            AssertionError      [CONTEXT]      if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }      [BUGGY]  }  else  if(o  instanceof  JsonNumber  <  Object>)  {  [BUGGY]      return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	replace	}  else  if(o  instanceof  JsonNumber  <  Object>)  {	  }    else    if(o    instanceof    JsonArray    <    Object>)    {    	non-compiled	[CE]  cannot  find  symbol	199	None	replace
545	[BUG]  [BUGGY]  }  else  if(o  instanceof  JsonArray  ||  o  instanceof  JsonObject)  {  }  else  if(o  instanceof  JsonArray  ||  o  instanceof  JsonObject)  {  [CE]  missing  return  statement  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]      if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }      [BUGGY]  }  else  if(o  instanceof  JsonArray  ||  o  instanceof  JsonObject)  {  }  else  if(o  instanceof  JsonArray  ||  o  instanceof  JsonObject)  {  [BUGGY]      return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	replace	}    else    if(o    instanceof    JsonArray    ||    o    instanceof    JsonObject)    {    }  else  if(o  instanceof  JsonArray  ||  o  instanceof  JsonObject)  {	  	non-compiled	[CE]  missing  return  statement	163	None	add
546	[BUG]  [BUGGY]  }  else  if(o  instanceof  JsonArray  ||  o  instanceof  JsonObject)  {  }  else  if(o  instanceof  JsonArray  ||  o  instanceof  JsonObject)  <  return  JsonToken.BEGIN_OBJECT;  [CE]  illegal  start  of  type  [FE]      ArrayIndexOutOfBoundsException    [CONTEXT]      if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }      [BUGGY]  }  else  if(o  instanceof  JsonArray  ||  o  instanceof  JsonObject)  {  }  else  if(o  instanceof  JsonArray  ||  o  instanceof  JsonObject)  <  return  JsonToken.BEGIN_OBJECT;  [BUGGY]      return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	replace	}    else    if(o    instanceof    JsonArray    ||    o    instanceof    JsonObject)    {    }  else  if(o  instanceof  JsonArray  ||  o  instanceof  JsonObject)  <  return  JsonToken.BEGIN_OBJECT;	  	non-compiled	[CE]  illegal  start  of  type	163	None	add
547	[BUG]  [BUGGY]  }  else  if(o  instanceof  JsonArray  ||  o  instanceof  JsonObject)  {  else  if(o  instanceof  JsonArray  ||  o  instanceof  JsonObject)  {  [CE]  'else'  without  'if'  [FE]        ArrayIndexOutOfBoundsException    [CONTEXT]      if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }      [BUGGY]  }  else  if(o  instanceof  JsonArray  ||  o  instanceof  JsonObject)  {  else  if(o  instanceof  JsonArray  ||  o  instanceof  JsonObject)  {  [BUGGY]      return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	replace	}    else    if(o    instanceof    JsonArray    ||    o    instanceof    JsonObject)    {    else  if(o  instanceof  JsonArray  ||  o  instanceof  JsonObject)  {	  	non-compiled	[CE]  'else'  without  'if'	163	None	add
548	[BUG]  [BUGGY]  }  else  if(o  instanceof  JsonArray  ||  o  instanceof  JsonObject)  {  }  else  if(o  instanceof  JsonObject  ||  o  instanceof  JsonObject)  {  [CE]  missing  return  statement  [FE]          ArrayIndexOutOfBoundsException    [CONTEXT]      if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }      [BUGGY]  }  else  if(o  instanceof  JsonArray  ||  o  instanceof  JsonObject)  {  }  else  if(o  instanceof  JsonObject  ||  o  instanceof  JsonObject)  {  [BUGGY]      return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	replace	}    else    if(o    instanceof    JsonArray    ||    o    instanceof    JsonObject)    {    }  else  if(o  instanceof  JsonObject  ||  o  instanceof  JsonObject)  {	  	non-compiled	[CE]  missing  return  statement	163	None	add
549	[BUG]  [BUGGY]  }  else  if(o  instanceof  JsonArray  ||  o  instanceof  JsonObject)  {  <  }  else  if(o  instanceof  JsonArray  ||  o  instanceof  JsonObject)  {  [CE]  illegal  start  of  type  [FE]            ArrayIndexOutOfBoundsException    [CONTEXT]      if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }      [BUGGY]  }  else  if(o  instanceof  JsonArray  ||  o  instanceof  JsonObject)  {  <  }  else  if(o  instanceof  JsonArray  ||  o  instanceof  JsonObject)  {  [BUGGY]      return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	replace	}    else    if(o    instanceof    JsonArray    ||    o    instanceof    JsonObject)    {    <  }  else  if(o  instanceof  JsonArray  ||  o  instanceof  JsonObject)  {	  	non-compiled	[CE]  illegal  start  of  type	163	None	add
550	[BUG]  [BUGGY]  }  else  if(o  instanceof  JsonArray  ||  o  instanceof  JsonObject)  {  }  else  if(e  instanceof  JsonArray  ||  o  instanceof  JsonObject)  {  [CE]  cannot  find  symbol  e  [FE]              ArrayIndexOutOfBoundsException    [CONTEXT]      if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }      [BUGGY]  }  else  if(o  instanceof  JsonArray  ||  o  instanceof  JsonObject)  {  }  else  if(e  instanceof  JsonArray  ||  o  instanceof  JsonObject)  {  [BUGGY]      return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	replace	}    else    if(o    instanceof    JsonArray    ||    o    instanceof    JsonObject)    {    }  else  if(e  instanceof  JsonArray  ||  o  instanceof  JsonObject)  {	  	non-compiled	[CE]  cannot  find  symbol  e	163	None	add
551	[BUG]  [BUGGY]  }  else  if(o  instanceof  JsonArray  ||  o  instanceof  JsonObject)  {  }  else  if(o  instanceof  JsonArray  ||  o  instanceof  JsonObject)  <  return  JsonToken.END_OBJECT;  [CE]  illegal  start  of  type  [FE]                ArrayIndexOutOfBoundsException    [CONTEXT]      if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }      [BUGGY]  }  else  if(o  instanceof  JsonArray  ||  o  instanceof  JsonObject)  {  }  else  if(o  instanceof  JsonArray  ||  o  instanceof  JsonObject)  <  return  JsonToken.END_OBJECT;  [BUGGY]      return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	replace	}    else    if(o    instanceof    JsonArray    ||    o    instanceof    JsonObject)    {    }  else  if(o  instanceof  JsonArray  ||  o  instanceof  JsonObject)  <  return  JsonToken.END_OBJECT;	  	non-compiled	[CE]  illegal  start  of  type	163	None	add
552	[BUG]  [BUGGY]  }  else  if(o  instanceof  JsonObject  &&!(o  instanceof  JsonPrimitive))  {  }  else  if(o  instanceof  JsonObject  &&!(o  instanceof  JsonPrimitive))  {  [CE]  missing  return  statement  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]      if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }      [BUGGY]  }  else  if(o  instanceof  JsonObject  &&!(o  instanceof  JsonPrimitive))  {  }  else  if(o  instanceof  JsonObject  &&!(o  instanceof  JsonPrimitive))  {  [BUGGY]      return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	replace	}    else    if(o    instanceof    JsonObject    &&!(o    instanceof    JsonPrimitive))    {    }  else  if(o  instanceof  JsonObject  &&!(o  instanceof  JsonPrimitive))  {	  	non-compiled	[CE]  missing  return  statement	181	None	add
553	[BUG]  [BUGGY]  }  else  if(o  instanceof  JsonObject  &&!(o  instanceof  JsonPrimitive))  {  else  if(o  instanceof  JsonObject  &&!(o  instanceof  JsonPrimitive))  {  [CE]  'else'  without  'if'  [FE]      ArrayIndexOutOfBoundsException    [CONTEXT]      if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }      [BUGGY]  }  else  if(o  instanceof  JsonObject  &&!(o  instanceof  JsonPrimitive))  {  else  if(o  instanceof  JsonObject  &&!(o  instanceof  JsonPrimitive))  {  [BUGGY]      return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	replace	}    else    if(o    instanceof    JsonObject    &&!(o    instanceof    JsonPrimitive))    {    else  if(o  instanceof  JsonObject  &&!(o  instanceof  JsonPrimitive))  {	  	non-compiled	[CE]  'else'  without  'if'	181	None	add
554	[BUG]  [BUGGY]  }  else  if(o  instanceof  JsonObject  &&!(o  instanceof  JsonPrimitive))  {  }  else  if(o  instanceof  JsonObject  ||!(o  instanceof  JsonPrimitive))  {  [CE]  missing  return  statement  [FE]        ArrayIndexOutOfBoundsException    [CONTEXT]      if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }      [BUGGY]  }  else  if(o  instanceof  JsonObject  &&!(o  instanceof  JsonPrimitive))  {  }  else  if(o  instanceof  JsonObject  ||!(o  instanceof  JsonPrimitive))  {  [BUGGY]      return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	replace	}    else    if(o    instanceof    JsonObject    &&!(o    instanceof    JsonPrimitive))    {    }  else  if(o  instanceof  JsonObject  ||!(o  instanceof  JsonPrimitive))  {	  	non-compiled	[CE]  missing  return  statement	181	None	add
555	[BUG]  [BUGGY]  }  else  if(o  instanceof  JsonObject  &&!(o  instanceof  JsonPrimitive))  {  <  }  else  if(o  instanceof  JsonObject  &&!(o  instanceof  JsonPrimitive))  {  [CE]  illegal  start  of  type  [FE]          ArrayIndexOutOfBoundsException    [CONTEXT]      if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }      [BUGGY]  }  else  if(o  instanceof  JsonObject  &&!(o  instanceof  JsonPrimitive))  {  <  }  else  if(o  instanceof  JsonObject  &&!(o  instanceof  JsonPrimitive))  {  [BUGGY]      return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	replace	}    else    if(o    instanceof    JsonObject    &&!(o    instanceof    JsonPrimitive))    {    <  }  else  if(o  instanceof  JsonObject  &&!(o  instanceof  JsonPrimitive))  {	  	non-compiled	[CE]  illegal  start  of  type	181	None	add
556	[BUG]  [BUGGY]  }  else  if(o  instanceof  JsonObject  &&!(o  instanceof  JsonPrimitive))  {  }  else  if(o  instanceof  JsonObject  &&  is(o  instanceof  JsonPrimitive))  {  [CE]  cannot  find  symbol  [FE]            ArrayIndexOutOfBoundsException    [CONTEXT]      if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }      [BUGGY]  }  else  if(o  instanceof  JsonObject  &&!(o  instanceof  JsonPrimitive))  {  }  else  if(o  instanceof  JsonObject  &&  is(o  instanceof  JsonPrimitive))  {  [BUGGY]      return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	replace	}    else    if(o    instanceof    JsonObject    &&!(o    instanceof    JsonPrimitive))    {    }  else  if(o  instanceof  JsonObject  &&  is(o  instanceof  JsonPrimitive))  {	  	non-compiled	[CE]  cannot  find  symbol	181	None	add
557	[BUG]  [BUGGY]  }  else  if(o  instanceof  JsonObject  &&!(o  instanceof  JsonPrimitive))  {  }  else  if(o  instanceof  JsonObject  &&...(o  instanceof  JsonPrimitive))  {  [CE]  illegal  start  of  expression  [FE]              ArrayIndexOutOfBoundsException    [CONTEXT]      if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }      [BUGGY]  }  else  if(o  instanceof  JsonObject  &&!(o  instanceof  JsonPrimitive))  {  }  else  if(o  instanceof  JsonObject  &&...(o  instanceof  JsonPrimitive))  {  [BUGGY]      return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	replace	}    else    if(o    instanceof    JsonObject    &&!(o    instanceof    JsonPrimitive))    {    }  else  if(o  instanceof  JsonObject  &&...(o  instanceof  JsonPrimitive))  {	  	non-compiled	[CE]  illegal  start  of  expression	181	None	add
558	[BUG]  [BUGGY]  }  else  if(o  instanceof  JsonObject  &&!(o  instanceof  JsonPrimitive))  {  }  else  if(e  instanceof  JsonObject  &&!(o  instanceof  JsonPrimitive))  {  [CE]  cannot  find  symbol  e  [FE]                ArrayIndexOutOfBoundsException    [CONTEXT]      if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }      [BUGGY]  }  else  if(o  instanceof  JsonObject  &&!(o  instanceof  JsonPrimitive))  {  }  else  if(e  instanceof  JsonObject  &&!(o  instanceof  JsonPrimitive))  {  [BUGGY]      return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	replace	}    else    if(o    instanceof    JsonObject    &&!(o    instanceof    JsonPrimitive))    {    }  else  if(e  instanceof  JsonObject  &&!(o  instanceof  JsonPrimitive))  {	  	non-compiled	[CE]  cannot  find  symbol  e	181	None	add
559	[BUG]  [BUGGY]  }  else  if(!(o  instanceof  JsonNumber)&&  isObject)  {  [CE]  cannot  find  symbol  [FE]          AssertionError      [CONTEXT]      if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }      [BUGGY]  }  else  if(!(o  instanceof  JsonNumber)&&  isObject)  {  [BUGGY]      return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	replace	}  else  if(!(o  instanceof  JsonNumber)&&  isObject)  {	  }    else    if(!(o    instanceof    JsonNumber))    {    	non-compiled	[CE]  cannot  find  symbol	107	None	replace
560	[BUG]  [BUGGY]  }  else  if(!(o  instanceof  JsonNumber  ||  o  instanceof  JsonArray))  {  [CE]  cannot  find  symbol  [FE]            AssertionError      [CONTEXT]      if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }      [BUGGY]  }  else  if(!(o  instanceof  JsonNumber  ||  o  instanceof  JsonArray))  {  [BUGGY]      return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	replace	}  else  if(!(o  instanceof  JsonNumber  ||  o  instanceof  JsonArray))  {	  }    else    if(!(o    instanceof    JsonNumber))    {    	non-compiled	[CE]  cannot  find  symbol	107	None	replace
561	[BUG]  [BUGGY]  }  else  if(!(o  instanceof  JsonNumber  ||  o  instanceof  JsonObject))  {  [CE]  cannot  find  symbol  [FE]              AssertionError      [CONTEXT]      if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }      [BUGGY]  }  else  if(!(o  instanceof  JsonNumber  ||  o  instanceof  JsonObject))  {  [BUGGY]      return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	replace	}  else  if(!(o  instanceof  JsonNumber  ||  o  instanceof  JsonObject))  {	  }    else    if(!(o    instanceof    JsonNumber))    {    	non-compiled	[CE]  cannot  find  symbol	107	None	replace
562	[BUG]  [BUGGY]  }  else  if(!(o  instanceof  JsonNumber)&&!(o  instanceof  JsonArray))  {  [CE]  cannot  find  symbol  [FE]                AssertionError      [CONTEXT]      if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }      [BUGGY]  }  else  if(!(o  instanceof  JsonNumber)&&!(o  instanceof  JsonArray))  {  [BUGGY]      return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	replace	}  else  if(!(o  instanceof  JsonNumber)&&!(o  instanceof  JsonArray))  {	  }    else    if(!(o    instanceof    JsonNumber))    {    	non-compiled	[CE]  cannot  find  symbol	107	None	replace
563	[BUG]  [BUGGY]  }  else  if(!(o  instanceof  JsonNumber)||  isObject)  {  [CE]  cannot  find  symbol  [FE]                  AssertionError      [CONTEXT]      if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }      [BUGGY]  }  else  if(!(o  instanceof  JsonNumber)||  isObject)  {  [BUGGY]      return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	replace	}  else  if(!(o  instanceof  JsonNumber)||  isObject)  {	  }    else    if(!(o    instanceof    JsonNumber))    {    	non-compiled	[CE]  cannot  find  symbol	107	None	replace
564	[BUG]  [BUGGY]  }  else  if(!(o  instanceof  JsonNumber  ||  o  instanceof  JsonNull))  {  [CE]  cannot  find  symbol  [FE]                    AssertionError      [CONTEXT]      if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }      [BUGGY]  }  else  if(!(o  instanceof  JsonNumber  ||  o  instanceof  JsonNull))  {  [BUGGY]      return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	replace	}  else  if(!(o  instanceof  JsonNumber  ||  o  instanceof  JsonNull))  {	  }    else    if(!(o    instanceof    JsonNumber))    {    	non-compiled	[CE]  cannot  find  symbol	107	None	replace
565	[BUG]  [BUGGY]  }  else  if(o  instanceof  JsonArray  ||  o  instanceof  JsonArray)  {  }  else  if(o  instanceof  JsonArray  ||  o  instanceof  JsonArray)  {  [CE]  missing  return  statement  [FE]    AssertionError    [CONTEXT]      if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }      [BUGGY]  }  else  if(o  instanceof  JsonArray  ||  o  instanceof  JsonArray)  {  }  else  if(o  instanceof  JsonArray  ||  o  instanceof  JsonArray)  {  [BUGGY]      return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	replace	}    else    if(o    instanceof    JsonArray    ||    o    instanceof    JsonArray)    {    }  else  if(o  instanceof  JsonArray  ||  o  instanceof  JsonArray)  {	  	non-compiled	[CE]  missing  return  statement	200	None	add
566	[BUG]  [BUGGY]  }  else  if(o  instanceof  JsonArray  ||  o  instanceof  JsonArray)  {  else  if(o  instanceof  JsonArray  ||  o  instanceof  JsonArray)  {  [CE]  'else'  without  'if'  [FE]      AssertionError    [CONTEXT]      if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }      [BUGGY]  }  else  if(o  instanceof  JsonArray  ||  o  instanceof  JsonArray)  {  else  if(o  instanceof  JsonArray  ||  o  instanceof  JsonArray)  {  [BUGGY]      return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	replace	}    else    if(o    instanceof    JsonArray    ||    o    instanceof    JsonArray)    {    else  if(o  instanceof  JsonArray  ||  o  instanceof  JsonArray)  {	  	non-compiled	[CE]  'else'  without  'if'	200	None	add
567	[BUG]  [BUGGY]  }  else  if(o  instanceof  JsonArray  ||  o  instanceof  JsonArray)  {  }  else  if(o  instanceof  JsonArray  ||  o  instanceof  JsonArray)  <  return  JsonToken.BEGIN_OBJECT;  [CE]  illegal  start  of  type  [FE]        AssertionError    [CONTEXT]      if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }      [BUGGY]  }  else  if(o  instanceof  JsonArray  ||  o  instanceof  JsonArray)  {  }  else  if(o  instanceof  JsonArray  ||  o  instanceof  JsonArray)  <  return  JsonToken.BEGIN_OBJECT;  [BUGGY]      return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	replace	}    else    if(o    instanceof    JsonArray    ||    o    instanceof    JsonArray)    {    }  else  if(o  instanceof  JsonArray  ||  o  instanceof  JsonArray)  <  return  JsonToken.BEGIN_OBJECT;	  	non-compiled	[CE]  illegal  start  of  type	200	None	add
568	[BUG]  [BUGGY]  }  else  if(o  instanceof  JsonArray  ||  o  instanceof  JsonArray)  {  <  }  else  if(o  instanceof  JsonArray  ||  o  instanceof  JsonArray)  {  [CE]  illegal  start  of  type  [FE]          AssertionError    [CONTEXT]      if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }      [BUGGY]  }  else  if(o  instanceof  JsonArray  ||  o  instanceof  JsonArray)  {  <  }  else  if(o  instanceof  JsonArray  ||  o  instanceof  JsonArray)  {  [BUGGY]      return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	replace	}    else    if(o    instanceof    JsonArray    ||    o    instanceof    JsonArray)    {    <  }  else  if(o  instanceof  JsonArray  ||  o  instanceof  JsonArray)  {	  	non-compiled	[CE]  illegal  start  of  type	200	None	add
569	[BUG]  [BUGGY]  }  else  if(o  instanceof  JsonArray  ||  o  instanceof  JsonArray)  {  }  else  if(o  instanceof  JsonObject  ||  o  instanceof  JsonArray)  {  [CE]  missing  return  statement  [FE]            AssertionError    [CONTEXT]      if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }      [BUGGY]  }  else  if(o  instanceof  JsonArray  ||  o  instanceof  JsonArray)  {  }  else  if(o  instanceof  JsonObject  ||  o  instanceof  JsonArray)  {  [BUGGY]      return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	replace	}    else    if(o    instanceof    JsonArray    ||    o    instanceof    JsonArray)    {    }  else  if(o  instanceof  JsonObject  ||  o  instanceof  JsonArray)  {	  	non-compiled	[CE]  missing  return  statement	200	None	add
570	[BUG]  [BUGGY]  }  else  if(o  instanceof  JsonArray  ||  o  instanceof  JsonArray)  {  }  else  if(e  instanceof  JsonArray  ||  o  instanceof  JsonArray)  {  [CE]  cannot  find  symbol  e  [FE]              AssertionError    [CONTEXT]      if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }      [BUGGY]  }  else  if(o  instanceof  JsonArray  ||  o  instanceof  JsonArray)  {  }  else  if(e  instanceof  JsonArray  ||  o  instanceof  JsonArray)  {  [BUGGY]      return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	replace	}    else    if(o    instanceof    JsonArray    ||    o    instanceof    JsonArray)    {    }  else  if(e  instanceof  JsonArray  ||  o  instanceof  JsonArray)  {	  	non-compiled	[CE]  cannot  find  symbol  e	200	None	add
571	[BUG]  [BUGGY]  }  else  if(o  instanceof  JsonArray  ||  o  instanceof  JsonArray)  {  }  else  if(o  instanceof  JsonArray  ||  o  instanceof  JsonArray)  <  =  JsonToken.BEGIN_OBJECT;  [CE]  illegal  start  of  type  [FE]                AssertionError    [CONTEXT]      if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }      [BUGGY]  }  else  if(o  instanceof  JsonArray  ||  o  instanceof  JsonArray)  {  }  else  if(o  instanceof  JsonArray  ||  o  instanceof  JsonArray)  <  =  JsonToken.BEGIN_OBJECT;  [BUGGY]      return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	replace	}    else    if(o    instanceof    JsonArray    ||    o    instanceof    JsonArray)    {    }  else  if(o  instanceof  JsonArray  ||  o  instanceof  JsonArray)  <  =  JsonToken.BEGIN_OBJECT;	  	non-compiled	[CE]  illegal  start  of  type	200	None	add
572	[BUG]  [BUGGY]  }  else  if(!(o  instanceof  JsonObject  ||  o  instanceof  Boolean))  {  }  else  if(!(o  instanceof  JsonObject  ||  o  instanceof  Boolean))  {  [CE]  missing  return  statement  [FE]    AssertionError    [CONTEXT]      if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }      [BUGGY]  }  else  if(!(o  instanceof  JsonObject  ||  o  instanceof  Boolean))  {  }  else  if(!(o  instanceof  JsonObject  ||  o  instanceof  Boolean))  {  [BUGGY]      return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	replace	}    else    if(!(o    instanceof    JsonObject    ||    o    instanceof    Boolean))    {    }  else  if(!(o  instanceof  JsonObject  ||  o  instanceof  Boolean))  {	  	non-compiled	[CE]  missing  return  statement	254	None	add
573	[BUG]  [BUGGY]  }  else  if(!(o  instanceof  JsonObject  ||  o  instanceof  Boolean))  {  else  if(!(o  instanceof  JsonObject  ||  o  instanceof  Boolean))  {  [CE]  'else'  without  'if'  [FE]      AssertionError    [CONTEXT]      if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }      [BUGGY]  }  else  if(!(o  instanceof  JsonObject  ||  o  instanceof  Boolean))  {  else  if(!(o  instanceof  JsonObject  ||  o  instanceof  Boolean))  {  [BUGGY]      return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	replace	}    else    if(!(o    instanceof    JsonObject    ||    o    instanceof    Boolean))    {    else  if(!(o  instanceof  JsonObject  ||  o  instanceof  Boolean))  {	  	non-compiled	[CE]  'else'  without  'if'	254	None	add
574	[BUG]  [BUGGY]  }  else  if(!(o  instanceof  JsonObject  ||  o  instanceof  Boolean))  {  }  else  if(!(o  instanceof  JsonObject  ||  o  instanceof  Boolean))  <  return  JsonToken.BEGIN_OBJECT;  [CE]  illegal  start  of  type  [FE]        AssertionError    [CONTEXT]      if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }      [BUGGY]  }  else  if(!(o  instanceof  JsonObject  ||  o  instanceof  Boolean))  {  }  else  if(!(o  instanceof  JsonObject  ||  o  instanceof  Boolean))  <  return  JsonToken.BEGIN_OBJECT;  [BUGGY]      return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	replace	}    else    if(!(o    instanceof    JsonObject    ||    o    instanceof    Boolean))    {    }  else  if(!(o  instanceof  JsonObject  ||  o  instanceof  Boolean))  <  return  JsonToken.BEGIN_OBJECT;	  	non-compiled	[CE]  illegal  start  of  type	254	None	add
575	[BUG]  [BUGGY]  }  else  if(!(o  instanceof  JsonObject  ||  o  instanceof  Boolean))  {  <  }  else  if(!(o  instanceof  JsonObject  ||  o  instanceof  Boolean))  {  [CE]  illegal  start  of  type  [FE]          AssertionError    [CONTEXT]      if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }      [BUGGY]  }  else  if(!(o  instanceof  JsonObject  ||  o  instanceof  Boolean))  {  <  }  else  if(!(o  instanceof  JsonObject  ||  o  instanceof  Boolean))  {  [BUGGY]      return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	replace	}    else    if(!(o    instanceof    JsonObject    ||    o    instanceof    Boolean))    {    <  }  else  if(!(o  instanceof  JsonObject  ||  o  instanceof  Boolean))  {	  	non-compiled	[CE]  illegal  start  of  type	254	None	add
576	[BUG]  [BUGGY]  }  else  if(!(o  instanceof  JsonObject  ||  o  instanceof  Boolean))  {  }  else  if(!(o  instanceof  JsonObject  ||  o  instanceof  Boolean)&&  isObject)  {  [CE]  cannot  find  symbol  isObject  [FE]            AssertionError    [CONTEXT]      if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }      [BUGGY]  }  else  if(!(o  instanceof  JsonObject  ||  o  instanceof  Boolean))  {  }  else  if(!(o  instanceof  JsonObject  ||  o  instanceof  Boolean)&&  isObject)  {  [BUGGY]      return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	replace	}    else    if(!(o    instanceof    JsonObject    ||    o    instanceof    Boolean))    {    }  else  if(!(o  instanceof  JsonObject  ||  o  instanceof  Boolean)&&  isObject)  {	  	non-compiled	[CE]  cannot  find  symbol  isObject	254	None	add
577	[BUG]  [BUGGY]  }  else  if(!(o  instanceof  JsonObject  ||  o  instanceof  Boolean))  {  }  else  if(!(o  instanceof  JSONObject  ||  o  instanceof  Boolean))  {  [CE]  cannot  find  symbol  [FE]              AssertionError    [CONTEXT]      if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }      [BUGGY]  }  else  if(!(o  instanceof  JsonObject  ||  o  instanceof  Boolean))  {  }  else  if(!(o  instanceof  JSONObject  ||  o  instanceof  Boolean))  {  [BUGGY]      return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	replace	}    else    if(!(o    instanceof    JsonObject    ||    o    instanceof    Boolean))    {    }  else  if(!(o  instanceof  JSONObject  ||  o  instanceof  Boolean))  {	  	non-compiled	[CE]  cannot  find  symbol	254	None	add
578	[BUG]  [BUGGY]  }  else  if(o  instanceof  JsonNull  &&!(o  instanceof  JsonNull  &&!((  JsonNull)o).isObject()))  {  [CE]  cannot  find  symbol  [FE]          AssertionError      [CONTEXT]      if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }      [BUGGY]  }  else  if(o  instanceof  JsonNull  &&!(o  instanceof  JsonNull  &&!((  JsonNull)o).isObject()))  {  [BUGGY]      return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	replace	}  else  if(o  instanceof  JsonNull  &&!(o  instanceof  JsonNull  &&!((  JsonNull)o).isObject()))  {	  }    else    if(o    instanceof    JsonNull    ||!(o    instanceof    JsonNull    &&!(o    instanceof    JsonNull    &&!((    JsonNull)o).isObject()))    {    	non-compiled	[CE]  cannot  find  symbol	236	None	replace
579	[BUG]  [BUGGY]  }  else  if(o  instanceof  JsonObject  ||!(o  instanceof  JsonNull  &&!(o  instanceof  JsonNull  &&!((  JsonNull)o).isObject()))  {  [CE]  ')'  expected  [FE]            AssertionError      [CONTEXT]      if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }      [BUGGY]  }  else  if(o  instanceof  JsonObject  ||!(o  instanceof  JsonNull  &&!(o  instanceof  JsonNull  &&!((  JsonNull)o).isObject()))  {  [BUGGY]      return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	replace	}  else  if(o  instanceof  JsonObject  ||!(o  instanceof  JsonNull  &&!(o  instanceof  JsonNull  &&!((  JsonNull)o).isObject()))  {	  }    else    if(o    instanceof    JsonNull    ||!(o    instanceof    JsonNull    &&!(o    instanceof    JsonNull    &&!((    JsonNull)o).isObject()))    {    	non-compiled	[CE]  ')'  expected	236	None	replace
580	[BUG]  [BUGGY]  }  else  if(o  instanceof  JsonNull  ||!(o  instanceof  JsonNull  &&!((  JsonNull)o).isObject()))  {  [CE]  cannot  find  symbol  [FE]              AssertionError      [CONTEXT]      if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }      [BUGGY]  }  else  if(o  instanceof  JsonNull  ||!(o  instanceof  JsonNull  &&!((  JsonNull)o).isObject()))  {  [BUGGY]      return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	replace	}  else  if(o  instanceof  JsonNull  ||!(o  instanceof  JsonNull  &&!((  JsonNull)o).isObject()))  {	  }    else    if(o    instanceof    JsonNull    ||!(o    instanceof    JsonNull    &&!(o    instanceof    JsonNull    &&!((    JsonNull)o).isObject()))    {    	non-compiled	[CE]  cannot  find  symbol	236	None	replace
581	[BUG]  [BUGGY]  }  else  if(o  instanceof  JsonArray  ||!(o  instanceof  JsonNull  &&!(o  instanceof  JsonNull  &&!((  JsonNull)o).isObject()))  {  [CE]  ')'  expected  [FE]                AssertionError      [CONTEXT]      if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }      [BUGGY]  }  else  if(o  instanceof  JsonArray  ||!(o  instanceof  JsonNull  &&!(o  instanceof  JsonNull  &&!((  JsonNull)o).isObject()))  {  [BUGGY]      return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	replace	}  else  if(o  instanceof  JsonArray  ||!(o  instanceof  JsonNull  &&!(o  instanceof  JsonNull  &&!((  JsonNull)o).isObject()))  {	  }    else    if(o    instanceof    JsonNull    ||!(o    instanceof    JsonNull    &&!(o    instanceof    JsonNull    &&!((    JsonNull)o).isObject()))    {    	non-compiled	[CE]  ')'  expected	236	None	replace
582	[BUG]  [BUGGY]  }  else  if(o  instanceof  JsonNull  ||!(o  instanceof  JsonNull  ||!(o  instanceof  JsonNull  &&!((  JsonNull)o).isObject()))  {  [CE]  ')'  expected  [FE]                  AssertionError      [CONTEXT]      if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }      [BUGGY]  }  else  if(o  instanceof  JsonNull  ||!(o  instanceof  JsonNull  ||!(o  instanceof  JsonNull  &&!((  JsonNull)o).isObject()))  {  [BUGGY]      return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	replace	}  else  if(o  instanceof  JsonNull  ||!(o  instanceof  JsonNull  ||!(o  instanceof  JsonNull  &&!((  JsonNull)o).isObject()))  {	  }    else    if(o    instanceof    JsonNull    ||!(o    instanceof    JsonNull    &&!(o    instanceof    JsonNull    &&!((    JsonNull)o).isObject()))    {    	non-compiled	[CE]  ')'  expected	236	None	replace
583	[BUG]  [BUGGY]  }  else  if(o  instanceof  JsonObject  &&  o  instanceof  JsonArray)  <  return  JsonToken.BEGIN_OBJECT;  [CE]  illegal  start  of  type  [FE]            ArrayIndexOutOfBoundsException      [CONTEXT]      if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }      [BUGGY]  }  else  if(o  instanceof  JsonObject  &&  o  instanceof  JsonArray)  <  return  JsonToken.BEGIN_OBJECT;  [BUGGY]      return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	replace	}  else  if(o  instanceof  JsonObject  &&  o  instanceof  JsonArray)  <  return  JsonToken.BEGIN_OBJECT;	  }    else    if(o    instanceof    JsonObject    ||    o    instanceof    JsonArray)    {    }    else    if(o    instanceof    JsonObject    ||    o    instanceof    JsonArray)    <    return    JsonToken.BEGIN_OBJECT;    	non-compiled	[CE]  illegal  start  of  type	25	None	replace
584	[BUG]  [BUGGY]  }  else  if(o  instanceof  JsonObject  ||  o  instanceof  JsonArray)  <  return  JsonToken.BEGIN_OBJECT;  [CE]  illegal  start  of  type  [FE]              ArrayIndexOutOfBoundsException      [CONTEXT]      if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }      [BUGGY]  }  else  if(o  instanceof  JsonObject  ||  o  instanceof  JsonArray)  <  return  JsonToken.BEGIN_OBJECT;  [BUGGY]      return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	replace	}  else  if(o  instanceof  JsonObject  ||  o  instanceof  JsonArray)  <  return  JsonToken.BEGIN_OBJECT;	  }    else    if(o    instanceof    JsonObject    ||    o    instanceof    JsonArray)    {    }    else    if(o    instanceof    JsonObject    ||    o    instanceof    JsonArray)    <    return    JsonToken.BEGIN_OBJECT;    	non-compiled	[CE]  illegal  start  of  type	25	None	replace
585	[BUG]  [BUGGY]  }  else  if(o  instanceof  JsonObject  ||  o  instanceof  JsonPrimitive)  <  return  JsonToken.BEGIN_OBJECT;  [CE]  illegal  start  of  type  [FE]                ArrayIndexOutOfBoundsException      [CONTEXT]      if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }      [BUGGY]  }  else  if(o  instanceof  JsonObject  ||  o  instanceof  JsonPrimitive)  <  return  JsonToken.BEGIN_OBJECT;  [BUGGY]      return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	replace	}  else  if(o  instanceof  JsonObject  ||  o  instanceof  JsonPrimitive)  <  return  JsonToken.BEGIN_OBJECT;	  }    else    if(o    instanceof    JsonObject    ||    o    instanceof    JsonArray)    {    }    else    if(o    instanceof    JsonObject    ||    o    instanceof    JsonArray)    <    return    JsonToken.BEGIN_OBJECT;    	non-compiled	[CE]  illegal  start  of  type	25	None	replace
586	[BUG]  [BUGGY]  }  else  if(o  instanceof  JsonObject  &&!(o  instanceof  JsonNumber))  {  [CE]  cannot  find  symbol  [FE]                    ArrayIndexOutOfBoundsException      [CONTEXT]      if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }      [BUGGY]  }  else  if(o  instanceof  JsonObject  &&!(o  instanceof  JsonNumber))  {  [BUGGY]      return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	replace	}  else  if(o  instanceof  JsonObject  &&!(o  instanceof  JsonNumber))  {	  }    else    if(o    instanceof    JsonObject    ||!(o    instanceof    JsonNumber))    {    	non-compiled	[CE]  cannot  find  symbol	125	None	replace
587	[BUG]  [BUGGY]  }  else  if(o  instanceof  JsonObject  ||!(o  instanceof  JsonNumber)&&  isObject)  {  [CE]  cannot  find  symbol  [FE]                      ArrayIndexOutOfBoundsException      [CONTEXT]      if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }      [BUGGY]  }  else  if(o  instanceof  JsonObject  ||!(o  instanceof  JsonNumber)&&  isObject)  {  [BUGGY]      return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	replace	}  else  if(o  instanceof  JsonObject  ||!(o  instanceof  JsonNumber)&&  isObject)  {	  }    else    if(o    instanceof    JsonObject    ||!(o    instanceof    JsonNumber))    {    	non-compiled	[CE]  cannot  find  symbol	125	None	replace
588	[BUG]  [BUGGY]  [FE]  ArrayIndexOutOfBoundsException  [FE]                        ArrayIndexOutOfBoundsException      [CONTEXT]      if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }      [BUGGY]  }  else  if(o  instanceof  JsonObject  ||!(o  instanceof  Number))  {  [BUGGY]      return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	add	}  else  if(o  instanceof  JsonObject  ||!(o  instanceof  Number))  {	  }    else    if(o    instanceof    JsonObject    ||!(o    instanceof    JsonNumber))    {    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	125	2	replace
589	[BUG]  [BUGGY]  }  else  if(o  instanceof  JsonObject  ||!(o  instanceof  Number))  {  [FE]  ArrayIndexOutOfBoundsException  [FE]                        ArrayIndexOutOfBoundsException      [CONTEXT]      if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }      [BUGGY]  }  else  if(o  instanceof  JsonObject  ||!(o  instanceof  Number))  {  [BUGGY]      return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	replace	}  else  if(o  instanceof  JsonObject  ||!(o  instanceof  Number))  {	  }    else    if(o    instanceof    JsonObject    ||!(o    instanceof    JsonNumber))    {    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	125	2	replace
590	[BUG]  [BUGGY]  }  else  if(o  instanceof  JsonPrimitive)  {  }  else  if(!(o  instanceof  JsonPrimitive))  {  return  JsonToken.BEGIN_ARRAY;  }  [CE]  illegal  start  of  type  [FE]                      ArrayIndexOutOfBoundsException      [CONTEXT]      if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }      [BUGGY]  }  else  if(o  instanceof  JsonPrimitive)  {  }  else  if(!(o  instanceof  JsonPrimitive))  {  return  JsonToken.BEGIN_ARRAY;  }  [BUGGY]      return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	replace	}  else  if(o  instanceof  JsonPrimitive)  {  }  else  if(!(o  instanceof  JsonPrimitive))  {  return  JsonToken.BEGIN_ARRAY;  }	  }    else    if(!(o    instanceof    JsonArray))    {    }    else    if(!(o    instanceof    JsonArray))    <    return    JsonToken.BEGIN_ARRAY;    	non-compiled	[CE]  illegal  start  of  type	90	None	replace
591	[BUG]  [BUGGY]  }  else  if(!(o  instanceof  JsonPrimitive))  {  }  else  if(!(o  instanceof  JsonPrimitive))  {  return  JsonToken.BEGIN_ARRAY;  }  [CE]  illegal  start  of  type  [FE]                        ArrayIndexOutOfBoundsException      [CONTEXT]      if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }      [BUGGY]  }  else  if(!(o  instanceof  JsonPrimitive))  {  }  else  if(!(o  instanceof  JsonPrimitive))  {  return  JsonToken.BEGIN_ARRAY;  }  [BUGGY]      return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	replace	}  else  if(!(o  instanceof  JsonPrimitive))  {  }  else  if(!(o  instanceof  JsonPrimitive))  {  return  JsonToken.BEGIN_ARRAY;  }	  }    else    if(!(o    instanceof    JsonArray))    {    }    else    if(!(o    instanceof    JsonArray))    <    return    JsonToken.BEGIN_ARRAY;    	non-compiled	[CE]  illegal  start  of  type	90	None	replace
592	[BUG]  [BUGGY]  }  else  if(!(o  instanceof  String))  {  }  else  if(!(o  instanceof  JsonArray))  {  return  JsonToken.BEGIN_ARRAY;  }  [CE]  illegal  start  of  type  [FE]                          ArrayIndexOutOfBoundsException      [CONTEXT]      if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }      [BUGGY]  }  else  if(!(o  instanceof  String))  {  }  else  if(!(o  instanceof  JsonArray))  {  return  JsonToken.BEGIN_ARRAY;  }  [BUGGY]      return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	replace	}  else  if(!(o  instanceof  String))  {  }  else  if(!(o  instanceof  JsonArray))  {  return  JsonToken.BEGIN_ARRAY;  }	  }    else    if(!(o    instanceof    JsonArray))    {    }    else    if(!(o    instanceof    JsonArray))    <    return    JsonToken.BEGIN_ARRAY;    	non-compiled	[CE]  illegal  start  of  type	90	None	replace
593	[BUG]  [BUGGY]  }  else  if(!(o  instanceof  String))  {  }  else  if(!(o  instanceof  JsonString))  {  return  JsonToken.BEGIN_ARRAY;  }  [CE]  illegal  start  of  type  [FE]                            ArrayIndexOutOfBoundsException      [CONTEXT]      if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }      [BUGGY]  }  else  if(!(o  instanceof  String))  {  }  else  if(!(o  instanceof  JsonString))  {  return  JsonToken.BEGIN_ARRAY;  }  [BUGGY]      return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	replace	}  else  if(!(o  instanceof  String))  {  }  else  if(!(o  instanceof  JsonString))  {  return  JsonToken.BEGIN_ARRAY;  }	  }    else    if(!(o    instanceof    JsonArray))    {    }    else    if(!(o    instanceof    JsonArray))    <    return    JsonToken.BEGIN_ARRAY;    	non-compiled	[CE]  illegal  start  of  type	90	None	replace
594	[BUG]  [BUGGY]  }  else  if(!(o  instanceof  JsonPrimitive))  {  }  else  if(!(o  instanceof  JsonPrimitive))  {  return  JsonToken.BEGIN_OBJECT;  }  [CE]  illegal  start  of  type  [FE]                              ArrayIndexOutOfBoundsException      [CONTEXT]      if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }      [BUGGY]  }  else  if(!(o  instanceof  JsonPrimitive))  {  }  else  if(!(o  instanceof  JsonPrimitive))  {  return  JsonToken.BEGIN_OBJECT;  }  [BUGGY]      return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	replace	}  else  if(!(o  instanceof  JsonPrimitive))  {  }  else  if(!(o  instanceof  JsonPrimitive))  {  return  JsonToken.BEGIN_OBJECT;  }	  }    else    if(!(o    instanceof    JsonArray))    {    }    else    if(!(o    instanceof    JsonArray))    <    return    JsonToken.BEGIN_ARRAY;    	non-compiled	[CE]  illegal  start  of  type	90	None	replace
595	[BUG]  [BUGGY]  }  else  if(o  instanceof  JsonPrimitive)  {  }  else  if(!(o  instanceof  JsonPrimitive))  {  return  JsonToken.BEGIN_OBJECT;  }  [CE]  illegal  start  of  type  [FE]                                ArrayIndexOutOfBoundsException      [CONTEXT]      if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }      [BUGGY]  }  else  if(o  instanceof  JsonPrimitive)  {  }  else  if(!(o  instanceof  JsonPrimitive))  {  return  JsonToken.BEGIN_OBJECT;  }  [BUGGY]      return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	replace	}  else  if(o  instanceof  JsonPrimitive)  {  }  else  if(!(o  instanceof  JsonPrimitive))  {  return  JsonToken.BEGIN_OBJECT;  }	  }    else    if(!(o    instanceof    JsonArray))    {    }    else    if(!(o    instanceof    JsonArray))    <    return    JsonToken.BEGIN_ARRAY;    	non-compiled	[CE]  illegal  start  of  type	90	None	replace
596	[BUG]  [BUGGY]  }  else  if(o  instanceof  JsonNumber  &&  o  instanceof  JsonObject)  {  [CE]  cannot  find  symbol  [FE]                        ArrayIndexOutOfBoundsException      [CONTEXT]      if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }      [BUGGY]  }  else  if(o  instanceof  JsonNumber  &&  o  instanceof  JsonObject)  {  [BUGGY]      return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	replace	}  else  if(o  instanceof  JsonNumber  &&  o  instanceof  JsonObject)  {	  }    else    if(o    instanceof    JsonNumber    ||    o    instanceof    JsonObject)    {    	non-compiled	[CE]  cannot  find  symbol	114	None	replace
597	[BUG]  [BUGGY]  }  else  if(o  instanceof  JsonNumber  ||!(o  instanceof  JsonObject))  {  [CE]  cannot  find  symbol  [FE]                          ArrayIndexOutOfBoundsException      [CONTEXT]      if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }      [BUGGY]  }  else  if(o  instanceof  JsonNumber  ||!(o  instanceof  JsonObject))  {  [BUGGY]      return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	replace	}  else  if(o  instanceof  JsonNumber  ||!(o  instanceof  JsonObject))  {	  }    else    if(o    instanceof    JsonNumber    ||    o    instanceof    JsonObject)    {    	non-compiled	[CE]  cannot  find  symbol	114	None	replace
598	[BUG]  [BUGGY]  }  else  if(o  instanceof  JsonNumber  ||  o  instanceof  JsonObject  ||  isObject)  {  [CE]  cannot  find  symbol  [FE]                            ArrayIndexOutOfBoundsException      [CONTEXT]      if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }      [BUGGY]  }  else  if(o  instanceof  JsonNumber  ||  o  instanceof  JsonObject  ||  isObject)  {  [BUGGY]      return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	replace	}  else  if(o  instanceof  JsonNumber  ||  o  instanceof  JsonObject  ||  isObject)  {	  }    else    if(o    instanceof    JsonNumber    ||    o    instanceof    JsonObject)    {    	non-compiled	[CE]  cannot  find  symbol	114	None	replace
599	[BUG]  [BUGGY]  }  else  if(o  instanceof  JsonNumber  ||  isObject)  {  [CE]  cannot  find  symbol  [FE]                              ArrayIndexOutOfBoundsException      [CONTEXT]      if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }      [BUGGY]  }  else  if(o  instanceof  JsonNumber  ||  isObject)  {  [BUGGY]      return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	replace	}  else  if(o  instanceof  JsonNumber  ||  isObject)  {	  }    else    if(o    instanceof    JsonNumber    ||    o    instanceof    JsonObject)    {    	non-compiled	[CE]  cannot  find  symbol	114	None	replace
600	[BUG]  [BUGGY]  }  else  if(!(o  instanceof  JsonPrimitive))  {  case  JsonToken.BEGIN_OBJECT:  return  JsonToken.BEGIN_ARRAY;  [CE]  orphaned  case  [FE]            ArrayIndexOutOfBoundsException      [CONTEXT]      if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }      [BUGGY]  }  else  if(!(o  instanceof  JsonPrimitive))  {  case  JsonToken.BEGIN_OBJECT:  return  JsonToken.BEGIN_ARRAY;  [BUGGY]      return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	replace	}  else  if(!(o  instanceof  JsonPrimitive))  {  case  JsonToken.BEGIN_OBJECT:  return  JsonToken.BEGIN_ARRAY;	  }    else    if(!(o    instanceof    JsonArray))    {    }    else    if(!(o    instanceof    JsonArray))    {    case    JsonToken.BEGIN_OBJECT:    return    JsonToken.BEGIN_ARRAY;    	non-compiled	[CE]  orphaned  case	217	None	replace
601	[BUG]  [BUGGY]  }  else  if(isObject)  {  case  JsonToken.BEGIN_OBJECT:  return  JsonToken.BEGIN_ARRAY;  [CE]  orphaned  case  [FE]              ArrayIndexOutOfBoundsException      [CONTEXT]      if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }      [BUGGY]  }  else  if(isObject)  {  case  JsonToken.BEGIN_OBJECT:  return  JsonToken.BEGIN_ARRAY;  [BUGGY]      return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	replace	}  else  if(isObject)  {  case  JsonToken.BEGIN_OBJECT:  return  JsonToken.BEGIN_ARRAY;	  }    else    if(!(o    instanceof    JsonArray))    {    }    else    if(!(o    instanceof    JsonArray))    {    case    JsonToken.BEGIN_OBJECT:    return    JsonToken.BEGIN_ARRAY;    	non-compiled	[CE]  orphaned  case	217	None	replace
602	[BUG]  [BUGGY]  Object[]  stack  =(Object[])o;  push(stack.size()  -  stack.length);  return  JsonToken.NAME;  [CE]  cannot  find  symbol  [FE]                              ArrayIndexOutOfBoundsException      [CONTEXT]      if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }      [BUGGY]  Object[]  stack  =(Object[])o;  push(stack.size()  -  stack.length);  return  JsonToken.NAME;  [BUGGY]      return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	replace	Object[]  stack  =(Object[])o;  push(stack.size()  -  stack.length);  return  JsonToken.NAME;	  if(o    instanceof    JsonArray)    {    Object[]    stack    =(Object[])o;    push(stack.size()    -    stack.length);    return    JsonToken.NAME;    }    	non-compiled	[CE]  cannot  find  symbol	37	None	replace
603	[BUG]  [BUGGY]  Stack[]  stack  =(Stack[])o;  push(stack.size()  -  stack.length);  return  JsonToken.NAME;  [CE]  cannot  find  symbol  [FE]                                ArrayIndexOutOfBoundsException      [CONTEXT]      if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }      [BUGGY]  Stack[]  stack  =(Stack[])o;  push(stack.size()  -  stack.length);  return  JsonToken.NAME;  [BUGGY]      return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	replace	Stack[]  stack  =(Stack[])o;  push(stack.size()  -  stack.length);  return  JsonToken.NAME;	  if(o    instanceof    JsonArray)    {    Object[]    stack    =(Object[])o;    push(stack.size()    -    stack.length);    return    JsonToken.NAME;    }    	non-compiled	[CE]  cannot  find  symbol	37	None	replace
604	[BUG]  [BUGGY]  Stack  stack  =(Object[])o;  push(stack.size()  -  stack.length);  return  JsonToken.NAME;  [CE]  cannot  find  symbol  [FE]                                  ArrayIndexOutOfBoundsException      [CONTEXT]      if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }      [BUGGY]  Stack  stack  =(Object[])o;  push(stack.size()  -  stack.length);  return  JsonToken.NAME;  [BUGGY]      return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	replace	Stack  stack  =(Object[])o;  push(stack.size()  -  stack.length);  return  JsonToken.NAME;	  if(o    instanceof    JsonArray)    {    Object[]    stack    =(Object[])o;    push(stack.size()    -    stack.length);    return    JsonToken.NAME;    }    	non-compiled	[CE]  cannot  find  symbol	37	None	replace
605	[BUG]  [BUGGY]  pom(stack.size()  -  stack.length);  return  JsonToken.NAME;  [CE]  cannot  find  symbol  [FE]                                    ArrayIndexOutOfBoundsException      [CONTEXT]      if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }      [BUGGY]  pom(stack.size()  -  stack.length);  return  JsonToken.NAME;  [BUGGY]      return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	replace	pom(stack.size()  -  stack.length);  return  JsonToken.NAME;	  if(o    instanceof    JsonArray)    {    Object[]    stack    =(Object[])o;    push(stack.size()    -    stack.length);    return    JsonToken.NAME;    }    	non-compiled	[CE]  cannot  find  symbol	37	None	replace
606	[BUG]  [BUGGY]  Object[]  stack  =(Object[])stack.get(0);  push(stack.size()  -  stack.length);  return  JsonToken.NAME;  [CE]  cannot  find  symbol  [FE]                                      ArrayIndexOutOfBoundsException      [CONTEXT]      if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }      [BUGGY]  Object[]  stack  =(Object[])stack.get(0);  push(stack.size()  -  stack.length);  return  JsonToken.NAME;  [BUGGY]      return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	replace	Object[]  stack  =(Object[])stack.get(0);  push(stack.size()  -  stack.length);  return  JsonToken.NAME;	  if(o    instanceof    JsonArray)    {    Object[]    stack    =(Object[])o;    push(stack.size()    -    stack.length);    return    JsonToken.NAME;    }    	non-compiled	[CE]  cannot  find  symbol	37	None	replace
607	[BUG]  [BUGGY]  Object[]  stack  =(Object[])o;  push(stack.size()  -  stack.length);  return  JsonToken.NAME;  }  [CE]  illegal  start  of  type  [FE]                                        ArrayIndexOutOfBoundsException      [CONTEXT]      if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }      [BUGGY]  Object[]  stack  =(Object[])o;  push(stack.size()  -  stack.length);  return  JsonToken.NAME;  }  [BUGGY]      return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	replace	Object[]  stack  =(Object[])o;  push(stack.size()  -  stack.length);  return  JsonToken.NAME;  }	  if(o    instanceof    JsonArray)    {    Object[]    stack    =(Object[])o;    push(stack.size()    -    stack.length);    return    JsonToken.NAME;    }    	non-compiled	[CE]  illegal  start  of  type	37	None	replace
608	[BUG]  [BUGGY]  }  else  if(o  instanceof  JsonObject  ||  o  instanceof  String  ||  o  instanceof  Class  <?>)  {  }  else  if(o  instanceof  JsonObject  ||  o  instanceof  String  ||  o  instanceof  Class  <?>)  {  [CE]  missing  return  statement  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]      if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }      [BUGGY]  }  else  if(o  instanceof  JsonObject  ||  o  instanceof  String  ||  o  instanceof  Class  <?>)  {  }  else  if(o  instanceof  JsonObject  ||  o  instanceof  String  ||  o  instanceof  Class  <?>)  {  [BUGGY]      return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	replace	}    else    if(o    instanceof    JsonObject    ||    o    instanceof    String    ||    o    instanceof    Class    <?>)    {    }  else  if(o  instanceof  JsonObject  ||  o  instanceof  String  ||  o  instanceof  Class  <?>)  {	  	non-compiled	[CE]  missing  return  statement	244	None	add
609	[BUG]  [BUGGY]  }  else  if(o  instanceof  JsonObject  ||  o  instanceof  String  ||  o  instanceof  Class  <?>)  {  else  if(o  instanceof  JsonObject  ||  o  instanceof  String  ||  o  instanceof  Class  <?>)  {  [CE]  'else'  without  'if'  [FE]      ArrayIndexOutOfBoundsException    [CONTEXT]      if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }      [BUGGY]  }  else  if(o  instanceof  JsonObject  ||  o  instanceof  String  ||  o  instanceof  Class  <?>)  {  else  if(o  instanceof  JsonObject  ||  o  instanceof  String  ||  o  instanceof  Class  <?>)  {  [BUGGY]      return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	replace	}    else    if(o    instanceof    JsonObject    ||    o    instanceof    String    ||    o    instanceof    Class    <?>)    {    else  if(o  instanceof  JsonObject  ||  o  instanceof  String  ||  o  instanceof  Class  <?>)  {	  	non-compiled	[CE]  'else'  without  'if'	244	None	add
610	[BUG]  [BUGGY]  }  else  if(o  instanceof  JsonObject  ||  o  instanceof  String  ||  o  instanceof  Class  <?>)  {  }  else  if(o  instanceof  JsonObject  ||  o  instanceof  String  ||  o  instanceof  Class  >=?>)  {  [CE]  illegal  start  of  expression  [FE]        ArrayIndexOutOfBoundsException    [CONTEXT]      if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }      [BUGGY]  }  else  if(o  instanceof  JsonObject  ||  o  instanceof  String  ||  o  instanceof  Class  <?>)  {  }  else  if(o  instanceof  JsonObject  ||  o  instanceof  String  ||  o  instanceof  Class  >=?>)  {  [BUGGY]      return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	replace	}    else    if(o    instanceof    JsonObject    ||    o    instanceof    String    ||    o    instanceof    Class    <?>)    {    }  else  if(o  instanceof  JsonObject  ||  o  instanceof  String  ||  o  instanceof  Class  >=?>)  {	  	non-compiled	[CE]  illegal  start  of  expression	244	None	add
611	[BUG]  [BUGGY]  }  else  if(o  instanceof  JsonObject  ||  o  instanceof  String  ||  o  instanceof  Class  <?>)  {  }  else  if(o  instanceof  JsonObject  ||  o  instanceof  String  ||  o  instanceof  Category  <?>)  {  [CE]  cannot  find  symbol  [FE]          ArrayIndexOutOfBoundsException    [CONTEXT]      if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }      [BUGGY]  }  else  if(o  instanceof  JsonObject  ||  o  instanceof  String  ||  o  instanceof  Class  <?>)  {  }  else  if(o  instanceof  JsonObject  ||  o  instanceof  String  ||  o  instanceof  Category  <?>)  {  [BUGGY]      return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	replace	}    else    if(o    instanceof    JsonObject    ||    o    instanceof    String    ||    o    instanceof    Class    <?>)    {    }  else  if(o  instanceof  JsonObject  ||  o  instanceof  String  ||  o  instanceof  Category  <?>)  {	  	non-compiled	[CE]  cannot  find  symbol	244	None	add
612	[BUG]  [BUGGY]  }  else  if(o  instanceof  JsonObject  ||  o  instanceof  String  ||  o  instanceof  Class  <?>)  {  }  else  if(o  instanceof  JsonObject  ||  o  instanceof  Character  ||  o  instanceof  Class  <?>)  {  [CE]  missing  return  statement  [FE]            ArrayIndexOutOfBoundsException    [CONTEXT]      if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }      [BUGGY]  }  else  if(o  instanceof  JsonObject  ||  o  instanceof  String  ||  o  instanceof  Class  <?>)  {  }  else  if(o  instanceof  JsonObject  ||  o  instanceof  Character  ||  o  instanceof  Class  <?>)  {  [BUGGY]      return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	replace	}    else    if(o    instanceof    JsonObject    ||    o    instanceof    String    ||    o    instanceof    Class    <?>)    {    }  else  if(o  instanceof  JsonObject  ||  o  instanceof  Character  ||  o  instanceof  Class  <?>)  {	  	non-compiled	[CE]  missing  return  statement	244	None	add
613	[BUG]  [BUGGY]  }  else  if(o  instanceof  JsonObject  ||  o  instanceof  String  ||  o  instanceof  Class  <?>)  {  }  else  if(o  instanceof  JSONObject  ||  o  instanceof  String  ||  o  instanceof  Class  <?>)  {  [CE]  cannot  find  symbol  [FE]              ArrayIndexOutOfBoundsException    [CONTEXT]      if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }      [BUGGY]  }  else  if(o  instanceof  JsonObject  ||  o  instanceof  String  ||  o  instanceof  Class  <?>)  {  }  else  if(o  instanceof  JSONObject  ||  o  instanceof  String  ||  o  instanceof  Class  <?>)  {  [BUGGY]      return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	replace	}    else    if(o    instanceof    JsonObject    ||    o    instanceof    String    ||    o    instanceof    Class    <?>)    {    }  else  if(o  instanceof  JSONObject  ||  o  instanceof  String  ||  o  instanceof  Class  <?>)  {	  	non-compiled	[CE]  cannot  find  symbol	244	None	add
614	[BUG]  [BUGGY]  [FE]  ArrayIndexOutOfBoundsException  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]      if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }      [BUGGY]  }  else  if(!(o  instanceof  JsonArray)&&!(o  instanceof  JsonPrimitive))  {  [BUGGY]      return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	add	}  else  if(!(o  instanceof  JsonArray)&&!(o  instanceof  JsonPrimitive))  {	  }    else    if(!(o    instanceof    JsonArray)||!(o    instanceof    JsonPrimitive))    {    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	251	2	replace
615	[BUG]  [BUGGY]  }  else  if(!(o  instanceof  JsonArray)&&!(o  instanceof  JsonPrimitive))  {  [FE]  ArrayIndexOutOfBoundsException  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]      if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }      [BUGGY]  }  else  if(!(o  instanceof  JsonArray)&&!(o  instanceof  JsonPrimitive))  {  [BUGGY]      return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	replace	}  else  if(!(o  instanceof  JsonArray)&&!(o  instanceof  JsonPrimitive))  {	  }    else    if(!(o    instanceof    JsonArray)||!(o    instanceof    JsonPrimitive))    {    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	251	2	replace
616	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]      ArrayIndexOutOfBoundsException    [CONTEXT]      if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }      [BUGGY]  }  else  if(!(o  instanceof  JsonObject)&&!(o  instanceof  JsonPrimitive))  {  [BUGGY]      return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	add	}  else  if(!(o  instanceof  JsonObject)&&!(o  instanceof  JsonPrimitive))  {	  }    else    if(!(o    instanceof    JsonArray)||!(o    instanceof    JsonPrimitive))    {    	compilable	  [FE]  AssertionError  	251	2	replace
617	[BUG]  [BUGGY]  }  else  if(!(o  instanceof  JsonObject)&&!(o  instanceof  JsonPrimitive))  {  [FE]  AssertionError  [FE]      ArrayIndexOutOfBoundsException    [CONTEXT]      if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }      [BUGGY]  }  else  if(!(o  instanceof  JsonObject)&&!(o  instanceof  JsonPrimitive))  {  [BUGGY]      return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	replace	}  else  if(!(o  instanceof  JsonObject)&&!(o  instanceof  JsonPrimitive))  {	  }    else    if(!(o    instanceof    JsonArray)||!(o    instanceof    JsonPrimitive))    {    	compilable	  [FE]  AssertionError  	251	2	replace
618	[BUG]  [BUGGY]  [FE]  ArrayIndexOutOfBoundsException  [FE]        ArrayIndexOutOfBoundsException    [CONTEXT]      if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }      [BUGGY]  }  else  if(!(o  instanceof  JsonPrimitive)||!(o  instanceof  JsonPrimitive))  {  [BUGGY]      return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	add	}  else  if(!(o  instanceof  JsonPrimitive)||!(o  instanceof  JsonPrimitive))  {	  }    else    if(!(o    instanceof    JsonArray)||!(o    instanceof    JsonPrimitive))    {    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	251	2	replace
619	[BUG]  [BUGGY]  }  else  if(!(o  instanceof  JsonPrimitive)||!(o  instanceof  JsonPrimitive))  {  [FE]  ArrayIndexOutOfBoundsException  [FE]        ArrayIndexOutOfBoundsException    [CONTEXT]      if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }      [BUGGY]  }  else  if(!(o  instanceof  JsonPrimitive)||!(o  instanceof  JsonPrimitive))  {  [BUGGY]      return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	replace	}  else  if(!(o  instanceof  JsonPrimitive)||!(o  instanceof  JsonPrimitive))  {	  }    else    if(!(o    instanceof    JsonArray)||!(o    instanceof    JsonPrimitive))    {    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	251	2	replace
620	[BUG]  [BUGGY]  [FE]  ArrayIndexOutOfBoundsException  [FE]          ArrayIndexOutOfBoundsException    [CONTEXT]      if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }      [BUGGY]  }  else  if(!(o  instanceof  JsonObject)||!(o  instanceof  JsonPrimitive))  {  [BUGGY]      return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	add	}  else  if(!(o  instanceof  JsonObject)||!(o  instanceof  JsonPrimitive))  {	  }    else    if(!(o    instanceof    JsonArray)||!(o    instanceof    JsonPrimitive))    {    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	251	2	replace
621	[BUG]  [BUGGY]  }  else  if(!(o  instanceof  JsonObject)||!(o  instanceof  JsonPrimitive))  {  [FE]  ArrayIndexOutOfBoundsException  [FE]          ArrayIndexOutOfBoundsException    [CONTEXT]      if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }      [BUGGY]  }  else  if(!(o  instanceof  JsonObject)||!(o  instanceof  JsonPrimitive))  {  [BUGGY]      return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	replace	}  else  if(!(o  instanceof  JsonObject)||!(o  instanceof  JsonPrimitive))  {	  }    else    if(!(o    instanceof    JsonArray)||!(o    instanceof    JsonPrimitive))    {    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	251	2	replace
622	[BUG]  [BUGGY]  }  else  if(!(o  instanceof  JsonType)&&!(o  instanceof  JsonPrimitive))  {  [CE]  cannot  find  symbol  [FE]            ArrayIndexOutOfBoundsException    [CONTEXT]      if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }      [BUGGY]  }  else  if(!(o  instanceof  JsonType)&&!(o  instanceof  JsonPrimitive))  {  [BUGGY]      return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	replace	}  else  if(!(o  instanceof  JsonType)&&!(o  instanceof  JsonPrimitive))  {	  }    else    if(!(o    instanceof    JsonArray)||!(o    instanceof    JsonPrimitive))    {    	non-compiled	[CE]  cannot  find  symbol	251	None	replace
623	[BUG]  [BUGGY]  if(o  ==  null  ||!isObject)return  JsonToken.NULL;  if(isObject)  {  push(iterator.next());  return  JsonToken.NAME;  }  [CE]  unreachable  statement  [FE]                            ArrayIndexOutOfBoundsException      [CONTEXT]      if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }      [BUGGY]  if(o  ==  null  ||!isObject)return  JsonToken.NULL;  if(isObject)  {  push(iterator.next());  return  JsonToken.NAME;  }  [BUGGY]      return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	replace	if(o  ==  null  ||!isObject)return  JsonToken.NULL;  if(isObject)  {  push(iterator.next());  return  JsonToken.NAME;  }	  if(o    ==    null)return    JsonToken.NULL;    if(isObject)    {    push(iterator.next());    return    JsonToken.NAME;    }    	non-compiled	[CE]  unreachable  statement	225	None	replace
624	[BUG]  [BUGGY]  if(o  ==  null)return  JsonToken.NUMBER;  if(isObject)  {  push(iterator.next());  return  JsonToken.NAME;  }  [CE]  unreachable  statement  [FE]                              ArrayIndexOutOfBoundsException      [CONTEXT]      if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }      [BUGGY]  if(o  ==  null)return  JsonToken.NUMBER;  if(isObject)  {  push(iterator.next());  return  JsonToken.NAME;  }  [BUGGY]      return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	replace	if(o  ==  null)return  JsonToken.NUMBER;  if(isObject)  {  push(iterator.next());  return  JsonToken.NAME;  }	  if(o    ==    null)return    JsonToken.NULL;    if(isObject)    {    push(iterator.next());    return    JsonToken.NAME;    }    	non-compiled	[CE]  unreachable  statement	225	None	replace
625	[BUG]  [BUGGY]  if(isObject)  {  return  JsonToken.NULL;  }  [CE]  unreachable  statement  [FE]                                ArrayIndexOutOfBoundsException      [CONTEXT]      if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }      [BUGGY]  if(isObject)  {  return  JsonToken.NULL;  }  [BUGGY]      return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	replace	if(isObject)  {  return  JsonToken.NULL;  }	  if(o    ==    null)return    JsonToken.NULL;    if(isObject)    {    push(iterator.next());    return    JsonToken.NAME;    }    	non-compiled	[CE]  unreachable  statement	225	None	replace
626	[BUG]  [BUGGY]  if(o  ==  null)return  JsonToken.NULL;  if(isNumber)  {  push(iterator.next());  return  JsonToken.NAME;  }  [CE]  cannot  find  symbol  isNumber  [FE]                                  ArrayIndexOutOfBoundsException      [CONTEXT]      if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }      [BUGGY]  if(o  ==  null)return  JsonToken.NULL;  if(isNumber)  {  push(iterator.next());  return  JsonToken.NAME;  }  [BUGGY]      return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	replace	if(o  ==  null)return  JsonToken.NULL;  if(isNumber)  {  push(iterator.next());  return  JsonToken.NAME;  }	  if(o    ==    null)return    JsonToken.NULL;    if(isObject)    {    push(iterator.next());    return    JsonToken.NAME;    }    	non-compiled	[CE]  cannot  find  symbol  isNumber	225	None	replace
627	[BUG]  [BUGGY]  }  else  if(o  instanceof  JsonObject  <?>||  isObject  ||  isObject)  {  [CE]  type  JsonObject  does  not  take  parameters  [FE]                  ArrayIndexOutOfBoundsException      [CONTEXT]      if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }      [BUGGY]  }  else  if(o  instanceof  JsonObject  <?>||  isObject  ||  isObject)  {  [BUGGY]      return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	replace	}  else  if(o  instanceof  JsonObject  <?>||  isObject  ||  isObject)  {	  }    else    if(o    instanceof    JsonObject    <?>    ||    isObject)    {    	non-compiled	[CE]  type  JsonObject  does  not  take  parameters	178	None	replace
628	[BUG]  [BUGGY]  }  else  if(o  instanceof  JsonArray  ||  isObject)  {  [CE]  cannot  find  symbol  isObject  [FE]                    ArrayIndexOutOfBoundsException      [CONTEXT]      if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }      [BUGGY]  }  else  if(o  instanceof  JsonArray  ||  isObject)  {  [BUGGY]      return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	replace	}  else  if(o  instanceof  JsonArray  ||  isObject)  {	  }    else    if(o    instanceof    JsonObject    <?>    ||    isObject)    {    	non-compiled	[CE]  cannot  find  symbol  isObject	178	None	replace
629	[BUG]  [BUGGY]  }  else  if(o  instanceof  JsonObject  <?>  ||  isObject  ||  isPrimitive)  {  [CE]  type  JsonObject  does  not  take  parameters  [FE]                      ArrayIndexOutOfBoundsException      [CONTEXT]      if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }      [BUGGY]  }  else  if(o  instanceof  JsonObject  <?>  ||  isObject  ||  isPrimitive)  {  [BUGGY]      return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	replace	}  else  if(o  instanceof  JsonObject  <?>  ||  isObject  ||  isPrimitive)  {	  }    else    if(o    instanceof    JsonObject    <?>    ||    isObject)    {    	non-compiled	[CE]  type  JsonObject  does  not  take  parameters	178	None	replace
630	[BUG]  [BUGGY]  }  else  if(o  instanceof  JsonObject  ||  o  instanceof  JsonObject)  {  }  else  if(o  instanceof  JsonObject  ||  o  instanceof  JsonObject)  {  [CE]  missing  return  statement  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]      if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }      [BUGGY]  }  else  if(o  instanceof  JsonObject  ||  o  instanceof  JsonObject)  {  }  else  if(o  instanceof  JsonObject  ||  o  instanceof  JsonObject)  {  [BUGGY]      return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	replace	}    else    if(o    instanceof    JsonObject    ||    o    instanceof    JsonObject)    {    }  else  if(o  instanceof  JsonObject  ||  o  instanceof  JsonObject)  {	  	non-compiled	[CE]  missing  return  statement	179	None	add
631	[BUG]  [BUGGY]  }  else  if(o  instanceof  JsonObject  ||  o  instanceof  JsonObject)  {  else  if(o  instanceof  JsonObject  ||  o  instanceof  JsonObject)  {  [CE]  'else'  without  'if'  [FE]      ArrayIndexOutOfBoundsException    [CONTEXT]      if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }      [BUGGY]  }  else  if(o  instanceof  JsonObject  ||  o  instanceof  JsonObject)  {  else  if(o  instanceof  JsonObject  ||  o  instanceof  JsonObject)  {  [BUGGY]      return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	replace	}    else    if(o    instanceof    JsonObject    ||    o    instanceof    JsonObject)    {    else  if(o  instanceof  JsonObject  ||  o  instanceof  JsonObject)  {	  	non-compiled	[CE]  'else'  without  'if'	179	None	add
632	[BUG]  [BUGGY]  }  else  if(o  instanceof  JsonObject  ||  o  instanceof  JsonObject)  {  }  else  if(o  instanceof  JsonObject  ||  o  instanceof  JsonObject)  <  return  JsonToken.BEGIN_OBJECT;  [CE]  illegal  start  of  type  [FE]        ArrayIndexOutOfBoundsException    [CONTEXT]      if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }      [BUGGY]  }  else  if(o  instanceof  JsonObject  ||  o  instanceof  JsonObject)  {  }  else  if(o  instanceof  JsonObject  ||  o  instanceof  JsonObject)  <  return  JsonToken.BEGIN_OBJECT;  [BUGGY]      return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	replace	}    else    if(o    instanceof    JsonObject    ||    o    instanceof    JsonObject)    {    }  else  if(o  instanceof  JsonObject  ||  o  instanceof  JsonObject)  <  return  JsonToken.BEGIN_OBJECT;	  	non-compiled	[CE]  illegal  start  of  type	179	None	add
633	[BUG]  [BUGGY]  }  else  if(o  instanceof  JsonObject  ||  o  instanceof  JsonObject)  {  }  else  if(o  instanceof  JsonObject  ||  o  instanceof  JsonObject)  {  return  JsonToken.BEGIN_OBJECT;  }  else  if(o  instanceof  JsonObject)  {  [CE]  missing  return  statement  [FE]          ArrayIndexOutOfBoundsException    [CONTEXT]      if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }      [BUGGY]  }  else  if(o  instanceof  JsonObject  ||  o  instanceof  JsonObject)  {  }  else  if(o  instanceof  JsonObject  ||  o  instanceof  JsonObject)  {  return  JsonToken.BEGIN_OBJECT;  }  else  if(o  instanceof  JsonObject)  {  [BUGGY]      return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	replace	}    else    if(o    instanceof    JsonObject    ||    o    instanceof    JsonObject)    {    }  else  if(o  instanceof  JsonObject  ||  o  instanceof  JsonObject)  {  return  JsonToken.BEGIN_OBJECT;  }  else  if(o  instanceof  JsonObject)  {	  	non-compiled	[CE]  missing  return  statement	179	None	add
634	[BUG]  [BUGGY]  }  else  if(o  instanceof  JsonObject  ||  o  instanceof  JsonObject)  {  }  else  if(o  instanceof  JsonObject  ||  o  instanceof  JsonObject)  {  return  JsonToken.BEGIN_OBJECT;  }  else  if(o  instanceof  JsonObject  ||  o  instanceof  JsonObject)  {  [CE]  missing  return  statement  [FE]            ArrayIndexOutOfBoundsException    [CONTEXT]      if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }      [BUGGY]  }  else  if(o  instanceof  JsonObject  ||  o  instanceof  JsonObject)  {  }  else  if(o  instanceof  JsonObject  ||  o  instanceof  JsonObject)  {  return  JsonToken.BEGIN_OBJECT;  }  else  if(o  instanceof  JsonObject  ||  o  instanceof  JsonObject)  {  [BUGGY]      return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	replace	}    else    if(o    instanceof    JsonObject    ||    o    instanceof    JsonObject)    {    }  else  if(o  instanceof  JsonObject  ||  o  instanceof  JsonObject)  {  return  JsonToken.BEGIN_OBJECT;  }  else  if(o  instanceof  JsonObject  ||  o  instanceof  JsonObject)  {	  	non-compiled	[CE]  missing  return  statement	179	None	add
635	[BUG]  [BUGGY]  }  else  if(o  instanceof  JsonObject  ||  o  instanceof  JsonObject)  {  }  else  if(o  instanceof  JsonObject  ||  o  instanceof  JsonObject)  {  return  JsonToken.BEGIN_OBJECT;  }  else  if(o  instanceof  JsonString  ||  o  instanceof  JsonObject)  {  [CE]  cannot  find  symbol  [FE]              ArrayIndexOutOfBoundsException    [CONTEXT]      if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }      [BUGGY]  }  else  if(o  instanceof  JsonObject  ||  o  instanceof  JsonObject)  {  }  else  if(o  instanceof  JsonObject  ||  o  instanceof  JsonObject)  {  return  JsonToken.BEGIN_OBJECT;  }  else  if(o  instanceof  JsonString  ||  o  instanceof  JsonObject)  {  [BUGGY]      return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	replace	}    else    if(o    instanceof    JsonObject    ||    o    instanceof    JsonObject)    {    }  else  if(o  instanceof  JsonObject  ||  o  instanceof  JsonObject)  {  return  JsonToken.BEGIN_OBJECT;  }  else  if(o  instanceof  JsonString  ||  o  instanceof  JsonObject)  {	  	non-compiled	[CE]  cannot  find  symbol	179	None	add
636	[BUG]  [BUGGY]  }  else  if(o  instanceof  JsonObject  ||  o  instanceof  JsonObject)  {  }  else  if(o  instanceof  JsonProperty  ||  o  instanceof  JsonProperty)  {  [CE]  cannot  find  symbol  [FE]                ArrayIndexOutOfBoundsException    [CONTEXT]      if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }      [BUGGY]  }  else  if(o  instanceof  JsonObject  ||  o  instanceof  JsonObject)  {  }  else  if(o  instanceof  JsonProperty  ||  o  instanceof  JsonProperty)  {  [BUGGY]      return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	replace	}    else    if(o    instanceof    JsonObject    ||    o    instanceof    JsonObject)    {    }  else  if(o  instanceof  JsonProperty  ||  o  instanceof  JsonProperty)  {	  	non-compiled	[CE]  cannot  find  symbol	179	None	add
637	[BUG]  [BUGGY]  }  else  if(!(o  instanceof  JsonNull))  {  }  else  if(!(o  instanceof  JsonNull))  {  [CE]  missing  return  statement  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]      if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }      [BUGGY]  }  else  if(!(o  instanceof  JsonNull))  {  }  else  if(!(o  instanceof  JsonNull))  {  [BUGGY]      return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	replace	}    else    if(!(o    instanceof    JsonNull))    {    }  else  if(!(o  instanceof  JsonNull))  {	  	non-compiled	[CE]  missing  return  statement	67	None	add
638	[BUG]  [BUGGY]  }  else  if(!(o  instanceof  JsonNull))  {  }  else  if(!(o  instanceof  JsonNull))  <  return  JsonToken.BEGIN_OBJECT;  [CE]  illegal  start  of  type  [FE]      ArrayIndexOutOfBoundsException    [CONTEXT]      if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }      [BUGGY]  }  else  if(!(o  instanceof  JsonNull))  {  }  else  if(!(o  instanceof  JsonNull))  <  return  JsonToken.BEGIN_OBJECT;  [BUGGY]      return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	replace	}    else    if(!(o    instanceof    JsonNull))    {    }  else  if(!(o  instanceof  JsonNull))  <  return  JsonToken.BEGIN_OBJECT;	  	non-compiled	[CE]  illegal  start  of  type	67	None	add
639	[BUG]  [BUGGY]  }  else  if(!(o  instanceof  JsonNull))  {  }  else  if(!(o  instanceof  JsonNull)  ||(o  instanceof  JsonNull))  {  [CE]  missing  return  statement  [FE]        ArrayIndexOutOfBoundsException    [CONTEXT]      if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }      [BUGGY]  }  else  if(!(o  instanceof  JsonNull))  {  }  else  if(!(o  instanceof  JsonNull)  ||(o  instanceof  JsonNull))  {  [BUGGY]      return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	replace	}    else    if(!(o    instanceof    JsonNull))    {    }  else  if(!(o  instanceof  JsonNull)  ||(o  instanceof  JsonNull))  {	  	non-compiled	[CE]  missing  return  statement	67	None	add
640	[BUG]  [BUGGY]  }  else  if(!(o  instanceof  JsonNull))  {  else  if(!(o  instanceof  JsonNull))  {  [CE]  'else'  without  'if'  [FE]          ArrayIndexOutOfBoundsException    [CONTEXT]      if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }      [BUGGY]  }  else  if(!(o  instanceof  JsonNull))  {  else  if(!(o  instanceof  JsonNull))  {  [BUGGY]      return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	replace	}    else    if(!(o    instanceof    JsonNull))    {    else  if(!(o  instanceof  JsonNull))  {	  	non-compiled	[CE]  'else'  without  'if'	67	None	add
641	[BUG]  [BUGGY]  }  else  if(!(o  instanceof  JsonNull))  {  <  }  else  if(!(o  instanceof  JsonNull))  {  [CE]  illegal  start  of  type  [FE]            ArrayIndexOutOfBoundsException    [CONTEXT]      if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }      [BUGGY]  }  else  if(!(o  instanceof  JsonNull))  {  <  }  else  if(!(o  instanceof  JsonNull))  {  [BUGGY]      return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	replace	}    else    if(!(o    instanceof    JsonNull))    {    <  }  else  if(!(o  instanceof  JsonNull))  {	  	non-compiled	[CE]  illegal  start  of  type	67	None	add
642	[BUG]  [BUGGY]  }  else  if(!(o  instanceof  JsonNull))  {  }  else  if(!(o  instanceof  JsonNull)  ||!(o  instanceof  JsonNull))  {  [CE]  missing  return  statement  [FE]              ArrayIndexOutOfBoundsException    [CONTEXT]      if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }      [BUGGY]  }  else  if(!(o  instanceof  JsonNull))  {  }  else  if(!(o  instanceof  JsonNull)  ||!(o  instanceof  JsonNull))  {  [BUGGY]      return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	replace	}    else    if(!(o    instanceof    JsonNull))    {    }  else  if(!(o  instanceof  JsonNull)  ||!(o  instanceof  JsonNull))  {	  	non-compiled	[CE]  missing  return  statement	67	None	add
643	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }      [BUGGY]  }  else  if(o  instanceof  JsonPrimitive  &&  o  instanceof  JsonObject)  {  [BUGGY]      return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	add	}  else  if(o  instanceof  JsonPrimitive  &&  o  instanceof  JsonObject)  {	  }    else    if(o    instanceof    JsonObject    &&    o    instanceof    JsonArray)    {    	compilable	  [FE]  AssertionError  	42	2	replace
644	[BUG]  [BUGGY]  }  else  if(o  instanceof  JsonPrimitive  &&  o  instanceof  JsonObject)  {  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }      [BUGGY]  }  else  if(o  instanceof  JsonPrimitive  &&  o  instanceof  JsonObject)  {  [BUGGY]      return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	replace	}  else  if(o  instanceof  JsonPrimitive  &&  o  instanceof  JsonObject)  {	  }    else    if(o    instanceof    JsonObject    &&    o    instanceof    JsonArray)    {    	compilable	  [FE]  AssertionError  	42	2	replace
645	[BUG]  [BUGGY]  }  else  if(o  instanceof  JsonObject  ||  o  instanceof  String  ||  o  instanceof  Boolean)  {  }  else  if(o  instanceof  JsonObject  ||  o  instanceof  String  ||  o  instanceof  Boolean)  {  [CE]  missing  return  statement  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]      if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }      [BUGGY]  }  else  if(o  instanceof  JsonObject  ||  o  instanceof  String  ||  o  instanceof  Boolean)  {  }  else  if(o  instanceof  JsonObject  ||  o  instanceof  String  ||  o  instanceof  Boolean)  {  [BUGGY]      return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	replace	}    else    if(o    instanceof    JsonObject    ||    o    instanceof    String    ||    o    instanceof    Boolean)    {    }  else  if(o  instanceof  JsonObject  ||  o  instanceof  String  ||  o  instanceof  Boolean)  {	  	non-compiled	[CE]  missing  return  statement	246	None	add
646	[BUG]  [BUGGY]  }  else  if(o  instanceof  JsonObject  ||  o  instanceof  String  ||  o  instanceof  Boolean)  {  }  else  if(o  instanceof  JsonObject  ||  o  instanceof  String  ||  o  instanceof  Boolean)  {  return  JsonToken.BEGIN_OBJECT;  }  else  if(o  instanceof  JsonObject  ||  o  instanceof  String  ||  o  instanceof  Boolean)  {  [CE]  missing  return  statement  [FE]      ArrayIndexOutOfBoundsException    [CONTEXT]      if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }      [BUGGY]  }  else  if(o  instanceof  JsonObject  ||  o  instanceof  String  ||  o  instanceof  Boolean)  {  }  else  if(o  instanceof  JsonObject  ||  o  instanceof  String  ||  o  instanceof  Boolean)  {  return  JsonToken.BEGIN_OBJECT;  }  else  if(o  instanceof  JsonObject  ||  o  instanceof  String  ||  o  instanceof  Boolean)  {  [BUGGY]      return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	replace	}    else    if(o    instanceof    JsonObject    ||    o    instanceof    String    ||    o    instanceof    Boolean)    {    }  else  if(o  instanceof  JsonObject  ||  o  instanceof  String  ||  o  instanceof  Boolean)  {  return  JsonToken.BEGIN_OBJECT;  }  else  if(o  instanceof  JsonObject  ||  o  instanceof  String  ||  o  instanceof  Boolean)  {	  	non-compiled	[CE]  missing  return  statement	246	None	add
647	[BUG]  [BUGGY]  }  else  if(o  instanceof  JsonObject  ||  o  instanceof  String  ||  o  instanceof  Boolean)  {  else  if(o  instanceof  JsonObject  ||  o  instanceof  String  ||  o  instanceof  Boolean)  {  [CE]  'else'  without  'if'  [FE]        ArrayIndexOutOfBoundsException    [CONTEXT]      if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }      [BUGGY]  }  else  if(o  instanceof  JsonObject  ||  o  instanceof  String  ||  o  instanceof  Boolean)  {  else  if(o  instanceof  JsonObject  ||  o  instanceof  String  ||  o  instanceof  Boolean)  {  [BUGGY]      return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	replace	}    else    if(o    instanceof    JsonObject    ||    o    instanceof    String    ||    o    instanceof    Boolean)    {    else  if(o  instanceof  JsonObject  ||  o  instanceof  String  ||  o  instanceof  Boolean)  {	  	non-compiled	[CE]  'else'  without  'if'	246	None	add
648	[BUG]  [BUGGY]  }  else  if(o  instanceof  JsonObject  ||  o  instanceof  String  ||  o  instanceof  Boolean)  {  }  else  if(o  instanceof  JsonObject  ||  o  instanceof  String  ||  o  instanceof  Boolean)  <  return  JsonToken.BEGIN_OBJECT;  [CE]  illegal  start  of  type  [FE]          ArrayIndexOutOfBoundsException    [CONTEXT]      if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }      [BUGGY]  }  else  if(o  instanceof  JsonObject  ||  o  instanceof  String  ||  o  instanceof  Boolean)  {  }  else  if(o  instanceof  JsonObject  ||  o  instanceof  String  ||  o  instanceof  Boolean)  <  return  JsonToken.BEGIN_OBJECT;  [BUGGY]      return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	replace	}    else    if(o    instanceof    JsonObject    ||    o    instanceof    String    ||    o    instanceof    Boolean)    {    }  else  if(o  instanceof  JsonObject  ||  o  instanceof  String  ||  o  instanceof  Boolean)  <  return  JsonToken.BEGIN_OBJECT;	  	non-compiled	[CE]  illegal  start  of  type	246	None	add
649	[BUG]  [BUGGY]  }  else  if(o  instanceof  JsonObject  ||  o  instanceof  String  ||  o  instanceof  Boolean)  {  }  else  if(o  instanceof  JsonObject  ||  o  instanceof  String  ||  o  instanceof  Boolean)  <  return  JsonToken.BEGIN_OBJECT;  }  else  if(o  instanceof  JsonObject  ||  o  instanceof  String  ||  o  instanceof  Boolean)  {  [CE]  illegal  start  of  type  [FE]            ArrayIndexOutOfBoundsException    [CONTEXT]      if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }      [BUGGY]  }  else  if(o  instanceof  JsonObject  ||  o  instanceof  String  ||  o  instanceof  Boolean)  {  }  else  if(o  instanceof  JsonObject  ||  o  instanceof  String  ||  o  instanceof  Boolean)  <  return  JsonToken.BEGIN_OBJECT;  }  else  if(o  instanceof  JsonObject  ||  o  instanceof  String  ||  o  instanceof  Boolean)  {  [BUGGY]      return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	replace	}    else    if(o    instanceof    JsonObject    ||    o    instanceof    String    ||    o    instanceof    Boolean)    {    }  else  if(o  instanceof  JsonObject  ||  o  instanceof  String  ||  o  instanceof  Boolean)  <  return  JsonToken.BEGIN_OBJECT;  }  else  if(o  instanceof  JsonObject  ||  o  instanceof  String  ||  o  instanceof  Boolean)  {	  	non-compiled	[CE]  illegal  start  of  type	246	None	add
650	[BUG]  [BUGGY]  }  else  if(o  instanceof  JsonObject  ||  o  instanceof  String  ||  o  instanceof  Boolean)  {  }  else  if(o  instanceof  JsonObject  ||  o  instanceof  String  ||  o  instanceof  Boolean)  {  return  JsonToken.BEGIN_OBJECT;  }  else  if(o  instanceof  JsonObject  ||  o  instanceof  Character  ||  o  instanceof  Boolean)  {  [CE]  missing  return  statement  [FE]              ArrayIndexOutOfBoundsException    [CONTEXT]      if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }      [BUGGY]  }  else  if(o  instanceof  JsonObject  ||  o  instanceof  String  ||  o  instanceof  Boolean)  {  }  else  if(o  instanceof  JsonObject  ||  o  instanceof  String  ||  o  instanceof  Boolean)  {  return  JsonToken.BEGIN_OBJECT;  }  else  if(o  instanceof  JsonObject  ||  o  instanceof  Character  ||  o  instanceof  Boolean)  {  [BUGGY]      return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	replace	}    else    if(o    instanceof    JsonObject    ||    o    instanceof    String    ||    o    instanceof    Boolean)    {    }  else  if(o  instanceof  JsonObject  ||  o  instanceof  String  ||  o  instanceof  Boolean)  {  return  JsonToken.BEGIN_OBJECT;  }  else  if(o  instanceof  JsonObject  ||  o  instanceof  Character  ||  o  instanceof  Boolean)  {	  	non-compiled	[CE]  missing  return  statement	246	None	add
651	[BUG]  [BUGGY]  }  else  if(o  instanceof  JsonObject  ||  o  instanceof  String  ||  o  instanceof  Boolean)  {  }  else  if(o  instanceof  JsonObject  ||  o  instanceof  String  ||  o  instanceof  Boolean)  {  return  JsonToken.BEGIN_OBJECT;  }  else  if(o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_OBJECT;  }  [CE]  illegal  start  of  type  [FE]                ArrayIndexOutOfBoundsException    [CONTEXT]      if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }      [BUGGY]  }  else  if(o  instanceof  JsonObject  ||  o  instanceof  String  ||  o  instanceof  Boolean)  {  }  else  if(o  instanceof  JsonObject  ||  o  instanceof  String  ||  o  instanceof  Boolean)  {  return  JsonToken.BEGIN_OBJECT;  }  else  if(o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_OBJECT;  }  [BUGGY]      return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	replace	}    else    if(o    instanceof    JsonObject    ||    o    instanceof    String    ||    o    instanceof    Boolean)    {    }  else  if(o  instanceof  JsonObject  ||  o  instanceof  String  ||  o  instanceof  Boolean)  {  return  JsonToken.BEGIN_OBJECT;  }  else  if(o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_OBJECT;  }	  	non-compiled	[CE]  illegal  start  of  type	246	None	add
652	[BUG]  [BUGGY]  }  else  if(!(o  instanceof  JsonArray))  {  case  JsonToken.BEGIN_OBJECT:  return  JsonToken.BEGIN_OBJECT;  break;  [CE]  orphaned  case  [FE]                  AssertionError      [CONTEXT]      if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }      [BUGGY]  }  else  if(!(o  instanceof  JsonArray))  {  case  JsonToken.BEGIN_OBJECT:  return  JsonToken.BEGIN_OBJECT;  break;  [BUGGY]      return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	replace	}  else  if(!(o  instanceof  JsonArray))  {  case  JsonToken.BEGIN_OBJECT:  return  JsonToken.BEGIN_OBJECT;  break;	  }    else    if(!(o    instanceof    JsonObject))    {    }    else    if(!(o    instanceof    JsonObject))    {    case    JsonToken.BEGIN_OBJECT:    return    JsonToken.BEGIN_OBJECT;    break;    	non-compiled	[CE]  orphaned  case	211	None	replace
653	[BUG]  [BUGGY]  }  else  if(!(o  instanceof  JsonObject))  {  case  JsonToken.BEGIN_OBJECT:  return  JsonToken.BEGIN_OBJECT;  break;  [CE]  orphaned  case  [FE]                    AssertionError      [CONTEXT]      if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }      [BUGGY]  }  else  if(!(o  instanceof  JsonObject))  {  case  JsonToken.BEGIN_OBJECT:  return  JsonToken.BEGIN_OBJECT;  break;  [BUGGY]      return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	replace	}  else  if(!(o  instanceof  JsonObject))  {  case  JsonToken.BEGIN_OBJECT:  return  JsonToken.BEGIN_OBJECT;  break;	  }    else    if(!(o    instanceof    JsonObject))    {    }    else    if(!(o    instanceof    JsonObject))    {    case    JsonToken.BEGIN_OBJECT:    return    JsonToken.BEGIN_OBJECT;    break;    	non-compiled	[CE]  orphaned  case	211	None	replace
654	[BUG]  [BUGGY]  }  else  if(o  instanceof  JsonPrimitive)  {  case  JsonToken.BEGIN_OBJECT:  return  JsonToken.BEGIN_OBJECT;  break;  [CE]  orphaned  case  [FE]                      AssertionError      [CONTEXT]      if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }      [BUGGY]  }  else  if(o  instanceof  JsonPrimitive)  {  case  JsonToken.BEGIN_OBJECT:  return  JsonToken.BEGIN_OBJECT;  break;  [BUGGY]      return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	replace	}  else  if(o  instanceof  JsonPrimitive)  {  case  JsonToken.BEGIN_OBJECT:  return  JsonToken.BEGIN_OBJECT;  break;	  }    else    if(!(o    instanceof    JsonObject))    {    }    else    if(!(o    instanceof    JsonObject))    {    case    JsonToken.BEGIN_OBJECT:    return    JsonToken.BEGIN_OBJECT;    break;    	non-compiled	[CE]  orphaned  case	211	None	replace
655	[BUG]  [BUGGY]  }  else  if(o  instanceof  JsonArray)  {  case  JsonToken.BEGIN_OBJECT:  return  JsonToken.BEGIN_OBJECT;  break;  [CE]  orphaned  case  [FE]                        AssertionError      [CONTEXT]      if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }      [BUGGY]  }  else  if(o  instanceof  JsonArray)  {  case  JsonToken.BEGIN_OBJECT:  return  JsonToken.BEGIN_OBJECT;  break;  [BUGGY]      return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	replace	}  else  if(o  instanceof  JsonArray)  {  case  JsonToken.BEGIN_OBJECT:  return  JsonToken.BEGIN_OBJECT;  break;	  }    else    if(!(o    instanceof    JsonObject))    {    }    else    if(!(o    instanceof    JsonObject))    {    case    JsonToken.BEGIN_OBJECT:    return    JsonToken.BEGIN_OBJECT;    break;    	non-compiled	[CE]  orphaned  case	211	None	replace
656	[BUG]  [BUGGY]  }  else  if(o  instanceof  JsonPrimitive)  {  if(!(o  instanceof  JsonPrimitive))  {  case  JsonPrimitive:  return  JsonToken.BEGIN_OBJECT;  break;  }  [CE]  orphaned  case  [FE]                          AssertionError      [CONTEXT]      if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }      [BUGGY]  }  else  if(o  instanceof  JsonPrimitive)  {  if(!(o  instanceof  JsonPrimitive))  {  case  JsonPrimitive:  return  JsonToken.BEGIN_OBJECT;  break;  }  [BUGGY]      return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	replace	}  else  if(o  instanceof  JsonPrimitive)  {  if(!(o  instanceof  JsonPrimitive))  {  case  JsonPrimitive:  return  JsonToken.BEGIN_OBJECT;  break;  }	  }    else    if(!(o    instanceof    JsonObject))    {    }    else    if(!(o    instanceof    JsonObject))    {    case    JsonToken.BEGIN_OBJECT:    return    JsonToken.BEGIN_OBJECT;    break;    	non-compiled	[CE]  orphaned  case	211	None	replace
657	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]                            AssertionError      [CONTEXT]      if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }      [BUGGY]  }  else  if(o  instanceof  JsonPrimitive)  {  if(!(o  instanceof  JsonPrimitive))  {  return  JsonToken.BEGIN_OBJECT;  }  [BUGGY]      return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	add	}  else  if(o  instanceof  JsonPrimitive)  {  if(!(o  instanceof  JsonPrimitive))  {  return  JsonToken.BEGIN_OBJECT;  }	  }    else    if(!(o    instanceof    JsonObject))    {    }    else    if(!(o    instanceof    JsonObject))    {    case    JsonToken.BEGIN_OBJECT:    return    JsonToken.BEGIN_OBJECT;    break;    	compilable	  [FE]  AssertionError  	211	2	replace
658	[BUG]  [BUGGY]  }  else  if(o  instanceof  JsonPrimitive)  {  if(!(o  instanceof  JsonPrimitive))  {  return  JsonToken.BEGIN_OBJECT;  }  [FE]  AssertionError  [FE]                            AssertionError      [CONTEXT]      if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }      [BUGGY]  }  else  if(o  instanceof  JsonPrimitive)  {  if(!(o  instanceof  JsonPrimitive))  {  return  JsonToken.BEGIN_OBJECT;  }  [BUGGY]      return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	replace	}  else  if(o  instanceof  JsonPrimitive)  {  if(!(o  instanceof  JsonPrimitive))  {  return  JsonToken.BEGIN_OBJECT;  }	  }    else    if(!(o    instanceof    JsonObject))    {    }    else    if(!(o    instanceof    JsonObject))    {    case    JsonToken.BEGIN_OBJECT:    return    JsonToken.BEGIN_OBJECT;    break;    	compilable	  [FE]  AssertionError  	211	2	replace
659	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]      if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }      [BUGGY]  }  else  if(o  instanceof  JsonObject  &&  o  instanceof  Class  <?>)  {  [BUGGY]      return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	add	}  else  if(o  instanceof  JsonObject  &&  o  instanceof  Class  <?>)  {	  }    else    if(o    instanceof    JsonObject    ||    o    instanceof    Class    <?>)    {    	compilable	  [FE]  AssertionError  	243	2	replace
660	[BUG]  [BUGGY]  }  else  if(o  instanceof  JsonObject  &&  o  instanceof  Class  <?>)  {  [FE]  AssertionError  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]      if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }      [BUGGY]  }  else  if(o  instanceof  JsonObject  &&  o  instanceof  Class  <?>)  {  [BUGGY]      return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	replace	}  else  if(o  instanceof  JsonObject  &&  o  instanceof  Class  <?>)  {	  }    else    if(o    instanceof    JsonObject    ||    o    instanceof    Class    <?>)    {    	compilable	  [FE]  AssertionError  	243	2	replace
661	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]      ArrayIndexOutOfBoundsException    [CONTEXT]      if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }      [BUGGY]  }  else  if(o  instanceof  JsonArray  ||  o  instanceof  Class  <?>)  {  [BUGGY]      return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	add	}  else  if(o  instanceof  JsonArray  ||  o  instanceof  Class  <?>)  {	  }    else    if(o    instanceof    JsonObject    ||    o    instanceof    Class    <?>)    {    	compilable	  [FE]  AssertionError  	243	2	replace
662	[BUG]  [BUGGY]  }  else  if(o  instanceof  JsonArray  ||  o  instanceof  Class  <?>)  {  [FE]  AssertionError  [FE]      ArrayIndexOutOfBoundsException    [CONTEXT]      if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }      [BUGGY]  }  else  if(o  instanceof  JsonArray  ||  o  instanceof  Class  <?>)  {  [BUGGY]      return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	replace	}  else  if(o  instanceof  JsonArray  ||  o  instanceof  Class  <?>)  {	  }    else    if(o    instanceof    JsonObject    ||    o    instanceof    Class    <?>)    {    	compilable	  [FE]  AssertionError  	243	2	replace
663	[BUG]  [BUGGY]  [FE]  ArrayIndexOutOfBoundsException  [FE]        ArrayIndexOutOfBoundsException    [CONTEXT]      if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }      [BUGGY]  }  else  if(o  instanceof  JsonObject  ||!(o  instanceof  Class  <?>))  {  [BUGGY]      return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	add	}  else  if(o  instanceof  JsonObject  ||!(o  instanceof  Class  <?>))  {	  }    else    if(o    instanceof    JsonObject    ||    o    instanceof    Class    <?>)    {    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	243	2	replace
664	[BUG]  [BUGGY]  }  else  if(o  instanceof  JsonObject  ||!(o  instanceof  Class  <?>))  {  [FE]  ArrayIndexOutOfBoundsException  [FE]        ArrayIndexOutOfBoundsException    [CONTEXT]      if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }      [BUGGY]  }  else  if(o  instanceof  JsonObject  ||!(o  instanceof  Class  <?>))  {  [BUGGY]      return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	replace	}  else  if(o  instanceof  JsonObject  ||!(o  instanceof  Class  <?>))  {	  }    else    if(o    instanceof    JsonObject    ||    o    instanceof    Class    <?>)    {    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	243	2	replace
665	[BUG]  [BUGGY]  }  else  if(o  instanceof  JsonObject  ||  o  instanceof  Class  ==?>)  {  [CE]  illegal  start  of  expression  [FE]          ArrayIndexOutOfBoundsException    [CONTEXT]      if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }      [BUGGY]  }  else  if(o  instanceof  JsonObject  ||  o  instanceof  Class  ==?>)  {  [BUGGY]      return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	replace	}  else  if(o  instanceof  JsonObject  ||  o  instanceof  Class  ==?>)  {	  }    else    if(o    instanceof    JsonObject    ||    o    instanceof    Class    <?>)    {    	non-compiled	[CE]  illegal  start  of  expression	243	None	replace
666	[BUG]  [BUGGY]  }  else  if(o  instanceof  JsonObject  ||  o  instanceof  Class  >=?>)  {  [CE]  illegal  start  of  expression  [FE]            ArrayIndexOutOfBoundsException    [CONTEXT]      if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }      [BUGGY]  }  else  if(o  instanceof  JsonObject  ||  o  instanceof  Class  >=?>)  {  [BUGGY]      return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	replace	}  else  if(o  instanceof  JsonObject  ||  o  instanceof  Class  >=?>)  {	  }    else    if(o    instanceof    JsonObject    ||    o    instanceof    Class    <?>)    {    	non-compiled	[CE]  illegal  start  of  expression	243	None	replace
667	[BUG]  [BUGGY]  [FE]  ArrayIndexOutOfBoundsException  [FE]        AssertionError      [CONTEXT]      if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }      [BUGGY]  }  else  if(!(o  instanceof  JsonPrimitive)||(o  instanceof  JsonPrimitive))  {  [BUGGY]      return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	add	}  else  if(!(o  instanceof  JsonPrimitive)||(o  instanceof  JsonPrimitive))  {	  }    else    if(o    instanceof    JsonArray)    {    }    else    if(o    instanceof    JsonArray)    {    return    JsonToken.BEGIN_OBJECT;    }    else    if(o    instanceof    JsonArray)    {    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	202	2	replace
668	[BUG]  [BUGGY]  }  else  if(!(o  instanceof  JsonPrimitive)||(o  instanceof  JsonPrimitive))  {  [FE]  ArrayIndexOutOfBoundsException  [FE]        AssertionError      [CONTEXT]      if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }      [BUGGY]  }  else  if(!(o  instanceof  JsonPrimitive)||(o  instanceof  JsonPrimitive))  {  [BUGGY]      return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	replace	}  else  if(!(o  instanceof  JsonPrimitive)||(o  instanceof  JsonPrimitive))  {	  }    else    if(o    instanceof    JsonArray)    {    }    else    if(o    instanceof    JsonArray)    {    return    JsonToken.BEGIN_OBJECT;    }    else    if(o    instanceof    JsonArray)    {    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	202	2	replace
669	[BUG]  [BUGGY]  }  else  if(o  instanceof  JsonObject  &&  o  instanceof  String)  {  ArrayIndexOutOfBoundsException  e  =  new  ArrayIndexOutOfBoundsException(pathNames[0],  pathNames[1]);  [CE]  no  suitable  constructor  found  for  ArrayIndexOutOfBoundsException(String,String)  [FE]            ArrayIndexOutOfBoundsException      [CONTEXT]      if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }      [BUGGY]  }  else  if(o  instanceof  JsonObject  &&  o  instanceof  String)  {  ArrayIndexOutOfBoundsException  e  =  new  ArrayIndexOutOfBoundsException(pathNames[0],  pathNames[1]);  [BUGGY]      return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	replace	}  else  if(o  instanceof  JsonObject  &&  o  instanceof  String)  {  ArrayIndexOutOfBoundsException  e  =  new  ArrayIndexOutOfBoundsException(pathNames[0],  pathNames[1]);	  }    else    if(o    instanceof    JsonObject    ||    o    instanceof    String)    {    ArrayIndexOutOfBoundsException    e    =    new    ArrayIndexOutOfBoundsException(pathNames[0],    pathNames[1]);    	non-compiled	[CE]  no  suitable  constructor  found  for  ArrayIndexOutOfBoundsException(String,String)	150	None	replace
670	[BUG]  [BUGGY]  }  else  if(o  instanceof  JsonObject)  {  ArrayIndexOutOfBoundsException  e  =  new  ArrayIndexOutOfBoundsException(pathNames[0],  pathNames[1]);  [CE]  no  suitable  constructor  found  for  ArrayIndexOutOfBoundsException(String,String)  [FE]              ArrayIndexOutOfBoundsException      [CONTEXT]      if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }      [BUGGY]  }  else  if(o  instanceof  JsonObject)  {  ArrayIndexOutOfBoundsException  e  =  new  ArrayIndexOutOfBoundsException(pathNames[0],  pathNames[1]);  [BUGGY]      return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	replace	}  else  if(o  instanceof  JsonObject)  {  ArrayIndexOutOfBoundsException  e  =  new  ArrayIndexOutOfBoundsException(pathNames[0],  pathNames[1]);	  }    else    if(o    instanceof    JsonObject    ||    o    instanceof    String)    {    ArrayIndexOutOfBoundsException    e    =    new    ArrayIndexOutOfBoundsException(pathNames[0],    pathNames[1]);    	non-compiled	[CE]  no  suitable  constructor  found  for  ArrayIndexOutOfBoundsException(String,String)	150	None	replace
671	[BUG]  [BUGGY]  }  else  if(o  instanceof  JsonObject  ||  o  instanceof  Class  <?>)  {  ArrayIndexOutOfBoundsException  e  =  new  ArrayIndexOutOfBoundsException(pathNames[0],  pathNames[1]);  [CE]  no  suitable  constructor  found  for  ArrayIndexOutOfBoundsException(String,String)  [FE]                ArrayIndexOutOfBoundsException      [CONTEXT]      if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }      [BUGGY]  }  else  if(o  instanceof  JsonObject  ||  o  instanceof  Class  <?>)  {  ArrayIndexOutOfBoundsException  e  =  new  ArrayIndexOutOfBoundsException(pathNames[0],  pathNames[1]);  [BUGGY]      return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	replace	}  else  if(o  instanceof  JsonObject  ||  o  instanceof  Class  <?>)  {  ArrayIndexOutOfBoundsException  e  =  new  ArrayIndexOutOfBoundsException(pathNames[0],  pathNames[1]);	  }    else    if(o    instanceof    JsonObject    ||    o    instanceof    String)    {    ArrayIndexOutOfBoundsException    e    =    new    ArrayIndexOutOfBoundsException(pathNames[0],    pathNames[1]);    	non-compiled	[CE]  no  suitable  constructor  found  for  ArrayIndexOutOfBoundsException(String,String)	150	None	replace
672	[BUG]  [BUGGY]  }  else  if(o  instanceof  JsonObject  ||  o  instanceof  Number)  {  ArrayIndexOutOfBoundsException  e  =  new  ArrayIndexOutOfBoundsException(pathNames[0],  pathNames[1]);  [CE]  no  suitable  constructor  found  for  ArrayIndexOutOfBoundsException(String,String)  [FE]                  ArrayIndexOutOfBoundsException      [CONTEXT]      if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }      [BUGGY]  }  else  if(o  instanceof  JsonObject  ||  o  instanceof  Number)  {  ArrayIndexOutOfBoundsException  e  =  new  ArrayIndexOutOfBoundsException(pathNames[0],  pathNames[1]);  [BUGGY]      return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	replace	}  else  if(o  instanceof  JsonObject  ||  o  instanceof  Number)  {  ArrayIndexOutOfBoundsException  e  =  new  ArrayIndexOutOfBoundsException(pathNames[0],  pathNames[1]);	  }    else    if(o    instanceof    JsonObject    ||    o    instanceof    String)    {    ArrayIndexOutOfBoundsException    e    =    new    ArrayIndexOutOfBoundsException(pathNames[0],    pathNames[1]);    	non-compiled	[CE]  no  suitable  constructor  found  for  ArrayIndexOutOfBoundsException(String,String)	150	None	replace
673	[BUG]  [BUGGY]  }  else  if(o  instanceof  JsonObject  ||  o  instanceof  String  ||  o  instanceof  UNREADABLE_READER)  {  ArrayIndexOutOfBoundsException  e  =  new  ArrayIndexOutOfBoundsException(pathNames[0],  pathNames[1]);  [CE]  cannot  find  symbol  [FE]                    ArrayIndexOutOfBoundsException      [CONTEXT]      if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }      [BUGGY]  }  else  if(o  instanceof  JsonObject  ||  o  instanceof  String  ||  o  instanceof  UNREADABLE_READER)  {  ArrayIndexOutOfBoundsException  e  =  new  ArrayIndexOutOfBoundsException(pathNames[0],  pathNames[1]);  [BUGGY]      return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	replace	}  else  if(o  instanceof  JsonObject  ||  o  instanceof  String  ||  o  instanceof  UNREADABLE_READER)  {  ArrayIndexOutOfBoundsException  e  =  new  ArrayIndexOutOfBoundsException(pathNames[0],  pathNames[1]);	  }    else    if(o    instanceof    JsonObject    ||    o    instanceof    String)    {    ArrayIndexOutOfBoundsException    e    =    new    ArrayIndexOutOfBoundsException(pathNames[0],    pathNames[1]);    	non-compiled	[CE]  cannot  find  symbol	150	None	replace
674	[BUG]  [BUGGY]  }  else  if(o  instanceof  JsonArray  ||  o  instanceof  String)  {  ArrayIndexOutOfBoundsException  e  =  new  ArrayIndexOutOfBoundsException(pathNames[0],  pathNames[1]);  [CE]  no  suitable  constructor  found  for  ArrayIndexOutOfBoundsException(String,String)  [FE]                      ArrayIndexOutOfBoundsException      [CONTEXT]      if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }      [BUGGY]  }  else  if(o  instanceof  JsonArray  ||  o  instanceof  String)  {  ArrayIndexOutOfBoundsException  e  =  new  ArrayIndexOutOfBoundsException(pathNames[0],  pathNames[1]);  [BUGGY]      return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	replace	}  else  if(o  instanceof  JsonArray  ||  o  instanceof  String)  {  ArrayIndexOutOfBoundsException  e  =  new  ArrayIndexOutOfBoundsException(pathNames[0],  pathNames[1]);	  }    else    if(o    instanceof    JsonObject    ||    o    instanceof    String)    {    ArrayIndexOutOfBoundsException    e    =    new    ArrayIndexOutOfBoundsException(pathNames[0],    pathNames[1]);    	non-compiled	[CE]  no  suitable  constructor  found  for  ArrayIndexOutOfBoundsException(String,String)	150	None	replace
675	[BUG]  [BUGGY]  Iterator  iterator  =  this.stacks.iterator();  [CE]  variable  iterator  is  already  defined  in  method  peek()  [FE]                              ArrayIndexOutOfBoundsException      [CONTEXT]      if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }      [BUGGY]  Iterator  iterator  =  this.stacks.iterator();  [BUGGY]      return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	replace	Iterator  iterator  =  this.stacks.iterator();	  Iterator    iterator    =    stacks.iterator();    	non-compiled	[CE]  variable  iterator  is  already  defined  in  method  peek()	188	None	replace
676	[BUG]  [BUGGY]  Iterator  iterator  =  arrays.iterator();  [CE]  variable  iterator  is  already  defined  in  method  peek()  [FE]                                ArrayIndexOutOfBoundsException      [CONTEXT]      if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }      [BUGGY]  Iterator  iterator  =  arrays.iterator();  [BUGGY]      return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	replace	Iterator  iterator  =  arrays.iterator();	  Iterator    iterator    =    stacks.iterator();    	non-compiled	[CE]  variable  iterator  is  already  defined  in  method  peek()	188	None	replace
677	[BUG]  [BUGGY]  Iterator  iterator  =  UNREADABLE_READER.iterator();  [CE]  variable  iterator  is  already  defined  in  method  peek()  [FE]                                  ArrayIndexOutOfBoundsException      [CONTEXT]      if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }      [BUGGY]  Iterator  iterator  =  UNREADABLE_READER.iterator();  [BUGGY]      return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	replace	Iterator  iterator  =  UNREADABLE_READER.iterator();	  Iterator    iterator    =    stacks.iterator();    	non-compiled	[CE]  variable  iterator  is  already  defined  in  method  peek()	188	None	replace
678	[BUG]  [BUGGY]  Iterator  iterator  =  pathNames.iterator();  [CE]  variable  iterator  is  already  defined  in  method  peek()  [FE]                                    ArrayIndexOutOfBoundsException      [CONTEXT]      if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }      [BUGGY]  Iterator  iterator  =  pathNames.iterator();  [BUGGY]      return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	replace	Iterator  iterator  =  pathNames.iterator();	  Iterator    iterator    =    stacks.iterator();    	non-compiled	[CE]  variable  iterator  is  already  defined  in  method  peek()	188	None	replace
679	[BUG]  [BUGGY]  Iterator  iterator  =  heaps.iterator();  [CE]  variable  iterator  is  already  defined  in  method  peek()  [FE]                                      ArrayIndexOutOfBoundsException      [CONTEXT]      if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }      [BUGGY]  Iterator  iterator  =  heaps.iterator();  [BUGGY]      return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	replace	Iterator  iterator  =  heaps.iterator();	  Iterator    iterator    =    stacks.iterator();    	non-compiled	[CE]  variable  iterator  is  already  defined  in  method  peek()	188	None	replace
680	[BUG]  [BUGGY]  Iterator  iterator  =  list.iterator();  [CE]  variable  iterator  is  already  defined  in  method  peek()  [FE]                                        ArrayIndexOutOfBoundsException      [CONTEXT]      if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }      [BUGGY]  Iterator  iterator  =  list.iterator();  [BUGGY]      return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	replace	Iterator  iterator  =  list.iterator();	  Iterator    iterator    =    stacks.iterator();    	non-compiled	[CE]  variable  iterator  is  already  defined  in  method  peek()	188	None	replace
681	[BUG]  [BUGGY]  }  else  if(o  instanceof  JsonArray  ||!(o  instanceof  JsonNull  &&!(o  instanceof  JsonNull  &&!(o  instanceof  JsonNull  &&!(o  instanceof  JsonNull)))  {  [CE]  [FE]            AssertionError      [CONTEXT]      if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }      [BUGGY]  }  else  if(o  instanceof  JsonArray  ||!(o  instanceof  JsonNull  &&!(o  instanceof  JsonNull  &&!(o  instanceof  JsonNull  &&!(o  instanceof  JsonNull)))  {  [BUGGY]      return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	replace	}  else  if(o  instanceof  JsonArray  ||!(o  instanceof  JsonNull  &&!(o  instanceof  JsonNull  &&!(o  instanceof  JsonNull  &&!(o  instanceof  JsonNull)))  {	  }    else    if(o    instanceof    JsonNull    ||!(o    instanceof    JsonNull    &&!(o    instanceof    JsonNull    &&!(o    instanceof    JsonNull)))    {    	non-compiled	[CE]  	5	None	replace
682	[BUG]  [BUGGY]  }  else  if(o  instanceof  String  ||  o  instanceof  JsonNull  ||!(o  instanceof  JsonNull  &&!(o  instanceof  JsonNull  &&!(o  instanceof  JsonNull)))  {  [CE]  ')'  expected  [FE]              AssertionError      [CONTEXT]      if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }      [BUGGY]  }  else  if(o  instanceof  String  ||  o  instanceof  JsonNull  ||!(o  instanceof  JsonNull  &&!(o  instanceof  JsonNull  &&!(o  instanceof  JsonNull)))  {  [BUGGY]      return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	replace	}  else  if(o  instanceof  String  ||  o  instanceof  JsonNull  ||!(o  instanceof  JsonNull  &&!(o  instanceof  JsonNull  &&!(o  instanceof  JsonNull)))  {	  }    else    if(o    instanceof    JsonNull    ||!(o    instanceof    JsonNull    &&!(o    instanceof    JsonNull    &&!(o    instanceof    JsonNull)))    {    	non-compiled	[CE]  ')'  expected	5	None	replace
683	[BUG]  [BUGGY]  }  else  if(o  instanceof  String  ||  o  instanceof  JsonNull  ||!(o  instanceof  JsonNull  &&!(o  instanceof  JsonNull  &&!(o  instanceof  JsonNull  &&!(o  instanceof  JsonNull)))  {  [CE]  [FE]                AssertionError      [CONTEXT]      if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }      [BUGGY]  }  else  if(o  instanceof  String  ||  o  instanceof  JsonNull  ||!(o  instanceof  JsonNull  &&!(o  instanceof  JsonNull  &&!(o  instanceof  JsonNull  &&!(o  instanceof  JsonNull)))  {  [BUGGY]      return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	replace	}  else  if(o  instanceof  String  ||  o  instanceof  JsonNull  ||!(o  instanceof  JsonNull  &&!(o  instanceof  JsonNull  &&!(o  instanceof  JsonNull  &&!(o  instanceof  JsonNull)))  {	  }    else    if(o    instanceof    JsonNull    ||!(o    instanceof    JsonNull    &&!(o    instanceof    JsonNull    &&!(o    instanceof    JsonNull)))    {    	non-compiled	[CE]  	5	None	replace
684	[BUG]  [BUGGY]  }  else  if(o  instanceof  JsonNull  ||!(o  instanceof  String  ||!(o  instanceof  JsonNull  &&!(o  instanceof  JsonNull  &&!(o  instanceof  JsonNull)))  {  [CE]  [FE]                  AssertionError      [CONTEXT]      if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }      [BUGGY]  }  else  if(o  instanceof  JsonNull  ||!(o  instanceof  String  ||!(o  instanceof  JsonNull  &&!(o  instanceof  JsonNull  &&!(o  instanceof  JsonNull)))  {  [BUGGY]      return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	replace	}  else  if(o  instanceof  JsonNull  ||!(o  instanceof  String  ||!(o  instanceof  JsonNull  &&!(o  instanceof  JsonNull  &&!(o  instanceof  JsonNull)))  {	  }    else    if(o    instanceof    JsonNull    ||!(o    instanceof    JsonNull    &&!(o    instanceof    JsonNull    &&!(o    instanceof    JsonNull)))    {    	non-compiled	[CE]  	5	None	replace
685	[BUG]  [BUGGY]  }  else  if(o  instanceof  JsonObject  ||!(o  instanceof  JsonNull  &&!(o  instanceof  JsonNull  &&!(o  instanceof  JsonNull)))  {  [CE]  ')'  expected  [FE]                    AssertionError      [CONTEXT]      if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }      [BUGGY]  }  else  if(o  instanceof  JsonObject  ||!(o  instanceof  JsonNull  &&!(o  instanceof  JsonNull  &&!(o  instanceof  JsonNull)))  {  [BUGGY]      return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	replace	}  else  if(o  instanceof  JsonObject  ||!(o  instanceof  JsonNull  &&!(o  instanceof  JsonNull  &&!(o  instanceof  JsonNull)))  {	  }    else    if(o    instanceof    JsonNull    ||!(o    instanceof    JsonNull    &&!(o    instanceof    JsonNull    &&!(o    instanceof    JsonNull)))    {    	non-compiled	[CE]  ')'  expected	5	None	replace
686	[BUG]  [BUGGY]  [FE]  ArrayIndexOutOfBoundsException  [FE]    AssertionError    [CONTEXT]      if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }      [BUGGY]  }  else  if(!(o  instanceof  JsonObject  &&  o  instanceof  JsonArray))  {  [BUGGY]      return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	add	}  else  if(!(o  instanceof  JsonObject  &&  o  instanceof  JsonArray))  {	  }    else    if(!(o    instanceof    JsonObject    ||    o    instanceof    JsonArray))    {    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	137	2	replace
687	[BUG]  [BUGGY]  }  else  if(!(o  instanceof  JsonObject  &&  o  instanceof  JsonArray))  {  [FE]  ArrayIndexOutOfBoundsException  [FE]    AssertionError    [CONTEXT]      if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }      [BUGGY]  }  else  if(!(o  instanceof  JsonObject  &&  o  instanceof  JsonArray))  {  [BUGGY]      return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	replace	}  else  if(!(o  instanceof  JsonObject  &&  o  instanceof  JsonArray))  {	  }    else    if(!(o    instanceof    JsonObject    ||    o    instanceof    JsonArray))    {    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	137	2	replace
688	[BUG]  [BUGGY]  [FE]  ArrayIndexOutOfBoundsException  [FE]      AssertionError    [CONTEXT]      if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }      [BUGGY]  }  else  if(!(o  instanceof  JsonObject  &&  o  instanceof  JsonPrimitive))  {  [BUGGY]      return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	add	}  else  if(!(o  instanceof  JsonObject  &&  o  instanceof  JsonPrimitive))  {	  }    else    if(!(o    instanceof    JsonObject    ||    o    instanceof    JsonArray))    {    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	137	2	replace
689	[BUG]  [BUGGY]  }  else  if(!(o  instanceof  JsonObject  &&  o  instanceof  JsonPrimitive))  {  [FE]  ArrayIndexOutOfBoundsException  [FE]      AssertionError    [CONTEXT]      if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }      [BUGGY]  }  else  if(!(o  instanceof  JsonObject  &&  o  instanceof  JsonPrimitive))  {  [BUGGY]      return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	replace	}  else  if(!(o  instanceof  JsonObject  &&  o  instanceof  JsonPrimitive))  {	  }    else    if(!(o    instanceof    JsonObject    ||    o    instanceof    JsonArray))    {    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	137	2	replace
690	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]        AssertionError    [CONTEXT]      if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }      [BUGGY]  }  else  if(!(o  instanceof  JsonPrimitive  ||  o  instanceof  JsonObject))  {  [BUGGY]      return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	add	}  else  if(!(o  instanceof  JsonPrimitive  ||  o  instanceof  JsonObject))  {	  }    else    if(!(o    instanceof    JsonObject    ||    o    instanceof    JsonArray))    {    	compilable	  [FE]  AssertionError  	137	2	replace
691	[BUG]  [BUGGY]  }  else  if(!(o  instanceof  JsonPrimitive  ||  o  instanceof  JsonObject))  {  [FE]  AssertionError  [FE]        AssertionError    [CONTEXT]      if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }      [BUGGY]  }  else  if(!(o  instanceof  JsonPrimitive  ||  o  instanceof  JsonObject))  {  [BUGGY]      return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	replace	}  else  if(!(o  instanceof  JsonPrimitive  ||  o  instanceof  JsonObject))  {	  }    else    if(!(o    instanceof    JsonObject    ||    o    instanceof    JsonArray))    {    	compilable	  [FE]  AssertionError  	137	2	replace
692	[BUG]  [BUGGY]  }  else  if(!(o  instanceof  JsonObject  ||  o  instanceof  JsonType))  {  [CE]  cannot  find  symbol  [FE]          AssertionError    [CONTEXT]      if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }      [BUGGY]  }  else  if(!(o  instanceof  JsonObject  ||  o  instanceof  JsonType))  {  [BUGGY]      return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	replace	}  else  if(!(o  instanceof  JsonObject  ||  o  instanceof  JsonType))  {	  }    else    if(!(o    instanceof    JsonObject    ||    o    instanceof    JsonArray))    {    	non-compiled	[CE]  cannot  find  symbol	137	None	replace
693	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]            AssertionError    [CONTEXT]      if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }      [BUGGY]  }  else  if(!(o  instanceof  JsonArray  ||  o  instanceof  JsonObject))  {  [BUGGY]      return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	add	}  else  if(!(o  instanceof  JsonArray  ||  o  instanceof  JsonObject))  {	  }    else    if(!(o    instanceof    JsonObject    ||    o    instanceof    JsonArray))    {    	compilable	  [FE]  AssertionError  	137	2	replace
694	[BUG]  [BUGGY]  }  else  if(!(o  instanceof  JsonArray  ||  o  instanceof  JsonObject))  {  [FE]  AssertionError  [FE]            AssertionError    [CONTEXT]      if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }      [BUGGY]  }  else  if(!(o  instanceof  JsonArray  ||  o  instanceof  JsonObject))  {  [BUGGY]      return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	replace	}  else  if(!(o  instanceof  JsonArray  ||  o  instanceof  JsonObject))  {	  }    else    if(!(o    instanceof    JsonObject    ||    o    instanceof    JsonArray))    {    	compilable	  [FE]  AssertionError  	137	2	replace
695	[BUG]  [BUGGY]  }  else  if(o  instanceof  JsonObject!=  null)  {  [CE]  incomparable  types:  boolean  and  <null>  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]      if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }      [BUGGY]  }  else  if(o  instanceof  JsonObject!=  null)  {  [BUGGY]      return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	replace	}  else  if(o  instanceof  JsonObject!=  null)  {	  }    else    if(o    instanceof    JsonObject!=    false)    {    	non-compiled	[CE]  incomparable  types:  boolean  and  <null>	33	None	replace
696	[BUG]  [BUGGY]  }  else  if(!(o  instanceof  JsonObject  ||  o  instanceof  JsonNumber)&&  isObject)  {  [CE]  cannot  find  symbol  [FE]            AssertionError      [CONTEXT]      if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }      [BUGGY]  }  else  if(!(o  instanceof  JsonObject  ||  o  instanceof  JsonNumber)&&  isObject)  {  [BUGGY]      return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	replace	}  else  if(!(o  instanceof  JsonObject  ||  o  instanceof  JsonNumber)&&  isObject)  {	  }    else    if(!(o    instanceof    JsonObject    ||    o    instanceof    JsonNumber))    {    	non-compiled	[CE]  cannot  find  symbol	140	None	replace
697	[BUG]  [BUGGY]  }  else  if(!(o  instanceof  JsonObject  ||  o  instanceof  JsonNumber  ||  o  instanceof  JsonArray))  {  [CE]  cannot  find  symbol  [FE]              AssertionError      [CONTEXT]      if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }      [BUGGY]  }  else  if(!(o  instanceof  JsonObject  ||  o  instanceof  JsonNumber  ||  o  instanceof  JsonArray))  {  [BUGGY]      return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	replace	}  else  if(!(o  instanceof  JsonObject  ||  o  instanceof  JsonNumber  ||  o  instanceof  JsonArray))  {	  }    else    if(!(o    instanceof    JsonObject    ||    o    instanceof    JsonNumber))    {    	non-compiled	[CE]  cannot  find  symbol	140	None	replace
698	[BUG]  [BUGGY]  }  else  if(!(o  instanceof  JsonObject  ||  o  instanceof  JsonNumber  ||  isObject))  {  [CE]  cannot  find  symbol  [FE]                AssertionError      [CONTEXT]      if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }      [BUGGY]  }  else  if(!(o  instanceof  JsonObject  ||  o  instanceof  JsonNumber  ||  isObject))  {  [BUGGY]      return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	replace	}  else  if(!(o  instanceof  JsonObject  ||  o  instanceof  JsonNumber  ||  isObject))  {	  }    else    if(!(o    instanceof    JsonObject    ||    o    instanceof    JsonNumber))    {    	non-compiled	[CE]  cannot  find  symbol	140	None	replace
699	[BUG]  [BUGGY]  }  else  if(!(o  instanceof  JsonObject  &&  o  instanceof  JsonNumber))  {  [CE]  cannot  find  symbol  [FE]                  AssertionError      [CONTEXT]      if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }      [BUGGY]  }  else  if(!(o  instanceof  JsonObject  &&  o  instanceof  JsonNumber))  {  [BUGGY]      return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	replace	}  else  if(!(o  instanceof  JsonObject  &&  o  instanceof  JsonNumber))  {	  }    else    if(!(o    instanceof    JsonObject    ||    o    instanceof    JsonNumber))    {    	non-compiled	[CE]  cannot  find  symbol	140	None	replace
700	[BUG]  [BUGGY]  }  else  if(!(o  instanceof  JsonObject  ||  o  instanceof  JsonNumber  ||  o  instanceof  String))  {  [CE]  cannot  find  symbol  [FE]                    AssertionError      [CONTEXT]      if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }      [BUGGY]  }  else  if(!(o  instanceof  JsonObject  ||  o  instanceof  JsonNumber  ||  o  instanceof  String))  {  [BUGGY]      return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	replace	}  else  if(!(o  instanceof  JsonObject  ||  o  instanceof  JsonNumber  ||  o  instanceof  String))  {	  }    else    if(!(o    instanceof    JsonObject    ||    o    instanceof    JsonNumber))    {    	non-compiled	[CE]  cannot  find  symbol	140	None	replace
701	[BUG]  [BUGGY]  if(iterator  ==  null)return  JsonToken.NUMBER;  else  {  push(iterator.next());  return  JsonToken.START_OBJECT;  }  [CE]  cannot  find  symbol  START_OBJECT  [FE]                        ArrayIndexOutOfBoundsException      [CONTEXT]      if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }      [BUGGY]  if(iterator  ==  null)return  JsonToken.NUMBER;  else  {  push(iterator.next());  return  JsonToken.START_OBJECT;  }  [BUGGY]      return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	replace	if(iterator  ==  null)return  JsonToken.NUMBER;  else  {  push(iterator.next());  return  JsonToken.START_OBJECT;  }	  if(o    ==    null)return    JsonToken.NUMBER;    else    {    push(iterator.next());    return    JsonToken.START_OBJECT;    }    	non-compiled	[CE]  cannot  find  symbol  START_OBJECT	223	None	replace
702	[BUG]  [BUGGY]  else  if(o  ==  null)return  JsonToken.NUMBER;  else  {  push(iterator.next());  return  JsonToken.START_OBJECT;  }  [CE]  'else'  without  'if'  [FE]                          ArrayIndexOutOfBoundsException      [CONTEXT]      if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }      [BUGGY]  else  if(o  ==  null)return  JsonToken.NUMBER;  else  {  push(iterator.next());  return  JsonToken.START_OBJECT;  }  [BUGGY]      return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	replace	else  if(o  ==  null)return  JsonToken.NUMBER;  else  {  push(iterator.next());  return  JsonToken.START_OBJECT;  }	  if(o    ==    null)return    JsonToken.NUMBER;    else    {    push(iterator.next());    return    JsonToken.START_OBJECT;    }    	non-compiled	[CE]  'else'  without  'if'	223	None	replace
703	[BUG]  [BUGGY]  if(isObject)return  JsonToken.NUMBER;  else  {  push(iterator.next());  return  JsonToken.START_OBJECT;  }  [CE]  cannot  find  symbol  START_OBJECT  [FE]                            ArrayIndexOutOfBoundsException      [CONTEXT]      if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }      [BUGGY]  if(isObject)return  JsonToken.NUMBER;  else  {  push(iterator.next());  return  JsonToken.START_OBJECT;  }  [BUGGY]      return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	replace	if(isObject)return  JsonToken.NUMBER;  else  {  push(iterator.next());  return  JsonToken.START_OBJECT;  }	  if(o    ==    null)return    JsonToken.NUMBER;    else    {    push(iterator.next());    return    JsonToken.START_OBJECT;    }    	non-compiled	[CE]  cannot  find  symbol  START_OBJECT	223	None	replace
704	[BUG]  [BUGGY]  }  else  if(o  instanceof  JsonObject  &&  o  instanceof  JsonPrimitive)  {  ArrayIndexOutOfBoundsException  e  =  new  ArrayIndexOutOfBoundsException(pathNames[0],  pathNames[1]);  [CE]  no  suitable  constructor  found  for  ArrayIndexOutOfBoundsException(String,String)  [FE]            ArrayIndexOutOfBoundsException      [CONTEXT]      if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }      [BUGGY]  }  else  if(o  instanceof  JsonObject  &&  o  instanceof  JsonPrimitive)  {  ArrayIndexOutOfBoundsException  e  =  new  ArrayIndexOutOfBoundsException(pathNames[0],  pathNames[1]);  [BUGGY]      return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	replace	}  else  if(o  instanceof  JsonObject  &&  o  instanceof  JsonPrimitive)  {  ArrayIndexOutOfBoundsException  e  =  new  ArrayIndexOutOfBoundsException(pathNames[0],  pathNames[1]);	  }    else    if(o    instanceof    JsonObject    ||    o    instanceof    JsonPrimitive)    {    ArrayIndexOutOfBoundsException    e    =    new    ArrayIndexOutOfBoundsException(pathNames[0],    pathNames[1]);    	non-compiled	[CE]  no  suitable  constructor  found  for  ArrayIndexOutOfBoundsException(String,String)	168	None	replace
705	[BUG]  [BUGGY]  }  else  if(o  instanceof  JsonArray  ||  o  instanceof  JsonPrimitive)  {  ArrayIndexOutOfBoundsException  e  =  new  ArrayIndexOutOfBoundsException(pathNames[0],  pathNames[1]);  [CE]  no  suitable  constructor  found  for  ArrayIndexOutOfBoundsException(String,String)  [FE]              ArrayIndexOutOfBoundsException      [CONTEXT]      if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }      [BUGGY]  }  else  if(o  instanceof  JsonArray  ||  o  instanceof  JsonPrimitive)  {  ArrayIndexOutOfBoundsException  e  =  new  ArrayIndexOutOfBoundsException(pathNames[0],  pathNames[1]);  [BUGGY]      return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	replace	}  else  if(o  instanceof  JsonArray  ||  o  instanceof  JsonPrimitive)  {  ArrayIndexOutOfBoundsException  e  =  new  ArrayIndexOutOfBoundsException(pathNames[0],  pathNames[1]);	  }    else    if(o    instanceof    JsonObject    ||    o    instanceof    JsonPrimitive)    {    ArrayIndexOutOfBoundsException    e    =    new    ArrayIndexOutOfBoundsException(pathNames[0],    pathNames[1]);    	non-compiled	[CE]  no  suitable  constructor  found  for  ArrayIndexOutOfBoundsException(String,String)	168	None	replace
706	[BUG]  [BUGGY]  else  if(o  instanceof  JsonObject  ||  o  instanceof  JsonPrimitive)  {  ArrayIndexOutOfBoundsException  e  =  new  ArrayIndexOutOfBoundsException(pathNames[0],  pathNames[1]);  }  [CE]  'else'  without  'if'  [FE]                ArrayIndexOutOfBoundsException      [CONTEXT]      if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }      [BUGGY]  else  if(o  instanceof  JsonObject  ||  o  instanceof  JsonPrimitive)  {  ArrayIndexOutOfBoundsException  e  =  new  ArrayIndexOutOfBoundsException(pathNames[0],  pathNames[1]);  }  [BUGGY]      return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	replace	else  if(o  instanceof  JsonObject  ||  o  instanceof  JsonPrimitive)  {  ArrayIndexOutOfBoundsException  e  =  new  ArrayIndexOutOfBoundsException(pathNames[0],  pathNames[1]);  }	  }    else    if(o    instanceof    JsonObject    ||    o    instanceof    JsonPrimitive)    {    ArrayIndexOutOfBoundsException    e    =    new    ArrayIndexOutOfBoundsException(pathNames[0],    pathNames[1]);    	non-compiled	[CE]  'else'  without  'if'	168	None	replace
707	[BUG]  [BUGGY]  instanceof  JsonObject  &&  o  instanceof  JsonPrimitive)  {  ArrayIndexOutOfBoundsException  e  =  new  ArrayIndexOutOfBoundsException(pathNames[0],  pathNames[1]);  [CE]  illegal  start  of  expression  [FE]                  ArrayIndexOutOfBoundsException      [CONTEXT]      if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }      [BUGGY]  instanceof  JsonObject  &&  o  instanceof  JsonPrimitive)  {  ArrayIndexOutOfBoundsException  e  =  new  ArrayIndexOutOfBoundsException(pathNames[0],  pathNames[1]);  [BUGGY]      return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	replace	instanceof  JsonObject  &&  o  instanceof  JsonPrimitive)  {  ArrayIndexOutOfBoundsException  e  =  new  ArrayIndexOutOfBoundsException(pathNames[0],  pathNames[1]);	  }    else    if(o    instanceof    JsonObject    ||    o    instanceof    JsonPrimitive)    {    ArrayIndexOutOfBoundsException    e    =    new    ArrayIndexOutOfBoundsException(pathNames[0],    pathNames[1]);    	non-compiled	[CE]  illegal  start  of  expression	168	None	replace
708	[BUG]  [BUGGY]  }  else  if(o  instanceof  JsonObject  ||  o  instanceof  JsonPrimitive)  {  ArrayIndexOutOfBoundsException  e  =  new  ArrayIndexOutOfBoundsException(pathNames[0],  pathNames[1]  +  1]);  [CE]  ')'  expected  [FE]                    ArrayIndexOutOfBoundsException      [CONTEXT]      if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }      [BUGGY]  }  else  if(o  instanceof  JsonObject  ||  o  instanceof  JsonPrimitive)  {  ArrayIndexOutOfBoundsException  e  =  new  ArrayIndexOutOfBoundsException(pathNames[0],  pathNames[1]  +  1]);  [BUGGY]      return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	replace	}  else  if(o  instanceof  JsonObject  ||  o  instanceof  JsonPrimitive)  {  ArrayIndexOutOfBoundsException  e  =  new  ArrayIndexOutOfBoundsException(pathNames[0],  pathNames[1]  +  1]);	  }    else    if(o    instanceof    JsonObject    ||    o    instanceof    JsonPrimitive)    {    ArrayIndexOutOfBoundsException    e    =    new    ArrayIndexOutOfBoundsException(pathNames[0],    pathNames[1]);    	non-compiled	[CE]  ')'  expected	168	None	replace
709	[BUG]  [BUGGY]  }  else  if(o  instanceof  JsonPrimitive)  {  }  else  if(o  instanceof  JsonPrimitive)  {  return  JsonToken.NUMBER_ARRAY;  }  [CE]  illegal  start  of  type  [FE]                    AssertionError      [CONTEXT]      if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }      [BUGGY]  }  else  if(o  instanceof  JsonPrimitive)  {  }  else  if(o  instanceof  JsonPrimitive)  {  return  JsonToken.NUMBER_ARRAY;  }  [BUGGY]      return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	replace	}  else  if(o  instanceof  JsonPrimitive)  {  }  else  if(o  instanceof  JsonPrimitive)  {  return  JsonToken.NUMBER_ARRAY;  }	  }    else    if(o    instanceof    JsonArray)    {    }    else    if(o    instanceof    JsonArray)    <    return    JsonToken.NUMBER_ARRAY;    	non-compiled	[CE]  illegal  start  of  type	104	None	replace
710	[BUG]  [BUGGY]  }  else  if(o  instanceof  JsonNull)  {  }  else  if(o  instanceof  JsonNull)  {  return  JsonToken.NUMBER_ARRAY;  }  [CE]  illegal  start  of  type  [FE]                      AssertionError      [CONTEXT]      if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }      [BUGGY]  }  else  if(o  instanceof  JsonNull)  {  }  else  if(o  instanceof  JsonNull)  {  return  JsonToken.NUMBER_ARRAY;  }  [BUGGY]      return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	replace	}  else  if(o  instanceof  JsonNull)  {  }  else  if(o  instanceof  JsonNull)  {  return  JsonToken.NUMBER_ARRAY;  }	  }    else    if(o    instanceof    JsonArray)    {    }    else    if(o    instanceof    JsonArray)    <    return    JsonToken.NUMBER_ARRAY;    	non-compiled	[CE]  illegal  start  of  type	104	None	replace
711	[BUG]  [BUGGY]  }  else  if(o  instanceof  String)  {  }  else  if(o  instanceof  JsonString)  {  return  JsonToken.NUMBER_ARRAY;  }  [CE]  illegal  start  of  type  [FE]                        AssertionError      [CONTEXT]      if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }      [BUGGY]  }  else  if(o  instanceof  String)  {  }  else  if(o  instanceof  JsonString)  {  return  JsonToken.NUMBER_ARRAY;  }  [BUGGY]      return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	replace	}  else  if(o  instanceof  String)  {  }  else  if(o  instanceof  JsonString)  {  return  JsonToken.NUMBER_ARRAY;  }	  }    else    if(o    instanceof    JsonArray)    {    }    else    if(o    instanceof    JsonArray)    <    return    JsonToken.NUMBER_ARRAY;    	non-compiled	[CE]  illegal  start  of  type	104	None	replace
712	[BUG]  [BUGGY]  }  else  if(o  instanceof  String)  {  }  else  if(o  instanceof  JsonArray)  {  return  JsonToken.NUMBER_ARRAY;  }  [CE]  illegal  start  of  type  [FE]                          AssertionError      [CONTEXT]      if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }      [BUGGY]  }  else  if(o  instanceof  String)  {  }  else  if(o  instanceof  JsonArray)  {  return  JsonToken.NUMBER_ARRAY;  }  [BUGGY]      return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	replace	}  else  if(o  instanceof  String)  {  }  else  if(o  instanceof  JsonArray)  {  return  JsonToken.NUMBER_ARRAY;  }	  }    else    if(o    instanceof    JsonArray)    {    }    else    if(o    instanceof    JsonArray)    <    return    JsonToken.NUMBER_ARRAY;    	non-compiled	[CE]  illegal  start  of  type	104	None	replace
713	[BUG]  [BUGGY]  }  else  if(o  instanceof  JsonType)  {  }  else  if(o  instanceof  String)  {  return  JsonToken.NUMBER_ARRAY;  }  [CE]  illegal  start  of  type  [FE]                            AssertionError      [CONTEXT]      if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }      [BUGGY]  }  else  if(o  instanceof  JsonType)  {  }  else  if(o  instanceof  String)  {  return  JsonToken.NUMBER_ARRAY;  }  [BUGGY]      return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	replace	}  else  if(o  instanceof  JsonType)  {  }  else  if(o  instanceof  String)  {  return  JsonToken.NUMBER_ARRAY;  }	  }    else    if(o    instanceof    JsonArray)    {    }    else    if(o    instanceof    JsonArray)    <    return    JsonToken.NUMBER_ARRAY;    	non-compiled	[CE]  illegal  start  of  type	104	None	replace
714	[BUG]  [BUGGY]  }  else  if(o  instanceof  JsonType  ||  o  instanceof  JsonArray)  {  [CE]  cannot  find  symbol  [FE]            AssertionError      [CONTEXT]      if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }      [BUGGY]  }  else  if(o  instanceof  JsonType  ||  o  instanceof  JsonArray)  {  [BUGGY]      return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	replace	}  else  if(o  instanceof  JsonType  ||  o  instanceof  JsonArray)  {	  }    else    if(o    instanceof    JsonType)    {    	non-compiled	[CE]  cannot  find  symbol	12	None	replace
715	[BUG]  [BUGGY]  }  else  if(o  instanceof  JsonType  ||  o  instanceof  JsonObject)  {  [CE]  cannot  find  symbol  [FE]              AssertionError      [CONTEXT]      if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }      [BUGGY]  }  else  if(o  instanceof  JsonType  ||  o  instanceof  JsonObject)  {  [BUGGY]      return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	replace	}  else  if(o  instanceof  JsonType  ||  o  instanceof  JsonObject)  {	  }    else    if(o    instanceof    JsonType)    {    	non-compiled	[CE]  cannot  find  symbol	12	None	replace
716	[BUG]  [BUGGY]  }  else  if(o  instanceof  JsonType  ||  o  instanceof  JsonPrimitive)  {  [CE]  cannot  find  symbol  [FE]                AssertionError      [CONTEXT]      if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }      [BUGGY]  }  else  if(o  instanceof  JsonType  ||  o  instanceof  JsonPrimitive)  {  [BUGGY]      return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	replace	}  else  if(o  instanceof  JsonType  ||  o  instanceof  JsonPrimitive)  {	  }    else    if(o    instanceof    JsonType)    {    	non-compiled	[CE]  cannot  find  symbol	12	None	replace
717	[BUG]  [BUGGY]  }  else  if(o  instanceof  JsonType  ||  o  instanceof  JsonLabel)  {  [CE]  cannot  find  symbol  [FE]                  AssertionError      [CONTEXT]      if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }      [BUGGY]  }  else  if(o  instanceof  JsonType  ||  o  instanceof  JsonLabel)  {  [BUGGY]      return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	replace	}  else  if(o  instanceof  JsonType  ||  o  instanceof  JsonLabel)  {	  }    else    if(o    instanceof    JsonType)    {    	non-compiled	[CE]  cannot  find  symbol	12	None	replace
718	[BUG]  [BUGGY]  }  else  if(o  instanceof  JsonType  ||  o  instanceof  JsonString)  {  [CE]  cannot  find  symbol  [FE]                    AssertionError      [CONTEXT]      if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }      [BUGGY]  }  else  if(o  instanceof  JsonType  ||  o  instanceof  JsonString)  {  [BUGGY]      return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	replace	}  else  if(o  instanceof  JsonType  ||  o  instanceof  JsonString)  {	  }    else    if(o    instanceof    JsonType)    {    	non-compiled	[CE]  cannot  find  symbol	12	None	replace
719	[BUG]  [BUGGY]  }  else  if(o  instanceof  JsonType  ||  o  instanceof  JsonEnum)  {  [CE]  cannot  find  symbol  [FE]                      AssertionError      [CONTEXT]      if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }      [BUGGY]  }  else  if(o  instanceof  JsonType  ||  o  instanceof  JsonEnum)  {  [BUGGY]      return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	replace	}  else  if(o  instanceof  JsonType  ||  o  instanceof  JsonEnum)  {	  }    else    if(o    instanceof    JsonType)    {    	non-compiled	[CE]  cannot  find  symbol	12	None	replace
720	[BUG]  [BUGGY]  }  else  if(o  instanceof  JsonType  ||  o  instanceof  JsonUnknown)  {  [CE]  cannot  find  symbol  [FE]                        AssertionError      [CONTEXT]      if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }      [BUGGY]  }  else  if(o  instanceof  JsonType  ||  o  instanceof  JsonUnknown)  {  [BUGGY]      return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	replace	}  else  if(o  instanceof  JsonType  ||  o  instanceof  JsonUnknown)  {	  }    else    if(o    instanceof    JsonType)    {    	non-compiled	[CE]  cannot  find  symbol	12	None	replace
721	[BUG]  [BUGGY]  }  else  if(o  instanceof  JsonString  ||  o  instanceof  JsonString)  {  return  JsonToken.BEGIN_OBJECT;  }  [CE]  illegal  start  of  type  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]      if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }      [BUGGY]  }  else  if(o  instanceof  JsonString  ||  o  instanceof  JsonString)  {  return  JsonToken.BEGIN_OBJECT;  }  [BUGGY]      return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	replace	}  else  if(o  instanceof  JsonString  ||  o  instanceof  JsonString)  {  return  JsonToken.BEGIN_OBJECT;  }	  }    else    if(o    instanceof    JsonObject    ||    o    instanceof    JsonArray)    {    return    JsonToken.BEGIN_OBJECT;    	non-compiled	[CE]  illegal  start  of  type	194	None	replace
722	[BUG]  [BUGGY]  try  {  [Delete]  catch(NoClassDefFoundError  e)  {  if(isObject)  {  return  JsonToken.START_OBJECT;  }  [CE]  illegal  start  of  expression  [FE]                                ArrayIndexOutOfBoundsException      [CONTEXT]      if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }      [BUGGY]  try  {  [Delete]  catch(NoClassDefFoundError  e)  {  if(isObject)  {  return  JsonToken.START_OBJECT;  }  [BUGGY]      return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	replace	try  {  [Delete]  catch(NoClassDefFoundError  e)  {  if(isObject)  {  return  JsonToken.START_OBJECT;  }	  if(o    ==    null)    {    if(isObject)    {    return    JsonToken.START_OBJECT;    }    	non-compiled	[CE]  illegal  start  of  expression	189	None	replace
723	[BUG]  [BUGGY]  parent  ==  null  ||  isObject)  {  return  JsonToken.START_OBJECT;  }  [CE]  not  a  statement  [FE]                                  ArrayIndexOutOfBoundsException      [CONTEXT]      if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }      [BUGGY]  parent  ==  null  ||  isObject)  {  return  JsonToken.START_OBJECT;  }  [BUGGY]      return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	replace	parent  ==  null  ||  isObject)  {  return  JsonToken.START_OBJECT;  }	  if(o    ==    null)    {    if(isObject)    {    return    JsonToken.START_OBJECT;    }    	non-compiled	[CE]  not  a  statement	189	None	replace
724	[BUG]  [BUGGY]  parent  ==  null  ||  isObject)  {  return  JsonToken.START_OBJECT;  [CE]  not  a  statement  [FE]                                    ArrayIndexOutOfBoundsException      [CONTEXT]      if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }      [BUGGY]  parent  ==  null  ||  isObject)  {  return  JsonToken.START_OBJECT;  [BUGGY]      return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	replace	parent  ==  null  ||  isObject)  {  return  JsonToken.START_OBJECT;	  if(o    ==    null)    {    if(isObject)    {    return    JsonToken.START_OBJECT;    }    	non-compiled	[CE]  not  a  statement	189	None	replace
725	[BUG]  [BUGGY]  parent  ==  null  &&  isObject)  {  return  JsonToken.START_OBJECT;  }  [CE]  not  a  statement  [FE]                                      ArrayIndexOutOfBoundsException      [CONTEXT]      if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }      [BUGGY]  parent  ==  null  &&  isObject)  {  return  JsonToken.START_OBJECT;  }  [BUGGY]      return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	replace	parent  ==  null  &&  isObject)  {  return  JsonToken.START_OBJECT;  }	  if(o    ==    null)    {    if(isObject)    {    return    JsonToken.START_OBJECT;    }    	non-compiled	[CE]  not  a  statement	189	None	replace
726	[BUG]  [BUGGY]  try  {  [Delete]  catch(NoClassDefFoundError  ncdfe)  {  if(isObject)  {  return  JsonToken.START_OBJECT;  }  [CE]  illegal  start  of  expression  [FE]                                        ArrayIndexOutOfBoundsException      [CONTEXT]      if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }      [BUGGY]  try  {  [Delete]  catch(NoClassDefFoundError  ncdfe)  {  if(isObject)  {  return  JsonToken.START_OBJECT;  }  [BUGGY]      return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	replace	try  {  [Delete]  catch(NoClassDefFoundError  ncdfe)  {  if(isObject)  {  return  JsonToken.START_OBJECT;  }	  if(o    ==    null)    {    if(isObject)    {    return    JsonToken.START_OBJECT;    }    	non-compiled	[CE]  illegal  start  of  expression	189	None	replace
727	[BUG]  [BUGGY]  parent!=  null  ||  isObject)  {  return  JsonToken.START_OBJECT;  }  [CE]  not  a  statement  [FE]                                          ArrayIndexOutOfBoundsException      [CONTEXT]      if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }      [BUGGY]  parent!=  null  ||  isObject)  {  return  JsonToken.START_OBJECT;  }  [BUGGY]      return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	replace	parent!=  null  ||  isObject)  {  return  JsonToken.START_OBJECT;  }	  if(o    ==    null)    {    if(isObject)    {    return    JsonToken.START_OBJECT;    }    	non-compiled	[CE]  not  a  statement	189	None	replace
728	[BUG]  [BUGGY]  parent!=  null  ||  isObject)  {  return  JsonToken.START_OBJECT;  [CE]  not  a  statement  [FE]                                            ArrayIndexOutOfBoundsException      [CONTEXT]      if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }      [BUGGY]  parent!=  null  ||  isObject)  {  return  JsonToken.START_OBJECT;  [BUGGY]      return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	replace	parent!=  null  ||  isObject)  {  return  JsonToken.START_OBJECT;	  if(o    ==    null)    {    if(isObject)    {    return    JsonToken.START_OBJECT;    }    	non-compiled	[CE]  not  a  statement	189	None	replace
729	[BUG]  [BUGGY]  }  else  if(o  instanceof  JsonObject  &&  isNumber)  {  [CE]  cannot  find  symbol  isNumber  [FE]              ArrayIndexOutOfBoundsException      [CONTEXT]      if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }      [BUGGY]  }  else  if(o  instanceof  JsonObject  &&  isNumber)  {  [BUGGY]      return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	replace	}  else  if(o  instanceof  JsonObject  &&  isNumber)  {	  }    else    if(o    instanceof    JsonObject    &&    o    instanceof    JsonNumber)    {    	non-compiled	[CE]  cannot  find  symbol  isNumber	122	None	replace
730	[BUG]  [BUGGY]  }  else  if(o  instanceof  JsonObject  &&  Primitive.isNumber())  {  [CE]  cannot  find  symbol  Primitive  [FE]                ArrayIndexOutOfBoundsException      [CONTEXT]      if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }      [BUGGY]  }  else  if(o  instanceof  JsonObject  &&  Primitive.isNumber())  {  [BUGGY]      return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	replace	}  else  if(o  instanceof  JsonObject  &&  Primitive.isNumber())  {	  }    else    if(o    instanceof    JsonObject    &&    o    instanceof    JsonNumber)    {    	non-compiled	[CE]  cannot  find  symbol  Primitive	122	None	replace
731	[BUG]  [BUGGY]  }  else  if(o  instanceof  JsonObject  &&  PrimitiveUtil.isNumber(primitive))  {  [CE]  cannot  find  symbol  primitive  [FE]                  ArrayIndexOutOfBoundsException      [CONTEXT]      if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }      [BUGGY]  }  else  if(o  instanceof  JsonObject  &&  PrimitiveUtil.isNumber(primitive))  {  [BUGGY]      return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	replace	}  else  if(o  instanceof  JsonObject  &&  PrimitiveUtil.isNumber(primitive))  {	  }    else    if(o    instanceof    JsonObject    &&    o    instanceof    JsonNumber)    {    	non-compiled	[CE]  cannot  find  symbol  primitive	122	None	replace
732	[BUG]  [BUGGY]  }  else  if(isObject  &&  o  instanceof  JsonNumber)  {  [CE]  cannot  find  symbol  isObject  [FE]                    ArrayIndexOutOfBoundsException      [CONTEXT]      if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }      [BUGGY]  }  else  if(isObject  &&  o  instanceof  JsonNumber)  {  [BUGGY]      return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	replace	}  else  if(isObject  &&  o  instanceof  JsonNumber)  {	  }    else    if(o    instanceof    JsonObject    &&    o    instanceof    JsonNumber)    {    	non-compiled	[CE]  cannot  find  symbol  isObject	122	None	replace
733	[BUG]  [BUGGY]  Iterator  <  Object>  iterator  =  this.stacks.iterator();  [CE]  variable  iterator  is  already  defined  in  method  peek()  [FE]                            ArrayIndexOutOfBoundsException      [CONTEXT]      if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }      [BUGGY]  Iterator  <  Object>  iterator  =  this.stacks.iterator();  [BUGGY]      return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	replace	Iterator  <  Object>  iterator  =  this.stacks.iterator();	  Iterator    <    Object>    iterator    =    stacks.iterator();    	non-compiled	[CE]  variable  iterator  is  already  defined  in  method  peek()	187	None	replace
734	[BUG]  [BUGGY]  Iterator  <  Object>  iterator  =  arrays.iterator();  [CE]  variable  iterator  is  already  defined  in  method  peek()  [FE]                              ArrayIndexOutOfBoundsException      [CONTEXT]      if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }      [BUGGY]  Iterator  <  Object>  iterator  =  arrays.iterator();  [BUGGY]      return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	replace	Iterator  <  Object>  iterator  =  arrays.iterator();	  Iterator    <    Object>    iterator    =    stacks.iterator();    	non-compiled	[CE]  variable  iterator  is  already  defined  in  method  peek()	187	None	replace
735	[BUG]  [BUGGY]  Iterator  <  Object>  iterator  =  UNREADABLE_READER.iterator();  [CE]  variable  iterator  is  already  defined  in  method  peek()  [FE]                                ArrayIndexOutOfBoundsException      [CONTEXT]      if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }      [BUGGY]  Iterator  <  Object>  iterator  =  UNREADABLE_READER.iterator();  [BUGGY]      return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	replace	Iterator  <  Object>  iterator  =  UNREADABLE_READER.iterator();	  Iterator    <    Object>    iterator    =    stacks.iterator();    	non-compiled	[CE]  variable  iterator  is  already  defined  in  method  peek()	187	None	replace
736	[BUG]  [BUGGY]  Iterator  <  Object>  iterator  =  heaps.iterator();  [CE]  variable  iterator  is  already  defined  in  method  peek()  [FE]                                  ArrayIndexOutOfBoundsException      [CONTEXT]      if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }      [BUGGY]  Iterator  <  Object>  iterator  =  heaps.iterator();  [BUGGY]      return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	replace	Iterator  <  Object>  iterator  =  heaps.iterator();	  Iterator    <    Object>    iterator    =    stacks.iterator();    	non-compiled	[CE]  variable  iterator  is  already  defined  in  method  peek()	187	None	replace
737	[BUG]  [BUGGY]  Iterator  <  Object>  iterator  =  list.iterator();  [CE]  variable  iterator  is  already  defined  in  method  peek()  [FE]                                    ArrayIndexOutOfBoundsException      [CONTEXT]      if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }      [BUGGY]  Iterator  <  Object>  iterator  =  list.iterator();  [BUGGY]      return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	replace	Iterator  <  Object>  iterator  =  list.iterator();	  Iterator    <    Object>    iterator    =    stacks.iterator();    	non-compiled	[CE]  variable  iterator  is  already  defined  in  method  peek()	187	None	replace
738	[BUG]  [BUGGY]  Iterator  <  Object>  iterator  =  items.iterator();  [CE]  variable  iterator  is  already  defined  in  method  peek()  [FE]                                      ArrayIndexOutOfBoundsException      [CONTEXT]      if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }      [BUGGY]  Iterator  <  Object>  iterator  =  items.iterator();  [BUGGY]      return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	replace	Iterator  <  Object>  iterator  =  items.iterator();	  Iterator    <    Object>    iterator    =    stacks.iterator();    	non-compiled	[CE]  variable  iterator  is  already  defined  in  method  peek()	187	None	replace
739	[BUG]  [BUGGY]  }  else  if(o  instanceof  JsonObject  ||!(o  instanceof  JsonNull  &&!(o  instanceof  JsonNull  &&!(o  instanceof  JsonNull  &&!(o  instanceof  JsonNull  &&!(o  instanceof  JsonNull  &&  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }      [BUGGY]  }  else  if(o  instanceof  JsonObject  ||!(o  instanceof  JsonNull  &&!(o  instanceof  JsonNull  &&!(o  instanceof  JsonNull  &&!(o  instanceof  JsonNull  &&!(o  instanceof  JsonNull  &&  [BUGGY]      return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	replace	}  else  if(o  instanceof  JsonObject  ||!(o  instanceof  JsonNull  &&!(o  instanceof  JsonNull  &&!(o  instanceof  JsonNull  &&!(o  instanceof  JsonNull  &&!(o  instanceof  JsonNull  &&	  }    else    if(o    instanceof    JsonNull    ||!(o    instanceof    JsonNull    &&!(o    instanceof    JsonNull    &&!(o    instanceof    JsonNull    &&!(o    instanceof    JsonNull))))    {    	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
740	[BUG]  [BUGGY]  }  else  if(o  instanceof  JsonObject  ||!(o  instanceof  JsonNull  &&!(o  instanceof  JsonNull  &&!(o  instanceof  JsonNull  &&!(o  instanceof  JsonNull  &&!(o  instanceof  JsonNull))))  {  [CE]  [FE]                AssertionError      [CONTEXT]      if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }      [BUGGY]  }  else  if(o  instanceof  JsonObject  ||!(o  instanceof  JsonNull  &&!(o  instanceof  JsonNull  &&!(o  instanceof  JsonNull  &&!(o  instanceof  JsonNull  &&!(o  instanceof  JsonNull))))  {  [BUGGY]      return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	replace	}  else  if(o  instanceof  JsonObject  ||!(o  instanceof  JsonNull  &&!(o  instanceof  JsonNull  &&!(o  instanceof  JsonNull  &&!(o  instanceof  JsonNull  &&!(o  instanceof  JsonNull))))  {	  }    else    if(o    instanceof    JsonNull    ||!(o    instanceof    JsonNull    &&!(o    instanceof    JsonNull    &&!(o    instanceof    JsonNull    &&!(o    instanceof    JsonNull))))    {    	non-compiled	[CE]  	6	None	replace
741	[BUG]  [BUGGY]  }  else  if(o  instanceof  JsonArray)  {  }  else  if(!(o  instanceof  JsonObject))  {  return  JsonToken.BEGIN_OBJECT;  }  [CE]  illegal  start  of  type  [FE]          AssertionError      [CONTEXT]      if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }      [BUGGY]  }  else  if(o  instanceof  JsonArray)  {  }  else  if(!(o  instanceof  JsonObject))  {  return  JsonToken.BEGIN_OBJECT;  }  [BUGGY]      return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	replace	}  else  if(o  instanceof  JsonArray)  {  }  else  if(!(o  instanceof  JsonObject))  {  return  JsonToken.BEGIN_OBJECT;  }	  }    else    if(!(o    instanceof    JsonObject))    {    }    else    if(!(o    instanceof    JsonObject))    <    return    JsonToken.BEGIN_OBJECT;    	non-compiled	[CE]  illegal  start  of  type	92	None	replace
742	[BUG]  [BUGGY]  }  else  if(o  instanceof  JsonString)  {  }  else  if(!(o  instanceof  JsonString))  {  return  JsonToken.BEGIN_OBJECT;  }  [CE]  illegal  start  of  type  [FE]            AssertionError      [CONTEXT]      if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }      [BUGGY]  }  else  if(o  instanceof  JsonString)  {  }  else  if(!(o  instanceof  JsonString))  {  return  JsonToken.BEGIN_OBJECT;  }  [BUGGY]      return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	replace	}  else  if(o  instanceof  JsonString)  {  }  else  if(!(o  instanceof  JsonString))  {  return  JsonToken.BEGIN_OBJECT;  }	  }    else    if(!(o    instanceof    JsonObject))    {    }    else    if(!(o    instanceof    JsonObject))    <    return    JsonToken.BEGIN_OBJECT;    	non-compiled	[CE]  illegal  start  of  type	92	None	replace
743	[BUG]  [BUGGY]  }  else  if(!(o  instanceof  JsonArray))  {  }  else  if(!(o  instanceof  JsonObject))  {  return  JsonToken.BEGIN_OBJECT;  }  [CE]  illegal  start  of  type  [FE]              AssertionError      [CONTEXT]      if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }      [BUGGY]  }  else  if(!(o  instanceof  JsonArray))  {  }  else  if(!(o  instanceof  JsonObject))  {  return  JsonToken.BEGIN_OBJECT;  }  [BUGGY]      return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	replace	}  else  if(!(o  instanceof  JsonArray))  {  }  else  if(!(o  instanceof  JsonObject))  {  return  JsonToken.BEGIN_OBJECT;  }	  }    else    if(!(o    instanceof    JsonObject))    {    }    else    if(!(o    instanceof    JsonObject))    <    return    JsonToken.BEGIN_OBJECT;    	non-compiled	[CE]  illegal  start  of  type	92	None	replace
744	[BUG]  [BUGGY]  }  else  if(o  instanceof  JsonNull)  {  }  else  if(!(o  instanceof  JsonNull))  <  return  JsonToken.BEGIN_OBJECT;  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]      if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }      [BUGGY]  }  else  if(o  instanceof  JsonNull)  {  }  else  if(!(o  instanceof  JsonNull))  <  return  JsonToken.BEGIN_OBJECT;  [BUGGY]      return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	replace	}  else  if(o  instanceof  JsonNull)  {  }  else  if(!(o  instanceof  JsonNull))  <  return  JsonToken.BEGIN_OBJECT;	  }    else    if(!(o    instanceof    JsonObject))    {    }    else    if(!(o    instanceof    JsonObject))    <    return    JsonToken.BEGIN_OBJECT;    	non-compiled	[CE]  illegal  start  of  type	92	None	replace
745	[BUG]  [BUGGY]  }  else  if(o  instanceof  JsonArray)  {  }  else  if(!(o  instanceof  JsonObject))  <  return  JsonToken.BEGIN_OBJECT;  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]      if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }      [BUGGY]  }  else  if(o  instanceof  JsonArray)  {  }  else  if(!(o  instanceof  JsonObject))  <  return  JsonToken.BEGIN_OBJECT;  [BUGGY]      return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	replace	}  else  if(o  instanceof  JsonArray)  {  }  else  if(!(o  instanceof  JsonObject))  <  return  JsonToken.BEGIN_OBJECT;	  }    else    if(!(o    instanceof    JsonObject))    {    }    else    if(!(o    instanceof    JsonObject))    <    return    JsonToken.BEGIN_OBJECT;    	non-compiled	[CE]  illegal  start  of  type	92	None	replace
746	[BUG]  [BUGGY]  }  else  if(o  instanceof  JsonNull)  {  }  else  if(!(o  instanceof  JsonNull))  {  return  JsonToken.BEGIN_OBJECT;  }  [CE]  illegal  start  of  type  [FE]                    AssertionError      [CONTEXT]      if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }      [BUGGY]  }  else  if(o  instanceof  JsonNull)  {  }  else  if(!(o  instanceof  JsonNull))  {  return  JsonToken.BEGIN_OBJECT;  }  [BUGGY]      return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	replace	}  else  if(o  instanceof  JsonNull)  {  }  else  if(!(o  instanceof  JsonNull))  {  return  JsonToken.BEGIN_OBJECT;  }	  }    else    if(!(o    instanceof    JsonObject))    {    }    else    if(!(o    instanceof    JsonObject))    <    return    JsonToken.BEGIN_OBJECT;    	non-compiled	[CE]  illegal  start  of  type	92	None	replace
747	[BUG]  [BUGGY]  }  else  if(!(o  instanceof  JsonLocal))  {  [CE]  cannot  find  symbol  [FE]                  ArrayIndexOutOfBoundsException      [CONTEXT]      if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }      [BUGGY]  }  else  if(!(o  instanceof  JsonLocal))  {  [BUGGY]      return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	replace	}  else  if(!(o  instanceof  JsonLocal))  {	  }    else    if(!(o    instanceof    JsonArray))    {    else    if(!(o    instanceof    JsonArray))    {    	non-compiled	[CE]  cannot  find  symbol	88	None	replace
748	[BUG]  [BUGGY]  }  else  if(o  instanceof  Element)  {  [CE]  cannot  find  symbol  [FE]                    ArrayIndexOutOfBoundsException      [CONTEXT]      if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }      [BUGGY]  }  else  if(o  instanceof  Element)  {  [BUGGY]      return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	replace	}  else  if(o  instanceof  Element)  {	  }    else    if(!(o    instanceof    JsonArray))    {    else    if(!(o    instanceof    JsonArray))    {    	non-compiled	[CE]  cannot  find  symbol	88	None	replace
749	[BUG]  [BUGGY]  }  else  if(o  instanceof  JsonObject)  {  }  else  if(o  instanceof  String)  {  return  JsonToken.BEGIN_OBJECT;  }  [CE]  illegal  start  of  type  [FE]            ArrayIndexOutOfBoundsException      [CONTEXT]      if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }      [BUGGY]  }  else  if(o  instanceof  JsonObject)  {  }  else  if(o  instanceof  String)  {  return  JsonToken.BEGIN_OBJECT;  }  [BUGGY]      return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	replace	}  else  if(o  instanceof  JsonObject)  {  }  else  if(o  instanceof  String)  {  return  JsonToken.BEGIN_OBJECT;  }	  }    else    if(o    instanceof    JsonObject    ||    o    instanceof    String)    {    }    else    if(o    instanceof    JsonObject    ||    o    instanceof    String)    <    return    JsonToken.BEGIN_OBJECT;    	non-compiled	[CE]  illegal  start  of  type	18	None	replace
750	[BUG]  [BUGGY]  }  else  if(o  instanceof  JsonObject  &&  o  instanceof  String)  <  return  JsonToken.BEGIN_OBJECT;  [CE]  illegal  start  of  type  [FE]              ArrayIndexOutOfBoundsException      [CONTEXT]      if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }      [BUGGY]  }  else  if(o  instanceof  JsonObject  &&  o  instanceof  String)  <  return  JsonToken.BEGIN_OBJECT;  [BUGGY]      return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	replace	}  else  if(o  instanceof  JsonObject  &&  o  instanceof  String)  <  return  JsonToken.BEGIN_OBJECT;	  }    else    if(o    instanceof    JsonObject    ||    o    instanceof    String)    {    }    else    if(o    instanceof    JsonObject    ||    o    instanceof    String)    <    return    JsonToken.BEGIN_OBJECT;    	non-compiled	[CE]  illegal  start  of  type	18	None	replace
751	[BUG]  [BUGGY]  }  else  if(o  instanceof  String)  {  }  else  if(o  instanceof  JsonObject  ||  o  instanceof  String)  {  return  JsonToken.BEGIN_OBJECT;  }  [CE]  illegal  start  of  type  [FE]                ArrayIndexOutOfBoundsException      [CONTEXT]      if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }      [BUGGY]  }  else  if(o  instanceof  String)  {  }  else  if(o  instanceof  JsonObject  ||  o  instanceof  String)  {  return  JsonToken.BEGIN_OBJECT;  }  [BUGGY]      return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	replace	}  else  if(o  instanceof  String)  {  }  else  if(o  instanceof  JsonObject  ||  o  instanceof  String)  {  return  JsonToken.BEGIN_OBJECT;  }	  }    else    if(o    instanceof    JsonObject    ||    o    instanceof    String)    {    }    else    if(o    instanceof    JsonObject    ||    o    instanceof    String)    <    return    JsonToken.BEGIN_OBJECT;    	non-compiled	[CE]  illegal  start  of  type	18	None	replace
752	[BUG]  [BUGGY]  }  else  if(o  instanceof  String)  {  }  else  if(o  instanceof  JsonObject  ||  o  instanceof  String)  <  return  JsonToken.BEGIN_OBJECT;  [CE]  illegal  start  of  type  [FE]                  ArrayIndexOutOfBoundsException      [CONTEXT]      if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }      [BUGGY]  }  else  if(o  instanceof  String)  {  }  else  if(o  instanceof  JsonObject  ||  o  instanceof  String)  <  return  JsonToken.BEGIN_OBJECT;  [BUGGY]      return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	replace	}  else  if(o  instanceof  String)  {  }  else  if(o  instanceof  JsonObject  ||  o  instanceof  String)  <  return  JsonToken.BEGIN_OBJECT;	  }    else    if(o    instanceof    JsonObject    ||    o    instanceof    String)    {    }    else    if(o    instanceof    JsonObject    ||    o    instanceof    String)    <    return    JsonToken.BEGIN_OBJECT;    	non-compiled	[CE]  illegal  start  of  type	18	None	replace
753	[BUG]  [BUGGY]  }  else  if(o  instanceof  JsonNumber  &&  o  instanceof  JsonLong)  {  [CE]  cannot  find  symbol  [FE]                          ArrayIndexOutOfBoundsException      [CONTEXT]      if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }      [BUGGY]  }  else  if(o  instanceof  JsonNumber  &&  o  instanceof  JsonLong)  {  [BUGGY]      return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	replace	}  else  if(o  instanceof  JsonNumber  &&  o  instanceof  JsonLong)  {	  }    else    if(o    instanceof    JsonNumber    ||    o    instanceof    JsonLong)    {    	non-compiled	[CE]  cannot  find  symbol	115	None	replace
754	[BUG]  [BUGGY]  }  else  if(o  instanceof  JsonNumber  ||  o  instanceof  JsonLong  ||  isObject)  {  [CE]  cannot  find  symbol  [FE]                            ArrayIndexOutOfBoundsException      [CONTEXT]      if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }      [BUGGY]  }  else  if(o  instanceof  JsonNumber  ||  o  instanceof  JsonLong  ||  isObject)  {  [BUGGY]      return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	replace	}  else  if(o  instanceof  JsonNumber  ||  o  instanceof  JsonLong  ||  isObject)  {	  }    else    if(o    instanceof    JsonNumber    ||    o    instanceof    JsonLong)    {    	non-compiled	[CE]  cannot  find  symbol	115	None	replace
755	[BUG]  [BUGGY]  }  else  if(o  instanceof  JsonNumber  ||  o  instanceof  JsonLong  ||  o  instanceof  JsonPrimitive)  {  [CE]  cannot  find  symbol  [FE]                              ArrayIndexOutOfBoundsException      [CONTEXT]      if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }      [BUGGY]  }  else  if(o  instanceof  JsonNumber  ||  o  instanceof  JsonLong  ||  o  instanceof  JsonPrimitive)  {  [BUGGY]      return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	replace	}  else  if(o  instanceof  JsonNumber  ||  o  instanceof  JsonLong  ||  o  instanceof  JsonPrimitive)  {	  }    else    if(o    instanceof    JsonNumber    ||    o    instanceof    JsonLong)    {    	non-compiled	[CE]  cannot  find  symbol	115	None	replace
756	[BUG]  [BUGGY]  }  else  if(o  instanceof  JsonNumber  ||  o  instanceof  JsonLong  ||!(o  instanceof  JsonLong))  {  [CE]  cannot  find  symbol  [FE]                                ArrayIndexOutOfBoundsException      [CONTEXT]      if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }      [BUGGY]  }  else  if(o  instanceof  JsonNumber  ||  o  instanceof  JsonLong  ||!(o  instanceof  JsonLong))  {  [BUGGY]      return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	replace	}  else  if(o  instanceof  JsonNumber  ||  o  instanceof  JsonLong  ||!(o  instanceof  JsonLong))  {	  }    else    if(o    instanceof    JsonNumber    ||    o    instanceof    JsonLong)    {    	non-compiled	[CE]  cannot  find  symbol	115	None	replace
757	[BUG]  [BUGGY]  }  else  if(o  instanceof  JsonNumber  ||  o  instanceof  JsonLong  ||!(o  instanceof  JsonArray))  {  [CE]  cannot  find  symbol  [FE]                                  ArrayIndexOutOfBoundsException      [CONTEXT]      if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }      [BUGGY]  }  else  if(o  instanceof  JsonNumber  ||  o  instanceof  JsonLong  ||!(o  instanceof  JsonArray))  {  [BUGGY]      return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	replace	}  else  if(o  instanceof  JsonNumber  ||  o  instanceof  JsonLong  ||!(o  instanceof  JsonArray))  {	  }    else    if(o    instanceof    JsonNumber    ||    o    instanceof    JsonLong)    {    	non-compiled	[CE]  cannot  find  symbol	115	None	replace
758	[BUG]  [BUGGY]  }  else  if(o  instanceof  JsonNumber  ||  o  instanceof  JsonLong  ||  o  instanceof  JsonObject)  {  [CE]  cannot  find  symbol  [FE]                                    ArrayIndexOutOfBoundsException      [CONTEXT]      if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }      [BUGGY]  }  else  if(o  instanceof  JsonNumber  ||  o  instanceof  JsonLong  ||  o  instanceof  JsonObject)  {  [BUGGY]      return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	replace	}  else  if(o  instanceof  JsonNumber  ||  o  instanceof  JsonLong  ||  o  instanceof  JsonObject)  {	  }    else    if(o    instanceof    JsonNumber    ||    o    instanceof    JsonLong)    {    	non-compiled	[CE]  cannot  find  symbol	115	None	replace
759	[BUG]  [BUGGY]  }  else  if(o  instanceof  JsonLong  ||  o  instanceof  JsonLong)  {  [CE]  cannot  find  symbol  [FE]                    ArrayIndexOutOfBoundsException      [CONTEXT]      if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }      [BUGGY]  }  else  if(o  instanceof  JsonLong  ||  o  instanceof  JsonLong)  {  [BUGGY]      return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	replace	}  else  if(o  instanceof  JsonLong  ||  o  instanceof  JsonLong)  {	  }    else    if(o    instanceof    JsonLong)    {    	non-compiled	[CE]  cannot  find  symbol	128	None	replace
760	[BUG]  [BUGGY]  }  else  if(o  instanceof  JsonLong  &&  isObject)  {  [CE]  cannot  find  symbol  [FE]                      ArrayIndexOutOfBoundsException      [CONTEXT]      if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }      [BUGGY]  }  else  if(o  instanceof  JsonLong  &&  isObject)  {  [BUGGY]      return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	replace	}  else  if(o  instanceof  JsonLong  &&  isObject)  {	  }    else    if(o    instanceof    JsonLong)    {    	non-compiled	[CE]  cannot  find  symbol	128	None	replace
761	[BUG]  [BUGGY]  }  else  if(o  instanceof  JsonLong  ||  o  instanceof  JsonPrimitive)  {  [CE]  cannot  find  symbol  [FE]                        ArrayIndexOutOfBoundsException      [CONTEXT]      if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }      [BUGGY]  }  else  if(o  instanceof  JsonLong  ||  o  instanceof  JsonPrimitive)  {  [BUGGY]      return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	replace	}  else  if(o  instanceof  JsonLong  ||  o  instanceof  JsonPrimitive)  {	  }    else    if(o    instanceof    JsonLong)    {    	non-compiled	[CE]  cannot  find  symbol	128	None	replace
762	[BUG]  [BUGGY]  }  else  if(o  instanceof  JsonLong  ||  o  instanceof  JsonObject)  {  [CE]  cannot  find  symbol  [FE]                          ArrayIndexOutOfBoundsException      [CONTEXT]      if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }      [BUGGY]  }  else  if(o  instanceof  JsonLong  ||  o  instanceof  JsonObject)  {  [BUGGY]      return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	replace	}  else  if(o  instanceof  JsonLong  ||  o  instanceof  JsonObject)  {	  }    else    if(o    instanceof    JsonLong)    {    	non-compiled	[CE]  cannot  find  symbol	128	None	replace
763	[BUG]  [BUGGY]  }  else  if(o  instanceof  JsonLong  ||  o  instanceof  JsonNumber)  {  [CE]  cannot  find  symbol  [FE]                            ArrayIndexOutOfBoundsException      [CONTEXT]      if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }      [BUGGY]  }  else  if(o  instanceof  JsonLong  ||  o  instanceof  JsonNumber)  {  [BUGGY]      return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	replace	}  else  if(o  instanceof  JsonLong  ||  o  instanceof  JsonNumber)  {	  }    else    if(o    instanceof    JsonLong)    {    	non-compiled	[CE]  cannot  find  symbol	128	None	replace
764	[BUG]  [BUGGY]  }  else  if(o  instanceof  JsonLong  ||  o  instanceof  JsonString)  {  [CE]  cannot  find  symbol  [FE]                              ArrayIndexOutOfBoundsException      [CONTEXT]      if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }      [BUGGY]  }  else  if(o  instanceof  JsonLong  ||  o  instanceof  JsonString)  {  [BUGGY]      return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	replace	}  else  if(o  instanceof  JsonLong  ||  o  instanceof  JsonString)  {	  }    else    if(o    instanceof    JsonLong)    {    	non-compiled	[CE]  cannot  find  symbol	128	None	replace
765	[BUG]  [BUGGY]  [FE]  ArrayIndexOutOfBoundsException  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]      if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }      [BUGGY]  }  else  if(!(o  instanceof  String)||!(o  instanceof  JsonArray))  {  [BUGGY]      return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	add	}  else  if(!(o  instanceof  String)||!(o  instanceof  JsonArray))  {	  }    else    if(!(o    instanceof    JsonArray)||!(o    instanceof    JsonArray))    {    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	249	2	replace
766	[BUG]  [BUGGY]  }  else  if(!(o  instanceof  String)||!(o  instanceof  JsonArray))  {  [FE]  ArrayIndexOutOfBoundsException  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]      if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }      [BUGGY]  }  else  if(!(o  instanceof  String)||!(o  instanceof  JsonArray))  {  [BUGGY]      return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	replace	}  else  if(!(o  instanceof  String)||!(o  instanceof  JsonArray))  {	  }    else    if(!(o    instanceof    JsonArray)||!(o    instanceof    JsonArray))    {    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	249	2	replace
767	[BUG]  [BUGGY]  }  else  if(o  instanceof  JsonNull  ||  o  instanceof  JsonNull)  {  return  JsonToken.BEGIN_OBJECT;  }  [CE]  illegal  start  of  type  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]      if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }      [BUGGY]  }  else  if(o  instanceof  JsonNull  ||  o  instanceof  JsonNull)  {  return  JsonToken.BEGIN_OBJECT;  }  [BUGGY]      return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	replace	}  else  if(o  instanceof  JsonNull  ||  o  instanceof  JsonNull)  {  return  JsonToken.BEGIN_OBJECT;  }	  }    else    if(o    instanceof    JsonNull)    {    return    JsonToken.BEGIN_OBJECT;    	non-compiled	[CE]  illegal  start  of  type	155	None	replace
768	[BUG]  [BUGGY]  else  if(o  instanceof  JsonNull)  {  return  JsonToken.BEGIN_OBJECT;  }  [CE]  'else'  without  'if'  [FE]      ArrayIndexOutOfBoundsException    [CONTEXT]      if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }      [BUGGY]  else  if(o  instanceof  JsonNull)  {  return  JsonToken.BEGIN_OBJECT;  }  [BUGGY]      return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	replace	else  if(o  instanceof  JsonNull)  {  return  JsonToken.BEGIN_OBJECT;  }	  }    else    if(o    instanceof    JsonNull)    {    return    JsonToken.BEGIN_OBJECT;    	non-compiled	[CE]  'else'  without  'if'	155	None	replace
769	[BUG]  [BUGGY]  }  else  if(o  instanceof  JsonNumber)  {  return  JsonToken.BEGIN_OBJECT;  }  [CE]  illegal  start  of  type  [FE]        ArrayIndexOutOfBoundsException    [CONTEXT]      if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }      [BUGGY]  }  else  if(o  instanceof  JsonNumber)  {  return  JsonToken.BEGIN_OBJECT;  }  [BUGGY]      return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	replace	}  else  if(o  instanceof  JsonNumber)  {  return  JsonToken.BEGIN_OBJECT;  }	  }    else    if(o    instanceof    JsonNull)    {    return    JsonToken.BEGIN_OBJECT;    	non-compiled	[CE]  illegal  start  of  type	155	None	replace
770	[BUG]  [BUGGY]  }  else  if(o  instanceof  JsonUndefined)  {  [CE]  cannot  find  symbol  [FE]        AssertionError      [CONTEXT]      if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }      [BUGGY]  }  else  if(o  instanceof  JsonUndefined)  {  [BUGGY]      return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	replace	}  else  if(o  instanceof  JsonUndefined)  {	  }    else    if(o    instanceof    JsonNull)    {    }    else    if(o    instanceof    JsonNull)    {    return    JsonToken.BEGIN_NUMBER;    }    else    if(o    instanceof    JsonNull)    {    	non-compiled	[CE]  cannot  find  symbol	220	None	replace
771	[BUG]  [BUGGY]  }  else  if(o  instanceof  JsonNumber  &&  isObject  ||  isObject)  {  [CE]  cannot  find  symbol  [FE]                    ArrayIndexOutOfBoundsException      [CONTEXT]      if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }      [BUGGY]  }  else  if(o  instanceof  JsonNumber  &&  isObject  ||  isObject)  {  [BUGGY]      return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	replace	}  else  if(o  instanceof  JsonNumber  &&  isObject  ||  isObject)  {	  }    else    if(o    instanceof    JsonNumber    &&    isObject)    {    	non-compiled	[CE]  cannot  find  symbol	112	None	replace
772	[BUG]  [BUGGY]  }  else  if(o  instanceof  JsonNumber  &&  isObject  ||  isPrimitive)  {  [CE]  cannot  find  symbol  [FE]                      ArrayIndexOutOfBoundsException      [CONTEXT]      if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }      [BUGGY]  }  else  if(o  instanceof  JsonNumber  &&  isObject  ||  isPrimitive)  {  [BUGGY]      return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	replace	}  else  if(o  instanceof  JsonNumber  &&  isObject  ||  isPrimitive)  {	  }    else    if(o    instanceof    JsonNumber    &&    isObject)    {    	non-compiled	[CE]  cannot  find  symbol	112	None	replace
773	[BUG]  [BUGGY]  }  else  if(o  instanceof  JsonNumber  &&  isObject  ||  isFunctionObject)  {  [CE]  cannot  find  symbol  [FE]                        ArrayIndexOutOfBoundsException      [CONTEXT]      if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }      [BUGGY]  }  else  if(o  instanceof  JsonNumber  &&  isObject  ||  isFunctionObject)  {  [BUGGY]      return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	replace	}  else  if(o  instanceof  JsonNumber  &&  isObject  ||  isFunctionObject)  {	  }    else    if(o    instanceof    JsonNumber    &&    isObject)    {    	non-compiled	[CE]  cannot  find  symbol	112	None	replace
774	[BUG]  [BUGGY]  }  else  if(!(o  instanceof  JsonNumber  &&  isObject))  {  [CE]  cannot  find  symbol  [FE]                          ArrayIndexOutOfBoundsException      [CONTEXT]      if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }      [BUGGY]  }  else  if(!(o  instanceof  JsonNumber  &&  isObject))  {  [BUGGY]      return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	replace	}  else  if(!(o  instanceof  JsonNumber  &&  isObject))  {	  }    else    if(o    instanceof    JsonNumber    &&    isObject)    {    	non-compiled	[CE]  cannot  find  symbol	112	None	replace
775	[BUG]  [BUGGY]  }  else  if(o  instanceof  JsonNumber  &&  isObject  ||  isUnknownType())  {  [CE]  cannot  find  symbol  [FE]                            ArrayIndexOutOfBoundsException      [CONTEXT]      if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }      [BUGGY]  }  else  if(o  instanceof  JsonNumber  &&  isObject  ||  isUnknownType())  {  [BUGGY]      return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	replace	}  else  if(o  instanceof  JsonNumber  &&  isObject  ||  isUnknownType())  {	  }    else    if(o    instanceof    JsonNumber    &&    isObject)    {    	non-compiled	[CE]  cannot  find  symbol	112	None	replace
776	[BUG]  [BUGGY]  [FE]  ArrayIndexOutOfBoundsException  [FE]                  ArrayIndexOutOfBoundsException      [CONTEXT]      if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }      [BUGGY]  }  else  if(o  instanceof  JsonObject  ||  o  instanceof  Number)  {  [BUGGY]      return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	add	}  else  if(o  instanceof  JsonObject  ||  o  instanceof  Number)  {	  }    else    if(o    instanceof    JsonObject    ||    o    instanceof    String)    {    <    }    else    if(o    instanceof    JsonObject    ||    o    instanceof    String)    {    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	21	2	replace
777	[BUG]  [BUGGY]  }  else  if(o  instanceof  JsonObject  ||  o  instanceof  Number)  {  [FE]  ArrayIndexOutOfBoundsException  [FE]                  ArrayIndexOutOfBoundsException      [CONTEXT]      if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }      [BUGGY]  }  else  if(o  instanceof  JsonObject  ||  o  instanceof  Number)  {  [BUGGY]      return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	replace	}  else  if(o  instanceof  JsonObject  ||  o  instanceof  Number)  {	  }    else    if(o    instanceof    JsonObject    ||    o    instanceof    String)    {    <    }    else    if(o    instanceof    JsonObject    ||    o    instanceof    String)    {    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	21	2	replace
778	[BUG]  [BUGGY]  }  else  if(o  instanceof  JsonObject  &&  o  instanceof  JsonUnknown)  {  [CE]  cannot  find  symbol  [FE]        ArrayIndexOutOfBoundsException      [CONTEXT]      if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }      [BUGGY]  }  else  if(o  instanceof  JsonObject  &&  o  instanceof  JsonUnknown)  {  [BUGGY]      return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	replace	}  else  if(o  instanceof  JsonObject  &&  o  instanceof  JsonUnknown)  {	  }    else    if(o    instanceof    JsonObject    ||    o    instanceof    JsonUnknown)    {    	non-compiled	[CE]  cannot  find  symbol	241	None	replace
779	[BUG]  [BUGGY]  }  else  if(o  instanceof  JsonObject  ||!(o  instanceof  JsonUnknown))  {  [CE]  cannot  find  symbol  [FE]          ArrayIndexOutOfBoundsException      [CONTEXT]      if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }      [BUGGY]  }  else  if(o  instanceof  JsonObject  ||!(o  instanceof  JsonUnknown))  {  [BUGGY]      return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	replace	}  else  if(o  instanceof  JsonObject  ||!(o  instanceof  JsonUnknown))  {	  }    else    if(o    instanceof    JsonObject    ||    o    instanceof    JsonUnknown)    {    	non-compiled	[CE]  cannot  find  symbol	241	None	replace
780	[BUG]  [BUGGY]  }  else  if(o  instanceof  JsonArray  ||  o  instanceof  JsonUnknown)  {  [CE]  cannot  find  symbol  [FE]            ArrayIndexOutOfBoundsException      [CONTEXT]      if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }      [BUGGY]  }  else  if(o  instanceof  JsonArray  ||  o  instanceof  JsonUnknown)  {  [BUGGY]      return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	replace	}  else  if(o  instanceof  JsonArray  ||  o  instanceof  JsonUnknown)  {	  }    else    if(o    instanceof    JsonObject    ||    o    instanceof    JsonUnknown)    {    	non-compiled	[CE]  cannot  find  symbol	241	None	replace
781	[BUG]  [BUGGY]  }  else  if(o  instanceof  JsonObject  ||  o  instanceof  JsonUnknownImpl)  {  [CE]  cannot  find  symbol  [FE]              ArrayIndexOutOfBoundsException      [CONTEXT]      if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }      [BUGGY]  }  else  if(o  instanceof  JsonObject  ||  o  instanceof  JsonUnknownImpl)  {  [BUGGY]      return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	replace	}  else  if(o  instanceof  JsonObject  ||  o  instanceof  JsonUnknownImpl)  {	  }    else    if(o    instanceof    JsonObject    ||    o    instanceof    JsonUnknown)    {    	non-compiled	[CE]  cannot  find  symbol	241	None	replace
782	[BUG]  [BUGGY]  }  else  if(o  instanceof  JsonObject  ||  isObject)  {  [CE]  cannot  find  symbol  isObject  [FE]                ArrayIndexOutOfBoundsException      [CONTEXT]      if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }      [BUGGY]  }  else  if(o  instanceof  JsonObject  ||  isObject)  {  [BUGGY]      return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	replace	}  else  if(o  instanceof  JsonObject  ||  isObject)  {	  }    else    if(o    instanceof    JsonObject    ||    o    instanceof    JsonUnknown)    {    	non-compiled	[CE]  cannot  find  symbol  isObject	241	None	replace
783	[BUG]  [BUGGY]  Object[]  stack  =(Object[])o;  push(stack.size()  -  stack.length);  return  JsonToken.BEGIN_OBJECT;  [CE]  cannot  find  symbol  [FE]                                  ArrayIndexOutOfBoundsException      [CONTEXT]      if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }      [BUGGY]  Object[]  stack  =(Object[])o;  push(stack.size()  -  stack.length);  return  JsonToken.BEGIN_OBJECT;  [BUGGY]      return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	replace	Object[]  stack  =(Object[])o;  push(stack.size()  -  stack.length);  return  JsonToken.BEGIN_OBJECT;	  if(o    instanceof    JsonArray)    {    Object[]    stack    =(Object[])o;    push(stack.size()    -    stack.length);    return    JsonToken.BEGIN_OBJECT;    }    	non-compiled	[CE]  cannot  find  symbol	39	None	replace
784	[BUG]  [BUGGY]  pom(stack.size()  -  stack.length);  return  JsonToken.BEGIN_OBJECT;  [CE]  cannot  find  symbol  [FE]                                    ArrayIndexOutOfBoundsException      [CONTEXT]      if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }      [BUGGY]  pom(stack.size()  -  stack.length);  return  JsonToken.BEGIN_OBJECT;  [BUGGY]      return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	replace	pom(stack.size()  -  stack.length);  return  JsonToken.BEGIN_OBJECT;	  if(o    instanceof    JsonArray)    {    Object[]    stack    =(Object[])o;    push(stack.size()    -    stack.length);    return    JsonToken.BEGIN_OBJECT;    }    	non-compiled	[CE]  cannot  find  symbol	39	None	replace
785	[BUG]  [BUGGY]  Stack  stack  =(Object[])o;  push(stack.size()  -  stack.length);  return  JsonToken.BEGIN_OBJECT;  [CE]  cannot  find  symbol  [FE]                                      ArrayIndexOutOfBoundsException      [CONTEXT]      if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }      [BUGGY]  Stack  stack  =(Object[])o;  push(stack.size()  -  stack.length);  return  JsonToken.BEGIN_OBJECT;  [BUGGY]      return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	replace	Stack  stack  =(Object[])o;  push(stack.size()  -  stack.length);  return  JsonToken.BEGIN_OBJECT;	  if(o    instanceof    JsonArray)    {    Object[]    stack    =(Object[])o;    push(stack.size()    -    stack.length);    return    JsonToken.BEGIN_OBJECT;    }    	non-compiled	[CE]  cannot  find  symbol	39	None	replace
786	[BUG]  [BUGGY]  pull(stack.size()  -  stack.length);  return  JsonToken.BEGIN_OBJECT;  [CE]  cannot  find  symbol  [FE]                                        ArrayIndexOutOfBoundsException      [CONTEXT]      if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }      [BUGGY]  pull(stack.size()  -  stack.length);  return  JsonToken.BEGIN_OBJECT;  [BUGGY]      return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	replace	pull(stack.size()  -  stack.length);  return  JsonToken.BEGIN_OBJECT;	  if(o    instanceof    JsonArray)    {    Object[]    stack    =(Object[])o;    push(stack.size()    -    stack.length);    return    JsonToken.BEGIN_OBJECT;    }    	non-compiled	[CE]  cannot  find  symbol	39	None	replace
787	[BUG]  [BUGGY]  Object[]  stack  =(Object[])stack.get(0);  push(stack.size()  -  stack.length);  return  JsonToken.BEGIN_OBJECT;  [CE]  cannot  find  symbol  [FE]                                          ArrayIndexOutOfBoundsException      [CONTEXT]      if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }      [BUGGY]  Object[]  stack  =(Object[])stack.get(0);  push(stack.size()  -  stack.length);  return  JsonToken.BEGIN_OBJECT;  [BUGGY]      return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	replace	Object[]  stack  =(Object[])stack.get(0);  push(stack.size()  -  stack.length);  return  JsonToken.BEGIN_OBJECT;	  if(o    instanceof    JsonArray)    {    Object[]    stack    =(Object[])o;    push(stack.size()    -    stack.length);    return    JsonToken.BEGIN_OBJECT;    }    	non-compiled	[CE]  cannot  find  symbol	39	None	replace
788	[BUG]  [BUGGY]  push(stack.size()  -  stack.length);  return  JsonToken.BEGIN_OBJECT;  [CE]  cannot  find  symbol  [FE]                                            ArrayIndexOutOfBoundsException      [CONTEXT]      if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }      [BUGGY]  push(stack.size()  -  stack.length);  return  JsonToken.BEGIN_OBJECT;  [BUGGY]      return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	replace	push(stack.size()  -  stack.length);  return  JsonToken.BEGIN_OBJECT;	  if(o    instanceof    JsonArray)    {    Object[]    stack    =(Object[])o;    push(stack.size()    -    stack.length);    return    JsonToken.BEGIN_OBJECT;    }    	non-compiled	[CE]  cannot  find  symbol	39	None	replace
789	[BUG]  [BUGGY]  [FE]  ArrayIndexOutOfBoundsException  [FE]    AssertionError    [CONTEXT]      if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }      [BUGGY]  }  else  if(!(o  instanceof  JsonObject  &&  o  instanceof  Boolean))  {  [BUGGY]      return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	add	}  else  if(!(o  instanceof  JsonObject  &&  o  instanceof  Boolean))  {	  }    else    if(!(o    instanceof    JsonObject    ||    o    instanceof    Boolean))    {    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	255	2	replace
790	[BUG]  [BUGGY]  }  else  if(!(o  instanceof  JsonObject  &&  o  instanceof  Boolean))  {  [FE]  ArrayIndexOutOfBoundsException  [FE]    AssertionError    [CONTEXT]      if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }      [BUGGY]  }  else  if(!(o  instanceof  JsonObject  &&  o  instanceof  Boolean))  {  [BUGGY]      return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	replace	}  else  if(!(o  instanceof  JsonObject  &&  o  instanceof  Boolean))  {	  }    else    if(!(o    instanceof    JsonObject    ||    o    instanceof    Boolean))    {    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	255	2	replace
791	[BUG]  [BUGGY]  }  else  if(!(o  instanceof  JsonObject  ||  o  instanceof  Boolean  ||  isObject))  {  [CE]  cannot  find  symbol  isObject  [FE]      AssertionError    [CONTEXT]      if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }      [BUGGY]  }  else  if(!(o  instanceof  JsonObject  ||  o  instanceof  Boolean  ||  isObject))  {  [BUGGY]      return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	replace	}  else  if(!(o  instanceof  JsonObject  ||  o  instanceof  Boolean  ||  isObject))  {	  }    else    if(!(o    instanceof    JsonObject    ||    o    instanceof    Boolean))    {    	non-compiled	[CE]  cannot  find  symbol  isObject	255	None	replace
792	[BUG]  [BUGGY]  [FE]  ArrayIndexOutOfBoundsException  [FE]        AssertionError    [CONTEXT]      if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }      [BUGGY]  }  else  if(!(o  instanceof  JsonArray  ||  o  instanceof  Boolean))  {  [BUGGY]      return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	add	}  else  if(!(o  instanceof  JsonArray  ||  o  instanceof  Boolean))  {	  }    else    if(!(o    instanceof    JsonObject    ||    o    instanceof    Boolean))    {    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	255	2	replace
793	[BUG]  [BUGGY]  }  else  if(!(o  instanceof  JsonArray  ||  o  instanceof  Boolean))  {  [FE]  ArrayIndexOutOfBoundsException  [FE]        AssertionError    [CONTEXT]      if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }      [BUGGY]  }  else  if(!(o  instanceof  JsonArray  ||  o  instanceof  Boolean))  {  [BUGGY]      return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	replace	}  else  if(!(o  instanceof  JsonArray  ||  o  instanceof  Boolean))  {	  }    else    if(!(o    instanceof    JsonObject    ||    o    instanceof    Boolean))    {    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	255	2	replace
794	[BUG]  [BUGGY]  }  else  if(o  instanceof  JsonObject  ||  o  instanceof  Boolean  ||  isObject)  {  [CE]  cannot  find  symbol  isObject  [FE]          AssertionError    [CONTEXT]      if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }      [BUGGY]  }  else  if(o  instanceof  JsonObject  ||  o  instanceof  Boolean  ||  isObject)  {  [BUGGY]      return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	replace	}  else  if(o  instanceof  JsonObject  ||  o  instanceof  Boolean  ||  isObject)  {	  }    else    if(!(o    instanceof    JsonObject    ||    o    instanceof    Boolean))    {    	non-compiled	[CE]  cannot  find  symbol  isObject	255	None	replace
795	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]            AssertionError    [CONTEXT]      if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }      [BUGGY]  }  else  if(o  instanceof  JsonArray  ||  o  instanceof  Boolean)  {  [BUGGY]      return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	add	}  else  if(o  instanceof  JsonArray  ||  o  instanceof  Boolean)  {	  }    else    if(!(o    instanceof    JsonObject    ||    o    instanceof    Boolean))    {    	compilable	  [FE]  AssertionError  	255	2	replace
796	[BUG]  [BUGGY]  }  else  if(o  instanceof  JsonArray  ||  o  instanceof  Boolean)  {  [FE]  AssertionError  [FE]            AssertionError    [CONTEXT]      if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }      [BUGGY]  }  else  if(o  instanceof  JsonArray  ||  o  instanceof  Boolean)  {  [BUGGY]      return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	replace	}  else  if(o  instanceof  JsonArray  ||  o  instanceof  Boolean)  {	  }    else    if(!(o    instanceof    JsonObject    ||    o    instanceof    Boolean))    {    	compilable	  [FE]  AssertionError  	255	2	replace
797	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]              AssertionError    [CONTEXT]      if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }      [BUGGY]  }  else  if(!(o  instanceof  JsonObject  ||  o  instanceof  Boolean  ||  o  instanceof  String))  {  [BUGGY]      return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	add	}  else  if(!(o  instanceof  JsonObject  ||  o  instanceof  Boolean  ||  o  instanceof  String))  {	  }    else    if(!(o    instanceof    JsonObject    ||    o    instanceof    Boolean))    {    	compilable	  [FE]  AssertionError  	255	2	replace
798	[BUG]  [BUGGY]  }  else  if(!(o  instanceof  JsonObject  ||  o  instanceof  Boolean  ||  o  instanceof  String))  {  [FE]  AssertionError  [FE]              AssertionError    [CONTEXT]      if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }      [BUGGY]  }  else  if(!(o  instanceof  JsonObject  ||  o  instanceof  Boolean  ||  o  instanceof  String))  {  [BUGGY]      return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	replace	}  else  if(!(o  instanceof  JsonObject  ||  o  instanceof  Boolean  ||  o  instanceof  String))  {	  }    else    if(!(o    instanceof    JsonObject    ||    o    instanceof    Boolean))    {    	compilable	  [FE]  AssertionError  	255	2	replace
799	[BUG]  [BUGGY]  }  else  if(!(o  instanceof  JsonPrimitive)||  isObject)  {  [CE]  cannot  find  symbol  isObject  [FE]          ArrayIndexOutOfBoundsException      [CONTEXT]      if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }      [BUGGY]  }  else  if(!(o  instanceof  JsonPrimitive)||  isObject)  {  [BUGGY]      return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	replace	}  else  if(!(o  instanceof  JsonPrimitive)||  isObject)  {	  }    else    if(!(o    instanceof    JsonArray)||    isObject)    {    	non-compiled	[CE]  cannot  find  symbol  isObject	147	None	replace
800	[BUG]  [BUGGY]  }  else  if(!(o  instanceof  JsonArray)||  isObject  ||  isObject)  {  [CE]  cannot  find  symbol  isObject  [FE]            ArrayIndexOutOfBoundsException      [CONTEXT]      if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }      [BUGGY]  }  else  if(!(o  instanceof  JsonArray)||  isObject  ||  isObject)  {  [BUGGY]      return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	replace	}  else  if(!(o  instanceof  JsonArray)||  isObject  ||  isObject)  {	  }    else    if(!(o    instanceof    JsonArray)||    isObject)    {    	non-compiled	[CE]  cannot  find  symbol  isObject	147	None	replace
801	[BUG]  [BUGGY]  }  else  if(!(o  instanceof  JsonArray)||  isNumber)  {  [CE]  cannot  find  symbol  isNumber  [FE]              ArrayIndexOutOfBoundsException      [CONTEXT]      if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }      [BUGGY]  }  else  if(!(o  instanceof  JsonArray)||  isNumber)  {  [BUGGY]      return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	replace	}  else  if(!(o  instanceof  JsonArray)||  isNumber)  {	  }    else    if(!(o    instanceof    JsonArray)||    isObject)    {    	non-compiled	[CE]  cannot  find  symbol  isNumber	147	None	replace
802	[BUG]  [BUGGY]  }  else  if(!(o  instanceof  JsonPrimitive))  {  ArrayIndexOutOfBoundsException  e  =  new  ArrayIndexOutOfBoundsException(pathNames[0],  pathNames[1]);  [CE]  no  suitable  constructor  found  for  ArrayIndexOutOfBoundsException(String,String)  [FE]              ArrayIndexOutOfBoundsException      [CONTEXT]      if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }      [BUGGY]  }  else  if(!(o  instanceof  JsonPrimitive))  {  ArrayIndexOutOfBoundsException  e  =  new  ArrayIndexOutOfBoundsException(pathNames[0],  pathNames[1]);  [BUGGY]      return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	replace	}  else  if(!(o  instanceof  JsonPrimitive))  {  ArrayIndexOutOfBoundsException  e  =  new  ArrayIndexOutOfBoundsException(pathNames[0],  pathNames[1]);	  }    else    if(!(o    instanceof    JsonArray))    {    ArrayIndexOutOfBoundsException    e    =    new    ArrayIndexOutOfBoundsException(pathNames[0],    pathNames[1]);    	non-compiled	[CE]  no  suitable  constructor  found  for  ArrayIndexOutOfBoundsException(String,String)	134	None	replace
803	[BUG]  [BUGGY]  }  else  if(o  instanceof  JsonArray)  {  ArrayIndexOutOfBoundsException  e  =  new  ArrayIndexOutOfBoundsException(pathNames[0],  pathNames[1]);  [CE]  no  suitable  constructor  found  for  ArrayIndexOutOfBoundsException(String,String)  [FE]                ArrayIndexOutOfBoundsException      [CONTEXT]      if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }      [BUGGY]  }  else  if(o  instanceof  JsonArray)  {  ArrayIndexOutOfBoundsException  e  =  new  ArrayIndexOutOfBoundsException(pathNames[0],  pathNames[1]);  [BUGGY]      return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	replace	}  else  if(o  instanceof  JsonArray)  {  ArrayIndexOutOfBoundsException  e  =  new  ArrayIndexOutOfBoundsException(pathNames[0],  pathNames[1]);	  }    else    if(!(o    instanceof    JsonArray))    {    ArrayIndexOutOfBoundsException    e    =    new    ArrayIndexOutOfBoundsException(pathNames[0],    pathNames[1]);    	non-compiled	[CE]  no  suitable  constructor  found  for  ArrayIndexOutOfBoundsException(String,String)	134	None	replace
804	[BUG]  [BUGGY]  }  else  if(!(o  instanceof  JsonNull))  {  ArrayIndexOutOfBoundsException  e  =  new  ArrayIndexOutOfBoundsException(pathNames[0],  pathNames[1]);  [CE]  no  suitable  constructor  found  for  ArrayIndexOutOfBoundsException(String,String)  [FE]                  ArrayIndexOutOfBoundsException      [CONTEXT]      if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }      [BUGGY]  }  else  if(!(o  instanceof  JsonNull))  {  ArrayIndexOutOfBoundsException  e  =  new  ArrayIndexOutOfBoundsException(pathNames[0],  pathNames[1]);  [BUGGY]      return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	replace	}  else  if(!(o  instanceof  JsonNull))  {  ArrayIndexOutOfBoundsException  e  =  new  ArrayIndexOutOfBoundsException(pathNames[0],  pathNames[1]);	  }    else    if(!(o    instanceof    JsonArray))    {    ArrayIndexOutOfBoundsException    e    =    new    ArrayIndexOutOfBoundsException(pathNames[0],    pathNames[1]);    	non-compiled	[CE]  no  suitable  constructor  found  for  ArrayIndexOutOfBoundsException(String,String)	134	None	replace
805	[BUG]  [BUGGY]  }  else  if(!(o  instanceof  JsonType))  {  ArrayIndexOutOfBoundsException  e  =  new  ArrayIndexOutOfBoundsException(pathNames[0],  pathNames[1]);  [CE]  cannot  find  symbol  [FE]                    ArrayIndexOutOfBoundsException      [CONTEXT]      if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }      [BUGGY]  }  else  if(!(o  instanceof  JsonType))  {  ArrayIndexOutOfBoundsException  e  =  new  ArrayIndexOutOfBoundsException(pathNames[0],  pathNames[1]);  [BUGGY]      return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	replace	}  else  if(!(o  instanceof  JsonType))  {  ArrayIndexOutOfBoundsException  e  =  new  ArrayIndexOutOfBoundsException(pathNames[0],  pathNames[1]);	  }    else    if(!(o    instanceof    JsonArray))    {    ArrayIndexOutOfBoundsException    e    =    new    ArrayIndexOutOfBoundsException(pathNames[0],    pathNames[1]);    	non-compiled	[CE]  cannot  find  symbol	134	None	replace
806	[BUG]  [BUGGY]  }  else  if(!(o  instanceof  JsonArray)&&  pathNames[0]!=  pathNames[1])  {  ArrayIndexOutOfBoundsException  e  =  new  ArrayIndexOutOfBoundsException(pathNames[0],  pathNames[1]);  [CE]  no  suitable  constructor  found  for  ArrayIndexOutOfBoundsException(String,String)  [FE]                      ArrayIndexOutOfBoundsException      [CONTEXT]      if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }      [BUGGY]  }  else  if(!(o  instanceof  JsonArray)&&  pathNames[0]!=  pathNames[1])  {  ArrayIndexOutOfBoundsException  e  =  new  ArrayIndexOutOfBoundsException(pathNames[0],  pathNames[1]);  [BUGGY]      return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	replace	}  else  if(!(o  instanceof  JsonArray)&&  pathNames[0]!=  pathNames[1])  {  ArrayIndexOutOfBoundsException  e  =  new  ArrayIndexOutOfBoundsException(pathNames[0],  pathNames[1]);	  }    else    if(!(o    instanceof    JsonArray))    {    ArrayIndexOutOfBoundsException    e    =    new    ArrayIndexOutOfBoundsException(pathNames[0],    pathNames[1]);    	non-compiled	[CE]  no  suitable  constructor  found  for  ArrayIndexOutOfBoundsException(String,String)	134	None	replace
807	[BUG]  [BUGGY]  }  else  if(!(o  instanceof  JsonArray))  {  ArrayIndexOutOfBoundsException  e  =  new  ArrayIndexOutOfBoundsException(pathNames[0],  pathNames[1]);  }  [CE]  illegal  start  of  type  [FE]                        ArrayIndexOutOfBoundsException      [CONTEXT]      if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }      [BUGGY]  }  else  if(!(o  instanceof  JsonArray))  {  ArrayIndexOutOfBoundsException  e  =  new  ArrayIndexOutOfBoundsException(pathNames[0],  pathNames[1]);  }  [BUGGY]      return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	replace	}  else  if(!(o  instanceof  JsonArray))  {  ArrayIndexOutOfBoundsException  e  =  new  ArrayIndexOutOfBoundsException(pathNames[0],  pathNames[1]);  }	  }    else    if(!(o    instanceof    JsonArray))    {    ArrayIndexOutOfBoundsException    e    =    new    ArrayIndexOutOfBoundsException(pathNames[0],    pathNames[1]);    	non-compiled	[CE]  illegal  start  of  type	134	None	replace
808	[BUG]  [BUGGY]  }  else  if(o  instanceof  JsonObject  ||  o  instanceof  JsonArray  ||  o  instanceof  JsonPrimitive)  {  }  else  if(o  instanceof  JsonObject  ||  o  instanceof  JsonArray  ||  o  instanceof  JsonPrimitive)  {  [CE]  missing  return  statement  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]      if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }      [BUGGY]  }  else  if(o  instanceof  JsonObject  ||  o  instanceof  JsonArray  ||  o  instanceof  JsonPrimitive)  {  }  else  if(o  instanceof  JsonObject  ||  o  instanceof  JsonArray  ||  o  instanceof  JsonPrimitive)  {  [BUGGY]      return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	replace	}    else    if(o    instanceof    JsonObject    ||    o    instanceof    JsonArray    ||    o    instanceof    JsonPrimitive)    {    }  else  if(o  instanceof  JsonObject  ||  o  instanceof  JsonArray  ||  o  instanceof  JsonPrimitive)  {	  	non-compiled	[CE]  missing  return  statement	143	None	add
809	[BUG]  [BUGGY]  }  else  if(o  instanceof  JsonObject  ||  o  instanceof  JsonArray  ||  o  instanceof  JsonPrimitive)  {  else  if(o  instanceof  JsonObject  ||  o  instanceof  JsonArray  ||  o  instanceof  JsonPrimitive)  {  [CE]  'else'  without  'if'  [FE]      ArrayIndexOutOfBoundsException    [CONTEXT]      if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }      [BUGGY]  }  else  if(o  instanceof  JsonObject  ||  o  instanceof  JsonArray  ||  o  instanceof  JsonPrimitive)  {  else  if(o  instanceof  JsonObject  ||  o  instanceof  JsonArray  ||  o  instanceof  JsonPrimitive)  {  [BUGGY]      return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	replace	}    else    if(o    instanceof    JsonObject    ||    o    instanceof    JsonArray    ||    o    instanceof    JsonPrimitive)    {    else  if(o  instanceof  JsonObject  ||  o  instanceof  JsonArray  ||  o  instanceof  JsonPrimitive)  {	  	non-compiled	[CE]  'else'  without  'if'	143	None	add
810	[BUG]  [BUGGY]  }  else  if(o  instanceof  JsonObject  ||  o  instanceof  JsonArray  ||  o  instanceof  JsonPrimitive)  {  }  else  if(o  instanceof  JsonObject  ||  o  instanceof  JsonArray  ||  o  instanceof  JsonPrimitive)  {  return  JsonToken.BEGIN_OBJECT;  }  else  if(o  instanceof  JsonObject  ||  o  instanceof  JsonPrimitive)  {  [CE]  missing  return  statement  [FE]        ArrayIndexOutOfBoundsException    [CONTEXT]      if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }      [BUGGY]  }  else  if(o  instanceof  JsonObject  ||  o  instanceof  JsonArray  ||  o  instanceof  JsonPrimitive)  {  }  else  if(o  instanceof  JsonObject  ||  o  instanceof  JsonArray  ||  o  instanceof  JsonPrimitive)  {  return  JsonToken.BEGIN_OBJECT;  }  else  if(o  instanceof  JsonObject  ||  o  instanceof  JsonPrimitive)  {  [BUGGY]      return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	replace	}    else    if(o    instanceof    JsonObject    ||    o    instanceof    JsonArray    ||    o    instanceof    JsonPrimitive)    {    }  else  if(o  instanceof  JsonObject  ||  o  instanceof  JsonArray  ||  o  instanceof  JsonPrimitive)  {  return  JsonToken.BEGIN_OBJECT;  }  else  if(o  instanceof  JsonObject  ||  o  instanceof  JsonPrimitive)  {	  	non-compiled	[CE]  missing  return  statement	143	None	add
811	[BUG]  [BUGGY]  }  else  if(o  instanceof  JsonObject  ||  o  instanceof  JsonArray  ||  o  instanceof  JsonPrimitive)  {  }  else  if(o  instanceof  JsonObject  ||  o  instanceof  JsonArray  ||  o  instanceof  JsonPrimitive)  <  return  JsonToken.BEGIN_OBJECT;  [CE]  illegal  start  of  type  [FE]          ArrayIndexOutOfBoundsException    [CONTEXT]      if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }      [BUGGY]  }  else  if(o  instanceof  JsonObject  ||  o  instanceof  JsonArray  ||  o  instanceof  JsonPrimitive)  {  }  else  if(o  instanceof  JsonObject  ||  o  instanceof  JsonArray  ||  o  instanceof  JsonPrimitive)  <  return  JsonToken.BEGIN_OBJECT;  [BUGGY]      return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	replace	}    else    if(o    instanceof    JsonObject    ||    o    instanceof    JsonArray    ||    o    instanceof    JsonPrimitive)    {    }  else  if(o  instanceof  JsonObject  ||  o  instanceof  JsonArray  ||  o  instanceof  JsonPrimitive)  <  return  JsonToken.BEGIN_OBJECT;	  	non-compiled	[CE]  illegal  start  of  type	143	None	add
812	[BUG]  [BUGGY]  }  else  if(o  instanceof  JsonObject  ||  o  instanceof  JsonArray  ||  o  instanceof  JsonPrimitive)  {  }  else  if(o  instanceof  JsonObject  ||  o  instanceof  JsonArray  ||  o  instanceof  JsonPrimitive)  {  return  JsonToken.BEGIN_OBJECT;  }  else  if(o  instanceof  JsonObject)  {  [CE]  missing  return  statement  [FE]            ArrayIndexOutOfBoundsException    [CONTEXT]      if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }      [BUGGY]  }  else  if(o  instanceof  JsonObject  ||  o  instanceof  JsonArray  ||  o  instanceof  JsonPrimitive)  {  }  else  if(o  instanceof  JsonObject  ||  o  instanceof  JsonArray  ||  o  instanceof  JsonPrimitive)  {  return  JsonToken.BEGIN_OBJECT;  }  else  if(o  instanceof  JsonObject)  {  [BUGGY]      return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	replace	}    else    if(o    instanceof    JsonObject    ||    o    instanceof    JsonArray    ||    o    instanceof    JsonPrimitive)    {    }  else  if(o  instanceof  JsonObject  ||  o  instanceof  JsonArray  ||  o  instanceof  JsonPrimitive)  {  return  JsonToken.BEGIN_OBJECT;  }  else  if(o  instanceof  JsonObject)  {	  	non-compiled	[CE]  missing  return  statement	143	None	add
813	[BUG]  [BUGGY]  }  else  if(o  instanceof  JsonObject  ||  o  instanceof  JsonArray  ||  o  instanceof  JsonPrimitive)  {  }  else  if(o  instanceof  JsonObject  ||  o  instanceof  JsonArray  ||  o  instanceof  JsonPrimitive)  {  return  JsonToken.BEGIN_OBJECT;  }  else  if(o  instanceof  JsonObject)  {  return  JsonToken.BEGIN_OBJECT;  }  [CE]  illegal  start  of  type  [FE]              ArrayIndexOutOfBoundsException    [CONTEXT]      if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }      [BUGGY]  }  else  if(o  instanceof  JsonObject  ||  o  instanceof  JsonArray  ||  o  instanceof  JsonPrimitive)  {  }  else  if(o  instanceof  JsonObject  ||  o  instanceof  JsonArray  ||  o  instanceof  JsonPrimitive)  {  return  JsonToken.BEGIN_OBJECT;  }  else  if(o  instanceof  JsonObject)  {  return  JsonToken.BEGIN_OBJECT;  }  [BUGGY]      return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	replace	}    else    if(o    instanceof    JsonObject    ||    o    instanceof    JsonArray    ||    o    instanceof    JsonPrimitive)    {    }  else  if(o  instanceof  JsonObject  ||  o  instanceof  JsonArray  ||  o  instanceof  JsonPrimitive)  {  return  JsonToken.BEGIN_OBJECT;  }  else  if(o  instanceof  JsonObject)  {  return  JsonToken.BEGIN_OBJECT;  }	  	non-compiled	[CE]  illegal  start  of  type	143	None	add
814	[BUG]  [BUGGY]  }  else  if(o  instanceof  JsonObject  ||  o  instanceof  JsonArray  ||  o  instanceof  JsonPrimitive)  {  }  else  if(o  instanceof  JsonObject  ||  o  instanceof  JsonArray  ||  o  instanceof  JsonPrimitive)  {  return  JsonToken.BEGIN_OBJECT;  }  else  if(o  instanceof  JsonString  ||  o  instanceof  JsonPrimitive)  {  [CE]  cannot  find  symbol  [FE]                ArrayIndexOutOfBoundsException    [CONTEXT]      if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }      [BUGGY]  }  else  if(o  instanceof  JsonObject  ||  o  instanceof  JsonArray  ||  o  instanceof  JsonPrimitive)  {  }  else  if(o  instanceof  JsonObject  ||  o  instanceof  JsonArray  ||  o  instanceof  JsonPrimitive)  {  return  JsonToken.BEGIN_OBJECT;  }  else  if(o  instanceof  JsonString  ||  o  instanceof  JsonPrimitive)  {  [BUGGY]      return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	replace	}    else    if(o    instanceof    JsonObject    ||    o    instanceof    JsonArray    ||    o    instanceof    JsonPrimitive)    {    }  else  if(o  instanceof  JsonObject  ||  o  instanceof  JsonArray  ||  o  instanceof  JsonPrimitive)  {  return  JsonToken.BEGIN_OBJECT;  }  else  if(o  instanceof  JsonString  ||  o  instanceof  JsonPrimitive)  {	  	non-compiled	[CE]  cannot  find  symbol	143	None	add
815	[BUG]  [BUGGY]  }  else  if(o  instanceof  JsonObject  ||  o  instanceof  JsonArray)  {  case  JsonToken.BEGIN_OBJECT:  return  JsonToken.BEGIN_OBJECT;  [CE]  orphaned  case  [FE]              ArrayIndexOutOfBoundsException      [CONTEXT]      if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }      [BUGGY]  }  else  if(o  instanceof  JsonObject  ||  o  instanceof  JsonArray)  {  case  JsonToken.BEGIN_OBJECT:  return  JsonToken.BEGIN_OBJECT;  [BUGGY]      return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	replace	}  else  if(o  instanceof  JsonObject  ||  o  instanceof  JsonArray)  {  case  JsonToken.BEGIN_OBJECT:  return  JsonToken.BEGIN_OBJECT;	  }    else    if(o    instanceof    JsonObject    ||    o    instanceof    JsonArray)    {    }    else    if(o    instanceof    JsonObject    ||    o    instanceof    JsonArray)    {    case    JsonToken.BEGIN_OBJECT:    return    JsonToken.BEGIN_OBJECT;    	non-compiled	[CE]  orphaned  case	234	None	replace
816	[BUG]  [BUGGY]  }  else  if(o  instanceof  JsonString  ||  o  instanceof  JsonString)  {  case  JsonToken.BEGIN_OBJECT:  return  JsonToken.BEGIN_OBJECT;  [CE]  orphaned  case  [FE]                ArrayIndexOutOfBoundsException      [CONTEXT]      if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }      [BUGGY]  }  else  if(o  instanceof  JsonString  ||  o  instanceof  JsonString)  {  case  JsonToken.BEGIN_OBJECT:  return  JsonToken.BEGIN_OBJECT;  [BUGGY]      return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	replace	}  else  if(o  instanceof  JsonString  ||  o  instanceof  JsonString)  {  case  JsonToken.BEGIN_OBJECT:  return  JsonToken.BEGIN_OBJECT;	  }    else    if(o    instanceof    JsonObject    ||    o    instanceof    JsonArray)    {    }    else    if(o    instanceof    JsonObject    ||    o    instanceof    JsonArray)    {    case    JsonToken.BEGIN_OBJECT:    return    JsonToken.BEGIN_OBJECT;    	non-compiled	[CE]  orphaned  case	234	None	replace
817	[BUG]  [BUGGY]  }  else  if(o  instanceof  JsonObject  ||  o  instanceof  JsonPrimitive)  {  case  JsonToken.BEGIN_OBJECT:  return  JsonToken.BEGIN_OBJECT;  [CE]  orphaned  case  [FE]                  ArrayIndexOutOfBoundsException      [CONTEXT]      if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }      [BUGGY]  }  else  if(o  instanceof  JsonObject  ||  o  instanceof  JsonPrimitive)  {  case  JsonToken.BEGIN_OBJECT:  return  JsonToken.BEGIN_OBJECT;  [BUGGY]      return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	replace	}  else  if(o  instanceof  JsonObject  ||  o  instanceof  JsonPrimitive)  {  case  JsonToken.BEGIN_OBJECT:  return  JsonToken.BEGIN_OBJECT;	  }    else    if(o    instanceof    JsonObject    ||    o    instanceof    JsonArray)    {    }    else    if(o    instanceof    JsonObject    ||    o    instanceof    JsonArray)    {    case    JsonToken.BEGIN_OBJECT:    return    JsonToken.BEGIN_OBJECT;    	non-compiled	[CE]  orphaned  case	234	None	replace
818	[BUG]  [BUGGY]  }  else  if(o  instanceof  JsonPrimitive)  {  case  JsonPrimitive:  return  JsonToken.BEGIN_OBJECT;  [CE]  orphaned  case  [FE]                    ArrayIndexOutOfBoundsException      [CONTEXT]      if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }      [BUGGY]  }  else  if(o  instanceof  JsonPrimitive)  {  case  JsonPrimitive:  return  JsonToken.BEGIN_OBJECT;  [BUGGY]      return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	replace	}  else  if(o  instanceof  JsonPrimitive)  {  case  JsonPrimitive:  return  JsonToken.BEGIN_OBJECT;	  }    else    if(o    instanceof    JsonObject    ||    o    instanceof    JsonArray)    {    }    else    if(o    instanceof    JsonObject    ||    o    instanceof    JsonArray)    {    case    JsonToken.BEGIN_OBJECT:    return    JsonToken.BEGIN_OBJECT;    	non-compiled	[CE]  orphaned  case	234	None	replace
819	[BUG]  [BUGGY]  }  else  if(o  instanceof  JsonPrimitive  ||  o  instanceof  JsonObject)  {  case  JsonToken.BEGIN_OBJECT:  return  JsonToken.BEGIN_OBJECT;  [CE]  orphaned  case  [FE]                      ArrayIndexOutOfBoundsException      [CONTEXT]      if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }      [BUGGY]  }  else  if(o  instanceof  JsonPrimitive  ||  o  instanceof  JsonObject)  {  case  JsonToken.BEGIN_OBJECT:  return  JsonToken.BEGIN_OBJECT;  [BUGGY]      return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	replace	}  else  if(o  instanceof  JsonPrimitive  ||  o  instanceof  JsonObject)  {  case  JsonToken.BEGIN_OBJECT:  return  JsonToken.BEGIN_OBJECT;	  }    else    if(o    instanceof    JsonObject    ||    o    instanceof    JsonArray)    {    }    else    if(o    instanceof    JsonObject    ||    o    instanceof    JsonArray)    {    case    JsonToken.BEGIN_OBJECT:    return    JsonToken.BEGIN_OBJECT;    	non-compiled	[CE]  orphaned  case	234	None	replace
820	[BUG]  [BUGGY]  }  else  if(o  instanceof  JsonObject  &&  o  instanceof  JsonType)  {  [CE]  cannot  find  symbol  [FE]          ArrayIndexOutOfBoundsException      [CONTEXT]      if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }      [BUGGY]  }  else  if(o  instanceof  JsonObject  &&  o  instanceof  JsonType)  {  [BUGGY]      return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	replace	}  else  if(o  instanceof  JsonObject  &&  o  instanceof  JsonType)  {	  }    else    if(o    instanceof    JsonObject    ||    o    instanceof    JsonType)    {    	non-compiled	[CE]  cannot  find  symbol	43	None	replace
821	[BUG]  [BUGGY]  }  else  if(o  instanceof  JsonObject  ||  o  instanceof  JsonType  ||  isObject)  {  [CE]  cannot  find  symbol  [FE]            ArrayIndexOutOfBoundsException      [CONTEXT]      if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }      [BUGGY]  }  else  if(o  instanceof  JsonObject  ||  o  instanceof  JsonType  ||  isObject)  {  [BUGGY]      return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	replace	}  else  if(o  instanceof  JsonObject  ||  o  instanceof  JsonType  ||  isObject)  {	  }    else    if(o    instanceof    JsonObject    ||    o    instanceof    JsonType)    {    	non-compiled	[CE]  cannot  find  symbol	43	None	replace
822	[BUG]  [BUGGY]  }  else  if(o  instanceof  JsonObject  ||  o  instanceof  JsonType  ||!(o  instanceof  JsonArray))  {  [CE]  cannot  find  symbol  [FE]              ArrayIndexOutOfBoundsException      [CONTEXT]      if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }      [BUGGY]  }  else  if(o  instanceof  JsonObject  ||  o  instanceof  JsonType  ||!(o  instanceof  JsonArray))  {  [BUGGY]      return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	replace	}  else  if(o  instanceof  JsonObject  ||  o  instanceof  JsonType  ||!(o  instanceof  JsonArray))  {	  }    else    if(o    instanceof    JsonObject    ||    o    instanceof    JsonType)    {    	non-compiled	[CE]  cannot  find  symbol	43	None	replace
823	[BUG]  [BUGGY]  }  else  if(o  instanceof  JsonObject  ||  o  instanceof  JsonType  ||!(o  instanceof  JsonPrimitive))  {  [CE]  cannot  find  symbol  [FE]                ArrayIndexOutOfBoundsException      [CONTEXT]      if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }      [BUGGY]  }  else  if(o  instanceof  JsonObject  ||  o  instanceof  JsonType  ||!(o  instanceof  JsonPrimitive))  {  [BUGGY]      return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	replace	}  else  if(o  instanceof  JsonObject  ||  o  instanceof  JsonType  ||!(o  instanceof  JsonPrimitive))  {	  }    else    if(o    instanceof    JsonObject    ||    o    instanceof    JsonType)    {    	non-compiled	[CE]  cannot  find  symbol	43	None	replace
824	[BUG]  [BUGGY]  }  else  if(o  instanceof  JsonObject  ||  o  instanceof  JsonType  ||  o  instanceof  JsonPrimitive)  {  [CE]  cannot  find  symbol  [FE]                  ArrayIndexOutOfBoundsException      [CONTEXT]      if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }      [BUGGY]  }  else  if(o  instanceof  JsonObject  ||  o  instanceof  JsonType  ||  o  instanceof  JsonPrimitive)  {  [BUGGY]      return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	replace	}  else  if(o  instanceof  JsonObject  ||  o  instanceof  JsonType  ||  o  instanceof  JsonPrimitive)  {	  }    else    if(o    instanceof    JsonObject    ||    o    instanceof    JsonType)    {    	non-compiled	[CE]  cannot  find  symbol	43	None	replace
825	[BUG]  [BUGGY]  }  else  if(o  instanceof  JsonObject  ||!(o  instanceof  JsonType))  {  [CE]  cannot  find  symbol  [FE]                    ArrayIndexOutOfBoundsException      [CONTEXT]      if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }      [BUGGY]  }  else  if(o  instanceof  JsonObject  ||!(o  instanceof  JsonType))  {  [BUGGY]      return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	replace	}  else  if(o  instanceof  JsonObject  ||!(o  instanceof  JsonType))  {	  }    else    if(o    instanceof    JsonObject    ||    o    instanceof    JsonType)    {    	non-compiled	[CE]  cannot  find  symbol	43	None	replace
826	[BUG]  [BUGGY]  }  else  if(o  instanceof  JsonObject  ||  o  instanceof  JsonNumber  ||!(o  instanceof  JsonArray  ||  o  instanceof  JsonPrimitive))  {  [CE]  cannot  find  symbol  [FE]                  ArrayIndexOutOfBoundsException      [CONTEXT]      if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }      [BUGGY]  }  else  if(o  instanceof  JsonObject  ||  o  instanceof  JsonNumber  ||!(o  instanceof  JsonArray  ||  o  instanceof  JsonPrimitive))  {  [BUGGY]      return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	replace	}  else  if(o  instanceof  JsonObject  ||  o  instanceof  JsonNumber  ||!(o  instanceof  JsonArray  ||  o  instanceof  JsonPrimitive))  {	  }    else    if(o    instanceof    JsonObject    ||    o    instanceof    JsonNumber    ||!(o    instanceof    JsonArray))    {    	non-compiled	[CE]  cannot  find  symbol	124	None	replace
827	[BUG]  [BUGGY]  }  else  if(o  instanceof  JsonObject  ||  o.getClass()  instanceof  JsonNumber  ||!(o  instanceof  JsonArray))  {  [CE]  cannot  find  symbol  [FE]                    ArrayIndexOutOfBoundsException      [CONTEXT]      if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }      [BUGGY]  }  else  if(o  instanceof  JsonObject  ||  o.getClass()  instanceof  JsonNumber  ||!(o  instanceof  JsonArray))  {  [BUGGY]      return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	replace	}  else  if(o  instanceof  JsonObject  ||  o.getClass()  instanceof  JsonNumber  ||!(o  instanceof  JsonArray))  {	  }    else    if(o    instanceof    JsonObject    ||    o    instanceof    JsonNumber    ||!(o    instanceof    JsonArray))    {    	non-compiled	[CE]  cannot  find  symbol	124	None	replace
828	[BUG]  [BUGGY]  }  else  if(!(o  instanceof  JsonObject  ||  o  instanceof  JsonPrimitive))  {  }  else  if(!(o  instanceof  JsonObject  ||  o  instanceof  JsonPrimitive))  {  [CE]  missing  return  statement  [FE]    AssertionError    [CONTEXT]      if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }      [BUGGY]  }  else  if(!(o  instanceof  JsonObject  ||  o  instanceof  JsonPrimitive))  {  }  else  if(!(o  instanceof  JsonObject  ||  o  instanceof  JsonPrimitive))  {  [BUGGY]      return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	replace	}    else    if(!(o    instanceof    JsonObject    ||    o    instanceof    JsonPrimitive))    {    }  else  if(!(o  instanceof  JsonObject  ||  o  instanceof  JsonPrimitive))  {	  	non-compiled	[CE]  missing  return  statement	138	None	add
829	[BUG]  [BUGGY]  }  else  if(!(o  instanceof  JsonObject  ||  o  instanceof  JsonPrimitive))  {  else  if(!(o  instanceof  JsonObject  ||  o  instanceof  JsonPrimitive))  {  [CE]  'else'  without  'if'  [FE]      AssertionError    [CONTEXT]      if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }      [BUGGY]  }  else  if(!(o  instanceof  JsonObject  ||  o  instanceof  JsonPrimitive))  {  else  if(!(o  instanceof  JsonObject  ||  o  instanceof  JsonPrimitive))  {  [BUGGY]      return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	replace	}    else    if(!(o    instanceof    JsonObject    ||    o    instanceof    JsonPrimitive))    {    else  if(!(o  instanceof  JsonObject  ||  o  instanceof  JsonPrimitive))  {	  	non-compiled	[CE]  'else'  without  'if'	138	None	add
830	[BUG]  [BUGGY]  }  else  if(!(o  instanceof  JsonObject  ||  o  instanceof  JsonPrimitive))  {  }  else  if(!(o  instanceof  JsonObject  ||  o  instanceof  JsonPrimitive))  <  return  JsonToken.BEGIN_OBJECT;  [CE]  illegal  start  of  type  [FE]        AssertionError    [CONTEXT]      if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }      [BUGGY]  }  else  if(!(o  instanceof  JsonObject  ||  o  instanceof  JsonPrimitive))  {  }  else  if(!(o  instanceof  JsonObject  ||  o  instanceof  JsonPrimitive))  <  return  JsonToken.BEGIN_OBJECT;  [BUGGY]      return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	replace	}    else    if(!(o    instanceof    JsonObject    ||    o    instanceof    JsonPrimitive))    {    }  else  if(!(o  instanceof  JsonObject  ||  o  instanceof  JsonPrimitive))  <  return  JsonToken.BEGIN_OBJECT;	  	non-compiled	[CE]  illegal  start  of  type	138	None	add
831	[BUG]  [BUGGY]  }  else  if(!(o  instanceof  JsonObject  ||  o  instanceof  JsonPrimitive))  {  <  }  else  if(!(o  instanceof  JsonObject  ||  o  instanceof  JsonPrimitive))  {  [CE]  illegal  start  of  type  [FE]          AssertionError    [CONTEXT]      if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }      [BUGGY]  }  else  if(!(o  instanceof  JsonObject  ||  o  instanceof  JsonPrimitive))  {  <  }  else  if(!(o  instanceof  JsonObject  ||  o  instanceof  JsonPrimitive))  {  [BUGGY]      return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	replace	}    else    if(!(o    instanceof    JsonObject    ||    o    instanceof    JsonPrimitive))    {    <  }  else  if(!(o  instanceof  JsonObject  ||  o  instanceof  JsonPrimitive))  {	  	non-compiled	[CE]  illegal  start  of  type	138	None	add
832	[BUG]  [BUGGY]  }  else  if(!(o  instanceof  JsonObject  ||  o  instanceof  JsonPrimitive))  {  }  else  if(!(o  instanceof  JSONObject  ||  o  instanceof  JsonPrimitive))  {  [CE]  cannot  find  symbol  [FE]            AssertionError    [CONTEXT]      if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }      [BUGGY]  }  else  if(!(o  instanceof  JsonObject  ||  o  instanceof  JsonPrimitive))  {  }  else  if(!(o  instanceof  JSONObject  ||  o  instanceof  JsonPrimitive))  {  [BUGGY]      return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	replace	}    else    if(!(o    instanceof    JsonObject    ||    o    instanceof    JsonPrimitive))    {    }  else  if(!(o  instanceof  JSONObject  ||  o  instanceof  JsonPrimitive))  {	  	non-compiled	[CE]  cannot  find  symbol	138	None	add
833	[BUG]  [BUGGY]  }  else  if(!(o  instanceof  JsonObject  ||  o  instanceof  JsonPrimitive))  {  {  }  else  if(!(o  instanceof  JsonObject  ||  o  instanceof  JsonPrimitive))  {  [CE]  'else'  without  'if'  [FE]              AssertionError    [CONTEXT]      if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }      [BUGGY]  }  else  if(!(o  instanceof  JsonObject  ||  o  instanceof  JsonPrimitive))  {  {  }  else  if(!(o  instanceof  JsonObject  ||  o  instanceof  JsonPrimitive))  {  [BUGGY]      return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	replace	}    else    if(!(o    instanceof    JsonObject    ||    o    instanceof    JsonPrimitive))    {    {  }  else  if(!(o  instanceof  JsonObject  ||  o  instanceof  JsonPrimitive))  {	  	non-compiled	[CE]  'else'  without  'if'	138	None	add
834	[BUG]  [BUGGY]  }  else  if(o  instanceof  JsonObject  ==  ')'  expected!=  illegal  start  of  type  [CE]  [FE]              ArrayIndexOutOfBoundsException      [CONTEXT]      if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }      [BUGGY]  }  else  if(o  instanceof  JsonObject  ==  ')'  expected!=  illegal  start  of  type  [BUGGY]      return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	replace	}  else  if(o  instanceof  JsonObject  ==  ')'  expected!=  illegal  start  of  type	  }    else    if(o    instanceof    JsonObject    <    =    ')'    expected    	non-compiled	[CE]  	130	None	replace
835	[BUG]  [BUGGY]  }  else  if(o  instanceof  JsonObject  >=  ')'  expected!=  illegal  start  of  type  [CE]  [FE]                ArrayIndexOutOfBoundsException      [CONTEXT]      if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }      [BUGGY]  }  else  if(o  instanceof  JsonObject  >=  ')'  expected!=  illegal  start  of  type  [BUGGY]      return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	replace	}  else  if(o  instanceof  JsonObject  >=  ')'  expected!=  illegal  start  of  type	  }    else    if(o    instanceof    JsonObject    <    =    ')'    expected    	non-compiled	[CE]  	130	None	replace
836	[BUG]  [BUGGY]  }  else  if(o  instanceof  JsonObject  ==  ')'  expected  [Delete]  illegal  start  of  type  [CE]  [FE]                  ArrayIndexOutOfBoundsException      [CONTEXT]      if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }      [BUGGY]  }  else  if(o  instanceof  JsonObject  ==  ')'  expected  [Delete]  illegal  start  of  type  [BUGGY]      return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	replace	}  else  if(o  instanceof  JsonObject  ==  ')'  expected  [Delete]  illegal  start  of  type	  }    else    if(o    instanceof    JsonObject    <    =    ')'    expected    	non-compiled	[CE]  	130	None	replace
837	[BUG]  [BUGGY]  }  else  if(o  instanceof  JsonObject  <  ')'  expected!=  illegal  start  of  type  [CE]  illegal  start  of  type  [FE]                    ArrayIndexOutOfBoundsException      [CONTEXT]      if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }      [BUGGY]  }  else  if(o  instanceof  JsonObject  <  ')'  expected!=  illegal  start  of  type  [BUGGY]      return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	replace	}  else  if(o  instanceof  JsonObject  <  ')'  expected!=  illegal  start  of  type	  }    else    if(o    instanceof    JsonObject    <    =    ')'    expected    	non-compiled	[CE]  illegal  start  of  type	130	None	replace
838	[BUG]  [BUGGY]  }  else  if(o  instanceof  JsonObject  <  ')'  expected  ==  illegal  start  of  type  [CE]  illegal  start  of  type  [FE]                      ArrayIndexOutOfBoundsException      [CONTEXT]      if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }      [BUGGY]  }  else  if(o  instanceof  JsonObject  <  ')'  expected  ==  illegal  start  of  type  [BUGGY]      return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	replace	}  else  if(o  instanceof  JsonObject  <  ')'  expected  ==  illegal  start  of  type	  }    else    if(o    instanceof    JsonObject    <    =    ')'    expected    	non-compiled	[CE]  illegal  start  of  type	130	None	replace
839	[BUG]  [BUGGY]  }  else  if(o  instanceof  JsonObject  >=  ')'  expected  ==  illegal  start  of  type  [CE]  [FE]                        ArrayIndexOutOfBoundsException      [CONTEXT]      if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }      [BUGGY]  }  else  if(o  instanceof  JsonObject  >=  ')'  expected  ==  illegal  start  of  type  [BUGGY]      return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	replace	}  else  if(o  instanceof  JsonObject  >=  ')'  expected  ==  illegal  start  of  type	  }    else    if(o    instanceof    JsonObject    <    =    ')'    expected    	non-compiled	[CE]  	130	None	replace
840	[BUG]  [BUGGY]  }  else  if(o  instanceof  JsonObject  <  =  ')'  expected  ==  false;  [CE]  illegal  start  of  type  [FE]                          ArrayIndexOutOfBoundsException      [CONTEXT]      if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }      [BUGGY]  }  else  if(o  instanceof  JsonObject  <  =  ')'  expected  ==  false;  [BUGGY]      return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	replace	}  else  if(o  instanceof  JsonObject  <  =  ')'  expected  ==  false;	  }    else    if(o    instanceof    JsonObject    <    =    ')'    expected    	non-compiled	[CE]  illegal  start  of  type	130	None	replace
841	[BUG]  [BUGGY]  JsonToken  token  =(JsonToken)iterator.next()?  JsonToken.END_OBJECT  :  JsonToken.END_OBJECT;  [CE]  incompatible  types  [FE]                          ArrayIndexOutOfBoundsException      [CONTEXT]      if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }      [BUGGY]  JsonToken  token  =(JsonToken)iterator.next()?  JsonToken.END_OBJECT  :  JsonToken.END_OBJECT;  [BUGGY]      return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	replace	JsonToken  token  =(JsonToken)iterator.next()?  JsonToken.END_OBJECT  :  JsonToken.END_OBJECT;	  JsonToken    token    =(JsonToken)iterator.next();    	non-compiled	[CE]  incompatible  types	35	None	replace
842	[BUG]  [BUGGY]  JsonToken  token  =(JsonToken)iterator.next()?  JsonToken.START_OBJECT  :  JsonToken.END_OBJECT;  [CE]  incompatible  types  [FE]                            ArrayIndexOutOfBoundsException      [CONTEXT]      if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }      [BUGGY]  JsonToken  token  =(JsonToken)iterator.next()?  JsonToken.START_OBJECT  :  JsonToken.END_OBJECT;  [BUGGY]      return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	replace	JsonToken  token  =(JsonToken)iterator.next()?  JsonToken.START_OBJECT  :  JsonToken.END_OBJECT;	  JsonToken    token    =(JsonToken)iterator.next();    	non-compiled	[CE]  incompatible  types	35	None	replace
843	[BUG]  [BUGGY]  JsonToken  token  =(JsonToken)iterator.next()?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  [CE]  incompatible  types  [FE]                              ArrayIndexOutOfBoundsException      [CONTEXT]      if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }      [BUGGY]  JsonToken  token  =(JsonToken)iterator.next()?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  [BUGGY]      return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	replace	JsonToken  token  =(JsonToken)iterator.next()?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;	  JsonToken    token    =(JsonToken)iterator.next();    	non-compiled	[CE]  incompatible  types	35	None	replace
844	[BUG]  [BUGGY]  JsonToken  token  =(JsonToken)iterator.next()?  JsonToken.FIELD_NAME  :  JsonToken.END_OBJECT;  [CE]  incompatible  types  [FE]                                ArrayIndexOutOfBoundsException      [CONTEXT]      if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }      [BUGGY]  JsonToken  token  =(JsonToken)iterator.next()?  JsonToken.FIELD_NAME  :  JsonToken.END_OBJECT;  [BUGGY]      return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	replace	JsonToken  token  =(JsonToken)iterator.next()?  JsonToken.FIELD_NAME  :  JsonToken.END_OBJECT;	  JsonToken    token    =(JsonToken)iterator.next();    	non-compiled	[CE]  incompatible  types	35	None	replace
845	[BUG]  [BUGGY]  JsonToken  token  =(JsonToken)iterator.next()?  JsonToken.START_OBJECT  :  JsonToken.END_ARRAY;  [CE]  incompatible  types  [FE]                                  ArrayIndexOutOfBoundsException      [CONTEXT]      if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }      [BUGGY]  JsonToken  token  =(JsonToken)iterator.next()?  JsonToken.START_OBJECT  :  JsonToken.END_ARRAY;  [BUGGY]      return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	replace	JsonToken  token  =(JsonToken)iterator.next()?  JsonToken.START_OBJECT  :  JsonToken.END_ARRAY;	  JsonToken    token    =(JsonToken)iterator.next();    	non-compiled	[CE]  incompatible  types	35	None	replace
846	[BUG]  [BUGGY]  JsonToken  token  =(JsonToken)iterator.next()?  JsonToken.NAME  :  JsonToken.END_OBJECT;  [CE]  incompatible  types  [FE]                                    ArrayIndexOutOfBoundsException      [CONTEXT]      if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }      [BUGGY]  JsonToken  token  =(JsonToken)iterator.next()?  JsonToken.NAME  :  JsonToken.END_OBJECT;  [BUGGY]      return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	replace	JsonToken  token  =(JsonToken)iterator.next()?  JsonToken.NAME  :  JsonToken.END_OBJECT;	  JsonToken    token    =(JsonToken)iterator.next();    	non-compiled	[CE]  incompatible  types	35	None	replace
847	[BUG]  [BUGGY]  }  else  if(!(o  instanceof  JsonArray))  {  ArrayIndexOutOfBoundsException  e  =  new  ArrayIndexOutOfBoundsException(primitive.next());  [CE]  cannot  find  symbol  primitive  [FE]            ArrayIndexOutOfBoundsException      [CONTEXT]      if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }      [BUGGY]  }  else  if(!(o  instanceof  JsonArray))  {  ArrayIndexOutOfBoundsException  e  =  new  ArrayIndexOutOfBoundsException(primitive.next());  [BUGGY]      return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	replace	}  else  if(!(o  instanceof  JsonArray))  {  ArrayIndexOutOfBoundsException  e  =  new  ArrayIndexOutOfBoundsException(primitive.next());	  }    else    if(!(o    instanceof    JsonArray))    {    ArrayIndexOutOfBoundsException    e    =    new    ArrayIndexOutOfBoundsException(iterator.next());    	non-compiled	[CE]  cannot  find  symbol  primitive	133	None	replace
848	[BUG]  [BUGGY]  }  else  if(!(o  instanceof  JsonPrimitive))  {  ArrayIndexOutOfBoundsException  e  =  new  ArrayIndexOutOfBoundsException(iterator.next());  [CE]  cannot  find  symbol  iterator  [FE]              ArrayIndexOutOfBoundsException      [CONTEXT]      if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }      [BUGGY]  }  else  if(!(o  instanceof  JsonPrimitive))  {  ArrayIndexOutOfBoundsException  e  =  new  ArrayIndexOutOfBoundsException(iterator.next());  [BUGGY]      return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	replace	}  else  if(!(o  instanceof  JsonPrimitive))  {  ArrayIndexOutOfBoundsException  e  =  new  ArrayIndexOutOfBoundsException(iterator.next());	  }    else    if(!(o    instanceof    JsonArray))    {    ArrayIndexOutOfBoundsException    e    =    new    ArrayIndexOutOfBoundsException(iterator.next());    	non-compiled	[CE]  cannot  find  symbol  iterator	133	None	replace
849	[BUG]  [BUGGY]  }  else  if(!(o  instanceof  JsonArray))  {  ArrayIndexOutOfBoundsException  e  =  new  ArrayIndexOutOfBoundsException(item.next());  [CE]  cannot  find  symbol  item  [FE]                ArrayIndexOutOfBoundsException      [CONTEXT]      if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }      [BUGGY]  }  else  if(!(o  instanceof  JsonArray))  {  ArrayIndexOutOfBoundsException  e  =  new  ArrayIndexOutOfBoundsException(item.next());  [BUGGY]      return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	replace	}  else  if(!(o  instanceof  JsonArray))  {  ArrayIndexOutOfBoundsException  e  =  new  ArrayIndexOutOfBoundsException(item.next());	  }    else    if(!(o    instanceof    JsonArray))    {    ArrayIndexOutOfBoundsException    e    =    new    ArrayIndexOutOfBoundsException(iterator.next());    	non-compiled	[CE]  cannot  find  symbol  item	133	None	replace
850	[BUG]  [BUGGY]  }  else  if(!(o  instanceof  JsonArray))  {  ArrayIndexOutOfBoundsException  e  =  new  ArrayIndexOutOfBoundsException(iterator.getClass());  [CE]  cannot  find  symbol  iterator  [FE]                  ArrayIndexOutOfBoundsException      [CONTEXT]      if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }      [BUGGY]  }  else  if(!(o  instanceof  JsonArray))  {  ArrayIndexOutOfBoundsException  e  =  new  ArrayIndexOutOfBoundsException(iterator.getClass());  [BUGGY]      return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	replace	}  else  if(!(o  instanceof  JsonArray))  {  ArrayIndexOutOfBoundsException  e  =  new  ArrayIndexOutOfBoundsException(iterator.getClass());	  }    else    if(!(o    instanceof    JsonArray))    {    ArrayIndexOutOfBoundsException    e    =    new    ArrayIndexOutOfBoundsException(iterator.next());    	non-compiled	[CE]  cannot  find  symbol  iterator	133	None	replace
851	[BUG]  [BUGGY]  [FE]  ArrayIndexOutOfBoundsException  [FE]                    ArrayIndexOutOfBoundsException      [CONTEXT]      if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }      [BUGGY]  }  else  if(!(o  instanceof  JsonArray))  {  ArrayIndexOutOfBoundsException  e  =  new  ArrayIndexOutOfBoundsException(Iterator.class.getSimpleName());  [BUGGY]      return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	add	}  else  if(!(o  instanceof  JsonArray))  {  ArrayIndexOutOfBoundsException  e  =  new  ArrayIndexOutOfBoundsException(Iterator.class.getSimpleName());	  }    else    if(!(o    instanceof    JsonArray))    {    ArrayIndexOutOfBoundsException    e    =    new    ArrayIndexOutOfBoundsException(iterator.next());    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	133	2	replace
852	[BUG]  [BUGGY]  }  else  if(!(o  instanceof  JsonArray))  {  ArrayIndexOutOfBoundsException  e  =  new  ArrayIndexOutOfBoundsException(Iterator.class.getSimpleName());  [FE]  ArrayIndexOutOfBoundsException  [FE]                    ArrayIndexOutOfBoundsException      [CONTEXT]      if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }      [BUGGY]  }  else  if(!(o  instanceof  JsonArray))  {  ArrayIndexOutOfBoundsException  e  =  new  ArrayIndexOutOfBoundsException(Iterator.class.getSimpleName());  [BUGGY]      return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	replace	}  else  if(!(o  instanceof  JsonArray))  {  ArrayIndexOutOfBoundsException  e  =  new  ArrayIndexOutOfBoundsException(Iterator.class.getSimpleName());	  }    else    if(!(o    instanceof    JsonArray))    {    ArrayIndexOutOfBoundsException    e    =    new    ArrayIndexOutOfBoundsException(iterator.next());    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	133	2	replace
853	[BUG]  [BUGGY]  }  else  if(!(o  instanceof  JsonArray))  {  ArrayIndexOutOfBoundsException  e  =  new  ArrayIndexOutOfBoundsException(input.next());  [CE]  cannot  find  symbol  input  [FE]                      ArrayIndexOutOfBoundsException      [CONTEXT]      if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }      [BUGGY]  }  else  if(!(o  instanceof  JsonArray))  {  ArrayIndexOutOfBoundsException  e  =  new  ArrayIndexOutOfBoundsException(input.next());  [BUGGY]      return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	replace	}  else  if(!(o  instanceof  JsonArray))  {  ArrayIndexOutOfBoundsException  e  =  new  ArrayIndexOutOfBoundsException(input.next());	  }    else    if(!(o    instanceof    JsonArray))    {    ArrayIndexOutOfBoundsException    e    =    new    ArrayIndexOutOfBoundsException(iterator.next());    	non-compiled	[CE]  cannot  find  symbol  input	133	None	replace
854	[BUG]  [BUGGY]  }  else  if(!(o  instanceof  JsonObject  ||  o  instanceof  Number))  {  }  else  if(!(o  instanceof  JsonObject  ||  o  instanceof  Number))  {  [CE]  missing  return  statement  [FE]    AssertionError    [CONTEXT]      if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }      [BUGGY]  }  else  if(!(o  instanceof  JsonObject  ||  o  instanceof  Number))  {  }  else  if(!(o  instanceof  JsonObject  ||  o  instanceof  Number))  {  [BUGGY]      return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	replace	}    else    if(!(o    instanceof    JsonObject    ||    o    instanceof    Number))    {    }  else  if(!(o  instanceof  JsonObject  ||  o  instanceof  Number))  {	  	non-compiled	[CE]  missing  return  statement	256	None	add
855	[BUG]  [BUGGY]  }  else  if(!(o  instanceof  JsonObject  ||  o  instanceof  Number))  {  else  if(!(o  instanceof  JsonObject  ||  o  instanceof  Number))  {  [CE]  'else'  without  'if'  [FE]      AssertionError    [CONTEXT]      if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }      [BUGGY]  }  else  if(!(o  instanceof  JsonObject  ||  o  instanceof  Number))  {  else  if(!(o  instanceof  JsonObject  ||  o  instanceof  Number))  {  [BUGGY]      return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	replace	}    else    if(!(o    instanceof    JsonObject    ||    o    instanceof    Number))    {    else  if(!(o  instanceof  JsonObject  ||  o  instanceof  Number))  {	  	non-compiled	[CE]  'else'  without  'if'	256	None	add
856	[BUG]  [BUGGY]  }  else  if(!(o  instanceof  JsonObject  ||  o  instanceof  Number))  {  <  }  else  if(!(o  instanceof  JsonObject  ||  o  instanceof  Number))  {  [CE]  illegal  start  of  type  [FE]        AssertionError    [CONTEXT]      if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }      [BUGGY]  }  else  if(!(o  instanceof  JsonObject  ||  o  instanceof  Number))  {  <  }  else  if(!(o  instanceof  JsonObject  ||  o  instanceof  Number))  {  [BUGGY]      return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	replace	}    else    if(!(o    instanceof    JsonObject    ||    o    instanceof    Number))    {    <  }  else  if(!(o  instanceof  JsonObject  ||  o  instanceof  Number))  {	  	non-compiled	[CE]  illegal  start  of  type	256	None	add
857	[BUG]  [BUGGY]  }  else  if(!(o  instanceof  JsonObject  ||  o  instanceof  Number))  {  }  else  if(!(o  instanceof  JsonObject  ||  o  instanceof  Node))  {  [CE]  cannot  find  symbol  [FE]          AssertionError    [CONTEXT]      if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }      [BUGGY]  }  else  if(!(o  instanceof  JsonObject  ||  o  instanceof  Number))  {  }  else  if(!(o  instanceof  JsonObject  ||  o  instanceof  Node))  {  [BUGGY]      return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	replace	}    else    if(!(o    instanceof    JsonObject    ||    o    instanceof    Number))    {    }  else  if(!(o  instanceof  JsonObject  ||  o  instanceof  Node))  {	  	non-compiled	[CE]  cannot  find  symbol	256	None	add
858	[BUG]  [BUGGY]  }  else  if(!(o  instanceof  JsonObject  ||  o  instanceof  Number))  {  }  else  if(!(o  instanceof  JSONObject  ||  o  instanceof  Number))  {  [CE]  cannot  find  symbol  [FE]            AssertionError    [CONTEXT]      if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }      [BUGGY]  }  else  if(!(o  instanceof  JsonObject  ||  o  instanceof  Number))  {  }  else  if(!(o  instanceof  JSONObject  ||  o  instanceof  Number))  {  [BUGGY]      return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	replace	}    else    if(!(o    instanceof    JsonObject    ||    o    instanceof    Number))    {    }  else  if(!(o  instanceof  JSONObject  ||  o  instanceof  Number))  {	  	non-compiled	[CE]  cannot  find  symbol	256	None	add
859	[BUG]  [BUGGY]  }  else  if(!(o  instanceof  JsonObject  ||  o  instanceof  Number))  {  {  }  else  if(!(o  instanceof  JsonObject  ||  o  instanceof  Number))  {  [CE]  'else'  without  'if'  [FE]              AssertionError    [CONTEXT]      if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }      [BUGGY]  }  else  if(!(o  instanceof  JsonObject  ||  o  instanceof  Number))  {  {  }  else  if(!(o  instanceof  JsonObject  ||  o  instanceof  Number))  {  [BUGGY]      return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	replace	}    else    if(!(o    instanceof    JsonObject    ||    o    instanceof    Number))    {    {  }  else  if(!(o  instanceof  JsonObject  ||  o  instanceof  Number))  {	  	non-compiled	[CE]  'else'  without  'if'	256	None	add
860	[BUG]  [BUGGY]  }  else  if(o  instanceof  JsonObject  &&  o  instanceof  JsonNumber  ||  isObject)  {  [CE]  cannot  find  symbol  [FE]                ArrayIndexOutOfBoundsException      [CONTEXT]      if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }      [BUGGY]  }  else  if(o  instanceof  JsonObject  &&  o  instanceof  JsonNumber  ||  isObject)  {  [BUGGY]      return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	replace	}  else  if(o  instanceof  JsonObject  &&  o  instanceof  JsonNumber  ||  isObject)  {	  }    else    if(o    instanceof    JsonObject    ||    o    instanceof    JsonNumber    ||    isObject)    {    	non-compiled	[CE]  cannot  find  symbol	123	None	replace
861	[BUG]  [BUGGY]  }  else  if(o  instanceof  JsonObject  ||  o  instanceof  JsonNumber  ||  isArray)  {  [CE]  cannot  find  symbol  [FE]                  ArrayIndexOutOfBoundsException      [CONTEXT]      if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }      [BUGGY]  }  else  if(o  instanceof  JsonObject  ||  o  instanceof  JsonNumber  ||  isArray)  {  [BUGGY]      return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	replace	}  else  if(o  instanceof  JsonObject  ||  o  instanceof  JsonNumber  ||  isArray)  {	  }    else    if(o    instanceof    JsonObject    ||    o    instanceof    JsonNumber    ||    isObject)    {    	non-compiled	[CE]  cannot  find  symbol	123	None	replace
862	[BUG]  [BUGGY]  }  else  if(o  instanceof  JsonObject  ||  isObject  ||  isObject)  {  [CE]  cannot  find  symbol  isObject  [FE]                    ArrayIndexOutOfBoundsException      [CONTEXT]      if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }      [BUGGY]  }  else  if(o  instanceof  JsonObject  ||  isObject  ||  isObject)  {  [BUGGY]      return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	replace	}  else  if(o  instanceof  JsonObject  ||  isObject  ||  isObject)  {	  }    else    if(o    instanceof    JsonObject    ||    o    instanceof    JsonNumber    ||    isObject)    {    	non-compiled	[CE]  cannot  find  symbol  isObject	123	None	replace
863	[BUG]  [BUGGY]  }  else  if(o  instanceof  JsonObject  ||!(o  instanceof  JsonNumber  ||  isObject))  {  [CE]  cannot  find  symbol  [FE]                      ArrayIndexOutOfBoundsException      [CONTEXT]      if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }      [BUGGY]  }  else  if(o  instanceof  JsonObject  ||!(o  instanceof  JsonNumber  ||  isObject))  {  [BUGGY]      return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	replace	}  else  if(o  instanceof  JsonObject  ||!(o  instanceof  JsonNumber  ||  isObject))  {	  }    else    if(o    instanceof    JsonObject    ||    o    instanceof    JsonNumber    ||    isObject)    {    	non-compiled	[CE]  cannot  find  symbol	123	None	replace
864	[BUG]  [BUGGY]  }  else  if(o  instanceof  JsonPrimitive)  {  return  JsonToken.BEGIN_ARRAY;  }  [CE]  illegal  start  of  type  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]      if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }      [BUGGY]  }  else  if(o  instanceof  JsonPrimitive)  {  return  JsonToken.BEGIN_ARRAY;  }  [BUGGY]      return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	replace	}  else  if(o  instanceof  JsonPrimitive)  {  return  JsonToken.BEGIN_ARRAY;  }	  }    else    if(o    instanceof    JsonArray)    {    return    JsonToken.BEGIN_ARRAY;    	non-compiled	[CE]  illegal  start  of  type	175	None	replace
865	[BUG]  [BUGGY]  }  else  if(o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  [CE]  illegal  start  of  type  [FE]      ArrayIndexOutOfBoundsException    [CONTEXT]      if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }      [BUGGY]  }  else  if(o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  [BUGGY]      return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	replace	}  else  if(o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }	  }    else    if(o    instanceof    JsonArray)    {    return    JsonToken.BEGIN_ARRAY;    	non-compiled	[CE]  illegal  start  of  type	175	None	replace
866	[BUG]  [BUGGY]  }  else  if(o  instanceof  JsonNull)  {  return  JsonToken.BEGIN_ARRAY;  }  [CE]  illegal  start  of  type  [FE]        ArrayIndexOutOfBoundsException    [CONTEXT]      if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }      [BUGGY]  }  else  if(o  instanceof  JsonNull)  {  return  JsonToken.BEGIN_ARRAY;  }  [BUGGY]      return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	replace	}  else  if(o  instanceof  JsonNull)  {  return  JsonToken.BEGIN_ARRAY;  }	  }    else    if(o    instanceof    JsonArray)    {    return    JsonToken.BEGIN_ARRAY;    	non-compiled	[CE]  illegal  start  of  type	175	None	replace
867	[BUG]  [BUGGY]  }  else  if(o  instanceof  JsonType)  {  return  JsonToken.BEGIN_ARRAY;  }  [CE]  illegal  start  of  type  [FE]          ArrayIndexOutOfBoundsException    [CONTEXT]      if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }      [BUGGY]  }  else  if(o  instanceof  JsonType)  {  return  JsonToken.BEGIN_ARRAY;  }  [BUGGY]      return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	replace	}  else  if(o  instanceof  JsonType)  {  return  JsonToken.BEGIN_ARRAY;  }	  }    else    if(o    instanceof    JsonArray)    {    return    JsonToken.BEGIN_ARRAY;    	non-compiled	[CE]  illegal  start  of  type	175	None	replace
868	[BUG]  [BUGGY]  }  else  if(o  instanceof  String)  {  return  JsonToken.BEGIN_ARRAY;  }  [CE]  illegal  start  of  type  [FE]            ArrayIndexOutOfBoundsException    [CONTEXT]      if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }      [BUGGY]  }  else  if(o  instanceof  String)  {  return  JsonToken.BEGIN_ARRAY;  }  [BUGGY]      return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	replace	}  else  if(o  instanceof  String)  {  return  JsonToken.BEGIN_ARRAY;  }	  }    else    if(o    instanceof    JsonArray)    {    return    JsonToken.BEGIN_ARRAY;    	non-compiled	[CE]  illegal  start  of  type	175	None	replace
869	[BUG]  [BUGGY]  Object[]  stack  =(Object[])o;  push(stack.size()  -  stack.length);  return  JsonToken.BEGIN_ARRAY;  [CE]  cannot  find  symbol  [FE]                                    ArrayIndexOutOfBoundsException      [CONTEXT]      if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }      [BUGGY]  Object[]  stack  =(Object[])o;  push(stack.size()  -  stack.length);  return  JsonToken.BEGIN_ARRAY;  [BUGGY]      return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	replace	Object[]  stack  =(Object[])o;  push(stack.size()  -  stack.length);  return  JsonToken.BEGIN_ARRAY;	  if(o    instanceof    JsonArray)    {    Object[]    stack    =(Object[])o;    push(stack.size()    -    stack.length);    return    JsonToken.BEGIN_ARRAY;    }    	non-compiled	[CE]  cannot  find  symbol	40	None	replace
870	[BUG]  [BUGGY]  pom(stack.size()  -  stack.length);  return  JsonToken.BEGIN_ARRAY;  [CE]  cannot  find  symbol  [FE]                                      ArrayIndexOutOfBoundsException      [CONTEXT]      if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }      [BUGGY]  pom(stack.size()  -  stack.length);  return  JsonToken.BEGIN_ARRAY;  [BUGGY]      return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	replace	pom(stack.size()  -  stack.length);  return  JsonToken.BEGIN_ARRAY;	  if(o    instanceof    JsonArray)    {    Object[]    stack    =(Object[])o;    push(stack.size()    -    stack.length);    return    JsonToken.BEGIN_ARRAY;    }    	non-compiled	[CE]  cannot  find  symbol	40	None	replace
871	[BUG]  [BUGGY]  pull(stack.size()  -  stack.length);  return  JsonToken.BEGIN_ARRAY;  [CE]  cannot  find  symbol  [FE]                                        ArrayIndexOutOfBoundsException      [CONTEXT]      if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }      [BUGGY]  pull(stack.size()  -  stack.length);  return  JsonToken.BEGIN_ARRAY;  [BUGGY]      return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	replace	pull(stack.size()  -  stack.length);  return  JsonToken.BEGIN_ARRAY;	  if(o    instanceof    JsonArray)    {    Object[]    stack    =(Object[])o;    push(stack.size()    -    stack.length);    return    JsonToken.BEGIN_ARRAY;    }    	non-compiled	[CE]  cannot  find  symbol	40	None	replace
872	[BUG]  [BUGGY]  Stack  stack  =(Object[])o;  push(stack.size()  -  stack.length);  return  JsonToken.BEGIN_ARRAY;  [CE]  cannot  find  symbol  [FE]                                          ArrayIndexOutOfBoundsException      [CONTEXT]      if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }      [BUGGY]  Stack  stack  =(Object[])o;  push(stack.size()  -  stack.length);  return  JsonToken.BEGIN_ARRAY;  [BUGGY]      return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	replace	Stack  stack  =(Object[])o;  push(stack.size()  -  stack.length);  return  JsonToken.BEGIN_ARRAY;	  if(o    instanceof    JsonArray)    {    Object[]    stack    =(Object[])o;    push(stack.size()    -    stack.length);    return    JsonToken.BEGIN_ARRAY;    }    	non-compiled	[CE]  cannot  find  symbol	40	None	replace
873	[BUG]  [BUGGY]  Stack[]  stack  =(Stack[])o;  push(stack.size()  -  stack.length);  return  JsonToken.BEGIN_ARRAY;  [CE]  cannot  find  symbol  [FE]                                            ArrayIndexOutOfBoundsException      [CONTEXT]      if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }      [BUGGY]  Stack[]  stack  =(Stack[])o;  push(stack.size()  -  stack.length);  return  JsonToken.BEGIN_ARRAY;  [BUGGY]      return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	replace	Stack[]  stack  =(Stack[])o;  push(stack.size()  -  stack.length);  return  JsonToken.BEGIN_ARRAY;	  if(o    instanceof    JsonArray)    {    Object[]    stack    =(Object[])o;    push(stack.size()    -    stack.length);    return    JsonToken.BEGIN_ARRAY;    }    	non-compiled	[CE]  cannot  find  symbol	40	None	replace
874	[BUG]  [BUGGY]  push(stack.size()  -  stack.length);  return  JsonToken.BEGIN_ARRAY;  [CE]  cannot  find  symbol  [FE]                                              ArrayIndexOutOfBoundsException      [CONTEXT]      if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }      [BUGGY]  push(stack.size()  -  stack.length);  return  JsonToken.BEGIN_ARRAY;  [BUGGY]      return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	replace	push(stack.size()  -  stack.length);  return  JsonToken.BEGIN_ARRAY;	  if(o    instanceof    JsonArray)    {    Object[]    stack    =(Object[])o;    push(stack.size()    -    stack.length);    return    JsonToken.BEGIN_ARRAY;    }    	non-compiled	[CE]  cannot  find  symbol	40	None	replace
875	[BUG]  [BUGGY]  }  else  if(o  instanceof  JsonObject  &&  o  instanceof  JsonEnum)  {  [CE]  cannot  find  symbol  [FE]              ArrayIndexOutOfBoundsException      [CONTEXT]      if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }      [BUGGY]  }  else  if(o  instanceof  JsonObject  &&  o  instanceof  JsonEnum)  {  [BUGGY]      return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	replace	}  else  if(o  instanceof  JsonObject  &&  o  instanceof  JsonEnum)  {	  }    else    if(o    instanceof    JsonObject    ||    o    instanceof    JsonEnum)    {    	non-compiled	[CE]  cannot  find  symbol	46	None	replace
876	[BUG]  [BUGGY]  }  else  if(o  instanceof  JsonObject  ||!(o  instanceof  JsonEnum))  {  [CE]  cannot  find  symbol  [FE]                ArrayIndexOutOfBoundsException      [CONTEXT]      if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }      [BUGGY]  }  else  if(o  instanceof  JsonObject  ||!(o  instanceof  JsonEnum))  {  [BUGGY]      return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	replace	}  else  if(o  instanceof  JsonObject  ||!(o  instanceof  JsonEnum))  {	  }    else    if(o    instanceof    JsonObject    ||    o    instanceof    JsonEnum)    {    	non-compiled	[CE]  cannot  find  symbol	46	None	replace
877	[BUG]  [BUGGY]  }  else  if(o  instanceof  JsonObject  ||  o  instanceof  JsonEnum  ||  isObject)  {  [CE]  cannot  find  symbol  [FE]                  ArrayIndexOutOfBoundsException      [CONTEXT]      if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }      [BUGGY]  }  else  if(o  instanceof  JsonObject  ||  o  instanceof  JsonEnum  ||  isObject)  {  [BUGGY]      return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	replace	}  else  if(o  instanceof  JsonObject  ||  o  instanceof  JsonEnum  ||  isObject)  {	  }    else    if(o    instanceof    JsonObject    ||    o    instanceof    JsonEnum)    {    	non-compiled	[CE]  cannot  find  symbol	46	None	replace
878	[BUG]  [BUGGY]  }  else  if(o  instanceof  JsonArray  &&  isObject)  {  [CE]  cannot  find  symbol  isObject  [FE]                  ArrayIndexOutOfBoundsException      [CONTEXT]      if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }      [BUGGY]  }  else  if(o  instanceof  JsonArray  &&  isObject)  {  [BUGGY]      return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	replace	}  else  if(o  instanceof  JsonArray  &&  isObject)  {	  }    else    if(o    instanceof    JsonObject    <?>    &&    isObject)    {    	non-compiled	[CE]  cannot  find  symbol  isObject	78	None	replace
879	[BUG]  [BUGGY]  }  else  if(o  instanceof  JsonObject  <?>  &&  isObject  ||  isObject)  {  [CE]  type  JsonObject  does  not  take  parameters  [FE]                    ArrayIndexOutOfBoundsException      [CONTEXT]      if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }      [BUGGY]  }  else  if(o  instanceof  JsonObject  <?>  &&  isObject  ||  isObject)  {  [BUGGY]      return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	replace	}  else  if(o  instanceof  JsonObject  <?>  &&  isObject  ||  isObject)  {	  }    else    if(o    instanceof    JsonObject    <?>    &&    isObject)    {    	non-compiled	[CE]  type  JsonObject  does  not  take  parameters	78	None	replace
880	[BUG]  [BUGGY]  }  else  if(o  instanceof  JsonPrimitive)  {  }  else  if(o  instanceof  JsonPrimitive)  {  return  JsonToken.BEGIN_OBJECT;  }  [CE]  illegal  start  of  type  [FE]            AssertionError      [CONTEXT]      if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }      [BUGGY]  }  else  if(o  instanceof  JsonPrimitive)  {  }  else  if(o  instanceof  JsonPrimitive)  {  return  JsonToken.BEGIN_OBJECT;  }  [BUGGY]      return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	replace	}  else  if(o  instanceof  JsonPrimitive)  {  }  else  if(o  instanceof  JsonPrimitive)  {  return  JsonToken.BEGIN_OBJECT;  }	  }    else    if(o    instanceof    JsonArray)    {    }    else    if(o    instanceof    JsonArray)    <    return    JsonToken.BEGIN_OBJECT;    	non-compiled	[CE]  illegal  start  of  type	100	None	replace
881	[BUG]  [BUGGY]  }  else  if(o  instanceof  JsonType)  {  }  else  if(o  instanceof  JsonType)  {  return  JsonToken.BEGIN_OBJECT;  }  [CE]  illegal  start  of  type  [FE]              AssertionError      [CONTEXT]      if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }      [BUGGY]  }  else  if(o  instanceof  JsonType)  {  }  else  if(o  instanceof  JsonType)  {  return  JsonToken.BEGIN_OBJECT;  }  [BUGGY]      return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	replace	}  else  if(o  instanceof  JsonType)  {  }  else  if(o  instanceof  JsonType)  {  return  JsonToken.BEGIN_OBJECT;  }	  }    else    if(o    instanceof    JsonArray)    {    }    else    if(o    instanceof    JsonArray)    <    return    JsonToken.BEGIN_OBJECT;    	non-compiled	[CE]  illegal  start  of  type	100	None	replace
882	[BUG]  [BUGGY]  }  else  if(o  instanceof  JsonPrimitive)  {  }  else  if(o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_OBJECT;  }  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]      if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }      [BUGGY]  }  else  if(o  instanceof  JsonPrimitive)  {  }  else  if(o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_OBJECT;  }  [BUGGY]      return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	replace	}  else  if(o  instanceof  JsonPrimitive)  {  }  else  if(o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_OBJECT;  }	  }    else    if(o    instanceof    JsonArray)    {    }    else    if(o    instanceof    JsonArray)    <    return    JsonToken.BEGIN_OBJECT;    	non-compiled	[CE]  illegal  start  of  type	100	None	replace
883	[BUG]  [BUGGY]  }  else  if(o  instanceof  JsonString)  {  }  else  if(o  instanceof  JsonString)  {  return  JsonToken.BEGIN_OBJECT;  }  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]      if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }      [BUGGY]  }  else  if(o  instanceof  JsonString)  {  }  else  if(o  instanceof  JsonString)  {  return  JsonToken.BEGIN_OBJECT;  }  [BUGGY]      return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	replace	}  else  if(o  instanceof  JsonString)  {  }  else  if(o  instanceof  JsonString)  {  return  JsonToken.BEGIN_OBJECT;  }	  }    else    if(o    instanceof    JsonArray)    {    }    else    if(o    instanceof    JsonArray)    <    return    JsonToken.BEGIN_OBJECT;    	non-compiled	[CE]  illegal  start  of  type	100	None	replace
884	[BUG]  [BUGGY]  }  else  if(o  instanceof  JsonObject  &&  o  instanceof  JsonArray)  {  ArrayIndexOutOfBoundsException  e  =  new  ArrayIndexOutOfBoundsException(pathNames[0],  pathNames[1]);  [CE]  no  suitable  constructor  found  for  ArrayIndexOutOfBoundsException(String,String)  [FE]            ArrayIndexOutOfBoundsException      [CONTEXT]      if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }      [BUGGY]  }  else  if(o  instanceof  JsonObject  &&  o  instanceof  JsonArray)  {  ArrayIndexOutOfBoundsException  e  =  new  ArrayIndexOutOfBoundsException(pathNames[0],  pathNames[1]);  [BUGGY]      return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	replace	}  else  if(o  instanceof  JsonObject  &&  o  instanceof  JsonArray)  {  ArrayIndexOutOfBoundsException  e  =  new  ArrayIndexOutOfBoundsException(pathNames[0],  pathNames[1]);	  }    else    if(o    instanceof    JsonObject    ||    o    instanceof    JsonArray)    {    ArrayIndexOutOfBoundsException    e    =    new    ArrayIndexOutOfBoundsException(pathNames[0],    pathNames[1]);    	non-compiled	[CE]  no  suitable  constructor  found  for  ArrayIndexOutOfBoundsException(String,String)	195	None	replace
885	[BUG]  [BUGGY]  }  else  if(o  instanceof  JsonObject  ||  o  instanceof  JsonNull)  {  ArrayIndexOutOfBoundsException  e  =  new  ArrayIndexOutOfBoundsException(pathNames[0],  pathNames[1]);  [CE]  no  suitable  constructor  found  for  ArrayIndexOutOfBoundsException(String,String)  [FE]              ArrayIndexOutOfBoundsException      [CONTEXT]      if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }      [BUGGY]  }  else  if(o  instanceof  JsonObject  ||  o  instanceof  JsonNull)  {  ArrayIndexOutOfBoundsException  e  =  new  ArrayIndexOutOfBoundsException(pathNames[0],  pathNames[1]);  [BUGGY]      return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	replace	}  else  if(o  instanceof  JsonObject  ||  o  instanceof  JsonNull)  {  ArrayIndexOutOfBoundsException  e  =  new  ArrayIndexOutOfBoundsException(pathNames[0],  pathNames[1]);	  }    else    if(o    instanceof    JsonObject    ||    o    instanceof    JsonArray)    {    ArrayIndexOutOfBoundsException    e    =    new    ArrayIndexOutOfBoundsException(pathNames[0],    pathNames[1]);    	non-compiled	[CE]  no  suitable  constructor  found  for  ArrayIndexOutOfBoundsException(String,String)	195	None	replace
886	[BUG]  [BUGGY]  }  else  if(o  instanceof  JsonObject  ||  o  instanceof  JsonType)  {  ArrayIndexOutOfBoundsException  e  =  new  ArrayIndexOutOfBoundsException(pathNames[0],  pathNames[1]);  [CE]  cannot  find  symbol  [FE]                ArrayIndexOutOfBoundsException      [CONTEXT]      if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }      [BUGGY]  }  else  if(o  instanceof  JsonObject  ||  o  instanceof  JsonType)  {  ArrayIndexOutOfBoundsException  e  =  new  ArrayIndexOutOfBoundsException(pathNames[0],  pathNames[1]);  [BUGGY]      return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	replace	}  else  if(o  instanceof  JsonObject  ||  o  instanceof  JsonType)  {  ArrayIndexOutOfBoundsException  e  =  new  ArrayIndexOutOfBoundsException(pathNames[0],  pathNames[1]);	  }    else    if(o    instanceof    JsonObject    ||    o    instanceof    JsonArray)    {    ArrayIndexOutOfBoundsException    e    =    new    ArrayIndexOutOfBoundsException(pathNames[0],    pathNames[1]);    	non-compiled	[CE]  cannot  find  symbol	195	None	replace
887	[BUG]  [BUGGY]  }  else  if(o  instanceof  JsonObject  ||  o  instanceof  JsonArray  ||  pathNames[0]  instanceof  JsonArray)  {  ArrayIndexOutOfBoundsException  e  =  new  ArrayIndexOutOfBoundsException(pathNames[0],  pathNames[1]);  [CE]  inconvertible  types  [FE]                  ArrayIndexOutOfBoundsException      [CONTEXT]      if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }      [BUGGY]  }  else  if(o  instanceof  JsonObject  ||  o  instanceof  JsonArray  ||  pathNames[0]  instanceof  JsonArray)  {  ArrayIndexOutOfBoundsException  e  =  new  ArrayIndexOutOfBoundsException(pathNames[0],  pathNames[1]);  [BUGGY]      return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	replace	}  else  if(o  instanceof  JsonObject  ||  o  instanceof  JsonArray  ||  pathNames[0]  instanceof  JsonArray)  {  ArrayIndexOutOfBoundsException  e  =  new  ArrayIndexOutOfBoundsException(pathNames[0],  pathNames[1]);	  }    else    if(o    instanceof    JsonObject    ||    o    instanceof    JsonArray)    {    ArrayIndexOutOfBoundsException    e    =    new    ArrayIndexOutOfBoundsException(pathNames[0],    pathNames[1]);    	non-compiled	[CE]  inconvertible  types	195	None	replace
888	[BUG]  [BUGGY]  }  else  if(o  instanceof  String)  {  }  else  if(o  instanceof  JsonNull)  {  return  JsonToken.NUMBER_OBJECT;  }  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]      if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }      [BUGGY]  }  else  if(o  instanceof  String)  {  }  else  if(o  instanceof  JsonNull)  {  return  JsonToken.NUMBER_OBJECT;  }  [BUGGY]      return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	replace	}  else  if(o  instanceof  String)  {  }  else  if(o  instanceof  JsonNull)  {  return  JsonToken.NUMBER_OBJECT;  }	  }    else    if(o    instanceof    JsonNull)    {    }    else    if(o    instanceof    JsonNull)    <    return    JsonToken.NUMBER_OBJECT;    	non-compiled	[CE]  illegal  start  of  type	74	None	replace
889	[BUG]  [BUGGY]  }  else  if(o  instanceof  JsonArray)  {  }  else  if(o  instanceof  JsonNull)  {  return  JsonToken.NUMBER_OBJECT;  }  [CE]  illegal  start  of  type  [FE]                    AssertionError      [CONTEXT]      if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }      [BUGGY]  }  else  if(o  instanceof  JsonArray)  {  }  else  if(o  instanceof  JsonNull)  {  return  JsonToken.NUMBER_OBJECT;  }  [BUGGY]      return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	replace	}  else  if(o  instanceof  JsonArray)  {  }  else  if(o  instanceof  JsonNull)  {  return  JsonToken.NUMBER_OBJECT;  }	  }    else    if(o    instanceof    JsonNull)    {    }    else    if(o    instanceof    JsonNull)    <    return    JsonToken.NUMBER_OBJECT;    	non-compiled	[CE]  illegal  start  of  type	74	None	replace
890	[BUG]  [BUGGY]  }  else  if(o  instanceof  JsonNull)  {  }  else  if(o  instanceof  String)  {  return  JsonToken.NUMBER_OBJECT;  }  [CE]  illegal  start  of  type  [FE]                      AssertionError      [CONTEXT]      if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }      [BUGGY]  }  else  if(o  instanceof  JsonNull)  {  }  else  if(o  instanceof  String)  {  return  JsonToken.NUMBER_OBJECT;  }  [BUGGY]      return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	replace	}  else  if(o  instanceof  JsonNull)  {  }  else  if(o  instanceof  String)  {  return  JsonToken.NUMBER_OBJECT;  }	  }    else    if(o    instanceof    JsonNull)    {    }    else    if(o    instanceof    JsonNull)    <    return    JsonToken.NUMBER_OBJECT;    	non-compiled	[CE]  illegal  start  of  type	74	None	replace
891	[BUG]  [BUGGY]  }  else  if(o  instanceof  JsonNull)  {  }  else  if(o  instanceof  Number)  {  return  JsonToken.NUMBER_OBJECT;  }  [CE]  illegal  start  of  type  [FE]                        AssertionError      [CONTEXT]      if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }      [BUGGY]  }  else  if(o  instanceof  JsonNull)  {  }  else  if(o  instanceof  Number)  {  return  JsonToken.NUMBER_OBJECT;  }  [BUGGY]      return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	replace	}  else  if(o  instanceof  JsonNull)  {  }  else  if(o  instanceof  Number)  {  return  JsonToken.NUMBER_OBJECT;  }	  }    else    if(o    instanceof    JsonNull)    {    }    else    if(o    instanceof    JsonNull)    <    return    JsonToken.NUMBER_OBJECT;    	non-compiled	[CE]  illegal  start  of  type	74	None	replace
892	[BUG]  [BUGGY]  }  else  if(o  instanceof  JsonNull)  {  }  else  if(o  instanceof  JsonNull  ||  o  instanceof  JsonNull)  {  return  JsonToken.NUMBER_OBJECT;  }  [CE]  illegal  start  of  type  [FE]                          AssertionError      [CONTEXT]      if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }      [BUGGY]  }  else  if(o  instanceof  JsonNull)  {  }  else  if(o  instanceof  JsonNull  ||  o  instanceof  JsonNull)  {  return  JsonToken.NUMBER_OBJECT;  }  [BUGGY]      return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	replace	}  else  if(o  instanceof  JsonNull)  {  }  else  if(o  instanceof  JsonNull  ||  o  instanceof  JsonNull)  {  return  JsonToken.NUMBER_OBJECT;  }	  }    else    if(o    instanceof    JsonNull)    {    }    else    if(o    instanceof    JsonNull)    <    return    JsonToken.NUMBER_OBJECT;    	non-compiled	[CE]  illegal  start  of  type	74	None	replace
893	[BUG]  [BUGGY]  }  else  if(o  instanceof  JsonString  ||  o  instanceof  String)  {  [CE]  cannot  find  symbol  [FE]                ArrayIndexOutOfBoundsException      [CONTEXT]      if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }      [BUGGY]  }  else  if(o  instanceof  JsonString  ||  o  instanceof  String)  {  [BUGGY]      return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	replace	}  else  if(o  instanceof  JsonString  ||  o  instanceof  String)  {	  }    else    if(o    instanceof    JsonObject    ||    o    instanceof    String)    {    }    else    if(o    instanceof    JsonObject    ||    o    instanceof    String)    <    return    JsonToken.BEGIN_OBJECT;    }    else    if(o    instanceof    JsonObject    ||    o    instanceof    String)    {    	non-compiled	[CE]  cannot  find  symbol	20	None	replace
894	[BUG]  [BUGGY]  }  else  if(!(o  instanceof  String))  {  }  else  if(!(o  instanceof  JsonString))  {  return  JsonToken.BEGIN_OBJECT;  }  [CE]  illegal  start  of  type  [FE]          ArrayIndexOutOfBoundsException      [CONTEXT]      if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }      [BUGGY]  }  else  if(!(o  instanceof  String))  {  }  else  if(!(o  instanceof  JsonString))  {  return  JsonToken.BEGIN_OBJECT;  }  [BUGGY]      return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	replace	}  else  if(!(o  instanceof  String))  {  }  else  if(!(o  instanceof  JsonString))  {  return  JsonToken.BEGIN_OBJECT;  }	  }    else    if(!(o    instanceof    JsonArray))    {    }    else    if(!(o    instanceof    JsonArray))    <    return    JsonToken.BEGIN_OBJECT;    	non-compiled	[CE]  illegal  start  of  type	84	None	replace
895	[BUG]  [BUGGY]  }  else  if(!(o  instanceof  String))  {  }  else  if(!(o  instanceof  JsonArray))  {  return  JsonToken.BEGIN_OBJECT;  }  [CE]  illegal  start  of  type  [FE]            ArrayIndexOutOfBoundsException      [CONTEXT]      if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }      [BUGGY]  }  else  if(!(o  instanceof  String))  {  }  else  if(!(o  instanceof  JsonArray))  {  return  JsonToken.BEGIN_OBJECT;  }  [BUGGY]      return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	replace	}  else  if(!(o  instanceof  String))  {  }  else  if(!(o  instanceof  JsonArray))  {  return  JsonToken.BEGIN_OBJECT;  }	  }    else    if(!(o    instanceof    JsonArray))    {    }    else    if(!(o    instanceof    JsonArray))    <    return    JsonToken.BEGIN_OBJECT;    	non-compiled	[CE]  illegal  start  of  type	84	None	replace
896	[BUG]  [BUGGY]  }  else  if(!(o  instanceof  JsonNull))  {  }  else  if(!(o  instanceof  JsonNull))  {  return  JsonToken.BEGIN_OBJECT;  }  [CE]  illegal  start  of  type  [FE]              ArrayIndexOutOfBoundsException      [CONTEXT]      if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }      [BUGGY]  }  else  if(!(o  instanceof  JsonNull))  {  }  else  if(!(o  instanceof  JsonNull))  {  return  JsonToken.BEGIN_OBJECT;  }  [BUGGY]      return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	replace	}  else  if(!(o  instanceof  JsonNull))  {  }  else  if(!(o  instanceof  JsonNull))  {  return  JsonToken.BEGIN_OBJECT;  }	  }    else    if(!(o    instanceof    JsonArray))    {    }    else    if(!(o    instanceof    JsonArray))    <    return    JsonToken.BEGIN_OBJECT;    	non-compiled	[CE]  illegal  start  of  type	84	None	replace
897	[BUG]  [BUGGY]  [FE]  ArrayIndexOutOfBoundsException  [FE]        ArrayIndexOutOfBoundsException      [CONTEXT]      if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }      [BUGGY]  }  else  if(!(o  instanceof  Number))  {  [BUGGY]      return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	add	}  else  if(!(o  instanceof  Number))  {	  }    else    if(!(o    instanceof    JsonArray))    {    }    else    if(!(o    instanceof    JsonArray))    {    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	83	2	replace
898	[BUG]  [BUGGY]  }  else  if(!(o  instanceof  Number))  {  [FE]  ArrayIndexOutOfBoundsException  [FE]        ArrayIndexOutOfBoundsException      [CONTEXT]      if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }      [BUGGY]  }  else  if(!(o  instanceof  Number))  {  [BUGGY]      return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	replace	}  else  if(!(o  instanceof  Number))  {	  }    else    if(!(o    instanceof    JsonArray))    {    }    else    if(!(o    instanceof    JsonArray))    {    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	83	2	replace
899	[BUG]  [BUGGY]  }  else  if(o  instanceof  JsonPrimitive)  {  }  else  if(o  instanceof  JsonPrimitive)  {  return  JsonToken.BEGIN_ARRAY;  }  [CE]  illegal  start  of  type  [FE]            AssertionError      [CONTEXT]      if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }      [BUGGY]  }  else  if(o  instanceof  JsonPrimitive)  {  }  else  if(o  instanceof  JsonPrimitive)  {  return  JsonToken.BEGIN_ARRAY;  }  [BUGGY]      return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	replace	}  else  if(o  instanceof  JsonPrimitive)  {  }  else  if(o  instanceof  JsonPrimitive)  {  return  JsonToken.BEGIN_ARRAY;  }	  }    else    if(o    instanceof    JsonArray)    {    }    else    if(o    instanceof    JsonArray)    <    return    JsonToken.BEGIN_ARRAY;    	non-compiled	[CE]  illegal  start  of  type	204	None	replace
900	[BUG]  [BUGGY]  }  else  if(o  instanceof  JsonNull)  {  }  else  if(o  instanceof  JsonNull)  {  return  JsonToken.BEGIN_ARRAY;  }  [CE]  illegal  start  of  type  [FE]              AssertionError      [CONTEXT]      if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }      [BUGGY]  }  else  if(o  instanceof  JsonNull)  {  }  else  if(o  instanceof  JsonNull)  {  return  JsonToken.BEGIN_ARRAY;  }  [BUGGY]      return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	replace	}  else  if(o  instanceof  JsonNull)  {  }  else  if(o  instanceof  JsonNull)  {  return  JsonToken.BEGIN_ARRAY;  }	  }    else    if(o    instanceof    JsonArray)    {    }    else    if(o    instanceof    JsonArray)    <    return    JsonToken.BEGIN_ARRAY;    	non-compiled	[CE]  illegal  start  of  type	204	None	replace
901	[BUG]  [BUGGY]  }  else  if(o  instanceof  JsonType)  {  }  else  if(o  instanceof  JsonType)  {  return  JsonToken.BEGIN_ARRAY;  }  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]      if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }      [BUGGY]  }  else  if(o  instanceof  JsonType)  {  }  else  if(o  instanceof  JsonType)  {  return  JsonToken.BEGIN_ARRAY;  }  [BUGGY]      return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	replace	}  else  if(o  instanceof  JsonType)  {  }  else  if(o  instanceof  JsonType)  {  return  JsonToken.BEGIN_ARRAY;  }	  }    else    if(o    instanceof    JsonArray)    {    }    else    if(o    instanceof    JsonArray)    <    return    JsonToken.BEGIN_ARRAY;    	non-compiled	[CE]  illegal  start  of  type	204	None	replace
902	[BUG]  [BUGGY]  }  else  if(o  instanceof  JsonNumber)  {  }  else  if(o  instanceof  JsonNumber)  {  return  JsonToken.BEGIN_ARRAY;  }  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]      if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }      [BUGGY]  }  else  if(o  instanceof  JsonNumber)  {  }  else  if(o  instanceof  JsonNumber)  {  return  JsonToken.BEGIN_ARRAY;  }  [BUGGY]      return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	replace	}  else  if(o  instanceof  JsonNumber)  {  }  else  if(o  instanceof  JsonNumber)  {  return  JsonToken.BEGIN_ARRAY;  }	  }    else    if(o    instanceof    JsonArray)    {    }    else    if(o    instanceof    JsonArray)    <    return    JsonToken.BEGIN_ARRAY;    	non-compiled	[CE]  illegal  start  of  type	204	None	replace
903	[BUG]  [BUGGY]  }  else  if(o  instanceof  JsonPrimitive)  {  }  else  if(o  instanceof  Boolean)  {  return  JsonToken.BEGIN_ARRAY;  }  [CE]  illegal  start  of  type  [FE]                    AssertionError      [CONTEXT]      if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }      [BUGGY]  }  else  if(o  instanceof  JsonPrimitive)  {  }  else  if(o  instanceof  Boolean)  {  return  JsonToken.BEGIN_ARRAY;  }  [BUGGY]      return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	replace	}  else  if(o  instanceof  JsonPrimitive)  {  }  else  if(o  instanceof  Boolean)  {  return  JsonToken.BEGIN_ARRAY;  }	  }    else    if(o    instanceof    JsonArray)    {    }    else    if(o    instanceof    JsonArray)    <    return    JsonToken.BEGIN_ARRAY;    	non-compiled	[CE]  illegal  start  of  type	204	None	replace
904	[BUG]  [BUGGY]  [FE]  ArrayIndexOutOfBoundsException  [FE]          ArrayIndexOutOfBoundsException      [CONTEXT]      if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }      [BUGGY]  }  else  if(o  instanceof  JsonObject  ||  o  instanceof  Long)  {  [BUGGY]      return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	add	}  else  if(o  instanceof  JsonObject  ||  o  instanceof  Long)  {	  }    else    if(o    instanceof    JsonObject    ||    o    instanceof    String)    {    else    if(o    instanceof    JsonObject    ||    o    instanceof    String)    {    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	17	2	replace
905	[BUG]  [BUGGY]  }  else  if(o  instanceof  JsonObject  ||  o  instanceof  Long)  {  [FE]  ArrayIndexOutOfBoundsException  [FE]          ArrayIndexOutOfBoundsException      [CONTEXT]      if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }      [BUGGY]  }  else  if(o  instanceof  JsonObject  ||  o  instanceof  Long)  {  [BUGGY]      return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	replace	}  else  if(o  instanceof  JsonObject  ||  o  instanceof  Long)  {	  }    else    if(o    instanceof    JsonObject    ||    o    instanceof    String)    {    else    if(o    instanceof    JsonObject    ||    o    instanceof    String)    {    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	17	2	replace
906	[BUG]  [BUGGY]  }  else  if(o  instanceof  JsonNumber  &&  o  instanceof  JsonArray)  {  [CE]  cannot  find  symbol  [FE]                      ArrayIndexOutOfBoundsException      [CONTEXT]      if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }      [BUGGY]  }  else  if(o  instanceof  JsonNumber  &&  o  instanceof  JsonArray)  {  [BUGGY]      return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	replace	}  else  if(o  instanceof  JsonNumber  &&  o  instanceof  JsonArray)  {	  }    else    if(o    instanceof    JsonNumber    ||    o    instanceof    JsonArray)    {    	non-compiled	[CE]  cannot  find  symbol	113	None	replace
907	[BUG]  [BUGGY]  }  else  if(o  instanceof  JsonNumber  ||  o  instanceof  JsonArray  ||  isObject)  {  [CE]  cannot  find  symbol  [FE]                        ArrayIndexOutOfBoundsException      [CONTEXT]      if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }      [BUGGY]  }  else  if(o  instanceof  JsonNumber  ||  o  instanceof  JsonArray  ||  isObject)  {  [BUGGY]      return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	replace	}  else  if(o  instanceof  JsonNumber  ||  o  instanceof  JsonArray  ||  isObject)  {	  }    else    if(o    instanceof    JsonNumber    ||    o    instanceof    JsonArray)    {    	non-compiled	[CE]  cannot  find  symbol	113	None	replace
908	[BUG]  [BUGGY]  }  else  if(o  instanceof  JsonNumber  ||  o  instanceof  JsonArray  ||!(o  instanceof  JsonPrimitive))  {  [CE]  cannot  find  symbol  [FE]                          ArrayIndexOutOfBoundsException      [CONTEXT]      if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }      [BUGGY]  }  else  if(o  instanceof  JsonNumber  ||  o  instanceof  JsonArray  ||!(o  instanceof  JsonPrimitive))  {  [BUGGY]      return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	replace	}  else  if(o  instanceof  JsonNumber  ||  o  instanceof  JsonArray  ||!(o  instanceof  JsonPrimitive))  {	  }    else    if(o    instanceof    JsonNumber    ||    o    instanceof    JsonArray)    {    	non-compiled	[CE]  cannot  find  symbol	113	None	replace
909	[BUG]  [BUGGY]  }  else  if(o  instanceof  JsonNumber  ||!(o  instanceof  JsonArray))  {  [CE]  cannot  find  symbol  [FE]                            ArrayIndexOutOfBoundsException      [CONTEXT]      if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }      [BUGGY]  }  else  if(o  instanceof  JsonNumber  ||!(o  instanceof  JsonArray))  {  [BUGGY]      return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	replace	}  else  if(o  instanceof  JsonNumber  ||!(o  instanceof  JsonArray))  {	  }    else    if(o    instanceof    JsonNumber    ||    o    instanceof    JsonArray)    {    	non-compiled	[CE]  cannot  find  symbol	113	None	replace
910	[BUG]  [BUGGY]  }  else  if(!(o  instanceof  JsonArray)||!(o  instanceof  JsonArray))  {  }  else  if(!(o  instanceof  JsonArray)||!(o  instanceof  JsonArray))  {  [CE]  missing  return  statement  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]      if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }      [BUGGY]  }  else  if(!(o  instanceof  JsonArray)||!(o  instanceof  JsonArray))  {  }  else  if(!(o  instanceof  JsonArray)||!(o  instanceof  JsonArray))  {  [BUGGY]      return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	replace	}    else    if(!(o    instanceof    JsonArray)||!(o    instanceof    JsonArray))    {    }  else  if(!(o  instanceof  JsonArray)||!(o  instanceof  JsonArray))  {	  	non-compiled	[CE]  missing  return  statement	248	None	add
911	[BUG]  [BUGGY]  }  else  if(!(o  instanceof  JsonArray)||!(o  instanceof  JsonArray))  {  else  if(!(o  instanceof  JsonArray)||!(o  instanceof  JsonArray))  {  [CE]  'else'  without  'if'  [FE]      ArrayIndexOutOfBoundsException    [CONTEXT]      if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }      [BUGGY]  }  else  if(!(o  instanceof  JsonArray)||!(o  instanceof  JsonArray))  {  else  if(!(o  instanceof  JsonArray)||!(o  instanceof  JsonArray))  {  [BUGGY]      return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	replace	}    else    if(!(o    instanceof    JsonArray)||!(o    instanceof    JsonArray))    {    else  if(!(o  instanceof  JsonArray)||!(o  instanceof  JsonArray))  {	  	non-compiled	[CE]  'else'  without  'if'	248	None	add
912	[BUG]  [BUGGY]  }  else  if(!(o  instanceof  JsonArray)||!(o  instanceof  JsonArray))  {  <  }  else  if(!(o  instanceof  JsonArray)||!(o  instanceof  JsonArray))  {  [CE]  illegal  start  of  type  [FE]        ArrayIndexOutOfBoundsException    [CONTEXT]      if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }      [BUGGY]  }  else  if(!(o  instanceof  JsonArray)||!(o  instanceof  JsonArray))  {  <  }  else  if(!(o  instanceof  JsonArray)||!(o  instanceof  JsonArray))  {  [BUGGY]      return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	replace	}    else    if(!(o    instanceof    JsonArray)||!(o    instanceof    JsonArray))    {    <  }  else  if(!(o  instanceof  JsonArray)||!(o  instanceof  JsonArray))  {	  	non-compiled	[CE]  illegal  start  of  type	248	None	add
913	[BUG]  [BUGGY]  }  else  if(!(o  instanceof  JsonArray)||!(o  instanceof  JsonArray))  {  }  else  if(!(o  instanceof  JsonArray)&|!(o  instanceof  JsonArray))  {  [CE]  illegal  start  of  expression  [FE]          ArrayIndexOutOfBoundsException    [CONTEXT]      if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }      [BUGGY]  }  else  if(!(o  instanceof  JsonArray)||!(o  instanceof  JsonArray))  {  }  else  if(!(o  instanceof  JsonArray)&|!(o  instanceof  JsonArray))  {  [BUGGY]      return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	replace	}    else    if(!(o    instanceof    JsonArray)||!(o    instanceof    JsonArray))    {    }  else  if(!(o  instanceof  JsonArray)&|!(o  instanceof  JsonArray))  {	  	non-compiled	[CE]  illegal  start  of  expression	248	None	add
914	[BUG]  [BUGGY]  }  else  if(!(o  instanceof  JsonArray)||!(o  instanceof  JsonArray))  {  }  else  if(!(o  instanceof  JsonArray)&&!(o  instanceof  JsonArray))  {  [CE]  missing  return  statement  [FE]            ArrayIndexOutOfBoundsException    [CONTEXT]      if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }      [BUGGY]  }  else  if(!(o  instanceof  JsonArray)||!(o  instanceof  JsonArray))  {  }  else  if(!(o  instanceof  JsonArray)&&!(o  instanceof  JsonArray))  {  [BUGGY]      return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	replace	}    else    if(!(o    instanceof    JsonArray)||!(o    instanceof    JsonArray))    {    }  else  if(!(o  instanceof  JsonArray)&&!(o  instanceof  JsonArray))  {	  	non-compiled	[CE]  missing  return  statement	248	None	add
915	[BUG]  [BUGGY]  }  else  if(!(o  instanceof  JsonArray)||!(o  instanceof  JsonArray))  {  }  else  if(!(o  instanceof  JsonArray)||! "(o  instanceof  JsonArray))  {  [CE]  unclosed  string  literal  [FE]              ArrayIndexOutOfBoundsException    [CONTEXT]      if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }      [BUGGY]  }  else  if(!(o  instanceof  JsonArray)||!(o  instanceof  JsonArray))  {  }  else  if(!(o  instanceof  JsonArray)||! "(o  instanceof  JsonArray))  {  [BUGGY]      return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	replace	}    else    if(!(o    instanceof    JsonArray)||!(o    instanceof    JsonArray))    {    }  else  if(!(o  instanceof  JsonArray)||! "(o  instanceof  JsonArray))  {	  	non-compiled	[CE]  unclosed  string  literal	248	None	add
916	[BUG]  [BUGGY]  }  else  if(!(o  instanceof  JsonArray)||!(o  instanceof  JsonArray))  {  }  else  if(!(o  instanceof  JsonArray)||!(o  instanceof  JSONArray))  {  [CE]  cannot  find  symbol  [FE]                ArrayIndexOutOfBoundsException    [CONTEXT]      if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }      [BUGGY]  }  else  if(!(o  instanceof  JsonArray)||!(o  instanceof  JsonArray))  {  }  else  if(!(o  instanceof  JsonArray)||!(o  instanceof  JSONArray))  {  [BUGGY]      return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	replace	}    else    if(!(o    instanceof    JsonArray)||!(o    instanceof    JsonArray))    {    }  else  if(!(o  instanceof  JsonArray)||!(o  instanceof  JSONArray))  {	  	non-compiled	[CE]  cannot  find  symbol	248	None	add
917	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]          ArrayIndexOutOfBoundsException      [CONTEXT]      if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }      [BUGGY]  }  else  if(o  instanceof  Number)  {  [BUGGY]      return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	add	}  else  if(o  instanceof  Number)  {	  }    else    if(!(o    instanceof    JsonArray))    {    }    else    if(!(o    instanceof    JsonArray))    {    aught    return    JsonToken.BEGIN_OBJECT;    }    else    if(!(o    instanceof    JsonArray))    {    	compilable	  [FE]  AssertionError  	216	2	replace
918	[BUG]  [BUGGY]  }  else  if(o  instanceof  Number)  {  [FE]  AssertionError  [FE]          ArrayIndexOutOfBoundsException      [CONTEXT]      if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }      [BUGGY]  }  else  if(o  instanceof  Number)  {  [BUGGY]      return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	replace	}  else  if(o  instanceof  Number)  {	  }    else    if(!(o    instanceof    JsonArray))    {    }    else    if(!(o    instanceof    JsonArray))    {    aught    return    JsonToken.BEGIN_OBJECT;    }    else    if(!(o    instanceof    JsonArray))    {    	compilable	  [FE]  AssertionError  	216	2	replace
919	[BUG]  [BUGGY]  }  else  if(o  instanceof  JsonObject  ||  o  instanceof  JsonNull)  {  }  else  if(o  instanceof  JsonObject  ||  o  instanceof  JsonNull)  {  [CE]  missing  return  statement  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]      if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }      [BUGGY]  }  else  if(o  instanceof  JsonObject  ||  o  instanceof  JsonNull)  {  }  else  if(o  instanceof  JsonObject  ||  o  instanceof  JsonNull)  {  [BUGGY]      return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	replace	}    else    if(o    instanceof    JsonObject    ||    o    instanceof    JsonNull)    {    }  else  if(o  instanceof  JsonObject  ||  o  instanceof  JsonNull)  {	  	non-compiled	[CE]  missing  return  statement	44	None	add
920	[BUG]  [BUGGY]  }  else  if(o  instanceof  JsonObject  ||  o  instanceof  JsonNull)  {  else  if(o  instanceof  JsonObject  ||  o  instanceof  JsonNull)  {  [CE]  'else'  without  'if'  [FE]      ArrayIndexOutOfBoundsException    [CONTEXT]      if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }      [BUGGY]  }  else  if(o  instanceof  JsonObject  ||  o  instanceof  JsonNull)  {  else  if(o  instanceof  JsonObject  ||  o  instanceof  JsonNull)  {  [BUGGY]      return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	replace	}    else    if(o    instanceof    JsonObject    ||    o    instanceof    JsonNull)    {    else  if(o  instanceof  JsonObject  ||  o  instanceof  JsonNull)  {	  	non-compiled	[CE]  'else'  without  'if'	44	None	add
921	[BUG]  [BUGGY]  }  else  if(o  instanceof  JsonObject  ||  o  instanceof  JsonNull)  {  <  }  else  if(o  instanceof  JsonObject  ||  o  instanceof  JsonNull)  {  [CE]  illegal  start  of  type  [FE]        ArrayIndexOutOfBoundsException    [CONTEXT]      if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }      [BUGGY]  }  else  if(o  instanceof  JsonObject  ||  o  instanceof  JsonNull)  {  <  }  else  if(o  instanceof  JsonObject  ||  o  instanceof  JsonNull)  {  [BUGGY]      return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	replace	}    else    if(o    instanceof    JsonObject    ||    o    instanceof    JsonNull)    {    <  }  else  if(o  instanceof  JsonObject  ||  o  instanceof  JsonNull)  {	  	non-compiled	[CE]  illegal  start  of  type	44	None	add
922	[BUG]  [BUGGY]  }  else  if(o  instanceof  JsonObject  ||  o  instanceof  JsonNull)  {  }  else  if(o  instanceof  JSONObject  ||  o  instanceof  JsonNull)  {  [CE]  cannot  find  symbol  [FE]          ArrayIndexOutOfBoundsException    [CONTEXT]      if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }      [BUGGY]  }  else  if(o  instanceof  JsonObject  ||  o  instanceof  JsonNull)  {  }  else  if(o  instanceof  JSONObject  ||  o  instanceof  JsonNull)  {  [BUGGY]      return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	replace	}    else    if(o    instanceof    JsonObject    ||    o    instanceof    JsonNull)    {    }  else  if(o  instanceof  JSONObject  ||  o  instanceof  JsonNull)  {	  	non-compiled	[CE]  cannot  find  symbol	44	None	add
923	[BUG]  [BUGGY]  }  else  if(o  instanceof  JsonObject  ||  o  instanceof  JsonNull)  {  }  else  if(o  instanceof  JsonObject  ||  o  instanceof  JSONNull)  {  [CE]  cannot  find  symbol  [FE]            ArrayIndexOutOfBoundsException    [CONTEXT]      if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }      [BUGGY]  }  else  if(o  instanceof  JsonObject  ||  o  instanceof  JsonNull)  {  }  else  if(o  instanceof  JsonObject  ||  o  instanceof  JSONNull)  {  [BUGGY]      return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	replace	}    else    if(o    instanceof    JsonObject    ||    o    instanceof    JsonNull)    {    }  else  if(o  instanceof  JsonObject  ||  o  instanceof  JSONNull)  {	  	non-compiled	[CE]  cannot  find  symbol	44	None	add
924	[BUG]  [BUGGY]  }  else  if(o  instanceof  JsonObject  ||  o  instanceof  JsonNull)  {  }  else  if(e  instanceof  JsonObject  ||  o  instanceof  JsonNull)  {  [CE]  cannot  find  symbol  e  [FE]              ArrayIndexOutOfBoundsException    [CONTEXT]      if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }      [BUGGY]  }  else  if(o  instanceof  JsonObject  ||  o  instanceof  JsonNull)  {  }  else  if(e  instanceof  JsonObject  ||  o  instanceof  JsonNull)  {  [BUGGY]      return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	replace	}    else    if(o    instanceof    JsonObject    ||    o    instanceof    JsonNull)    {    }  else  if(e  instanceof  JsonObject  ||  o  instanceof  JsonNull)  {	  	non-compiled	[CE]  cannot  find  symbol  e	44	None	add
925	[BUG]  [BUGGY]  }  else  if(o  instanceof  JsonNull)  {  }  else  if(o  instanceof  JsonNull)  {  return  JsonToken.BEGIN_NULL;  }  [CE]  illegal  start  of  type  [FE]            AssertionError      [CONTEXT]      if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }      [BUGGY]  }  else  if(o  instanceof  JsonNull)  {  }  else  if(o  instanceof  JsonNull)  {  return  JsonToken.BEGIN_NULL;  }  [BUGGY]      return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	replace	}  else  if(o  instanceof  JsonNull)  {  }  else  if(o  instanceof  JsonNull)  {  return  JsonToken.BEGIN_NULL;  }	  }    else    if(o    instanceof    JsonNull)    {    }    else    if(o    instanceof    JsonNull)    <    return    JsonToken.BEGIN_NULL;    	non-compiled	[CE]  illegal  start  of  type	222	None	replace
926	[BUG]  [BUGGY]  }  else  if(o  instanceof  JsonArray)  {  }  else  if(o  instanceof  JsonNull)  {  return  JsonToken.BEGIN_NULL;  }  [CE]  illegal  start  of  type  [FE]              AssertionError      [CONTEXT]      if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }      [BUGGY]  }  else  if(o  instanceof  JsonArray)  {  }  else  if(o  instanceof  JsonNull)  {  return  JsonToken.BEGIN_NULL;  }  [BUGGY]      return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	replace	}  else  if(o  instanceof  JsonArray)  {  }  else  if(o  instanceof  JsonNull)  {  return  JsonToken.BEGIN_NULL;  }	  }    else    if(o    instanceof    JsonNull)    {    }    else    if(o    instanceof    JsonNull)    <    return    JsonToken.BEGIN_NULL;    	non-compiled	[CE]  illegal  start  of  type	222	None	replace
927	[BUG]  [BUGGY]  }  else  if(o  instanceof  JsonNull)  {  }  else  if(o  instanceof  JsonNull  <  =  JsonToken.BEGIN_NULL)  {  return  JsonToken.BEGIN_NULL;  }  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]      if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }      [BUGGY]  }  else  if(o  instanceof  JsonNull)  {  }  else  if(o  instanceof  JsonNull  <  =  JsonToken.BEGIN_NULL)  {  return  JsonToken.BEGIN_NULL;  }  [BUGGY]      return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	replace	}  else  if(o  instanceof  JsonNull)  {  }  else  if(o  instanceof  JsonNull  <  =  JsonToken.BEGIN_NULL)  {  return  JsonToken.BEGIN_NULL;  }	  }    else    if(o    instanceof    JsonNull)    {    }    else    if(o    instanceof    JsonNull)    <    return    JsonToken.BEGIN_NULL;    	non-compiled	[CE]  illegal  start  of  type	222	None	replace
928	[BUG]  [BUGGY]  }  else  if(o  instanceof  String)  {  }  else  if(o  instanceof  JsonNull)  {  return  JsonToken.BEGIN_NULL;  }  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]      if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }      [BUGGY]  }  else  if(o  instanceof  String)  {  }  else  if(o  instanceof  JsonNull)  {  return  JsonToken.BEGIN_NULL;  }  [BUGGY]      return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	replace	}  else  if(o  instanceof  String)  {  }  else  if(o  instanceof  JsonNull)  {  return  JsonToken.BEGIN_NULL;  }	  }    else    if(o    instanceof    JsonNull)    {    }    else    if(o    instanceof    JsonNull)    <    return    JsonToken.BEGIN_NULL;    	non-compiled	[CE]  illegal  start  of  type	222	None	replace
929	[BUG]  [BUGGY]  }  else  if(o  instanceof  JsonNull)  {  }  else  if(o  instanceof  JsonNull  ||  o  instanceof  JsonNull)  {  return  JsonToken.BEGIN_NULL;  }  [CE]  illegal  start  of  type  [FE]                    AssertionError      [CONTEXT]      if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }      [BUGGY]  }  else  if(o  instanceof  JsonNull)  {  }  else  if(o  instanceof  JsonNull  ||  o  instanceof  JsonNull)  {  return  JsonToken.BEGIN_NULL;  }  [BUGGY]      return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	replace	}  else  if(o  instanceof  JsonNull)  {  }  else  if(o  instanceof  JsonNull  ||  o  instanceof  JsonNull)  {  return  JsonToken.BEGIN_NULL;  }	  }    else    if(o    instanceof    JsonNull)    {    }    else    if(o    instanceof    JsonNull)    <    return    JsonToken.BEGIN_NULL;    	non-compiled	[CE]  illegal  start  of  type	222	None	replace
930	[BUG]  [BUGGY]  }  else  if(o  instanceof  JsonNumber)  {  }  else  if(o  instanceof  JsonNull)  {  return  JsonToken.BEGIN_NULL;  }  [CE]  illegal  start  of  type  [FE]                      AssertionError      [CONTEXT]      if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }      [BUGGY]  }  else  if(o  instanceof  JsonNumber)  {  }  else  if(o  instanceof  JsonNull)  {  return  JsonToken.BEGIN_NULL;  }  [BUGGY]      return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	replace	}  else  if(o  instanceof  JsonNumber)  {  }  else  if(o  instanceof  JsonNull)  {  return  JsonToken.BEGIN_NULL;  }	  }    else    if(o    instanceof    JsonNull)    {    }    else    if(o    instanceof    JsonNull)    <    return    JsonToken.BEGIN_NULL;    	non-compiled	[CE]  illegal  start  of  type	222	None	replace
931	[BUG]  [BUGGY]  }  else  if(!(o  instanceof  JsonPrimitive))  {  }  else  if(!(o  instanceof  JsonPrimitive))  {  [CE]  missing  return  statement  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]      if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }      [BUGGY]  }  else  if(!(o  instanceof  JsonPrimitive))  {  }  else  if(!(o  instanceof  JsonPrimitive))  {  [BUGGY]      return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	replace	}    else    if(!(o    instanceof    JsonPrimitive))    {    }  else  if(!(o  instanceof  JsonPrimitive))  {	  	non-compiled	[CE]  missing  return  statement	10	None	add
932	[BUG]  [BUGGY]  }  else  if(!(o  instanceof  JsonPrimitive))  {  }  else  if(!(o  instanceof  JsonPrimitive))  <  return  JsonToken.BEGIN_OBJECT;  [CE]  illegal  start  of  type  [FE]      ArrayIndexOutOfBoundsException    [CONTEXT]      if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }      [BUGGY]  }  else  if(!(o  instanceof  JsonPrimitive))  {  }  else  if(!(o  instanceof  JsonPrimitive))  <  return  JsonToken.BEGIN_OBJECT;  [BUGGY]      return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	replace	}    else    if(!(o    instanceof    JsonPrimitive))    {    }  else  if(!(o  instanceof  JsonPrimitive))  <  return  JsonToken.BEGIN_OBJECT;	  	non-compiled	[CE]  illegal  start  of  type	10	None	add
933	[BUG]  [BUGGY]  }  else  if(!(o  instanceof  JsonPrimitive))  {  }  else  if(!(o  instanceof  JsonPrimitive)  ||(o  instanceof  JsonArray))  {  [CE]  missing  return  statement  [FE]        ArrayIndexOutOfBoundsException    [CONTEXT]      if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }      [BUGGY]  }  else  if(!(o  instanceof  JsonPrimitive))  {  }  else  if(!(o  instanceof  JsonPrimitive)  ||(o  instanceof  JsonArray))  {  [BUGGY]      return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	replace	}    else    if(!(o    instanceof    JsonPrimitive))    {    }  else  if(!(o  instanceof  JsonPrimitive)  ||(o  instanceof  JsonArray))  {	  	non-compiled	[CE]  missing  return  statement	10	None	add
934	[BUG]  [BUGGY]  }  else  if(!(o  instanceof  JsonPrimitive))  {  }  else  if(!(o  instanceof  JsonPrimitive)  ||!(o  instanceof  JsonPrimitive))  {  [CE]  missing  return  statement  [FE]          ArrayIndexOutOfBoundsException    [CONTEXT]      if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }      [BUGGY]  }  else  if(!(o  instanceof  JsonPrimitive))  {  }  else  if(!(o  instanceof  JsonPrimitive)  ||!(o  instanceof  JsonPrimitive))  {  [BUGGY]      return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	replace	}    else    if(!(o    instanceof    JsonPrimitive))    {    }  else  if(!(o  instanceof  JsonPrimitive)  ||!(o  instanceof  JsonPrimitive))  {	  	non-compiled	[CE]  missing  return  statement	10	None	add
935	[BUG]  [BUGGY]  }  else  if(!(o  instanceof  JsonPrimitive))  {  <  }  else  if(!(o  instanceof  JsonPrimitive))  {  [CE]  illegal  start  of  type  [FE]            ArrayIndexOutOfBoundsException    [CONTEXT]      if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }      [BUGGY]  }  else  if(!(o  instanceof  JsonPrimitive))  {  <  }  else  if(!(o  instanceof  JsonPrimitive))  {  [BUGGY]      return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	replace	}    else    if(!(o    instanceof    JsonPrimitive))    {    <  }  else  if(!(o  instanceof  JsonPrimitive))  {	  	non-compiled	[CE]  illegal  start  of  type	10	None	add
936	[BUG]  [BUGGY]  }  else  if(!(o  instanceof  JsonPrimitive))  {  else  if(!(o  instanceof  JsonPrimitive))  {  [CE]  'else'  without  'if'  [FE]              ArrayIndexOutOfBoundsException    [CONTEXT]      if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }      [BUGGY]  }  else  if(!(o  instanceof  JsonPrimitive))  {  else  if(!(o  instanceof  JsonPrimitive))  {  [BUGGY]      return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	replace	}    else    if(!(o    instanceof    JsonPrimitive))    {    else  if(!(o  instanceof  JsonPrimitive))  {	  	non-compiled	[CE]  'else'  without  'if'	10	None	add
937	[BUG]  [BUGGY]  }  else  if(!(o  instanceof  JsonPrimitive))  {  }  else  if(!(o  instanceof  JsonPrimitive)  ||!(o  instanceof  JsonArray))  {  [CE]  missing  return  statement  [FE]                ArrayIndexOutOfBoundsException    [CONTEXT]      if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }      [BUGGY]  }  else  if(!(o  instanceof  JsonPrimitive))  {  }  else  if(!(o  instanceof  JsonPrimitive)  ||!(o  instanceof  JsonArray))  {  [BUGGY]      return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	replace	}    else    if(!(o    instanceof    JsonPrimitive))    {    }  else  if(!(o  instanceof  JsonPrimitive)  ||!(o  instanceof  JsonArray))  {	  	non-compiled	[CE]  missing  return  statement	10	None	add
938	[BUG]  [BUGGY]  }  else  if(!(o  instanceof  JsonPrimitive))  {  }  else  if(!(o  instanceof  JsonPrimitive)  ||(o  instanceof  JsonObject))  {  [CE]  missing  return  statement  [FE]                  ArrayIndexOutOfBoundsException    [CONTEXT]      if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }      [BUGGY]  }  else  if(!(o  instanceof  JsonPrimitive))  {  }  else  if(!(o  instanceof  JsonPrimitive)  ||(o  instanceof  JsonObject))  {  [BUGGY]      return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	replace	}    else    if(!(o    instanceof    JsonPrimitive))    {    }  else  if(!(o  instanceof  JsonPrimitive)  ||(o  instanceof  JsonObject))  {	  	non-compiled	[CE]  missing  return  statement	10	None	add
939	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]      if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }      [BUGGY]  }  else  if(o  instanceof  JsonObject  &&  o  instanceof  Boolean)  {  [BUGGY]      return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	add	}  else  if(o  instanceof  JsonObject  &&  o  instanceof  Boolean)  {	  }    else    if(o    instanceof    JsonObject    ||    o    instanceof    Boolean)    {    	compilable	  [FE]  AssertionError  	54	2	replace
940	[BUG]  [BUGGY]  }  else  if(o  instanceof  JsonObject  &&  o  instanceof  Boolean)  {  [FE]  AssertionError  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]      if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }      [BUGGY]  }  else  if(o  instanceof  JsonObject  &&  o  instanceof  Boolean)  {  [BUGGY]      return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	replace	}  else  if(o  instanceof  JsonObject  &&  o  instanceof  Boolean)  {	  }    else    if(o    instanceof    JsonObject    ||    o    instanceof    Boolean)    {    	compilable	  [FE]  AssertionError  	54	2	replace
941	[BUG]  [BUGGY]  [FE]  ArrayIndexOutOfBoundsException  [FE]      ArrayIndexOutOfBoundsException    [CONTEXT]      if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }      [BUGGY]  }  else  if(o  instanceof  Boolean  ||  o  instanceof  JsonObject)  {  [BUGGY]      return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	add	}  else  if(o  instanceof  Boolean  ||  o  instanceof  JsonObject)  {	  }    else    if(o    instanceof    JsonObject    ||    o    instanceof    Boolean)    {    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	54	2	replace
942	[BUG]  [BUGGY]  }  else  if(o  instanceof  Boolean  ||  o  instanceof  JsonObject)  {  [FE]  ArrayIndexOutOfBoundsException  [FE]      ArrayIndexOutOfBoundsException    [CONTEXT]      if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }      [BUGGY]  }  else  if(o  instanceof  Boolean  ||  o  instanceof  JsonObject)  {  [BUGGY]      return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	replace	}  else  if(o  instanceof  Boolean  ||  o  instanceof  JsonObject)  {	  }    else    if(o    instanceof    JsonObject    ||    o    instanceof    Boolean)    {    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	54	2	replace
943	[BUG]  [BUGGY]  }  else  if(o  instanceof  JsonObject  <?>  ||  o  instanceof  JsonPrimitive)  {  [CE]  type  JsonObject  does  not  take  parameters  [FE]                ArrayIndexOutOfBoundsException      [CONTEXT]      if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }      [BUGGY]  }  else  if(o  instanceof  JsonObject  <?>  ||  o  instanceof  JsonPrimitive)  {  [BUGGY]      return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	replace	}  else  if(o  instanceof  JsonObject  <?>  ||  o  instanceof  JsonPrimitive)  {	  }    else    if(o    instanceof    JsonObject    <?>    ||    o    instanceof    JsonArray)    {    	non-compiled	[CE]  type  JsonObject  does  not  take  parameters	177	None	replace
944	[BUG]  [BUGGY]  }  else  if(o  instanceof  JsonObject  <?>  ||  o  instanceof  JsonArray  ||  isObject)  {  [CE]  type  JsonObject  does  not  take  parameters  [FE]                  ArrayIndexOutOfBoundsException      [CONTEXT]      if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }      [BUGGY]  }  else  if(o  instanceof  JsonObject  <?>  ||  o  instanceof  JsonArray  ||  isObject)  {  [BUGGY]      return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	replace	}  else  if(o  instanceof  JsonObject  <?>  ||  o  instanceof  JsonArray  ||  isObject)  {	  }    else    if(o    instanceof    JsonObject    <?>    ||    o    instanceof    JsonArray)    {    	non-compiled	[CE]  type  JsonObject  does  not  take  parameters	177	None	replace
945	[BUG]  [BUGGY]  }  else  if(o  instanceof  JsonArray  <?>  ||  o  instanceof  JsonObject)  {  [CE]  type  JsonArray  does  not  take  parameters  [FE]                    ArrayIndexOutOfBoundsException      [CONTEXT]      if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }      [BUGGY]  }  else  if(o  instanceof  JsonArray  <?>  ||  o  instanceof  JsonObject)  {  [BUGGY]      return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	replace	}  else  if(o  instanceof  JsonArray  <?>  ||  o  instanceof  JsonObject)  {	  }    else    if(o    instanceof    JsonObject    <?>    ||    o    instanceof    JsonArray)    {    	non-compiled	[CE]  type  JsonArray  does  not  take  parameters	177	None	replace
946	[BUG]  [BUGGY]  }  else  if(o  instanceof  JsonObject  <?>  ||!(o  instanceof  JsonArray))  {  [CE]  type  JsonObject  does  not  take  parameters  [FE]                      ArrayIndexOutOfBoundsException      [CONTEXT]      if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }      [BUGGY]  }  else  if(o  instanceof  JsonObject  <?>  ||!(o  instanceof  JsonArray))  {  [BUGGY]      return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	replace	}  else  if(o  instanceof  JsonObject  <?>  ||!(o  instanceof  JsonArray))  {	  }    else    if(o    instanceof    JsonObject    <?>    ||    o    instanceof    JsonArray)    {    	non-compiled	[CE]  type  JsonObject  does  not  take  parameters	177	None	replace
947	[BUG]  [BUGGY]  }  else  if(o  instanceof  JsonNull  ||  o  instanceof  JsonNull)  {  }  else  if(o  instanceof  JsonNull  ||  o  instanceof  JsonNull)  {  [CE]  missing  return  statement  [FE]    AssertionError    [CONTEXT]      if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }      [BUGGY]  }  else  if(o  instanceof  JsonNull  ||  o  instanceof  JsonNull)  {  }  else  if(o  instanceof  JsonNull  ||  o  instanceof  JsonNull)  {  [BUGGY]      return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	replace	}    else    if(o    instanceof    JsonNull    ||    o    instanceof    JsonNull)    {    }  else  if(o  instanceof  JsonNull  ||  o  instanceof  JsonNull)  {	  	non-compiled	[CE]  missing  return  statement	1	None	add
948	[BUG]  [BUGGY]  }  else  if(o  instanceof  JsonNull  ||  o  instanceof  JsonNull)  {  else  if(o  instanceof  JsonNull  ||  o  instanceof  JsonNull)  {  [CE]  'else'  without  'if'  [FE]      AssertionError    [CONTEXT]      if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }      [BUGGY]  }  else  if(o  instanceof  JsonNull  ||  o  instanceof  JsonNull)  {  else  if(o  instanceof  JsonNull  ||  o  instanceof  JsonNull)  {  [BUGGY]      return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	replace	}    else    if(o    instanceof    JsonNull    ||    o    instanceof    JsonNull)    {    else  if(o  instanceof  JsonNull  ||  o  instanceof  JsonNull)  {	  	non-compiled	[CE]  'else'  without  'if'	1	None	add
949	[BUG]  [BUGGY]  }  else  if(o  instanceof  JsonNull  ||  o  instanceof  JsonNull)  {  }  else  if(o  instanceof  JsonNull  ||  o  instanceof  JsonNull)  <  return  JsonToken.BEGIN_OBJECT;  [CE]  illegal  start  of  type  [FE]        AssertionError    [CONTEXT]      if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }      [BUGGY]  }  else  if(o  instanceof  JsonNull  ||  o  instanceof  JsonNull)  {  }  else  if(o  instanceof  JsonNull  ||  o  instanceof  JsonNull)  <  return  JsonToken.BEGIN_OBJECT;  [BUGGY]      return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	replace	}    else    if(o    instanceof    JsonNull    ||    o    instanceof    JsonNull)    {    }  else  if(o  instanceof  JsonNull  ||  o  instanceof  JsonNull)  <  return  JsonToken.BEGIN_OBJECT;	  	non-compiled	[CE]  illegal  start  of  type	1	None	add
950	[BUG]  [BUGGY]  }  else  if(o  instanceof  JsonNull  ||  o  instanceof  JsonNull)  {  <  JsonNull>  else  if(o  instanceof  JsonNull  ||  o  instanceof  JsonNull)  {  [CE]  illegal  start  of  expression  [FE]          AssertionError    [CONTEXT]      if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }      [BUGGY]  }  else  if(o  instanceof  JsonNull  ||  o  instanceof  JsonNull)  {  <  JsonNull>  else  if(o  instanceof  JsonNull  ||  o  instanceof  JsonNull)  {  [BUGGY]      return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	replace	}    else    if(o    instanceof    JsonNull    ||    o    instanceof    JsonNull)    {    <  JsonNull>  else  if(o  instanceof  JsonNull  ||  o  instanceof  JsonNull)  {	  	non-compiled	[CE]  illegal  start  of  expression	1	None	add
951	[BUG]  [BUGGY]  }  else  if(o  instanceof  JsonNull  ||  o  instanceof  JsonNull)  {  <  }  else  if(o  instanceof  JsonNull  ||  o  instanceof  JsonNull)  {  [CE]  illegal  start  of  type  [FE]            AssertionError    [CONTEXT]      if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }      [BUGGY]  }  else  if(o  instanceof  JsonNull  ||  o  instanceof  JsonNull)  {  <  }  else  if(o  instanceof  JsonNull  ||  o  instanceof  JsonNull)  {  [BUGGY]      return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	replace	}    else    if(o    instanceof    JsonNull    ||    o    instanceof    JsonNull)    {    <  }  else  if(o  instanceof  JsonNull  ||  o  instanceof  JsonNull)  {	  	non-compiled	[CE]  illegal  start  of  type	1	None	add
952	[BUG]  [BUGGY]  }  else  if(o  instanceof  JsonNull  ||  o  instanceof  JsonNull)  {  }  else  if(o  instanceof  JSONNull  ||  o  instanceof  JsonNull)  {  [CE]  cannot  find  symbol  [FE]              AssertionError    [CONTEXT]      if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }      [BUGGY]  }  else  if(o  instanceof  JsonNull  ||  o  instanceof  JsonNull)  {  }  else  if(o  instanceof  JSONNull  ||  o  instanceof  JsonNull)  {  [BUGGY]      return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	replace	}    else    if(o    instanceof    JsonNull    ||    o    instanceof    JsonNull)    {    }  else  if(o  instanceof  JSONNull  ||  o  instanceof  JsonNull)  {	  	non-compiled	[CE]  cannot  find  symbol	1	None	add
953	[BUG]  [BUGGY]  }  else  if(o  instanceof  JsonArray  ||  o  instanceof  JsonPrimitive)  {  }  else  if(o  instanceof  JsonArray  ||  o  instanceof  JsonPrimitive)  {  [CE]  missing  return  statement  [FE]    AssertionError    [CONTEXT]      if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }      [BUGGY]  }  else  if(o  instanceof  JsonArray  ||  o  instanceof  JsonPrimitive)  {  }  else  if(o  instanceof  JsonArray  ||  o  instanceof  JsonPrimitive)  {  [BUGGY]      return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	replace	}    else    if(o    instanceof    JsonArray    ||    o    instanceof    JsonPrimitive)    {    }  else  if(o  instanceof  JsonArray  ||  o  instanceof  JsonPrimitive)  {	  	non-compiled	[CE]  missing  return  statement	110	None	add
954	[BUG]  [BUGGY]  }  else  if(o  instanceof  JsonArray  ||  o  instanceof  JsonPrimitive)  {  else  if(o  instanceof  JsonArray  ||  o  instanceof  JsonPrimitive)  {  [CE]  'else'  without  'if'  [FE]      AssertionError    [CONTEXT]      if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }      [BUGGY]  }  else  if(o  instanceof  JsonArray  ||  o  instanceof  JsonPrimitive)  {  else  if(o  instanceof  JsonArray  ||  o  instanceof  JsonPrimitive)  {  [BUGGY]      return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	replace	}    else    if(o    instanceof    JsonArray    ||    o    instanceof    JsonPrimitive)    {    else  if(o  instanceof  JsonArray  ||  o  instanceof  JsonPrimitive)  {	  	non-compiled	[CE]  'else'  without  'if'	110	None	add
955	[BUG]  [BUGGY]  }  else  if(o  instanceof  JsonArray  ||  o  instanceof  JsonPrimitive)  {  }  else  if(o  instanceof  JsonArray  ||  o  instanceof  JsonPrimitive)  <  return  JsonToken.BEGIN_OBJECT;  [CE]  illegal  start  of  type  [FE]        AssertionError    [CONTEXT]      if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }      [BUGGY]  }  else  if(o  instanceof  JsonArray  ||  o  instanceof  JsonPrimitive)  {  }  else  if(o  instanceof  JsonArray  ||  o  instanceof  JsonPrimitive)  <  return  JsonToken.BEGIN_OBJECT;  [BUGGY]      return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	replace	}    else    if(o    instanceof    JsonArray    ||    o    instanceof    JsonPrimitive)    {    }  else  if(o  instanceof  JsonArray  ||  o  instanceof  JsonPrimitive)  <  return  JsonToken.BEGIN_OBJECT;	  	non-compiled	[CE]  illegal  start  of  type	110	None	add
956	[BUG]  [BUGGY]  }  else  if(o  instanceof  JsonArray  ||  o  instanceof  JsonPrimitive)  {  }  else  if(o  instanceof  JsonArray  ||  o  instanceof  JsonPrimitive)  {  return  JsonToken.BEGIN_OBJECT;  }  else  if(o  instanceof  JsonPrimitive)  {  [CE]  missing  return  statement  [FE]          AssertionError    [CONTEXT]      if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }      [BUGGY]  }  else  if(o  instanceof  JsonArray  ||  o  instanceof  JsonPrimitive)  {  }  else  if(o  instanceof  JsonArray  ||  o  instanceof  JsonPrimitive)  {  return  JsonToken.BEGIN_OBJECT;  }  else  if(o  instanceof  JsonPrimitive)  {  [BUGGY]      return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	replace	}    else    if(o    instanceof    JsonArray    ||    o    instanceof    JsonPrimitive)    {    }  else  if(o  instanceof  JsonArray  ||  o  instanceof  JsonPrimitive)  {  return  JsonToken.BEGIN_OBJECT;  }  else  if(o  instanceof  JsonPrimitive)  {	  	non-compiled	[CE]  missing  return  statement	110	None	add
957	[BUG]  [BUGGY]  }  else  if(o  instanceof  JsonArray  ||  o  instanceof  JsonPrimitive)  {  <  }  else  if(o  instanceof  JsonArray  ||  o  instanceof  JsonPrimitive)  {  [CE]  illegal  start  of  type  [FE]            AssertionError    [CONTEXT]      if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }      [BUGGY]  }  else  if(o  instanceof  JsonArray  ||  o  instanceof  JsonPrimitive)  {  <  }  else  if(o  instanceof  JsonArray  ||  o  instanceof  JsonPrimitive)  {  [BUGGY]      return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	replace	}    else    if(o    instanceof    JsonArray    ||    o    instanceof    JsonPrimitive)    {    <  }  else  if(o  instanceof  JsonArray  ||  o  instanceof  JsonPrimitive)  {	  	non-compiled	[CE]  illegal  start  of  type	110	None	add
958	[BUG]  [BUGGY]  }  else  if(o  instanceof  JsonArray  ||  o  instanceof  JsonPrimitive)  {  }  else  if(e  instanceof  JsonArray  ||  o  instanceof  JsonPrimitive)  {  [CE]  cannot  find  symbol  e  [FE]              AssertionError    [CONTEXT]      if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }      [BUGGY]  }  else  if(o  instanceof  JsonArray  ||  o  instanceof  JsonPrimitive)  {  }  else  if(e  instanceof  JsonArray  ||  o  instanceof  JsonPrimitive)  {  [BUGGY]      return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	replace	}    else    if(o    instanceof    JsonArray    ||    o    instanceof    JsonPrimitive)    {    }  else  if(e  instanceof  JsonArray  ||  o  instanceof  JsonPrimitive)  {	  	non-compiled	[CE]  cannot  find  symbol  e	110	None	add
959	[BUG]  [BUGGY]  }  else  if(!(o  instanceof  JsonArray))  {  return  JsonToken.BEGIN_OBJECT;  }  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]      if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }      [BUGGY]  }  else  if(!(o  instanceof  JsonArray))  {  return  JsonToken.BEGIN_OBJECT;  }  [BUGGY]      return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	replace	}  else  if(!(o  instanceof  JsonArray))  {  return  JsonToken.BEGIN_OBJECT;  }	  }    else    if(!(o    instanceof    JsonObject))    {    }    else    if(!(o    instanceof    JsonObject))    {    return    JsonToken.BEGIN_OBJECT;    }    	non-compiled	[CE]  illegal  start  of  type	210	None	replace
960	[BUG]  [BUGGY]  }  else  if(!(o  instanceof  JsonObject)||!(o  instanceof  JsonObject))  {  return  JsonToken.BEGIN_OBJECT;  }  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]      if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }      [BUGGY]  }  else  if(!(o  instanceof  JsonObject)||!(o  instanceof  JsonObject))  {  return  JsonToken.BEGIN_OBJECT;  }  [BUGGY]      return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	replace	}  else  if(!(o  instanceof  JsonObject)||!(o  instanceof  JsonObject))  {  return  JsonToken.BEGIN_OBJECT;  }	  }    else    if(!(o    instanceof    JsonObject))    {    }    else    if(!(o    instanceof    JsonObject))    {    return    JsonToken.BEGIN_OBJECT;    }    	non-compiled	[CE]  illegal  start  of  type	210	None	replace
961	[BUG]  [BUGGY]  }  else  if(!(o  instanceof  JsonObject))  {  return  JsonToken.BEGIN_OBJECT;  }  [CE]  illegal  start  of  type  [FE]                    AssertionError      [CONTEXT]      if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }      [BUGGY]  }  else  if(!(o  instanceof  JsonObject))  {  return  JsonToken.BEGIN_OBJECT;  }  [BUGGY]      return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	replace	}  else  if(!(o  instanceof  JsonObject))  {  return  JsonToken.BEGIN_OBJECT;  }	  }    else    if(!(o    instanceof    JsonObject))    {    }    else    if(!(o    instanceof    JsonObject))    {    return    JsonToken.BEGIN_OBJECT;    }    	non-compiled	[CE]  illegal  start  of  type	210	None	replace
962	[BUG]  [BUGGY]  }  else  if(!(o  instanceof  JsonObject)&&!(o  instanceof  JsonArray))  {  return  JsonToken.BEGIN_OBJECT;  }  [CE]  illegal  start  of  type  [FE]                      AssertionError      [CONTEXT]      if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }      [BUGGY]  }  else  if(!(o  instanceof  JsonObject)&&!(o  instanceof  JsonArray))  {  return  JsonToken.BEGIN_OBJECT;  }  [BUGGY]      return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	replace	}  else  if(!(o  instanceof  JsonObject)&&!(o  instanceof  JsonArray))  {  return  JsonToken.BEGIN_OBJECT;  }	  }    else    if(!(o    instanceof    JsonObject))    {    }    else    if(!(o    instanceof    JsonObject))    {    return    JsonToken.BEGIN_OBJECT;    }    	non-compiled	[CE]  illegal  start  of  type	210	None	replace
963	[BUG]  [BUGGY]  }  else  if(!(o  instanceof  JsonObject)||!(o  instanceof  JsonArray))  {  return  JsonToken.BEGIN_OBJECT;  }  [CE]  illegal  start  of  type  [FE]                        AssertionError      [CONTEXT]      if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }      [BUGGY]  }  else  if(!(o  instanceof  JsonObject)||!(o  instanceof  JsonArray))  {  return  JsonToken.BEGIN_OBJECT;  }  [BUGGY]      return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	replace	}  else  if(!(o  instanceof  JsonObject)||!(o  instanceof  JsonArray))  {  return  JsonToken.BEGIN_OBJECT;  }	  }    else    if(!(o    instanceof    JsonObject))    {    }    else    if(!(o    instanceof    JsonObject))    {    return    JsonToken.BEGIN_OBJECT;    }    	non-compiled	[CE]  illegal  start  of  type	210	None	replace
964	[BUG]  [BUGGY]  }  else  if(!(o  instanceof  JsonObject)&&!(o  instanceof  JsonString))  {  return  JsonToken.BEGIN_OBJECT;  }  [CE]  illegal  start  of  type  [FE]                          AssertionError      [CONTEXT]      if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }      [BUGGY]  }  else  if(!(o  instanceof  JsonObject)&&!(o  instanceof  JsonString))  {  return  JsonToken.BEGIN_OBJECT;  }  [BUGGY]      return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	replace	}  else  if(!(o  instanceof  JsonObject)&&!(o  instanceof  JsonString))  {  return  JsonToken.BEGIN_OBJECT;  }	  }    else    if(!(o    instanceof    JsonObject))    {    }    else    if(!(o    instanceof    JsonObject))    {    return    JsonToken.BEGIN_OBJECT;    }    	non-compiled	[CE]  illegal  start  of  type	210	None	replace
965	[BUG]  [BUGGY]  parent  ==  null  ||  isObject)  {  return  JsonToken.END_OBJECT;  }  [CE]  not  a  statement  [FE]                                    ArrayIndexOutOfBoundsException      [CONTEXT]      if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }      [BUGGY]  parent  ==  null  ||  isObject)  {  return  JsonToken.END_OBJECT;  }  [BUGGY]      return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	replace	parent  ==  null  ||  isObject)  {  return  JsonToken.END_OBJECT;  }	  if(o    ==    null)    {    if(isObject)    {    return    JsonToken.END_OBJECT;    }    	non-compiled	[CE]  not  a  statement	191	None	replace
966	[BUG]  [BUGGY]  parent  ==  null  &&  isObject)  {  return  JsonToken.END_OBJECT;  }  [CE]  not  a  statement  [FE]                                      ArrayIndexOutOfBoundsException      [CONTEXT]      if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }      [BUGGY]  parent  ==  null  &&  isObject)  {  return  JsonToken.END_OBJECT;  }  [BUGGY]      return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	replace	parent  ==  null  &&  isObject)  {  return  JsonToken.END_OBJECT;  }	  if(o    ==    null)    {    if(isObject)    {    return    JsonToken.END_OBJECT;    }    	non-compiled	[CE]  not  a  statement	191	None	replace
967	[BUG]  [BUGGY]  parent  ==  null  ||  isObject)  {  return  JsonToken.END_OBJECT;  [CE]  not  a  statement  [FE]                                        ArrayIndexOutOfBoundsException      [CONTEXT]      if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }      [BUGGY]  parent  ==  null  ||  isObject)  {  return  JsonToken.END_OBJECT;  [BUGGY]      return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	replace	parent  ==  null  ||  isObject)  {  return  JsonToken.END_OBJECT;	  if(o    ==    null)    {    if(isObject)    {    return    JsonToken.END_OBJECT;    }    	non-compiled	[CE]  not  a  statement	191	None	replace
968	[BUG]  [BUGGY]  parent!=  null  ||  isObject)  {  return  JsonToken.END_OBJECT;  }  [CE]  not  a  statement  [FE]                                          ArrayIndexOutOfBoundsException      [CONTEXT]      if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }      [BUGGY]  parent!=  null  ||  isObject)  {  return  JsonToken.END_OBJECT;  }  [BUGGY]      return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	replace	parent!=  null  ||  isObject)  {  return  JsonToken.END_OBJECT;  }	  if(o    ==    null)    {    if(isObject)    {    return    JsonToken.END_OBJECT;    }    	non-compiled	[CE]  not  a  statement	191	None	replace
969	[BUG]  [BUGGY]  parent!=  null  &&  isObject)  {  return  JsonToken.END_OBJECT;  }  [CE]  not  a  statement  [FE]                                            ArrayIndexOutOfBoundsException      [CONTEXT]      if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }      [BUGGY]  parent!=  null  &&  isObject)  {  return  JsonToken.END_OBJECT;  }  [BUGGY]      return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	replace	parent!=  null  &&  isObject)  {  return  JsonToken.END_OBJECT;  }	  if(o    ==    null)    {    if(isObject)    {    return    JsonToken.END_OBJECT;    }    	non-compiled	[CE]  not  a  statement	191	None	replace
970	[BUG]  [BUGGY]  parent!=  null  ||  isObject)  {  return  JsonToken.END_OBJECT;  [CE]  not  a  statement  [FE]                                              ArrayIndexOutOfBoundsException      [CONTEXT]      if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }      [BUGGY]  parent!=  null  ||  isObject)  {  return  JsonToken.END_OBJECT;  [BUGGY]      return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	replace	parent!=  null  ||  isObject)  {  return  JsonToken.END_OBJECT;	  if(o    ==    null)    {    if(isObject)    {    return    JsonToken.END_OBJECT;    }    	non-compiled	[CE]  not  a  statement	191	None	replace
971	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }      [BUGGY]  }  else  if(o  instanceof  JsonNull  &&  o  instanceof  JsonNull)  {  [BUGGY]      return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	add	}  else  if(o  instanceof  JsonNull  &&  o  instanceof  JsonNull)  {	  }    else    if(o    instanceof    JsonNull    ||    o    instanceof    JsonNull)    {    	compilable	  [FE]  AssertionError  	2	2	replace
972	[BUG]  [BUGGY]  }  else  if(o  instanceof  JsonNull  &&  o  instanceof  JsonNull)  {  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }      [BUGGY]  }  else  if(o  instanceof  JsonNull  &&  o  instanceof  JsonNull)  {  [BUGGY]      return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	replace	}  else  if(o  instanceof  JsonNull  &&  o  instanceof  JsonNull)  {	  }    else    if(o    instanceof    JsonNull    ||    o    instanceof    JsonNull)    {    	compilable	  [FE]  AssertionError  	2	2	replace
973	[BUG]  [BUGGY]  [FE]  ArrayIndexOutOfBoundsException  [FE]      AssertionError    [CONTEXT]      if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }      [BUGGY]  }  else  if(o  instanceof  JsonNull  ||  o  instanceof  JsonNull  ||!(o  instanceof  JsonNull))  {  [BUGGY]      return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	add	}  else  if(o  instanceof  JsonNull  ||  o  instanceof  JsonNull  ||!(o  instanceof  JsonNull))  {	  }    else    if(o    instanceof    JsonNull    ||    o    instanceof    JsonNull)    {    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	2	2	replace
974	[BUG]  [BUGGY]  }  else  if(o  instanceof  JsonNull  ||  o  instanceof  JsonNull  ||!(o  instanceof  JsonNull))  {  [FE]  ArrayIndexOutOfBoundsException  [FE]      AssertionError    [CONTEXT]      if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }      [BUGGY]  }  else  if(o  instanceof  JsonNull  ||  o  instanceof  JsonNull  ||!(o  instanceof  JsonNull))  {  [BUGGY]      return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	replace	}  else  if(o  instanceof  JsonNull  ||  o  instanceof  JsonNull  ||!(o  instanceof  JsonNull))  {	  }    else    if(o    instanceof    JsonNull    ||    o    instanceof    JsonNull)    {    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	2	2	replace
975	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]        AssertionError    [CONTEXT]      if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }      [BUGGY]  }  else  if(o  instanceof  JsonNull  ||  o  instanceof  JsonNull  ||  o  instanceof  JsonNull)  {  [BUGGY]      return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	add	}  else  if(o  instanceof  JsonNull  ||  o  instanceof  JsonNull  ||  o  instanceof  JsonNull)  {	  }    else    if(o    instanceof    JsonNull    ||    o    instanceof    JsonNull)    {    	compilable	  [FE]  AssertionError  	2	2	replace
976	[BUG]  [BUGGY]  }  else  if(o  instanceof  JsonNull  ||  o  instanceof  JsonNull  ||  o  instanceof  JsonNull)  {  [FE]  AssertionError  [FE]        AssertionError    [CONTEXT]      if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }      [BUGGY]  }  else  if(o  instanceof  JsonNull  ||  o  instanceof  JsonNull  ||  o  instanceof  JsonNull)  {  [BUGGY]      return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	replace	}  else  if(o  instanceof  JsonNull  ||  o  instanceof  JsonNull  ||  o  instanceof  JsonNull)  {	  }    else    if(o    instanceof    JsonNull    ||    o    instanceof    JsonNull)    {    	compilable	  [FE]  AssertionError  	2	2	replace
977	[BUG]  [BUGGY]  }  else  if(!(o  instanceof  JsonPrimitive))  {  case  JsonToken.BEGIN_ARRAY:  return  JsonToken.BEGIN_OBJECT;  [CE]  orphaned  case  [FE]              ArrayIndexOutOfBoundsException      [CONTEXT]      if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }      [BUGGY]  }  else  if(!(o  instanceof  JsonPrimitive))  {  case  JsonToken.BEGIN_ARRAY:  return  JsonToken.BEGIN_OBJECT;  [BUGGY]      return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	replace	}  else  if(!(o  instanceof  JsonPrimitive))  {  case  JsonToken.BEGIN_ARRAY:  return  JsonToken.BEGIN_OBJECT;	  }    else    if(!(o    instanceof    JsonArray))    {    }    else    if(!(o    instanceof    JsonArray))    {    case    JsonToken.BEGIN_ARRAY:    return    JsonToken.BEGIN_OBJECT;    	non-compiled	[CE]  orphaned  case	218	None	replace
978	[BUG]  [BUGGY]  }  else  if(isObject)  {  case  JsonToken.BEGIN_ARRAY:  return  JsonToken.BEGIN_OBJECT;  [CE]  orphaned  case  [FE]                ArrayIndexOutOfBoundsException      [CONTEXT]      if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }      [BUGGY]  }  else  if(isObject)  {  case  JsonToken.BEGIN_ARRAY:  return  JsonToken.BEGIN_OBJECT;  [BUGGY]      return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	replace	}  else  if(isObject)  {  case  JsonToken.BEGIN_ARRAY:  return  JsonToken.BEGIN_OBJECT;	  }    else    if(!(o    instanceof    JsonArray))    {    }    else    if(!(o    instanceof    JsonArray))    {    case    JsonToken.BEGIN_ARRAY:    return    JsonToken.BEGIN_OBJECT;    	non-compiled	[CE]  orphaned  case	218	None	replace
979	[BUG]  [BUGGY]  }  else  if(!(o  instanceof  JsonArray))  {  case  JsonToken.BEGIN_ARRAY:  return  JsonToken.BEGIN_OBJECT;  [CE]  orphaned  case  [FE]                  ArrayIndexOutOfBoundsException      [CONTEXT]      if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }      [BUGGY]  }  else  if(!(o  instanceof  JsonArray))  {  case  JsonToken.BEGIN_ARRAY:  return  JsonToken.BEGIN_OBJECT;  [BUGGY]      return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	replace	}  else  if(!(o  instanceof  JsonArray))  {  case  JsonToken.BEGIN_ARRAY:  return  JsonToken.BEGIN_OBJECT;	  }    else    if(!(o    instanceof    JsonArray))    {    }    else    if(!(o    instanceof    JsonArray))    {    case    JsonToken.BEGIN_ARRAY:    return    JsonToken.BEGIN_OBJECT;    	non-compiled	[CE]  orphaned  case	218	None	replace
980	[BUG]  [BUGGY]  }  else  if(o  instanceof  JsonPrimitive)  {  case  JsonToken.BEGIN_ARRAY:  return  JsonToken.BEGIN_OBJECT;  [CE]  orphaned  case  [FE]                    ArrayIndexOutOfBoundsException      [CONTEXT]      if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }      [BUGGY]  }  else  if(o  instanceof  JsonPrimitive)  {  case  JsonToken.BEGIN_ARRAY:  return  JsonToken.BEGIN_OBJECT;  [BUGGY]      return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	replace	}  else  if(o  instanceof  JsonPrimitive)  {  case  JsonToken.BEGIN_ARRAY:  return  JsonToken.BEGIN_OBJECT;	  }    else    if(!(o    instanceof    JsonArray))    {    }    else    if(!(o    instanceof    JsonArray))    {    case    JsonToken.BEGIN_ARRAY:    return    JsonToken.BEGIN_OBJECT;    	non-compiled	[CE]  orphaned  case	218	None	replace
981	[BUG]  [BUGGY]  }  else  if(!(o  instanceof  String))  {  case  JsonToken.BEGIN_ARRAY:  return  JsonToken.BEGIN_OBJECT;  [CE]  orphaned  case  [FE]                      ArrayIndexOutOfBoundsException      [CONTEXT]      if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }      [BUGGY]  }  else  if(!(o  instanceof  String))  {  case  JsonToken.BEGIN_ARRAY:  return  JsonToken.BEGIN_OBJECT;  [BUGGY]      return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	replace	}  else  if(!(o  instanceof  String))  {  case  JsonToken.BEGIN_ARRAY:  return  JsonToken.BEGIN_OBJECT;	  }    else    if(!(o    instanceof    JsonArray))    {    }    else    if(!(o    instanceof    JsonArray))    {    case    JsonToken.BEGIN_ARRAY:    return    JsonToken.BEGIN_OBJECT;    	non-compiled	[CE]  orphaned  case	218	None	replace
982	[BUG]  [BUGGY]  }  else  if(isObject)  {  case  JsonToken.BEGIN_ARRAY:  return  JsonToken.BEGIN_OBJECT;  break;  [CE]  orphaned  case  [FE]                        ArrayIndexOutOfBoundsException      [CONTEXT]      if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }      [BUGGY]  }  else  if(isObject)  {  case  JsonToken.BEGIN_ARRAY:  return  JsonToken.BEGIN_OBJECT;  break;  [BUGGY]      return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	replace	}  else  if(isObject)  {  case  JsonToken.BEGIN_ARRAY:  return  JsonToken.BEGIN_OBJECT;  break;	  }    else    if(!(o    instanceof    JsonArray))    {    }    else    if(!(o    instanceof    JsonArray))    {    case    JsonToken.BEGIN_ARRAY:    return    JsonToken.BEGIN_OBJECT;    	non-compiled	[CE]  orphaned  case	218	None	replace
983	[BUG]  [BUGGY]  }  else  if(o  instanceof  JsonObject  &&  o  instanceof  JsonString)  {  [CE]  cannot  find  symbol  [FE]        ArrayIndexOutOfBoundsException      [CONTEXT]      if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }      [BUGGY]  }  else  if(o  instanceof  JsonObject  &&  o  instanceof  JsonString)  {  [BUGGY]      return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	replace	}  else  if(o  instanceof  JsonObject  &&  o  instanceof  JsonString)  {	  }    else    if(o    instanceof    JsonObject    ||    o    instanceof    JsonString)    {    	non-compiled	[CE]  cannot  find  symbol	183	None	replace
984	[BUG]  [BUGGY]  }  else  if(o  instanceof  JsonObject  ||!(o  instanceof  JsonString))  {  [CE]  cannot  find  symbol  [FE]          ArrayIndexOutOfBoundsException      [CONTEXT]      if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }      [BUGGY]  }  else  if(o  instanceof  JsonObject  ||!(o  instanceof  JsonString))  {  [BUGGY]      return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	replace	}  else  if(o  instanceof  JsonObject  ||!(o  instanceof  JsonString))  {	  }    else    if(o    instanceof    JsonObject    ||    o    instanceof    JsonString)    {    	non-compiled	[CE]  cannot  find  symbol	183	None	replace
985	[BUG]  [BUGGY]  }  else  if(o  instanceof  JsonObject  ||  o  instanceof  JsonString  ||  isObject)  {  [CE]  cannot  find  symbol  [FE]            ArrayIndexOutOfBoundsException      [CONTEXT]      if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }      [BUGGY]  }  else  if(o  instanceof  JsonObject  ||  o  instanceof  JsonString  ||  isObject)  {  [BUGGY]      return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	replace	}  else  if(o  instanceof  JsonObject  ||  o  instanceof  JsonString  ||  isObject)  {	  }    else    if(o    instanceof    JsonObject    ||    o    instanceof    JsonString)    {    	non-compiled	[CE]  cannot  find  symbol	183	None	replace
986	[BUG]  [BUGGY]  }  else  if(o  instanceof  JsonObject  ||  o  instanceof  JsonNumber  ||!(o  instanceof  JsonPrimitive)&&  isObject)  {  [CE]  cannot  find  symbol  [FE]                      ArrayIndexOutOfBoundsException      [CONTEXT]      if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }      [BUGGY]  }  else  if(o  instanceof  JsonObject  ||  o  instanceof  JsonNumber  ||!(o  instanceof  JsonPrimitive)&&  isObject)  {  [BUGGY]      return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	replace	}  else  if(o  instanceof  JsonObject  ||  o  instanceof  JsonNumber  ||!(o  instanceof  JsonPrimitive)&&  isObject)  {	  }    else    if(o    instanceof    JsonObject    ||    o    instanceof    JsonNumber    ||!(o    instanceof    JsonPrimitive))    {    	non-compiled	[CE]  cannot  find  symbol	126	None	replace
987	[BUG]  [BUGGY]  }  else  if(o  instanceof  JsonObject  &&  o  instanceof  JsonNumber  ||!(o  instanceof  JsonPrimitive))  {  [CE]  cannot  find  symbol  [FE]                        ArrayIndexOutOfBoundsException      [CONTEXT]      if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }      [BUGGY]  }  else  if(o  instanceof  JsonObject  &&  o  instanceof  JsonNumber  ||!(o  instanceof  JsonPrimitive))  {  [BUGGY]      return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	replace	}  else  if(o  instanceof  JsonObject  &&  o  instanceof  JsonNumber  ||!(o  instanceof  JsonPrimitive))  {	  }    else    if(o    instanceof    JsonObject    ||    o    instanceof    JsonNumber    ||!(o    instanceof    JsonPrimitive))    {    	non-compiled	[CE]  cannot  find  symbol	126	None	replace
988	[BUG]  [BUGGY]  }  else  if(o  instanceof  JsonObject  ||  o.getClass()  instanceof  JsonNumber  ||!(o  instanceof  JsonPrimitive))  {  [CE]  cannot  find  symbol  [FE]                          ArrayIndexOutOfBoundsException      [CONTEXT]      if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }      [BUGGY]  }  else  if(o  instanceof  JsonObject  ||  o.getClass()  instanceof  JsonNumber  ||!(o  instanceof  JsonPrimitive))  {  [BUGGY]      return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	replace	}  else  if(o  instanceof  JsonObject  ||  o.getClass()  instanceof  JsonNumber  ||!(o  instanceof  JsonPrimitive))  {	  }    else    if(o    instanceof    JsonObject    ||    o    instanceof    JsonNumber    ||!(o    instanceof    JsonPrimitive))    {    	non-compiled	[CE]  cannot  find  symbol	126	None	replace
989	[BUG]  [BUGGY]  }  else  if(o  instanceof  JsonNull  ||!(o  instanceof  JsonNull  &&!(o  instanceof  JsonNull)))  {  }  else  if(o  instanceof  JsonNull  ||!(o  instanceof  JsonNull  &&!(o  instanceof  JsonNull)))  {  [CE]  missing  return  statement  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]      if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }      [BUGGY]  }  else  if(o  instanceof  JsonNull  ||!(o  instanceof  JsonNull  &&!(o  instanceof  JsonNull)))  {  }  else  if(o  instanceof  JsonNull  ||!(o  instanceof  JsonNull  &&!(o  instanceof  JsonNull)))  {  [BUGGY]      return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	replace	}    else    if(o    instanceof    JsonNull    ||!(o    instanceof    JsonNull    &&!(o    instanceof    JsonNull)))    {    }  else  if(o  instanceof  JsonNull  ||!(o  instanceof  JsonNull  &&!(o  instanceof  JsonNull)))  {	  	non-compiled	[CE]  missing  return  statement	3	None	add
990	[BUG]  [BUGGY]  }  else  if(o  instanceof  JsonNull  ||!(o  instanceof  JsonNull  &&!(o  instanceof  JsonNull)))  {  }  else  if(o  instanceof  JsonArray  ||!(o  instanceof  JsonNull  &&!(o  instanceof  JsonNull)))  {  [CE]  missing  return  statement  [FE]      ArrayIndexOutOfBoundsException    [CONTEXT]      if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }      [BUGGY]  }  else  if(o  instanceof  JsonNull  ||!(o  instanceof  JsonNull  &&!(o  instanceof  JsonNull)))  {  }  else  if(o  instanceof  JsonArray  ||!(o  instanceof  JsonNull  &&!(o  instanceof  JsonNull)))  {  [BUGGY]      return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	replace	}    else    if(o    instanceof    JsonNull    ||!(o    instanceof    JsonNull    &&!(o    instanceof    JsonNull)))    {    }  else  if(o  instanceof  JsonArray  ||!(o  instanceof  JsonNull  &&!(o  instanceof  JsonNull)))  {	  	non-compiled	[CE]  missing  return  statement	3	None	add
991	[BUG]  [BUGGY]  }  else  if(o  instanceof  JsonNull  ||!(o  instanceof  JsonNull  &&!(o  instanceof  JsonNull)))  {  }  else  if(o  instanceof  JsonObject  ||!(o  instanceof  JsonNull  &&!(o  instanceof  JsonNull)))  {  [CE]  missing  return  statement  [FE]        ArrayIndexOutOfBoundsException    [CONTEXT]      if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }      [BUGGY]  }  else  if(o  instanceof  JsonNull  ||!(o  instanceof  JsonNull  &&!(o  instanceof  JsonNull)))  {  }  else  if(o  instanceof  JsonObject  ||!(o  instanceof  JsonNull  &&!(o  instanceof  JsonNull)))  {  [BUGGY]      return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	replace	}    else    if(o    instanceof    JsonNull    ||!(o    instanceof    JsonNull    &&!(o    instanceof    JsonNull)))    {    }  else  if(o  instanceof  JsonObject  ||!(o  instanceof  JsonNull  &&!(o  instanceof  JsonNull)))  {	  	non-compiled	[CE]  missing  return  statement	3	None	add
992	[BUG]  [BUGGY]  }  else  if(o  instanceof  JsonNull  ||!(o  instanceof  JsonNull  &&!(o  instanceof  JsonNull)))  {  }  else  if(o  instanceof  JsonNull  ||!(o  instanceof  JsonNull  &&!(o  instanceof  JsonNull))  {  [CE]  ')'  expected  [FE]          ArrayIndexOutOfBoundsException    [CONTEXT]      if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }      [BUGGY]  }  else  if(o  instanceof  JsonNull  ||!(o  instanceof  JsonNull  &&!(o  instanceof  JsonNull)))  {  }  else  if(o  instanceof  JsonNull  ||!(o  instanceof  JsonNull  &&!(o  instanceof  JsonNull))  {  [BUGGY]      return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	replace	}    else    if(o    instanceof    JsonNull    ||!(o    instanceof    JsonNull    &&!(o    instanceof    JsonNull)))    {    }  else  if(o  instanceof  JsonNull  ||!(o  instanceof  JsonNull  &&!(o  instanceof  JsonNull))  {	  	non-compiled	[CE]  ')'  expected	3	None	add
993	[BUG]  [BUGGY]  if(iterator.hasNext())  {  o  =  iterator.next();  }  else  {  push(iterator.next());  return  JsonToken.NAME;  }  [CE]  unreachable  statement  [FE]                          ArrayIndexOutOfBoundsException      [CONTEXT]      if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }      [BUGGY]  if(iterator.hasNext())  {  o  =  iterator.next();  }  else  {  push(iterator.next());  return  JsonToken.NAME;  }  [BUGGY]      return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	replace	if(iterator.hasNext())  {  o  =  iterator.next();  }  else  {  push(iterator.next());  return  JsonToken.NAME;  }	  o    =    iterator.next();    	non-compiled	[CE]  unreachable  statement	224	None	replace
994	[BUG]  [BUGGY]  if(iterator.hasNext())  {  o  =  iterator.next();  }  else  {  push(iterator.next());  return  JsonToken.END_OBJECT;  }  [CE]  unreachable  statement  [FE]                            ArrayIndexOutOfBoundsException      [CONTEXT]      if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }      [BUGGY]  if(iterator.hasNext())  {  o  =  iterator.next();  }  else  {  push(iterator.next());  return  JsonToken.END_OBJECT;  }  [BUGGY]      return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	replace	if(iterator.hasNext())  {  o  =  iterator.next();  }  else  {  push(iterator.next());  return  JsonToken.END_OBJECT;  }	  o    =    iterator.next();    	non-compiled	[CE]  unreachable  statement	224	None	replace
995	[BUG]  [BUGGY]  if(iterator.hasNext())  {  o  =  iterator.next();  }  else  {  push(iterator.next());  return  JsonToken.BEGIN_OBJECT;  }  [CE]  unreachable  statement  [FE]                              ArrayIndexOutOfBoundsException      [CONTEXT]      if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }      [BUGGY]  if(iterator.hasNext())  {  o  =  iterator.next();  }  else  {  push(iterator.next());  return  JsonToken.BEGIN_OBJECT;  }  [BUGGY]      return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	replace	if(iterator.hasNext())  {  o  =  iterator.next();  }  else  {  push(iterator.next());  return  JsonToken.BEGIN_OBJECT;  }	  o    =    iterator.next();    	non-compiled	[CE]  unreachable  statement	224	None	replace
996	[BUG]  [BUGGY]  if(iterator.hasNext())  {  o  =  iterator.next();  }  else  {  push(iterator.next());  return  JsonToken.UNREADABLE_READER;  }  [CE]  cannot  find  symbol  UNREADABLE_READER  [FE]                                ArrayIndexOutOfBoundsException      [CONTEXT]      if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }      [BUGGY]  if(iterator.hasNext())  {  o  =  iterator.next();  }  else  {  push(iterator.next());  return  JsonToken.UNREADABLE_READER;  }  [BUGGY]      return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	replace	if(iterator.hasNext())  {  o  =  iterator.next();  }  else  {  push(iterator.next());  return  JsonToken.UNREADABLE_READER;  }	  o    =    iterator.next();    	non-compiled	[CE]  cannot  find  symbol  UNREADABLE_READER	224	None	replace
997	[BUG]  [BUGGY]  if(iterator.hasNext())  {  o  =  iterator.next();  }  else  {  push(iterator.next());  return  JsonToken.START_OBJECT;  }  [CE]  cannot  find  symbol  START_OBJECT  [FE]                                  ArrayIndexOutOfBoundsException      [CONTEXT]      if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }      [BUGGY]  if(iterator.hasNext())  {  o  =  iterator.next();  }  else  {  push(iterator.next());  return  JsonToken.START_OBJECT;  }  [BUGGY]      return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	replace	if(iterator.hasNext())  {  o  =  iterator.next();  }  else  {  push(iterator.next());  return  JsonToken.START_OBJECT;  }	  o    =    iterator.next();    	non-compiled	[CE]  cannot  find  symbol  START_OBJECT	224	None	replace
998	[BUG]  [BUGGY]  if(iterator.hasNext())  {  o  =  iterator.next();  }  else  {  push(iterator.next());  }  [CE]  unreachable  statement  [FE]                                    ArrayIndexOutOfBoundsException      [CONTEXT]      if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }      [BUGGY]  if(iterator.hasNext())  {  o  =  iterator.next();  }  else  {  push(iterator.next());  }  [BUGGY]      return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	replace	if(iterator.hasNext())  {  o  =  iterator.next();  }  else  {  push(iterator.next());  }	  o    =    iterator.next();    	non-compiled	[CE]  unreachable  statement	224	None	replace
999	[BUG]  [BUGGY]  Object  o  =  itserator.next();  [CE]  variable  o  is  already  defined  in  method  peek()  [FE]                        ArrayIndexOutOfBoundsException      [CONTEXT]      if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }      [BUGGY]  Object  o  =  itserator.next();  [BUGGY]      return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	replace	Object  o  =  itserator.next();	  Object    o    =    iterator.next();    	non-compiled	[CE]  variable  o  is  already  defined  in  method  peek()	185	None	replace
1000	[BUG]  [BUGGY]  Object  o  =  this.iterator.next();  [CE]  variable  o  is  already  defined  in  method  peek()  [FE]                          ArrayIndexOutOfBoundsException      [CONTEXT]      if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }      [BUGGY]  Object  o  =  this.iterator.next();  [BUGGY]      return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	replace	Object  o  =  this.iterator.next();	  Object    o    =    iterator.next();    	non-compiled	[CE]  variable  o  is  already  defined  in  method  peek()	185	None	replace
1001	[BUG]  [BUGGY]  Object  o  =  iterator.nextToken();  [CE]  variable  o  is  already  defined  in  method  peek()  [FE]                            ArrayIndexOutOfBoundsException      [CONTEXT]      if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }      [BUGGY]  Object  o  =  iterator.nextToken();  [BUGGY]      return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	replace	Object  o  =  iterator.nextToken();	  Object    o    =    iterator.next();    	non-compiled	[CE]  variable  o  is  already  defined  in  method  peek()	185	None	replace
1002	[BUG]  [BUGGY]  Object  o  =  iterator.next()  instanceof  JsonArray;  [CE]  variable  o  is  already  defined  in  method  peek()  [FE]                              ArrayIndexOutOfBoundsException      [CONTEXT]      if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }      [BUGGY]  Object  o  =  iterator.next()  instanceof  JsonArray;  [BUGGY]      return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	replace	Object  o  =  iterator.next()  instanceof  JsonArray;	  Object    o    =    iterator.next();    	non-compiled	[CE]  variable  o  is  already  defined  in  method  peek()	185	None	replace
1003	[BUG]  [BUGGY]  Object  o  =  iterator.getNext();  [CE]  variable  o  is  already  defined  in  method  peek()  [FE]                                ArrayIndexOutOfBoundsException      [CONTEXT]      if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }      [BUGGY]  Object  o  =  iterator.getNext();  [BUGGY]      return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	replace	Object  o  =  iterator.getNext();	  Object    o    =    iterator.next();    	non-compiled	[CE]  variable  o  is  already  defined  in  method  peek()	185	None	replace
1004	[BUG]  [BUGGY]  }  else  if(o  instanceof  JsonObject  ||  o  instanceof  Boolean)  {  }  else  if(o  instanceof  JsonObject  ||  o  instanceof  Boolean)  {  [CE]  missing  return  statement  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]      if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }      [BUGGY]  }  else  if(o  instanceof  JsonObject  ||  o  instanceof  Boolean)  {  }  else  if(o  instanceof  JsonObject  ||  o  instanceof  Boolean)  {  [BUGGY]      return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	replace	}    else    if(o    instanceof    JsonObject    ||    o    instanceof    Boolean)    {    }  else  if(o  instanceof  JsonObject  ||  o  instanceof  Boolean)  {	  	non-compiled	[CE]  missing  return  statement	53	None	add
1005	[BUG]  [BUGGY]  }  else  if(o  instanceof  JsonObject  ||  o  instanceof  Boolean)  {  }  else  if(o  instanceof  JsonObject  ||  o  instanceof  Boolean)  {  return  JsonToken.BEGIN_OBJECT;  }  else  if(o  instanceof  JsonObject  ||  o  instanceof  Boolean)  {  [CE]  missing  return  statement  [FE]      ArrayIndexOutOfBoundsException    [CONTEXT]      if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }      [BUGGY]  }  else  if(o  instanceof  JsonObject  ||  o  instanceof  Boolean)  {  }  else  if(o  instanceof  JsonObject  ||  o  instanceof  Boolean)  {  return  JsonToken.BEGIN_OBJECT;  }  else  if(o  instanceof  JsonObject  ||  o  instanceof  Boolean)  {  [BUGGY]      return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	replace	}    else    if(o    instanceof    JsonObject    ||    o    instanceof    Boolean)    {    }  else  if(o  instanceof  JsonObject  ||  o  instanceof  Boolean)  {  return  JsonToken.BEGIN_OBJECT;  }  else  if(o  instanceof  JsonObject  ||  o  instanceof  Boolean)  {	  	non-compiled	[CE]  missing  return  statement	53	None	add
1006	[BUG]  [BUGGY]  }  else  if(o  instanceof  JsonObject  ||  o  instanceof  Boolean)  {  else  if(o  instanceof  JsonObject  ||  o  instanceof  Boolean)  {  [CE]  'else'  without  'if'  [FE]        ArrayIndexOutOfBoundsException    [CONTEXT]      if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }      [BUGGY]  }  else  if(o  instanceof  JsonObject  ||  o  instanceof  Boolean)  {  else  if(o  instanceof  JsonObject  ||  o  instanceof  Boolean)  {  [BUGGY]      return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	replace	}    else    if(o    instanceof    JsonObject    ||    o    instanceof    Boolean)    {    else  if(o  instanceof  JsonObject  ||  o  instanceof  Boolean)  {	  	non-compiled	[CE]  'else'  without  'if'	53	None	add
1007	[BUG]  [BUGGY]  }  else  if(o  instanceof  JsonObject  ||  o  instanceof  Boolean)  {  }  else  if(o  instanceof  JsonObject  ||  o  instanceof  Boolean)  <  return  JsonToken.BEGIN_OBJECT;  [CE]  illegal  start  of  type  [FE]          ArrayIndexOutOfBoundsException    [CONTEXT]      if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }      [BUGGY]  }  else  if(o  instanceof  JsonObject  ||  o  instanceof  Boolean)  {  }  else  if(o  instanceof  JsonObject  ||  o  instanceof  Boolean)  <  return  JsonToken.BEGIN_OBJECT;  [BUGGY]      return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	replace	}    else    if(o    instanceof    JsonObject    ||    o    instanceof    Boolean)    {    }  else  if(o  instanceof  JsonObject  ||  o  instanceof  Boolean)  <  return  JsonToken.BEGIN_OBJECT;	  	non-compiled	[CE]  illegal  start  of  type	53	None	add
1008	[BUG]  [BUGGY]  }  else  if(o  instanceof  JsonObject  ||  o  instanceof  Boolean)  {  }  else  if(o  instanceof  JsonObject  ||  o  instanceof  Boolean)  {  return  JsonToken.BEGIN_OBJECT;  }  else  if(o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_OBJECT;  }  else  if(o  instanceof  J  [CE]  ')'  expected  [FE]            ArrayIndexOutOfBoundsException    [CONTEXT]      if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }      [BUGGY]  }  else  if(o  instanceof  JsonObject  ||  o  instanceof  Boolean)  {  }  else  if(o  instanceof  JsonObject  ||  o  instanceof  Boolean)  {  return  JsonToken.BEGIN_OBJECT;  }  else  if(o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_OBJECT;  }  else  if(o  instanceof  J  [BUGGY]      return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	replace	}    else    if(o    instanceof    JsonObject    ||    o    instanceof    Boolean)    {    }  else  if(o  instanceof  JsonObject  ||  o  instanceof  Boolean)  {  return  JsonToken.BEGIN_OBJECT;  }  else  if(o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_OBJECT;  }  else  if(o  instanceof  J	  	non-compiled	[CE]  ')'  expected	53	None	add
1009	[BUG]  [BUGGY]  }  else  if(o  instanceof  JsonObject  ||  o  instanceof  Boolean)  {  }  else  if(o  instanceof  JsonObject  ||  o  instanceof  Boolean)  {  return  JsonToken.BEGIN_OBJECT;  }  else  if(o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_OBJECT;  }  [CE]  illegal  start  of  type  [FE]              ArrayIndexOutOfBoundsException    [CONTEXT]      if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }      [BUGGY]  }  else  if(o  instanceof  JsonObject  ||  o  instanceof  Boolean)  {  }  else  if(o  instanceof  JsonObject  ||  o  instanceof  Boolean)  {  return  JsonToken.BEGIN_OBJECT;  }  else  if(o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_OBJECT;  }  [BUGGY]      return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	replace	}    else    if(o    instanceof    JsonObject    ||    o    instanceof    Boolean)    {    }  else  if(o  instanceof  JsonObject  ||  o  instanceof  Boolean)  {  return  JsonToken.BEGIN_OBJECT;  }  else  if(o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_OBJECT;  }	  	non-compiled	[CE]  illegal  start  of  type	53	None	add
1010	[BUG]  [BUGGY]  }  else  if(o  instanceof  JsonObject  ||  o  instanceof  Boolean)  {  }  else  if(o  instanceof  JsonObject  ||  o  instanceof  Boolean)  {  return  JsonToken.BEGIN_OBJECT;  }  else  if(o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_OBJECT;  }  else  if(o  instanceof  Json  [CE]  ')'  expected  [FE]                ArrayIndexOutOfBoundsException    [CONTEXT]      if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }      [BUGGY]  }  else  if(o  instanceof  JsonObject  ||  o  instanceof  Boolean)  {  }  else  if(o  instanceof  JsonObject  ||  o  instanceof  Boolean)  {  return  JsonToken.BEGIN_OBJECT;  }  else  if(o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_OBJECT;  }  else  if(o  instanceof  Json  [BUGGY]      return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	replace	}    else    if(o    instanceof    JsonObject    ||    o    instanceof    Boolean)    {    }  else  if(o  instanceof  JsonObject  ||  o  instanceof  Boolean)  {  return  JsonToken.BEGIN_OBJECT;  }  else  if(o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_OBJECT;  }  else  if(o  instanceof  Json	  	non-compiled	[CE]  ')'  expected	53	None	add
1011	[BUG]  [BUGGY]  }  else  if(o  instanceof  JsonObject!=  [CE]  illegal  start  of  expression  [FE]            ArrayIndexOutOfBoundsException      [CONTEXT]      if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }      [BUGGY]  }  else  if(o  instanceof  JsonObject!=  [BUGGY]      return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	replace	}  else  if(o  instanceof  JsonObject!=	  }    else    if(o    instanceof    JsonObject    ==    	non-compiled	[CE]  illegal  start  of  expression	129	None	replace
1012	[BUG]  [BUGGY]  }  else  if(o  instanceof  JsonObject  <  =  illegal  start  of  expression)  {  [CE]  illegal  start  of  type  [FE]              ArrayIndexOutOfBoundsException      [CONTEXT]      if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }      [BUGGY]  }  else  if(o  instanceof  JsonObject  <  =  illegal  start  of  expression)  {  [BUGGY]      return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	replace	}  else  if(o  instanceof  JsonObject  <  =  illegal  start  of  expression)  {	  }    else    if(o    instanceof    JsonObject    ==    	non-compiled	[CE]  illegal  start  of  type	129	None	replace
1013	[BUG]  [BUGGY]  }  else  if(!(o  instanceof  JsonObject)&&  isObject  ||  isObject)  {  [CE]  cannot  find  symbol  isObject  [FE]              AssertionError      [CONTEXT]      if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }      [BUGGY]  }  else  if(!(o  instanceof  JsonObject)&&  isObject  ||  isObject)  {  [BUGGY]      return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	replace	}  else  if(!(o  instanceof  JsonObject)&&  isObject  ||  isObject)  {	  }    else    if(!(o    instanceof    JsonObject)&&    isObject)    {    	non-compiled	[CE]  cannot  find  symbol  isObject	141	None	replace
1014	[BUG]  [BUGGY]  }  else  if(!(o  instanceof  JsonObject)||  isObject)  {  [CE]  cannot  find  symbol  isObject  [FE]                AssertionError      [CONTEXT]      if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }      [BUGGY]  }  else  if(!(o  instanceof  JsonObject)||  isObject)  {  [BUGGY]      return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	replace	}  else  if(!(o  instanceof  JsonObject)||  isObject)  {	  }    else    if(!(o    instanceof    JsonObject)&&    isObject)    {    	non-compiled	[CE]  cannot  find  symbol  isObject	141	None	replace
1015	[BUG]  [BUGGY]  }  else  if(!(o  instanceof  JsonObject)&&  isFunctionObject)  {  [CE]  cannot  find  symbol  isFunctionObject  [FE]                  AssertionError      [CONTEXT]      if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }      [BUGGY]  }  else  if(!(o  instanceof  JsonObject)&&  isFunctionObject)  {  [BUGGY]      return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	replace	}  else  if(!(o  instanceof  JsonObject)&&  isFunctionObject)  {	  }    else    if(!(o    instanceof    JsonObject)&&    isObject)    {    	non-compiled	[CE]  cannot  find  symbol  isFunctionObject	141	None	replace
1016	[BUG]  [BUGGY]  }  else  if(!(o  instanceof  JsonObject)&&  isArray)  {  [CE]  cannot  find  symbol  isArray  [FE]                    AssertionError      [CONTEXT]      if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }      [BUGGY]  }  else  if(!(o  instanceof  JsonObject)&&  isArray)  {  [BUGGY]      return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	replace	}  else  if(!(o  instanceof  JsonObject)&&  isArray)  {	  }    else    if(!(o    instanceof    JsonObject)&&    isObject)    {    	non-compiled	[CE]  cannot  find  symbol  isArray	141	None	replace
1017	[BUG]  [BUGGY]  }  else  if(!(o  instanceof  JsonObject)&&  hasObject)  {  [CE]  cannot  find  symbol  hasObject  [FE]                      AssertionError      [CONTEXT]      if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }      [BUGGY]  }  else  if(!(o  instanceof  JsonObject)&&  hasObject)  {  [BUGGY]      return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	replace	}  else  if(!(o  instanceof  JsonObject)&&  hasObject)  {	  }    else    if(!(o    instanceof    JsonObject)&&    isObject)    {    	non-compiled	[CE]  cannot  find  symbol  hasObject	141	None	replace
1018	[BUG]  [BUGGY]  }  else  if(!(o  instanceof  JsonArray  ||  o  instanceof  JsonPrimitive))  {  }  else  if(!(o  instanceof  JsonArray  ||  o  instanceof  JsonPrimitive))  {  [CE]  missing  return  statement  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]      if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }      [BUGGY]  }  else  if(!(o  instanceof  JsonArray  ||  o  instanceof  JsonPrimitive))  {  }  else  if(!(o  instanceof  JsonArray  ||  o  instanceof  JsonPrimitive))  {  [BUGGY]      return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	replace	}    else    if(!(o    instanceof    JsonArray    ||    o    instanceof    JsonPrimitive))    {    }  else  if(!(o  instanceof  JsonArray  ||  o  instanceof  JsonPrimitive))  {	  	non-compiled	[CE]  missing  return  statement	145	None	add
1019	[BUG]  [BUGGY]  }  else  if(!(o  instanceof  JsonArray  ||  o  instanceof  JsonPrimitive))  {  }  else  if(!(o  instanceof  JsonArray  ||  o  instanceof  JsonPrimitive))  <  return  JsonToken.BEGIN_OBJECT;  [CE]  illegal  start  of  type  [FE]      ArrayIndexOutOfBoundsException    [CONTEXT]      if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }      [BUGGY]  }  else  if(!(o  instanceof  JsonArray  ||  o  instanceof  JsonPrimitive))  {  }  else  if(!(o  instanceof  JsonArray  ||  o  instanceof  JsonPrimitive))  <  return  JsonToken.BEGIN_OBJECT;  [BUGGY]      return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	replace	}    else    if(!(o    instanceof    JsonArray    ||    o    instanceof    JsonPrimitive))    {    }  else  if(!(o  instanceof  JsonArray  ||  o  instanceof  JsonPrimitive))  <  return  JsonToken.BEGIN_OBJECT;	  	non-compiled	[CE]  illegal  start  of  type	145	None	add
1020	[BUG]  [BUGGY]  }  else  if(!(o  instanceof  JsonArray  ||  o  instanceof  JsonPrimitive))  {  else  if(!(o  instanceof  JsonArray  ||  o  instanceof  JsonPrimitive))  {  [CE]  'else'  without  'if'  [FE]        ArrayIndexOutOfBoundsException    [CONTEXT]      if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }      [BUGGY]  }  else  if(!(o  instanceof  JsonArray  ||  o  instanceof  JsonPrimitive))  {  else  if(!(o  instanceof  JsonArray  ||  o  instanceof  JsonPrimitive))  {  [BUGGY]      return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	replace	}    else    if(!(o    instanceof    JsonArray    ||    o    instanceof    JsonPrimitive))    {    else  if(!(o  instanceof  JsonArray  ||  o  instanceof  JsonPrimitive))  {	  	non-compiled	[CE]  'else'  without  'if'	145	None	add
1021	[BUG]  [BUGGY]  }  else  if(!(o  instanceof  JsonArray  ||  o  instanceof  JsonPrimitive))  {  <  }  else  if(!(o  instanceof  JsonArray  ||  o  instanceof  JsonPrimitive))  {  [CE]  illegal  start  of  type  [FE]          ArrayIndexOutOfBoundsException    [CONTEXT]      if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }      [BUGGY]  }  else  if(!(o  instanceof  JsonArray  ||  o  instanceof  JsonPrimitive))  {  <  }  else  if(!(o  instanceof  JsonArray  ||  o  instanceof  JsonPrimitive))  {  [BUGGY]      return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	replace	}    else    if(!(o    instanceof    JsonArray    ||    o    instanceof    JsonPrimitive))    {    <  }  else  if(!(o  instanceof  JsonArray  ||  o  instanceof  JsonPrimitive))  {	  	non-compiled	[CE]  illegal  start  of  type	145	None	add
1022	[BUG]  [BUGGY]  }  else  if(!(o  instanceof  JsonArray  ||  o  instanceof  JsonPrimitive))  {  }  else  if(!(o  instanceof  JSONArray  ||  o  instanceof  JsonPrimitive))  {  [CE]  cannot  find  symbol  [FE]            ArrayIndexOutOfBoundsException    [CONTEXT]      if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }      [BUGGY]  }  else  if(!(o  instanceof  JsonArray  ||  o  instanceof  JsonPrimitive))  {  }  else  if(!(o  instanceof  JSONArray  ||  o  instanceof  JsonPrimitive))  {  [BUGGY]      return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	replace	}    else    if(!(o    instanceof    JsonArray    ||    o    instanceof    JsonPrimitive))    {    }  else  if(!(o  instanceof  JSONArray  ||  o  instanceof  JsonPrimitive))  {	  	non-compiled	[CE]  cannot  find  symbol	145	None	add
1023	[BUG]  [BUGGY]  }  else  if(!(o  instanceof  JsonArray  ||  o  instanceof  JsonPrimitive))  {  {  }  else  if(!(o  instanceof  JsonArray  ||  o  instanceof  JsonPrimitive))  {  [CE]  'else'  without  'if'  [FE]              ArrayIndexOutOfBoundsException    [CONTEXT]      if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }      [BUGGY]  }  else  if(!(o  instanceof  JsonArray  ||  o  instanceof  JsonPrimitive))  {  {  }  else  if(!(o  instanceof  JsonArray  ||  o  instanceof  JsonPrimitive))  {  [BUGGY]      return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	replace	}    else    if(!(o    instanceof    JsonArray    ||    o    instanceof    JsonPrimitive))    {    {  }  else  if(!(o  instanceof  JsonArray  ||  o  instanceof  JsonPrimitive))  {	  	non-compiled	[CE]  'else'  without  'if'	145	None	add
1024	[BUG]  [BUGGY]  }  else  if(o  instanceof  JsonPrimitive)  {  }  else  if(o  instanceof  JsonPrimitive)  {  [CE]  missing  return  statement  [FE]    AssertionError    [CONTEXT]      if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }      [BUGGY]  }  else  if(o  instanceof  JsonPrimitive)  {  }  else  if(o  instanceof  JsonPrimitive)  {  [BUGGY]      return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	replace	}    else    if(o    instanceof    JsonPrimitive)    {    }  else  if(o  instanceof  JsonPrimitive)  {	  	non-compiled	[CE]  missing  return  statement	8	None	add
1025	[BUG]  [BUGGY]  }  else  if(o  instanceof  JsonPrimitive)  {  else  if(o  instanceof  JsonPrimitive)  {  [CE]  'else'  without  'if'  [FE]      AssertionError    [CONTEXT]      if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }      [BUGGY]  }  else  if(o  instanceof  JsonPrimitive)  {  else  if(o  instanceof  JsonPrimitive)  {  [BUGGY]      return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	replace	}    else    if(o    instanceof    JsonPrimitive)    {    else  if(o  instanceof  JsonPrimitive)  {	  	non-compiled	[CE]  'else'  without  'if'	8	None	add
1026	[BUG]  [BUGGY]  }  else  if(o  instanceof  JsonPrimitive)  {  }  else  if(o  instanceof  JsonPrimitive)  <  return  JsonToken.BEGIN_OBJECT;  [CE]  illegal  start  of  type  [FE]        AssertionError    [CONTEXT]      if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }      [BUGGY]  }  else  if(o  instanceof  JsonPrimitive)  {  }  else  if(o  instanceof  JsonPrimitive)  <  return  JsonToken.BEGIN_OBJECT;  [BUGGY]      return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	replace	}    else    if(o    instanceof    JsonPrimitive)    {    }  else  if(o  instanceof  JsonPrimitive)  <  return  JsonToken.BEGIN_OBJECT;	  	non-compiled	[CE]  illegal  start  of  type	8	None	add
1027	[BUG]  [BUGGY]  }  else  if(o  instanceof  JsonPrimitive)  {  result.add(JsonToken.BEGIN_OBJECT);  }  else  if(o  instanceof  JsonPrimitive)  {  [CE]  cannot  find  symbol  result  [FE]          AssertionError    [CONTEXT]      if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }      [BUGGY]  }  else  if(o  instanceof  JsonPrimitive)  {  result.add(JsonToken.BEGIN_OBJECT);  }  else  if(o  instanceof  JsonPrimitive)  {  [BUGGY]      return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	replace	}    else    if(o    instanceof    JsonPrimitive)    {    result.add(JsonToken.BEGIN_OBJECT);  }  else  if(o  instanceof  JsonPrimitive)  {	  	non-compiled	[CE]  cannot  find  symbol  result	8	None	add
1028	[BUG]  [BUGGY]  }  else  if(o  instanceof  JsonPrimitive)  {  <  }  else  if(o  instanceof  JsonPrimitive)  {  [CE]  illegal  start  of  type  [FE]            AssertionError    [CONTEXT]      if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }      [BUGGY]  }  else  if(o  instanceof  JsonPrimitive)  {  <  }  else  if(o  instanceof  JsonPrimitive)  {  [BUGGY]      return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	replace	}    else    if(o    instanceof    JsonPrimitive)    {    <  }  else  if(o  instanceof  JsonPrimitive)  {	  	non-compiled	[CE]  illegal  start  of  type	8	None	add
1029	[BUG]  [BUGGY]  }  else  if(o  instanceof  JsonPrimitive)  {  }  else  if(o  instanceof  JsonPrimitive)  <  =  JsonToken.BEGIN_OBJECT;  [CE]  illegal  start  of  type  [FE]              AssertionError    [CONTEXT]      if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }      [BUGGY]  }  else  if(o  instanceof  JsonPrimitive)  {  }  else  if(o  instanceof  JsonPrimitive)  <  =  JsonToken.BEGIN_OBJECT;  [BUGGY]      return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	replace	}    else    if(o    instanceof    JsonPrimitive)    {    }  else  if(o  instanceof  JsonPrimitive)  <  =  JsonToken.BEGIN_OBJECT;	  	non-compiled	[CE]  illegal  start  of  type	8	None	add
1030	[BUG]  [BUGGY]  }  else  if(o  instanceof  JsonPrimitive)  {  }  else  if(o  instanceof  JsonPrimitive)  <  return  JsonToken.END_OBJECT;  [CE]  illegal  start  of  type  [FE]                AssertionError    [CONTEXT]      if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }      [BUGGY]  }  else  if(o  instanceof  JsonPrimitive)  {  }  else  if(o  instanceof  JsonPrimitive)  <  return  JsonToken.END_OBJECT;  [BUGGY]      return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	replace	}    else    if(o    instanceof    JsonPrimitive)    {    }  else  if(o  instanceof  JsonPrimitive)  <  return  JsonToken.END_OBJECT;	  	non-compiled	[CE]  illegal  start  of  type	8	None	add
1031	[BUG]  [BUGGY]  }  else  if(o  instanceof  JsonObject  &&  o  instanceof  JsonArray)  {  ArrayIndexOutOfBoundsException  e  =  new  ArrayIndexOutOfBoundsException(iterator.next());  [CE]  cannot  find  symbol  iterator  [FE]        ArrayIndexOutOfBoundsException      [CONTEXT]      if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }      [BUGGY]  }  else  if(o  instanceof  JsonObject  &&  o  instanceof  JsonArray)  {  ArrayIndexOutOfBoundsException  e  =  new  ArrayIndexOutOfBoundsException(iterator.next());  [BUGGY]      return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	replace	}  else  if(o  instanceof  JsonObject  &&  o  instanceof  JsonArray)  {  ArrayIndexOutOfBoundsException  e  =  new  ArrayIndexOutOfBoundsException(iterator.next());	  }    else    if(o    instanceof    JsonObject    ||    o    instanceof    JsonArray)    {    ArrayIndexOutOfBoundsException    e    =    new    ArrayIndexOutOfBoundsException(iterator.next());    	non-compiled	[CE]  cannot  find  symbol  iterator	192	None	replace
1032	[BUG]  [BUGGY]  }  else  if(o  instanceof  JsonObject  ||  o  instanceof  JsonNull)  {  ArrayIndexOutOfBoundsException  e  =  new  ArrayIndexOutOfBoundsException(iterator.next());  [CE]  cannot  find  symbol  iterator  [FE]          ArrayIndexOutOfBoundsException      [CONTEXT]      if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }      [BUGGY]  }  else  if(o  instanceof  JsonObject  ||  o  instanceof  JsonNull)  {  ArrayIndexOutOfBoundsException  e  =  new  ArrayIndexOutOfBoundsException(iterator.next());  [BUGGY]      return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	replace	}  else  if(o  instanceof  JsonObject  ||  o  instanceof  JsonNull)  {  ArrayIndexOutOfBoundsException  e  =  new  ArrayIndexOutOfBoundsException(iterator.next());	  }    else    if(o    instanceof    JsonObject    ||    o    instanceof    JsonArray)    {    ArrayIndexOutOfBoundsException    e    =    new    ArrayIndexOutOfBoundsException(iterator.next());    	non-compiled	[CE]  cannot  find  symbol  iterator	192	None	replace
1033	[BUG]  [BUGGY]  }  else  if(o  instanceof  JsonObject  ||  o  instanceof  JsonArray)  {  ArrayIndexOutOfBoundsException  e  =  new  ArrayIndexOutOfBoundsException(iterator.getClass());  [CE]  cannot  find  symbol  iterator  [FE]            ArrayIndexOutOfBoundsException      [CONTEXT]      if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }      [BUGGY]  }  else  if(o  instanceof  JsonObject  ||  o  instanceof  JsonArray)  {  ArrayIndexOutOfBoundsException  e  =  new  ArrayIndexOutOfBoundsException(iterator.getClass());  [BUGGY]      return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	replace	}  else  if(o  instanceof  JsonObject  ||  o  instanceof  JsonArray)  {  ArrayIndexOutOfBoundsException  e  =  new  ArrayIndexOutOfBoundsException(iterator.getClass());	  }    else    if(o    instanceof    JsonObject    ||    o    instanceof    JsonArray)    {    ArrayIndexOutOfBoundsException    e    =    new    ArrayIndexOutOfBoundsException(iterator.next());    	non-compiled	[CE]  cannot  find  symbol  iterator	192	None	replace
1034	[BUG]  [BUGGY]  }  else  if(o  instanceof  JsonObject  ||  o  instanceof  JsonType)  {  ArrayIndexOutOfBoundsException  e  =  new  ArrayIndexOutOfBoundsException(iterator.next());  [CE]  cannot  find  symbol  [FE]              ArrayIndexOutOfBoundsException      [CONTEXT]      if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }      [BUGGY]  }  else  if(o  instanceof  JsonObject  ||  o  instanceof  JsonType)  {  ArrayIndexOutOfBoundsException  e  =  new  ArrayIndexOutOfBoundsException(iterator.next());  [BUGGY]      return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	replace	}  else  if(o  instanceof  JsonObject  ||  o  instanceof  JsonType)  {  ArrayIndexOutOfBoundsException  e  =  new  ArrayIndexOutOfBoundsException(iterator.next());	  }    else    if(o    instanceof    JsonObject    ||    o    instanceof    JsonArray)    {    ArrayIndexOutOfBoundsException    e    =    new    ArrayIndexOutOfBoundsException(iterator.next());    	non-compiled	[CE]  cannot  find  symbol	192	None	replace
1035	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }      [BUGGY]  }  else  if(o  instanceof  JsonArray  &&  o  instanceof  String)  {  [BUGGY]      return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	add	}  else  if(o  instanceof  JsonArray  &&  o  instanceof  String)  {	  }    else    if(o    instanceof    JsonObject    &&    o    instanceof    String)    {    	compilable	  [FE]  AssertionError  	48	2	replace
1036	[BUG]  [BUGGY]  }  else  if(o  instanceof  JsonArray  &&  o  instanceof  String)  {  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }      [BUGGY]  }  else  if(o  instanceof  JsonArray  &&  o  instanceof  String)  {  [BUGGY]      return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	replace	}  else  if(o  instanceof  JsonArray  &&  o  instanceof  String)  {	  }    else    if(o    instanceof    JsonObject    &&    o    instanceof    String)    {    	compilable	  [FE]  AssertionError  	48	2	replace
1037	[BUG]  [BUGGY]  [FE]  ArrayIndexOutOfBoundsException  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]      if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }      [BUGGY]  }  else  if(o  instanceof  JsonObject  ||  o  instanceof  JsonArray  ||!(o  instanceof  JsonPrimitive))  {  [BUGGY]      return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	add	}  else  if(o  instanceof  JsonObject  ||  o  instanceof  JsonArray  ||!(o  instanceof  JsonPrimitive))  {	  }    else    if(o    instanceof    JsonObject    ||    o    instanceof    JsonArray    ||    o    instanceof    JsonPrimitive)    {    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	144	2	replace
1038	[BUG]  [BUGGY]  }  else  if(o  instanceof  JsonObject  ||  o  instanceof  JsonArray  ||!(o  instanceof  JsonPrimitive))  {  [FE]  ArrayIndexOutOfBoundsException  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]      if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }      [BUGGY]  }  else  if(o  instanceof  JsonObject  ||  o  instanceof  JsonArray  ||!(o  instanceof  JsonPrimitive))  {  [BUGGY]      return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	replace	}  else  if(o  instanceof  JsonObject  ||  o  instanceof  JsonArray  ||!(o  instanceof  JsonPrimitive))  {	  }    else    if(o    instanceof    JsonObject    ||    o    instanceof    JsonArray    ||    o    instanceof    JsonPrimitive)    {    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	144	2	replace
1039	[BUG]  [BUGGY]  }  else  if(o  instanceof  JsonObject  orig  ||  o  instanceof  JsonArray  ||  o  instanceof  JsonPrimitive)  {  [CE]  ')'  expected  [FE]      ArrayIndexOutOfBoundsException    [CONTEXT]      if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }      [BUGGY]  }  else  if(o  instanceof  JsonObject  orig  ||  o  instanceof  JsonArray  ||  o  instanceof  JsonPrimitive)  {  [BUGGY]      return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	replace	}  else  if(o  instanceof  JsonObject  orig  ||  o  instanceof  JsonArray  ||  o  instanceof  JsonPrimitive)  {	  }    else    if(o    instanceof    JsonObject    ||    o    instanceof    JsonArray    ||    o    instanceof    JsonPrimitive)    {    	non-compiled	[CE]  ')'  expected	144	None	replace
1040	[BUG]  [BUGGY]  [FE]  ArrayIndexOutOfBoundsException  [FE]        ArrayIndexOutOfBoundsException    [CONTEXT]      if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }      [BUGGY]  }  else  if(o  instanceof  JsonObject  ||  o  instanceof  JsonNull  ||  o  instanceof  JsonPrimitive)  {  [BUGGY]      return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	add	}  else  if(o  instanceof  JsonObject  ||  o  instanceof  JsonNull  ||  o  instanceof  JsonPrimitive)  {	  }    else    if(o    instanceof    JsonObject    ||    o    instanceof    JsonArray    ||    o    instanceof    JsonPrimitive)    {    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	144	2	replace
1041	[BUG]  [BUGGY]  }  else  if(o  instanceof  JsonObject  ||  o  instanceof  JsonNull  ||  o  instanceof  JsonPrimitive)  {  [FE]  ArrayIndexOutOfBoundsException  [FE]        ArrayIndexOutOfBoundsException    [CONTEXT]      if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }      [BUGGY]  }  else  if(o  instanceof  JsonObject  ||  o  instanceof  JsonNull  ||  o  instanceof  JsonPrimitive)  {  [BUGGY]      return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	replace	}  else  if(o  instanceof  JsonObject  ||  o  instanceof  JsonNull  ||  o  instanceof  JsonPrimitive)  {	  }    else    if(o    instanceof    JsonObject    ||    o    instanceof    JsonArray    ||    o    instanceof    JsonPrimitive)    {    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	144	2	replace
1042	[BUG]  [BUGGY]  }  else  if(o  instanceof  JsonObject  ||  o  instanceof  JsonNumber  ||  o  instanceof  JsonPrimitive)  {  [CE]  cannot  find  symbol  [FE]          ArrayIndexOutOfBoundsException    [CONTEXT]      if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }      [BUGGY]  }  else  if(o  instanceof  JsonObject  ||  o  instanceof  JsonNumber  ||  o  instanceof  JsonPrimitive)  {  [BUGGY]      return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	replace	}  else  if(o  instanceof  JsonObject  ||  o  instanceof  JsonNumber  ||  o  instanceof  JsonPrimitive)  {	  }    else    if(o    instanceof    JsonObject    ||    o    instanceof    JsonArray    ||    o    instanceof    JsonPrimitive)    {    	non-compiled	[CE]  cannot  find  symbol	144	None	replace
1043	[BUG]  [BUGGY]  }  else  if(o  instanceof  JsonArray  ||  o  instanceof  String)  {  }  else  if(o  instanceof  JsonArray  ||  o  instanceof  String)  {  [CE]  missing  return  statement  [FE]    AssertionError    [CONTEXT]      if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }      [BUGGY]  }  else  if(o  instanceof  JsonArray  ||  o  instanceof  String)  {  }  else  if(o  instanceof  JsonArray  ||  o  instanceof  String)  {  [BUGGY]      return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	replace	}    else    if(o    instanceof    JsonArray    ||    o    instanceof    String)    {    }  else  if(o  instanceof  JsonArray  ||  o  instanceof  String)  {	  	non-compiled	[CE]  missing  return  statement	51	None	add
1044	[BUG]  [BUGGY]  }  else  if(o  instanceof  JsonArray  ||  o  instanceof  String)  {  }  else  if(o  instanceof  JsonArray  ||  o  instanceof  String)  <  return  JsonToken.BEGIN_OBJECT;  [CE]  illegal  start  of  type  [FE]      AssertionError    [CONTEXT]      if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }      [BUGGY]  }  else  if(o  instanceof  JsonArray  ||  o  instanceof  String)  {  }  else  if(o  instanceof  JsonArray  ||  o  instanceof  String)  <  return  JsonToken.BEGIN_OBJECT;  [BUGGY]      return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	replace	}    else    if(o    instanceof    JsonArray    ||    o    instanceof    String)    {    }  else  if(o  instanceof  JsonArray  ||  o  instanceof  String)  <  return  JsonToken.BEGIN_OBJECT;	  	non-compiled	[CE]  illegal  start  of  type	51	None	add
1045	[BUG]  [BUGGY]  }  else  if(o  instanceof  JsonArray  ||  o  instanceof  String)  {  else  if(o  instanceof  JsonArray  ||  o  instanceof  String)  {  [CE]  'else'  without  'if'  [FE]        AssertionError    [CONTEXT]      if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }      [BUGGY]  }  else  if(o  instanceof  JsonArray  ||  o  instanceof  String)  {  else  if(o  instanceof  JsonArray  ||  o  instanceof  String)  {  [BUGGY]      return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	replace	}    else    if(o    instanceof    JsonArray    ||    o    instanceof    String)    {    else  if(o  instanceof  JsonArray  ||  o  instanceof  String)  {	  	non-compiled	[CE]  'else'  without  'if'	51	None	add
1046	[BUG]  [BUGGY]  }  else  if(o  instanceof  JsonArray  ||  o  instanceof  String)  {  <  }  else  if(o  instanceof  JsonArray  ||  o  instanceof  String)  {  [CE]  illegal  start  of  type  [FE]          AssertionError    [CONTEXT]      if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }      [BUGGY]  }  else  if(o  instanceof  JsonArray  ||  o  instanceof  String)  {  <  }  else  if(o  instanceof  JsonArray  ||  o  instanceof  String)  {  [BUGGY]      return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	replace	}    else    if(o    instanceof    JsonArray    ||    o    instanceof    String)    {    <  }  else  if(o  instanceof  JsonArray  ||  o  instanceof  String)  {	  	non-compiled	[CE]  illegal  start  of  type	51	None	add
1047	[BUG]  [BUGGY]  }  else  if(o  instanceof  JsonArray  ||  o  instanceof  String)  {  }  else  if(o  instanceof  JsonArray  ||  o  instanceof  String)  ==  return  JsonToken.BEGIN_OBJECT;  [CE]  illegal  start  of  expression  [FE]            AssertionError    [CONTEXT]      if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }      [BUGGY]  }  else  if(o  instanceof  JsonArray  ||  o  instanceof  String)  {  }  else  if(o  instanceof  JsonArray  ||  o  instanceof  String)  ==  return  JsonToken.BEGIN_OBJECT;  [BUGGY]      return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	replace	}    else    if(o    instanceof    JsonArray    ||    o    instanceof    String)    {    }  else  if(o  instanceof  JsonArray  ||  o  instanceof  String)  ==  return  JsonToken.BEGIN_OBJECT;	  	non-compiled	[CE]  illegal  start  of  expression	51	None	add
1048	[BUG]  [BUGGY]  }  else  if(o  instanceof  JsonArray  ||  o  instanceof  String)  {  }  else  if(o  instanceof  JsonArray  ||  o  instanceof  String)  <  =  JsonToken.BEGIN_OBJECT;  [CE]  illegal  start  of  type  [FE]              AssertionError    [CONTEXT]      if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }      [BUGGY]  }  else  if(o  instanceof  JsonArray  ||  o  instanceof  String)  {  }  else  if(o  instanceof  JsonArray  ||  o  instanceof  String)  <  =  JsonToken.BEGIN_OBJECT;  [BUGGY]      return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	replace	}    else    if(o    instanceof    JsonArray    ||    o    instanceof    String)    {    }  else  if(o  instanceof  JsonArray  ||  o  instanceof  String)  <  =  JsonToken.BEGIN_OBJECT;	  	non-compiled	[CE]  illegal  start  of  type	51	None	add
1049	[BUG]  [BUGGY]  }  else  if(o  instanceof  JsonArray  ||  o  instanceof  String)  {  }  else  if(o  instanceof  JsonArray  ||  o  instanceof  String)  <  return  JsonToken.BEGIN_ARRAY;  [CE]  illegal  start  of  type  [FE]                AssertionError    [CONTEXT]      if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }      [BUGGY]  }  else  if(o  instanceof  JsonArray  ||  o  instanceof  String)  {  }  else  if(o  instanceof  JsonArray  ||  o  instanceof  String)  <  return  JsonToken.BEGIN_ARRAY;  [BUGGY]      return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	replace	}    else    if(o    instanceof    JsonArray    ||    o    instanceof    String)    {    }  else  if(o  instanceof  JsonArray  ||  o  instanceof  String)  <  return  JsonToken.BEGIN_ARRAY;	  	non-compiled	[CE]  illegal  start  of  type	51	None	add
1050	[BUG]  [BUGGY]  }  else  if(o  instanceof  JsonNumber  >=?>)  {  [CE]  illegal  start  of  expression  [FE]                      ArrayIndexOutOfBoundsException      [CONTEXT]      if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }      [BUGGY]  }  else  if(o  instanceof  JsonNumber  >=?>)  {  [BUGGY]      return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	replace	}  else  if(o  instanceof  JsonNumber  >=?>)  {	  }    else    if(o    instanceof    JsonNumber    <?>)    {    	non-compiled	[CE]  illegal  start  of  expression	80	None	replace
1051	[BUG]  [BUGGY]  }  else  if(o  instanceof  JsonNumber  <?>  ||  isObject)  {  [CE]  cannot  find  symbol  [FE]                        ArrayIndexOutOfBoundsException      [CONTEXT]      if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }      [BUGGY]  }  else  if(o  instanceof  JsonNumber  <?>  ||  isObject)  {  [BUGGY]      return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	replace	}  else  if(o  instanceof  JsonNumber  <?>  ||  isObject)  {	  }    else    if(o    instanceof    JsonNumber    <?>)    {    	non-compiled	[CE]  cannot  find  symbol	80	None	replace
1052	[BUG]  [BUGGY]  }  else  if(o  instanceof  JsonNumber  <?>  ||  o  instanceof  JsonArray)  {  [CE]  cannot  find  symbol  [FE]                          ArrayIndexOutOfBoundsException      [CONTEXT]      if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }      [BUGGY]  }  else  if(o  instanceof  JsonNumber  <?>  ||  o  instanceof  JsonArray)  {  [BUGGY]      return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	replace	}  else  if(o  instanceof  JsonNumber  <?>  ||  o  instanceof  JsonArray)  {	  }    else    if(o    instanceof    JsonNumber    <?>)    {    	non-compiled	[CE]  cannot  find  symbol	80	None	replace
1053	[BUG]  [BUGGY]  }  else  if(o  instanceof  JsonNumber  <?>  ||  o  instanceof  JsonObject)  {  [CE]  cannot  find  symbol  [FE]                            ArrayIndexOutOfBoundsException      [CONTEXT]      if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }      [BUGGY]  }  else  if(o  instanceof  JsonNumber  <?>  ||  o  instanceof  JsonObject)  {  [BUGGY]      return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	replace	}  else  if(o  instanceof  JsonNumber  <?>  ||  o  instanceof  JsonObject)  {	  }    else    if(o    instanceof    JsonNumber    <?>)    {    	non-compiled	[CE]  cannot  find  symbol	80	None	replace
1054	[BUG]  [BUGGY]  }  else  if(!(o  instanceof  JsonNumber  <?>))  {  [CE]  cannot  find  symbol  [FE]                              ArrayIndexOutOfBoundsException      [CONTEXT]      if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }      [BUGGY]  }  else  if(!(o  instanceof  JsonNumber  <?>))  {  [BUGGY]      return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	replace	}  else  if(!(o  instanceof  JsonNumber  <?>))  {	  }    else    if(o    instanceof    JsonNumber    <?>)    {    	non-compiled	[CE]  cannot  find  symbol	80	None	replace
1055	[BUG]  [BUGGY]  }  else  if(o  instanceof  JsonNumber  <?>  ||  o  instanceof  JsonPrimitive)  {  [CE]  cannot  find  symbol  [FE]                                ArrayIndexOutOfBoundsException      [CONTEXT]      if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }      [BUGGY]  }  else  if(o  instanceof  JsonNumber  <?>  ||  o  instanceof  JsonPrimitive)  {  [BUGGY]      return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	replace	}  else  if(o  instanceof  JsonNumber  <?>  ||  o  instanceof  JsonPrimitive)  {	  }    else    if(o    instanceof    JsonNumber    <?>)    {    	non-compiled	[CE]  cannot  find  symbol	80	None	replace
1056	[BUG]  [BUGGY]  Integer  o  =(int)iterator.next();  [CE]  variable  o  is  already  defined  in  method  peek()  [FE]                        ArrayIndexOutOfBoundsException      [CONTEXT]      if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }      [BUGGY]  Integer  o  =(int)iterator.next();  [BUGGY]      return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	replace	Integer  o  =(int)iterator.next();	  Integer    o    =(Integer)iterator.next();    	non-compiled	[CE]  variable  o  is  already  defined  in  method  peek()	34	None	replace
1057	[BUG]  [BUGGY]  Integer  o  =(Integer)iterator.next()  +  1;  [CE]  variable  o  is  already  defined  in  method  peek()  [FE]                          ArrayIndexOutOfBoundsException      [CONTEXT]      if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }      [BUGGY]  Integer  o  =(Integer)iterator.next()  +  1;  [BUGGY]      return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	replace	Integer  o  =(Integer)iterator.next()  +  1;	  Integer    o    =(Integer)iterator.next();    	non-compiled	[CE]  variable  o  is  already  defined  in  method  peek()	34	None	replace
1058	[BUG]  [BUGGY]  Integer  o  =(Integer)iterator.getValue();  [CE]  variable  o  is  already  defined  in  method  peek()  [FE]                            ArrayIndexOutOfBoundsException      [CONTEXT]      if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }      [BUGGY]  Integer  o  =(Integer)iterator.getValue();  [BUGGY]      return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	replace	Integer  o  =(Integer)iterator.getValue();	  Integer    o    =(Integer)iterator.next();    	non-compiled	[CE]  variable  o  is  already  defined  in  method  peek()	34	None	replace
1059	[BUG]  [BUGGY]  Object  o  =(Object)iterator.next();  [CE]  variable  o  is  already  defined  in  method  peek()  [FE]                              ArrayIndexOutOfBoundsException      [CONTEXT]      if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }      [BUGGY]  Object  o  =(Object)iterator.next();  [BUGGY]      return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	replace	Object  o  =(Object)iterator.next();	  Integer    o    =(Integer)iterator.next();    	non-compiled	[CE]  variable  o  is  already  defined  in  method  peek()	34	None	replace
1060	[BUG]  [BUGGY]  Integer  o  =(Integer)iterator.nextToken();  [CE]  variable  o  is  already  defined  in  method  peek()  [FE]                                ArrayIndexOutOfBoundsException      [CONTEXT]      if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }      [BUGGY]  Integer  o  =(Integer)iterator.nextToken();  [BUGGY]      return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	replace	Integer  o  =(Integer)iterator.nextToken();	  Integer    o    =(Integer)iterator.next();    	non-compiled	[CE]  variable  o  is  already  defined  in  method  peek()	34	None	replace
1061	[BUG]  [BUGGY]  }  else  if(!(o  instanceof  JsonObject  <?>)&&  isObject)  {  [CE]  type  JsonObject  does  not  take  parameters  [FE]                    ArrayIndexOutOfBoundsException      [CONTEXT]      if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }      [BUGGY]  }  else  if(!(o  instanceof  JsonObject  <?>)&&  isObject)  {  [BUGGY]      return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	replace	}  else  if(!(o  instanceof  JsonObject  <?>)&&  isObject)  {	  }    else    if(!(o    instanceof    JsonObject    <?>))    {    	non-compiled	[CE]  type  JsonObject  does  not  take  parameters	79	None	replace
1062	[BUG]  [BUGGY]  }  else  if(!(o  instanceof  JsonObject  <?>)||  isObject)  {  [CE]  type  JsonObject  does  not  take  parameters  [FE]                      ArrayIndexOutOfBoundsException      [CONTEXT]      if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }      [BUGGY]  }  else  if(!(o  instanceof  JsonObject  <?>)||  isObject)  {  [BUGGY]      return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	replace	}  else  if(!(o  instanceof  JsonObject  <?>)||  isObject)  {	  }    else    if(!(o    instanceof    JsonObject    <?>))    {    	non-compiled	[CE]  type  JsonObject  does  not  take  parameters	79	None	replace
1063	[BUG]  [BUGGY]  [FE]  ArrayIndexOutOfBoundsException  [FE]                        ArrayIndexOutOfBoundsException      [CONTEXT]      if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }      [BUGGY]  }  else  if(!(o  instanceof  JsonObject  ==  false))  {  [BUGGY]      return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	add	}  else  if(!(o  instanceof  JsonObject  ==  false))  {	  }    else    if(!(o    instanceof    JsonObject    <?>))    {    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	79	2	replace
1064	[BUG]  [BUGGY]  }  else  if(!(o  instanceof  JsonObject  ==  false))  {  [FE]  ArrayIndexOutOfBoundsException  [FE]                        ArrayIndexOutOfBoundsException      [CONTEXT]      if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }      [BUGGY]  }  else  if(!(o  instanceof  JsonObject  ==  false))  {  [BUGGY]      return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	replace	}  else  if(!(o  instanceof  JsonObject  ==  false))  {	  }    else    if(!(o    instanceof    JsonObject    <?>))    {    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	79	2	replace
1065	[BUG]  [BUGGY]  parent  ==  null  ||  isObject)  {  return  JsonToken.FIELD_NAME;  }  [CE]  not  a  statement  [FE]                                  ArrayIndexOutOfBoundsException      [CONTEXT]      if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }      [BUGGY]  parent  ==  null  ||  isObject)  {  return  JsonToken.FIELD_NAME;  }  [BUGGY]      return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	replace	parent  ==  null  ||  isObject)  {  return  JsonToken.FIELD_NAME;  }	  if(o    ==    null)    {    if(isObject)    {    return    JsonToken.FIELD_NAME;    }    	non-compiled	[CE]  not  a  statement	190	None	replace
1066	[BUG]  [BUGGY]  try  {  [Delete]  catch(NoClassDefFoundError  e)  {  if(isObject)  {  return  JsonToken.FIELD_NAME;  }  [CE]  illegal  start  of  expression  [FE]                                    ArrayIndexOutOfBoundsException      [CONTEXT]      if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }      [BUGGY]  try  {  [Delete]  catch(NoClassDefFoundError  e)  {  if(isObject)  {  return  JsonToken.FIELD_NAME;  }  [BUGGY]      return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	replace	try  {  [Delete]  catch(NoClassDefFoundError  e)  {  if(isObject)  {  return  JsonToken.FIELD_NAME;  }	  if(o    ==    null)    {    if(isObject)    {    return    JsonToken.FIELD_NAME;    }    	non-compiled	[CE]  illegal  start  of  expression	190	None	replace
1067	[BUG]  [BUGGY]  parent  ==  null  &&  isObject)  {  return  JsonToken.FIELD_NAME;  }  [CE]  not  a  statement  [FE]                                      ArrayIndexOutOfBoundsException      [CONTEXT]      if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }      [BUGGY]  parent  ==  null  &&  isObject)  {  return  JsonToken.FIELD_NAME;  }  [BUGGY]      return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	replace	parent  ==  null  &&  isObject)  {  return  JsonToken.FIELD_NAME;  }	  if(o    ==    null)    {    if(isObject)    {    return    JsonToken.FIELD_NAME;    }    	non-compiled	[CE]  not  a  statement	190	None	replace
1068	[BUG]  [BUGGY]  parent!=  null  ||  isObject)  {  return  JsonToken.FIELD_NAME;  }  [CE]  not  a  statement  [FE]                                        ArrayIndexOutOfBoundsException      [CONTEXT]      if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }      [BUGGY]  parent!=  null  ||  isObject)  {  return  JsonToken.FIELD_NAME;  }  [BUGGY]      return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	replace	parent!=  null  ||  isObject)  {  return  JsonToken.FIELD_NAME;  }	  if(o    ==    null)    {    if(isObject)    {    return    JsonToken.FIELD_NAME;    }    	non-compiled	[CE]  not  a  statement	190	None	replace
1069	[BUG]  [BUGGY]  parent  ==  null  ||  isObject)  {  return  JsonToken.FIELD_NAME;  [CE]  not  a  statement  [FE]                                          ArrayIndexOutOfBoundsException      [CONTEXT]      if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }      [BUGGY]  parent  ==  null  ||  isObject)  {  return  JsonToken.FIELD_NAME;  [BUGGY]      return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	replace	parent  ==  null  ||  isObject)  {  return  JsonToken.FIELD_NAME;	  if(o    ==    null)    {    if(isObject)    {    return    JsonToken.FIELD_NAME;    }    	non-compiled	[CE]  not  a  statement	190	None	replace
1070	[BUG]  [BUGGY]  try  {  [Delete]  catch(NoClassDefFoundError  ncdfe)  {  if(isObject)  {  return  JsonToken.FIELD_NAME;  }  [CE]  illegal  start  of  expression  [FE]                                            ArrayIndexOutOfBoundsException      [CONTEXT]      if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }      [BUGGY]  try  {  [Delete]  catch(NoClassDefFoundError  ncdfe)  {  if(isObject)  {  return  JsonToken.FIELD_NAME;  }  [BUGGY]      return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	replace	try  {  [Delete]  catch(NoClassDefFoundError  ncdfe)  {  if(isObject)  {  return  JsonToken.FIELD_NAME;  }	  if(o    ==    null)    {    if(isObject)    {    return    JsonToken.FIELD_NAME;    }    	non-compiled	[CE]  illegal  start  of  expression	190	None	replace
1071	[BUG]  [BUGGY]  parent!=  null  ||  isObject)  {  return  JsonToken.FIELD_NAME;  [CE]  not  a  statement  [FE]                                              ArrayIndexOutOfBoundsException      [CONTEXT]      if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }      [BUGGY]  parent!=  null  ||  isObject)  {  return  JsonToken.FIELD_NAME;  [BUGGY]      return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	replace	parent!=  null  ||  isObject)  {  return  JsonToken.FIELD_NAME;	  if(o    ==    null)    {    if(isObject)    {    return    JsonToken.FIELD_NAME;    }    	non-compiled	[CE]  not  a  statement	190	None	replace
1072	[BUG]  [BUGGY]  [FE]  ArrayIndexOutOfBoundsException  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]      if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }      [BUGGY]  }  else  if(o  instanceof  JsonObject  ||!(o  instanceof  JsonNull))  {  [BUGGY]      return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	add	}  else  if(o  instanceof  JsonObject  ||!(o  instanceof  JsonNull))  {	  }    else    if(o    instanceof    JsonObject    ||    o    instanceof    JsonNull)    {    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	45	2	replace
1073	[BUG]  [BUGGY]  }  else  if(o  instanceof  JsonObject  ||!(o  instanceof  JsonNull))  {  [FE]  ArrayIndexOutOfBoundsException  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]      if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }      [BUGGY]  }  else  if(o  instanceof  JsonObject  ||!(o  instanceof  JsonNull))  {  [BUGGY]      return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	replace	}  else  if(o  instanceof  JsonObject  ||!(o  instanceof  JsonNull))  {	  }    else    if(o    instanceof    JsonObject    ||    o    instanceof    JsonNull)    {    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	45	2	replace
1074	[BUG]  [BUGGY]  }  else  if(o  instanceof  JsonNull  ||!(o  instanceof  JsonNull  ||!(o  instanceof  JsonNull  ||!((  JsonNull)o).getClass().isArray()))  {  [CE]  ')'  expected  [FE]        AssertionError      [CONTEXT]      if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }      [BUGGY]  }  else  if(o  instanceof  JsonNull  ||!(o  instanceof  JsonNull  ||!(o  instanceof  JsonNull  ||!((  JsonNull)o).getClass().isArray()))  {  [BUGGY]      return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	replace	}  else  if(o  instanceof  JsonNull  ||!(o  instanceof  JsonNull  ||!(o  instanceof  JsonNull  ||!((  JsonNull)o).getClass().isArray()))  {	  }    else    if(o    instanceof    JsonNull    ||!(o    instanceof    JsonNull    &&!(o    instanceof    JsonNull    &&!((    JsonNull)o).getClass().isArray()))    {    	non-compiled	[CE]  ')'  expected	235	None	replace
1075	[BUG]  [BUGGY]  [FE]  ArrayIndexOutOfBoundsException  [FE]          AssertionError      [CONTEXT]      if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }      [BUGGY]  }  else  if(o  instanceof  JsonNull  ||!(o  instanceof  JsonNull  &&!((  JsonNull)o).getClass().isArray()))  {  [BUGGY]      return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	add	}  else  if(o  instanceof  JsonNull  ||!(o  instanceof  JsonNull  &&!((  JsonNull)o).getClass().isArray()))  {	  }    else    if(o    instanceof    JsonNull    ||!(o    instanceof    JsonNull    &&!(o    instanceof    JsonNull    &&!((    JsonNull)o).getClass().isArray()))    {    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	235	2	replace
1076	[BUG]  [BUGGY]  }  else  if(o  instanceof  JsonNull  ||!(o  instanceof  JsonNull  &&!((  JsonNull)o).getClass().isArray()))  {  [FE]  ArrayIndexOutOfBoundsException  [FE]          AssertionError      [CONTEXT]      if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }      [BUGGY]  }  else  if(o  instanceof  JsonNull  ||!(o  instanceof  JsonNull  &&!((  JsonNull)o).getClass().isArray()))  {  [BUGGY]      return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	replace	}  else  if(o  instanceof  JsonNull  ||!(o  instanceof  JsonNull  &&!((  JsonNull)o).getClass().isArray()))  {	  }    else    if(o    instanceof    JsonNull    ||!(o    instanceof    JsonNull    &&!(o    instanceof    JsonNull    &&!((    JsonNull)o).getClass().isArray()))    {    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	235	2	replace
1077	[BUG]  [BUGGY]  }  else  if(o  instanceof  JsonNull  ||!(o  instanceof  JsonNull  ||!(o  instanceof  JsonNull  ||!((  JsonNull)o).getClass().isAssignableFrom(JsonNull.class)))  {  [CE]  ')'  expected  [FE]            AssertionError      [CONTEXT]      if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }      [BUGGY]  }  else  if(o  instanceof  JsonNull  ||!(o  instanceof  JsonNull  ||!(o  instanceof  JsonNull  ||!((  JsonNull)o).getClass().isAssignableFrom(JsonNull.class)))  {  [BUGGY]      return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	replace	}  else  if(o  instanceof  JsonNull  ||!(o  instanceof  JsonNull  ||!(o  instanceof  JsonNull  ||!((  JsonNull)o).getClass().isAssignableFrom(JsonNull.class)))  {	  }    else    if(o    instanceof    JsonNull    ||!(o    instanceof    JsonNull    &&!(o    instanceof    JsonNull    &&!((    JsonNull)o).getClass().isArray()))    {    	non-compiled	[CE]  ')'  expected	235	None	replace
1078	[BUG]  [BUGGY]  [FE]  ArrayIndexOutOfBoundsException  [FE]              AssertionError      [CONTEXT]      if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }      [BUGGY]  }  else  if(o  instanceof  JsonNull  ||!(o  instanceof  JsonNull  &&!((  JsonNull)o).getClass().isAssignableFrom(JsonNull.class)))  {  [BUGGY]      return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	add	}  else  if(o  instanceof  JsonNull  ||!(o  instanceof  JsonNull  &&!((  JsonNull)o).getClass().isAssignableFrom(JsonNull.class)))  {	  }    else    if(o    instanceof    JsonNull    ||!(o    instanceof    JsonNull    &&!(o    instanceof    JsonNull    &&!((    JsonNull)o).getClass().isArray()))    {    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	235	2	replace
1079	[BUG]  [BUGGY]  }  else  if(o  instanceof  JsonNull  ||!(o  instanceof  JsonNull  &&!((  JsonNull)o).getClass().isAssignableFrom(JsonNull.class)))  {  [FE]  ArrayIndexOutOfBoundsException  [FE]              AssertionError      [CONTEXT]      if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }      [BUGGY]  }  else  if(o  instanceof  JsonNull  ||!(o  instanceof  JsonNull  &&!((  JsonNull)o).getClass().isAssignableFrom(JsonNull.class)))  {  [BUGGY]      return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	replace	}  else  if(o  instanceof  JsonNull  ||!(o  instanceof  JsonNull  &&!((  JsonNull)o).getClass().isAssignableFrom(JsonNull.class)))  {	  }    else    if(o    instanceof    JsonNull    ||!(o    instanceof    JsonNull    &&!(o    instanceof    JsonNull    &&!((    JsonNull)o).getClass().isArray()))    {    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	235	2	replace
1080	[BUG]  [BUGGY]  }  else  if(o  instanceof  JsonNull  ||!(o  instanceof  JsonNull  ||!(o  instanceof  JsonNull  ||!((  JsonNull)o).getClass().isAssignmentOp()))  {  [CE]  ')'  expected  [FE]                AssertionError      [CONTEXT]      if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }      [BUGGY]  }  else  if(o  instanceof  JsonNull  ||!(o  instanceof  JsonNull  ||!(o  instanceof  JsonNull  ||!((  JsonNull)o).getClass().isAssignmentOp()))  {  [BUGGY]      return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	replace	}  else  if(o  instanceof  JsonNull  ||!(o  instanceof  JsonNull  ||!(o  instanceof  JsonNull  ||!((  JsonNull)o).getClass().isAssignmentOp()))  {	  }    else    if(o    instanceof    JsonNull    ||!(o    instanceof    JsonNull    &&!(o    instanceof    JsonNull    &&!((    JsonNull)o).getClass().isArray()))    {    	non-compiled	[CE]  ')'  expected	235	None	replace
1081	[BUG]  [BUGGY]  }  else  if(o  instanceof  JsonNull  ||!(o  instanceof  JsonNull  &&!((  JsonNull)o).getClass().isAssignmentOp()))  {  [CE]  cannot  find  symbol  [FE]                  AssertionError      [CONTEXT]      if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }      [BUGGY]  }  else  if(o  instanceof  JsonNull  ||!(o  instanceof  JsonNull  &&!((  JsonNull)o).getClass().isAssignmentOp()))  {  [BUGGY]      return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	replace	}  else  if(o  instanceof  JsonNull  ||!(o  instanceof  JsonNull  &&!((  JsonNull)o).getClass().isAssignmentOp()))  {	  }    else    if(o    instanceof    JsonNull    ||!(o    instanceof    JsonNull    &&!(o    instanceof    JsonNull    &&!((    JsonNull)o).getClass().isArray()))    {    	non-compiled	[CE]  cannot  find  symbol	235	None	replace
1082	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]        AssertionError      [CONTEXT]      if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }      [BUGGY]  }  else  if(!(o  instanceof  JsonObject  ||  o  instanceof  JsonNull))  {  [BUGGY]      return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	add	}  else  if(!(o  instanceof  JsonObject  ||  o  instanceof  JsonNull))  {	  }    else    if(o    instanceof    JsonNull)    {    }    else    if(o    instanceof    JsonNull)    {    return    JsonToken.BEGIN_NUMBER;    }    else    if(o    instanceof    JsonNull)    {    	compilable	  [FE]  AssertionError  	220	2	replace
1083	[BUG]  [BUGGY]  }  else  if(!(o  instanceof  JsonObject  ||  o  instanceof  JsonNull))  {  [FE]  AssertionError  [FE]        AssertionError      [CONTEXT]      if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }      [BUGGY]  }  else  if(!(o  instanceof  JsonObject  ||  o  instanceof  JsonNull))  {  [BUGGY]      return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	replace	}  else  if(!(o  instanceof  JsonObject  ||  o  instanceof  JsonNull))  {	  }    else    if(o    instanceof    JsonNull)    {    }    else    if(o    instanceof    JsonNull)    {    return    JsonToken.BEGIN_NUMBER;    }    else    if(o    instanceof    JsonNull)    {    	compilable	  [FE]  AssertionError  	220	2	replace
1084	[BUG]  [BUGGY]  }  else  if(o  instanceof  JsonPrimitive)  {  }  else  {  push(iterator.next());  return  JsonToken.BEGIN_ARRAY;  }  [CE]  illegal  start  of  type  [FE]            AssertionError      [CONTEXT]      if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }      [BUGGY]  }  else  if(o  instanceof  JsonPrimitive)  {  }  else  {  push(iterator.next());  return  JsonToken.BEGIN_ARRAY;  }  [BUGGY]      return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	replace	}  else  if(o  instanceof  JsonPrimitive)  {  }  else  {  push(iterator.next());  return  JsonToken.BEGIN_ARRAY;  }	  }    else    if(o    instanceof    JsonArray)    {    }    else    if(o    instanceof    JsonArray)    <    return    JsonToken.BEGIN_ARRAY;    	non-compiled	[CE]  illegal  start  of  type	204	None	replace
1085	[BUG]  [BUGGY]  }  else  if(o  instanceof  JsonPrimitive)  {  }  else  if(o  instanceof  JsonPrimitive)  {  return  JsonToken  BEGIN_ARRAY;  }  [CE]  [FE]              AssertionError      [CONTEXT]      if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }      [BUGGY]  }  else  if(o  instanceof  JsonPrimitive)  {  }  else  if(o  instanceof  JsonPrimitive)  {  return  JsonToken  BEGIN_ARRAY;  }  [BUGGY]      return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	replace	}  else  if(o  instanceof  JsonPrimitive)  {  }  else  if(o  instanceof  JsonPrimitive)  {  return  JsonToken  BEGIN_ARRAY;  }	  }    else    if(o    instanceof    JsonArray)    {    }    else    if(o    instanceof    JsonArray)    <    return    JsonToken.BEGIN_ARRAY;    	non-compiled	[CE]  	204	None	replace
1086	[BUG]  [BUGGY]  }  else  if(o  instanceof  JsonPrimitive)  {  }  else  if(o  instanceof  JsonPrimitive)  {  return  JsonPrimitive;  }  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]      if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }      [BUGGY]  }  else  if(o  instanceof  JsonPrimitive)  {  }  else  if(o  instanceof  JsonPrimitive)  {  return  JsonPrimitive;  }  [BUGGY]      return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	replace	}  else  if(o  instanceof  JsonPrimitive)  {  }  else  if(o  instanceof  JsonPrimitive)  {  return  JsonPrimitive;  }	  }    else    if(o    instanceof    JsonArray)    {    }    else    if(o    instanceof    JsonArray)    <    return    JsonToken.BEGIN_ARRAY;    	non-compiled	[CE]  illegal  start  of  type	204	None	replace
1087	[BUG]  [BUGGY]  [FE]  ArrayIndexOutOfBoundsException  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]      if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }      [BUGGY]  }  else  if(!(o  instanceof  JsonPrimitive)||!(o  instanceof  JsonArray))  {  [BUGGY]      return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	add	}  else  if(!(o  instanceof  JsonPrimitive)||!(o  instanceof  JsonArray))  {	  }    else    if(!(o    instanceof    JsonArray)||!(o    instanceof    JsonArray))    {    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	249	2	replace
1088	[BUG]  [BUGGY]  }  else  if(!(o  instanceof  JsonPrimitive)||!(o  instanceof  JsonArray))  {  [FE]  ArrayIndexOutOfBoundsException  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]      if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }      [BUGGY]  }  else  if(!(o  instanceof  JsonPrimitive)||!(o  instanceof  JsonArray))  {  [BUGGY]      return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	replace	}  else  if(!(o  instanceof  JsonPrimitive)||!(o  instanceof  JsonArray))  {	  }    else    if(!(o    instanceof    JsonArray)||!(o    instanceof    JsonArray))    {    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	249	2	replace
1089	[BUG]  [BUGGY]  }  else  if(o  instanceof  String  ||  o  instanceof  JsonObject)  {  ArrayIndexOutOfBoundsException  e  =(ArrayIndexOutOfBoundsException)iterator.next();  [CE]  cannot  find  symbol  iterator  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]      if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }      [BUGGY]  }  else  if(o  instanceof  String  ||  o  instanceof  JsonObject)  {  ArrayIndexOutOfBoundsException  e  =(ArrayIndexOutOfBoundsException)iterator.next();  [BUGGY]      return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	replace	}    else    if(o    instanceof    String    ||    o    instanceof    JsonObject)    {    ArrayIndexOutOfBoundsException  e  =(ArrayIndexOutOfBoundsException)iterator.next();	  	non-compiled	[CE]  cannot  find  symbol  iterator	49	None	add
1090	[BUG]  [BUGGY]  }  else  if(o  instanceof  String  ||  o  instanceof  JsonObject)  {  ArrayIndexOutOfBoundsException  e  =  new  ArrayIndexOutOfBoundsException(iterator.next());  [CE]  cannot  find  symbol  iterator  [FE]      ArrayIndexOutOfBoundsException    [CONTEXT]      if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }      [BUGGY]  }  else  if(o  instanceof  String  ||  o  instanceof  JsonObject)  {  ArrayIndexOutOfBoundsException  e  =  new  ArrayIndexOutOfBoundsException(iterator.next());  [BUGGY]      return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	replace	}    else    if(o    instanceof    String    ||    o    instanceof    JsonObject)    {    ArrayIndexOutOfBoundsException  e  =  new  ArrayIndexOutOfBoundsException(iterator.next());	  	non-compiled	[CE]  cannot  find  symbol  iterator	49	None	add
1091	[BUG]  [BUGGY]  }  else  if(o  instanceof  String  ||  o  instanceof  JsonObject)  {  ArrayIndexOutOfBoundsException  e  =  new  ArrayIndexOutOfBoundsException(pathNames[0],  pathNames[1]);  [CE]  no  suitable  constructor  found  for  ArrayIndexOutOfBoundsException(String,String)  [FE]        ArrayIndexOutOfBoundsException    [CONTEXT]      if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }      [BUGGY]  }  else  if(o  instanceof  String  ||  o  instanceof  JsonObject)  {  ArrayIndexOutOfBoundsException  e  =  new  ArrayIndexOutOfBoundsException(pathNames[0],  pathNames[1]);  [BUGGY]      return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	replace	}    else    if(o    instanceof    String    ||    o    instanceof    JsonObject)    {    ArrayIndexOutOfBoundsException  e  =  new  ArrayIndexOutOfBoundsException(pathNames[0],  pathNames[1]);	  	non-compiled	[CE]  no  suitable  constructor  found  for  ArrayIndexOutOfBoundsException(String,String)	49	None	add
1092	[BUG]  [BUGGY]  }  else  if(o  instanceof  String  ||  o  instanceof  JsonObject)  {  ArrayIndexOutOfBoundsException  if(o  instanceof  String  ||  o  instanceof  JsonObject)  {  [CE]  not  a  statement  [FE]          ArrayIndexOutOfBoundsException    [CONTEXT]      if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }      [BUGGY]  }  else  if(o  instanceof  String  ||  o  instanceof  JsonObject)  {  ArrayIndexOutOfBoundsException  if(o  instanceof  String  ||  o  instanceof  JsonObject)  {  [BUGGY]      return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	replace	}    else    if(o    instanceof    String    ||    o    instanceof    JsonObject)    {    ArrayIndexOutOfBoundsException  if(o  instanceof  String  ||  o  instanceof  JsonObject)  {	  	non-compiled	[CE]  not  a  statement	49	None	add
1093	[BUG]  [BUGGY]  }  else  if(!(o  instanceof  JsonPrimitive))  {  ((  JsonPrimitive)o).setObject(isObject?  JsonToken.BEGIN_OBJECT  :  JsonToken.END_OBJECT);  [CE]  cannot  find  symbol  isObject  [FE]              AssertionError      [CONTEXT]      if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }      [BUGGY]  }  else  if(!(o  instanceof  JsonPrimitive))  {  ((  JsonPrimitive)o).setObject(isObject?  JsonToken.BEGIN_OBJECT  :  JsonToken.END_OBJECT);  [BUGGY]      return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	replace	}  else  if(!(o  instanceof  JsonPrimitive))  {  ((  JsonPrimitive)o).setObject(isObject?  JsonToken.BEGIN_OBJECT  :  JsonToken.END_OBJECT);	  }    else    if(!(o    instanceof    JsonObject))    {    ((    JsonObject)o).setObject(isObject?    JsonToken.BEGIN_OBJECT    :    JsonToken.END_OBJECT);    	non-compiled	[CE]  cannot  find  symbol  isObject	159	None	replace
1094	[BUG]  [BUGGY]  }  else  if(!o  instanceof  JsonArray)  {  ArrayIndexOutOfBoundsException  e  =  new  ArrayIndexOutOfBoundsException(pathNames[0],  stackSize[1]);  [CE]  bad  operand  type  Object  for  unary  operator  '!'  [FE]                ArrayIndexOutOfBoundsException      [CONTEXT]      if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }      [BUGGY]  }  else  if(!o  instanceof  JsonArray)  {  ArrayIndexOutOfBoundsException  e  =  new  ArrayIndexOutOfBoundsException(pathNames[0],  stackSize[1]);  [BUGGY]      return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	replace	}  else  if(!o  instanceof  JsonArray)  {  ArrayIndexOutOfBoundsException  e  =  new  ArrayIndexOutOfBoundsException(pathNames[0],  stackSize[1]);	  }    else    if(!(o    instanceof    JsonArray))    {    ArrayIndexOutOfBoundsException    e    =    new    ArrayIndexOutOfBoundsException(pathNames[0],    stackSize[1]);    	non-compiled	[CE]  bad  operand  type  Object  for  unary  operator  '!'	135	None	replace
1095	[BUG]  [BUGGY]  }  else  if(!isObject)  {  ArrayIndexOutOfBoundsException  e  =  new  ArrayIndexOutOfBoundsException(pathNames[0],  stackSize[1]);  [CE]  cannot  find  symbol  isObject  [FE]                  ArrayIndexOutOfBoundsException      [CONTEXT]      if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }      [BUGGY]  }  else  if(!isObject)  {  ArrayIndexOutOfBoundsException  e  =  new  ArrayIndexOutOfBoundsException(pathNames[0],  stackSize[1]);  [BUGGY]      return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	replace	}  else  if(!isObject)  {  ArrayIndexOutOfBoundsException  e  =  new  ArrayIndexOutOfBoundsException(pathNames[0],  stackSize[1]);	  }    else    if(!(o    instanceof    JsonArray))    {    ArrayIndexOutOfBoundsException    e    =    new    ArrayIndexOutOfBoundsException(pathNames[0],    stackSize[1]);    	non-compiled	[CE]  cannot  find  symbol  isObject	135	None	replace
1096	[BUG]  [BUGGY]  }  else  {  ArrayIndexOutOfBoundsException  e  =  new  ArrayIndexOutOfBoundsException(pathNames[0],  stackSize[1]);  [CE]  'else'  without  'if'  [FE]                    ArrayIndexOutOfBoundsException      [CONTEXT]      if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }      [BUGGY]  }  else  {  ArrayIndexOutOfBoundsException  e  =  new  ArrayIndexOutOfBoundsException(pathNames[0],  stackSize[1]);  [BUGGY]      return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	replace	}  else  {  ArrayIndexOutOfBoundsException  e  =  new  ArrayIndexOutOfBoundsException(pathNames[0],  stackSize[1]);	  }    else    if(!(o    instanceof    JsonArray))    {    ArrayIndexOutOfBoundsException    e    =    new    ArrayIndexOutOfBoundsException(pathNames[0],    stackSize[1]);    	non-compiled	[CE]  'else'  without  'if'	135	None	replace
1097	[BUG]  [BUGGY]  }  else  if(o  instanceof  JsonArray)  {  ArrayIndexOutOfBoundsException  e  =  new  ArrayIndexOutOfBoundsException(pathNames[0],  pathSize[1]);  [CE]  cannot  find  symbol  pathSize  [FE]                      ArrayIndexOutOfBoundsException      [CONTEXT]      if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }      [BUGGY]  }  else  if(o  instanceof  JsonArray)  {  ArrayIndexOutOfBoundsException  e  =  new  ArrayIndexOutOfBoundsException(pathNames[0],  pathSize[1]);  [BUGGY]      return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	replace	}  else  if(o  instanceof  JsonArray)  {  ArrayIndexOutOfBoundsException  e  =  new  ArrayIndexOutOfBoundsException(pathNames[0],  pathSize[1]);	  }    else    if(!(o    instanceof    JsonArray))    {    ArrayIndexOutOfBoundsException    e    =    new    ArrayIndexOutOfBoundsException(pathNames[0],    stackSize[1]);    	non-compiled	[CE]  cannot  find  symbol  pathSize	135	None	replace
1098	[BUG]  [BUGGY]  }  else  if(o  instanceof  JsonPrimitive)  {  <  JsonPrimitive>  push(iterator.next());  return  JsonToken.BEGIN_OBJECT;  [CE]  illegal  start  of  expression  [FE]          ArrayIndexOutOfBoundsException      [CONTEXT]      if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }      [BUGGY]  }  else  if(o  instanceof  JsonPrimitive)  {  <  JsonPrimitive>  push(iterator.next());  return  JsonToken.BEGIN_OBJECT;  [BUGGY]      return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	replace	}  else  if(o  instanceof  JsonPrimitive)  {  <  JsonPrimitive>  push(iterator.next());  return  JsonToken.BEGIN_OBJECT;	  }    else    if(o    instanceof    JsonObject    ||    o    instanceof    JsonArray)    {    <    JsonObject>    push(iterator.next());    return    JsonToken.BEGIN_OBJECT;    	non-compiled	[CE]  illegal  start  of  expression	232	None	replace
1099	[BUG]  [BUGGY]  }  else  if(o  instanceof  JsonObject  &&  o  instanceof  JsonArray)  {  <  JsonObject>  push(iterator.next());  return  JsonToken.BEGIN_OBJECT;  [CE]  illegal  start  of  expression  [FE]            ArrayIndexOutOfBoundsException      [CONTEXT]      if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }      [BUGGY]  }  else  if(o  instanceof  JsonObject  &&  o  instanceof  JsonArray)  {  <  JsonObject>  push(iterator.next());  return  JsonToken.BEGIN_OBJECT;  [BUGGY]      return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	replace	}  else  if(o  instanceof  JsonObject  &&  o  instanceof  JsonArray)  {  <  JsonObject>  push(iterator.next());  return  JsonToken.BEGIN_OBJECT;	  }    else    if(o    instanceof    JsonObject    ||    o    instanceof    JsonArray)    {    <    JsonObject>    push(iterator.next());    return    JsonToken.BEGIN_OBJECT;    	non-compiled	[CE]  illegal  start  of  expression	232	None	replace
1100	[BUG]  [BUGGY]  }  else  if(o  instanceof  JsonPrimitive  ||  o  instanceof  JsonArray)  {  <  JsonPrimitive>  push(iterator.next());  return  JsonToken.BEGIN_OBJECT;  [CE]  illegal  start  of  expression  [FE]              ArrayIndexOutOfBoundsException      [CONTEXT]      if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }      [BUGGY]  }  else  if(o  instanceof  JsonPrimitive  ||  o  instanceof  JsonArray)  {  <  JsonPrimitive>  push(iterator.next());  return  JsonToken.BEGIN_OBJECT;  [BUGGY]      return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	replace	}  else  if(o  instanceof  JsonPrimitive  ||  o  instanceof  JsonArray)  {  <  JsonPrimitive>  push(iterator.next());  return  JsonToken.BEGIN_OBJECT;	  }    else    if(o    instanceof    JsonObject    ||    o    instanceof    JsonArray)    {    <    JsonObject>    push(iterator.next());    return    JsonToken.BEGIN_OBJECT;    	non-compiled	[CE]  illegal  start  of  expression	232	None	replace
1101	[BUG]  [BUGGY]  }  else  if(o  instanceof  JsonArray  ||  o  instanceof  String)  {  }  else  if(o  instanceof  JsonArray  ||  o  instanceof  String)  {  return  JsonToken.BEGIN_OBJECT;  }  else  if(o  instanceof  JsonArray)  {  [CE]  missing  return  statement  [FE]    AssertionError    [CONTEXT]      if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }      [BUGGY]  }  else  if(o  instanceof  JsonArray  ||  o  instanceof  String)  {  }  else  if(o  instanceof  JsonArray  ||  o  instanceof  String)  {  return  JsonToken.BEGIN_OBJECT;  }  else  if(o  instanceof  JsonArray)  {  [BUGGY]      return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	replace	}    else    if(o    instanceof    JsonArray    ||    o    instanceof    String)    {    }  else  if(o  instanceof  JsonArray  ||  o  instanceof  String)  {  return  JsonToken.BEGIN_OBJECT;  }  else  if(o  instanceof  JsonArray)  {	  	non-compiled	[CE]  missing  return  statement	51	None	add
1102	[BUG]  [BUGGY]  }  else  if(o  instanceof  JsonArray  ||  o  instanceof  String)  {  }  else  if(o  instanceof  JsonArray  ||  o  instanceof  String)  {  aught  return  JsonToken.BEGIN_OBJECT;  }  else  if(o  instanceof  JsonArray)  {  [CE]  not  a  statement  [FE]      AssertionError    [CONTEXT]      if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }      [BUGGY]  }  else  if(o  instanceof  JsonArray  ||  o  instanceof  String)  {  }  else  if(o  instanceof  JsonArray  ||  o  instanceof  String)  {  aught  return  JsonToken.BEGIN_OBJECT;  }  else  if(o  instanceof  JsonArray)  {  [BUGGY]      return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	replace	}    else    if(o    instanceof    JsonArray    ||    o    instanceof    String)    {    }  else  if(o  instanceof  JsonArray  ||  o  instanceof  String)  {  aught  return  JsonToken.BEGIN_OBJECT;  }  else  if(o  instanceof  JsonArray)  {	  	non-compiled	[CE]  not  a  statement	51	None	add
1103	[BUG]  [BUGGY]  }  else  if(o  instanceof  JsonObject)  {  }  else  if(o  instanceof  JsonObject  ||  o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_OBJECT;  }  [CE]  illegal  start  of  type  [FE]            ArrayIndexOutOfBoundsException      [CONTEXT]      if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }      [BUGGY]  }  else  if(o  instanceof  JsonObject)  {  }  else  if(o  instanceof  JsonObject  ||  o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_OBJECT;  }  [BUGGY]      return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	replace	}  else  if(o  instanceof  JsonObject)  {  }  else  if(o  instanceof  JsonObject  ||  o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_OBJECT;  }	  }    else    if(o    instanceof    JsonObject    ||    o    instanceof    JsonArray)    {    }    else    if(o    instanceof    JsonObject    ||    o    instanceof    JsonArray)    <    return    JsonToken.BEGIN_OBJECT;    	non-compiled	[CE]  illegal  start  of  type	25	None	replace
1104	[BUG]  [BUGGY]  }  else  if(o  instanceof  JsonArray)  {  }  else  if(o  instanceof  JsonObject  ||  o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_OBJECT;  }  [CE]  illegal  start  of  type  [FE]              ArrayIndexOutOfBoundsException      [CONTEXT]      if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }      [BUGGY]  }  else  if(o  instanceof  JsonArray)  {  }  else  if(o  instanceof  JsonObject  ||  o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_OBJECT;  }  [BUGGY]      return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	replace	}  else  if(o  instanceof  JsonArray)  {  }  else  if(o  instanceof  JsonObject  ||  o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_OBJECT;  }	  }    else    if(o    instanceof    JsonObject    ||    o    instanceof    JsonArray)    {    }    else    if(o    instanceof    JsonObject    ||    o    instanceof    JsonArray)    <    return    JsonToken.BEGIN_OBJECT;    	non-compiled	[CE]  illegal  start  of  type	25	None	replace
1105	[BUG]  [BUGGY]  }  else  if(o  instanceof  JsonObject)  {  }  else  if(o  instanceof  JsonObject  ||  o  instanceof  JsonArray)  <  return  JsonToken.BEGIN_OBJECT;  [CE]  illegal  start  of  type  [FE]                ArrayIndexOutOfBoundsException      [CONTEXT]      if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }      [BUGGY]  }  else  if(o  instanceof  JsonObject)  {  }  else  if(o  instanceof  JsonObject  ||  o  instanceof  JsonArray)  <  return  JsonToken.BEGIN_OBJECT;  [BUGGY]      return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	replace	}  else  if(o  instanceof  JsonObject)  {  }  else  if(o  instanceof  JsonObject  ||  o  instanceof  JsonArray)  <  return  JsonToken.BEGIN_OBJECT;	  }    else    if(o    instanceof    JsonObject    ||    o    instanceof    JsonArray)    {    }    else    if(o    instanceof    JsonObject    ||    o    instanceof    JsonArray)    <    return    JsonToken.BEGIN_OBJECT;    	non-compiled	[CE]  illegal  start  of  type	25	None	replace
1106	[BUG]  [BUGGY]  }  else  if(o  instanceof  JsonObject)  {  }  else  if(o  instanceof  JsonArray  ||  o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_OBJECT;  }  [CE]  illegal  start  of  type  [FE]                  ArrayIndexOutOfBoundsException      [CONTEXT]      if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }      [BUGGY]  }  else  if(o  instanceof  JsonObject)  {  }  else  if(o  instanceof  JsonArray  ||  o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_OBJECT;  }  [BUGGY]      return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	replace	}  else  if(o  instanceof  JsonObject)  {  }  else  if(o  instanceof  JsonArray  ||  o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_OBJECT;  }	  }    else    if(o    instanceof    JsonObject    ||    o    instanceof    JsonArray)    {    }    else    if(o    instanceof    JsonObject    ||    o    instanceof    JsonArray)    <    return    JsonToken.BEGIN_OBJECT;    	non-compiled	[CE]  illegal  start  of  type	25	None	replace
1107	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]            AssertionError      [CONTEXT]      if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }      [BUGGY]  }  else  if(o  ==  null)  {  [BUGGY]      return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	add	}  else  if(o  ==  null)  {	  }    else    if(o    instanceof    JsonArray)    {    return    JsonToken.BEGIN_ARRAY;    }    else    if(o    instanceof    JsonArray)    {    	compilable	  [FE]  AssertionError  	173	2	replace
1108	[BUG]  [BUGGY]  }  else  if(o  ==  null)  {  [FE]  AssertionError  [FE]            AssertionError      [CONTEXT]      if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }      [BUGGY]  }  else  if(o  ==  null)  {  [BUGGY]      return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	replace	}  else  if(o  ==  null)  {	  }    else    if(o    instanceof    JsonArray)    {    return    JsonToken.BEGIN_ARRAY;    }    else    if(o    instanceof    JsonArray)    {    	compilable	  [FE]  AssertionError  	173	2	replace
1109	[BUG]  [BUGGY]  }  else  if(o  instanceof  JsonObject  ||  o  instanceof  String)  {  Object  value  =  new  ObjectIndexOutOfBoundsException(iterator.next());  [CE]  cannot  find  symbol  [FE]          ArrayIndexOutOfBoundsException      [CONTEXT]      if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }      [BUGGY]  }  else  if(o  instanceof  JsonObject  ||  o  instanceof  String)  {  Object  value  =  new  ObjectIndexOutOfBoundsException(iterator.next());  [BUGGY]      return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	replace	}  else  if(o  instanceof  JsonObject  ||  o  instanceof  String)  {  Object  value  =  new  ObjectIndexOutOfBoundsException(iterator.next());	  }    else    if(o    instanceof    JsonObject    ||    o    instanceof    String)    {    ArrayIndexOutOfBoundsException    e    =    new    ArrayIndexOutOfBoundsException(iterator.next());    	non-compiled	[CE]  cannot  find  symbol	149	None	replace
1110	[BUG]  [BUGGY]  }  else  if(o  instanceof  JsonObject  ||  o  instanceof  String)  {  ArrayIndexOutOfBoundsException  e  =  new  ArrayIndexOutOfBoundsException(parent.next());  [CE]  cannot  find  symbol  parent  [FE]            ArrayIndexOutOfBoundsException      [CONTEXT]      if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }      [BUGGY]  }  else  if(o  instanceof  JsonObject  ||  o  instanceof  String)  {  ArrayIndexOutOfBoundsException  e  =  new  ArrayIndexOutOfBoundsException(parent.next());  [BUGGY]      return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	replace	}  else  if(o  instanceof  JsonObject  ||  o  instanceof  String)  {  ArrayIndexOutOfBoundsException  e  =  new  ArrayIndexOutOfBoundsException(parent.next());	  }    else    if(o    instanceof    JsonObject    ||    o    instanceof    String)    {    ArrayIndexOutOfBoundsException    e    =    new    ArrayIndexOutOfBoundsException(iterator.next());    	non-compiled	[CE]  cannot  find  symbol  parent	149	None	replace
1111	[BUG]  [BUGGY]  }  else  if(o  instanceof  JsonObject  ||  o  instanceof  String)  {  ArrayIndexOutOfBoundsException  e  =  new  ArrayIndexOutOfBoundsException(input);  [CE]  cannot  find  symbol  input  [FE]              ArrayIndexOutOfBoundsException      [CONTEXT]      if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }      [BUGGY]  }  else  if(o  instanceof  JsonObject  ||  o  instanceof  String)  {  ArrayIndexOutOfBoundsException  e  =  new  ArrayIndexOutOfBoundsException(input);  [BUGGY]      return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	replace	}  else  if(o  instanceof  JsonObject  ||  o  instanceof  String)  {  ArrayIndexOutOfBoundsException  e  =  new  ArrayIndexOutOfBoundsException(input);	  }    else    if(o    instanceof    JsonObject    ||    o    instanceof    String)    {    ArrayIndexOutOfBoundsException    e    =    new    ArrayIndexOutOfBoundsException(iterator.next());    	non-compiled	[CE]  cannot  find  symbol  input	149	None	replace
1112	[BUG]  [BUGGY]  }    else    if(o    instanceof    JsonObject    ||    o    instanceof    String)    {    return  JsonToken.BEGIN_OBJECT;  if(o  instanceof  JsonObject  ||  o  instanceof  String)  {  return  JsonToken.BEGIN_OBJECT;  }  [CE]  unreachable  statement  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]      if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }      [BUGGY]  }    else    if(o    instanceof    JsonObject    ||    o    instanceof    String)    {    return  JsonToken.BEGIN_OBJECT;  if(o  instanceof  JsonObject  ||  o  instanceof  String)  {  return  JsonToken.BEGIN_OBJECT;  }  [BUGGY]      return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	replace	}        else        if(o        instanceof        JsonObject        ||        o        instanceof        String)        {        return    JsonToken.BEGIN_OBJECT;    if(o  instanceof  JsonObject  ||  o  instanceof  String)  {  return  JsonToken.BEGIN_OBJECT;  }	  	non-compiled	[CE]  unreachable  statement	151	None	add
1113	[BUG]  [BUGGY]  }    else    if(o    instanceof    JsonObject    ||    o    instanceof    String)    {    return  JsonToken.BEGIN_OBJECT;  if(o  instanceof  JsonObject  ||  o  instanceof  String)  {  return  JsonToken.BEGIN_OBJECT;  }  else  if(o  instanceof  JsonObject  ||  o  instanceof  String)  {  return  JsonToken  [CE]  ';'  expected  [FE]      ArrayIndexOutOfBoundsException    [CONTEXT]      if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }      [BUGGY]  }    else    if(o    instanceof    JsonObject    ||    o    instanceof    String)    {    return  JsonToken.BEGIN_OBJECT;  if(o  instanceof  JsonObject  ||  o  instanceof  String)  {  return  JsonToken.BEGIN_OBJECT;  }  else  if(o  instanceof  JsonObject  ||  o  instanceof  String)  {  return  JsonToken  [BUGGY]      return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	replace	}        else        if(o        instanceof        JsonObject        ||        o        instanceof        String)        {        return    JsonToken.BEGIN_OBJECT;    if(o  instanceof  JsonObject  ||  o  instanceof  String)  {  return  JsonToken.BEGIN_OBJECT;  }  else  if(o  instanceof  JsonObject  ||  o  instanceof  String)  {  return  JsonToken	  	non-compiled	[CE]  ';'  expected	151	None	add
1114	[BUG]  [BUGGY]  }  else  if(!(o  instanceof  JsonArray  ||  o  instanceof  JsonPrimitive))  {  ArrayIndexOutOfBoundsException  e  =  new  ArrayIndexOutOfBoundsException(iterator.next());  [CE]  cannot  find  symbol  iterator  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]      if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }      [BUGGY]  }  else  if(!(o  instanceof  JsonArray  ||  o  instanceof  JsonPrimitive))  {  ArrayIndexOutOfBoundsException  e  =  new  ArrayIndexOutOfBoundsException(iterator.next());  [BUGGY]      return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	replace	}    else    if(!(o    instanceof    JsonArray    ||    o    instanceof    JsonPrimitive))    {    ArrayIndexOutOfBoundsException  e  =  new  ArrayIndexOutOfBoundsException(iterator.next());	  	non-compiled	[CE]  cannot  find  symbol  iterator	145	None	add
1115	[BUG]  [BUGGY]  }  else  if(!(o  instanceof  JsonArray  ||  o  instanceof  JsonPrimitive))  {  ArrayIndexOutOfBoundsException  e  =  new  ArrayIndexOutOfBoundsException(pathNames[0],  pathNames[1]);  [CE]  no  suitable  constructor  found  for  ArrayIndexOutOfBoundsException(String,String)  [FE]      ArrayIndexOutOfBoundsException    [CONTEXT]      if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }      [BUGGY]  }  else  if(!(o  instanceof  JsonArray  ||  o  instanceof  JsonPrimitive))  {  ArrayIndexOutOfBoundsException  e  =  new  ArrayIndexOutOfBoundsException(pathNames[0],  pathNames[1]);  [BUGGY]      return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	replace	}    else    if(!(o    instanceof    JsonArray    ||    o    instanceof    JsonPrimitive))    {    ArrayIndexOutOfBoundsException  e  =  new  ArrayIndexOutOfBoundsException(pathNames[0],  pathNames[1]);	  	non-compiled	[CE]  no  suitable  constructor  found  for  ArrayIndexOutOfBoundsException(String,String)	145	None	add
1116	[BUG]  [BUGGY]  }  else  if(!(o  instanceof  JsonArray  ||  o  instanceof  JsonPrimitive))  {  instanceof  JsonArray  ||  o  instanceof  JsonPrimitive)  {  [CE]  illegal  start  of  expression  [FE]        ArrayIndexOutOfBoundsException    [CONTEXT]      if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }      [BUGGY]  }  else  if(!(o  instanceof  JsonArray  ||  o  instanceof  JsonPrimitive))  {  instanceof  JsonArray  ||  o  instanceof  JsonPrimitive)  {  [BUGGY]      return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	replace	}    else    if(!(o    instanceof    JsonArray    ||    o    instanceof    JsonPrimitive))    {    instanceof  JsonArray  ||  o  instanceof  JsonPrimitive)  {	  	non-compiled	[CE]  illegal  start  of  expression	145	None	add
1117	[BUG]  [BUGGY]  }  else  if(o  instanceof  JsonNull)  {  }  else  {  push(iterator.next());  return  JsonToken.BEGIN_OBJECT;  }  [CE]  illegal  start  of  type  [FE]              AssertionError      [CONTEXT]      if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }      [BUGGY]  }  else  if(o  instanceof  JsonNull)  {  }  else  {  push(iterator.next());  return  JsonToken.BEGIN_OBJECT;  }  [BUGGY]      return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	replace	}  else  if(o  instanceof  JsonNull)  {  }  else  {  push(iterator.next());  return  JsonToken.BEGIN_OBJECT;  }	  }    else    if(o    instanceof    JsonNull)    {    }    else    if(o    instanceof    JsonNull)    <    return    JsonToken.BEGIN_OBJECT;    	non-compiled	[CE]  illegal  start  of  type	72	None	replace
1118	[BUG]  [BUGGY]  }  else  if(o  instanceof  JsonNull)  {  }  else  if(o  instanceof  JsonNull)  {  return  JsonToken  token  =(JsonNull)o;  }  [CE]  [FE]                AssertionError      [CONTEXT]      if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }      [BUGGY]  }  else  if(o  instanceof  JsonNull)  {  }  else  if(o  instanceof  JsonNull)  {  return  JsonToken  token  =(JsonNull)o;  }  [BUGGY]      return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	replace	}  else  if(o  instanceof  JsonNull)  {  }  else  if(o  instanceof  JsonNull)  {  return  JsonToken  token  =(JsonNull)o;  }	  }    else    if(o    instanceof    JsonNull)    {    }    else    if(o    instanceof    JsonNull)    <    return    JsonToken.BEGIN_OBJECT;    	non-compiled	[CE]  	72	None	replace
1119	[BUG]  [BUGGY]  }  else  {  push(iterator.next());  return  JsonToken.BEGIN_OBJECT;  }  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]      if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }      [BUGGY]  }  else  {  push(iterator.next());  return  JsonToken.BEGIN_OBJECT;  }  [BUGGY]      return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	replace	}  else  {  push(iterator.next());  return  JsonToken.BEGIN_OBJECT;  }	  }    else    if(!(o    instanceof    JsonObject))    {    }    else    if(!(o    instanceof    JsonObject))    {    return    JsonToken.BEGIN_OBJECT;    }    	non-compiled	[CE]  illegal  start  of  type	210	None	replace
1120	[BUG]  [BUGGY]  }  else  if(o  instanceof  JsonArray)  {  }  else  {  push(iterator.next());  return  JsonToken.BEGIN_OBJECT;  }  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]      if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }      [BUGGY]  }  else  if(o  instanceof  JsonArray)  {  }  else  {  push(iterator.next());  return  JsonToken.BEGIN_OBJECT;  }  [BUGGY]      return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	replace	}  else  if(o  instanceof  JsonArray)  {  }  else  {  push(iterator.next());  return  JsonToken.BEGIN_OBJECT;  }	  }    else    if(!(o    instanceof    JsonObject))    {    }    else    if(!(o    instanceof    JsonObject))    {    return    JsonToken.BEGIN_OBJECT;    }    	non-compiled	[CE]  illegal  start  of  type	210	None	replace
1121	[BUG]  [BUGGY]  }  else  if(o  instanceof  JsonObject)  {  }  else  {  push(iterator.next());  return  JsonToken.BEGIN_OBJECT;  }  [CE]  illegal  start  of  type  [FE]                    AssertionError      [CONTEXT]      if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }      [BUGGY]  }  else  if(o  instanceof  JsonObject)  {  }  else  {  push(iterator.next());  return  JsonToken.BEGIN_OBJECT;  }  [BUGGY]      return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	replace	}  else  if(o  instanceof  JsonObject)  {  }  else  {  push(iterator.next());  return  JsonToken.BEGIN_OBJECT;  }	  }    else    if(!(o    instanceof    JsonObject))    {    }    else    if(!(o    instanceof    JsonObject))    {    return    JsonToken.BEGIN_OBJECT;    }    	non-compiled	[CE]  illegal  start  of  type	210	None	replace
1122	[BUG]  [BUGGY]  }  else  {  push(iterator.next());  return  JsonToken.BEGIN_OBJECT;  [CE]  'else'  without  'if'  [FE]                      AssertionError      [CONTEXT]      if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }      [BUGGY]  }  else  {  push(iterator.next());  return  JsonToken.BEGIN_OBJECT;  [BUGGY]      return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	replace	}  else  {  push(iterator.next());  return  JsonToken.BEGIN_OBJECT;	  }    else    if(!(o    instanceof    JsonObject))    {    }    else    if(!(o    instanceof    JsonObject))    {    return    JsonToken.BEGIN_OBJECT;    }    	non-compiled	[CE]  'else'  without  'if'	210	None	replace
1123	[BUG]  [BUGGY]  [FE]  ArrayIndexOutOfBoundsException  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]      if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }      [BUGGY]  }    else    if(o    instanceof    JsonArray)    {    return  JsonToken.BEGIN_OBJECT;  }  else  if(o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_OBJECT;  [BUGGY]      return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	add	}        else        if(o        instanceof        JsonArray)        {        return    JsonToken.BEGIN_OBJECT;    }  else  if(o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_OBJECT;	  	compilable	  [FE]  ArrayIndexOutOfBoundsException  	171	2	add
1124	[BUG]  [BUGGY]  }    else    if(o    instanceof    JsonArray)    {    return  JsonToken.BEGIN_OBJECT;  }  else  if(o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_OBJECT;  [FE]  ArrayIndexOutOfBoundsException  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]      if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }      [BUGGY]  }    else    if(o    instanceof    JsonArray)    {    return  JsonToken.BEGIN_OBJECT;  }  else  if(o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_OBJECT;  [BUGGY]      return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	replace	}        else        if(o        instanceof        JsonArray)        {        return    JsonToken.BEGIN_OBJECT;    }  else  if(o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_OBJECT;	  	compilable	  [FE]  ArrayIndexOutOfBoundsException  	171	2	add
1125	[BUG]  [BUGGY]  }    else    if(o    instanceof    JsonArray)    {    return  JsonToken.BEGIN_OBJECT;  }  else  if(o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_OBJECT;  }  else  if(o  instanceof  JsonArray)  {  return  JsonToken  BEGIN_OBJECT;  }  [CE]  [FE]      ArrayIndexOutOfBoundsException    [CONTEXT]      if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }      [BUGGY]  }    else    if(o    instanceof    JsonArray)    {    return  JsonToken.BEGIN_OBJECT;  }  else  if(o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_OBJECT;  }  else  if(o  instanceof  JsonArray)  {  return  JsonToken  BEGIN_OBJECT;  }  [BUGGY]      return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	replace	}        else        if(o        instanceof        JsonArray)        {        return    JsonToken.BEGIN_OBJECT;    }  else  if(o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_OBJECT;  }  else  if(o  instanceof  JsonArray)  {  return  JsonToken  BEGIN_OBJECT;  }	  	non-compiled	[CE]  	171	None	add
1126	[BUG]  [BUGGY]  }    else    if(o    instanceof    JsonArray)    {    return  JsonToken.BEGIN_OBJECT;  }  else  if(o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_OBJECT;  }  else  if(o  instanceof  JsonArray)  {  return  JsonToken  beGIN_OBJECT;  }  [CE]  [FE]        ArrayIndexOutOfBoundsException    [CONTEXT]      if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }      [BUGGY]  }    else    if(o    instanceof    JsonArray)    {    return  JsonToken.BEGIN_OBJECT;  }  else  if(o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_OBJECT;  }  else  if(o  instanceof  JsonArray)  {  return  JsonToken  beGIN_OBJECT;  }  [BUGGY]      return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	replace	}        else        if(o        instanceof        JsonArray)        {        return    JsonToken.BEGIN_OBJECT;    }  else  if(o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_OBJECT;  }  else  if(o  instanceof  JsonArray)  {  return  JsonToken  beGIN_OBJECT;  }	  	non-compiled	[CE]  	171	None	add
1127	[BUG]  [BUGGY]  [FE]  ArrayIndexOutOfBoundsException  [FE]          ArrayIndexOutOfBoundsException    [CONTEXT]      if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }      [BUGGY]  }    else    if(o    instanceof    JsonArray)    {    return  JsonToken.BEGIN_OBJECT;  }  else  if(o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_OBJECT;  }  else  if(o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_OBJECT;  [BUGGY]      return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	add	}        else        if(o        instanceof        JsonArray)        {        return    JsonToken.BEGIN_OBJECT;    }  else  if(o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_OBJECT;  }  else  if(o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_OBJECT;	  	compilable	  [FE]  ArrayIndexOutOfBoundsException  	171	2	add
1128	[BUG]  [BUGGY]  }    else    if(o    instanceof    JsonArray)    {    return  JsonToken.BEGIN_OBJECT;  }  else  if(o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_OBJECT;  }  else  if(o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_OBJECT;  [FE]  ArrayIndexOutOfBoundsException  [FE]          ArrayIndexOutOfBoundsException    [CONTEXT]      if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }      [BUGGY]  }    else    if(o    instanceof    JsonArray)    {    return  JsonToken.BEGIN_OBJECT;  }  else  if(o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_OBJECT;  }  else  if(o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_OBJECT;  [BUGGY]      return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	replace	}        else        if(o        instanceof        JsonArray)        {        return    JsonToken.BEGIN_OBJECT;    }  else  if(o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_OBJECT;  }  else  if(o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_OBJECT;	  	compilable	  [FE]  ArrayIndexOutOfBoundsException  	171	2	add
1129	[BUG]  [BUGGY]  }  else  if(o  instanceof  JsonObject)  {  return  JsonToken.BEGIN_OBJECT;  [CE]  unreachable  statement  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]      if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }      [BUGGY]  }  else  if(o  instanceof  JsonObject)  {  return  JsonToken.BEGIN_OBJECT;  [BUGGY]      return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	replace	}  else  if(o  instanceof  JsonObject)  {  return  JsonToken.BEGIN_OBJECT;	  }    else    if(o    instanceof    JsonObject    ||    o    instanceof    JsonArray)    {    return    JsonToken.BEGIN_OBJECT;    	non-compiled	[CE]  unreachable  statement	194	None	replace
1130	[BUG]  [BUGGY]  }  else  if(o  instanceof  JsonObject  &&  o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_OBJECT;  }  [CE]  illegal  start  of  type  [FE]      ArrayIndexOutOfBoundsException    [CONTEXT]      if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }      [BUGGY]  }  else  if(o  instanceof  JsonObject  &&  o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_OBJECT;  }  [BUGGY]      return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	replace	}  else  if(o  instanceof  JsonObject  &&  o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_OBJECT;  }	  }    else    if(o    instanceof    JsonObject    ||    o    instanceof    JsonArray)    {    return    JsonToken.BEGIN_OBJECT;    	non-compiled	[CE]  illegal  start  of  type	194	None	replace
1131	[BUG]  [BUGGY]  }  else  if(o  instanceof  JsonObject  &&  o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_OBJECT;  [CE]  unreachable  statement  [FE]        ArrayIndexOutOfBoundsException    [CONTEXT]      if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }      [BUGGY]  }  else  if(o  instanceof  JsonObject  &&  o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_OBJECT;  [BUGGY]      return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	replace	}  else  if(o  instanceof  JsonObject  &&  o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_OBJECT;	  }    else    if(o    instanceof    JsonObject    ||    o    instanceof    JsonArray)    {    return    JsonToken.BEGIN_OBJECT;    	non-compiled	[CE]  unreachable  statement	194	None	replace
1132	[BUG]  [BUGGY]  }  else  if(o  instanceof  JsonArray)  {  if(!(o  instanceof  JsonObject))  {  case  JsonToken.BEGIN_OBJECT:  return  JsonToken.BEGIN_OBJECT;  break;  }  [CE]  orphaned  case  [FE]                  AssertionError      [CONTEXT]      if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }      [BUGGY]  }  else  if(o  instanceof  JsonArray)  {  if(!(o  instanceof  JsonObject))  {  case  JsonToken.BEGIN_OBJECT:  return  JsonToken.BEGIN_OBJECT;  break;  }  [BUGGY]      return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	replace	}  else  if(o  instanceof  JsonArray)  {  if(!(o  instanceof  JsonObject))  {  case  JsonToken.BEGIN_OBJECT:  return  JsonToken.BEGIN_OBJECT;  break;  }	  }    else    if(!(o    instanceof    JsonObject))    {    }    else    if(!(o    instanceof    JsonObject))    {    case    JsonToken.BEGIN_OBJECT:    return    JsonToken.BEGIN_OBJECT;    break;    	non-compiled	[CE]  orphaned  case	211	None	replace
1133	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]                    AssertionError      [CONTEXT]      if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }      [BUGGY]  }  else  if(o  instanceof  JsonArray)  {  if(!(o  instanceof  JsonObject))  {  return  JsonToken.BEGIN_OBJECT;  }  [BUGGY]      return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	add	}  else  if(o  instanceof  JsonArray)  {  if(!(o  instanceof  JsonObject))  {  return  JsonToken.BEGIN_OBJECT;  }	  }    else    if(!(o    instanceof    JsonObject))    {    }    else    if(!(o    instanceof    JsonObject))    {    case    JsonToken.BEGIN_OBJECT:    return    JsonToken.BEGIN_OBJECT;    break;    	compilable	  [FE]  AssertionError  	211	2	replace
1134	[BUG]  [BUGGY]  }  else  if(o  instanceof  JsonArray)  {  if(!(o  instanceof  JsonObject))  {  return  JsonToken.BEGIN_OBJECT;  }  [FE]  AssertionError  [FE]                    AssertionError      [CONTEXT]      if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }      [BUGGY]  }  else  if(o  instanceof  JsonArray)  {  if(!(o  instanceof  JsonObject))  {  return  JsonToken.BEGIN_OBJECT;  }  [BUGGY]      return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	replace	}  else  if(o  instanceof  JsonArray)  {  if(!(o  instanceof  JsonObject))  {  return  JsonToken.BEGIN_OBJECT;  }	  }    else    if(!(o    instanceof    JsonObject))    {    }    else    if(!(o    instanceof    JsonObject))    {    case    JsonToken.BEGIN_OBJECT:    return    JsonToken.BEGIN_OBJECT;    break;    	compilable	  [FE]  AssertionError  	211	2	replace
1135	[BUG]  [BUGGY]  }  else  if(o  instanceof  JsonArray)  {  if(!(o  instanceof  JsonObject))  {  case  JsonToken.BEGIN_OBJECT:  return  JsonToken.BEGIN_OBJECT;  break  [CE]  orphaned  case  [FE]                      AssertionError      [CONTEXT]      if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }      [BUGGY]  }  else  if(o  instanceof  JsonArray)  {  if(!(o  instanceof  JsonObject))  {  case  JsonToken.BEGIN_OBJECT:  return  JsonToken.BEGIN_OBJECT;  break  [BUGGY]      return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	replace	}  else  if(o  instanceof  JsonArray)  {  if(!(o  instanceof  JsonObject))  {  case  JsonToken.BEGIN_OBJECT:  return  JsonToken.BEGIN_OBJECT;  break	  }    else    if(!(o    instanceof    JsonObject))    {    }    else    if(!(o    instanceof    JsonObject))    {    case    JsonToken.BEGIN_OBJECT:    return    JsonToken.BEGIN_OBJECT;    break;    	non-compiled	[CE]  orphaned  case	211	None	replace
1136	[BUG]  [BUGGY]  }  else  if(o  instanceof  JsonArray)  {  if(!isObject)  {  return  JsonToken.BEGIN_OBJECT;  }  [CE]  cannot  find  symbol  isObject  [FE]                        AssertionError      [CONTEXT]      if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }      [BUGGY]  }  else  if(o  instanceof  JsonArray)  {  if(!isObject)  {  return  JsonToken.BEGIN_OBJECT;  }  [BUGGY]      return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	replace	}  else  if(o  instanceof  JsonArray)  {  if(!isObject)  {  return  JsonToken.BEGIN_OBJECT;  }	  }    else    if(!(o    instanceof    JsonObject))    {    }    else    if(!(o    instanceof    JsonObject))    {    case    JsonToken.BEGIN_OBJECT:    return    JsonToken.BEGIN_OBJECT;    break;    	non-compiled	[CE]  cannot  find  symbol  isObject	211	None	replace
1137	[BUG]  [BUGGY]  }  else  if(o  instanceof  JsonArray)  {  if(isObject)  {  return  JsonToken.BEGIN_OBJECT;  }  [CE]  cannot  find  symbol  isObject  [FE]                          AssertionError      [CONTEXT]      if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }      [BUGGY]  }  else  if(o  instanceof  JsonArray)  {  if(isObject)  {  return  JsonToken.BEGIN_OBJECT;  }  [BUGGY]      return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	replace	}  else  if(o  instanceof  JsonArray)  {  if(isObject)  {  return  JsonToken.BEGIN_OBJECT;  }	  }    else    if(!(o    instanceof    JsonObject))    {    }    else    if(!(o    instanceof    JsonObject))    {    case    JsonToken.BEGIN_OBJECT:    return    JsonToken.BEGIN_OBJECT;    break;    	non-compiled	[CE]  cannot  find  symbol  isObject	211	None	replace
1138	[BUG]  [BUGGY]  }  else  if(o  instanceof  JsonNull  ||!(o  instanceof  JsonNull  ||!(o  instanceof  JsonNull  ||!((  JsonNull)o).isArray()))  {  [CE]  ')'  expected  [FE]            AssertionError      [CONTEXT]      if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }      [BUGGY]  }  else  if(o  instanceof  JsonNull  ||!(o  instanceof  JsonNull  ||!(o  instanceof  JsonNull  ||!((  JsonNull)o).isArray()))  {  [BUGGY]      return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	replace	}  else  if(o  instanceof  JsonNull  ||!(o  instanceof  JsonNull  ||!(o  instanceof  JsonNull  ||!((  JsonNull)o).isArray()))  {	  }    else    if(o    instanceof    JsonNull    ||!(o    instanceof    JsonNull    &&!(o    instanceof    JsonNull    &&!((    JsonNull)o).isArray()))    {    	non-compiled	[CE]  ')'  expected	237	None	replace
1139	[BUG]  [BUGGY]  }  else  if(o  instanceof  JsonNull  ||!(o  instanceof  JsonNull  ||!(o  instanceof  JsonNull  ||!((  JsonNull)o).isObject()))  {  [CE]  ')'  expected  [FE]              AssertionError      [CONTEXT]      if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }      [BUGGY]  }  else  if(o  instanceof  JsonNull  ||!(o  instanceof  JsonNull  ||!(o  instanceof  JsonNull  ||!((  JsonNull)o).isObject()))  {  [BUGGY]      return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	replace	}  else  if(o  instanceof  JsonNull  ||!(o  instanceof  JsonNull  ||!(o  instanceof  JsonNull  ||!((  JsonNull)o).isObject()))  {	  }    else    if(o    instanceof    JsonNull    ||!(o    instanceof    JsonNull    &&!(o    instanceof    JsonNull    &&!((    JsonNull)o).isArray()))    {    	non-compiled	[CE]  ')'  expected	237	None	replace
1140	[BUG]  [BUGGY]  }  else  if(o  instanceof  JsonNull  ||!(o  instanceof  JsonNull  ||!(o  instanceof  JsonNull  ||!(o  instanceof  JsonNull  ||!((  JsonNull)o).isObject()))  {  [CE]  [FE]                AssertionError      [CONTEXT]      if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }      [BUGGY]  }  else  if(o  instanceof  JsonNull  ||!(o  instanceof  JsonNull  ||!(o  instanceof  JsonNull  ||!(o  instanceof  JsonNull  ||!((  JsonNull)o).isObject()))  {  [BUGGY]      return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	replace	}  else  if(o  instanceof  JsonNull  ||!(o  instanceof  JsonNull  ||!(o  instanceof  JsonNull  ||!(o  instanceof  JsonNull  ||!((  JsonNull)o).isObject()))  {	  }    else    if(o    instanceof    JsonNull    ||!(o    instanceof    JsonNull    &&!(o    instanceof    JsonNull    &&!((    JsonNull)o).isArray()))    {    	non-compiled	[CE]  	237	None	replace
1141	[BUG]  [BUGGY]  }  else  if(o  instanceof  JsonNull  ||  o  instanceof  JsonNull  ||!(o  instanceof  JsonNull  ||!(o  instanceof  JsonNull  ||!((  JsonNull)o).isArray()))  {  [CE]  ')'  expected  [FE]                  AssertionError      [CONTEXT]      if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }      [BUGGY]  }  else  if(o  instanceof  JsonNull  ||  o  instanceof  JsonNull  ||!(o  instanceof  JsonNull  ||!(o  instanceof  JsonNull  ||!((  JsonNull)o).isArray()))  {  [BUGGY]      return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	replace	}  else  if(o  instanceof  JsonNull  ||  o  instanceof  JsonNull  ||!(o  instanceof  JsonNull  ||!(o  instanceof  JsonNull  ||!((  JsonNull)o).isArray()))  {	  }    else    if(o    instanceof    JsonNull    ||!(o    instanceof    JsonNull    &&!(o    instanceof    JsonNull    &&!((    JsonNull)o).isArray()))    {    	non-compiled	[CE]  ')'  expected	237	None	replace
1142	[BUG]  [BUGGY]  }  else  if(o  instanceof  JsonNull  ||!(o  instanceof  JsonNull  ||!(o  instanceof  JsonNull  ||!(o  instanceof  JsonNull  ||!((  JsonNull)o).isArray()))  {  [CE]  [FE]                    AssertionError      [CONTEXT]      if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }      [BUGGY]  }  else  if(o  instanceof  JsonNull  ||!(o  instanceof  JsonNull  ||!(o  instanceof  JsonNull  ||!(o  instanceof  JsonNull  ||!((  JsonNull)o).isArray()))  {  [BUGGY]      return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	replace	}  else  if(o  instanceof  JsonNull  ||!(o  instanceof  JsonNull  ||!(o  instanceof  JsonNull  ||!(o  instanceof  JsonNull  ||!((  JsonNull)o).isArray()))  {	  }    else    if(o    instanceof    JsonNull    ||!(o    instanceof    JsonNull    &&!(o    instanceof    JsonNull    &&!((    JsonNull)o).isArray()))    {    	non-compiled	[CE]  	237	None	replace
1143	[BUG]  [BUGGY]  }  else  if(o  instanceof  JsonArray  ||  o  instanceof  JsonNull  ||!(o  instanceof  JsonNull  &&!((  JsonNull)o).isObject()))  {  [CE]  cannot  find  symbol  [FE]          AssertionError      [CONTEXT]      if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }      [BUGGY]  }  else  if(o  instanceof  JsonArray  ||  o  instanceof  JsonNull  ||!(o  instanceof  JsonNull  &&!((  JsonNull)o).isObject()))  {  [BUGGY]      return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	replace	}  else  if(o  instanceof  JsonArray  ||  o  instanceof  JsonNull  ||!(o  instanceof  JsonNull  &&!((  JsonNull)o).isObject()))  {	  }    else    if(o    instanceof    JsonNull    ||!(o    instanceof    JsonNull    &&!(o    instanceof    JsonNull    &&!((    JsonNull)o).isObject()))    {    	non-compiled	[CE]  cannot  find  symbol	236	None	replace
1144	[BUG]  [BUGGY]  }  else  if(o  instanceof  JsonNull  ||  o  instanceof  JsonNull  ||!(o  instanceof  JsonNull  ||!(o  instanceof  JsonNull  ||!((  JsonNull)o).isObject()))  {  [CE]  ')'  expected  [FE]            AssertionError      [CONTEXT]      if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }      [BUGGY]  }  else  if(o  instanceof  JsonNull  ||  o  instanceof  JsonNull  ||!(o  instanceof  JsonNull  ||!(o  instanceof  JsonNull  ||!((  JsonNull)o).isObject()))  {  [BUGGY]      return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	replace	}  else  if(o  instanceof  JsonNull  ||  o  instanceof  JsonNull  ||!(o  instanceof  JsonNull  ||!(o  instanceof  JsonNull  ||!((  JsonNull)o).isObject()))  {	  }    else    if(o    instanceof    JsonNull    ||!(o    instanceof    JsonNull    &&!(o    instanceof    JsonNull    &&!((    JsonNull)o).isObject()))    {    	non-compiled	[CE]  ')'  expected	236	None	replace
1145	[BUG]  [BUGGY]  }  else  if(o  instanceof  JsonArray  ||  o  instanceof  JsonArray)  {  <  JsonArray>  push(iterator.next());  return  JsonToken.BEGIN_OBJECT;  [CE]  illegal  start  of  expression  [FE]    AssertionError    [CONTEXT]      if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }      [BUGGY]  }  else  if(o  instanceof  JsonArray  ||  o  instanceof  JsonArray)  {  <  JsonArray>  push(iterator.next());  return  JsonToken.BEGIN_OBJECT;  [BUGGY]      return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	replace	}    else    if(o    instanceof    JsonArray    ||    o    instanceof    JsonArray)    {    <  JsonArray>  push(iterator.next());  return  JsonToken.BEGIN_OBJECT;	  	non-compiled	[CE]  illegal  start  of  expression	200	None	add
1146	[BUG]  [BUGGY]  }  else  if(o  instanceof  JsonArray  ||  o  instanceof  JsonArray)  {  <  JsonArray>  push(iterator.next());  return  JsonToken.BEGIN_OBJECT;  }  else  if(o  instanceof  JsonArray  ||  o  instanceof  JsonArray)  {  [CE]  illegal  start  of  expression  [FE]      AssertionError    [CONTEXT]      if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }      [BUGGY]  }  else  if(o  instanceof  JsonArray  ||  o  instanceof  JsonArray)  {  <  JsonArray>  push(iterator.next());  return  JsonToken.BEGIN_OBJECT;  }  else  if(o  instanceof  JsonArray  ||  o  instanceof  JsonArray)  {  [BUGGY]      return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	replace	}    else    if(o    instanceof    JsonArray    ||    o    instanceof    JsonArray)    {    <  JsonArray>  push(iterator.next());  return  JsonToken.BEGIN_OBJECT;  }  else  if(o  instanceof  JsonArray  ||  o  instanceof  JsonArray)  {	  	non-compiled	[CE]  illegal  start  of  expression	200	None	add
1147	[BUG]  [BUGGY]  }  else  if(o  instanceof  JsonArray  ||  o  instanceof  JsonArray)  {  }  else  if(o  instanceof  JsonArray  ||  o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_OBJECT;  }  else  if(o  instanceof  JsonArray)  {  [CE]  missing  return  statement  [FE]        AssertionError    [CONTEXT]      if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }      [BUGGY]  }  else  if(o  instanceof  JsonArray  ||  o  instanceof  JsonArray)  {  }  else  if(o  instanceof  JsonArray  ||  o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_OBJECT;  }  else  if(o  instanceof  JsonArray)  {  [BUGGY]      return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	replace	}    else    if(o    instanceof    JsonArray    ||    o    instanceof    JsonArray)    {    }  else  if(o  instanceof  JsonArray  ||  o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_OBJECT;  }  else  if(o  instanceof  JsonArray)  {	  	non-compiled	[CE]  missing  return  statement	200	None	add
1148	[BUG]  [BUGGY]  }  else  if(o  instanceof  JsonArray  ||  o  instanceof  JsonArray)  {  if(o  instanceof  JsonArray  ||  o  instanceof  JsonArray)  {  [CE]  illegal  start  of  expression  [FE]          AssertionError    [CONTEXT]      if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }      [BUGGY]  }  else  if(o  instanceof  JsonArray  ||  o  instanceof  JsonArray)  {  if(o  instanceof  JsonArray  ||  o  instanceof  JsonArray)  {  [BUGGY]      return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	replace	}    else    if(o    instanceof    JsonArray    ||    o    instanceof    JsonArray)    {    if(o  instanceof  JsonArray  ||  o  instanceof  JsonArray)  {	  	non-compiled	[CE]  illegal  start  of  expression	200	None	add
1149	[BUG]  [BUGGY]  }  else  if(o  instanceof  JsonArray  ||  o  instanceof  JsonArray)  {  <  JsonArray>  push(iterator.next());  return  JsonToken.BEGIN_ARRAY;  [CE]  illegal  start  of  expression  [FE]            AssertionError    [CONTEXT]      if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }      [BUGGY]  }  else  if(o  instanceof  JsonArray  ||  o  instanceof  JsonArray)  {  <  JsonArray>  push(iterator.next());  return  JsonToken.BEGIN_ARRAY;  [BUGGY]      return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	replace	}    else    if(o    instanceof    JsonArray    ||    o    instanceof    JsonArray)    {    <  JsonArray>  push(iterator.next());  return  JsonToken.BEGIN_ARRAY;	  	non-compiled	[CE]  illegal  start  of  expression	200	None	add
1150	[BUG]  [BUGGY]  [FE]  ArrayIndexOutOfBoundsException  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]      if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }      [BUGGY]  }  else  if(o  instanceof  JsonArray  ||  o  instanceof  JsonNull  ||!(o  instanceof  JsonNull  &&!(o  instanceof  JsonNull)))  {  [BUGGY]      return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	add	}  else  if(o  instanceof  JsonArray  ||  o  instanceof  JsonNull  ||!(o  instanceof  JsonNull  &&!(o  instanceof  JsonNull)))  {	  }    else    if(o    instanceof    JsonNull    ||!(o    instanceof    JsonNull    &&!(o    instanceof    JsonNull)))    {    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	4	2	replace
1151	[BUG]  [BUGGY]  }  else  if(o  instanceof  JsonArray  ||  o  instanceof  JsonNull  ||!(o  instanceof  JsonNull  &&!(o  instanceof  JsonNull)))  {  [FE]  ArrayIndexOutOfBoundsException  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]      if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }      [BUGGY]  }  else  if(o  instanceof  JsonArray  ||  o  instanceof  JsonNull  ||!(o  instanceof  JsonNull  &&!(o  instanceof  JsonNull)))  {  [BUGGY]      return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	replace	}  else  if(o  instanceof  JsonArray  ||  o  instanceof  JsonNull  ||!(o  instanceof  JsonNull  &&!(o  instanceof  JsonNull)))  {	  }    else    if(o    instanceof    JsonNull    ||!(o    instanceof    JsonNull    &&!(o    instanceof    JsonNull)))    {    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	4	2	replace
1152	[BUG]  [BUGGY]  JsonToken  token  =(JsonToken)primitive.next();  [CE]  cannot  find  symbol  primitive  [FE]                          ArrayIndexOutOfBoundsException      [CONTEXT]      if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }      [BUGGY]  JsonToken  token  =(JsonToken)primitive.next();  [BUGGY]      return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	replace	JsonToken  token  =(JsonToken)primitive.next();	  JsonToken    token    =(JsonToken)iterator.next();    	non-compiled	[CE]  cannot  find  symbol  primitive	35	None	replace
1153	[BUG]  [BUGGY]  JsonToken  token  =(JsonToken)iterator.peek();  [CE]  cannot  find  symbol  [FE]                            ArrayIndexOutOfBoundsException      [CONTEXT]      if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }      [BUGGY]  JsonToken  token  =(JsonToken)iterator.peek();  [BUGGY]      return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	replace	JsonToken  token  =(JsonToken)iterator.peek();	  JsonToken    token    =(JsonToken)iterator.next();    	non-compiled	[CE]  cannot  find  symbol	35	None	replace
1154	[BUG]  [BUGGY]  JsonToken  token  =(JsonToken)iterator.next()  +  1;  [CE]  bad  operand  types  for  binary  operator  '+'  [FE]                              ArrayIndexOutOfBoundsException      [CONTEXT]      if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }      [BUGGY]  JsonToken  token  =(JsonToken)iterator.next()  +  1;  [BUGGY]      return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	replace	JsonToken  token  =(JsonToken)iterator.next()  +  1;	  JsonToken    token    =(JsonToken)iterator.next();    	non-compiled	[CE]  bad  operand  types  for  binary  operator  '+'	35	None	replace
1155	[BUG]  [BUGGY]  JsonToken  token  =(JsonToken)entry.next();  [CE]  cannot  find  symbol  entry  [FE]                                ArrayIndexOutOfBoundsException      [CONTEXT]      if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }      [BUGGY]  JsonToken  token  =(JsonToken)entry.next();  [BUGGY]      return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	replace	JsonToken  token  =(JsonToken)entry.next();	  JsonToken    token    =(JsonToken)iterator.next();    	non-compiled	[CE]  cannot  find  symbol  entry	35	None	replace
1156	[BUG]  [BUGGY]  }  else  if(!(o  instanceof  JsonPrimitive))  {  }  else  if(!(o  instanceof  JsonPrimitive))  {  return  JsonToken.BEGIN_OBJECT;  }  else  if(!(o  instanceof  JsonPrimitive))  {  [CE]  missing  return  statement  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]      if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }      [BUGGY]  }  else  if(!(o  instanceof  JsonPrimitive))  {  }  else  if(!(o  instanceof  JsonPrimitive))  {  return  JsonToken.BEGIN_OBJECT;  }  else  if(!(o  instanceof  JsonPrimitive))  {  [BUGGY]      return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	replace	}    else    if(!(o    instanceof    JsonPrimitive))    {    }  else  if(!(o  instanceof  JsonPrimitive))  {  return  JsonToken.BEGIN_OBJECT;  }  else  if(!(o  instanceof  JsonPrimitive))  {	  	non-compiled	[CE]  missing  return  statement	10	None	add
1157	[BUG]  [BUGGY]  }  else  if(!(o  instanceof  JsonPrimitive))  {  return  JsonToken.BEGIN_OBJECT;  }  else  if(!(o  instanceof  JsonPrimitive))  {  [CE]  missing  return  statement  [FE]      ArrayIndexOutOfBoundsException    [CONTEXT]      if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }      [BUGGY]  }  else  if(!(o  instanceof  JsonPrimitive))  {  return  JsonToken.BEGIN_OBJECT;  }  else  if(!(o  instanceof  JsonPrimitive))  {  [BUGGY]      return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	replace	}    else    if(!(o    instanceof    JsonPrimitive))    {    return  JsonToken.BEGIN_OBJECT;  }  else  if(!(o  instanceof  JsonPrimitive))  {	  	non-compiled	[CE]  missing  return  statement	10	None	add
1158	[BUG]  [BUGGY]  }  else  if(!(o  instanceof  JsonPrimitive))  {  }  else  if(!(o  instanceof  JsonPrimitive))  {  return  JsonToken.BEGIN_OBJECT;  }  else  if(!(o  instanceof  JsonArray))  {  [CE]  missing  return  statement  [FE]        ArrayIndexOutOfBoundsException    [CONTEXT]      if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }      [BUGGY]  }  else  if(!(o  instanceof  JsonPrimitive))  {  }  else  if(!(o  instanceof  JsonPrimitive))  {  return  JsonToken.BEGIN_OBJECT;  }  else  if(!(o  instanceof  JsonArray))  {  [BUGGY]      return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	replace	}    else    if(!(o    instanceof    JsonPrimitive))    {    }  else  if(!(o  instanceof  JsonPrimitive))  {  return  JsonToken.BEGIN_OBJECT;  }  else  if(!(o  instanceof  JsonArray))  {	  	non-compiled	[CE]  missing  return  statement	10	None	add
1159	[BUG]  [BUGGY]  }  else  if(o  instanceof  JsonBlock  ||  o  instanceof  JsonBlock)  {  [CE]  cannot  find  symbol  [FE]              ArrayIndexOutOfBoundsException      [CONTEXT]      if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }      [BUGGY]  }  else  if(o  instanceof  JsonBlock  ||  o  instanceof  JsonBlock)  {  [BUGGY]      return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	replace	}  else  if(o  instanceof  JsonBlock  ||  o  instanceof  JsonBlock)  {	  }    else    if(o    instanceof    JsonObject    ||    o    instanceof    String)    {    }    else    if(o    instanceof    JsonObject    ||    o    instanceof    String)    {    return    JsonToken.BEGIN_OBJECT;    }    else    if(o    instanceof    JsonObject    ||    o    instanceof    String)    {    	non-compiled	[CE]  cannot  find  symbol	19	None	replace
1160	[BUG]  [BUGGY]  }  else  if(o  instanceof  JsonObject  <  =  DEFAULT_TYPE)  {  [CE]  illegal  start  of  type  [FE]            ArrayIndexOutOfBoundsException      [CONTEXT]      if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }      [BUGGY]  }  else  if(o  instanceof  JsonObject  <  =  DEFAULT_TYPE)  {  [BUGGY]      return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	replace	}  else  if(o  instanceof  JsonObject  <  =  DEFAULT_TYPE)  {	  }    else    if(o    instanceof    JsonObject    <    =)    {    	non-compiled	[CE]  illegal  start  of  type	30	None	replace
1161	[BUG]  [BUGGY]  }  else  if(o  instanceof  JsonOBJECT  ||  o  instanceof  JsonArray)  {  [CE]  cannot  find  symbol  [FE]              AssertionError      [CONTEXT]      if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }      [BUGGY]  }  else  if(o  instanceof  JsonOBJECT  ||  o  instanceof  JsonArray)  {  [BUGGY]      return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	replace	}  else  if(o  instanceof  JsonOBJECT  ||  o  instanceof  JsonArray)  {	  }    else    if(o    instanceof    JsonArray)    {    }    else    if(o    instanceof    JsonArray    ||    o    instanceof    JsonObject)    {    	non-compiled	[CE]  cannot  find  symbol	101	None	replace
1162	[BUG]  [BUGGY]  }  else  if(o  instanceof  JsonType  ==  Object>)  {  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }      [BUGGY]  }  else  if(o  instanceof  JsonType  ==  Object>)  {  [BUGGY]      return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	replace	}  else  if(o  instanceof  JsonType  ==  Object>)  {	  }    else    if(o    instanceof    JsonType    <    Object>)    {    	non-compiled	[CE]  illegal  start  of  expression	15	None	replace
1163	[BUG]  [BUGGY]  }  else  if(o  instanceof  JsonType!=  Object>)  {  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }      [BUGGY]  }  else  if(o  instanceof  JsonType!=  Object>)  {  [BUGGY]      return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	replace	}  else  if(o  instanceof  JsonType!=  Object>)  {	  }    else    if(o    instanceof    JsonType    <    Object>)    {    	non-compiled	[CE]  illegal  start  of  expression	15	None	replace
1164	[BUG]  [BUGGY]  }  else  if(o  instanceof  JsonObject  <  Object>)  {  [CE]  type  JsonObject  does  not  take  parameters  [FE]                    AssertionError      [CONTEXT]      if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }      [BUGGY]  }  else  if(o  instanceof  JsonObject  <  Object>)  {  [BUGGY]      return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	replace	}  else  if(o  instanceof  JsonObject  <  Object>)  {	  }    else    if(o    instanceof    JsonType    <    Object>)    {    	non-compiled	[CE]  type  JsonObject  does  not  take  parameters	15	None	replace
1165	[BUG]  [BUGGY]  }  else  if(o  instanceof  JsonObjectType  <  Object>)  {  [CE]  cannot  find  symbol  [FE]                      AssertionError      [CONTEXT]      if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }      [BUGGY]  }  else  if(o  instanceof  JsonObjectType  <  Object>)  {  [BUGGY]      return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	replace	}  else  if(o  instanceof  JsonObjectType  <  Object>)  {	  }    else    if(o    instanceof    JsonType    <    Object>)    {    	non-compiled	[CE]  cannot  find  symbol	15	None	replace
1166	[BUG]  [BUGGY]  }  else  if(o  instanceof  JsonObject  ||  o  instanceof  JsonArray  ||  o  instanceof  JsonPrimitive)  {  if(o  instanceof  JsonObject  ||  o  instanceof  JsonArray  ||  o  instanceof  JsonPrimitive)  {  return  JsonToken.BEGIN_OBJECT;  }  else  if(o  instanceof  JsonObject  ||  o  instanceof  JsonPrimitive)  {  [CE]  illegal  start  of  expression  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]      if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }      [BUGGY]  }  else  if(o  instanceof  JsonObject  ||  o  instanceof  JsonArray  ||  o  instanceof  JsonPrimitive)  {  if(o  instanceof  JsonObject  ||  o  instanceof  JsonArray  ||  o  instanceof  JsonPrimitive)  {  return  JsonToken.BEGIN_OBJECT;  }  else  if(o  instanceof  JsonObject  ||  o  instanceof  JsonPrimitive)  {  [BUGGY]      return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	replace	}    else    if(o    instanceof    JsonObject    ||    o    instanceof    JsonArray    ||    o    instanceof    JsonPrimitive)    {    if(o  instanceof  JsonObject  ||  o  instanceof  JsonArray  ||  o  instanceof  JsonPrimitive)  {  return  JsonToken.BEGIN_OBJECT;  }  else  if(o  instanceof  JsonObject  ||  o  instanceof  JsonPrimitive)  {	  	non-compiled	[CE]  illegal  start  of  expression	143	None	add
1167	[BUG]  [BUGGY]  }  else  if(o  instanceof  JsonObject  ||  o  instanceof  JsonArray  ||  o  instanceof  JsonPrimitive)  {  if(o  instanceof  JsonObject  ||  o  instanceof  JsonArray  ||  o  instanceof  JsonPrimitive)  {  return  JsonToken.BEGIN_OBJECT;  }  else  if(o  instanceof  JsonObject  ||  o  instanceof  JsonPrimitive)  {  return  J  [CE]  ';'  expected  [FE]      ArrayIndexOutOfBoundsException    [CONTEXT]      if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }      [BUGGY]  }  else  if(o  instanceof  JsonObject  ||  o  instanceof  JsonArray  ||  o  instanceof  JsonPrimitive)  {  if(o  instanceof  JsonObject  ||  o  instanceof  JsonArray  ||  o  instanceof  JsonPrimitive)  {  return  JsonToken.BEGIN_OBJECT;  }  else  if(o  instanceof  JsonObject  ||  o  instanceof  JsonPrimitive)  {  return  J  [BUGGY]      return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	replace	}    else    if(o    instanceof    JsonObject    ||    o    instanceof    JsonArray    ||    o    instanceof    JsonPrimitive)    {    if(o  instanceof  JsonObject  ||  o  instanceof  JsonArray  ||  o  instanceof  JsonPrimitive)  {  return  JsonToken.BEGIN_OBJECT;  }  else  if(o  instanceof  JsonObject  ||  o  instanceof  JsonPrimitive)  {  return  J	  	non-compiled	[CE]  ';'  expected	143	None	add
1168	[BUG]  [BUGGY]  }  else  if(o  instanceof  JsonObject  ||  o  instanceof  JsonArray  ||  o  instanceof  JsonPrimitive)  {  if(o  instanceof  JsonObject  ||  o  instanceof  JsonArray  ||  o  instanceof  JsonPrimitive)  {  [CE]  illegal  start  of  expression  [FE]        ArrayIndexOutOfBoundsException    [CONTEXT]      if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }      [BUGGY]  }  else  if(o  instanceof  JsonObject  ||  o  instanceof  JsonArray  ||  o  instanceof  JsonPrimitive)  {  if(o  instanceof  JsonObject  ||  o  instanceof  JsonArray  ||  o  instanceof  JsonPrimitive)  {  [BUGGY]      return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	replace	}    else    if(o    instanceof    JsonObject    ||    o    instanceof    JsonArray    ||    o    instanceof    JsonPrimitive)    {    if(o  instanceof  JsonObject  ||  o  instanceof  JsonArray  ||  o  instanceof  JsonPrimitive)  {	  	non-compiled	[CE]  illegal  start  of  expression	143	None	add
1169	[BUG]  [BUGGY]  }  else  if(o  instanceof  JsonObject  ||  o  instanceof  JsonArray  ||  o  instanceof  JsonPrimitive)  {  if(o  instanceof  JsonObject  ||  o  instanceof  JsonArray  ||  o  instanceof  JsonPrimitive)  {  return  JsonToken.BEGIN_OBJECT;  }  else  if(o  instanceof  JsonObject  ||  o  instanceof  JsonPrimitive)  {  return  Json  [CE]  ';'  expected  [FE]          ArrayIndexOutOfBoundsException    [CONTEXT]      if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }      [BUGGY]  }  else  if(o  instanceof  JsonObject  ||  o  instanceof  JsonArray  ||  o  instanceof  JsonPrimitive)  {  if(o  instanceof  JsonObject  ||  o  instanceof  JsonArray  ||  o  instanceof  JsonPrimitive)  {  return  JsonToken.BEGIN_OBJECT;  }  else  if(o  instanceof  JsonObject  ||  o  instanceof  JsonPrimitive)  {  return  Json  [BUGGY]      return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	replace	}    else    if(o    instanceof    JsonObject    ||    o    instanceof    JsonArray    ||    o    instanceof    JsonPrimitive)    {    if(o  instanceof  JsonObject  ||  o  instanceof  JsonArray  ||  o  instanceof  JsonPrimitive)  {  return  JsonToken.BEGIN_OBJECT;  }  else  if(o  instanceof  JsonObject  ||  o  instanceof  JsonPrimitive)  {  return  Json	  	non-compiled	[CE]  ';'  expected	143	None	add
1170	[BUG]  [BUGGY]  }  else  if(o  instanceof  JsonObject  ||  o  instanceof  JsonArray  ||  o  instanceof  JsonPrimitive)  {  if(o  instanceof  JsonObject  ||  o  instanceof  JsonArray  ||  o  instanceof  JsonPrimitive)  {  return  JsonToken.BEGIN_OBJECT;  }  else  if(o  instanceof  JsonObject  ||  o  instanceof  JsonPrimitive)  {  return  JsonTo  [CE]  ';'  expected  [FE]            ArrayIndexOutOfBoundsException    [CONTEXT]      if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }      [BUGGY]  }  else  if(o  instanceof  JsonObject  ||  o  instanceof  JsonArray  ||  o  instanceof  JsonPrimitive)  {  if(o  instanceof  JsonObject  ||  o  instanceof  JsonArray  ||  o  instanceof  JsonPrimitive)  {  return  JsonToken.BEGIN_OBJECT;  }  else  if(o  instanceof  JsonObject  ||  o  instanceof  JsonPrimitive)  {  return  JsonTo  [BUGGY]      return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	replace	}    else    if(o    instanceof    JsonObject    ||    o    instanceof    JsonArray    ||    o    instanceof    JsonPrimitive)    {    if(o  instanceof  JsonObject  ||  o  instanceof  JsonArray  ||  o  instanceof  JsonPrimitive)  {  return  JsonToken.BEGIN_OBJECT;  }  else  if(o  instanceof  JsonObject  ||  o  instanceof  JsonPrimitive)  {  return  JsonTo	  	non-compiled	[CE]  ';'  expected	143	None	add
1171	[BUG]  [BUGGY]  if(isObject)  {  o  =  iterator.next();  }  else  {  push(iterator.next());  return  JsonToken.BEGIN_OBJECT;  }  [CE]  unreachable  statement  [FE]                          ArrayIndexOutOfBoundsException      [CONTEXT]      if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }      [BUGGY]  if(isObject)  {  o  =  iterator.next();  }  else  {  push(iterator.next());  return  JsonToken.BEGIN_OBJECT;  }  [BUGGY]      return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	replace	if(isObject)  {  o  =  iterator.next();  }  else  {  push(iterator.next());  return  JsonToken.BEGIN_OBJECT;  }	  o    =    iterator.next();    	non-compiled	[CE]  unreachable  statement	224	None	replace
1172	[BUG]  [BUGGY]  if(isObject)  {  o  =  iterator.next();  }  else  {  push(iterator.next());  return  JsonToken.END_OBJECT;  }  [CE]  unreachable  statement  [FE]                            ArrayIndexOutOfBoundsException      [CONTEXT]      if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }      [BUGGY]  if(isObject)  {  o  =  iterator.next();  }  else  {  push(iterator.next());  return  JsonToken.END_OBJECT;  }  [BUGGY]      return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	replace	if(isObject)  {  o  =  iterator.next();  }  else  {  push(iterator.next());  return  JsonToken.END_OBJECT;  }	  o    =    iterator.next();    	non-compiled	[CE]  unreachable  statement	224	None	replace
1173	[BUG]  [BUGGY]  if(isObject)  {  o  =  iterator.next();  }  else  {  push(iterator.next());  return  JsonToken.NAME;  }  [CE]  unreachable  statement  [FE]                              ArrayIndexOutOfBoundsException      [CONTEXT]      if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }      [BUGGY]  if(isObject)  {  o  =  iterator.next();  }  else  {  push(iterator.next());  return  JsonToken.NAME;  }  [BUGGY]      return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	replace	if(isObject)  {  o  =  iterator.next();  }  else  {  push(iterator.next());  return  JsonToken.NAME;  }	  o    =    iterator.next();    	non-compiled	[CE]  unreachable  statement	224	None	replace
1174	[BUG]  [BUGGY]  o  =(iterator.hasNext())?  iterator.next()  :  JsonToken.END_OBJECT;  [CE]  unreachable  statement  [FE]                                ArrayIndexOutOfBoundsException      [CONTEXT]      if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }      [BUGGY]  o  =(iterator.hasNext())?  iterator.next()  :  JsonToken.END_OBJECT;  [BUGGY]      return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	replace	o  =(iterator.hasNext())?  iterator.next()  :  JsonToken.END_OBJECT;	  o    =    iterator.next();    	non-compiled	[CE]  unreachable  statement	224	None	replace
1175	[BUG]  [BUGGY]  if(isObject)  {  o  =  iterator.next();  }  else  {  push(iterator.next());  return  JsonToken.UNREADABLE_READER;  }  [CE]  cannot  find  symbol  UNREADABLE_READER  [FE]                                  ArrayIndexOutOfBoundsException      [CONTEXT]      if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }      [BUGGY]  if(isObject)  {  o  =  iterator.next();  }  else  {  push(iterator.next());  return  JsonToken.UNREADABLE_READER;  }  [BUGGY]      return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	replace	if(isObject)  {  o  =  iterator.next();  }  else  {  push(iterator.next());  return  JsonToken.UNREADABLE_READER;  }	  o    =    iterator.next();    	non-compiled	[CE]  cannot  find  symbol  UNREADABLE_READER	224	None	replace
1176	[BUG]  [BUGGY]  if(isObject)  {  o  =  iterator.next();  }  else  {  push(iterator.next());  return  JsonToken.START_OBJECT;  }  [CE]  cannot  find  symbol  START_OBJECT  [FE]                                    ArrayIndexOutOfBoundsException      [CONTEXT]      if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }      [BUGGY]  if(isObject)  {  o  =  iterator.next();  }  else  {  push(iterator.next());  return  JsonToken.START_OBJECT;  }  [BUGGY]      return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	replace	if(isObject)  {  o  =  iterator.next();  }  else  {  push(iterator.next());  return  JsonToken.START_OBJECT;  }	  o    =    iterator.next();    	non-compiled	[CE]  cannot  find  symbol  START_OBJECT	224	None	replace
1177	[BUG]  [BUGGY]  parent  ==  null)  {  if(isObject)  {  return  JsonToken.START_OBJECT;  }  [CE]  not  a  statement  [FE]                                ArrayIndexOutOfBoundsException      [CONTEXT]      if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }      [BUGGY]  parent  ==  null)  {  if(isObject)  {  return  JsonToken.START_OBJECT;  }  [BUGGY]      return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	replace	parent  ==  null)  {  if(isObject)  {  return  JsonToken.START_OBJECT;  }	  if(o    ==    null)    {    if(isObject)    {    return    JsonToken.START_OBJECT;    }    	non-compiled	[CE]  not  a  statement	189	None	replace
1178	[BUG]  [BUGGY]  parent!=  null  &&  isObject)  {  return  JsonToken.START_OBJECT;  }  [CE]  not  a  statement  [FE]                                  ArrayIndexOutOfBoundsException      [CONTEXT]      if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }      [BUGGY]  parent!=  null  &&  isObject)  {  return  JsonToken.START_OBJECT;  }  [BUGGY]      return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	replace	parent!=  null  &&  isObject)  {  return  JsonToken.START_OBJECT;  }	  if(o    ==    null)    {    if(isObject)    {    return    JsonToken.START_OBJECT;    }    	non-compiled	[CE]  not  a  statement	189	None	replace
1179	[BUG]  [BUGGY]  try  {  [Delete]  catch(Exception  e)  {  if(isObject)  {  return  JsonToken.START_OBJECT;  }  [CE]  illegal  start  of  expression  [FE]                                    ArrayIndexOutOfBoundsException      [CONTEXT]      if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }      [BUGGY]  try  {  [Delete]  catch(Exception  e)  {  if(isObject)  {  return  JsonToken.START_OBJECT;  }  [BUGGY]      return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	replace	try  {  [Delete]  catch(Exception  e)  {  if(isObject)  {  return  JsonToken.START_OBJECT;  }	  if(o    ==    null)    {    if(isObject)    {    return    JsonToken.START_OBJECT;    }    	non-compiled	[CE]  illegal  start  of  expression	189	None	replace
1180	[BUG]  [BUGGY]  aughtExceptionHandler(this,  JsonToken.START_OBJECT);  [CE]  cannot  find  symbol  START_OBJECT  [FE]                                      ArrayIndexOutOfBoundsException      [CONTEXT]      if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }      [BUGGY]  aughtExceptionHandler(this,  JsonToken.START_OBJECT);  [BUGGY]      return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	replace	aughtExceptionHandler(this,  JsonToken.START_OBJECT);	  if(o    ==    null)    {    if(isObject)    {    return    JsonToken.START_OBJECT;    }    	non-compiled	[CE]  cannot  find  symbol  START_OBJECT	189	None	replace
1181	[BUG]  [BUGGY]  }  else  if(o  instanceof  JsonObject  <  false)  {  [CE]  illegal  start  of  type  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]      if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }      [BUGGY]  }  else  if(o  instanceof  JsonObject  <  false)  {  [BUGGY]      return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	replace	}  else  if(o  instanceof  JsonObject  <  false)  {	  }    else    if(o    instanceof    JsonObject!=    false)    {    	non-compiled	[CE]  illegal  start  of  type	33	None	replace
1182	[BUG]  [BUGGY]  [FE]  ArrayIndexOutOfBoundsException  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]      if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }      [BUGGY]  }  else  if(o  instanceof  JsonObject  ||  o  instanceof  Boolean  ||  o  instanceof  JsonPrimitive)  {  [BUGGY]      return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	add	}  else  if(o  instanceof  JsonObject  ||  o  instanceof  Boolean  ||  o  instanceof  JsonPrimitive)  {	  }    else    if(o    instanceof    JsonObject    ||    o    instanceof    Boolean)    {    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	54	2	replace
1183	[BUG]  [BUGGY]  }  else  if(o  instanceof  JsonObject  ||  o  instanceof  Boolean  ||  o  instanceof  JsonPrimitive)  {  [FE]  ArrayIndexOutOfBoundsException  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]      if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }      [BUGGY]  }  else  if(o  instanceof  JsonObject  ||  o  instanceof  Boolean  ||  o  instanceof  JsonPrimitive)  {  [BUGGY]      return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	replace	}  else  if(o  instanceof  JsonObject  ||  o  instanceof  Boolean  ||  o  instanceof  JsonPrimitive)  {	  }    else    if(o    instanceof    JsonObject    ||    o    instanceof    Boolean)    {    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	54	2	replace
1184	[BUG]  [BUGGY]  }  else  if(o  instanceof  JsonObject  ||  o  instanceof  Boolean  ||  o  instanceof  JsonNumber)  {  [CE]  cannot  find  symbol  [FE]      ArrayIndexOutOfBoundsException    [CONTEXT]      if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }      [BUGGY]  }  else  if(o  instanceof  JsonObject  ||  o  instanceof  Boolean  ||  o  instanceof  JsonNumber)  {  [BUGGY]      return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	replace	}  else  if(o  instanceof  JsonObject  ||  o  instanceof  Boolean  ||  o  instanceof  JsonNumber)  {	  }    else    if(o    instanceof    JsonObject    ||    o    instanceof    Boolean)    {    	non-compiled	[CE]  cannot  find  symbol	54	None	replace
1185	[BUG]  [BUGGY]  }  else  if(o  instanceof  JsonObject  ||  o  instanceof  Boolean  ||  o  instanceof  JsonLong)  {  [CE]  cannot  find  symbol  [FE]        ArrayIndexOutOfBoundsException    [CONTEXT]      if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }      [BUGGY]  }  else  if(o  instanceof  JsonObject  ||  o  instanceof  Boolean  ||  o  instanceof  JsonLong)  {  [BUGGY]      return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	replace	}  else  if(o  instanceof  JsonObject  ||  o  instanceof  Boolean  ||  o  instanceof  JsonLong)  {	  }    else    if(o    instanceof    JsonObject    ||    o    instanceof    Boolean)    {    	non-compiled	[CE]  cannot  find  symbol	54	None	replace
1186	[BUG]  [BUGGY]  while(iterator.hasNext())  {  if(o  ==  null)return  JsonToken.NUMBER;  else  {  push(iterator.next());  return  JsonToken.START_OBJECT;  }  [CE]  'else'  without  'if'  [FE]                        ArrayIndexOutOfBoundsException      [CONTEXT]      if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }      [BUGGY]  while(iterator.hasNext())  {  if(o  ==  null)return  JsonToken.NUMBER;  else  {  push(iterator.next());  return  JsonToken.START_OBJECT;  }  [BUGGY]      return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	replace	while(iterator.hasNext())  {  if(o  ==  null)return  JsonToken.NUMBER;  else  {  push(iterator.next());  return  JsonToken.START_OBJECT;  }	  if(o    ==    null)return    JsonToken.NUMBER;    else    {    push(iterator.next());    return    JsonToken.START_OBJECT;    }    	non-compiled	[CE]  'else'  without  'if'	223	None	replace
1187	[BUG]  [BUGGY]  else  {  push(iterator.next());  return  JsonToken.START_OBJECT;  }  [CE]  'else'  without  'if'  [FE]                          ArrayIndexOutOfBoundsException      [CONTEXT]      if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }      [BUGGY]  else  {  push(iterator.next());  return  JsonToken.START_OBJECT;  }  [BUGGY]      return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	replace	else  {  push(iterator.next());  return  JsonToken.START_OBJECT;  }	  if(o    ==    null)return    JsonToken.NUMBER;    else    {    push(iterator.next());    return    JsonToken.START_OBJECT;    }    	non-compiled	[CE]  'else'  without  'if'	223	None	replace
1188	[BUG]  [BUGGY]  parent  ==  ((  JsonPrimitive)o).getValue()  ||  isObject)  {  push(iterator.next());  return  JsonToken.NAME;  }  [CE]  not  a  statement  [FE]                            ArrayIndexOutOfBoundsException      [CONTEXT]      if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }      [BUGGY]  parent  ==  ((  JsonPrimitive)o).getValue()  ||  isObject)  {  push(iterator.next());  return  JsonToken.NAME;  }  [BUGGY]      return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	replace	parent  ==  ((  JsonPrimitive)o).getValue()  ||  isObject)  {  push(iterator.next());  return  JsonToken.NAME;  }	  if(o    instanceof    JsonArray)    {    if(isObject)    {    push(iterator.next());    return    JsonToken.NAME;    }    	non-compiled	[CE]  not  a  statement	36	None	replace
1189	[BUG]  [BUGGY]  parent!=  ((  JsonPrimitive)o).getParent();  [CE]  not  a  statement  [FE]                              ArrayIndexOutOfBoundsException      [CONTEXT]      if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }      [BUGGY]  parent!=  ((  JsonPrimitive)o).getParent();  [BUGGY]      return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	replace	parent!=  ((  JsonPrimitive)o).getParent();	  if(o    instanceof    JsonArray)    {    if(isObject)    {    push(iterator.next());    return    JsonToken.NAME;    }    	non-compiled	[CE]  not  a  statement	36	None	replace
1190	[BUG]  [BUGGY]  Iterator  <  Object>  iterator  =  iterator.next();  [CE]  variable  iterator  is  already  defined  in  method  peek()  [FE]                                ArrayIndexOutOfBoundsException      [CONTEXT]      if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }      [BUGGY]  Iterator  <  Object>  iterator  =  iterator.next();  [BUGGY]      return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	replace	Iterator  <  Object>  iterator  =  iterator.next();	  if(o    instanceof    JsonArray)    {    if(isObject)    {    push(iterator.next());    return    JsonToken.NAME;    }    	non-compiled	[CE]  variable  iterator  is  already  defined  in  method  peek()	36	None	replace
1191	[BUG]  [BUGGY]  parent  ==  ((  JsonPrimitive)o).getValue();  if(isObject)  {  push(iterator.next());  return  JsonToken.NAME;  }  [CE]  not  a  statement  [FE]                                  ArrayIndexOutOfBoundsException      [CONTEXT]      if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }      [BUGGY]  parent  ==  ((  JsonPrimitive)o).getValue();  if(isObject)  {  push(iterator.next());  return  JsonToken.NAME;  }  [BUGGY]      return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	replace	parent  ==  ((  JsonPrimitive)o).getValue();  if(isObject)  {  push(iterator.next());  return  JsonToken.NAME;  }	  if(o    instanceof    JsonArray)    {    if(isObject)    {    push(iterator.next());    return    JsonToken.NAME;    }    	non-compiled	[CE]  not  a  statement	36	None	replace
1192	[BUG]  [BUGGY]  }  else  if(o  instanceof  JsonOBJECT  ||  o  instanceof  String)  {  [CE]  cannot  find  symbol  [FE]    AssertionError    [CONTEXT]      if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }      [BUGGY]  }  else  if(o  instanceof  JsonOBJECT  ||  o  instanceof  String)  {  [BUGGY]      return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	replace	}  else  if(o  instanceof  JsonOBJECT  ||  o  instanceof  String)  {	  }    else    if(o    instanceof    JsonArray    ||    o    instanceof    String)    {    	non-compiled	[CE]  cannot  find  symbol	52	None	replace
1193	[BUG]  [BUGGY]  }  else  if(o  instanceof  JsonObject  &&  o  instanceof  JsonArray)  {  }  else  if(o  instanceof  JsonObject  &&  o  instanceof  JsonArray)  {  aught  return  JsonToken.BEGIN_OBJECT;  }  else  if(o  instanceof  JsonObject  &&  o  instanceof  JsonArray)  {  [CE]  not  a  statement  [FE]    AssertionError    [CONTEXT]      if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }      [BUGGY]  }  else  if(o  instanceof  JsonObject  &&  o  instanceof  JsonArray)  {  }  else  if(o  instanceof  JsonObject  &&  o  instanceof  JsonArray)  {  aught  return  JsonToken.BEGIN_OBJECT;  }  else  if(o  instanceof  JsonObject  &&  o  instanceof  JsonArray)  {  [BUGGY]      return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	replace	}    else    if(o    instanceof    JsonObject    &&    o    instanceof    JsonArray)    {    }  else  if(o  instanceof  JsonObject  &&  o  instanceof  JsonArray)  {  aught  return  JsonToken.BEGIN_OBJECT;  }  else  if(o  instanceof  JsonObject  &&  o  instanceof  JsonArray)  {	  	non-compiled	[CE]  not  a  statement	41	None	add
1194	[BUG]  [BUGGY]  }  else  if(o  instanceof  JsonObject  &&  o  instanceof  JsonArray)  {  }  else  if(o  instanceof  JsonObject  &&  o  instanceof  JsonArray)  {  result  =  JsonToken.BEGIN_OBJECT;  }  else  if(o  instanceof  JsonObject  &&  o  instanceof  JsonArray)  {  [CE]  cannot  find  symbol  result  [FE]      AssertionError    [CONTEXT]      if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }      [BUGGY]  }  else  if(o  instanceof  JsonObject  &&  o  instanceof  JsonArray)  {  }  else  if(o  instanceof  JsonObject  &&  o  instanceof  JsonArray)  {  result  =  JsonToken.BEGIN_OBJECT;  }  else  if(o  instanceof  JsonObject  &&  o  instanceof  JsonArray)  {  [BUGGY]      return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	replace	}    else    if(o    instanceof    JsonObject    &&    o    instanceof    JsonArray)    {    }  else  if(o  instanceof  JsonObject  &&  o  instanceof  JsonArray)  {  result  =  JsonToken.BEGIN_OBJECT;  }  else  if(o  instanceof  JsonObject  &&  o  instanceof  JsonArray)  {	  	non-compiled	[CE]  cannot  find  symbol  result	41	None	add
1195	[BUG]  [BUGGY]  }  else  if(o  instanceof  JsonObject  &&  o  instanceof  JsonArray)  {  <  }  else  if(o  instanceof  JsonObject  &&  o  instanceof  JsonArray)  {  [CE]  illegal  start  of  type  [FE]        AssertionError    [CONTEXT]      if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }      [BUGGY]  }  else  if(o  instanceof  JsonObject  &&  o  instanceof  JsonArray)  {  <  }  else  if(o  instanceof  JsonObject  &&  o  instanceof  JsonArray)  {  [BUGGY]      return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	replace	}    else    if(o    instanceof    JsonObject    &&    o    instanceof    JsonArray)    {    <  }  else  if(o  instanceof  JsonObject  &&  o  instanceof  JsonArray)  {	  	non-compiled	[CE]  illegal  start  of  type	41	None	add
1196	[BUG]  [BUGGY]  }  else  if(o  instanceof  JsonObject  ||  o  instanceof  String  ||  o  instanceof  Class  >=?>)  {  [CE]  illegal  start  of  expression  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]      if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }      [BUGGY]  }  else  if(o  instanceof  JsonObject  ||  o  instanceof  String  ||  o  instanceof  Class  >=?>)  {  [BUGGY]      return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	replace	}  else  if(o  instanceof  JsonObject  ||  o  instanceof  String  ||  o  instanceof  Class  >=?>)  {	  }    else    if(o    instanceof    JsonObject    ||    o    instanceof    String    ||    o    instanceof    Class    <?>)    {    	non-compiled	[CE]  illegal  start  of  expression	245	None	replace
1197	[BUG]  [BUGGY]  [FE]  ArrayIndexOutOfBoundsException  [FE]                  ArrayIndexOutOfBoundsException      [CONTEXT]      if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }      [BUGGY]  }  else  if(o  instanceof  JsonObject  ||  o  instanceof  Integer)  {  [BUGGY]      return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	add	}  else  if(o  instanceof  JsonObject  ||  o  instanceof  Integer)  {	  }    else    if(o    instanceof    JsonObject    ||    o    instanceof    String)    {    <    }    else    if(o    instanceof    JsonObject    ||    o    instanceof    String)    {    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	21	2	replace
1198	[BUG]  [BUGGY]  }  else  if(o  instanceof  JsonObject  ||  o  instanceof  Integer)  {  [FE]  ArrayIndexOutOfBoundsException  [FE]                  ArrayIndexOutOfBoundsException      [CONTEXT]      if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }      [BUGGY]  }  else  if(o  instanceof  JsonObject  ||  o  instanceof  Integer)  {  [BUGGY]      return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	replace	}  else  if(o  instanceof  JsonObject  ||  o  instanceof  Integer)  {	  }    else    if(o    instanceof    JsonObject    ||    o    instanceof    String)    {    <    }    else    if(o    instanceof    JsonObject    ||    o    instanceof    String)    {    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	21	2	replace
1199	[BUG]  [BUGGY]  }  else  if(!(o  instanceof  JsonPrimitive)&&  isObject)  {  [CE]  cannot  find  symbol  isObject  [FE]          ArrayIndexOutOfBoundsException      [CONTEXT]      if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }      [BUGGY]  }  else  if(!(o  instanceof  JsonPrimitive)&&  isObject)  {  [BUGGY]      return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	replace	}  else  if(!(o  instanceof  JsonPrimitive)&&  isObject)  {	  }    else    if(!(o    instanceof    JsonArray)||    isObject)    {    	non-compiled	[CE]  cannot  find  symbol  isObject	147	None	replace
1200	[BUG]  [BUGGY]  }    else    if(o    instanceof    JsonArray)    {    return  JsonToken.BEGIN_ARRAY;  }  else  if(o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if(o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_OBJECT;  }  else  if(o  instanceof  JsonArray)  {  return  JsonToken  [CE]  ';'  expected  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]      if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }      [BUGGY]  }    else    if(o    instanceof    JsonArray)    {    return  JsonToken.BEGIN_ARRAY;  }  else  if(o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if(o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_OBJECT;  }  else  if(o  instanceof  JsonArray)  {  return  JsonToken  [BUGGY]      return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	replace	}        else        if(o        instanceof        JsonArray)        {        return    JsonToken.BEGIN_ARRAY;    }  else  if(o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if(o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_OBJECT;  }  else  if(o  instanceof  JsonArray)  {  return  JsonToken	  	non-compiled	[CE]  ';'  expected	174	None	add
1201	[BUG]  [BUGGY]  }    else    if(o    instanceof    JsonArray)    {    return  JsonToken.BEGIN_ARRAY;  }  else  if(o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  [CE]  illegal  start  of  type  [FE]      ArrayIndexOutOfBoundsException    [CONTEXT]      if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }      [BUGGY]  }    else    if(o    instanceof    JsonArray)    {    return  JsonToken.BEGIN_ARRAY;  }  else  if(o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  [BUGGY]      return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	replace	}        else        if(o        instanceof        JsonArray)        {        return    JsonToken.BEGIN_ARRAY;    }  else  if(o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }	  	non-compiled	[CE]  illegal  start  of  type	174	None	add
1202	[BUG]  [BUGGY]  }    else    if(o    instanceof    JsonArray)    {    return  JsonToken.BEGIN_ARRAY;  }  else  if(o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if(o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_OBJECT;  }  else  if(o  instanceof  JsonArray)  {  return  JsonTo  [CE]  ';'  expected  [FE]        ArrayIndexOutOfBoundsException    [CONTEXT]      if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }      [BUGGY]  }    else    if(o    instanceof    JsonArray)    {    return  JsonToken.BEGIN_ARRAY;  }  else  if(o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if(o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_OBJECT;  }  else  if(o  instanceof  JsonArray)  {  return  JsonTo  [BUGGY]      return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	replace	}        else        if(o        instanceof        JsonArray)        {        return    JsonToken.BEGIN_ARRAY;    }  else  if(o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if(o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_OBJECT;  }  else  if(o  instanceof  JsonArray)  {  return  JsonTo	  	non-compiled	[CE]  ';'  expected	174	None	add
1203	[BUG]  [BUGGY]  }    else    if(o    instanceof    JsonArray)    {    return  JsonToken.BEGIN_ARRAY;  }  else  if(o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if(o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_OBJECT;  }  else  if(o  instanceof  JsonArray)  {  return  J  [CE]  ';'  expected  [FE]          ArrayIndexOutOfBoundsException    [CONTEXT]      if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }      [BUGGY]  }    else    if(o    instanceof    JsonArray)    {    return  JsonToken.BEGIN_ARRAY;  }  else  if(o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if(o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_OBJECT;  }  else  if(o  instanceof  JsonArray)  {  return  J  [BUGGY]      return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	replace	}        else        if(o        instanceof        JsonArray)        {        return    JsonToken.BEGIN_ARRAY;    }  else  if(o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if(o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_OBJECT;  }  else  if(o  instanceof  JsonArray)  {  return  J	  	non-compiled	[CE]  ';'  expected	174	None	add
1204	[BUG]  [BUGGY]  }    else    if(o    instanceof    JsonArray)    {    return  JsonToken.BEGIN_ARRAY;  }  else  if(o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if(o  instanceof  JsonArray)  {  return  JsonToken.END_OBJECT;  }  [CE]  illegal  start  of  type  [FE]            ArrayIndexOutOfBoundsException    [CONTEXT]      if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }      [BUGGY]  }    else    if(o    instanceof    JsonArray)    {    return  JsonToken.BEGIN_ARRAY;  }  else  if(o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if(o  instanceof  JsonArray)  {  return  JsonToken.END_OBJECT;  }  [BUGGY]      return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	replace	}        else        if(o        instanceof        JsonArray)        {        return    JsonToken.BEGIN_ARRAY;    }  else  if(o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if(o  instanceof  JsonArray)  {  return  JsonToken.END_OBJECT;  }	  	non-compiled	[CE]  illegal  start  of  type	174	None	add
1205	[BUG]  [BUGGY]  }    else    if(o    instanceof    JsonArray)    {    return  JsonToken.BEGIN_ARRAY;  else  if(o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if(o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_OBJECT;  }  [CE]  'else'  without  'if'  [FE]              ArrayIndexOutOfBoundsException    [CONTEXT]      if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }      [BUGGY]  }    else    if(o    instanceof    JsonArray)    {    return  JsonToken.BEGIN_ARRAY;  else  if(o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if(o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_OBJECT;  }  [BUGGY]      return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	replace	}        else        if(o        instanceof        JsonArray)        {        return    JsonToken.BEGIN_ARRAY;    else  if(o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if(o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_OBJECT;  }	  	non-compiled	[CE]  'else'  without  'if'	174	None	add
1206	[BUG]  [BUGGY]  }  else  if(isObject  &&  o  instanceof  JsonObject)  {  [CE]  cannot  find  symbol  isObject  [FE]    AssertionError    [CONTEXT]      if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }      [BUGGY]  }  else  if(isObject  &&  o  instanceof  JsonObject)  {  [BUGGY]      return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	replace	}  else  if(isObject  &&  o  instanceof  JsonObject)  {	  }    else    if(o    instanceof    JsonObject    &&    o    instanceof    JsonArray)    {    	non-compiled	[CE]  cannot  find  symbol  isObject	42	None	replace
1207	[BUG]  [BUGGY]  }  else  if(o  instanceof  JsonPrimitive)  {  }  else  {  push(iterator.next());  return  JsonToken.BEGIN_OBJECT;  }  [CE]  illegal  start  of  type  [FE]            AssertionError      [CONTEXT]      if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }      [BUGGY]  }  else  if(o  instanceof  JsonPrimitive)  {  }  else  {  push(iterator.next());  return  JsonToken.BEGIN_OBJECT;  }  [BUGGY]      return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	replace	}  else  if(o  instanceof  JsonPrimitive)  {  }  else  {  push(iterator.next());  return  JsonToken.BEGIN_OBJECT;  }	  }    else    if(o    instanceof    JsonArray)    {    }    else    if(o    instanceof    JsonArray)    <    return    JsonToken.BEGIN_OBJECT;    	non-compiled	[CE]  illegal  start  of  type	100	None	replace
1208	[BUG]  [BUGGY]  }  else  if(o  instanceof  JsonPrimitive)  {  }  else  if(o  instanceof  JsonPrimitive)  {  return  JsonPrimitive.BEGIN_OBJECT;  }  [CE]  illegal  start  of  type  [FE]              AssertionError      [CONTEXT]      if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }      [BUGGY]  }  else  if(o  instanceof  JsonPrimitive)  {  }  else  if(o  instanceof  JsonPrimitive)  {  return  JsonPrimitive.BEGIN_OBJECT;  }  [BUGGY]      return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	replace	}  else  if(o  instanceof  JsonPrimitive)  {  }  else  if(o  instanceof  JsonPrimitive)  {  return  JsonPrimitive.BEGIN_OBJECT;  }	  }    else    if(o    instanceof    JsonArray)    {    }    else    if(o    instanceof    JsonArray)    <    return    JsonToken.BEGIN_OBJECT;    	non-compiled	[CE]  illegal  start  of  type	100	None	replace
1209	[BUG]  [BUGGY]  }  else  if(o  instanceof  JsonPrimitive)  {  }  else  if(o  instanceof  JsonPrimitive)  {  return  JsonToken  BEGIN_OBJECT;  }  [CE]  [FE]                AssertionError      [CONTEXT]      if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }      [BUGGY]  }  else  if(o  instanceof  JsonPrimitive)  {  }  else  if(o  instanceof  JsonPrimitive)  {  return  JsonToken  BEGIN_OBJECT;  }  [BUGGY]      return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	replace	}  else  if(o  instanceof  JsonPrimitive)  {  }  else  if(o  instanceof  JsonPrimitive)  {  return  JsonToken  BEGIN_OBJECT;  }	  }    else    if(o    instanceof    JsonArray)    {    }    else    if(o    instanceof    JsonArray)    <    return    JsonToken.BEGIN_OBJECT;    	non-compiled	[CE]  	100	None	replace
1210	[BUG]  [BUGGY]  }  else  if(o  instanceof  JsonObject  &&!(o  instanceof  JsonPrimitive))  {  }  else  if(o  instanceof  JsonObject  &&!(o  instanceof  JsonPrimitive))  <  return  JsonToken.BEGIN_OBJECT;  [CE]  illegal  start  of  type  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]      if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }      [BUGGY]  }  else  if(o  instanceof  JsonObject  &&!(o  instanceof  JsonPrimitive))  {  }  else  if(o  instanceof  JsonObject  &&!(o  instanceof  JsonPrimitive))  <  return  JsonToken.BEGIN_OBJECT;  [BUGGY]      return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	replace	}    else    if(o    instanceof    JsonObject    &&!(o    instanceof    JsonPrimitive))    {    }  else  if(o  instanceof  JsonObject  &&!(o  instanceof  JsonPrimitive))  <  return  JsonToken.BEGIN_OBJECT;	  	non-compiled	[CE]  illegal  start  of  type	181	None	add
1211	[BUG]  [BUGGY]  }  else  if(o  instanceof  JsonObject  &&!(o  instanceof  JsonPrimitive))  {  instanceof  JsonObject  &&!(o  instanceof  JsonPrimitive))  {  [CE]  illegal  start  of  expression  [FE]      ArrayIndexOutOfBoundsException    [CONTEXT]      if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }      [BUGGY]  }  else  if(o  instanceof  JsonObject  &&!(o  instanceof  JsonPrimitive))  {  instanceof  JsonObject  &&!(o  instanceof  JsonPrimitive))  {  [BUGGY]      return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	replace	}    else    if(o    instanceof    JsonObject    &&!(o    instanceof    JsonPrimitive))    {    instanceof  JsonObject  &&!(o  instanceof  JsonPrimitive))  {	  	non-compiled	[CE]  illegal  start  of  expression	181	None	add
1212	[BUG]  [BUGGY]  }  else  if(o  instanceof  JsonObject  &&!(o  instanceof  JsonPrimitive))  {  ArrayIndexOutOfBoundsException  e  =  new  ArrayIndexOutOfBoundsException(pathNames[0],  pathNames[1]);  [CE]  no  suitable  constructor  found  for  ArrayIndexOutOfBoundsException(String,String)  [FE]        ArrayIndexOutOfBoundsException    [CONTEXT]      if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }      [BUGGY]  }  else  if(o  instanceof  JsonObject  &&!(o  instanceof  JsonPrimitive))  {  ArrayIndexOutOfBoundsException  e  =  new  ArrayIndexOutOfBoundsException(pathNames[0],  pathNames[1]);  [BUGGY]      return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	replace	}    else    if(o    instanceof    JsonObject    &&!(o    instanceof    JsonPrimitive))    {    ArrayIndexOutOfBoundsException  e  =  new  ArrayIndexOutOfBoundsException(pathNames[0],  pathNames[1]);	  	non-compiled	[CE]  no  suitable  constructor  found  for  ArrayIndexOutOfBoundsException(String,String)	181	None	add
1213	[BUG]  [BUGGY]  }  else  if(o  instanceof  JsonObject  &&!(o  instanceof  JsonPrimitive))  {  ArrayIndexOutOfBoundsException  e  =  new  ArrayIndexOutOfBoundsException(iterator.next());  [CE]  cannot  find  symbol  iterator  [FE]          ArrayIndexOutOfBoundsException    [CONTEXT]      if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }      [BUGGY]  }  else  if(o  instanceof  JsonObject  &&!(o  instanceof  JsonPrimitive))  {  ArrayIndexOutOfBoundsException  e  =  new  ArrayIndexOutOfBoundsException(iterator.next());  [BUGGY]      return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	replace	}    else    if(o    instanceof    JsonObject    &&!(o    instanceof    JsonPrimitive))    {    ArrayIndexOutOfBoundsException  e  =  new  ArrayIndexOutOfBoundsException(iterator.next());	  	non-compiled	[CE]  cannot  find  symbol  iterator	181	None	add
1214	[BUG]  [BUGGY]  Object[]  stack  =(Object[])stack.clone();  push(stack.size()  -  stack.length);  return  JsonToken.BEGIN_ARRAY;  [CE]  cannot  find  symbol  [FE]                                    ArrayIndexOutOfBoundsException      [CONTEXT]      if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }      [BUGGY]  Object[]  stack  =(Object[])stack.clone();  push(stack.size()  -  stack.length);  return  JsonToken.BEGIN_ARRAY;  [BUGGY]      return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	replace	Object[]  stack  =(Object[])stack.clone();  push(stack.size()  -  stack.length);  return  JsonToken.BEGIN_ARRAY;	  if(o    instanceof    JsonArray)    {    Object[]    stack    =(Object[])o;    push(stack.size()    -    stack.length);    return    JsonToken.BEGIN_ARRAY;    }    	non-compiled	[CE]  cannot  find  symbol	40	None	replace
1215	[BUG]  [BUGGY]  Object[]  stack  =(Object[])stack.get(stack.size()  -  1);  return  JsonToken.BEGIN_ARRAY;  [CE]  cannot  find  symbol  [FE]                                      ArrayIndexOutOfBoundsException      [CONTEXT]      if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }      [BUGGY]  Object[]  stack  =(Object[])stack.get(stack.size()  -  1);  return  JsonToken.BEGIN_ARRAY;  [BUGGY]      return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	replace	Object[]  stack  =(Object[])stack.get(stack.size()  -  1);  return  JsonToken.BEGIN_ARRAY;	  if(o    instanceof    JsonArray)    {    Object[]    stack    =(Object[])o;    push(stack.size()    -    stack.length);    return    JsonToken.BEGIN_ARRAY;    }    	non-compiled	[CE]  cannot  find  symbol	40	None	replace
1216	[BUG]  [BUGGY]  Object[]  stack  =(Object[])stack.clone();  push(stack.size()  -  stack.length);  [CE]  cannot  find  symbol  [FE]                                        ArrayIndexOutOfBoundsException      [CONTEXT]      if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }      [BUGGY]  Object[]  stack  =(Object[])stack.clone();  push(stack.size()  -  stack.length);  [BUGGY]      return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	replace	Object[]  stack  =(Object[])stack.clone();  push(stack.size()  -  stack.length);	  if(o    instanceof    JsonArray)    {    Object[]    stack    =(Object[])o;    push(stack.size()    -    stack.length);    return    JsonToken.BEGIN_ARRAY;    }    	non-compiled	[CE]  cannot  find  symbol	40	None	replace
1217	[BUG]  [BUGGY]  Stack[]  stack  =(Object[])o;  push(stack.size()  -  stack.length);  return  JsonToken.BEGIN_ARRAY;  [CE]  cannot  find  symbol  [FE]                                          ArrayIndexOutOfBoundsException      [CONTEXT]      if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }      [BUGGY]  Stack[]  stack  =(Object[])o;  push(stack.size()  -  stack.length);  return  JsonToken.BEGIN_ARRAY;  [BUGGY]      return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	replace	Stack[]  stack  =(Object[])o;  push(stack.size()  -  stack.length);  return  JsonToken.BEGIN_ARRAY;	  if(o    instanceof    JsonArray)    {    Object[]    stack    =(Object[])o;    push(stack.size()    -    stack.length);    return    JsonToken.BEGIN_ARRAY;    }    	non-compiled	[CE]  cannot  find  symbol	40	None	replace
1218	[BUG]  [BUGGY]  Object[]  stack  =(Object[])stack.get(stack.length  -  1);  return  JsonToken.BEGIN_ARRAY;  [CE]  cannot  find  symbol  [FE]                                            ArrayIndexOutOfBoundsException      [CONTEXT]      if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }      [BUGGY]  Object[]  stack  =(Object[])stack.get(stack.length  -  1);  return  JsonToken.BEGIN_ARRAY;  [BUGGY]      return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	replace	Object[]  stack  =(Object[])stack.get(stack.length  -  1);  return  JsonToken.BEGIN_ARRAY;	  if(o    instanceof    JsonArray)    {    Object[]    stack    =(Object[])o;    push(stack.size()    -    stack.length);    return    JsonToken.BEGIN_ARRAY;    }    	non-compiled	[CE]  cannot  find  symbol	40	None	replace
1219	[BUG]  [BUGGY]  Object[]  stack  =(Object[])stack.clone();  push(stack.size()  -  stack.length);  return  JsonToken.BEGIN_OBJECT;  [CE]  cannot  find  symbol  [FE]                                              ArrayIndexOutOfBoundsException      [CONTEXT]      if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }      [BUGGY]  Object[]  stack  =(Object[])stack.clone();  push(stack.size()  -  stack.length);  return  JsonToken.BEGIN_OBJECT;  [BUGGY]      return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	replace	Object[]  stack  =(Object[])stack.clone();  push(stack.size()  -  stack.length);  return  JsonToken.BEGIN_OBJECT;	  if(o    instanceof    JsonArray)    {    Object[]    stack    =(Object[])o;    push(stack.size()    -    stack.length);    return    JsonToken.BEGIN_ARRAY;    }    	non-compiled	[CE]  cannot  find  symbol	40	None	replace
1220	[BUG]  [BUGGY]  }  else  if(!(o  instanceof  JsonArray  ||  o  instanceof  JsonNumber))  {  [CE]  cannot  find  symbol  [FE]              ArrayIndexOutOfBoundsException      [CONTEXT]      if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }      [BUGGY]  }  else  if(!(o  instanceof  JsonArray  ||  o  instanceof  JsonNumber))  {  [BUGGY]      return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	replace	}  else  if(!(o  instanceof  JsonArray  ||  o  instanceof  JsonNumber))  {	  }    else    if(o    instanceof    JsonArray    ||    o    instanceof    JsonNumber)    {    	non-compiled	[CE]  cannot  find  symbol	258	None	replace
1221	[BUG]  [BUGGY]  }  else  if(!(o  instanceof  JsonOBJECT)&&!(o  instanceof  JsonPrimitive))  {  [CE]  cannot  find  symbol  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]      if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }      [BUGGY]  }  else  if(!(o  instanceof  JsonOBJECT)&&!(o  instanceof  JsonPrimitive))  {  [BUGGY]      return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	replace	}  else  if(!(o  instanceof  JsonOBJECT)&&!(o  instanceof  JsonPrimitive))  {	  }    else    if(!(o    instanceof    JsonArray)||!(o    instanceof    JsonPrimitive))    {    	non-compiled	[CE]  cannot  find  symbol	251	None	replace
1222	[BUG]  [BUGGY]  }  else  if(o  instanceof  JsonObject  ||  o  instanceof  JsonProperty)  {  [CE]  cannot  find  symbol  [FE]          ArrayIndexOutOfBoundsException      [CONTEXT]      if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }      [BUGGY]  }  else  if(o  instanceof  JsonObject  ||  o  instanceof  JsonProperty)  {  [BUGGY]      return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	replace	}  else  if(o  instanceof  JsonObject  ||  o  instanceof  JsonProperty)  {	  }    else    if(o    instanceof    JsonObject    ||    o    instanceof    JsonPrimitive)    {    object    =    o    instanceof    JsonObject    ||    o    instanceof    JsonPrimitive)    {    return    JsonToken.BEGIN_OBJECT;    }    else    if(o    instanceof    JsonObject    ||    o    instanceof    JsonPrimitive)    {    	non-compiled	[CE]  cannot  find  symbol	229	None	replace
1223	[BUG]  [BUGGY]  }  else  if(o  instanceof  JsonObject  ||  o  instanceof  JsonArray)  {  ArrayIndexOutOfBoundsException  e  =  new  ArrayIndexOutOfBoundsException(parent.next());  [CE]  cannot  find  symbol  parent  [FE]        ArrayIndexOutOfBoundsException      [CONTEXT]      if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }      [BUGGY]  }  else  if(o  instanceof  JsonObject  ||  o  instanceof  JsonArray)  {  ArrayIndexOutOfBoundsException  e  =  new  ArrayIndexOutOfBoundsException(parent.next());  [BUGGY]      return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	replace	}  else  if(o  instanceof  JsonObject  ||  o  instanceof  JsonArray)  {  ArrayIndexOutOfBoundsException  e  =  new  ArrayIndexOutOfBoundsException(parent.next());	  }    else    if(o    instanceof    JsonObject    ||    o    instanceof    JsonArray)    {    ArrayIndexOutOfBoundsException    e    =    new    ArrayIndexOutOfBoundsException(iterator.next());    	non-compiled	[CE]  cannot  find  symbol  parent	192	None	replace
1224	[BUG]  [BUGGY]  }  else  if(o  instanceof  JsonObject  ||  o  instanceof  JsonArray)  {  ArrayIndexOutOfBoundsException  e  =  new  ArrayIndexOutOfBoundsException(primitive.next());  [CE]  cannot  find  symbol  primitive  [FE]          ArrayIndexOutOfBoundsException      [CONTEXT]      if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }      [BUGGY]  }  else  if(o  instanceof  JsonObject  ||  o  instanceof  JsonArray)  {  ArrayIndexOutOfBoundsException  e  =  new  ArrayIndexOutOfBoundsException(primitive.next());  [BUGGY]      return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	replace	}  else  if(o  instanceof  JsonObject  ||  o  instanceof  JsonArray)  {  ArrayIndexOutOfBoundsException  e  =  new  ArrayIndexOutOfBoundsException(primitive.next());	  }    else    if(o    instanceof    JsonObject    ||    o    instanceof    JsonArray)    {    ArrayIndexOutOfBoundsException    e    =    new    ArrayIndexOutOfBoundsException(iterator.next());    	non-compiled	[CE]  cannot  find  symbol  primitive	192	None	replace
1225	[BUG]  [BUGGY]  }  else  if(o  instanceof  JsonObject  ||  o  instanceof  JsonArray)  {  ArrayIndexOutOfBoundsException  e  =  new  ArrayIndexOutOfBoundsException(input);  [CE]  cannot  find  symbol  input  [FE]            ArrayIndexOutOfBoundsException      [CONTEXT]      if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }      [BUGGY]  }  else  if(o  instanceof  JsonObject  ||  o  instanceof  JsonArray)  {  ArrayIndexOutOfBoundsException  e  =  new  ArrayIndexOutOfBoundsException(input);  [BUGGY]      return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	replace	}  else  if(o  instanceof  JsonObject  ||  o  instanceof  JsonArray)  {  ArrayIndexOutOfBoundsException  e  =  new  ArrayIndexOutOfBoundsException(input);	  }    else    if(o    instanceof    JsonObject    ||    o    instanceof    JsonArray)    {    ArrayIndexOutOfBoundsException    e    =    new    ArrayIndexOutOfBoundsException(iterator.next());    	non-compiled	[CE]  cannot  find  symbol  input	192	None	replace
1226	[BUG]  [BUGGY]  }  else  if(o  instanceof  JsonObject  ||  o  instanceof  JsonArray)  {  ArrayIndexOutOfBoundsException  e  =  new  ArrayIndexOutOfBoundsException(primitive);  [CE]  cannot  find  symbol  primitive  [FE]              ArrayIndexOutOfBoundsException      [CONTEXT]      if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }      [BUGGY]  }  else  if(o  instanceof  JsonObject  ||  o  instanceof  JsonArray)  {  ArrayIndexOutOfBoundsException  e  =  new  ArrayIndexOutOfBoundsException(primitive);  [BUGGY]      return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	replace	}  else  if(o  instanceof  JsonObject  ||  o  instanceof  JsonArray)  {  ArrayIndexOutOfBoundsException  e  =  new  ArrayIndexOutOfBoundsException(primitive);	  }    else    if(o    instanceof    JsonObject    ||    o    instanceof    JsonArray)    {    ArrayIndexOutOfBoundsException    e    =    new    ArrayIndexOutOfBoundsException(iterator.next());    	non-compiled	[CE]  cannot  find  symbol  primitive	192	None	replace
1227	[BUG]  [BUGGY]  }    else    if(o    instanceof    JsonObject    ||    o    instanceof    JsonArray)    {    return  JsonToken.BEGIN_OBJECT;  if(o  instanceof  JsonObject  ||  o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_OBJECT;  }  [CE]  unreachable  statement  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]      if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }      [BUGGY]  }    else    if(o    instanceof    JsonObject    ||    o    instanceof    JsonArray)    {    return  JsonToken.BEGIN_OBJECT;  if(o  instanceof  JsonObject  ||  o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_OBJECT;  }  [BUGGY]      return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	replace	}        else        if(o        instanceof        JsonObject        ||        o        instanceof        JsonArray)        {        return    JsonToken.BEGIN_OBJECT;    if(o  instanceof  JsonObject  ||  o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_OBJECT;  }	  	non-compiled	[CE]  unreachable  statement	193	None	add
1228	[BUG]  [BUGGY]  }    else    if(o    instanceof    JsonObject    ||    o    instanceof    JsonArray)    {    return  JsonToken.BEGIN_OBJECT;  if(o  instanceof  JsonObject  ||  o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_OBJECT;  }  else  if(o  instanceof  JsonObject  ||  o  instanceof  JsonArray)  {  return  JsonToken  [CE]  ';'  expected  [FE]      ArrayIndexOutOfBoundsException    [CONTEXT]      if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }      [BUGGY]  }    else    if(o    instanceof    JsonObject    ||    o    instanceof    JsonArray)    {    return  JsonToken.BEGIN_OBJECT;  if(o  instanceof  JsonObject  ||  o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_OBJECT;  }  else  if(o  instanceof  JsonObject  ||  o  instanceof  JsonArray)  {  return  JsonToken  [BUGGY]      return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	replace	}        else        if(o        instanceof        JsonObject        ||        o        instanceof        JsonArray)        {        return    JsonToken.BEGIN_OBJECT;    if(o  instanceof  JsonObject  ||  o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_OBJECT;  }  else  if(o  instanceof  JsonObject  ||  o  instanceof  JsonArray)  {  return  JsonToken	  	non-compiled	[CE]  ';'  expected	193	None	add
1229	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]      if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }      [BUGGY]  }  else  if(o  instanceof  JsonObject  &&  o  instanceof  String  &&  o  instanceof  Boolean)  {  [BUGGY]      return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	add	}  else  if(o  instanceof  JsonObject  &&  o  instanceof  String  &&  o  instanceof  Boolean)  {	  }    else    if(o    instanceof    JsonObject    ||    o    instanceof    String    ||    o    instanceof    Boolean)    {    	compilable	  [FE]  AssertionError  	247	2	replace
1230	[BUG]  [BUGGY]  }  else  if(o  instanceof  JsonObject  &&  o  instanceof  String  &&  o  instanceof  Boolean)  {  [FE]  AssertionError  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]      if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }      [BUGGY]  }  else  if(o  instanceof  JsonObject  &&  o  instanceof  String  &&  o  instanceof  Boolean)  {  [BUGGY]      return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	replace	}  else  if(o  instanceof  JsonObject  &&  o  instanceof  String  &&  o  instanceof  Boolean)  {	  }    else    if(o    instanceof    JsonObject    ||    o    instanceof    String    ||    o    instanceof    Boolean)    {    	compilable	  [FE]  AssertionError  	247	2	replace
1231	[BUG]  [BUGGY]  [FE]  ArrayIndexOutOfBoundsException  [FE]      ArrayIndexOutOfBoundsException    [CONTEXT]      if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }      [BUGGY]  }  else  if(o  instanceof  JsonObject  ||  o  instanceof  Integer  ||  o  instanceof  Boolean)  {  [BUGGY]      return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	add	}  else  if(o  instanceof  JsonObject  ||  o  instanceof  Integer  ||  o  instanceof  Boolean)  {	  }    else    if(o    instanceof    JsonObject    ||    o    instanceof    String    ||    o    instanceof    Boolean)    {    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	247	2	replace
1232	[BUG]  [BUGGY]  }  else  if(o  instanceof  JsonObject  ||  o  instanceof  Integer  ||  o  instanceof  Boolean)  {  [FE]  ArrayIndexOutOfBoundsException  [FE]      ArrayIndexOutOfBoundsException    [CONTEXT]      if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }      [BUGGY]  }  else  if(o  instanceof  JsonObject  ||  o  instanceof  Integer  ||  o  instanceof  Boolean)  {  [BUGGY]      return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	replace	}  else  if(o  instanceof  JsonObject  ||  o  instanceof  Integer  ||  o  instanceof  Boolean)  {	  }    else    if(o    instanceof    JsonObject    ||    o    instanceof    String    ||    o    instanceof    Boolean)    {    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	247	2	replace
1233	[BUG]  [BUGGY]  [FE]  ArrayIndexOutOfBoundsException  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]      if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }      [BUGGY]  }  else  if(o  instanceof  JsonObject  ||  o  instanceof  Class)  {  [BUGGY]      return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	add	}  else  if(o  instanceof  JsonObject  ||  o  instanceof  Class)  {	  }    else    if(o    instanceof    JsonObject    ||    o    instanceof    Class    <?>)    {    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	243	2	replace
1234	[BUG]  [BUGGY]  }  else  if(o  instanceof  JsonObject  ||  o  instanceof  Class)  {  [FE]  ArrayIndexOutOfBoundsException  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]      if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }      [BUGGY]  }  else  if(o  instanceof  JsonObject  ||  o  instanceof  Class)  {  [BUGGY]      return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	replace	}  else  if(o  instanceof  JsonObject  ||  o  instanceof  Class)  {	  }    else    if(o    instanceof    JsonObject    ||    o    instanceof    Class    <?>)    {    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	243	2	replace
1235	[BUG]  [BUGGY]  }  else  if(o  instanceof  JsonOBJECT  ||  o  instanceof  JsonPrimitive)  {  [CE]  cannot  find  symbol  [FE]    AssertionError    [CONTEXT]      if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }      [BUGGY]  }  else  if(o  instanceof  JsonOBJECT  ||  o  instanceof  JsonPrimitive)  {  [BUGGY]      return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	replace	}  else  if(o  instanceof  JsonOBJECT  ||  o  instanceof  JsonPrimitive)  {	  }    else    if(o    instanceof    JsonArray    ||    o    instanceof    JsonPrimitive)    {    	non-compiled	[CE]  cannot  find  symbol	111	None	replace
1236	[BUG]  [BUGGY]  }  else  if(o  instanceof  JsonNumber  ||  o  instanceof  String  ||  o  instanceof  JsonObject)  {  [CE]  cannot  find  symbol  [FE]                    ArrayIndexOutOfBoundsException      [CONTEXT]      if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }      [BUGGY]  }  else  if(o  instanceof  JsonNumber  ||  o  instanceof  String  ||  o  instanceof  JsonObject)  {  [BUGGY]      return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	replace	}  else  if(o  instanceof  JsonNumber  ||  o  instanceof  String  ||  o  instanceof  JsonObject)  {	  }    else    if(o    instanceof    JsonNumber    ||    o    instanceof    String)    {    	non-compiled	[CE]  cannot  find  symbol	227	None	replace
1237	[BUG]  [BUGGY]  }  else  if(o  instanceof  JsonNumber  ||!(o  instanceof  String))  {  [CE]  cannot  find  symbol  [FE]                      ArrayIndexOutOfBoundsException      [CONTEXT]      if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }      [BUGGY]  }  else  if(o  instanceof  JsonNumber  ||!(o  instanceof  String))  {  [BUGGY]      return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	replace	}  else  if(o  instanceof  JsonNumber  ||!(o  instanceof  String))  {	  }    else    if(o    instanceof    JsonNumber    ||    o    instanceof    String)    {    	non-compiled	[CE]  cannot  find  symbol	227	None	replace
1238	[BUG]  [BUGGY]  parent  ==  null)  {  if(isObject)  {  return  JsonToken.FIELD_NAME;  }  [CE]  not  a  statement  [FE]                                  ArrayIndexOutOfBoundsException      [CONTEXT]      if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }      [BUGGY]  parent  ==  null)  {  if(isObject)  {  return  JsonToken.FIELD_NAME;  }  [BUGGY]      return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	replace	parent  ==  null)  {  if(isObject)  {  return  JsonToken.FIELD_NAME;  }	  if(o    ==    null)    {    if(isObject)    {    return    JsonToken.FIELD_NAME;    }    	non-compiled	[CE]  not  a  statement	190	None	replace
1239	[BUG]  [BUGGY]  parent!=  null  &&  isObject)  {  return  JsonToken.FIELD_NAME;  }  [CE]  not  a  statement  [FE]                                    ArrayIndexOutOfBoundsException      [CONTEXT]      if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }      [BUGGY]  parent!=  null  &&  isObject)  {  return  JsonToken.FIELD_NAME;  }  [BUGGY]      return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	replace	parent!=  null  &&  isObject)  {  return  JsonToken.FIELD_NAME;  }	  if(o    ==    null)    {    if(isObject)    {    return    JsonToken.FIELD_NAME;    }    	non-compiled	[CE]  not  a  statement	190	None	replace
1240	[BUG]  [BUGGY]  try  {  [Delete]  catch(NoClassDefFoundError  ctxt)  {  if(isObject)  {  return  JsonToken.FIELD_NAME;  }  [CE]  illegal  start  of  expression  [FE]                                      ArrayIndexOutOfBoundsException      [CONTEXT]      if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }      [BUGGY]  try  {  [Delete]  catch(NoClassDefFoundError  ctxt)  {  if(isObject)  {  return  JsonToken.FIELD_NAME;  }  [BUGGY]      return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	replace	try  {  [Delete]  catch(NoClassDefFoundError  ctxt)  {  if(isObject)  {  return  JsonToken.FIELD_NAME;  }	  if(o    ==    null)    {    if(isObject)    {    return    JsonToken.FIELD_NAME;    }    	non-compiled	[CE]  illegal  start  of  expression	190	None	replace
1241	[BUG]  [BUGGY]  aughtExceptionHandler(this,  JsonToken.FIELD_NAME);  [CE]  cannot  find  symbol  FIELD_NAME  [FE]                                        ArrayIndexOutOfBoundsException      [CONTEXT]      if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }      [BUGGY]  aughtExceptionHandler(this,  JsonToken.FIELD_NAME);  [BUGGY]      return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	replace	aughtExceptionHandler(this,  JsonToken.FIELD_NAME);	  if(o    ==    null)    {    if(isObject)    {    return    JsonToken.FIELD_NAME;    }    	non-compiled	[CE]  cannot  find  symbol  FIELD_NAME	190	None	replace
1242	[BUG]  [BUGGY]  }  else  if(o  instanceof  JsonObject)  {  return  JsonToken.BEGIN_ARRAY;  }  [CE]  illegal  start  of  type  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]      if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }      [BUGGY]  }  else  if(o  instanceof  JsonObject)  {  return  JsonToken.BEGIN_ARRAY;  }  [BUGGY]      return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	replace	}  else  if(o  instanceof  JsonObject)  {  return  JsonToken.BEGIN_ARRAY;  }	  }    else    if(o    instanceof    JsonArray)    {    return    JsonToken.BEGIN_ARRAY;    	non-compiled	[CE]  illegal  start  of  type	175	None	replace
1243	[BUG]  [BUGGY]  }  else  if(o  instanceof  JsonLong)  {  return  JsonToken.BEGIN_ARRAY;  }  [CE]  illegal  start  of  type  [FE]      ArrayIndexOutOfBoundsException    [CONTEXT]      if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }      [BUGGY]  }  else  if(o  instanceof  JsonLong)  {  return  JsonToken.BEGIN_ARRAY;  }  [BUGGY]      return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	replace	}  else  if(o  instanceof  JsonLong)  {  return  JsonToken.BEGIN_ARRAY;  }	  }    else    if(o    instanceof    JsonArray)    {    return    JsonToken.BEGIN_ARRAY;    	non-compiled	[CE]  illegal  start  of  type	175	None	replace
1244	[BUG]  [BUGGY]  }  else  if(isObject)  {  return  JsonToken.BEGIN_ARRAY;  }  [CE]  illegal  start  of  type  [FE]        ArrayIndexOutOfBoundsException    [CONTEXT]      if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }      [BUGGY]  }  else  if(isObject)  {  return  JsonToken.BEGIN_ARRAY;  }  [BUGGY]      return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	replace	}  else  if(isObject)  {  return  JsonToken.BEGIN_ARRAY;  }	  }    else    if(o    instanceof    JsonArray)    {    return    JsonToken.BEGIN_ARRAY;    	non-compiled	[CE]  illegal  start  of  type	175	None	replace
1245	[BUG]  [BUGGY]  }  else  if(o  instanceof  JsonArray  <?>  ||  isObject)  {  [CE]  type  JsonArray  does  not  take  parameters  [FE]                  ArrayIndexOutOfBoundsException      [CONTEXT]      if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }      [BUGGY]  }  else  if(o  instanceof  JsonArray  <?>  ||  isObject)  {  [BUGGY]      return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	replace	}  else  if(o  instanceof  JsonArray  <?>  ||  isObject)  {	  }    else    if(o    instanceof    JsonObject    <?>    ||    isObject)    {    	non-compiled	[CE]  type  JsonArray  does  not  take  parameters	178	None	replace
1246	[BUG]  [BUGGY]  }  else  if(o  instanceof  JsonObject  <?>  ||  isNumber)  {  [CE]  type  JsonObject  does  not  take  parameters  [FE]                    ArrayIndexOutOfBoundsException      [CONTEXT]      if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }      [BUGGY]  }  else  if(o  instanceof  JsonObject  <?>  ||  isNumber)  {  [BUGGY]      return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	replace	}  else  if(o  instanceof  JsonObject  <?>  ||  isNumber)  {	  }    else    if(o    instanceof    JsonObject    <?>    ||    isObject)    {    	non-compiled	[CE]  type  JsonObject  does  not  take  parameters	178	None	replace
1247	[BUG]  [BUGGY]  }  else  if(!(o  instanceof  String))  {  ArrayIndexOutOfBoundsException  e  =(ArrayIndexOutOfBoundsException)iterator.next();  [CE]  cannot  find  symbol  iterator  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]      if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }      [BUGGY]  }  else  if(!(o  instanceof  String))  {  ArrayIndexOutOfBoundsException  e  =(ArrayIndexOutOfBoundsException)iterator.next();  [BUGGY]      return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	replace	}    else    if(!(o    instanceof    String))    {    ArrayIndexOutOfBoundsException  e  =(ArrayIndexOutOfBoundsException)iterator.next();	  	non-compiled	[CE]  cannot  find  symbol  iterator	63	None	add
1248	[BUG]  [BUGGY]  }  else  if(!(o  instanceof  String))  {  ArrayIndexOutOfBoundsException  a  =(ArrayIndexOutOfBoundsException)iterator.next();  [CE]  cannot  find  symbol  iterator  [FE]      ArrayIndexOutOfBoundsException    [CONTEXT]      if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }      [BUGGY]  }  else  if(!(o  instanceof  String))  {  ArrayIndexOutOfBoundsException  a  =(ArrayIndexOutOfBoundsException)iterator.next();  [BUGGY]      return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	replace	}    else    if(!(o    instanceof    String))    {    ArrayIndexOutOfBoundsException  a  =(ArrayIndexOutOfBoundsException)iterator.next();	  	non-compiled	[CE]  cannot  find  symbol  iterator	63	None	add
1249	[BUG]  [BUGGY]  }  else  if(!(o  instanceof  String))  {  ArrayIndexOutOfBoundsException  e  =  new  ArrayIndexOutOfBoundsException(pathNames[0],  pathNames[1]);  [CE]  no  suitable  constructor  found  for  ArrayIndexOutOfBoundsException(String,String)  [FE]        ArrayIndexOutOfBoundsException    [CONTEXT]      if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }      [BUGGY]  }  else  if(!(o  instanceof  String))  {  ArrayIndexOutOfBoundsException  e  =  new  ArrayIndexOutOfBoundsException(pathNames[0],  pathNames[1]);  [BUGGY]      return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	replace	}    else    if(!(o    instanceof    String))    {    ArrayIndexOutOfBoundsException  e  =  new  ArrayIndexOutOfBoundsException(pathNames[0],  pathNames[1]);	  	non-compiled	[CE]  no  suitable  constructor  found  for  ArrayIndexOutOfBoundsException(String,String)	63	None	add
1250	[BUG]  [BUGGY]  }  else  if(!(o  instanceof  String))  {  ArrayIndexOutOfBoundsException  e  =  new  ArrayIndexOutOfBoundsException(iterator.next());  [CE]  cannot  find  symbol  iterator  [FE]          ArrayIndexOutOfBoundsException    [CONTEXT]      if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }      [BUGGY]  }  else  if(!(o  instanceof  String))  {  ArrayIndexOutOfBoundsException  e  =  new  ArrayIndexOutOfBoundsException(iterator.next());  [BUGGY]      return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	replace	}    else    if(!(o    instanceof    String))    {    ArrayIndexOutOfBoundsException  e  =  new  ArrayIndexOutOfBoundsException(iterator.next());	  	non-compiled	[CE]  cannot  find  symbol  iterator	63	None	add
1251	[BUG]  [BUGGY]  }  else  if(!(o  instanceof  String))  {  ArrayIndexOutOfBoundsException  e  =(ArrayIndexOutOfBoundsException)iterator.next();  return  JsonToken.STRING;  [CE]  cannot  find  symbol  iterator  [FE]            ArrayIndexOutOfBoundsException    [CONTEXT]      if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }      [BUGGY]  }  else  if(!(o  instanceof  String))  {  ArrayIndexOutOfBoundsException  e  =(ArrayIndexOutOfBoundsException)iterator.next();  return  JsonToken.STRING;  [BUGGY]      return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	replace	}    else    if(!(o    instanceof    String))    {    ArrayIndexOutOfBoundsException  e  =(ArrayIndexOutOfBoundsException)iterator.next();  return  JsonToken.STRING;	  	non-compiled	[CE]  cannot  find  symbol  iterator	63	None	add
1252	[BUG]  [BUGGY]  }  else  if(!(o  instanceof  String))  {  ArrayIndexOutOfBoundsException  e  =(ArrayIndexOutOfBoundsException)iterator.next();  return  JsonToken.NAME;  [CE]  cannot  find  symbol  iterator  [FE]              ArrayIndexOutOfBoundsException    [CONTEXT]      if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }      [BUGGY]  }  else  if(!(o  instanceof  String))  {  ArrayIndexOutOfBoundsException  e  =(ArrayIndexOutOfBoundsException)iterator.next();  return  JsonToken.NAME;  [BUGGY]      return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	replace	}    else    if(!(o    instanceof    String))    {    ArrayIndexOutOfBoundsException  e  =(ArrayIndexOutOfBoundsException)iterator.next();  return  JsonToken.NAME;	  	non-compiled	[CE]  cannot  find  symbol  iterator	63	None	add
1253	[BUG]  [BUGGY]  }  else  if(o  instanceof  JsonArray  ||  o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_OBJECT;  [CE]  unreachable  statement  [FE]              AssertionError      [CONTEXT]      if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }      [BUGGY]  }  else  if(o  instanceof  JsonArray  ||  o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_OBJECT;  [BUGGY]      return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	replace	}  else  if(o  instanceof  JsonArray  ||  o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_OBJECT;	  }    else    if(o    instanceof    JsonArray)    {    }    else    if(o    instanceof    JsonArray)    {    return    JsonToken.BEGIN_OBJECT;    	non-compiled	[CE]  unreachable  statement	205	None	replace
1254	[BUG]  [BUGGY]  }  else  if(o  instanceof  JsonArray)  {  }  else  if(!(o  instanceof  JsonArray))  {  return  JsonToken.BEGIN_OBJECT;  }  [CE]  illegal  start  of  type  [FE]          ArrayIndexOutOfBoundsException      [CONTEXT]      if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }      [BUGGY]  }  else  if(o  instanceof  JsonArray)  {  }  else  if(!(o  instanceof  JsonArray))  {  return  JsonToken.BEGIN_OBJECT;  }  [BUGGY]      return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	replace	}  else  if(o  instanceof  JsonArray)  {  }  else  if(!(o  instanceof  JsonArray))  {  return  JsonToken.BEGIN_OBJECT;  }	  }    else    if(!(o    instanceof    JsonArray))    {    }    else    if(!(o    instanceof    JsonArray))    <    return    JsonToken.BEGIN_OBJECT;    	non-compiled	[CE]  illegal  start  of  type	84	None	replace
1255	[BUG]  [BUGGY]  }  else  if(o  instanceof  JsonPrimitive)  {  }  else  if(!(o  instanceof  JsonPrimitive))  {  return  JsonToken  BEGIN_OBJECT;  }  [CE]  [FE]            ArrayIndexOutOfBoundsException      [CONTEXT]      if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }      [BUGGY]  }  else  if(o  instanceof  JsonPrimitive)  {  }  else  if(!(o  instanceof  JsonPrimitive))  {  return  JsonToken  BEGIN_OBJECT;  }  [BUGGY]      return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	replace	}  else  if(o  instanceof  JsonPrimitive)  {  }  else  if(!(o  instanceof  JsonPrimitive))  {  return  JsonToken  BEGIN_OBJECT;  }	  }    else    if(!(o    instanceof    JsonArray))    {    }    else    if(!(o    instanceof    JsonArray))    <    return    JsonToken.BEGIN_OBJECT;    	non-compiled	[CE]  	84	None	replace
1256	[BUG]  [BUGGY]  }  else  if(o  instanceof  JsonPrimitive)  {  }  else  if(!(o  instanceof  JsonPrimitive))  {  return  JsonPrimitive.BEGIN_OBJECT;  }  [CE]  illegal  start  of  type  [FE]              ArrayIndexOutOfBoundsException      [CONTEXT]      if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }      [BUGGY]  }  else  if(o  instanceof  JsonPrimitive)  {  }  else  if(!(o  instanceof  JsonPrimitive))  {  return  JsonPrimitive.BEGIN_OBJECT;  }  [BUGGY]      return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	replace	}  else  if(o  instanceof  JsonPrimitive)  {  }  else  if(!(o  instanceof  JsonPrimitive))  {  return  JsonPrimitive.BEGIN_OBJECT;  }	  }    else    if(!(o    instanceof    JsonArray))    {    }    else    if(!(o    instanceof    JsonArray))    <    return    JsonToken.BEGIN_OBJECT;    	non-compiled	[CE]  illegal  start  of  type	84	None	replace
1257	[BUG]  [BUGGY]  }  else  if(o  instanceof  JsonArray  ||  o  instanceof  JsonEnum)  {  [CE]  cannot  find  symbol  [FE]              ArrayIndexOutOfBoundsException      [CONTEXT]      if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }      [BUGGY]  }  else  if(o  instanceof  JsonArray  ||  o  instanceof  JsonEnum)  {  [BUGGY]      return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	replace	}  else  if(o  instanceof  JsonArray  ||  o  instanceof  JsonEnum)  {	  }    else    if(o    instanceof    JsonObject    ||    o    instanceof    JsonEnum)    {    	non-compiled	[CE]  cannot  find  symbol	46	None	replace
1258	[BUG]  [BUGGY]  }  else  if(o  instanceof  JsonPrimitive)  {  case  JsonToken.BEGIN_OBJECT:  return  JsonToken.BEGIN_ARRAY;  [CE]  orphaned  case  [FE]            ArrayIndexOutOfBoundsException      [CONTEXT]      if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }      [BUGGY]  }  else  if(o  instanceof  JsonPrimitive)  {  case  JsonToken.BEGIN_OBJECT:  return  JsonToken.BEGIN_ARRAY;  [BUGGY]      return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	replace	}  else  if(o  instanceof  JsonPrimitive)  {  case  JsonToken.BEGIN_OBJECT:  return  JsonToken.BEGIN_ARRAY;	  }    else    if(!(o    instanceof    JsonArray))    {    }    else    if(!(o    instanceof    JsonArray))    {    case    JsonToken.BEGIN_OBJECT:    return    JsonToken.BEGIN_ARRAY;    	non-compiled	[CE]  orphaned  case	217	None	replace
1259	[BUG]  [BUGGY]  }  else  if(isObject  instanceof  JsonObject  <?>)  {  [CE]  cannot  find  symbol  isObject  [FE]                  ArrayIndexOutOfBoundsException      [CONTEXT]      if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }      [BUGGY]  }  else  if(isObject  instanceof  JsonObject  <?>)  {  [BUGGY]      return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	replace	}  else  if(isObject  instanceof  JsonObject  <?>)  {	  }    else    if(o    instanceof    JsonObject    <?>    &&    isObject)    {    	non-compiled	[CE]  cannot  find  symbol  isObject	78	None	replace
1260	[BUG]  [BUGGY]  }  else  if(o  instanceof  JsonObject  ==  false)  {  if(o  instanceof  JsonObject  ==  false)  {  return  JsonToken.BEGIN_OBJECT;  }  else  if(o  instanceof  JsonObject  ==  false)  {  [CE]  illegal  start  of  expression  [FE]    AssertionError    [CONTEXT]      if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }      [BUGGY]  }  else  if(o  instanceof  JsonObject  ==  false)  {  if(o  instanceof  JsonObject  ==  false)  {  return  JsonToken.BEGIN_OBJECT;  }  else  if(o  instanceof  JsonObject  ==  false)  {  [BUGGY]      return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	replace	}    else    if(o    instanceof    JsonObject    ==    false)    {    if(o  instanceof  JsonObject  ==  false)  {  return  JsonToken.BEGIN_OBJECT;  }  else  if(o  instanceof  JsonObject  ==  false)  {	  	non-compiled	[CE]  illegal  start  of  expression	81	None	add
1261	[BUG]  [BUGGY]  }  else  if(o  instanceof  JsonObject  ==  false)  {  ((  JsonObject  ==  false)&&  o.getClass()!=  getClass()))  {  return  JsonToken.BEGIN_OBJECT;  }  else  if(o  instanceof  JsonObject  ==  false)  {  [CE]  not  a  statement  [FE]      AssertionError    [CONTEXT]      if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }      [BUGGY]  }  else  if(o  instanceof  JsonObject  ==  false)  {  ((  JsonObject  ==  false)&&  o.getClass()!=  getClass()))  {  return  JsonToken.BEGIN_OBJECT;  }  else  if(o  instanceof  JsonObject  ==  false)  {  [BUGGY]      return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	replace	}    else    if(o    instanceof    JsonObject    ==    false)    {    ((  JsonObject  ==  false)&&  o.getClass()!=  getClass()))  {  return  JsonToken.BEGIN_OBJECT;  }  else  if(o  instanceof  JsonObject  ==  false)  {	  	non-compiled	[CE]  not  a  statement	81	None	add
1262	[BUG]  [BUGGY]  }  else  if(o  instanceof  JsonObject  ==  false)  {  if(o  instanceof  JsonObject  ==  false)  {  return  JsonToken.BEGIN_OBJECT;  }  else  if(o  instanceof  JsonObject  ==  false)  {  return  JsonToken.BEGIN_OBJECT;  }  else  if(o  instanceof  JsonObject  ==  false)  {  [CE]  illegal  start  of  expression  [FE]        AssertionError    [CONTEXT]      if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }      [BUGGY]  }  else  if(o  instanceof  JsonObject  ==  false)  {  if(o  instanceof  JsonObject  ==  false)  {  return  JsonToken.BEGIN_OBJECT;  }  else  if(o  instanceof  JsonObject  ==  false)  {  return  JsonToken.BEGIN_OBJECT;  }  else  if(o  instanceof  JsonObject  ==  false)  {  [BUGGY]      return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	replace	}    else    if(o    instanceof    JsonObject    ==    false)    {    if(o  instanceof  JsonObject  ==  false)  {  return  JsonToken.BEGIN_OBJECT;  }  else  if(o  instanceof  JsonObject  ==  false)  {  return  JsonToken.BEGIN_OBJECT;  }  else  if(o  instanceof  JsonObject  ==  false)  {	  	non-compiled	[CE]  illegal  start  of  expression	81	None	add
1263	[BUG]  [BUGGY]  }  else  if(o  instanceof  JsonObject  ==  false)  {  if(o  instanceof  JsonObject  ==  false)  {  return  JsonToken.BEGIN_OBJECT;  }  else  if(o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_OBJECT;  }  else  if(o  instanceof  JsonObject  ==  false)  {  return  J  [CE]  ';'  expected  [FE]          AssertionError    [CONTEXT]      if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }      [BUGGY]  }  else  if(o  instanceof  JsonObject  ==  false)  {  if(o  instanceof  JsonObject  ==  false)  {  return  JsonToken.BEGIN_OBJECT;  }  else  if(o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_OBJECT;  }  else  if(o  instanceof  JsonObject  ==  false)  {  return  J  [BUGGY]      return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	replace	}    else    if(o    instanceof    JsonObject    ==    false)    {    if(o  instanceof  JsonObject  ==  false)  {  return  JsonToken.BEGIN_OBJECT;  }  else  if(o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_OBJECT;  }  else  if(o  instanceof  JsonObject  ==  false)  {  return  J	  	non-compiled	[CE]  ';'  expected	81	None	add
1264	[BUG]  [BUGGY]  }  else  if(o  instanceof  JsonObject  ==  false)  {  if(o  instanceof  JsonObject  ==  false)  {  return  JsonToken.BEGIN_OBJECT;  }  else  if(o  instanceof  JsonObject  ==  false)  {  return  JsonToken.BEGIN_OBJECT;  }  else  if(o  instanceof  JsonObject  {  false)  {  return  J  [CE]  ')'  expected  [FE]            AssertionError    [CONTEXT]      if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }      [BUGGY]  }  else  if(o  instanceof  JsonObject  ==  false)  {  if(o  instanceof  JsonObject  ==  false)  {  return  JsonToken.BEGIN_OBJECT;  }  else  if(o  instanceof  JsonObject  ==  false)  {  return  JsonToken.BEGIN_OBJECT;  }  else  if(o  instanceof  JsonObject  {  false)  {  return  J  [BUGGY]      return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	replace	}    else    if(o    instanceof    JsonObject    ==    false)    {    if(o  instanceof  JsonObject  ==  false)  {  return  JsonToken.BEGIN_OBJECT;  }  else  if(o  instanceof  JsonObject  ==  false)  {  return  JsonToken.BEGIN_OBJECT;  }  else  if(o  instanceof  JsonObject  {  false)  {  return  J	  	non-compiled	[CE]  ')'  expected	81	None	add
1265	[BUG]  [BUGGY]  }  else  if(o  instanceof  JsonObject  ==  false)  {  if(o  instanceof  JsonObject  ==  false)  {  return  JsonToken.BEGIN_OBJECT;  }  else  if(o  instanceof  JsonObject  ==  false)  {  return  JsonToken.BEGIN_OBJECT;  }  else  if(o  instanceof  JsonObject  ==  false)  {  return  J  [CE]  ';'  expected  [FE]              AssertionError    [CONTEXT]      if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }      [BUGGY]  }  else  if(o  instanceof  JsonObject  ==  false)  {  if(o  instanceof  JsonObject  ==  false)  {  return  JsonToken.BEGIN_OBJECT;  }  else  if(o  instanceof  JsonObject  ==  false)  {  return  JsonToken.BEGIN_OBJECT;  }  else  if(o  instanceof  JsonObject  ==  false)  {  return  J  [BUGGY]      return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	replace	}    else    if(o    instanceof    JsonObject    ==    false)    {    if(o  instanceof  JsonObject  ==  false)  {  return  JsonToken.BEGIN_OBJECT;  }  else  if(o  instanceof  JsonObject  ==  false)  {  return  JsonToken.BEGIN_OBJECT;  }  else  if(o  instanceof  JsonObject  ==  false)  {  return  J	  	non-compiled	[CE]  ';'  expected	81	None	add
1266	[BUG]  [BUGGY]  }  else  if(!(o  instanceof  JsonObject))  {  ((  JsonObject)o).setObject(isObject?  JsonToken.BEGIN_OBJECT  :  JsonToken.BEGIN_ARRAY);  [CE]  cannot  find  symbol  isObject  [FE]                  AssertionError      [CONTEXT]      if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }      [BUGGY]  }  else  if(!(o  instanceof  JsonObject))  {  ((  JsonObject)o).setObject(isObject?  JsonToken.BEGIN_OBJECT  :  JsonToken.BEGIN_ARRAY);  [BUGGY]      return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	replace	}  else  if(!(o  instanceof  JsonObject))  {  ((  JsonObject)o).setObject(isObject?  JsonToken.BEGIN_OBJECT  :  JsonToken.BEGIN_ARRAY);	  }    else    if(!(o    instanceof    JsonObject))    {    ((    JsonObject)o).setObject(isObject?    JsonToken.BEGIN_OBJECT    :    JsonToken.BEGIN_OBJECT);    	non-compiled	[CE]  cannot  find  symbol  isObject	161	None	replace
1267	[BUG]  [BUGGY]  parent  ==  null)  {  if(isObject)  {  return  JsonToken.END_OBJECT;  }  [CE]  not  a  statement  [FE]                                    ArrayIndexOutOfBoundsException      [CONTEXT]      if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }      [BUGGY]  parent  ==  null)  {  if(isObject)  {  return  JsonToken.END_OBJECT;  }  [BUGGY]      return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	replace	parent  ==  null)  {  if(isObject)  {  return  JsonToken.END_OBJECT;  }	  if(o    ==    null)    {    if(isObject)    {    return    JsonToken.END_OBJECT;    }    	non-compiled	[CE]  not  a  statement	191	None	replace
1268	[BUG]  [BUGGY]  aughtExceptionHandler(this,  JsonToken.END_OBJECT);  [CE]  cannot  find  symbol  [FE]                                      ArrayIndexOutOfBoundsException      [CONTEXT]      if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }      [BUGGY]  aughtExceptionHandler(this,  JsonToken.END_OBJECT);  [BUGGY]      return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	replace	aughtExceptionHandler(this,  JsonToken.END_OBJECT);	  if(o    ==    null)    {    if(isObject)    {    return    JsonToken.END_OBJECT;    }    	non-compiled	[CE]  cannot  find  symbol	191	None	replace
1269	[BUG]  [BUGGY]  aughtExceptionHandler(jsonToken.next(),  JsonToken.END_OBJECT);  [CE]  cannot  find  symbol  jsonToken  [FE]                                        ArrayIndexOutOfBoundsException      [CONTEXT]      if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }      [BUGGY]  aughtExceptionHandler(jsonToken.next(),  JsonToken.END_OBJECT);  [BUGGY]      return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	replace	aughtExceptionHandler(jsonToken.next(),  JsonToken.END_OBJECT);	  if(o    ==    null)    {    if(isObject)    {    return    JsonToken.END_OBJECT;    }    	non-compiled	[CE]  cannot  find  symbol  jsonToken	191	None	replace
1270	[BUG]  [BUGGY]  }  else  if(o  instanceof  JsonOBJECT)  {  [CE]  cannot  find  symbol  [FE]        AssertionError      [CONTEXT]      if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }      [BUGGY]  }  else  if(o  instanceof  JsonOBJECT)  {  [BUGGY]      return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	replace	}  else  if(o  instanceof  JsonOBJECT)  {	  }    else    if(o    instanceof    JsonArray)    {    }    else    if(o    instanceof    JsonArray)    {    	non-compiled	[CE]  cannot  find  symbol	98	None	replace
1271	[BUG]  [BUGGY]  }  else  if(!o  instanceof  JsonArray)  {  ArrayIndexOutOfBoundsException  e  =(ArrayIndexOutOfBoundsException)iterator.next();  [CE]  bad  operand  type  Object  for  unary  operator  '!'  [FE]        ArrayIndexOutOfBoundsException      [CONTEXT]      if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }      [BUGGY]  }  else  if(!o  instanceof  JsonArray)  {  ArrayIndexOutOfBoundsException  e  =(ArrayIndexOutOfBoundsException)iterator.next();  [BUGGY]      return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	replace	}  else  if(!o  instanceof  JsonArray)  {  ArrayIndexOutOfBoundsException  e  =(ArrayIndexOutOfBoundsException)iterator.next();	  }    else    if(!(o    instanceof    JsonArray))    {    ArrayIndexOutOfBoundsException    e    =(ArrayIndexOutOfBoundsException)iterator.next();    	non-compiled	[CE]  bad  operand  type  Object  for  unary  operator  '!'	131	None	replace
1272	[BUG]  [BUGGY]  }  else  if(!(o  instanceof  JsonArray))  {  ArrayIndexOutOfBoundsException  e  =(ArrayIndexOutOfBoundsException)parent.next();  [CE]  cannot  find  symbol  parent  [FE]          ArrayIndexOutOfBoundsException      [CONTEXT]      if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }      [BUGGY]  }  else  if(!(o  instanceof  JsonArray))  {  ArrayIndexOutOfBoundsException  e  =(ArrayIndexOutOfBoundsException)parent.next();  [BUGGY]      return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	replace	}  else  if(!(o  instanceof  JsonArray))  {  ArrayIndexOutOfBoundsException  e  =(ArrayIndexOutOfBoundsException)parent.next();	  }    else    if(!(o    instanceof    JsonArray))    {    ArrayIndexOutOfBoundsException    e    =(ArrayIndexOutOfBoundsException)iterator.next();    	non-compiled	[CE]  cannot  find  symbol  parent	131	None	replace
1273	[BUG]  [BUGGY]  }  else  if(!(o  instanceof  JsonArray))  {  ArrayIndexOutOfBoundsException  e  =(ArrayIndexOutOfBoundsException)keyList.next();  [CE]  cannot  find  symbol  keyList  [FE]            ArrayIndexOutOfBoundsException      [CONTEXT]      if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }      [BUGGY]  }  else  if(!(o  instanceof  JsonArray))  {  ArrayIndexOutOfBoundsException  e  =(ArrayIndexOutOfBoundsException)keyList.next();  [BUGGY]      return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	replace	}  else  if(!(o  instanceof  JsonArray))  {  ArrayIndexOutOfBoundsException  e  =(ArrayIndexOutOfBoundsException)keyList.next();	  }    else    if(!(o    instanceof    JsonArray))    {    ArrayIndexOutOfBoundsException    e    =(ArrayIndexOutOfBoundsException)iterator.next();    	non-compiled	[CE]  cannot  find  symbol  keyList	131	None	replace
1274	[BUG]  [BUGGY]  }  else  if(!isObject)  {  ArrayIndexOutOfBoundsException  e  =(ArrayIndexOutOfBoundsException)iterator.next();  [CE]  cannot  find  symbol  isObject  [FE]              ArrayIndexOutOfBoundsException      [CONTEXT]      if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }      [BUGGY]  }  else  if(!isObject)  {  ArrayIndexOutOfBoundsException  e  =(ArrayIndexOutOfBoundsException)iterator.next();  [BUGGY]      return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	replace	}  else  if(!isObject)  {  ArrayIndexOutOfBoundsException  e  =(ArrayIndexOutOfBoundsException)iterator.next();	  }    else    if(!(o    instanceof    JsonArray))    {    ArrayIndexOutOfBoundsException    e    =(ArrayIndexOutOfBoundsException)iterator.next();    	non-compiled	[CE]  cannot  find  symbol  isObject	131	None	replace
1275	[BUG]  [BUGGY]  }  else  if(primitive.isNumber())  {  [CE]  cannot  find  symbol  primitive  [FE]        ArrayIndexOutOfBoundsException      [CONTEXT]      if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }      [BUGGY]  }  else  if(primitive.isNumber())  {  [BUGGY]      return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	replace	}  else  if(primitive.isNumber())  {	  }    else    if(!(o    instanceof    JsonArray))    {    }    else    if(!(o    instanceof    JsonArray))    {    return    JsonToken.BEGIN_OBJECT;    }    else    if(!(o    instanceof    JsonArray))    {    	non-compiled	[CE]  cannot  find  symbol  primitive	215	None	replace
1276	[BUG]  [BUGGY]  }  else  if(!isObject)  {  [CE]  cannot  find  symbol  isObject  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]      if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }      [BUGGY]  }  else  if(!isObject)  {  [BUGGY]      return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	replace	}  else  if(!isObject)  {	  }    else    if(!(o    instanceof    JsonPrimitive))    {    	non-compiled	[CE]  cannot  find  symbol  isObject	11	None	replace
1277	[BUG]  [BUGGY]  }  else  if(o  instanceof  String)  {  Node  o  =(Node)iterator.next();  [CE]  cannot  find  symbol  [FE]    AssertionError    [CONTEXT]      if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }      [BUGGY]  }  else  if(o  instanceof  String)  {  Node  o  =(Node)iterator.next();  [BUGGY]      return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	replace	}    else    if(o    instanceof    String)    {    Node  o  =(Node)iterator.next();	  	non-compiled	[CE]  cannot  find  symbol	13	None	add
1278	[BUG]  [BUGGY]  }  else  if(o  instanceof  String)  {  String  o  =(String)iterator.next();  return  JsonToken.BEGIN_OBJECT;  [CE]  variable  o  is  already  defined  in  method  peek()  [FE]      AssertionError    [CONTEXT]      if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }      [BUGGY]  }  else  if(o  instanceof  String)  {  String  o  =(String)iterator.next();  return  JsonToken.BEGIN_OBJECT;  [BUGGY]      return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	replace	}    else    if(o    instanceof    String)    {    String  o  =(String)iterator.next();  return  JsonToken.BEGIN_OBJECT;	  	non-compiled	[CE]  variable  o  is  already  defined  in  method  peek()	13	None	add
1279	[BUG]  [BUGGY]  }  else  if(o  instanceof  String)  {  Node  o  =(Node)iterator.next();  return  JsonToken.BEGIN_OBJECT;  [CE]  cannot  find  symbol  [FE]        AssertionError    [CONTEXT]      if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }      [BUGGY]  }  else  if(o  instanceof  String)  {  Node  o  =(Node)iterator.next();  return  JsonToken.BEGIN_OBJECT;  [BUGGY]      return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	replace	}    else    if(o    instanceof    String)    {    Node  o  =(Node)iterator.next();  return  JsonToken.BEGIN_OBJECT;	  	non-compiled	[CE]  cannot  find  symbol	13	None	add
1280	[BUG]  [BUGGY]  }  else  if(o  instanceof  String)  {  String  o  =(String)iterator.next();  [CE]  variable  o  is  already  defined  in  method  peek()  [FE]          AssertionError    [CONTEXT]      if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }      [BUGGY]  }  else  if(o  instanceof  String)  {  String  o  =(String)iterator.next();  [BUGGY]      return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	replace	}    else    if(o    instanceof    String)    {    String  o  =(String)iterator.next();	  	non-compiled	[CE]  variable  o  is  already  defined  in  method  peek()	13	None	add
1281	[BUG]  [BUGGY]  }  else  if(o  instanceof  JsonArray  ||  o  instanceof  JsonPrimitive)  {  if(o  instanceof  JsonArray  ||  o  instanceof  JsonPrimitive)  {  return  JsonToken.BEGIN_OBJECT;  }  else  if(o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_OBJECT;  }  else  if(o  instanceof  J  [CE]  ')'  expected  [FE]    AssertionError    [CONTEXT]      if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }      [BUGGY]  }  else  if(o  instanceof  JsonArray  ||  o  instanceof  JsonPrimitive)  {  if(o  instanceof  JsonArray  ||  o  instanceof  JsonPrimitive)  {  return  JsonToken.BEGIN_OBJECT;  }  else  if(o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_OBJECT;  }  else  if(o  instanceof  J  [BUGGY]      return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	replace	}    else    if(o    instanceof    JsonArray    ||    o    instanceof    JsonPrimitive)    {    if(o  instanceof  JsonArray  ||  o  instanceof  JsonPrimitive)  {  return  JsonToken.BEGIN_OBJECT;  }  else  if(o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_OBJECT;  }  else  if(o  instanceof  J	  	non-compiled	[CE]  ')'  expected	110	None	add
1282	[BUG]  [BUGGY]  }  else  if(o  instanceof  JsonArray  ||  o  instanceof  JsonPrimitive)  {  if(o  instanceof  JsonArray  ||  o  instanceof  JsonPrimitive)  {  return  JsonToken.BEGIN_OBJECT;  }  else  if(o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_OBJECT;  }  [CE]  missing  return  statement  [FE]      AssertionError    [CONTEXT]      if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }      [BUGGY]  }  else  if(o  instanceof  JsonArray  ||  o  instanceof  JsonPrimitive)  {  if(o  instanceof  JsonArray  ||  o  instanceof  JsonPrimitive)  {  return  JsonToken.BEGIN_OBJECT;  }  else  if(o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_OBJECT;  }  [BUGGY]      return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	replace	}    else    if(o    instanceof    JsonArray    ||    o    instanceof    JsonPrimitive)    {    if(o  instanceof  JsonArray  ||  o  instanceof  JsonPrimitive)  {  return  JsonToken.BEGIN_OBJECT;  }  else  if(o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_OBJECT;  }	  	non-compiled	[CE]  missing  return  statement	110	None	add
1283	[BUG]  [BUGGY]  }  else  if(o  instanceof  JsonArray  ||  o  instanceof  JsonPrimitive)  {  if(o  instanceof  JsonArray  ||  o  instanceof  JsonPrimitive)  {  return  JsonToken.BEGIN_OBJECT;  }  else  if(o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if(o  instanceof  J  [CE]  ')'  expected  [FE]        AssertionError    [CONTEXT]      if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }      [BUGGY]  }  else  if(o  instanceof  JsonArray  ||  o  instanceof  JsonPrimitive)  {  if(o  instanceof  JsonArray  ||  o  instanceof  JsonPrimitive)  {  return  JsonToken.BEGIN_OBJECT;  }  else  if(o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if(o  instanceof  J  [BUGGY]      return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	replace	}    else    if(o    instanceof    JsonArray    ||    o    instanceof    JsonPrimitive)    {    if(o  instanceof  JsonArray  ||  o  instanceof  JsonPrimitive)  {  return  JsonToken.BEGIN_OBJECT;  }  else  if(o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if(o  instanceof  J	  	non-compiled	[CE]  ')'  expected	110	None	add
1284	[BUG]  [BUGGY]  }  else  if(o  instanceof  JsonArray  ||  o  instanceof  JsonPrimitive)  {  if(o  instanceof  JsonArray  ||  o  instanceof  JsonPrimitive)  {  return  JsonToken.BEGIN_OBJECT;  }  else  if(o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  [CE]  missing  return  statement  [FE]          AssertionError    [CONTEXT]      if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }      [BUGGY]  }  else  if(o  instanceof  JsonArray  ||  o  instanceof  JsonPrimitive)  {  if(o  instanceof  JsonArray  ||  o  instanceof  JsonPrimitive)  {  return  JsonToken.BEGIN_OBJECT;  }  else  if(o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  [BUGGY]      return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	replace	}    else    if(o    instanceof    JsonArray    ||    o    instanceof    JsonPrimitive)    {    if(o  instanceof  JsonArray  ||  o  instanceof  JsonPrimitive)  {  return  JsonToken.BEGIN_OBJECT;  }  else  if(o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }	  	non-compiled	[CE]  missing  return  statement	110	None	add
1285	[BUG]  [BUGGY]  [FE]  ArrayIndexOutOfBoundsException  [FE]          AssertionError      [CONTEXT]      if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }      [BUGGY]  }  else  if(o  instanceof  JsonArray  ==  false)  {  [BUGGY]      return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	add	}  else  if(o  instanceof  JsonArray  ==  false)  {	  }    else    if(o    instanceof    JsonArray    <    Object>)    {    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	199	2	replace
1286	[BUG]  [BUGGY]  }  else  if(o  instanceof  JsonArray  ==  false)  {  [FE]  ArrayIndexOutOfBoundsException  [FE]          AssertionError      [CONTEXT]      if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }      [BUGGY]  }  else  if(o  instanceof  JsonArray  ==  false)  {  [BUGGY]      return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	replace	}  else  if(o  instanceof  JsonArray  ==  false)  {	  }    else    if(o    instanceof    JsonArray    <    Object>)    {    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	199	2	replace
1287	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]      if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }      [BUGGY]  }  else  if(o  instanceof  JsonObject  &&  o  instanceof  JsonArray  &&  o  instanceof  JsonPrimitive)  {  [BUGGY]      return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	add	}  else  if(o  instanceof  JsonObject  &&  o  instanceof  JsonArray  &&  o  instanceof  JsonPrimitive)  {	  }    else    if(o    instanceof    JsonObject    ||    o    instanceof    JsonArray    ||    o    instanceof    JsonPrimitive)    {    	compilable	  [FE]  AssertionError  	144	2	replace
1288	[BUG]  [BUGGY]  }  else  if(o  instanceof  JsonObject  &&  o  instanceof  JsonArray  &&  o  instanceof  JsonPrimitive)  {  [FE]  AssertionError  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]      if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }      [BUGGY]  }  else  if(o  instanceof  JsonObject  &&  o  instanceof  JsonArray  &&  o  instanceof  JsonPrimitive)  {  [BUGGY]      return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	replace	}  else  if(o  instanceof  JsonObject  &&  o  instanceof  JsonArray  &&  o  instanceof  JsonPrimitive)  {	  }    else    if(o    instanceof    JsonObject    ||    o    instanceof    JsonArray    ||    o    instanceof    JsonPrimitive)    {    	compilable	  [FE]  AssertionError  	144	2	replace
1289	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]      ArrayIndexOutOfBoundsException    [CONTEXT]      if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }      [BUGGY]  }  else  if(o  instanceof  JsonObject  &&  o  instanceof  JsonArray  ||  o  instanceof  JsonPrimitive)  {  [BUGGY]      return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	add	}  else  if(o  instanceof  JsonObject  &&  o  instanceof  JsonArray  ||  o  instanceof  JsonPrimitive)  {	  }    else    if(o    instanceof    JsonObject    ||    o    instanceof    JsonArray    ||    o    instanceof    JsonPrimitive)    {    	compilable	  [FE]  AssertionError  	144	2	replace
1290	[BUG]  [BUGGY]  }  else  if(o  instanceof  JsonObject  &&  o  instanceof  JsonArray  ||  o  instanceof  JsonPrimitive)  {  [FE]  AssertionError  [FE]      ArrayIndexOutOfBoundsException    [CONTEXT]      if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }      [BUGGY]  }  else  if(o  instanceof  JsonObject  &&  o  instanceof  JsonArray  ||  o  instanceof  JsonPrimitive)  {  [BUGGY]      return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	replace	}  else  if(o  instanceof  JsonObject  &&  o  instanceof  JsonArray  ||  o  instanceof  JsonPrimitive)  {	  }    else    if(o    instanceof    JsonObject    ||    o    instanceof    JsonArray    ||    o    instanceof    JsonPrimitive)    {    	compilable	  [FE]  AssertionError  	144	2	replace
1291	[BUG]  [BUGGY]  }  else  if(o  instanceof  JsonObject  &&  o  instanceof  JsonNumber  ||!(o  instanceof  JsonNull))  {  [CE]  cannot  find  symbol  [FE]                        ArrayIndexOutOfBoundsException      [CONTEXT]      if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }      [BUGGY]  }  else  if(o  instanceof  JsonObject  &&  o  instanceof  JsonNumber  ||!(o  instanceof  JsonNull))  {  [BUGGY]      return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	replace	}  else  if(o  instanceof  JsonObject  &&  o  instanceof  JsonNumber  ||!(o  instanceof  JsonNull))  {	  }    else    if(o    instanceof    JsonObject    ||    o    instanceof    JsonNumber    ||!(o    instanceof    JsonNull))    {    	non-compiled	[CE]  cannot  find  symbol	127	None	replace
1292	[BUG]  [BUGGY]  }  else  if(isObject  ||  o  instanceof  JsonObject  ||  o  instanceof  JsonNumber  ||!(o  instanceof  JsonNull))  {  [CE]  cannot  find  symbol  isObject  [FE]                          ArrayIndexOutOfBoundsException      [CONTEXT]      if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }      [BUGGY]  }  else  if(isObject  ||  o  instanceof  JsonObject  ||  o  instanceof  JsonNumber  ||!(o  instanceof  JsonNull))  {  [BUGGY]      return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	replace	}  else  if(isObject  ||  o  instanceof  JsonObject  ||  o  instanceof  JsonNumber  ||!(o  instanceof  JsonNull))  {	  }    else    if(o    instanceof    JsonObject    ||    o    instanceof    JsonNumber    ||!(o    instanceof    JsonNull))    {    	non-compiled	[CE]  cannot  find  symbol  isObject	127	None	replace
1293	[BUG]  [BUGGY]  }  else  if(!(o  instanceof  JsonOBJECT  ||  o  instanceof  JsonPrimitive))  {  [CE]  cannot  find  symbol  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]      if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }      [BUGGY]  }  else  if(!(o  instanceof  JsonOBJECT  ||  o  instanceof  JsonPrimitive))  {  [BUGGY]      return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	replace	}  else  if(!(o  instanceof  JsonOBJECT  ||  o  instanceof  JsonPrimitive))  {	  }    else    if(!(o    instanceof    JsonArray    ||    o    instanceof    JsonPrimitive))    {    	non-compiled	[CE]  cannot  find  symbol	146	None	replace
1294	[BUG]  [BUGGY]  }  else  if(!(o  instanceof  JsonObject  ||  o  instanceof  JsonNumber  ||  o  instanceof  JsonPrimitive))  {  [CE]  cannot  find  symbol  [FE]            AssertionError      [CONTEXT]      if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }      [BUGGY]  }  else  if(!(o  instanceof  JsonObject  ||  o  instanceof  JsonNumber  ||  o  instanceof  JsonPrimitive))  {  [BUGGY]      return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	replace	}  else  if(!(o  instanceof  JsonObject  ||  o  instanceof  JsonNumber  ||  o  instanceof  JsonPrimitive))  {	  }    else    if(!(o    instanceof    JsonObject    ||    o    instanceof    JsonNumber))    {    	non-compiled	[CE]  cannot  find  symbol	140	None	replace
1295	[BUG]  [BUGGY]  }  else  if(!(o  instanceof  JsonObject  ||  o  instanceof  JsonNumber)||  isObject)  {  [CE]  cannot  find  symbol  [FE]              AssertionError      [CONTEXT]      if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }      [BUGGY]  }  else  if(!(o  instanceof  JsonObject  ||  o  instanceof  JsonNumber)||  isObject)  {  [BUGGY]      return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	replace	}  else  if(!(o  instanceof  JsonObject  ||  o  instanceof  JsonNumber)||  isObject)  {	  }    else    if(!(o    instanceof    JsonObject    ||    o    instanceof    JsonNumber))    {    	non-compiled	[CE]  cannot  find  symbol	140	None	replace
1296	[BUG]  [BUGGY]  }  else  if(o  instanceof  JsonToken)  {  result(JsonToken.BEGIN_OBJECT,  o);  }  else  if(o  instanceof  JsonArray)  {  [CE]  cannot  find  symbol  [FE]    AssertionError    [CONTEXT]      if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }      [BUGGY]  }  else  if(o  instanceof  JsonToken)  {  result(JsonToken.BEGIN_OBJECT,  o);  }  else  if(o  instanceof  JsonArray)  {  [BUGGY]      return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	replace	}    else    if(o    instanceof    JsonToken)    {    result(JsonToken.BEGIN_OBJECT,  o);  }  else  if(o  instanceof  JsonArray)  {	  	non-compiled	[CE]  cannot  find  symbol	197	None	add
1297	[BUG]  [BUGGY]  }  else  if(o  instanceof  JsonToken)  {  Node  o  =(Node)iterator.next();  return  JsonToken.BEGIN_OBJECT;  [CE]  cannot  find  symbol  [FE]      AssertionError    [CONTEXT]      if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }      [BUGGY]  }  else  if(o  instanceof  JsonToken)  {  Node  o  =(Node)iterator.next();  return  JsonToken.BEGIN_OBJECT;  [BUGGY]      return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	replace	}    else    if(o    instanceof    JsonToken)    {    Node  o  =(Node)iterator.next();  return  JsonToken.BEGIN_OBJECT;	  	non-compiled	[CE]  cannot  find  symbol	197	None	add
1298	[BUG]  [BUGGY]  }  else  if(o  instanceof  JsonObject  ||  o  instanceof  JsonNull)  {  }  else  if(o  instanceof  JsonObject  ||  o  instanceof  JsonNull)  <  return  JsonToken.BEGIN_OBJECT;  [CE]  illegal  start  of  type  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]      if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }      [BUGGY]  }  else  if(o  instanceof  JsonObject  ||  o  instanceof  JsonNull)  {  }  else  if(o  instanceof  JsonObject  ||  o  instanceof  JsonNull)  <  return  JsonToken.BEGIN_OBJECT;  [BUGGY]      return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	replace	}    else    if(o    instanceof    JsonObject    ||    o    instanceof    JsonNull)    {    }  else  if(o  instanceof  JsonObject  ||  o  instanceof  JsonNull)  <  return  JsonToken.BEGIN_OBJECT;	  	non-compiled	[CE]  illegal  start  of  type	44	None	add
1299	[BUG]  [BUGGY]  [FE]  ArrayIndexOutOfBoundsException  [FE]      ArrayIndexOutOfBoundsException    [CONTEXT]      if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }      [BUGGY]  }  else  if(o  instanceof  JsonObject  ||  o  instanceof  JsonNull)  {  return  JsonToken.BEGIN_OBJECT;  [BUGGY]      return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	add	}    else    if(o    instanceof    JsonObject    ||    o    instanceof    JsonNull)    {    return  JsonToken.BEGIN_OBJECT;	  	compilable	  [FE]  ArrayIndexOutOfBoundsException  	44	2	add
1300	[BUG]  [BUGGY]  }  else  if(o  instanceof  JsonObject  ||  o  instanceof  JsonNull)  {  return  JsonToken.BEGIN_OBJECT;  [FE]  ArrayIndexOutOfBoundsException  [FE]      ArrayIndexOutOfBoundsException    [CONTEXT]      if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }      [BUGGY]  }  else  if(o  instanceof  JsonObject  ||  o  instanceof  JsonNull)  {  return  JsonToken.BEGIN_OBJECT;  [BUGGY]      return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	replace	}    else    if(o    instanceof    JsonObject    ||    o    instanceof    JsonNull)    {    return  JsonToken.BEGIN_OBJECT;	  	compilable	  [FE]  ArrayIndexOutOfBoundsException  	44	2	add
1301	[BUG]  [BUGGY]  }  else  if(o  instanceof  JsonObject  ||  o  instanceof  JsonNull)  {  instanceof  JsonObject  ||  o  instanceof  JsonNull)  {  [CE]  illegal  start  of  expression  [FE]        ArrayIndexOutOfBoundsException    [CONTEXT]      if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }      [BUGGY]  }  else  if(o  instanceof  JsonObject  ||  o  instanceof  JsonNull)  {  instanceof  JsonObject  ||  o  instanceof  JsonNull)  {  [BUGGY]      return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	replace	}    else    if(o    instanceof    JsonObject    ||    o    instanceof    JsonNull)    {    instanceof  JsonObject  ||  o  instanceof  JsonNull)  {	  	non-compiled	[CE]  illegal  start  of  expression	44	None	add
1302	[BUG]  [BUGGY]  }  else  if(o  instanceof  JsonObject  <  >  {  [CE]  illegal  start  of  type  [FE]              ArrayIndexOutOfBoundsException      [CONTEXT]      if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }      [BUGGY]  }  else  if(o  instanceof  JsonObject  <  >  {  [BUGGY]      return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	replace	}  else  if(o  instanceof  JsonObject  <  >  {	  }    else    if(o    instanceof    JsonObject    ==    {    	non-compiled	[CE]  illegal  start  of  type	31	None	replace
1303	[BUG]  [BUGGY]  [FE]  ArrayIndexOutOfBoundsException  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]      if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }      [BUGGY]  }  else  if(o  instanceof  JsonObject  ||  o  instanceof  JsonObject)  {  return  JsonToken.BEGIN_OBJECT;  [BUGGY]      return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	add	}    else    if(o    instanceof    JsonObject    ||    o    instanceof    JsonObject)    {    return  JsonToken.BEGIN_OBJECT;	  	compilable	  [FE]  ArrayIndexOutOfBoundsException  	179	2	add
1304	[BUG]  [BUGGY]  }  else  if(o  instanceof  JsonObject  ||  o  instanceof  JsonObject)  {  return  JsonToken.BEGIN_OBJECT;  [FE]  ArrayIndexOutOfBoundsException  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]      if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }      [BUGGY]  }  else  if(o  instanceof  JsonObject  ||  o  instanceof  JsonObject)  {  return  JsonToken.BEGIN_OBJECT;  [BUGGY]      return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	replace	}    else    if(o    instanceof    JsonObject    ||    o    instanceof    JsonObject)    {    return  JsonToken.BEGIN_OBJECT;	  	compilable	  [FE]  ArrayIndexOutOfBoundsException  	179	2	add
1305	[BUG]  [BUGGY]  }  else  if(o  instanceof  JsonObject  ||  o  instanceof  JsonObject)  {  ArrayIndexOutOfBoundsException  e  =  new  ArrayIndexOutOfBoundsException(pathNames[0],  pathNames[1]);  [CE]  no  suitable  constructor  found  for  ArrayIndexOutOfBoundsException(String,String)  [FE]      ArrayIndexOutOfBoundsException    [CONTEXT]      if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }      [BUGGY]  }  else  if(o  instanceof  JsonObject  ||  o  instanceof  JsonObject)  {  ArrayIndexOutOfBoundsException  e  =  new  ArrayIndexOutOfBoundsException(pathNames[0],  pathNames[1]);  [BUGGY]      return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	replace	}    else    if(o    instanceof    JsonObject    ||    o    instanceof    JsonObject)    {    ArrayIndexOutOfBoundsException  e  =  new  ArrayIndexOutOfBoundsException(pathNames[0],  pathNames[1]);	  	non-compiled	[CE]  no  suitable  constructor  found  for  ArrayIndexOutOfBoundsException(String,String)	179	None	add
1306	[BUG]  [BUGGY]  }  else  if(o  instanceof  JsonObject  ||  o  instanceof  JsonObject)  {  ArrayIndexOutOfBoundsException  e  =  new  ArrayIndexOutOfBoundsException(iterator.next());  [CE]  cannot  find  symbol  iterator  [FE]        ArrayIndexOutOfBoundsException    [CONTEXT]      if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }      [BUGGY]  }  else  if(o  instanceof  JsonObject  ||  o  instanceof  JsonObject)  {  ArrayIndexOutOfBoundsException  e  =  new  ArrayIndexOutOfBoundsException(iterator.next());  [BUGGY]      return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	replace	}    else    if(o    instanceof    JsonObject    ||    o    instanceof    JsonObject)    {    ArrayIndexOutOfBoundsException  e  =  new  ArrayIndexOutOfBoundsException(iterator.next());	  	non-compiled	[CE]  cannot  find  symbol  iterator	179	None	add
1307	[BUG]  [BUGGY]  }  else  if(o  instanceof  JsonObject  ||  o  instanceof  JsonObject)  {  instanceof  JsonObject  ||  o  instanceof  JsonObject)  {  [CE]  illegal  start  of  expression  [FE]          ArrayIndexOutOfBoundsException    [CONTEXT]      if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }      [BUGGY]  }  else  if(o  instanceof  JsonObject  ||  o  instanceof  JsonObject)  {  instanceof  JsonObject  ||  o  instanceof  JsonObject)  {  [BUGGY]      return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	replace	}    else    if(o    instanceof    JsonObject    ||    o    instanceof    JsonObject)    {    instanceof  JsonObject  ||  o  instanceof  JsonObject)  {	  	non-compiled	[CE]  illegal  start  of  expression	179	None	add
1308	[BUG]  [BUGGY]  }  else  if(!(o  instanceof  JsonObject  ||  o  instanceof  JsonArray))  {  if(!(o  instanceof  JsonObject  ||  o  instanceof  JsonArray))  {  [CE]  illegal  start  of  expression  [FE]    AssertionError    [CONTEXT]      if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }      [BUGGY]  }  else  if(!(o  instanceof  JsonObject  ||  o  instanceof  JsonArray))  {  if(!(o  instanceof  JsonObject  ||  o  instanceof  JsonArray))  {  [BUGGY]      return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	replace	}    else    if(!(o    instanceof    JsonObject    ||    o    instanceof    JsonArray))    {    if(!(o  instanceof  JsonObject  ||  o  instanceof  JsonArray))  {	  	non-compiled	[CE]  illegal  start  of  expression	136	None	add
1309	[BUG]  [BUGGY]  }  else  if(!(o  instanceof  JsonObject  ||  o  instanceof  JsonArray))  {  }  else  if(!(o  instanceof  JsonObject  ||  o  instancesof  JsonArray))  {  [CE]  ')'  expected  [FE]      AssertionError    [CONTEXT]      if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }      [BUGGY]  }  else  if(!(o  instanceof  JsonObject  ||  o  instanceof  JsonArray))  {  }  else  if(!(o  instanceof  JsonObject  ||  o  instancesof  JsonArray))  {  [BUGGY]      return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	replace	}    else    if(!(o    instanceof    JsonObject    ||    o    instanceof    JsonArray))    {    }  else  if(!(o  instanceof  JsonObject  ||  o  instancesof  JsonArray))  {	  	non-compiled	[CE]  ')'  expected	136	None	add
1310	[BUG]  [BUGGY]  }  else  if(!(o  instanceof  JsonArray)||!(o  instanceof  JsonPrimitive))  {  }  else  if(!(o  instanceof  JsonArray)||?!(o  instanceof  JsonPrimitive))  {  [CE]  illegal  start  of  expression  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]      if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }      [BUGGY]  }  else  if(!(o  instanceof  JsonArray)||!(o  instanceof  JsonPrimitive))  {  }  else  if(!(o  instanceof  JsonArray)||?!(o  instanceof  JsonPrimitive))  {  [BUGGY]      return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	replace	}    else    if(!(o    instanceof    JsonArray)||!(o    instanceof    JsonPrimitive))    {    }  else  if(!(o  instanceof  JsonArray)||?!(o  instanceof  JsonPrimitive))  {	  	non-compiled	[CE]  illegal  start  of  expression	250	None	add
1311	[BUG]  [BUGGY]  }  else  if(o  instanceof  JsonObject  &&  o  instanceof  JsonPrimitive)  {  }  else  if(o  instanceof  JsonObject  &&  o  instanceof  JsonPrimitive)  {  return  JsonToken.BEGIN_OBJECT;  }  else  if(o  instanceof  JsonObject  &&  o  instanceof  JsonPrimitive)  {  [CE]  missing  return  statement  [FE]    AssertionError    [CONTEXT]      if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }      [BUGGY]  }  else  if(o  instanceof  JsonObject  &&  o  instanceof  JsonPrimitive)  {  }  else  if(o  instanceof  JsonObject  &&  o  instanceof  JsonPrimitive)  {  return  JsonToken.BEGIN_OBJECT;  }  else  if(o  instanceof  JsonObject  &&  o  instanceof  JsonPrimitive)  {  [BUGGY]      return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	replace	}    else    if(o    instanceof    JsonObject    &&    o    instanceof    JsonPrimitive)    {    }  else  if(o  instanceof  JsonObject  &&  o  instanceof  JsonPrimitive)  {  return  JsonToken.BEGIN_OBJECT;  }  else  if(o  instanceof  JsonObject  &&  o  instanceof  JsonPrimitive)  {	  	non-compiled	[CE]  missing  return  statement	108	None	add
1312	[BUG]  [BUGGY]  }  else  if(o  instanceof  JsonObject  &&  o  instanceof  JsonPrimitive)  {  }  else  if(o  instanceof  JsonObject  &&  o  instanceof  JsonPrimitive)  {  return  JsonToken.BEGIN_OBJECT;  }  else  if(o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  J  [CE]  ')'  expected  [FE]      AssertionError    [CONTEXT]      if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }      [BUGGY]  }  else  if(o  instanceof  JsonObject  &&  o  instanceof  JsonPrimitive)  {  }  else  if(o  instanceof  JsonObject  &&  o  instanceof  JsonPrimitive)  {  return  JsonToken.BEGIN_OBJECT;  }  else  if(o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  J  [BUGGY]      return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	replace	}    else    if(o    instanceof    JsonObject    &&    o    instanceof    JsonPrimitive)    {    }  else  if(o  instanceof  JsonObject  &&  o  instanceof  JsonPrimitive)  {  return  JsonToken.BEGIN_OBJECT;  }  else  if(o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  J	  	non-compiled	[CE]  ')'  expected	108	None	add
1313	[BUG]  [BUGGY]  }  else  if(o  instanceof  JsonObject  &&  o  instanceof  JsonPrimitive)  {  }  else  if(o  instanceof  JsonObject  &&  o  instanceof  JsonPrimitive)  {  return  JsonToken.BEGIN_OBJECT;  }  else  if(o  instanceof  JsonObject)  {  return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  Json  [CE]  ')'  expected  [FE]        AssertionError    [CONTEXT]      if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }      [BUGGY]  }  else  if(o  instanceof  JsonObject  &&  o  instanceof  JsonPrimitive)  {  }  else  if(o  instanceof  JsonObject  &&  o  instanceof  JsonPrimitive)  {  return  JsonToken.BEGIN_OBJECT;  }  else  if(o  instanceof  JsonObject)  {  return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  Json  [BUGGY]      return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	replace	}    else    if(o    instanceof    JsonObject    &&    o    instanceof    JsonPrimitive)    {    }  else  if(o  instanceof  JsonObject  &&  o  instanceof  JsonPrimitive)  {  return  JsonToken.BEGIN_OBJECT;  }  else  if(o  instanceof  JsonObject)  {  return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  Json	  	non-compiled	[CE]  ')'  expected	108	None	add
1314	[BUG]  [BUGGY]  }  else  if(o  instanceof  JsonObject  &&  o  instanceof  JsonPrimitive)  {  }  else  if(o  instanceof  JsonObject  &&  o  instanceof  JsonPrimitive)  {  return  JsonToken.BEGIN_OBJECT;  }  else  if(o  instanceof  JsonObject)  {  return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  [CE]  missing  return  statement  [FE]          AssertionError    [CONTEXT]      if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }      [BUGGY]  }  else  if(o  instanceof  JsonObject  &&  o  instanceof  JsonPrimitive)  {  }  else  if(o  instanceof  JsonObject  &&  o  instanceof  JsonPrimitive)  {  return  JsonToken.BEGIN_OBJECT;  }  else  if(o  instanceof  JsonObject)  {  return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  [BUGGY]      return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	replace	}    else    if(o    instanceof    JsonObject    &&    o    instanceof    JsonPrimitive)    {    }  else  if(o  instanceof  JsonObject  &&  o  instanceof  JsonPrimitive)  {  return  JsonToken.BEGIN_OBJECT;  }  else  if(o  instanceof  JsonObject)  {  return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {	  	non-compiled	[CE]  missing  return  statement	108	None	add
1315	[BUG]  [BUGGY]  }  else  if(o  instanceof  JsonObject  &&  o  instanceof  JsonPrimitive)  {  }  else  if(o  instanceof  JsonObject  &&  o  instanceof  JsonPrimitive)  {  return  JsonToken.BEGIN_OBJECT;  }  else  if(o  instanceof  JsonObject)  {  return  JsonToken.BEGIN_OBJECT;  }  [CE]  illegal  start  of  type  [FE]            AssertionError    [CONTEXT]      if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }      [BUGGY]  }  else  if(o  instanceof  JsonObject  &&  o  instanceof  JsonPrimitive)  {  }  else  if(o  instanceof  JsonObject  &&  o  instanceof  JsonPrimitive)  {  return  JsonToken.BEGIN_OBJECT;  }  else  if(o  instanceof  JsonObject)  {  return  JsonToken.BEGIN_OBJECT;  }  [BUGGY]      return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	replace	}    else    if(o    instanceof    JsonObject    &&    o    instanceof    JsonPrimitive)    {    }  else  if(o  instanceof  JsonObject  &&  o  instanceof  JsonPrimitive)  {  return  JsonToken.BEGIN_OBJECT;  }  else  if(o  instanceof  JsonObject)  {  return  JsonToken.BEGIN_OBJECT;  }	  	non-compiled	[CE]  illegal  start  of  type	108	None	add
1316	[BUG]  [BUGGY]  }  else  if(o  instanceof  JsonObject  &&  o  instanceof  JsonPrimitive)  {  }  else  if(o  instanceof  JsonObject  &&  o  instanceof  JsonPrimitive)  {  return  JsonToken.BEGIN_OBJECT;  }  else  if(o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  Json  [CE]  ')'  expected  [FE]              AssertionError    [CONTEXT]      if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }      [BUGGY]  }  else  if(o  instanceof  JsonObject  &&  o  instanceof  JsonPrimitive)  {  }  else  if(o  instanceof  JsonObject  &&  o  instanceof  JsonPrimitive)  {  return  JsonToken.BEGIN_OBJECT;  }  else  if(o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  Json  [BUGGY]      return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	replace	}    else    if(o    instanceof    JsonObject    &&    o    instanceof    JsonPrimitive)    {    }  else  if(o  instanceof  JsonObject  &&  o  instanceof  JsonPrimitive)  {  return  JsonToken.BEGIN_OBJECT;  }  else  if(o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  Json	  	non-compiled	[CE]  ')'  expected	108	None	add
1317	[BUG]  [BUGGY]  }  else  if(o  instanceof  JsonObject  ||  o  instanceof  JsonPrimitive)  {  ArrayIndexOutOfBoundsException  e  =  new  ArrayIndexOutOfBoundsException(primitive);  [CE]  cannot  find  symbol  primitive  [FE]              ArrayIndexOutOfBoundsException      [CONTEXT]      if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }      [BUGGY]  }  else  if(o  instanceof  JsonObject  ||  o  instanceof  JsonPrimitive)  {  ArrayIndexOutOfBoundsException  e  =  new  ArrayIndexOutOfBoundsException(primitive);  [BUGGY]      return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	replace	}  else  if(o  instanceof  JsonObject  ||  o  instanceof  JsonPrimitive)  {  ArrayIndexOutOfBoundsException  e  =  new  ArrayIndexOutOfBoundsException(primitive);	  }    else    if(o    instanceof    JsonObject    ||    o    instanceof    JsonPrimitive)    {    ArrayIndexOutOfBoundsException    e    =    new    ArrayIndexOutOfBoundsException(iterator.next());    	non-compiled	[CE]  cannot  find  symbol  primitive	169	None	replace
1318	[BUG]  [BUGGY]  }  else  if(o  instanceof  JsonObject  ||  o  instanceof  JsonPrimitive)  {  ArrayIndexOutOfBoundsException  e  =  new  ArrayIndexOutOfBoundsException(parent.next());  [CE]  cannot  find  symbol  parent  [FE]                ArrayIndexOutOfBoundsException      [CONTEXT]      if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }      [BUGGY]  }  else  if(o  instanceof  JsonObject  ||  o  instanceof  JsonPrimitive)  {  ArrayIndexOutOfBoundsException  e  =  new  ArrayIndexOutOfBoundsException(parent.next());  [BUGGY]      return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	replace	}  else  if(o  instanceof  JsonObject  ||  o  instanceof  JsonPrimitive)  {  ArrayIndexOutOfBoundsException  e  =  new  ArrayIndexOutOfBoundsException(parent.next());	  }    else    if(o    instanceof    JsonObject    ||    o    instanceof    JsonPrimitive)    {    ArrayIndexOutOfBoundsException    e    =    new    ArrayIndexOutOfBoundsException(iterator.next());    	non-compiled	[CE]  cannot  find  symbol  parent	169	None	replace
1319	[BUG]  [BUGGY]  }  else  if(o  instanceof  JsonObject  ||  o  instanceof  JsonPrimitive)  {  ArrayIndexOutOfBoundsException  e  =  new  ArrayIndexOutOfBoundsException(input);  [CE]  cannot  find  symbol  input  [FE]                  ArrayIndexOutOfBoundsException      [CONTEXT]      if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }      [BUGGY]  }  else  if(o  instanceof  JsonObject  ||  o  instanceof  JsonPrimitive)  {  ArrayIndexOutOfBoundsException  e  =  new  ArrayIndexOutOfBoundsException(input);  [BUGGY]      return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	replace	}  else  if(o  instanceof  JsonObject  ||  o  instanceof  JsonPrimitive)  {  ArrayIndexOutOfBoundsException  e  =  new  ArrayIndexOutOfBoundsException(input);	  }    else    if(o    instanceof    JsonObject    ||    o    instanceof    JsonPrimitive)    {    ArrayIndexOutOfBoundsException    e    =    new    ArrayIndexOutOfBoundsException(iterator.next());    	non-compiled	[CE]  cannot  find  symbol  input	169	None	replace
1320	[BUG]  [BUGGY]  }  else  if(o  instanceof  JsonObject  &&  object  instanceof  JsonNumber)  {  [CE]  cannot  find  symbol  object  [FE]              ArrayIndexOutOfBoundsException      [CONTEXT]      if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }      [BUGGY]  }  else  if(o  instanceof  JsonObject  &&  object  instanceof  JsonNumber)  {  [BUGGY]      return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	replace	}  else  if(o  instanceof  JsonObject  &&  object  instanceof  JsonNumber)  {	  }    else    if(o    instanceof    JsonObject    &&    o    instanceof    JsonNumber)    {    	non-compiled	[CE]  cannot  find  symbol  object	122	None	replace
1321	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }      [BUGGY]  }  else  if(!(o  instanceof  JsonObject  ||  o  instanceof  Boolean  ||  o  instanceof  JsonArray))  {  [BUGGY]      return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	add	}  else  if(!(o  instanceof  JsonObject  ||  o  instanceof  Boolean  ||  o  instanceof  JsonArray))  {	  }    else    if(!(o    instanceof    JsonObject    ||    o    instanceof    Boolean))    {    	compilable	  [FE]  AssertionError  	255	2	replace
1322	[BUG]  [BUGGY]  }  else  if(!(o  instanceof  JsonObject  ||  o  instanceof  Boolean  ||  o  instanceof  JsonArray))  {  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }      [BUGGY]  }  else  if(!(o  instanceof  JsonObject  ||  o  instanceof  Boolean  ||  o  instanceof  JsonArray))  {  [BUGGY]      return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	replace	}  else  if(!(o  instanceof  JsonObject  ||  o  instanceof  Boolean  ||  o  instanceof  JsonArray))  {	  }    else    if(!(o    instanceof    JsonObject    ||    o    instanceof    Boolean))    {    	compilable	  [FE]  AssertionError  	255	2	replace
1323	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }      [BUGGY]  }  else  if(!(o  instanceof  JsonObject  ||  o  instanceof  Boolean  ||  o  instanceof  JsonPrimitive))  {  [BUGGY]      return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	add	}  else  if(!(o  instanceof  JsonObject  ||  o  instanceof  Boolean  ||  o  instanceof  JsonPrimitive))  {	  }    else    if(!(o    instanceof    JsonObject    ||    o    instanceof    Boolean))    {    	compilable	  [FE]  AssertionError  	255	2	replace
1324	[BUG]  [BUGGY]  }  else  if(!(o  instanceof  JsonObject  ||  o  instanceof  Boolean  ||  o  instanceof  JsonPrimitive))  {  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }      [BUGGY]  }  else  if(!(o  instanceof  JsonObject  ||  o  instanceof  Boolean  ||  o  instanceof  JsonPrimitive))  {  [BUGGY]      return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	replace	}  else  if(!(o  instanceof  JsonObject  ||  o  instanceof  Boolean  ||  o  instanceof  JsonPrimitive))  {	  }    else    if(!(o    instanceof    JsonObject    ||    o    instanceof    Boolean))    {    	compilable	  [FE]  AssertionError  	255	2	replace
1325	[BUG]  [BUGGY]  }  else  if(!(o  instanceof  JsonObject  ||  o  instanceof  Boolean  ||  o  instanceof  JsonNumber))  {  [CE]  cannot  find  symbol  [FE]        AssertionError    [CONTEXT]      if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }      [BUGGY]  }  else  if(!(o  instanceof  JsonObject  ||  o  instanceof  Boolean  ||  o  instanceof  JsonNumber))  {  [BUGGY]      return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	replace	}  else  if(!(o  instanceof  JsonObject  ||  o  instanceof  Boolean  ||  o  instanceof  JsonNumber))  {	  }    else    if(!(o    instanceof    JsonObject    ||    o    instanceof    Boolean))    {    	non-compiled	[CE]  cannot  find  symbol	255	None	replace
1326	[BUG]  [BUGGY]  }  else  if(!(o  instanceof  JsonObject  ||  o  instanceof  JsonPrimitive))  {  object  =(o  instanceof  JsonObject  ||  o  instanceof  JsonPrimitive)?  JsonToken.BEGIN_OBJECT  :  JsonToken.BEGIN_ARRAY;  [CE]  cannot  find  symbol  object  [FE]    AssertionError    [CONTEXT]      if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }      [BUGGY]  }  else  if(!(o  instanceof  JsonObject  ||  o  instanceof  JsonPrimitive))  {  object  =(o  instanceof  JsonObject  ||  o  instanceof  JsonPrimitive)?  JsonToken.BEGIN_OBJECT  :  JsonToken.BEGIN_ARRAY;  [BUGGY]      return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	replace	}    else    if(!(o    instanceof    JsonObject    ||    o    instanceof    JsonPrimitive))    {    object  =(o  instanceof  JsonObject  ||  o  instanceof  JsonPrimitive)?  JsonToken.BEGIN_OBJECT  :  JsonToken.BEGIN_ARRAY;	  	non-compiled	[CE]  cannot  find  symbol  object	138	None	add
1327	[BUG]  [BUGGY]  }  else  if(!(o  instanceof  JsonObject  ||  o  instanceof  JsonPrimitive))  {  object  =(o  instanceof  JsonObject  ||  o  instanceof  JsonPrimitive)?  JsonToken.BEGIN_OBJECT  :  JsonToken.BEGIN_OBJECT;  [CE]  cannot  find  symbol  object  [FE]      AssertionError    [CONTEXT]      if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }      [BUGGY]  }  else  if(!(o  instanceof  JsonObject  ||  o  instanceof  JsonPrimitive))  {  object  =(o  instanceof  JsonObject  ||  o  instanceof  JsonPrimitive)?  JsonToken.BEGIN_OBJECT  :  JsonToken.BEGIN_OBJECT;  [BUGGY]      return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	replace	}    else    if(!(o    instanceof    JsonObject    ||    o    instanceof    JsonPrimitive))    {    object  =(o  instanceof  JsonObject  ||  o  instanceof  JsonPrimitive)?  JsonToken.BEGIN_OBJECT  :  JsonToken.BEGIN_OBJECT;	  	non-compiled	[CE]  cannot  find  symbol  object	138	None	add
1328	[BUG]  [BUGGY]  }  else  if(!(o  instanceof  JsonObject  ||  o  instanceof  JsonPrimitive))  {  object  =(o  instanceof  JsonObject  ||  o  instanceof  JsonPrimitive)?  JsonToken.BEGIN_OBJECT  :  JsonToken.END_ARRAY;  [CE]  cannot  find  symbol  object  [FE]        AssertionError    [CONTEXT]      if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }      [BUGGY]  }  else  if(!(o  instanceof  JsonObject  ||  o  instanceof  JsonPrimitive))  {  object  =(o  instanceof  JsonObject  ||  o  instanceof  JsonPrimitive)?  JsonToken.BEGIN_OBJECT  :  JsonToken.END_ARRAY;  [BUGGY]      return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	replace	}    else    if(!(o    instanceof    JsonObject    ||    o    instanceof    JsonPrimitive))    {    object  =(o  instanceof  JsonObject  ||  o  instanceof  JsonPrimitive)?  JsonToken.BEGIN_OBJECT  :  JsonToken.END_ARRAY;	  	non-compiled	[CE]  cannot  find  symbol  object	138	None	add
1329	[BUG]  [BUGGY]  }  else  if(!(o  instanceof  JsonObject  ||  o  instanceof  JsonPrimitive))  {  object  =(o  instanceof  JsonObject  ||  o  instanceof  JsonPrimitive)?  JsonToken.NAME  :  JsonToken.BEGIN_OBJECT;  [CE]  cannot  find  symbol  object  [FE]          AssertionError    [CONTEXT]      if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }      [BUGGY]  }  else  if(!(o  instanceof  JsonObject  ||  o  instanceof  JsonPrimitive))  {  object  =(o  instanceof  JsonObject  ||  o  instanceof  JsonPrimitive)?  JsonToken.NAME  :  JsonToken.BEGIN_OBJECT;  [BUGGY]      return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	replace	}    else    if(!(o    instanceof    JsonObject    ||    o    instanceof    JsonPrimitive))    {    object  =(o  instanceof  JsonObject  ||  o  instanceof  JsonPrimitive)?  JsonToken.NAME  :  JsonToken.BEGIN_OBJECT;	  	non-compiled	[CE]  cannot  find  symbol  object	138	None	add
1330	[BUG]  [BUGGY]  }  else  if(!(o  instanceof  JsonObject  ||  o  instanceof  JsonPrimitive))  {  object  =(o  instanceof  JsonObject  ||  o  instanceof  JsonPrimitive)?  JsonToken.BEGIN_OBJECT  :  JsonToken.NAME;  [CE]  cannot  find  symbol  object  [FE]            AssertionError    [CONTEXT]      if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }      [BUGGY]  }  else  if(!(o  instanceof  JsonObject  ||  o  instanceof  JsonPrimitive))  {  object  =(o  instanceof  JsonObject  ||  o  instanceof  JsonPrimitive)?  JsonToken.BEGIN_OBJECT  :  JsonToken.NAME;  [BUGGY]      return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	replace	}    else    if(!(o    instanceof    JsonObject    ||    o    instanceof    JsonPrimitive))    {    object  =(o  instanceof  JsonObject  ||  o  instanceof  JsonPrimitive)?  JsonToken.BEGIN_OBJECT  :  JsonToken.NAME;	  	non-compiled	[CE]  cannot  find  symbol  object	138	None	add
1331	[BUG]  [BUGGY]  }  else  if(o  instanceof  JsonPrimitive)  {  if(o  instanceof  JsonPrimitive)  {  return  JsonToken.BEGIN_OBJECT;  }  else  if(o  instanceof  JsonArray)  {  [CE]  illegal  start  of  expression  [FE]    AssertionError    [CONTEXT]      if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }      [BUGGY]  }  else  if(o  instanceof  JsonPrimitive)  {  if(o  instanceof  JsonPrimitive)  {  return  JsonToken.BEGIN_OBJECT;  }  else  if(o  instanceof  JsonArray)  {  [BUGGY]      return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	replace	}    else    if(o    instanceof    JsonPrimitive)    {    if(o  instanceof  JsonPrimitive)  {  return  JsonToken.BEGIN_OBJECT;  }  else  if(o  instanceof  JsonArray)  {	  	non-compiled	[CE]  illegal  start  of  expression	8	None	add
1332	[BUG]  [BUGGY]  }  else  if(o  instanceof  JsonPrimitive)  {  ((  JsonPrimitive)o).setObject(isObject?  JsonToken.BEGIN_OBJECT  :  JsonToken.BEGIN_ARRAY);  [CE]  cannot  find  symbol  isObject  [FE]      AssertionError    [CONTEXT]      if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }      [BUGGY]  }  else  if(o  instanceof  JsonPrimitive)  {  ((  JsonPrimitive)o).setObject(isObject?  JsonToken.BEGIN_OBJECT  :  JsonToken.BEGIN_ARRAY);  [BUGGY]      return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	replace	}    else    if(o    instanceof    JsonPrimitive)    {    ((  JsonPrimitive)o).setObject(isObject?  JsonToken.BEGIN_OBJECT  :  JsonToken.BEGIN_ARRAY);	  	non-compiled	[CE]  cannot  find  symbol  isObject	8	None	add
1333	[BUG]  [BUGGY]  }  else  if(o  instanceof  JsonPrimitive)  {  ((  JsonPrimitive)o).setObject(isObject?  JsonToken.BEGIN_OBJECT  :  JsonToken.BEGIN_OBJECT);  [CE]  cannot  find  symbol  isObject  [FE]        AssertionError    [CONTEXT]      if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }      [BUGGY]  }  else  if(o  instanceof  JsonPrimitive)  {  ((  JsonPrimitive)o).setObject(isObject?  JsonToken.BEGIN_OBJECT  :  JsonToken.BEGIN_OBJECT);  [BUGGY]      return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	replace	}    else    if(o    instanceof    JsonPrimitive)    {    ((  JsonPrimitive)o).setObject(isObject?  JsonToken.BEGIN_OBJECT  :  JsonToken.BEGIN_OBJECT);	  	non-compiled	[CE]  cannot  find  symbol  isObject	8	None	add
1334	[BUG]  [BUGGY]  }  else  if(o  instanceof  JsonPrimitive)  {  ((  JsonPrimitive)o).setObject(isObject?  JsonToken.BEGIN_OBJECT  :  JsonToken.BEGIN_ARRAY;  [CE]  ')'  expected  [FE]          AssertionError    [CONTEXT]      if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }      [BUGGY]  }  else  if(o  instanceof  JsonPrimitive)  {  ((  JsonPrimitive)o).setObject(isObject?  JsonToken.BEGIN_OBJECT  :  JsonToken.BEGIN_ARRAY;  [BUGGY]      return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	replace	}    else    if(o    instanceof    JsonPrimitive)    {    ((  JsonPrimitive)o).setObject(isObject?  JsonToken.BEGIN_OBJECT  :  JsonToken.BEGIN_ARRAY;	  	non-compiled	[CE]  ')'  expected	8	None	add
1335	[BUG]  [BUGGY]  }  else  if(o  instanceof  JsonPrimitive)  {  ((  JsonPrimitive)o).setObject(isObject?  JsonToken.BEGIN_OBJECT  :  JsonToken.END_ARRAY);  [CE]  cannot  find  symbol  isObject  [FE]            AssertionError    [CONTEXT]      if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }      [BUGGY]  }  else  if(o  instanceof  JsonPrimitive)  {  ((  JsonPrimitive)o).setObject(isObject?  JsonToken.BEGIN_OBJECT  :  JsonToken.END_ARRAY);  [BUGGY]      return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	replace	}    else    if(o    instanceof    JsonPrimitive)    {    ((  JsonPrimitive)o).setObject(isObject?  JsonToken.BEGIN_OBJECT  :  JsonToken.END_ARRAY);	  	non-compiled	[CE]  cannot  find  symbol  isObject	8	None	add
1336	[BUG]  [BUGGY]  }  else  if(!(o  instanceof  JsonType)&&  isObject)  {  [CE]  cannot  find  symbol  [FE]          ArrayIndexOutOfBoundsException      [CONTEXT]      if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }      [BUGGY]  }  else  if(!(o  instanceof  JsonType)&&  isObject)  {  [BUGGY]      return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	replace	}  else  if(!(o  instanceof  JsonType)&&  isObject)  {	  }    else    if(!(o    instanceof    JsonType))    {    	non-compiled	[CE]  cannot  find  symbol	65	None	replace
1337	[BUG]  [BUGGY]  }  else  if(!(o  instanceof  JsonType  ||  o  instanceof  JsonNull))  {  [CE]  cannot  find  symbol  [FE]            ArrayIndexOutOfBoundsException      [CONTEXT]      if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }      [BUGGY]  }  else  if(!(o  instanceof  JsonType  ||  o  instanceof  JsonNull))  {  [BUGGY]      return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	replace	}  else  if(!(o  instanceof  JsonType  ||  o  instanceof  JsonNull))  {	  }    else    if(!(o    instanceof    JsonType))    {    	non-compiled	[CE]  cannot  find  symbol	65	None	replace
1338	[BUG]  [BUGGY]  }  else  if(!(o  instanceof  JsonType  ||  o  instanceof  JsonNumber))  {  [CE]  cannot  find  symbol  [FE]              ArrayIndexOutOfBoundsException      [CONTEXT]      if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }      [BUGGY]  }  else  if(!(o  instanceof  JsonType  ||  o  instanceof  JsonNumber))  {  [BUGGY]      return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	replace	}  else  if(!(o  instanceof  JsonType  ||  o  instanceof  JsonNumber))  {	  }    else    if(!(o    instanceof    JsonType))    {    	non-compiled	[CE]  cannot  find  symbol	65	None	replace
1339	[BUG]  [BUGGY]  }  else  if(!(o  instanceof  JsonType  ||  o  instanceof  JsonEnum))  {  [CE]  cannot  find  symbol  [FE]                ArrayIndexOutOfBoundsException      [CONTEXT]      if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }      [BUGGY]  }  else  if(!(o  instanceof  JsonType  ||  o  instanceof  JsonEnum))  {  [BUGGY]      return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	replace	}  else  if(!(o  instanceof  JsonType  ||  o  instanceof  JsonEnum))  {	  }    else    if(!(o    instanceof    JsonType))    {    	non-compiled	[CE]  cannot  find  symbol	65	None	replace
1340	[BUG]  [BUGGY]  parent  ==  null)  {  if(isObject)  {  return  JsonToken.NAME;  }  [CE]  not  a  statement  [FE]                          ArrayIndexOutOfBoundsException      [CONTEXT]      if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }      [BUGGY]  parent  ==  null)  {  if(isObject)  {  return  JsonToken.NAME;  }  [BUGGY]      return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	replace	parent  ==  null)  {  if(isObject)  {  return  JsonToken.NAME;  }	  if(o    ==    null)    {    if(isObject)    {    return    JsonToken.NAME;    }    	non-compiled	[CE]  not  a  statement	186	None	replace
1341	[BUG]  [BUGGY]  try  {  if(isObject)  {  return  JsonToken.NAME;  }  [CE]  'try'  without  'catch'  or  'finally'  [FE]                            ArrayIndexOutOfBoundsException      [CONTEXT]      if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }      [BUGGY]  try  {  if(isObject)  {  return  JsonToken.NAME;  }  [BUGGY]      return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	replace	try  {  if(isObject)  {  return  JsonToken.NAME;  }	  if(o    ==    null)    {    if(isObject)    {    return    JsonToken.NAME;    }    	non-compiled	[CE]  'try'  without  'catch'  or  'finally'	186	None	replace
1342	[BUG]  [BUGGY]  aughtExceptionHandler.handleMissingException( " ");  [CE]  cannot  find  symbol  aughtExceptionHandler  [FE]                              ArrayIndexOutOfBoundsException      [CONTEXT]      if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }      [BUGGY]  aughtExceptionHandler.handleMissingException( " ");  [BUGGY]      return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	replace	aughtExceptionHandler.handleMissingException( " ");	  if(o    ==    null)    {    if(isObject)    {    return    JsonToken.NAME;    }    	non-compiled	[CE]  cannot  find  symbol  aughtExceptionHandler	186	None	replace
1343	[BUG]  [BUGGY]  }  else  if(o  instanceof  JsonNull  ||!(o  instanceof  JsonNull  ||!(o  instanceof  JsonNull  ||!(o  instanceof  JsonNull  ||!(o  instanceof  JsonNull  ||!(o  instanceof  JsonNull))))  {  [CE]  [FE]              AssertionError      [CONTEXT]      if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }      [BUGGY]  }  else  if(o  instanceof  JsonNull  ||!(o  instanceof  JsonNull  ||!(o  instanceof  JsonNull  ||!(o  instanceof  JsonNull  ||!(o  instanceof  JsonNull  ||!(o  instanceof  JsonNull))))  {  [BUGGY]      return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	replace	}  else  if(o  instanceof  JsonNull  ||!(o  instanceof  JsonNull  ||!(o  instanceof  JsonNull  ||!(o  instanceof  JsonNull  ||!(o  instanceof  JsonNull  ||!(o  instanceof  JsonNull))))  {	  }    else    if(o    instanceof    JsonNull    ||!(o    instanceof    JsonNull    &&!(o    instanceof    JsonNull    &&!(o    instanceof    JsonNull    &&!(o    instanceof    JsonNull))))    {    	non-compiled	[CE]  	6	None	replace
1344	[BUG]  [BUGGY]  }  else  if(o  instanceof  JsonArray  ||  o  instanceof  JsonNull  ||!(o  instanceof  JsonNull  &&!(o  instanceof  JsonNull  &&!(o  instanceof  JsonNull  &&!(o  instanceof  JsonNull  &&!  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }      [BUGGY]  }  else  if(o  instanceof  JsonArray  ||  o  instanceof  JsonNull  ||!(o  instanceof  JsonNull  &&!(o  instanceof  JsonNull  &&!(o  instanceof  JsonNull  &&!(o  instanceof  JsonNull  &&!  [BUGGY]      return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	replace	}  else  if(o  instanceof  JsonArray  ||  o  instanceof  JsonNull  ||!(o  instanceof  JsonNull  &&!(o  instanceof  JsonNull  &&!(o  instanceof  JsonNull  &&!(o  instanceof  JsonNull  &&!	  }    else    if(o    instanceof    JsonNull    ||!(o    instanceof    JsonNull    &&!(o    instanceof    JsonNull    &&!(o    instanceof    JsonNull    &&!(o    instanceof    JsonNull))))    {    	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
1345	[BUG]  [BUGGY]  }  else  if(o  instanceof  JsonObject  ||!(o  instanceof  JsonNull  &&!(o  instanceof  JsonNull  &&!(o  instanceof  JsonNull  &&!(o  instanceof  JsonNull  &&!(o  instanceof  JsonNull  &&!  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }      [BUGGY]  }  else  if(o  instanceof  JsonObject  ||!(o  instanceof  JsonNull  &&!(o  instanceof  JsonNull  &&!(o  instanceof  JsonNull  &&!(o  instanceof  JsonNull  &&!(o  instanceof  JsonNull  &&!  [BUGGY]      return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	replace	}  else  if(o  instanceof  JsonObject  ||!(o  instanceof  JsonNull  &&!(o  instanceof  JsonNull  &&!(o  instanceof  JsonNull  &&!(o  instanceof  JsonNull  &&!(o  instanceof  JsonNull  &&!	  }    else    if(o    instanceof    JsonNull    ||!(o    instanceof    JsonNull    &&!(o    instanceof    JsonNull    &&!(o    instanceof    JsonNull    &&!(o    instanceof    JsonNull))))    {    	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
1346	[BUG]  [BUGGY]  }  else  if(o  instanceof  JsonNull  ||!(o  instanceof  JsonNull  ||!(o  instanceof  JsonNull  ||!(o  instanceof  JsonNull  ||!(o  instanceof  JsonNull  ||!(o  instanceof  JsonNull  ||!(o  instanceof  JsonNull))))  {  [CE]  [FE]                    AssertionError      [CONTEXT]      if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }      [BUGGY]  }  else  if(o  instanceof  JsonNull  ||!(o  instanceof  JsonNull  ||!(o  instanceof  JsonNull  ||!(o  instanceof  JsonNull  ||!(o  instanceof  JsonNull  ||!(o  instanceof  JsonNull  ||!(o  instanceof  JsonNull))))  {  [BUGGY]      return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	replace	}  else  if(o  instanceof  JsonNull  ||!(o  instanceof  JsonNull  ||!(o  instanceof  JsonNull  ||!(o  instanceof  JsonNull  ||!(o  instanceof  JsonNull  ||!(o  instanceof  JsonNull  ||!(o  instanceof  JsonNull))))  {	  }    else    if(o    instanceof    JsonNull    ||!(o    instanceof    JsonNull    &&!(o    instanceof    JsonNull    &&!(o    instanceof    JsonNull    &&!(o    instanceof    JsonNull))))    {    	non-compiled	[CE]  	6	None	replace
1347	[BUG]  [BUGGY]  }  else  if(!(o  instanceof  JsonObject  ||  o  instanceof  Boolean))  {  if(!(o  instanceof  JsonObject  ||  o  instanceof  Boolean))  {  [CE]  illegal  start  of  expression  [FE]    AssertionError    [CONTEXT]      if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }      [BUGGY]  }  else  if(!(o  instanceof  JsonObject  ||  o  instanceof  Boolean))  {  if(!(o  instanceof  JsonObject  ||  o  instanceof  Boolean))  {  [BUGGY]      return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	replace	}    else    if(!(o    instanceof    JsonObject    ||    o    instanceof    Boolean))    {    if(!(o  instanceof  JsonObject  ||  o  instanceof  Boolean))  {	  	non-compiled	[CE]  illegal  start  of  expression	254	None	add
1348	[BUG]  [BUGGY]  [FE]  ArrayIndexOutOfBoundsException  [FE]      AssertionError    [CONTEXT]      if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }      [BUGGY]  }  else  if(!(o  instanceof  JsonObject  ||  o  instanceof  Boolean))  {  return  JsonToken.BEGIN_OBJECT;  [BUGGY]      return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	add	}    else    if(!(o    instanceof    JsonObject    ||    o    instanceof    Boolean))    {    return  JsonToken.BEGIN_OBJECT;	  	compilable	  [FE]  ArrayIndexOutOfBoundsException  	254	2	add
1349	[BUG]  [BUGGY]  }  else  if(!(o  instanceof  JsonObject  ||  o  instanceof  Boolean))  {  return  JsonToken.BEGIN_OBJECT;  [FE]  ArrayIndexOutOfBoundsException  [FE]      AssertionError    [CONTEXT]      if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }      [BUGGY]  }  else  if(!(o  instanceof  JsonObject  ||  o  instanceof  Boolean))  {  return  JsonToken.BEGIN_OBJECT;  [BUGGY]      return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	replace	}    else    if(!(o    instanceof    JsonObject    ||    o    instanceof    Boolean))    {    return  JsonToken.BEGIN_OBJECT;	  	compilable	  [FE]  ArrayIndexOutOfBoundsException  	254	2	add
1350	[BUG]  [BUGGY]  }  else  if(o  instanceof  JsonType  &&  isObject)  {  [CE]  cannot  find  symbol  [FE]            AssertionError      [CONTEXT]      if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }      [BUGGY]  }  else  if(o  instanceof  JsonType  &&  isObject)  {  [BUGGY]      return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	replace	}  else  if(o  instanceof  JsonType  &&  isObject)  {	  }    else    if(o    instanceof    JsonType)    {    	non-compiled	[CE]  cannot  find  symbol	12	None	replace
1351	[BUG]  [BUGGY]  }  else  if(o  instanceof  JsonType  ||  o  instanceof  JsonNumber)  {  [CE]  cannot  find  symbol  [FE]              AssertionError      [CONTEXT]      if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }      [BUGGY]  }  else  if(o  instanceof  JsonType  ||  o  instanceof  JsonNumber)  {  [BUGGY]      return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	replace	}  else  if(o  instanceof  JsonType  ||  o  instanceof  JsonNumber)  {	  }    else    if(o    instanceof    JsonType)    {    	non-compiled	[CE]  cannot  find  symbol	12	None	replace
1352	[BUG]  [BUGGY]  [FE]  ArrayIndexOutOfBoundsException  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]      if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }      [BUGGY]  }  else  if(o  instanceof  JsonObject  ||  o  instanceof  Class  <?>)  {  return  JsonToken.BEGIN_OBJECT;  [BUGGY]      return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	add	}    else    if(o    instanceof    JsonObject    ||    o    instanceof    Class    <?>)    {    return  JsonToken.BEGIN_OBJECT;	  	compilable	  [FE]  ArrayIndexOutOfBoundsException  	242	2	add
1353	[BUG]  [BUGGY]  }  else  if(o  instanceof  JsonObject  ||  o  instanceof  Class  <?>)  {  return  JsonToken.BEGIN_OBJECT;  [FE]  ArrayIndexOutOfBoundsException  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]      if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }      [BUGGY]  }  else  if(o  instanceof  JsonObject  ||  o  instanceof  Class  <?>)  {  return  JsonToken.BEGIN_OBJECT;  [BUGGY]      return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	replace	}    else    if(o    instanceof    JsonObject    ||    o    instanceof    Class    <?>)    {    return  JsonToken.BEGIN_OBJECT;	  	compilable	  [FE]  ArrayIndexOutOfBoundsException  	242	2	add
1354	[BUG]  [BUGGY]  }  else  if(o  instanceof  JsonObject  ||  o  instanceof  Class  <?>)  {  instanceof  JsonObject  ||  o  instanceof  Class  <?>)  {  [CE]  illegal  start  of  expression  [FE]      ArrayIndexOutOfBoundsException    [CONTEXT]      if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }      [BUGGY]  }  else  if(o  instanceof  JsonObject  ||  o  instanceof  Class  <?>)  {  instanceof  JsonObject  ||  o  instanceof  Class  <?>)  {  [BUGGY]      return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	replace	}    else    if(o    instanceof    JsonObject    ||    o    instanceof    Class    <?>)    {    instanceof  JsonObject  ||  o  instanceof  Class  <?>)  {	  	non-compiled	[CE]  illegal  start  of  expression	242	None	add
1355	[BUG]  [BUGGY]  }  else  if(o  instanceof  JsonObject  ||  o  instanceof  Class  <?>)  {  NoClass  <?>  o  =(NoClass  <?>)iterator.next();  [CE]  cannot  find  symbol  [FE]        ArrayIndexOutOfBoundsException    [CONTEXT]      if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }      [BUGGY]  }  else  if(o  instanceof  JsonObject  ||  o  instanceof  Class  <?>)  {  NoClass  <?>  o  =(NoClass  <?>)iterator.next();  [BUGGY]      return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	replace	}    else    if(o    instanceof    JsonObject    ||    o    instanceof    Class    <?>)    {    NoClass  <?>  o  =(NoClass  <?>)iterator.next();	  	non-compiled	[CE]  cannot  find  symbol	242	None	add
1356	[BUG]  [BUGGY]  }  else  if(o  instanceof  JsonObject  ||  o  instanceof  Class  <?>)  {  }  else  if(o  instanceof  JsonObject  ||  o  instanceof  Class!=?>)  {  [CE]  illegal  start  of  expression  [FE]          ArrayIndexOutOfBoundsException    [CONTEXT]      if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }      [BUGGY]  }  else  if(o  instanceof  JsonObject  ||  o  instanceof  Class  <?>)  {  }  else  if(o  instanceof  JsonObject  ||  o  instanceof  Class!=?>)  {  [BUGGY]      return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	replace	}    else    if(o    instanceof    JsonObject    ||    o    instanceof    Class    <?>)    {    }  else  if(o  instanceof  JsonObject  ||  o  instanceof  Class!=?>)  {	  	non-compiled	[CE]  illegal  start  of  expression	242	None	add
1357	[BUG]  [BUGGY]  instanceof  JsonObject  &&  o  instanceof  String)  {  ArrayIndexOutOfBoundsException  e  =  new  ArrayIndexOutOfBoundsException(pathNames[0],  pathNames[1]);  [CE]  illegal  start  of  expression  [FE]            ArrayIndexOutOfBoundsException      [CONTEXT]      if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }      [BUGGY]  instanceof  JsonObject  &&  o  instanceof  String)  {  ArrayIndexOutOfBoundsException  e  =  new  ArrayIndexOutOfBoundsException(pathNames[0],  pathNames[1]);  [BUGGY]      return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	replace	instanceof  JsonObject  &&  o  instanceof  String)  {  ArrayIndexOutOfBoundsException  e  =  new  ArrayIndexOutOfBoundsException(pathNames[0],  pathNames[1]);	  }    else    if(o    instanceof    JsonObject    ||    o    instanceof    String)    {    ArrayIndexOutOfBoundsException    e    =    new    ArrayIndexOutOfBoundsException(pathNames[0],    pathNames[1]);    	non-compiled	[CE]  illegal  start  of  expression	150	None	replace
1358	[BUG]  [BUGGY]  }  else  if(o  instanceof  JsonObject  ||  o  instanceof  String)  {  ArrayIndexOutOfBoundsException  e  =  new  ArrayIndexOutOfBoundsException(pathNames[0],  pathNames[1]  +  1);  [CE]  no  suitable  constructor  found  for  ArrayIndexOutOfBoundsException(String,String)  [FE]              ArrayIndexOutOfBoundsException      [CONTEXT]      if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }      [BUGGY]  }  else  if(o  instanceof  JsonObject  ||  o  instanceof  String)  {  ArrayIndexOutOfBoundsException  e  =  new  ArrayIndexOutOfBoundsException(pathNames[0],  pathNames[1]  +  1);  [BUGGY]      return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	replace	}  else  if(o  instanceof  JsonObject  ||  o  instanceof  String)  {  ArrayIndexOutOfBoundsException  e  =  new  ArrayIndexOutOfBoundsException(pathNames[0],  pathNames[1]  +  1);	  }    else    if(o    instanceof    JsonObject    ||    o    instanceof    String)    {    ArrayIndexOutOfBoundsException    e    =    new    ArrayIndexOutOfBoundsException(pathNames[0],    pathNames[1]);    	non-compiled	[CE]  no  suitable  constructor  found  for  ArrayIndexOutOfBoundsException(String,String)	150	None	replace
1359	[BUG]  [BUGGY]  }  else  if(o  instanceof  JsonObject  ||  o  instanceof  String)  {  Exception  e  =  new  ArrayIndexOutOfBoundsException(pathNames[0],  pathNames[1]);  [CE]  no  suitable  constructor  found  for  ArrayIndexOutOfBoundsException(String,String)  [FE]                ArrayIndexOutOfBoundsException      [CONTEXT]      if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }      [BUGGY]  }  else  if(o  instanceof  JsonObject  ||  o  instanceof  String)  {  Exception  e  =  new  ArrayIndexOutOfBoundsException(pathNames[0],  pathNames[1]);  [BUGGY]      return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	replace	}  else  if(o  instanceof  JsonObject  ||  o  instanceof  String)  {  Exception  e  =  new  ArrayIndexOutOfBoundsException(pathNames[0],  pathNames[1]);	  }    else    if(o    instanceof    JsonObject    ||    o    instanceof    String)    {    ArrayIndexOutOfBoundsException    e    =    new    ArrayIndexOutOfBoundsException(pathNames[0],    pathNames[1]);    	non-compiled	[CE]  no  suitable  constructor  found  for  ArrayIndexOutOfBoundsException(String,String)	150	None	replace
1360	[BUG]  [BUGGY]  Iterator  <  Object>  iterator  =  stacks.values().iterator();  [CE]  variable  iterator  is  already  defined  in  method  peek()  [FE]                            ArrayIndexOutOfBoundsException      [CONTEXT]      if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }      [BUGGY]  Iterator  <  Object>  iterator  =  stacks.values().iterator();  [BUGGY]      return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	replace	Iterator  <  Object>  iterator  =  stacks.values().iterator();	  Iterator    <    Object>    iterator    =    stacks.iterator();    	non-compiled	[CE]  variable  iterator  is  already  defined  in  method  peek()	187	None	replace
1361	[BUG]  [BUGGY]  Iterator  <  Object>  iterator  =  allStandards.iterator();  [CE]  variable  iterator  is  already  defined  in  method  peek()  [FE]                              ArrayIndexOutOfBoundsException      [CONTEXT]      if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }      [BUGGY]  Iterator  <  Object>  iterator  =  allStandards.iterator();  [BUGGY]      return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	replace	Iterator  <  Object>  iterator  =  allStandards.iterator();	  Iterator    <    Object>    iterator    =    stacks.iterator();    	non-compiled	[CE]  variable  iterator  is  already  defined  in  method  peek()	187	None	replace
1362	[BUG]  [BUGGY]  Iterator  <  Object>  iterator  =  pathNames.iterator();  [CE]  variable  iterator  is  already  defined  in  method  peek()  [FE]                                ArrayIndexOutOfBoundsException      [CONTEXT]      if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }      [BUGGY]  Iterator  <  Object>  iterator  =  pathNames.iterator();  [BUGGY]      return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	replace	Iterator  <  Object>  iterator  =  pathNames.iterator();	  Iterator    <    Object>    iterator    =    stacks.iterator();    	non-compiled	[CE]  variable  iterator  is  already  defined  in  method  peek()	187	None	replace
1363	[BUG]  [BUGGY]  }  else  {  if(o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_OBJECT;  }  [CE]  'else'  without  'if'  [FE]              AssertionError      [CONTEXT]      if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }      [BUGGY]  }  else  {  if(o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_OBJECT;  }  [BUGGY]      return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	replace	}  else  {  if(o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_OBJECT;  }	  }    else    if(!(o    instanceof    JsonObject))    {    }    else    if(!(o    instanceof    JsonObject))    {    case    JsonToken.BEGIN_OBJECT:    return    JsonToken.BEGIN_ARRAY;    	non-compiled	[CE]  'else'  without  'if'	209	None	replace
1364	[BUG]  [BUGGY]  }  else  if(!(o  instanceof  JsonNumber  ||  o  instanceof  JsonLong))  {  [CE]  cannot  find  symbol  [FE]                          ArrayIndexOutOfBoundsException      [CONTEXT]      if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }      [BUGGY]  }  else  if(!(o  instanceof  JsonNumber  ||  o  instanceof  JsonLong))  {  [BUGGY]      return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	replace	}  else  if(!(o  instanceof  JsonNumber  ||  o  instanceof  JsonLong))  {	  }    else    if(o    instanceof    JsonNumber    ||    o    instanceof    JsonLong)    {    	non-compiled	[CE]  cannot  find  symbol	115	None	replace
1365	[BUG]  [BUGGY]  }  else  if(o  instanceof  JsonNumber  ||!(o  instanceof  JsonLong))  {  [CE]  cannot  find  symbol  [FE]                            ArrayIndexOutOfBoundsException      [CONTEXT]      if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }      [BUGGY]  }  else  if(o  instanceof  JsonNumber  ||!(o  instanceof  JsonLong))  {  [BUGGY]      return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	replace	}  else  if(o  instanceof  JsonNumber  ||!(o  instanceof  JsonLong))  {	  }    else    if(o    instanceof    JsonNumber    ||    o    instanceof    JsonLong)    {    	non-compiled	[CE]  cannot  find  symbol	115	None	replace
1366	[BUG]  [BUGGY]  }  else  if(o  instanceof  JsonNull  ||  o  instanceof  JsonLong)  {  [CE]  cannot  find  symbol  [FE]                              ArrayIndexOutOfBoundsException      [CONTEXT]      if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }      [BUGGY]  }  else  if(o  instanceof  JsonNull  ||  o  instanceof  JsonLong)  {  [BUGGY]      return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	replace	}  else  if(o  instanceof  JsonNull  ||  o  instanceof  JsonLong)  {	  }    else    if(o    instanceof    JsonNumber    ||    o    instanceof    JsonLong)    {    	non-compiled	[CE]  cannot  find  symbol	115	None	replace
1367	[BUG]  [BUGGY]  }    else    if(o    instanceof    JsonObject    ||    o    instanceof    JsonPrimitive)    {    return  JsonToken.BEGIN_OBJECT;  if(o  instanceof  JsonObject  ||  o  instanceof  JsonPrimitive)  {  return  JsonToken.BEGIN_OBJECT;  }  else  if(o  instanceof  JsonObject  ||  o  instanceof  JsonPrimitive)  {  return  JsonToken.BEGIN_OBJECT;  }  [CE]  unreachable  statement  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]      if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }      [BUGGY]  }    else    if(o    instanceof    JsonObject    ||    o    instanceof    JsonPrimitive)    {    return  JsonToken.BEGIN_OBJECT;  if(o  instanceof  JsonObject  ||  o  instanceof  JsonPrimitive)  {  return  JsonToken.BEGIN_OBJECT;  }  else  if(o  instanceof  JsonObject  ||  o  instanceof  JsonPrimitive)  {  return  JsonToken.BEGIN_OBJECT;  }  [BUGGY]      return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	replace	}        else        if(o        instanceof        JsonObject        ||        o        instanceof        JsonPrimitive)        {        return    JsonToken.BEGIN_OBJECT;    if(o  instanceof  JsonObject  ||  o  instanceof  JsonPrimitive)  {  return  JsonToken.BEGIN_OBJECT;  }  else  if(o  instanceof  JsonObject  ||  o  instanceof  JsonPrimitive)  {  return  JsonToken.BEGIN_OBJECT;  }	  	non-compiled	[CE]  unreachable  statement	165	None	add
1368	[BUG]  [BUGGY]  }    else    if(o    instanceof    JsonObject    ||    o    instanceof    JsonPrimitive)    {    return  JsonToken.BEGIN_OBJECT;  else  if(o  instanceof  JsonObject  ||  o  instanceof  JsonPrimitive)  {  return  JsonToken.BEGIN_OBJECT;  }  else  if(o  instanceof  JsonObject  ||  o  instanceof  JsonPrimitive)  {  return  JsonToken.BEGIN_OB  [CE]  'else'  without  'if'  [FE]      ArrayIndexOutOfBoundsException    [CONTEXT]      if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }      [BUGGY]  }    else    if(o    instanceof    JsonObject    ||    o    instanceof    JsonPrimitive)    {    return  JsonToken.BEGIN_OBJECT;  else  if(o  instanceof  JsonObject  ||  o  instanceof  JsonPrimitive)  {  return  JsonToken.BEGIN_OBJECT;  }  else  if(o  instanceof  JsonObject  ||  o  instanceof  JsonPrimitive)  {  return  JsonToken.BEGIN_OB  [BUGGY]      return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	replace	}        else        if(o        instanceof        JsonObject        ||        o        instanceof        JsonPrimitive)        {        return    JsonToken.BEGIN_OBJECT;    else  if(o  instanceof  JsonObject  ||  o  instanceof  JsonPrimitive)  {  return  JsonToken.BEGIN_OBJECT;  }  else  if(o  instanceof  JsonObject  ||  o  instanceof  JsonPrimitive)  {  return  JsonToken.BEGIN_OB	  	non-compiled	[CE]  'else'  without  'if'	165	None	add
1369	[BUG]  [BUGGY]  }    else    if(o    instanceof    JsonObject    ||    o    instanceof    JsonPrimitive)    {    return  JsonToken.BEGIN_OBJECT;  if(o  instanceof  JsonObject  ||  o  instanceof  JsonPrimitive)  {  return  JsonToken.BEGIN_OBJECT;  }  else  if(o  instanceof  JsonObject  ||  o  instanceof  JsonPrimitive)  {  return  JsonToken.BEGIN_OBJ  [CE]  ';'  expected  [FE]        ArrayIndexOutOfBoundsException    [CONTEXT]      if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }      [BUGGY]  }    else    if(o    instanceof    JsonObject    ||    o    instanceof    JsonPrimitive)    {    return  JsonToken.BEGIN_OBJECT;  if(o  instanceof  JsonObject  ||  o  instanceof  JsonPrimitive)  {  return  JsonToken.BEGIN_OBJECT;  }  else  if(o  instanceof  JsonObject  ||  o  instanceof  JsonPrimitive)  {  return  JsonToken.BEGIN_OBJ  [BUGGY]      return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	replace	}        else        if(o        instanceof        JsonObject        ||        o        instanceof        JsonPrimitive)        {        return    JsonToken.BEGIN_OBJECT;    if(o  instanceof  JsonObject  ||  o  instanceof  JsonPrimitive)  {  return  JsonToken.BEGIN_OBJECT;  }  else  if(o  instanceof  JsonObject  ||  o  instanceof  JsonPrimitive)  {  return  JsonToken.BEGIN_OBJ	  	non-compiled	[CE]  ';'  expected	165	None	add
1370	[BUG]  [BUGGY]  [FE]  ArrayIndexOutOfBoundsException  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]      if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }      [BUGGY]  }  else  if(o  instanceof  JsonObject  ||  o  instanceof  Boolean)  {  return  JsonToken.BEGIN_OBJECT;  [BUGGY]      return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	add	}    else    if(o    instanceof    JsonObject    ||    o    instanceof    Boolean)    {    return  JsonToken.BEGIN_OBJECT;	  	compilable	  [FE]  ArrayIndexOutOfBoundsException  	53	2	add
1371	[BUG]  [BUGGY]  }  else  if(o  instanceof  JsonObject  ||  o  instanceof  Boolean)  {  return  JsonToken.BEGIN_OBJECT;  [FE]  ArrayIndexOutOfBoundsException  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]      if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }      [BUGGY]  }  else  if(o  instanceof  JsonObject  ||  o  instanceof  Boolean)  {  return  JsonToken.BEGIN_OBJECT;  [BUGGY]      return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	replace	}    else    if(o    instanceof    JsonObject    ||    o    instanceof    Boolean)    {    return  JsonToken.BEGIN_OBJECT;	  	compilable	  [FE]  ArrayIndexOutOfBoundsException  	53	2	add
1372	[BUG]  [BUGGY]  }  else  if(o  instanceof  JsonObject  ||  o  instanceof  Boolean)  {  ArrayIndexOutOfBoundsException  e  =  new  ArrayIndexOutOfBoundsException(iterator.next());  [CE]  cannot  find  symbol  iterator  [FE]      ArrayIndexOutOfBoundsException    [CONTEXT]      if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }      [BUGGY]  }  else  if(o  instanceof  JsonObject  ||  o  instanceof  Boolean)  {  ArrayIndexOutOfBoundsException  e  =  new  ArrayIndexOutOfBoundsException(iterator.next());  [BUGGY]      return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	replace	}    else    if(o    instanceof    JsonObject    ||    o    instanceof    Boolean)    {    ArrayIndexOutOfBoundsException  e  =  new  ArrayIndexOutOfBoundsException(iterator.next());	  	non-compiled	[CE]  cannot  find  symbol  iterator	53	None	add
1373	[BUG]  [BUGGY]  }  else  if(o  instanceof  JsonObject  ||  o  instanceof  Boolean)  {  ArrayIndexOutOfBoundsException  e  =  new  ArrayIndexOutOfBoundsException(pathNames[0],  pathNames[1]);  [CE]  no  suitable  constructor  found  for  ArrayIndexOutOfBoundsException(String,String)  [FE]        ArrayIndexOutOfBoundsException    [CONTEXT]      if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }      [BUGGY]  }  else  if(o  instanceof  JsonObject  ||  o  instanceof  Boolean)  {  ArrayIndexOutOfBoundsException  e  =  new  ArrayIndexOutOfBoundsException(pathNames[0],  pathNames[1]);  [BUGGY]      return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	replace	}    else    if(o    instanceof    JsonObject    ||    o    instanceof    Boolean)    {    ArrayIndexOutOfBoundsException  e  =  new  ArrayIndexOutOfBoundsException(pathNames[0],  pathNames[1]);	  	non-compiled	[CE]  no  suitable  constructor  found  for  ArrayIndexOutOfBoundsException(String,String)	53	None	add
1374	[BUG]  [BUGGY]  }  else  if(o  instanceof  JsonObject  ||  o  instanceof  Boolean)  {  instanceof  JsonObject  ||  o  instanceof  Boolean)  {  [CE]  illegal  start  of  expression  [FE]          ArrayIndexOutOfBoundsException    [CONTEXT]      if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }      [BUGGY]  }  else  if(o  instanceof  JsonObject  ||  o  instanceof  Boolean)  {  instanceof  JsonObject  ||  o  instanceof  Boolean)  {  [BUGGY]      return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	replace	}    else    if(o    instanceof    JsonObject    ||    o    instanceof    Boolean)    {    instanceof  JsonObject  ||  o  instanceof  Boolean)  {	  	non-compiled	[CE]  illegal  start  of  expression	53	None	add
1375	[BUG]  [BUGGY]  }  else  if(o  instanceof  JsonArray)  {  }  else  if(!(o  instanceof  JsonArray))  {  return  JsonToken.BEGIN_ARRAY;  }  [CE]  illegal  start  of  type  [FE]                      ArrayIndexOutOfBoundsException      [CONTEXT]      if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }      [BUGGY]  }  else  if(o  instanceof  JsonArray)  {  }  else  if(!(o  instanceof  JsonArray))  {  return  JsonToken.BEGIN_ARRAY;  }  [BUGGY]      return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	replace	}  else  if(o  instanceof  JsonArray)  {  }  else  if(!(o  instanceof  JsonArray))  {  return  JsonToken.BEGIN_ARRAY;  }	  }    else    if(!(o    instanceof    JsonArray))    {    }    else    if(!(o    instanceof    JsonArray))    <    return    JsonToken.BEGIN_ARRAY;    	non-compiled	[CE]  illegal  start  of  type	90	None	replace
1376	[BUG]  [BUGGY]  }  else  if(o  instanceof  JsonNull  ||  o  instanceof  JsonNull)  {  return  JsonToken.BEGIN_OBJECT;  }  else  if(o  instanceof  JsonNull  ||  o  instanceof  JsonNull)  {  [CE]  missing  return  statement  [FE]    AssertionError    [CONTEXT]      if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }      [BUGGY]  }  else  if(o  instanceof  JsonNull  ||  o  instanceof  JsonNull)  {  return  JsonToken.BEGIN_OBJECT;  }  else  if(o  instanceof  JsonNull  ||  o  instanceof  JsonNull)  {  [BUGGY]      return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	replace	}    else    if(o    instanceof    JsonNull    ||    o    instanceof    JsonNull)    {    return  JsonToken.BEGIN_OBJECT;  }  else  if(o  instanceof  JsonNull  ||  o  instanceof  JsonNull)  {	  	non-compiled	[CE]  missing  return  statement	1	None	add
1377	[BUG]  [BUGGY]  }  else  if(o  instanceof  JsonNull  ||  o  instanceof  JsonNull)  {  if(o  instanceof  JsonNull  ||  o  instanceof  JsonNull)  {  [CE]  illegal  start  of  expression  [FE]      AssertionError    [CONTEXT]      if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }      [BUGGY]  }  else  if(o  instanceof  JsonNull  ||  o  instanceof  JsonNull)  {  if(o  instanceof  JsonNull  ||  o  instanceof  JsonNull)  {  [BUGGY]      return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	replace	}    else    if(o    instanceof    JsonNull    ||    o    instanceof    JsonNull)    {    if(o  instanceof  JsonNull  ||  o  instanceof  JsonNull)  {	  	non-compiled	[CE]  illegal  start  of  expression	1	None	add
1378	[BUG]  [BUGGY]  [FE]  ArrayIndexOutOfBoundsException  [FE]        AssertionError    [CONTEXT]      if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }      [BUGGY]  }  else  if(o  instanceof  JsonNull  ||  o  instanceof  JsonNull)  {  return  JsonToken.BEGIN_OBJECT;  [BUGGY]      return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	add	}    else    if(o    instanceof    JsonNull    ||    o    instanceof    JsonNull)    {    return  JsonToken.BEGIN_OBJECT;	  	compilable	  [FE]  ArrayIndexOutOfBoundsException  	1	2	add
1379	[BUG]  [BUGGY]  }  else  if(o  instanceof  JsonNull  ||  o  instanceof  JsonNull)  {  return  JsonToken.BEGIN_OBJECT;  [FE]  ArrayIndexOutOfBoundsException  [FE]        AssertionError    [CONTEXT]      if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }      [BUGGY]  }  else  if(o  instanceof  JsonNull  ||  o  instanceof  JsonNull)  {  return  JsonToken.BEGIN_OBJECT;  [BUGGY]      return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	replace	}    else    if(o    instanceof    JsonNull    ||    o    instanceof    JsonNull)    {    return  JsonToken.BEGIN_OBJECT;	  	compilable	  [FE]  ArrayIndexOutOfBoundsException  	1	2	add
1380	[BUG]  [BUGGY]  }  else  if(o  instanceof  JsonNull  ||  o  instanceof  JsonNull)  {  }  else  if(o  instanceof  JsonNull  ||  o  instanceof  JSONNull)  {  [CE]  cannot  find  symbol  [FE]          AssertionError    [CONTEXT]      if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }      [BUGGY]  }  else  if(o  instanceof  JsonNull  ||  o  instanceof  JsonNull)  {  }  else  if(o  instanceof  JsonNull  ||  o  instanceof  JSONNull)  {  [BUGGY]      return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	replace	}    else    if(o    instanceof    JsonNull    ||    o    instanceof    JsonNull)    {    }  else  if(o  instanceof  JsonNull  ||  o  instanceof  JSONNull)  {	  	non-compiled	[CE]  cannot  find  symbol	1	None	add
1381	[BUG]  [BUGGY]  }  else  if(o  instanceof  JsonObject  ||  o  instanceof  JsonSequence)  {  [CE]  cannot  find  symbol  [FE]              ArrayIndexOutOfBoundsException      [CONTEXT]      if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }      [BUGGY]  }  else  if(o  instanceof  JsonObject  ||  o  instanceof  JsonSequence)  {  [BUGGY]      return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	replace	}  else  if(o  instanceof  JsonObject  ||  o  instanceof  JsonSequence)  {	  }    else    if(o    instanceof    JsonObject    ||    o    instanceof    JsonArray)    {    instanceof    JsonObject    ||    o    instanceof    JsonArray)    {    	non-compiled	[CE]  cannot  find  symbol	196	None	replace
1382	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }      [BUGGY]  }  else  if(o  instanceof  JsonNull  &&!(o  instanceof  JsonNull))  {  [BUGGY]      return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	add	}  else  if(o  instanceof  JsonNull  &&!(o  instanceof  JsonNull))  {	  }    else    if(o    instanceof    JsonNull    ||    o    instanceof    JsonNull)    {    	compilable	  [FE]  AssertionError  	2	2	replace
1383	[BUG]  [BUGGY]  }  else  if(o  instanceof  JsonNull  &&!(o  instanceof  JsonNull))  {  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }      [BUGGY]  }  else  if(o  instanceof  JsonNull  &&!(o  instanceof  JsonNull))  {  [BUGGY]      return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	replace	}  else  if(o  instanceof  JsonNull  &&!(o  instanceof  JsonNull))  {	  }    else    if(o    instanceof    JsonNull    ||    o    instanceof    JsonNull)    {    	compilable	  [FE]  AssertionError  	2	2	replace
1384	[BUG]  [BUGGY]  }  else  if(o  instanceof  JsonNull  ||  o  instanceof  JsonNumber)  {  [CE]  cannot  find  symbol  [FE]      AssertionError    [CONTEXT]      if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }      [BUGGY]  }  else  if(o  instanceof  JsonNull  ||  o  instanceof  JsonNumber)  {  [BUGGY]      return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	replace	}  else  if(o  instanceof  JsonNull  ||  o  instanceof  JsonNumber)  {	  }    else    if(o    instanceof    JsonNull    ||    o    instanceof    JsonNull)    {    	non-compiled	[CE]  cannot  find  symbol	2	None	replace
1385	[BUG]  [BUGGY]  }  else  if(o  instanceof  JsonObject)  {  case  JsonToken.BEGIN_OBJECT:  return  JsonToken.BEGIN_OBJECT;  [CE]  orphaned  case  [FE]              ArrayIndexOutOfBoundsException      [CONTEXT]      if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }      [BUGGY]  }  else  if(o  instanceof  JsonObject)  {  case  JsonToken.BEGIN_OBJECT:  return  JsonToken.BEGIN_OBJECT;  [BUGGY]      return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	replace	}  else  if(o  instanceof  JsonObject)  {  case  JsonToken.BEGIN_OBJECT:  return  JsonToken.BEGIN_OBJECT;	  }    else    if(o    instanceof    JsonObject    ||    o    instanceof    JsonArray)    {    }    else    if(o    instanceof    JsonObject    ||    o    instanceof    JsonArray)    {    case    JsonToken.BEGIN_OBJECT:    return    JsonToken.BEGIN_OBJECT;    	non-compiled	[CE]  orphaned  case	234	None	replace
1386	[BUG]  [BUGGY]  }  else  if(o  instanceof  JsonObject  ||  o  instanceof  JsonLocal)  {  case  JsonToken.BEGIN_OBJECT:  return  JsonToken.BEGIN_OBJECT;  [CE]  orphaned  case  [FE]                ArrayIndexOutOfBoundsException      [CONTEXT]      if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }      [BUGGY]  }  else  if(o  instanceof  JsonObject  ||  o  instanceof  JsonLocal)  {  case  JsonToken.BEGIN_OBJECT:  return  JsonToken.BEGIN_OBJECT;  [BUGGY]      return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	replace	}  else  if(o  instanceof  JsonObject  ||  o  instanceof  JsonLocal)  {  case  JsonToken.BEGIN_OBJECT:  return  JsonToken.BEGIN_OBJECT;	  }    else    if(o    instanceof    JsonObject    ||    o    instanceof    JsonArray)    {    }    else    if(o    instanceof    JsonObject    ||    o    instanceof    JsonArray)    {    case    JsonToken.BEGIN_OBJECT:    return    JsonToken.BEGIN_OBJECT;    	non-compiled	[CE]  orphaned  case	234	None	replace
1387	[BUG]  [BUGGY]  }  else  if(o  instanceof  JsonObject  ||  o  instanceof  String  ||  o  instanceof  Class  <?>)  {  }  else  if(o  instanceof  JsonObject  ||  o  instanceof  String  ||  o  instanceof  Class  <?>)  {  return  JsonToken.BEGIN_OBJECT;  }  else  if(o  instanceof  JsonObject  ||  o  instanceof  String  ||  o  instanceof  Class  <?>)  {  [CE]  missing  return  statement  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]      if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }      [BUGGY]  }  else  if(o  instanceof  JsonObject  ||  o  instanceof  String  ||  o  instanceof  Class  <?>)  {  }  else  if(o  instanceof  JsonObject  ||  o  instanceof  String  ||  o  instanceof  Class  <?>)  {  return  JsonToken.BEGIN_OBJECT;  }  else  if(o  instanceof  JsonObject  ||  o  instanceof  String  ||  o  instanceof  Class  <?>)  {  [BUGGY]      return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	replace	}    else    if(o    instanceof    JsonObject    ||    o    instanceof    String    ||    o    instanceof    Class    <?>)    {    }  else  if(o  instanceof  JsonObject  ||  o  instanceof  String  ||  o  instanceof  Class  <?>)  {  return  JsonToken.BEGIN_OBJECT;  }  else  if(o  instanceof  JsonObject  ||  o  instanceof  String  ||  o  instanceof  Class  <?>)  {	  	non-compiled	[CE]  missing  return  statement	244	None	add
1388	[BUG]  [BUGGY]  [FE]  ArrayIndexOutOfBoundsException  [FE]      ArrayIndexOutOfBoundsException    [CONTEXT]      if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }      [BUGGY]  }  else  if(o  instanceof  JsonObject  ||  o  instanceof  String  ||  o  instanceof  Class  <?>)  {  return  JsonToken.BEGIN_OBJECT;  [BUGGY]      return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	add	}    else    if(o    instanceof    JsonObject    ||    o    instanceof    String    ||    o    instanceof    Class    <?>)    {    return  JsonToken.BEGIN_OBJECT;	  	compilable	  [FE]  ArrayIndexOutOfBoundsException  	244	2	add
1389	[BUG]  [BUGGY]  }  else  if(o  instanceof  JsonObject  ||  o  instanceof  String  ||  o  instanceof  Class  <?>)  {  return  JsonToken.BEGIN_OBJECT;  [FE]  ArrayIndexOutOfBoundsException  [FE]      ArrayIndexOutOfBoundsException    [CONTEXT]      if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }      [BUGGY]  }  else  if(o  instanceof  JsonObject  ||  o  instanceof  String  ||  o  instanceof  Class  <?>)  {  return  JsonToken.BEGIN_OBJECT;  [BUGGY]      return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	replace	}    else    if(o    instanceof    JsonObject    ||    o    instanceof    String    ||    o    instanceof    Class    <?>)    {    return  JsonToken.BEGIN_OBJECT;	  	compilable	  [FE]  ArrayIndexOutOfBoundsException  	244	2	add
1390	[BUG]  [BUGGY]  }  else  if(o  instanceof  JsonObject  ||  o  instanceof  String  ||  o  instanceof  Class  <?>)  {  }  else  if(o  instanceof  JsonObject  ||  o  instanceof  String  ||  o  instanceof  Class  <?>)  {  return  JsonToken.BEGIN_OBJECT;  }  else  if(o  instanceof  JSONObject  ||  o  instanceof  String  ||  o  instanceof  Class  <?>)  {  [CE]  cannot  find  symbol  [FE]        ArrayIndexOutOfBoundsException    [CONTEXT]      if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }      [BUGGY]  }  else  if(o  instanceof  JsonObject  ||  o  instanceof  String  ||  o  instanceof  Class  <?>)  {  }  else  if(o  instanceof  JsonObject  ||  o  instanceof  String  ||  o  instanceof  Class  <?>)  {  return  JsonToken.BEGIN_OBJECT;  }  else  if(o  instanceof  JSONObject  ||  o  instanceof  String  ||  o  instanceof  Class  <?>)  {  [BUGGY]      return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	replace	}    else    if(o    instanceof    JsonObject    ||    o    instanceof    String    ||    o    instanceof    Class    <?>)    {    }  else  if(o  instanceof  JsonObject  ||  o  instanceof  String  ||  o  instanceof  Class  <?>)  {  return  JsonToken.BEGIN_OBJECT;  }  else  if(o  instanceof  JSONObject  ||  o  instanceof  String  ||  o  instanceof  Class  <?>)  {	  	non-compiled	[CE]  cannot  find  symbol	244	None	add
1391	[BUG]  [BUGGY]  }  else  if(o  instanceof  JsonObject  ||  o  instanceof  String  ||  o  instanceof  Class  <?>)  {  }  else  if(o  instanceof  JsonObject  ||  o  instanceof  String  ||  o  instanceof  Class  <?>)  {  return  JsonToken.BEGIN_OBJECT;  }  else  if(o  instanceof  JsonObject  ||  o  instanceof  Character  ||  o  instanceof  Class  <?>)  {  [CE]  missing  return  statement  [FE]          ArrayIndexOutOfBoundsException    [CONTEXT]      if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }      [BUGGY]  }  else  if(o  instanceof  JsonObject  ||  o  instanceof  String  ||  o  instanceof  Class  <?>)  {  }  else  if(o  instanceof  JsonObject  ||  o  instanceof  String  ||  o  instanceof  Class  <?>)  {  return  JsonToken.BEGIN_OBJECT;  }  else  if(o  instanceof  JsonObject  ||  o  instanceof  Character  ||  o  instanceof  Class  <?>)  {  [BUGGY]      return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	replace	}    else    if(o    instanceof    JsonObject    ||    o    instanceof    String    ||    o    instanceof    Class    <?>)    {    }  else  if(o  instanceof  JsonObject  ||  o  instanceof  String  ||  o  instanceof  Class  <?>)  {  return  JsonToken.BEGIN_OBJECT;  }  else  if(o  instanceof  JsonObject  ||  o  instanceof  Character  ||  o  instanceof  Class  <?>)  {	  	non-compiled	[CE]  missing  return  statement	244	None	add
1392	[BUG]  [BUGGY]  }  else  if(!(o  instanceof  JsonObject  ||  o  instanceof  JsonString))  {  [CE]  cannot  find  symbol  [FE]        ArrayIndexOutOfBoundsException      [CONTEXT]      if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }      [BUGGY]  }  else  if(!(o  instanceof  JsonObject  ||  o  instanceof  JsonString))  {  [BUGGY]      return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	replace	}  else  if(!(o  instanceof  JsonObject  ||  o  instanceof  JsonString))  {	  }    else    if(o    instanceof    JsonObject    ||    o    instanceof    JsonString)    {    	non-compiled	[CE]  cannot  find  symbol	183	None	replace
1393	[BUG]  [BUGGY]  }  else  if(o  instanceof  JsonArray  ||  o  instanceof  JsonString)  {  [CE]  cannot  find  symbol  [FE]          ArrayIndexOutOfBoundsException      [CONTEXT]      if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }      [BUGGY]  }  else  if(o  instanceof  JsonArray  ||  o  instanceof  JsonString)  {  [BUGGY]      return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	replace	}  else  if(o  instanceof  JsonArray  ||  o  instanceof  JsonString)  {	  }    else    if(o    instanceof    JsonObject    ||    o    instanceof    JsonString)    {    	non-compiled	[CE]  cannot  find  symbol	183	None	replace
1394	[BUG]  [BUGGY]  }  else  if(o  instanceof  JsonNumber  ||  o  instanceof  JsonLiteral)  {  [CE]  cannot  find  symbol  [FE]                              ArrayIndexOutOfBoundsException      [CONTEXT]      if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }      [BUGGY]  }  else  if(o  instanceof  JsonNumber  ||  o  instanceof  JsonLiteral)  {  [BUGGY]      return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	replace	}  else  if(o  instanceof  JsonNumber  ||  o  instanceof  JsonLiteral)  {	  }    else    if(o    instanceof    JsonNumber    ||    o    instanceof    JsonPrimitive)    {    	non-compiled	[CE]  cannot  find  symbol	117	None	replace
1395	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]                      ArrayIndexOutOfBoundsException      [CONTEXT]      if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }      [BUGGY]  }  else  if(o  instanceof  JsonNull  ||  o  instanceof  JsonArray)  {  [BUGGY]      return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	add	}  else  if(o  instanceof  JsonNull  ||  o  instanceof  JsonArray)  {	  }    else    if(o    instanceof    JsonNumber    ||    o    instanceof    JsonArray)    {    	compilable	  [FE]  AssertionError  	113	2	replace
1396	[BUG]  [BUGGY]  }  else  if(o  instanceof  JsonNull  ||  o  instanceof  JsonArray)  {  [FE]  AssertionError  [FE]                      ArrayIndexOutOfBoundsException      [CONTEXT]      if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }      [BUGGY]  }  else  if(o  instanceof  JsonNull  ||  o  instanceof  JsonArray)  {  [BUGGY]      return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	replace	}  else  if(o  instanceof  JsonNull  ||  o  instanceof  JsonArray)  {	  }    else    if(o    instanceof    JsonNumber    ||    o    instanceof    JsonArray)    {    	compilable	  [FE]  AssertionError  	113	2	replace
1397	[BUG]  [BUGGY]  Object[]  stack  =(Object[])stack.get(stack.size()  -  1);  return  JsonToken.BEGIN_OBJECT;  [CE]  cannot  find  symbol  [FE]                                  ArrayIndexOutOfBoundsException      [CONTEXT]      if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }      [BUGGY]  Object[]  stack  =(Object[])stack.get(stack.size()  -  1);  return  JsonToken.BEGIN_OBJECT;  [BUGGY]      return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	replace	Object[]  stack  =(Object[])stack.get(stack.size()  -  1);  return  JsonToken.BEGIN_OBJECT;	  if(o    instanceof    JsonArray)    {    Object[]    stack    =(Object[])o;    push(stack.size()    -    stack.length);    return    JsonToken.BEGIN_OBJECT;    }    	non-compiled	[CE]  cannot  find  symbol	39	None	replace
1398	[BUG]  [BUGGY]  Object[]  stack  =(Object[])stack.peek();  push(stack.size()  -  stack.length);  return  JsonToken.BEGIN_OBJECT;  [CE]  cannot  find  symbol  [FE]                                    ArrayIndexOutOfBoundsException      [CONTEXT]      if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }      [BUGGY]  Object[]  stack  =(Object[])stack.peek();  push(stack.size()  -  stack.length);  return  JsonToken.BEGIN_OBJECT;  [BUGGY]      return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	replace	Object[]  stack  =(Object[])stack.peek();  push(stack.size()  -  stack.length);  return  JsonToken.BEGIN_OBJECT;	  if(o    instanceof    JsonArray)    {    Object[]    stack    =(Object[])o;    push(stack.size()    -    stack.length);    return    JsonToken.BEGIN_OBJECT;    }    	non-compiled	[CE]  cannot  find  symbol	39	None	replace
1399	[BUG]  [BUGGY]  Object[]  stack  =(Object[])stack.get(stack.length  -  1);  return  JsonToken.BEGIN_OBJECT;  [CE]  cannot  find  symbol  [FE]                                      ArrayIndexOutOfBoundsException      [CONTEXT]      if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }      [BUGGY]  Object[]  stack  =(Object[])stack.get(stack.length  -  1);  return  JsonToken.BEGIN_OBJECT;  [BUGGY]      return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	replace	Object[]  stack  =(Object[])stack.get(stack.length  -  1);  return  JsonToken.BEGIN_OBJECT;	  if(o    instanceof    JsonArray)    {    Object[]    stack    =(Object[])o;    push(stack.size()    -    stack.length);    return    JsonToken.BEGIN_OBJECT;    }    	non-compiled	[CE]  cannot  find  symbol	39	None	replace
1400	[BUG]  [BUGGY]  }  else  if(o  instanceof  JsonLong  ||  o  instanceof  JsonArray)  {  [CE]  cannot  find  symbol  [FE]                    ArrayIndexOutOfBoundsException      [CONTEXT]      if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }      [BUGGY]  }  else  if(o  instanceof  JsonLong  ||  o  instanceof  JsonArray)  {  [BUGGY]      return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	replace	}  else  if(o  instanceof  JsonLong  ||  o  instanceof  JsonArray)  {	  }    else    if(o    instanceof    JsonLong)    {    	non-compiled	[CE]  cannot  find  symbol	128	None	replace
1401	[BUG]  [BUGGY]  }  else  if(o  instanceof  JsonObject  <  <  illegal  start  of  expression)  {  [CE]  illegal  start  of  type  [FE]            ArrayIndexOutOfBoundsException      [CONTEXT]      if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }      [BUGGY]  }  else  if(o  instanceof  JsonObject  <  <  illegal  start  of  expression)  {  [BUGGY]      return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	replace	}  else  if(o  instanceof  JsonObject  <  <  illegal  start  of  expression)  {	  }    else    if(o    instanceof    JsonObject    ==    	non-compiled	[CE]  illegal  start  of  type	129	None	replace
1402	[BUG]  [BUGGY]  }  else  if(o  instanceof  JsonObject  <  >  illegal  start  of  expression  >>  [CE]  illegal  start  of  type  [FE]              ArrayIndexOutOfBoundsException      [CONTEXT]      if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }      [BUGGY]  }  else  if(o  instanceof  JsonObject  <  >  illegal  start  of  expression  >>  [BUGGY]      return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	replace	}  else  if(o  instanceof  JsonObject  <  >  illegal  start  of  expression  >>	  }    else    if(o    instanceof    JsonObject    ==    	non-compiled	[CE]  illegal  start  of  type	129	None	replace
1403	[BUG]  [BUGGY]  }  else  if(o  instanceof  JsonObject  ==  [Delete]  [CE]  illegal  start  of  expression  [FE]                ArrayIndexOutOfBoundsException      [CONTEXT]      if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }      [BUGGY]  }  else  if(o  instanceof  JsonObject  ==  [Delete]  [BUGGY]      return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	replace	}  else  if(o  instanceof  JsonObject  ==  [Delete]	  }    else    if(o    instanceof    JsonObject    ==    	non-compiled	[CE]  illegal  start  of  expression	129	None	replace
1404	[BUG]  [BUGGY]  }  else  if(o  instanceof  JsonObject  ||  isObject  ||  o  instanceof  JsonNumber)  {  [CE]  cannot  find  symbol  isObject  [FE]                ArrayIndexOutOfBoundsException      [CONTEXT]      if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }      [BUGGY]  }  else  if(o  instanceof  JsonObject  ||  isObject  ||  o  instanceof  JsonNumber)  {  [BUGGY]      return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	replace	}  else  if(o  instanceof  JsonObject  ||  isObject  ||  o  instanceof  JsonNumber)  {	  }    else    if(o    instanceof    JsonObject    ||    o    instanceof    JsonNumber    ||    isObject)    {    	non-compiled	[CE]  cannot  find  symbol  isObject	123	None	replace
1405	[BUG]  [BUGGY]  }  else  if(isObject  ||  o  instanceof  JsonObject  ||  isObject)  {  [CE]  cannot  find  symbol  isObject  [FE]                  ArrayIndexOutOfBoundsException      [CONTEXT]      if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }      [BUGGY]  }  else  if(isObject  ||  o  instanceof  JsonObject  ||  isObject)  {  [BUGGY]      return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	replace	}  else  if(isObject  ||  o  instanceof  JsonObject  ||  isObject)  {	  }    else    if(o    instanceof    JsonObject    ||    o    instanceof    JsonNumber    ||    isObject)    {    	non-compiled	[CE]  cannot  find  symbol  isObject	123	None	replace
1406	[BUG]  [BUGGY]  }  else  if(o  instanceof  JsonArray  ||  o  instanceof  JsonType)  {  [CE]  cannot  find  symbol  [FE]          ArrayIndexOutOfBoundsException      [CONTEXT]      if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }      [BUGGY]  }  else  if(o  instanceof  JsonArray  ||  o  instanceof  JsonType)  {  [BUGGY]      return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	replace	}  else  if(o  instanceof  JsonArray  ||  o  instanceof  JsonType)  {	  }    else    if(o    instanceof    JsonObject    ||    o    instanceof    JsonType)    {    	non-compiled	[CE]  cannot  find  symbol	43	None	replace
1407	[BUG]  [BUGGY]  Object  o  =  iterator.get();  [CE]  variable  o  is  already  defined  in  method  peek()  [FE]                        ArrayIndexOutOfBoundsException      [CONTEXT]      if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }      [BUGGY]  Object  o  =  iterator.get();  [BUGGY]      return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	replace	Object  o  =  iterator.get();	  Object    o    =    iterator.next();    	non-compiled	[CE]  variable  o  is  already  defined  in  method  peek()	185	None	replace
1408	[BUG]  [BUGGY]  Object  o  =  iterator.previous();  [CE]  variable  o  is  already  defined  in  method  peek()  [FE]                          ArrayIndexOutOfBoundsException      [CONTEXT]      if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }      [BUGGY]  Object  o  =  iterator.previous();  [BUGGY]      return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	replace	Object  o  =  iterator.previous();	  Object    o    =    iterator.next();    	non-compiled	[CE]  variable  o  is  already  defined  in  method  peek()	185	None	replace
1409	[BUG]  [BUGGY]  }  else  if(o  instanceof  JsonArray  ||  o  instanceof  JsonObject)  {  }  else  if(o  instanceof  JsonArray  ||  o  instanceof  JsonObject)  {  return  JsonToken.BEGIN_OBJECT;  }  else  if(o  instanceof  JsonArray)  {  [CE]  missing  return  statement  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]      if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }      [BUGGY]  }  else  if(o  instanceof  JsonArray  ||  o  instanceof  JsonObject)  {  }  else  if(o  instanceof  JsonArray  ||  o  instanceof  JsonObject)  {  return  JsonToken.BEGIN_OBJECT;  }  else  if(o  instanceof  JsonArray)  {  [BUGGY]      return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	replace	}    else    if(o    instanceof    JsonArray    ||    o    instanceof    JsonObject)    {    }  else  if(o  instanceof  JsonArray  ||  o  instanceof  JsonObject)  {  return  JsonToken.BEGIN_OBJECT;  }  else  if(o  instanceof  JsonArray)  {	  	non-compiled	[CE]  missing  return  statement	163	None	add
1410	[BUG]  [BUGGY]  }  else  if(o  instanceof  JsonArray  ||  o  instanceof  JsonObject)  {  }  else  if(o  instanceof  JsonArray  ||  o  instanceof  JsonObject)  {  return  JsonToken.BEGIN_OBJECT;  }  else  if(o  instanceof  JsonObject)  {  [CE]  missing  return  statement  [FE]      ArrayIndexOutOfBoundsException    [CONTEXT]      if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }      [BUGGY]  }  else  if(o  instanceof  JsonArray  ||  o  instanceof  JsonObject)  {  }  else  if(o  instanceof  JsonArray  ||  o  instanceof  JsonObject)  {  return  JsonToken.BEGIN_OBJECT;  }  else  if(o  instanceof  JsonObject)  {  [BUGGY]      return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	replace	}    else    if(o    instanceof    JsonArray    ||    o    instanceof    JsonObject)    {    }  else  if(o  instanceof  JsonArray  ||  o  instanceof  JsonObject)  {  return  JsonToken.BEGIN_OBJECT;  }  else  if(o  instanceof  JsonObject)  {	  	non-compiled	[CE]  missing  return  statement	163	None	add
1411	[BUG]  [BUGGY]  }  else  if(o  instanceof  JsonArray)  {  }  else  if(o  instanceof  JsonObject  ||  o  instanceof  String)  <  return  JsonToken.BEGIN_OBJECT;  [CE]  illegal  start  of  type  [FE]            ArrayIndexOutOfBoundsException      [CONTEXT]      if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }      [BUGGY]  }  else  if(o  instanceof  JsonArray)  {  }  else  if(o  instanceof  JsonObject  ||  o  instanceof  String)  <  return  JsonToken.BEGIN_OBJECT;  [BUGGY]      return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	replace	}  else  if(o  instanceof  JsonArray)  {  }  else  if(o  instanceof  JsonObject  ||  o  instanceof  String)  <  return  JsonToken.BEGIN_OBJECT;	  }    else    if(o    instanceof    JsonObject    ||    o    instanceof    String)    {    }    else    if(o    instanceof    JsonObject    ||    o    instanceof    String)    <    return    JsonToken.BEGIN_OBJECT;    	non-compiled	[CE]  illegal  start  of  type	18	None	replace
1412	[BUG]  [BUGGY]  }  else  if(o  instanceof  JsonObject)  {  }  else  if(o  instanceof  JsonObject  ||  o  instanceof  String)  {  return  JsonToken.BEGIN_OBJECT;  }  [CE]  illegal  start  of  type  [FE]              ArrayIndexOutOfBoundsException      [CONTEXT]      if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }      [BUGGY]  }  else  if(o  instanceof  JsonObject)  {  }  else  if(o  instanceof  JsonObject  ||  o  instanceof  String)  {  return  JsonToken.BEGIN_OBJECT;  }  [BUGGY]      return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	replace	}  else  if(o  instanceof  JsonObject)  {  }  else  if(o  instanceof  JsonObject  ||  o  instanceof  String)  {  return  JsonToken.BEGIN_OBJECT;  }	  }    else    if(o    instanceof    JsonObject    ||    o    instanceof    String)    {    }    else    if(o    instanceof    JsonObject    ||    o    instanceof    String)    <    return    JsonToken.BEGIN_OBJECT;    	non-compiled	[CE]  illegal  start  of  type	18	None	replace
1413	[BUG]  [BUGGY]  }  else  if(o  instanceof  JsonArray)  {  }  else  if(o  instanceof  JsonObject  ||  o  instanceof  String)  {  return  JsonToken.BEGIN_OBJECT;  }  [CE]  illegal  start  of  type  [FE]                ArrayIndexOutOfBoundsException      [CONTEXT]      if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }      [BUGGY]  }  else  if(o  instanceof  JsonArray)  {  }  else  if(o  instanceof  JsonObject  ||  o  instanceof  String)  {  return  JsonToken.BEGIN_OBJECT;  }  [BUGGY]      return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	replace	}  else  if(o  instanceof  JsonArray)  {  }  else  if(o  instanceof  JsonObject  ||  o  instanceof  String)  {  return  JsonToken.BEGIN_OBJECT;  }	  }    else    if(o    instanceof    JsonObject    ||    o    instanceof    String)    {    }    else    if(o    instanceof    JsonObject    ||    o    instanceof    String)    <    return    JsonToken.BEGIN_OBJECT;    	non-compiled	[CE]  illegal  start  of  type	18	None	replace
1414	[BUG]  [BUGGY]  }  else  if(o  instanceof  JsonObject  ||  o  instanceof  String  ||  o  instanceof  Boolean)  {  }  else  if(o  instanceof  JsonObject  ||  o  instanceof  String  ||  o  instanceof  Boolean)  {  return  JsonToken.BEGIN_OBJECT;  }  else  if(o  instanceof  JSONObject  ||  o  instanceof  String  ||  o  instanceof  Boolean)  {  [CE]  cannot  find  symbol  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]      if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }      [BUGGY]  }  else  if(o  instanceof  JsonObject  ||  o  instanceof  String  ||  o  instanceof  Boolean)  {  }  else  if(o  instanceof  JsonObject  ||  o  instanceof  String  ||  o  instanceof  Boolean)  {  return  JsonToken.BEGIN_OBJECT;  }  else  if(o  instanceof  JSONObject  ||  o  instanceof  String  ||  o  instanceof  Boolean)  {  [BUGGY]      return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	replace	}    else    if(o    instanceof    JsonObject    ||    o    instanceof    String    ||    o    instanceof    Boolean)    {    }  else  if(o  instanceof  JsonObject  ||  o  instanceof  String  ||  o  instanceof  Boolean)  {  return  JsonToken.BEGIN_OBJECT;  }  else  if(o  instanceof  JSONObject  ||  o  instanceof  String  ||  o  instanceof  Boolean)  {	  	non-compiled	[CE]  cannot  find  symbol	246	None	add
1415	[BUG]  [BUGGY]  }  else  if(o  instanceof  JsonObject  ||  o  instanceof  String  ||  o  instanceof  Boolean)  {  }  else  if(o  instanceof  JsonObject  ||  o  instanceof  String  ||  o  instanceof  Boolean)  {  return  JsonToken.BEGIN_OBJECT;  }  else  if(o  instanceof  JsonString  ||  o  instanceof  Boolean)  {  [CE]  cannot  find  symbol  [FE]      ArrayIndexOutOfBoundsException    [CONTEXT]      if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }      [BUGGY]  }  else  if(o  instanceof  JsonObject  ||  o  instanceof  String  ||  o  instanceof  Boolean)  {  }  else  if(o  instanceof  JsonObject  ||  o  instanceof  String  ||  o  instanceof  Boolean)  {  return  JsonToken.BEGIN_OBJECT;  }  else  if(o  instanceof  JsonString  ||  o  instanceof  Boolean)  {  [BUGGY]      return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	replace	}    else    if(o    instanceof    JsonObject    ||    o    instanceof    String    ||    o    instanceof    Boolean)    {    }  else  if(o  instanceof  JsonObject  ||  o  instanceof  String  ||  o  instanceof  Boolean)  {  return  JsonToken.BEGIN_OBJECT;  }  else  if(o  instanceof  JsonString  ||  o  instanceof  Boolean)  {	  	non-compiled	[CE]  cannot  find  symbol	246	None	add
1416	[BUG]  [BUGGY]  }  else  if(!(o  instanceof  JsonArray)&&  SENTINEL_CLOSED)  {  [CE]  bad  operand  types  for  binary  operator  '&&'  [FE]            ArrayIndexOutOfBoundsException      [CONTEXT]      if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }      [BUGGY]  }  else  if(!(o  instanceof  JsonArray)&&  SENTINEL_CLOSED)  {  [BUGGY]      return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	replace	}  else  if(!(o  instanceof  JsonArray)&&  SENTINEL_CLOSED)  {	  }    else    if(!(o    instanceof    JsonArray)&&    isObject)    {    	non-compiled	[CE]  bad  operand  types  for  binary  operator  '&&'	66	None	replace
1417	[BUG]  [BUGGY]  }  else  if(!(o  instanceof  JsonArray)&&  hasObject)  {  [CE]  cannot  find  symbol  hasObject  [FE]              ArrayIndexOutOfBoundsException      [CONTEXT]      if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }      [BUGGY]  }  else  if(!(o  instanceof  JsonArray)&&  hasObject)  {  [BUGGY]      return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	replace	}  else  if(!(o  instanceof  JsonArray)&&  hasObject)  {	  }    else    if(!(o    instanceof    JsonArray)&&    isObject)    {    	non-compiled	[CE]  cannot  find  symbol  hasObject	66	None	replace
1418	[BUG]  [BUGGY]  Object[]  stack  =(Object[])stack.clone();  push(stack.size()  -  stack.length);  return  JsonToken.BOOLEAN;  [CE]  cannot  find  symbol  [FE]                                ArrayIndexOutOfBoundsException      [CONTEXT]      if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }      [BUGGY]  Object[]  stack  =(Object[])stack.clone();  push(stack.size()  -  stack.length);  return  JsonToken.BOOLEAN;  [BUGGY]      return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	replace	Object[]  stack  =(Object[])stack.clone();  push(stack.size()  -  stack.length);  return  JsonToken.BOOLEAN;	  if(o    instanceof    JsonArray)    {    Object[]    stack    =(Object[])o;    push(stack.size()    -    stack.length);    return    JsonToken.BOOLEAN;    }    	non-compiled	[CE]  cannot  find  symbol	38	None	replace
1419	[BUG]  [BUGGY]  Object[]  stack  =(Object[])stack.get(stack.size()  -  1);  return  JsonToken.BOOLEAN;  [CE]  cannot  find  symbol  [FE]                                  ArrayIndexOutOfBoundsException      [CONTEXT]      if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }      [BUGGY]  Object[]  stack  =(Object[])stack.get(stack.size()  -  1);  return  JsonToken.BOOLEAN;  [BUGGY]      return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	replace	Object[]  stack  =(Object[])stack.get(stack.size()  -  1);  return  JsonToken.BOOLEAN;	  if(o    instanceof    JsonArray)    {    Object[]    stack    =(Object[])o;    push(stack.size()    -    stack.length);    return    JsonToken.BOOLEAN;    }    	non-compiled	[CE]  cannot  find  symbol	38	None	replace
1420	[BUG]  [BUGGY]  Stack[]  stack  =(Object[])o;  push(stack.size()  -  stack.length);  return  JsonToken.BOOLEAN;  [CE]  cannot  find  symbol  [FE]                                    ArrayIndexOutOfBoundsException      [CONTEXT]      if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }      [BUGGY]  Stack[]  stack  =(Object[])o;  push(stack.size()  -  stack.length);  return  JsonToken.BOOLEAN;  [BUGGY]      return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	replace	Stack[]  stack  =(Object[])o;  push(stack.size()  -  stack.length);  return  JsonToken.BOOLEAN;	  if(o    instanceof    JsonArray)    {    Object[]    stack    =(Object[])o;    push(stack.size()    -    stack.length);    return    JsonToken.BOOLEAN;    }    	non-compiled	[CE]  cannot  find  symbol	38	None	replace
1421	[BUG]  [BUGGY]  Object[]  stack  =(Object[])stack.get(stack.length  -  1);  return  JsonToken.BOOLEAN;  [CE]  cannot  find  symbol  [FE]                                      ArrayIndexOutOfBoundsException      [CONTEXT]      if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }      [BUGGY]  Object[]  stack  =(Object[])stack.get(stack.length  -  1);  return  JsonToken.BOOLEAN;  [BUGGY]      return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	replace	Object[]  stack  =(Object[])stack.get(stack.length  -  1);  return  JsonToken.BOOLEAN;	  if(o    instanceof    JsonArray)    {    Object[]    stack    =(Object[])o;    push(stack.size()    -    stack.length);    return    JsonToken.BOOLEAN;    }    	non-compiled	[CE]  cannot  find  symbol	38	None	replace
1422	[BUG]  [BUGGY]  }  else  if(o  instanceof  JsonObject  &&  o  instanceof  JsonNumber  ||!(o  instanceof  JsonArray))  {  [CE]  cannot  find  symbol  [FE]                  ArrayIndexOutOfBoundsException      [CONTEXT]      if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }      [BUGGY]  }  else  if(o  instanceof  JsonObject  &&  o  instanceof  JsonNumber  ||!(o  instanceof  JsonArray))  {  [BUGGY]      return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	replace	}  else  if(o  instanceof  JsonObject  &&  o  instanceof  JsonNumber  ||!(o  instanceof  JsonArray))  {	  }    else    if(o    instanceof    JsonObject    ||    o    instanceof    JsonNumber    ||!(o    instanceof    JsonArray))    {    	non-compiled	[CE]  cannot  find  symbol	124	None	replace
1423	[BUG]  [BUGGY]  }  else  if(isObject  ||  o  instanceof  JsonObject  ||  o  instanceof  JsonNumber  ||!(o  instanceof  JsonArray))  {  [CE]  cannot  find  symbol  isObject  [FE]                    ArrayIndexOutOfBoundsException      [CONTEXT]      if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }      [BUGGY]  }  else  if(isObject  ||  o  instanceof  JsonObject  ||  o  instanceof  JsonNumber  ||!(o  instanceof  JsonArray))  {  [BUGGY]      return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	replace	}  else  if(isObject  ||  o  instanceof  JsonObject  ||  o  instanceof  JsonNumber  ||!(o  instanceof  JsonArray))  {	  }    else    if(o    instanceof    JsonObject    ||    o    instanceof    JsonNumber    ||!(o    instanceof    JsonArray))    {    	non-compiled	[CE]  cannot  find  symbol  isObject	124	None	replace
1424	[BUG]  [BUGGY]  }  else  if(o  instanceof  JsonObject  ||  o  instanceof  JsonArray  ||!(o  instanceof  JsonNumber))  {  [CE]  cannot  find  symbol  [FE]                      ArrayIndexOutOfBoundsException      [CONTEXT]      if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }      [BUGGY]  }  else  if(o  instanceof  JsonObject  ||  o  instanceof  JsonArray  ||!(o  instanceof  JsonNumber))  {  [BUGGY]      return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	replace	}  else  if(o  instanceof  JsonObject  ||  o  instanceof  JsonArray  ||!(o  instanceof  JsonNumber))  {	  }    else    if(o    instanceof    JsonObject    ||    o    instanceof    JsonNumber    ||!(o    instanceof    JsonArray))    {    	non-compiled	[CE]  cannot  find  symbol	124	None	replace
1425	[BUG]  [BUGGY]  }  else  if(!(o  instanceof  JsonArray)||!(o  instanceof  JsonArray))  {  }  else  if(!(o  instanceof  JsonArray)||.(o  instanceof  JsonArray))  {  [CE]  illegal  start  of  expression  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]      if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }      [BUGGY]  }  else  if(!(o  instanceof  JsonArray)||!(o  instanceof  JsonArray))  {  }  else  if(!(o  instanceof  JsonArray)||.(o  instanceof  JsonArray))  {  [BUGGY]      return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	replace	}    else    if(!(o    instanceof    JsonArray)||!(o    instanceof    JsonArray))    {    }  else  if(!(o  instanceof  JsonArray)||.(o  instanceof  JsonArray))  {	  	non-compiled	[CE]  illegal  start  of  expression	248	None	add
1426	[BUG]  [BUGGY]  }  else  if(o  instanceof  JsonObject)  {  }  else  if(!(o  instanceof  JsonObject))  {  return  JsonToken.BEGIN_OBJECT;  }  [CE]  illegal  start  of  type  [FE]          AssertionError      [CONTEXT]      if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }      [BUGGY]  }  else  if(o  instanceof  JsonObject)  {  }  else  if(!(o  instanceof  JsonObject))  {  return  JsonToken.BEGIN_OBJECT;  }  [BUGGY]      return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	replace	}  else  if(o  instanceof  JsonObject)  {  }  else  if(!(o  instanceof  JsonObject))  {  return  JsonToken.BEGIN_OBJECT;  }	  }    else    if(!(o    instanceof    JsonObject))    {    }    else    if(!(o    instanceof    JsonObject))    <    return    JsonToken.BEGIN_OBJECT;    	non-compiled	[CE]  illegal  start  of  type	92	None	replace
1427	[BUG]  [BUGGY]  }  else  if(o  instanceof  JsonObject)  {  }  else  if(!(o  instanceof  JsonObject)&&  isObject)  {  return  JsonToken.BEGIN_OBJECT;  }  [CE]  illegal  start  of  type  [FE]            AssertionError      [CONTEXT]      if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }      [BUGGY]  }  else  if(o  instanceof  JsonObject)  {  }  else  if(!(o  instanceof  JsonObject)&&  isObject)  {  return  JsonToken.BEGIN_OBJECT;  }  [BUGGY]      return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	replace	}  else  if(o  instanceof  JsonObject)  {  }  else  if(!(o  instanceof  JsonObject)&&  isObject)  {  return  JsonToken.BEGIN_OBJECT;  }	  }    else    if(!(o    instanceof    JsonObject))    {    }    else    if(!(o    instanceof    JsonObject))    <    return    JsonToken.BEGIN_OBJECT;    	non-compiled	[CE]  illegal  start  of  type	92	None	replace
1428	[BUG]  [BUGGY]  }  else  if(o  instanceof  JsonObject)  {  }  else  if(!(o  instanceof  JsonObject))  <  return  JsonToken.BEGIN_OBJECT;  [CE]  illegal  start  of  type  [FE]              AssertionError      [CONTEXT]      if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }      [BUGGY]  }  else  if(o  instanceof  JsonObject)  {  }  else  if(!(o  instanceof  JsonObject))  <  return  JsonToken.BEGIN_OBJECT;  [BUGGY]      return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	replace	}  else  if(o  instanceof  JsonObject)  {  }  else  if(!(o  instanceof  JsonObject))  <  return  JsonToken.BEGIN_OBJECT;	  }    else    if(!(o    instanceof    JsonObject))    {    }    else    if(!(o    instanceof    JsonObject))    <    return    JsonToken.BEGIN_OBJECT;    	non-compiled	[CE]  illegal  start  of  type	92	None	replace
1429	[BUG]  [BUGGY]  }  else  if(!(o  instanceof  JsonObject))  {  ((  JsonObject)o).setObject(isObject?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY);  [CE]  cannot  find  symbol  isObject  [FE]          AssertionError      [CONTEXT]      if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }      [BUGGY]  }  else  if(!(o  instanceof  JsonObject))  {  ((  JsonObject)o).setObject(isObject?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY);  [BUGGY]      return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	replace	}  else  if(!(o  instanceof  JsonObject))  {  ((  JsonObject)o).setObject(isObject?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY);	  }    else    if(!(o    instanceof    JsonObject))    {    ((    JsonObject)o).setObject(isObject?    JsonToken.END_OBJECT    :    JsonToken.END_OBJECT);    	non-compiled	[CE]  cannot  find  symbol  isObject	157	None	replace
1430	[BUG]  [BUGGY]  }  else  if(o  instanceof  JsonArray)  {  ((  JsonObject)o).setObject(isObject?  JsonToken.END_OBJECT  :  JsonToken.END_OBJECT);  [CE]  cannot  find  symbol  isObject  [FE]            AssertionError      [CONTEXT]      if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }      [BUGGY]  }  else  if(o  instanceof  JsonArray)  {  ((  JsonObject)o).setObject(isObject?  JsonToken.END_OBJECT  :  JsonToken.END_OBJECT);  [BUGGY]      return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	replace	}  else  if(o  instanceof  JsonArray)  {  ((  JsonObject)o).setObject(isObject?  JsonToken.END_OBJECT  :  JsonToken.END_OBJECT);	  }    else    if(!(o    instanceof    JsonObject))    {    ((    JsonObject)o).setObject(isObject?    JsonToken.END_OBJECT    :    JsonToken.END_OBJECT);    	non-compiled	[CE]  cannot  find  symbol  isObject	157	None	replace
1431	[BUG]  [BUGGY]  }  else  if(o  instanceof  JsonNull)  {  return  JsonToken.END_OBJECT;  }  [CE]  illegal  start  of  type  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]      if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }      [BUGGY]  }  else  if(o  instanceof  JsonNull)  {  return  JsonToken.END_OBJECT;  }  [BUGGY]      return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	replace	}  else  if(o  instanceof  JsonNull)  {  return  JsonToken.END_OBJECT;  }	  }    else    if(o    instanceof    JsonNull)    {    return    JsonToken.BEGIN_OBJECT;    	non-compiled	[CE]  illegal  start  of  type	155	None	replace
1432	[BUG]  [BUGGY]  }  else  if(o  instanceof  JsonNull)  {  return  JsonToken.BEGIN_NUMBER_OBJECT;  }  [CE]  illegal  start  of  type  [FE]      ArrayIndexOutOfBoundsException    [CONTEXT]      if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }      [BUGGY]  }  else  if(o  instanceof  JsonNull)  {  return  JsonToken.BEGIN_NUMBER_OBJECT;  }  [BUGGY]      return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	replace	}  else  if(o  instanceof  JsonNull)  {  return  JsonToken.BEGIN_NUMBER_OBJECT;  }	  }    else    if(o    instanceof    JsonNull)    {    return    JsonToken.BEGIN_OBJECT;    	non-compiled	[CE]  illegal  start  of  type	155	None	replace
1433	[BUG]  [BUGGY]  }  else  if(o  instanceof  JsonNull  ||!(o  instanceof  JsonNull  &&!(o  instanceof  JsonNull)))  {  else  if(o  instanceof  JsonNull  ||!(o  instanceof  JsonNull  &&!(o  instanceof  JsonNull)))  {  [CE]  'else'  without  'if'  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]      if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }      [BUGGY]  }  else  if(o  instanceof  JsonNull  ||!(o  instanceof  JsonNull  &&!(o  instanceof  JsonNull)))  {  else  if(o  instanceof  JsonNull  ||!(o  instanceof  JsonNull  &&!(o  instanceof  JsonNull)))  {  [BUGGY]      return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	replace	}    else    if(o    instanceof    JsonNull    ||!(o    instanceof    JsonNull    &&!(o    instanceof    JsonNull)))    {    else  if(o  instanceof  JsonNull  ||!(o  instanceof  JsonNull  &&!(o  instanceof  JsonNull)))  {	  	non-compiled	[CE]  'else'  without  'if'	3	None	add
1434	[BUG]  [BUGGY]  }  else  if(o  instanceof  JsonNull  ||!(o  instanceof  JsonNull  &&!(o  instanceof  JsonNull)))  {  }  else  if(o  instanceof  JsonNull  ||  isObject  &&!(o  instanceof  JsonNull  &&!(o  instanceof  JsonNull)))  {  [CE]  cannot  find  symbol  isObject  [FE]      ArrayIndexOutOfBoundsException    [CONTEXT]      if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }      [BUGGY]  }  else  if(o  instanceof  JsonNull  ||!(o  instanceof  JsonNull  &&!(o  instanceof  JsonNull)))  {  }  else  if(o  instanceof  JsonNull  ||  isObject  &&!(o  instanceof  JsonNull  &&!(o  instanceof  JsonNull)))  {  [BUGGY]      return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	replace	}    else    if(o    instanceof    JsonNull    ||!(o    instanceof    JsonNull    &&!(o    instanceof    JsonNull)))    {    }  else  if(o  instanceof  JsonNull  ||  isObject  &&!(o  instanceof  JsonNull  &&!(o  instanceof  JsonNull)))  {	  	non-compiled	[CE]  cannot  find  symbol  isObject	3	None	add
1435	[BUG]  [BUGGY]  }  else  if(o  instanceof  JsonNull  ||!(o  instanceof  JsonNull  &&!(o  instanceof  JsonNull)))  {  }  else  if(o  instanceof  JsonNull  ||  =(o  instanceof  JsonNull  &&!(o  instanceof  JsonNull)))  {  [CE]  illegal  start  of  expression  [FE]        ArrayIndexOutOfBoundsException    [CONTEXT]      if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }      [BUGGY]  }  else  if(o  instanceof  JsonNull  ||!(o  instanceof  JsonNull  &&!(o  instanceof  JsonNull)))  {  }  else  if(o  instanceof  JsonNull  ||  =(o  instanceof  JsonNull  &&!(o  instanceof  JsonNull)))  {  [BUGGY]      return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	replace	}    else    if(o    instanceof    JsonNull    ||!(o    instanceof    JsonNull    &&!(o    instanceof    JsonNull)))    {    }  else  if(o  instanceof  JsonNull  ||  =(o  instanceof  JsonNull  &&!(o  instanceof  JsonNull)))  {	  	non-compiled	[CE]  illegal  start  of  expression	3	None	add
1436	[BUG]  [BUGGY]  }  else  if(o  instanceof  JsonNull  ||!(o  instanceof  JsonNull  &&!(o  instanceof  JsonNull)))  {  }  else  if(o  instanceof  JsonNull  ||  (o  instanceof  JsonNull  &&!(o  instanceof  JsonNull)))  {  [CE]  missing  return  statement  [FE]          ArrayIndexOutOfBoundsException    [CONTEXT]      if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }      [BUGGY]  }  else  if(o  instanceof  JsonNull  ||!(o  instanceof  JsonNull  &&!(o  instanceof  JsonNull)))  {  }  else  if(o  instanceof  JsonNull  ||  (o  instanceof  JsonNull  &&!(o  instanceof  JsonNull)))  {  [BUGGY]      return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	replace	}    else    if(o    instanceof    JsonNull    ||!(o    instanceof    JsonNull    &&!(o    instanceof    JsonNull)))    {    }  else  if(o  instanceof  JsonNull  ||  (o  instanceof  JsonNull  &&!(o  instanceof  JsonNull)))  {	  	non-compiled	[CE]  missing  return  statement	3	None	add
1437	[BUG]  [BUGGY]  Object[]  stack  =(Object[])stack.clone();  push(stack.size()  -  stack.length);  return  JsonToken.NAME;  [CE]  cannot  find  symbol  [FE]                              ArrayIndexOutOfBoundsException      [CONTEXT]      if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }      [BUGGY]  Object[]  stack  =(Object[])stack.clone();  push(stack.size()  -  stack.length);  return  JsonToken.NAME;  [BUGGY]      return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	replace	Object[]  stack  =(Object[])stack.clone();  push(stack.size()  -  stack.length);  return  JsonToken.NAME;	  if(o    instanceof    JsonArray)    {    Object[]    stack    =(Object[])o;    push(stack.size()    -    stack.length);    return    JsonToken.NAME;    }    	non-compiled	[CE]  cannot  find  symbol	37	None	replace
1438	[BUG]  [BUGGY]  Object[]  stack  =(Object[])stack.get(stack.size()  -  1);  return  JsonToken.NAME;  [CE]  cannot  find  symbol  [FE]                                ArrayIndexOutOfBoundsException      [CONTEXT]      if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }      [BUGGY]  Object[]  stack  =(Object[])stack.get(stack.size()  -  1);  return  JsonToken.NAME;  [BUGGY]      return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	replace	Object[]  stack  =(Object[])stack.get(stack.size()  -  1);  return  JsonToken.NAME;	  if(o    instanceof    JsonArray)    {    Object[]    stack    =(Object[])o;    push(stack.size()    -    stack.length);    return    JsonToken.NAME;    }    	non-compiled	[CE]  cannot  find  symbol	37	None	replace
1439	[BUG]  [BUGGY]  Stack[]  stack  =(Object[])o;  push(stack.size()  -  stack.length);  return  JsonToken.NAME;  [CE]  cannot  find  symbol  [FE]                                  ArrayIndexOutOfBoundsException      [CONTEXT]      if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }      [BUGGY]  Stack[]  stack  =(Object[])o;  push(stack.size()  -  stack.length);  return  JsonToken.NAME;  [BUGGY]      return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	replace	Stack[]  stack  =(Object[])o;  push(stack.size()  -  stack.length);  return  JsonToken.NAME;	  if(o    instanceof    JsonArray)    {    Object[]    stack    =(Object[])o;    push(stack.size()    -    stack.length);    return    JsonToken.NAME;    }    	non-compiled	[CE]  cannot  find  symbol	37	None	replace
1440	[BUG]  [BUGGY]  Object[]  stack  =(Object[])stack.peek();  push(stack.size()  -  stack.length);  return  JsonToken.NAME;  [CE]  cannot  find  symbol  [FE]                                    ArrayIndexOutOfBoundsException      [CONTEXT]      if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }      [BUGGY]  Object[]  stack  =(Object[])stack.peek();  push(stack.size()  -  stack.length);  return  JsonToken.NAME;  [BUGGY]      return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	replace	Object[]  stack  =(Object[])stack.peek();  push(stack.size()  -  stack.length);  return  JsonToken.NAME;	  if(o    instanceof    JsonArray)    {    Object[]    stack    =(Object[])o;    push(stack.size()    -    stack.length);    return    JsonToken.NAME;    }    	non-compiled	[CE]  cannot  find  symbol	37	None	replace
1441	[BUG]  [BUGGY]  Object[]  stack  =(Object[])o;  push(stack.size()  -  stack.length);  [CE]  cannot  find  symbol  [FE]                                      ArrayIndexOutOfBoundsException      [CONTEXT]      if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }      [BUGGY]  Object[]  stack  =(Object[])o;  push(stack.size()  -  stack.length);  [BUGGY]      return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	replace	Object[]  stack  =(Object[])o;  push(stack.size()  -  stack.length);	  if(o    instanceof    JsonArray)    {    Object[]    stack    =(Object[])o;    push(stack.size()    -    stack.length);    return    JsonToken.NAME;    }    	non-compiled	[CE]  cannot  find  symbol	37	None	replace
1442	[BUG]  [BUGGY]  }  else  if(o  instanceof  JsonObject  ||  o  instanceof  String  ||  isString)  {  [CE]  cannot  find  symbol  isString  [FE]                ArrayIndexOutOfBoundsException      [CONTEXT]      if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }      [BUGGY]  }  else  if(o  instanceof  JsonObject  ||  o  instanceof  String  ||  isString)  {  [BUGGY]      return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	replace	}  else  if(o  instanceof  JsonObject  ||  o  instanceof  String  ||  isString)  {	  }    else    if(o    instanceof    JsonObject    ||    o    instanceof    String    ||    isObject)    {    	non-compiled	[CE]  cannot  find  symbol  isString	55	None	replace
1443	[BUG]  [BUGGY]  }  else  if(o  instanceof  JsonObject  &&  o  instanceof  String  ||  isObject)  {  [CE]  cannot  find  symbol  isObject  [FE]                  ArrayIndexOutOfBoundsException      [CONTEXT]      if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }      [BUGGY]  }  else  if(o  instanceof  JsonObject  &&  o  instanceof  String  ||  isObject)  {  [BUGGY]      return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	replace	}  else  if(o  instanceof  JsonObject  &&  o  instanceof  String  ||  isObject)  {	  }    else    if(o    instanceof    JsonObject    ||    o    instanceof    String    ||    isObject)    {    	non-compiled	[CE]  cannot  find  symbol  isObject	55	None	replace
1444	[BUG]  [BUGGY]  }  else  if(o  instanceof  JsonObject  ||  o  instanceof  String  ||  isNull)  {  [CE]  cannot  find  symbol  isNull  [FE]                    ArrayIndexOutOfBoundsException      [CONTEXT]      if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }      [BUGGY]  }  else  if(o  instanceof  JsonObject  ||  o  instanceof  String  ||  isNull)  {  [BUGGY]      return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	replace	}  else  if(o  instanceof  JsonObject  ||  o  instanceof  String  ||  isNull)  {	  }    else    if(o    instanceof    JsonObject    ||    o    instanceof    String    ||    isObject)    {    	non-compiled	[CE]  cannot  find  symbol  isNull	55	None	replace
1445	[BUG]  [BUGGY]  }  else  if(o  instanceof  JsonNull  ||!(o  instanceof  JsonNull  &&  SENTINEL_CLOSED))  {  [CE]  bad  operand  types  for  binary  operator  '&&'  [FE]                AssertionError      [CONTEXT]      if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }      [BUGGY]  }  else  if(o  instanceof  JsonNull  ||!(o  instanceof  JsonNull  &&  SENTINEL_CLOSED))  {  [BUGGY]      return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	replace	}  else  if(o  instanceof  JsonNull  ||!(o  instanceof  JsonNull  &&  SENTINEL_CLOSED))  {	  }    else    if(o    instanceof    JsonNull    ||!(o    instanceof    JsonNull    &&    isObject))    {    	non-compiled	[CE]  bad  operand  types  for  binary  operator  '&&'	7	None	replace
1446	[BUG]  [BUGGY]  }  else  if(o  instanceof  JsonNull  ||!(o  instanceof  JsonNull  &&  object))  {  [CE]  cannot  find  symbol  object  [FE]                  AssertionError      [CONTEXT]      if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }      [BUGGY]  }  else  if(o  instanceof  JsonNull  ||!(o  instanceof  JsonNull  &&  object))  {  [BUGGY]      return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	replace	}  else  if(o  instanceof  JsonNull  ||!(o  instanceof  JsonNull  &&  object))  {	  }    else    if(o    instanceof    JsonNull    ||!(o    instanceof    JsonNull    &&    isObject))    {    	non-compiled	[CE]  cannot  find  symbol  object	7	None	replace
1447	[BUG]  [BUGGY]  }  else  if(o  instanceof  JsonNull  ||!(o  instanceof  JsonNull  &&  SENTINEL_CLOSE))  {  [CE]  cannot  find  symbol  SENTINEL_CLOSE  [FE]                    AssertionError      [CONTEXT]      if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }      [BUGGY]  }  else  if(o  instanceof  JsonNull  ||!(o  instanceof  JsonNull  &&  SENTINEL_CLOSE))  {  [BUGGY]      return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	replace	}  else  if(o  instanceof  JsonNull  ||!(o  instanceof  JsonNull  &&  SENTINEL_CLOSE))  {	  }    else    if(o    instanceof    JsonNull    ||!(o    instanceof    JsonNull    &&    isObject))    {    	non-compiled	[CE]  cannot  find  symbol  SENTINEL_CLOSE	7	None	replace
1448	[BUG]  [BUGGY]  }  else  if(o  instanceof  JsonUnknown  ||  o  instanceof  JsonObject)  {  [CE]  cannot  find  symbol  [FE]        ArrayIndexOutOfBoundsException      [CONTEXT]      if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }      [BUGGY]  }  else  if(o  instanceof  JsonUnknown  ||  o  instanceof  JsonObject)  {  [BUGGY]      return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	replace	}  else  if(o  instanceof  JsonUnknown  ||  o  instanceof  JsonObject)  {	  }    else    if(o    instanceof    JsonObject    ||    o    instanceof    JsonUnknown)    {    	non-compiled	[CE]  cannot  find  symbol	241	None	replace
1449	[BUG]  [BUGGY]  }  else  if(isObject  ||  o  instanceof  JsonObject)  {  ArrayIndexOutOfBoundsException  e  =  new  ArrayIndexOutOfBoundsException(pathNames[0],  pathNames[1]);  [CE]  cannot  find  symbol  isObject  [FE]            ArrayIndexOutOfBoundsException      [CONTEXT]      if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }      [BUGGY]  }  else  if(isObject  ||  o  instanceof  JsonObject)  {  ArrayIndexOutOfBoundsException  e  =  new  ArrayIndexOutOfBoundsException(pathNames[0],  pathNames[1]);  [BUGGY]      return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	replace	}  else  if(isObject  ||  o  instanceof  JsonObject)  {  ArrayIndexOutOfBoundsException  e  =  new  ArrayIndexOutOfBoundsException(pathNames[0],  pathNames[1]);	  }    else    if(o    instanceof    JsonObject    ||    o    instanceof    JsonArray)    {    ArrayIndexOutOfBoundsException    e    =    new    ArrayIndexOutOfBoundsException(pathNames[0],    pathNames[1]);    	non-compiled	[CE]  cannot  find  symbol  isObject	195	None	replace
1450	[BUG]  [BUGGY]  instanceof  JsonObject  &&  o  instanceof  JsonArray)  {  ArrayIndexOutOfBoundsException  e  =  new  ArrayIndexOutOfBoundsException(pathNames[0],  pathNames[1]);  [CE]  illegal  start  of  expression  [FE]              ArrayIndexOutOfBoundsException      [CONTEXT]      if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }      [BUGGY]  instanceof  JsonObject  &&  o  instanceof  JsonArray)  {  ArrayIndexOutOfBoundsException  e  =  new  ArrayIndexOutOfBoundsException(pathNames[0],  pathNames[1]);  [BUGGY]      return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	replace	instanceof  JsonObject  &&  o  instanceof  JsonArray)  {  ArrayIndexOutOfBoundsException  e  =  new  ArrayIndexOutOfBoundsException(pathNames[0],  pathNames[1]);	  }    else    if(o    instanceof    JsonObject    ||    o    instanceof    JsonArray)    {    ArrayIndexOutOfBoundsException    e    =    new    ArrayIndexOutOfBoundsException(pathNames[0],    pathNames[1]);    	non-compiled	[CE]  illegal  start  of  expression	195	None	replace
1451	[BUG]  [BUGGY]  }  else  if(o  instanceof  JsonObject  ||  o  instanceof  JsonArray)  {  ArrayIndexOutOfBoundsException  e  =  new  ArrayIndexOutOfBoundsException(pathNames[0],  pathNames[1]  +  1);  [CE]  no  suitable  constructor  found  for  ArrayIndexOutOfBoundsException(String,String)  [FE]                ArrayIndexOutOfBoundsException      [CONTEXT]      if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }      [BUGGY]  }  else  if(o  instanceof  JsonObject  ||  o  instanceof  JsonArray)  {  ArrayIndexOutOfBoundsException  e  =  new  ArrayIndexOutOfBoundsException(pathNames[0],  pathNames[1]  +  1);  [BUGGY]      return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	replace	}  else  if(o  instanceof  JsonObject  ||  o  instanceof  JsonArray)  {  ArrayIndexOutOfBoundsException  e  =  new  ArrayIndexOutOfBoundsException(pathNames[0],  pathNames[1]  +  1);	  }    else    if(o    instanceof    JsonObject    ||    o    instanceof    JsonArray)    {    ArrayIndexOutOfBoundsException    e    =    new    ArrayIndexOutOfBoundsException(pathNames[0],    pathNames[1]);    	non-compiled	[CE]  no  suitable  constructor  found  for  ArrayIndexOutOfBoundsException(String,String)	195	None	replace
1452	[BUG]  [BUGGY]  if(o  ==  null)return  JsonToken.NUMBER;  else  {  push(iterator.next());  return  JsonToken.END_OBJECT;  }  [CE]  unreachable  statement  [FE]                              ArrayIndexOutOfBoundsException      [CONTEXT]      if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }      [BUGGY]  if(o  ==  null)return  JsonToken.NUMBER;  else  {  push(iterator.next());  return  JsonToken.END_OBJECT;  }  [BUGGY]      return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	replace	if(o  ==  null)return  JsonToken.NUMBER;  else  {  push(iterator.next());  return  JsonToken.END_OBJECT;  }	  if(o    ==    null)return    JsonToken.NUMBER;    else    {    push(iterator.next());    return    JsonToken.END_ARRAY;    }    	non-compiled	[CE]  unreachable  statement	226	None	replace
1453	[BUG]  [BUGGY]  }  else  if(o  instanceof  JsonObject  &&  o  instanceof  JsonPrimitive)  {  return  JsonToken.BEGIN_OBJECT;  [CE]  unreachable  statement  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]      if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }      [BUGGY]  }  else  if(o  instanceof  JsonObject  &&  o  instanceof  JsonPrimitive)  {  return  JsonToken.BEGIN_OBJECT;  [BUGGY]      return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	replace	}  else  if(o  instanceof  JsonObject  &&  o  instanceof  JsonPrimitive)  {  return  JsonToken.BEGIN_OBJECT;	  }    else    if(o    instanceof    JsonObject    ||    o    instanceof    JsonPrimitive)    {    return    JsonToken.BEGIN_OBJECT;    	non-compiled	[CE]  unreachable  statement	166	None	replace
1454	[BUG]  [BUGGY]  Iterator  iterator  =  stacks.values().iterator();  [CE]  variable  iterator  is  already  defined  in  method  peek()  [FE]                              ArrayIndexOutOfBoundsException      [CONTEXT]      if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }      [BUGGY]  Iterator  iterator  =  stacks.values().iterator();  [BUGGY]      return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	replace	Iterator  iterator  =  stacks.values().iterator();	  Iterator    iterator    =    stacks.iterator();    	non-compiled	[CE]  variable  iterator  is  already  defined  in  method  peek()	188	None	replace
1455	[BUG]  [BUGGY]  Iterator  iterator  =  currentStandards.iterator();  [CE]  variable  iterator  is  already  defined  in  method  peek()  [FE]                                ArrayIndexOutOfBoundsException      [CONTEXT]      if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }      [BUGGY]  Iterator  iterator  =  currentStandards.iterator();  [BUGGY]      return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	replace	Iterator  iterator  =  currentStandards.iterator();	  Iterator    iterator    =    stacks.iterator();    	non-compiled	[CE]  variable  iterator  is  already  defined  in  method  peek()	188	None	replace
1456	[BUG]  [BUGGY]  }  else  if(o  instanceof  JsonObject)  {  }  else  if(o  instanceof  JsonArray  ||  o  instanceof  JsonPrimitive)  <  return  JsonToken.BEGIN_OBJECT;  [CE]  illegal  start  of  type  [FE]              ArrayIndexOutOfBoundsException      [CONTEXT]      if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }      [BUGGY]  }  else  if(o  instanceof  JsonObject)  {  }  else  if(o  instanceof  JsonArray  ||  o  instanceof  JsonPrimitive)  <  return  JsonToken.BEGIN_OBJECT;  [BUGGY]      return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	replace	}  else  if(o  instanceof  JsonObject)  {  }  else  if(o  instanceof  JsonArray  ||  o  instanceof  JsonPrimitive)  <  return  JsonToken.BEGIN_OBJECT;	  }    else    if(o    instanceof    JsonObject    ||    o    instanceof    JsonPrimitive)    {    }    else    if(o    instanceof    JsonObject    ||    o    instanceof    JsonPrimitive)    <    return    JsonToken.BEGIN_OBJECT;    	non-compiled	[CE]  illegal  start  of  type	59	None	replace
1457	[BUG]  [BUGGY]  }  else  if(!(o  instanceof  JsonNull))  {  ArrayIndexOutOfBoundsException  e  =  new  ArrayIndexOutOfBoundsException(iterator.next());  [CE]  cannot  find  symbol  iterator  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]      if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }      [BUGGY]  }  else  if(!(o  instanceof  JsonNull))  {  ArrayIndexOutOfBoundsException  e  =  new  ArrayIndexOutOfBoundsException(iterator.next());  [BUGGY]      return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	replace	}    else    if(!(o    instanceof    JsonNull))    {    ArrayIndexOutOfBoundsException  e  =  new  ArrayIndexOutOfBoundsException(iterator.next());	  	non-compiled	[CE]  cannot  find  symbol  iterator	67	None	add
1458	[BUG]  [BUGGY]  }  else  if(!(o  instanceof  JsonNull))  {  ArrayIndexOutOfBoundsException  e  =  new  ArrayIndexOutOfBoundsException(  pathNames,  iterator.next());  [CE]  cannot  find  symbol  iterator  [FE]      ArrayIndexOutOfBoundsException    [CONTEXT]      if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }      [BUGGY]  }  else  if(!(o  instanceof  JsonNull))  {  ArrayIndexOutOfBoundsException  e  =  new  ArrayIndexOutOfBoundsException(  pathNames,  iterator.next());  [BUGGY]      return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	replace	}    else    if(!(o    instanceof    JsonNull))    {    ArrayIndexOutOfBoundsException  e  =  new  ArrayIndexOutOfBoundsException(  pathNames,  iterator.next());	  	non-compiled	[CE]  cannot  find  symbol  iterator	67	None	add
1459	[BUG]  [BUGGY]  }  else  if(!(o  instanceof  JsonNull))  {  ArrayIndexOutOfBoundsException  e  =  new  ArrayIndexOutOfBoundsException(pathNames[0],  stackSize[1]);  [CE]  array  required,  but  int  found  [FE]        ArrayIndexOutOfBoundsException    [CONTEXT]      if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }      [BUGGY]  }  else  if(!(o  instanceof  JsonNull))  {  ArrayIndexOutOfBoundsException  e  =  new  ArrayIndexOutOfBoundsException(pathNames[0],  stackSize[1]);  [BUGGY]      return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	replace	}    else    if(!(o    instanceof    JsonNull))    {    ArrayIndexOutOfBoundsException  e  =  new  ArrayIndexOutOfBoundsException(pathNames[0],  stackSize[1]);	  	non-compiled	[CE]  array  required,  but  int  found	67	None	add
1460	[BUG]  [BUGGY]  }  else  if(!isObject)  {  ArrayIndexOutOfBoundsException  e  =  new  ArrayIndexOutOfBoundsException(pathNames[0],  pathNames[1]);  [CE]  cannot  find  symbol  isObject  [FE]              ArrayIndexOutOfBoundsException      [CONTEXT]      if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }      [BUGGY]  }  else  if(!isObject)  {  ArrayIndexOutOfBoundsException  e  =  new  ArrayIndexOutOfBoundsException(pathNames[0],  pathNames[1]);  [BUGGY]      return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	replace	}  else  if(!isObject)  {  ArrayIndexOutOfBoundsException  e  =  new  ArrayIndexOutOfBoundsException(pathNames[0],  pathNames[1]);	  }    else    if(!(o    instanceof    JsonArray))    {    ArrayIndexOutOfBoundsException    e    =    new    ArrayIndexOutOfBoundsException(pathNames[0],    pathNames[1]);    	non-compiled	[CE]  cannot  find  symbol  isObject	134	None	replace
1461	[BUG]  [BUGGY]  }  else  if(!o  instanceof  JsonArray)  {  ArrayIndexOutOfBoundsException  e  =  new  ArrayIndexOutOfBoundsException(pathNames[0],  pathNames[1]);  [CE]  bad  operand  type  Object  for  unary  operator  '!'  [FE]                ArrayIndexOutOfBoundsException      [CONTEXT]      if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }      [BUGGY]  }  else  if(!o  instanceof  JsonArray)  {  ArrayIndexOutOfBoundsException  e  =  new  ArrayIndexOutOfBoundsException(pathNames[0],  pathNames[1]);  [BUGGY]      return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	replace	}  else  if(!o  instanceof  JsonArray)  {  ArrayIndexOutOfBoundsException  e  =  new  ArrayIndexOutOfBoundsException(pathNames[0],  pathNames[1]);	  }    else    if(!(o    instanceof    JsonArray))    {    ArrayIndexOutOfBoundsException    e    =    new    ArrayIndexOutOfBoundsException(pathNames[0],    pathNames[1]);    	non-compiled	[CE]  bad  operand  type  Object  for  unary  operator  '!'	134	None	replace
1462	[BUG]  [BUGGY]  }  else  if(isObject)  {  ArrayIndexOutOfBoundsException  e  =  new  ArrayIndexOutOfBoundsException(pathNames[0],  pathNames[1]);  [CE]  cannot  find  symbol  isObject  [FE]                  ArrayIndexOutOfBoundsException      [CONTEXT]      if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }      [BUGGY]  }  else  if(isObject)  {  ArrayIndexOutOfBoundsException  e  =  new  ArrayIndexOutOfBoundsException(pathNames[0],  pathNames[1]);  [BUGGY]      return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	replace	}  else  if(isObject)  {  ArrayIndexOutOfBoundsException  e  =  new  ArrayIndexOutOfBoundsException(pathNames[0],  pathNames[1]);	  }    else    if(!(o    instanceof    JsonArray))    {    ArrayIndexOutOfBoundsException    e    =    new    ArrayIndexOutOfBoundsException(pathNames[0],    pathNames[1]);    	non-compiled	[CE]  cannot  find  symbol  isObject	134	None	replace
1463	[BUG]  [BUGGY]  }  else  if(!(o  instanceof  JsonArray)&&  pathNames[0]!=  null)  {  ArrayIndexOutOfBoundsException  e  =  new  ArrayIndexOutOfBoundsException(pathNames[0],  pathNames[1]);  }  [CE]  illegal  start  of  type  [FE]                    ArrayIndexOutOfBoundsException      [CONTEXT]      if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }      [BUGGY]  }  else  if(!(o  instanceof  JsonArray)&&  pathNames[0]!=  null)  {  ArrayIndexOutOfBoundsException  e  =  new  ArrayIndexOutOfBoundsException(pathNames[0],  pathNames[1]);  }  [BUGGY]      return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	replace	}  else  if(!(o  instanceof  JsonArray)&&  pathNames[0]!=  null)  {  ArrayIndexOutOfBoundsException  e  =  new  ArrayIndexOutOfBoundsException(pathNames[0],  pathNames[1]);  }	  }    else    if(!(o    instanceof    JsonArray))    {    ArrayIndexOutOfBoundsException    e    =    new    ArrayIndexOutOfBoundsException(pathNames[0],    pathNames[1]);    	non-compiled	[CE]  illegal  start  of  type	134	None	replace
1464	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }      [BUGGY]  }  else  if(!(o  instanceof  JsonObject  ||  o  instanceof  String  ||  o  instanceof  JsonArray))  {  [BUGGY]      return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	add	}  else  if(!(o  instanceof  JsonObject  ||  o  instanceof  String  ||  o  instanceof  JsonArray))  {	  }    else    if(!(o    instanceof    JsonObject    ||    o    instanceof    String))    {    	compilable	  [FE]  AssertionError  	253	2	replace
1465	[BUG]  [BUGGY]  }  else  if(!(o  instanceof  JsonObject  ||  o  instanceof  String  ||  o  instanceof  JsonArray))  {  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }      [BUGGY]  }  else  if(!(o  instanceof  JsonObject  ||  o  instanceof  String  ||  o  instanceof  JsonArray))  {  [BUGGY]      return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	replace	}  else  if(!(o  instanceof  JsonObject  ||  o  instanceof  String  ||  o  instanceof  JsonArray))  {	  }    else    if(!(o    instanceof    JsonObject    ||    o    instanceof    String))    {    	compilable	  [FE]  AssertionError  	253	2	replace
1466	[BUG]  [BUGGY]  }  else  if(!(o  instanceof  JsonObject  ||  o  instanceof  String  ||  o  instanceof  JsonString))  {  [CE]  cannot  find  symbol  [FE]      AssertionError    [CONTEXT]      if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }      [BUGGY]  }  else  if(!(o  instanceof  JsonObject  ||  o  instanceof  String  ||  o  instanceof  JsonString))  {  [BUGGY]      return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	replace	}  else  if(!(o  instanceof  JsonObject  ||  o  instanceof  String  ||  o  instanceof  JsonString))  {	  }    else    if(!(o    instanceof    JsonObject    ||    o    instanceof    String))    {    	non-compiled	[CE]  cannot  find  symbol	253	None	replace
1467	[BUG]  [BUGGY]  }  else  if(!(o  instanceof  JsonObject  ||  o  instanceof  Node))  {  [CE]  cannot  find  symbol  [FE]    AssertionError    [CONTEXT]      if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }      [BUGGY]  }  else  if(!(o  instanceof  JsonObject  ||  o  instanceof  Node))  {  [BUGGY]      return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	replace	}  else  if(!(o  instanceof  JsonObject  ||  o  instanceof  Node))  {	  }    else    if(!(o    instanceof    JsonObject    ||    o    instanceof    Number))    {    	non-compiled	[CE]  cannot  find  symbol	257	None	replace
1468	[BUG]  [BUGGY]  if(o  ==  null)return  JsonToken.FIELD_NAME;  if(isObject)  {  push(iterator.next());  return  JsonToken.NAME;  }  [CE]  cannot  find  symbol  FIELD_NAME  [FE]                            ArrayIndexOutOfBoundsException      [CONTEXT]      if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }      [BUGGY]  if(o  ==  null)return  JsonToken.FIELD_NAME;  if(isObject)  {  push(iterator.next());  return  JsonToken.NAME;  }  [BUGGY]      return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	replace	if(o  ==  null)return  JsonToken.FIELD_NAME;  if(isObject)  {  push(iterator.next());  return  JsonToken.NAME;  }	  if(o    ==    null)return    JsonToken.NULL;    if(isObject)    {    push(iterator.next());    return    JsonToken.NAME;    }    	non-compiled	[CE]  cannot  find  symbol  FIELD_NAME	225	None	replace
1469	[BUG]  [BUGGY]  }  else  if(!(o  instanceof  JsonObject)&&  SENTINEL_CLOSED)  {  [CE]  bad  operand  types  for  binary  operator  '&&'  [FE]              AssertionError      [CONTEXT]      if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }      [BUGGY]  }  else  if(!(o  instanceof  JsonObject)&&  SENTINEL_CLOSED)  {  [BUGGY]      return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	replace	}  else  if(!(o  instanceof  JsonObject)&&  SENTINEL_CLOSED)  {	  }    else    if(!(o    instanceof    JsonObject)&&    isObject)    {    	non-compiled	[CE]  bad  operand  types  for  binary  operator  '&&'	141	None	replace
1470	[BUG]  [BUGGY]  }  else  if(!(o  instanceof  JsonObject)&&  isNumber)  {  [CE]  cannot  find  symbol  isNumber  [FE]                AssertionError      [CONTEXT]      if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }      [BUGGY]  }  else  if(!(o  instanceof  JsonObject)&&  isNumber)  {  [BUGGY]      return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	replace	}  else  if(!(o  instanceof  JsonObject)&&  isNumber)  {	  }    else    if(!(o    instanceof    JsonObject)&&    isObject)    {    	non-compiled	[CE]  cannot  find  symbol  isNumber	141	None	replace
1471	[BUG]  [BUGGY]  }  else  if(!(o  instanceof  JsonObject)&&  object)  {  [CE]  cannot  find  symbol  object  [FE]                  AssertionError      [CONTEXT]      if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }      [BUGGY]  }  else  if(!(o  instanceof  JsonObject)&&  object)  {  [BUGGY]      return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	replace	}  else  if(!(o  instanceof  JsonObject)&&  object)  {	  }    else    if(!(o    instanceof    JsonObject)&&    isObject)    {    	non-compiled	[CE]  cannot  find  symbol  object	141	None	replace
1472	[BUG]  [BUGGY]  }  else  if(o  instanceof  JsonNull)  {  }  else  {  push(iterator.next());  return  JsonToken.NUMBER_OBJECT;  }  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]      if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }      [BUGGY]  }  else  if(o  instanceof  JsonNull)  {  }  else  {  push(iterator.next());  return  JsonToken.NUMBER_OBJECT;  }  [BUGGY]      return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	replace	}  else  if(o  instanceof  JsonNull)  {  }  else  {  push(iterator.next());  return  JsonToken.NUMBER_OBJECT;  }	  }    else    if(o    instanceof    JsonNull)    {    }    else    if(o    instanceof    JsonNull)    <    return    JsonToken.NUMBER_OBJECT;    	non-compiled	[CE]  illegal  start  of  type	74	None	replace
1473	[BUG]  [BUGGY]  }  else  if(o  instanceof  JsonArray)  {  }  else  if(o  instanceof  JsonNull)  {  return  JsonToken  token  =(JsonNull)o;  }  [CE]  [FE]                    AssertionError      [CONTEXT]      if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }      [BUGGY]  }  else  if(o  instanceof  JsonArray)  {  }  else  if(o  instanceof  JsonNull)  {  return  JsonToken  token  =(JsonNull)o;  }  [BUGGY]      return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	replace	}  else  if(o  instanceof  JsonArray)  {  }  else  if(o  instanceof  JsonNull)  {  return  JsonToken  token  =(JsonNull)o;  }	  }    else    if(o    instanceof    JsonNull)    {    }    else    if(o    instanceof    JsonNull)    <    return    JsonToken.NUMBER_OBJECT;    	non-compiled	[CE]  	74	None	replace
1474	[BUG]  [BUGGY]  }  else  if(o  instanceof  JsonObject  ==  10)  {  [CE]  incomparable  types:  boolean  and  int  [FE]            ArrayIndexOutOfBoundsException      [CONTEXT]      if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }      [BUGGY]  }  else  if(o  instanceof  JsonObject  ==  10)  {  [BUGGY]      return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	replace	}  else  if(o  instanceof  JsonObject  ==  10)  {	  }    else    if(o    instanceof    JsonObject!=    ')'    {    	non-compiled	[CE]  incomparable  types:  boolean  and  int	213	None	replace
1475	[BUG]  [BUGGY]  }  else  if(o  instanceof  JsonObject  <  =  ')'  expected  ==  illegal  start  of  type  [CE]  illegal  start  of  type  [FE]              ArrayIndexOutOfBoundsException      [CONTEXT]      if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }      [BUGGY]  }  else  if(o  instanceof  JsonObject  <  =  ')'  expected  ==  illegal  start  of  type  [BUGGY]      return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	replace	}  else  if(o  instanceof  JsonObject  <  =  ')'  expected  ==  illegal  start  of  type	  }    else    if(o    instanceof    JsonObject    <    =    ')'    expected    	non-compiled	[CE]  illegal  start  of  type	130	None	replace
1476	[BUG]  [BUGGY]  }  else  if(o  instanceof  JsonObject  {  =  ')'  expected  [CE]  ')'  expected  [FE]                ArrayIndexOutOfBoundsException      [CONTEXT]      if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }      [BUGGY]  }  else  if(o  instanceof  JsonObject  {  =  ')'  expected  [BUGGY]      return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	replace	}  else  if(o  instanceof  JsonObject  {  =  ')'  expected	  }    else    if(o    instanceof    JsonObject    <    =    ')'    expected    	non-compiled	[CE]  ')'  expected	130	None	replace
1477	[BUG]  [BUGGY]  }  else  if(o  instanceof  JsonObject  ==  ')'  expected  [CE]  [FE]                  ArrayIndexOutOfBoundsException      [CONTEXT]      if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }      [BUGGY]  }  else  if(o  instanceof  JsonObject  ==  ')'  expected  [BUGGY]      return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	replace	}  else  if(o  instanceof  JsonObject  ==  ')'  expected	  }    else    if(o    instanceof    JsonObject    <    =    ')'    expected    	non-compiled	[CE]  	130	None	replace
1478	[BUG]  [BUGGY]  }  else  if(o  instanceof  JsonObject  <  =  ')'  expected!=  illegal  start  of  type  [CE]  illegal  start  of  type  [FE]                    ArrayIndexOutOfBoundsException      [CONTEXT]      if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }      [BUGGY]  }  else  if(o  instanceof  JsonObject  <  =  ')'  expected!=  illegal  start  of  type  [BUGGY]      return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	replace	}  else  if(o  instanceof  JsonObject  <  =  ')'  expected!=  illegal  start  of  type	  }    else    if(o    instanceof    JsonObject    <    =    ')'    expected    	non-compiled	[CE]  illegal  start  of  type	130	None	replace
1479	[BUG]  [BUGGY]  }  else  if(o  instanceof  JsonObject!=  false)  {  result(JsonToken.BEGIN_OBJECT,  o);  [CE]  cannot  find  symbol  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]      if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }      [BUGGY]  }  else  if(o  instanceof  JsonObject!=  false)  {  result(JsonToken.BEGIN_OBJECT,  o);  [BUGGY]      return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	replace	}    else    if(o    instanceof    JsonObject!=    false)    {    result(JsonToken.BEGIN_OBJECT,  o);	  	non-compiled	[CE]  cannot  find  symbol	32	None	add
1480	[BUG]  [BUGGY]  }  else  if(o  instanceof  JsonObject!=  false)  {  result(JsonToken.BEGIN_OBJECT);  [CE]  cannot  find  symbol  [FE]      ArrayIndexOutOfBoundsException    [CONTEXT]      if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }      [BUGGY]  }  else  if(o  instanceof  JsonObject!=  false)  {  result(JsonToken.BEGIN_OBJECT);  [BUGGY]      return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	replace	}    else    if(o    instanceof    JsonObject!=    false)    {    result(JsonToken.BEGIN_OBJECT);	  	non-compiled	[CE]  cannot  find  symbol	32	None	add
1481	[BUG]  [BUGGY]  }  else  if(isObject  ||  o  instanceof  JsonObject  ||  o  instanceof  JsonNumber  ||!(o  instanceof  JsonPrimitive))  {  [CE]  cannot  find  symbol  isObject  [FE]                      ArrayIndexOutOfBoundsException      [CONTEXT]      if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }      [BUGGY]  }  else  if(isObject  ||  o  instanceof  JsonObject  ||  o  instanceof  JsonNumber  ||!(o  instanceof  JsonPrimitive))  {  [BUGGY]      return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	replace	}  else  if(isObject  ||  o  instanceof  JsonObject  ||  o  instanceof  JsonNumber  ||!(o  instanceof  JsonPrimitive))  {	  }    else    if(o    instanceof    JsonObject    ||    o    instanceof    JsonNumber    ||!(o    instanceof    JsonPrimitive))    {    	non-compiled	[CE]  cannot  find  symbol  isObject	126	None	replace
1482	[BUG]  [BUGGY]  }  else  if(o  instanceof  JsonObject  ||  o  instanceof  JsonString)  {  return  JsonToken.BEGIN_OBJECT;  [CE]  cannot  find  symbol  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]      if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }      [BUGGY]  }  else  if(o  instanceof  JsonObject  ||  o  instanceof  JsonString)  {  return  JsonToken.BEGIN_OBJECT;  [BUGGY]      return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	replace	}  else  if(o  instanceof  JsonObject  ||  o  instanceof  JsonString)  {  return  JsonToken.BEGIN_OBJECT;	  }    else    if(o    instanceof    JsonObject    ||    o    instanceof    String)    {    return    JsonToken.BEGIN_OBJECT;    	non-compiled	[CE]  cannot  find  symbol	152	None	replace
1483	[BUG]  [BUGGY]  }  else  if(!(o  instanceof  JsonArray))  {  ArrayIndexOutOfBoundsException  e  =  new  ArrayIndexOutOfBoundsException(next());  [CE]  cannot  find  symbol  [FE]            ArrayIndexOutOfBoundsException      [CONTEXT]      if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }      [BUGGY]  }  else  if(!(o  instanceof  JsonArray))  {  ArrayIndexOutOfBoundsException  e  =  new  ArrayIndexOutOfBoundsException(next());  [BUGGY]      return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	replace	}  else  if(!(o  instanceof  JsonArray))  {  ArrayIndexOutOfBoundsException  e  =  new  ArrayIndexOutOfBoundsException(next());	  }    else    if(!(o    instanceof    JsonArray))    {    ArrayIndexOutOfBoundsException    e    =    new    ArrayIndexOutOfBoundsException(iterator.next());    	non-compiled	[CE]  cannot  find  symbol	133	None	replace
1484	[BUG]  [BUGGY]  }  else  if(!(o  instanceof  JsonArray))  {  ArrayIndexOutOfBoundsException  e  =  new  ArrayIndexOutOfBoundsException(input);  [CE]  cannot  find  symbol  input  [FE]              ArrayIndexOutOfBoundsException      [CONTEXT]      if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }      [BUGGY]  }  else  if(!(o  instanceof  JsonArray))  {  ArrayIndexOutOfBoundsException  e  =  new  ArrayIndexOutOfBoundsException(input);  [BUGGY]      return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	replace	}  else  if(!(o  instanceof  JsonArray))  {  ArrayIndexOutOfBoundsException  e  =  new  ArrayIndexOutOfBoundsException(input);	  }    else    if(!(o    instanceof    JsonArray))    {    ArrayIndexOutOfBoundsException    e    =    new    ArrayIndexOutOfBoundsException(iterator.next());    	non-compiled	[CE]  cannot  find  symbol  input	133	None	replace
1485	[BUG]  [BUGGY]  }  else  if(!(o  instanceof  JsonArray))  {  ArrayIndexOutOfBoundsException  e  =  new  ArrayIndexOutOfBoundsException(this.next());  [CE]  cannot  find  symbol  [FE]                ArrayIndexOutOfBoundsException      [CONTEXT]      if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }      [BUGGY]  }  else  if(!(o  instanceof  JsonArray))  {  ArrayIndexOutOfBoundsException  e  =  new  ArrayIndexOutOfBoundsException(this.next());  [BUGGY]      return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	replace	}  else  if(!(o  instanceof  JsonArray))  {  ArrayIndexOutOfBoundsException  e  =  new  ArrayIndexOutOfBoundsException(this.next());	  }    else    if(!(o    instanceof    JsonArray))    {    ArrayIndexOutOfBoundsException    e    =    new    ArrayIndexOutOfBoundsException(iterator.next());    	non-compiled	[CE]  cannot  find  symbol	133	None	replace
1486	[BUG]  [BUGGY]  }  else  if(!(o  instanceof  JsonArray))  {  ArrayIndexOutOfBoundsException  e  =  new  ArrayIndexOutOfBoundsException(primitive);  [CE]  cannot  find  symbol  primitive  [FE]                  ArrayIndexOutOfBoundsException      [CONTEXT]      if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }      [BUGGY]  }  else  if(!(o  instanceof  JsonArray))  {  ArrayIndexOutOfBoundsException  e  =  new  ArrayIndexOutOfBoundsException(primitive);  [BUGGY]      return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	replace	}  else  if(!(o  instanceof  JsonArray))  {  ArrayIndexOutOfBoundsException  e  =  new  ArrayIndexOutOfBoundsException(primitive);	  }    else    if(!(o    instanceof    JsonArray))    {    ArrayIndexOutOfBoundsException    e    =    new    ArrayIndexOutOfBoundsException(iterator.next());    	non-compiled	[CE]  cannot  find  symbol  primitive	133	None	replace
1487	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }      [BUGGY]  }  else  if(!(o  instanceof  JsonObject  ||  o  instanceof  JsonArray  ||  o  instanceof  JsonPrimitive))  {  [BUGGY]      return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	add	}  else  if(!(o  instanceof  JsonObject  ||  o  instanceof  JsonArray  ||  o  instanceof  JsonPrimitive))  {	  }    else    if(!(o    instanceof    JsonObject    ||    o    instanceof    JsonArray))    {    	compilable	  [FE]  AssertionError  	137	2	replace
1488	[BUG]  [BUGGY]  }  else  if(!(o  instanceof  JsonObject  ||  o  instanceof  JsonArray  ||  o  instanceof  JsonPrimitive))  {  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }      [BUGGY]  }  else  if(!(o  instanceof  JsonObject  ||  o  instanceof  JsonArray  ||  o  instanceof  JsonPrimitive))  {  [BUGGY]      return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	replace	}  else  if(!(o  instanceof  JsonObject  ||  o  instanceof  JsonArray  ||  o  instanceof  JsonPrimitive))  {	  }    else    if(!(o    instanceof    JsonObject    ||    o    instanceof    JsonArray))    {    	compilable	  [FE]  AssertionError  	137	2	replace
1489	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }      [BUGGY]  }  else  if(!(o  instanceof  JsonObject  ||  o  instanceof  JsonElement))  {  [BUGGY]      return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	add	}  else  if(!(o  instanceof  JsonObject  ||  o  instanceof  JsonElement))  {	  }    else    if(!(o    instanceof    JsonObject    ||    o    instanceof    JsonArray))    {    	compilable	  [FE]  AssertionError  	137	2	replace
1490	[BUG]  [BUGGY]  }  else  if(!(o  instanceof  JsonObject  ||  o  instanceof  JsonElement))  {  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }      [BUGGY]  }  else  if(!(o  instanceof  JsonObject  ||  o  instanceof  JsonElement))  {  [BUGGY]      return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	replace	}  else  if(!(o  instanceof  JsonObject  ||  o  instanceof  JsonElement))  {	  }    else    if(!(o    instanceof    JsonObject    ||    o    instanceof    JsonArray))    {    	compilable	  [FE]  AssertionError  	137	2	replace
1491	[BUG]  [BUGGY]  }  else  if(o  instanceof  JsonObject  <?>  ||  o  instanceof  JsonObject)  {  [CE]  type  JsonObject  does  not  take  parameters  [FE]                ArrayIndexOutOfBoundsException      [CONTEXT]      if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }      [BUGGY]  }  else  if(o  instanceof  JsonObject  <?>  ||  o  instanceof  JsonObject)  {  [BUGGY]      return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	replace	}  else  if(o  instanceof  JsonObject  <?>  ||  o  instanceof  JsonObject)  {	  }    else    if(o    instanceof    JsonObject    <?>    ||    o    instanceof    JsonArray)    {    	non-compiled	[CE]  type  JsonObject  does  not  take  parameters	177	None	replace
1492	[BUG]  [BUGGY]  }  else  if(o  instanceof  JsonArray)  {  return  JsonToken  BEGIN_OBJECT;  [CE]  ';'  expected  [FE]          AssertionError      [CONTEXT]      if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }      [BUGGY]  }  else  if(o  instanceof  JsonArray)  {  return  JsonToken  BEGIN_OBJECT;  [BUGGY]      return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	replace	}  else  if(o  instanceof  JsonArray)  {  return  JsonToken  BEGIN_OBJECT;	  }    else    if(o    instanceof    JsonNull)    {    }    else    if(o    instanceof    JsonNull)    {    return    JsonToken.BEGIN_OBJECT;    	non-compiled	[CE]  ';'  expected	221	None	replace
1493	[BUG]  [BUGGY]  }  else  if(o  instanceof  JsonBlock)  {  [CE]  cannot  find  symbol  [FE]    AssertionError    [CONTEXT]      if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }      [BUGGY]  }  else  if(o  instanceof  JsonBlock)  {  [BUGGY]      return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	replace	}  else  if(o  instanceof  JsonBlock)  {	  }    else    if(o    instanceof    JsonToken)    {    	non-compiled	[CE]  cannot  find  symbol	198	None	replace
1494	[BUG]  [BUGGY]  }  else  if(o  instanceof  JsonObject  ||  o  instanceof  JsonPrimitive)  {  Exception  e  =  new  ArrayIndexOutOfBoundsException(pathNames[0],  pathNames[1]);  [CE]  no  suitable  constructor  found  for  ArrayIndexOutOfBoundsException(String,String)  [FE]            ArrayIndexOutOfBoundsException      [CONTEXT]      if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }      [BUGGY]  }  else  if(o  instanceof  JsonObject  ||  o  instanceof  JsonPrimitive)  {  Exception  e  =  new  ArrayIndexOutOfBoundsException(pathNames[0],  pathNames[1]);  [BUGGY]      return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	replace	}  else  if(o  instanceof  JsonObject  ||  o  instanceof  JsonPrimitive)  {  Exception  e  =  new  ArrayIndexOutOfBoundsException(pathNames[0],  pathNames[1]);	  }    else    if(o    instanceof    JsonObject    ||    o    instanceof    JsonPrimitive)    {    ArrayIndexOutOfBoundsException    e    =    new    ArrayIndexOutOfBoundsException(pathNames[0],    pathNames[1]);    	non-compiled	[CE]  no  suitable  constructor  found  for  ArrayIndexOutOfBoundsException(String,String)	168	None	replace
1495	[BUG]  [BUGGY]  }  else  if(o  instanceof  JsonObject  &&  o  instanceof  String)  {  }  else  if(o  instanceof  JsonObject  &&  o  instanceof  String)  {  aught  return  JsonToken.BEGIN_OBJECT;  }  else  if(o  instanceof  JsonObject  &&  o  instanceof  String)  {  [CE]  not  a  statement  [FE]    AssertionError    [CONTEXT]      if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }      [BUGGY]  }  else  if(o  instanceof  JsonObject  &&  o  instanceof  String)  {  }  else  if(o  instanceof  JsonObject  &&  o  instanceof  String)  {  aught  return  JsonToken.BEGIN_OBJECT;  }  else  if(o  instanceof  JsonObject  &&  o  instanceof  String)  {  [BUGGY]      return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	replace	}    else    if(o    instanceof    JsonObject    &&    o    instanceof    String)    {    }  else  if(o  instanceof  JsonObject  &&  o  instanceof  String)  {  aught  return  JsonToken.BEGIN_OBJECT;  }  else  if(o  instanceof  JsonObject  &&  o  instanceof  String)  {	  	non-compiled	[CE]  not  a  statement	47	None	add
1496	[BUG]  [BUGGY]  }  else  if(o  instanceof  JsonObject  &&  o  instanceof  String)  {  }  else  if(o  instanceof  JsonObject  &&  o  instanceof  String)  {  result  =  JsonToken.BEGIN_OBJECT;  }  else  if(o  instanceof  JsonObject  &&  o  instanceof  String)  {  [CE]  cannot  find  symbol  result  [FE]      AssertionError    [CONTEXT]      if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }      [BUGGY]  }  else  if(o  instanceof  JsonObject  &&  o  instanceof  String)  {  }  else  if(o  instanceof  JsonObject  &&  o  instanceof  String)  {  result  =  JsonToken.BEGIN_OBJECT;  }  else  if(o  instanceof  JsonObject  &&  o  instanceof  String)  {  [BUGGY]      return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	replace	}    else    if(o    instanceof    JsonObject    &&    o    instanceof    String)    {    }  else  if(o  instanceof  JsonObject  &&  o  instanceof  String)  {  result  =  JsonToken.BEGIN_OBJECT;  }  else  if(o  instanceof  JsonObject  &&  o  instanceof  String)  {	  	non-compiled	[CE]  cannot  find  symbol  result	47	None	add
1497	[BUG]  [BUGGY]  }  else  if(!(o  instanceof  JsonObject))  {  object  =(o  instanceof  JsonObject)?  JsonToken.BEGIN_OBJECT  :  JsonToken.BEGIN_ARRAY;  [CE]  cannot  find  symbol  object  [FE]            AssertionError      [CONTEXT]      if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }      [BUGGY]  }  else  if(!(o  instanceof  JsonObject))  {  object  =(o  instanceof  JsonObject)?  JsonToken.BEGIN_OBJECT  :  JsonToken.BEGIN_ARRAY;  [BUGGY]      return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	replace	}  else  if(!(o  instanceof  JsonObject))  {  object  =(o  instanceof  JsonObject)?  JsonToken.BEGIN_OBJECT  :  JsonToken.BEGIN_ARRAY;	  }    else    if(!(o    instanceof    JsonObject))    {    object    =(o    instanceof    JsonObject)?    JsonToken.BEGIN_OBJECT    :    JsonToken.BEGIN_OBJECT;    	non-compiled	[CE]  cannot  find  symbol  object	158	None	replace
1498	[BUG]  [BUGGY]  }  else  if(!(o  instanceof  JsonObject))  {  object  =(jsonObject)?  JsonToken.BEGIN_OBJECT  :  JsonToken.BEGIN_OBJECT;  [CE]  cannot  find  symbol  object  [FE]              AssertionError      [CONTEXT]      if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }      [BUGGY]  }  else  if(!(o  instanceof  JsonObject))  {  object  =(jsonObject)?  JsonToken.BEGIN_OBJECT  :  JsonToken.BEGIN_OBJECT;  [BUGGY]      return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	replace	}  else  if(!(o  instanceof  JsonObject))  {  object  =(jsonObject)?  JsonToken.BEGIN_OBJECT  :  JsonToken.BEGIN_OBJECT;	  }    else    if(!(o    instanceof    JsonObject))    {    object    =(o    instanceof    JsonObject)?    JsonToken.BEGIN_OBJECT    :    JsonToken.BEGIN_OBJECT;    	non-compiled	[CE]  cannot  find  symbol  object	158	None	replace
1499	[BUG]  [BUGGY]  }  else  if(!(o  instanceof  JsonObject))  {  object  =(value  instanceof  JsonObject)?  JsonToken.BEGIN_OBJECT  :  JsonToken.BEGIN_OBJECT;  [CE]  cannot  find  symbol  object  [FE]                AssertionError      [CONTEXT]      if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }      [BUGGY]  }  else  if(!(o  instanceof  JsonObject))  {  object  =(value  instanceof  JsonObject)?  JsonToken.BEGIN_OBJECT  :  JsonToken.BEGIN_OBJECT;  [BUGGY]      return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	replace	}  else  if(!(o  instanceof  JsonObject))  {  object  =(value  instanceof  JsonObject)?  JsonToken.BEGIN_OBJECT  :  JsonToken.BEGIN_OBJECT;	  }    else    if(!(o    instanceof    JsonObject))    {    object    =(o    instanceof    JsonObject)?    JsonToken.BEGIN_OBJECT    :    JsonToken.BEGIN_OBJECT;    	non-compiled	[CE]  cannot  find  symbol  object	158	None	replace
1500	[BUG]  [BUGGY]  }  else  if(!isObject)  {  object  =(object  instanceof  JsonObject)?  JsonToken.BEGIN_OBJECT  :  JsonToken.BEGIN_OBJECT;  [CE]  cannot  find  symbol  isObject  [FE]                  AssertionError      [CONTEXT]      if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }      [BUGGY]  }  else  if(!isObject)  {  object  =(object  instanceof  JsonObject)?  JsonToken.BEGIN_OBJECT  :  JsonToken.BEGIN_OBJECT;  [BUGGY]      return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	replace	}  else  if(!isObject)  {  object  =(object  instanceof  JsonObject)?  JsonToken.BEGIN_OBJECT  :  JsonToken.BEGIN_OBJECT;	  }    else    if(!(o    instanceof    JsonObject))    {    object    =(o    instanceof    JsonObject)?    JsonToken.BEGIN_OBJECT    :    JsonToken.BEGIN_OBJECT;    	non-compiled	[CE]  cannot  find  symbol  isObject	158	None	replace
1501	[BUG]  [BUGGY]  }  else  if(o  instanceof  JsonArray)  {  return  JsonToken.END_OBJECT;  }  [CE]  illegal  start  of  type  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]      if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }      [BUGGY]  }  else  if(o  instanceof  JsonArray)  {  return  JsonToken.END_OBJECT;  }  [BUGGY]      return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	replace	}  else  if(o  instanceof  JsonArray)  {  return  JsonToken.END_OBJECT;  }	  }    else    if(o    instanceof    JsonArray)    {    return    JsonToken.BEGIN_OBJECT;    	non-compiled	[CE]  illegal  start  of  type	172	None	replace
1502	[BUG]  [BUGGY]  }  else  if(!(o  instanceof  JsonObject  ||  o  instanceof  Number))  {  }  else  if(!(o  instanceof  JsonObject  ||  o  instanceof  Number))  <  return  JsonToken.BEGIN_OBJECT;  [CE]  illegal  start  of  type  [FE]    AssertionError    [CONTEXT]      if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }      [BUGGY]  }  else  if(!(o  instanceof  JsonObject  ||  o  instanceof  Number))  {  }  else  if(!(o  instanceof  JsonObject  ||  o  instanceof  Number))  <  return  JsonToken.BEGIN_OBJECT;  [BUGGY]      return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	replace	}    else    if(!(o    instanceof    JsonObject    ||    o    instanceof    Number))    {    }  else  if(!(o  instanceof  JsonObject  ||  o  instanceof  Number))  <  return  JsonToken.BEGIN_OBJECT;	  	non-compiled	[CE]  illegal  start  of  type	256	None	add
1503	[BUG]  [BUGGY]  }  else  if(!(o  instanceof  JsonObject  ||  o  instanceof  Number))  {  if(!(o  instanceof  JsonObject  ||  o  instanceof  Number))  {  [CE]  illegal  start  of  expression  [FE]      AssertionError    [CONTEXT]      if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }      [BUGGY]  }  else  if(!(o  instanceof  JsonObject  ||  o  instanceof  Number))  {  if(!(o  instanceof  JsonObject  ||  o  instanceof  Number))  {  [BUGGY]      return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	replace	}    else    if(!(o    instanceof    JsonObject    ||    o    instanceof    Number))    {    if(!(o  instanceof  JsonObject  ||  o  instanceof  Number))  {	  	non-compiled	[CE]  illegal  start  of  expression	256	None	add
1504	[BUG]  [BUGGY]  }  else  if(!(o  instanceof  JsonObject  ||  o  instanceof  Number))  {  }  else  if(!(o  instanceof  JsonObject  ||  o  instanceof  Number))  {  return  JsonToken.BEGIN_OBJECT;  [CE]  missing  return  statement  [FE]        AssertionError    [CONTEXT]      if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }      [BUGGY]  }  else  if(!(o  instanceof  JsonObject  ||  o  instanceof  Number))  {  }  else  if(!(o  instanceof  JsonObject  ||  o  instanceof  Number))  {  return  JsonToken.BEGIN_OBJECT;  [BUGGY]      return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	replace	}    else    if(!(o    instanceof    JsonObject    ||    o    instanceof    Number))    {    }  else  if(!(o  instanceof  JsonObject  ||  o  instanceof  Number))  {  return  JsonToken.BEGIN_OBJECT;	  	non-compiled	[CE]  missing  return  statement	256	None	add
1505	[BUG]  [BUGGY]  }  else  if(!o  instanceof  JsonArray)  {  ArrayIndexOutOfBoundsException  a  =(ArrayIndexOutOfBoundsException)iterator.next();  [CE]  bad  operand  type  Object  for  unary  operator  '!'  [FE]          ArrayIndexOutOfBoundsException      [CONTEXT]      if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }      [BUGGY]  }  else  if(!o  instanceof  JsonArray)  {  ArrayIndexOutOfBoundsException  a  =(ArrayIndexOutOfBoundsException)iterator.next();  [BUGGY]      return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	replace	}  else  if(!o  instanceof  JsonArray)  {  ArrayIndexOutOfBoundsException  a  =(ArrayIndexOutOfBoundsException)iterator.next();	  }    else    if(!(o    instanceof    JsonArray))    {    ArrayIndexOutOfBoundsException    a    =(ArrayIndexOutOfBoundsException)iterator.next();    	non-compiled	[CE]  bad  operand  type  Object  for  unary  operator  '!'	132	None	replace
1506	[BUG]  [BUGGY]  }  else  if(!(o  instanceof  JsonArray))  {  ArrayIndexOutOfBoundsException  a  =(ArrayIndexOutOfBoundsException)primitive;  [CE]  cannot  find  symbol  primitive  [FE]            ArrayIndexOutOfBoundsException      [CONTEXT]      if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }      [BUGGY]  }  else  if(!(o  instanceof  JsonArray))  {  ArrayIndexOutOfBoundsException  a  =(ArrayIndexOutOfBoundsException)primitive;  [BUGGY]      return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	replace	}  else  if(!(o  instanceof  JsonArray))  {  ArrayIndexOutOfBoundsException  a  =(ArrayIndexOutOfBoundsException)primitive;	  }    else    if(!(o    instanceof    JsonArray))    {    ArrayIndexOutOfBoundsException    a    =(ArrayIndexOutOfBoundsException)iterator.next();    	non-compiled	[CE]  cannot  find  symbol  primitive	132	None	replace
1507	[BUG]  [BUGGY]  }  else  if(!(o  instanceof  JsonArray))  {  ArrayIndexOutOfBoundsException  a  =(ArrayIndexOutOfBoundsException)primitive.next();  [CE]  cannot  find  symbol  primitive  [FE]              ArrayIndexOutOfBoundsException      [CONTEXT]      if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }      [BUGGY]  }  else  if(!(o  instanceof  JsonArray))  {  ArrayIndexOutOfBoundsException  a  =(ArrayIndexOutOfBoundsException)primitive.next();  [BUGGY]      return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	replace	}  else  if(!(o  instanceof  JsonArray))  {  ArrayIndexOutOfBoundsException  a  =(ArrayIndexOutOfBoundsException)primitive.next();	  }    else    if(!(o    instanceof    JsonArray))    {    ArrayIndexOutOfBoundsException    a    =(ArrayIndexOutOfBoundsException)iterator.next();    	non-compiled	[CE]  cannot  find  symbol  primitive	132	None	replace
1508	[BUG]  [BUGGY]  }  else  if(!(o  instanceof  JsonArray))  {  ArrayIndexOutOfBoundsException  a  =(ArrayIndexOutOfBoundsException)object.next();  [CE]  cannot  find  symbol  object  [FE]                ArrayIndexOutOfBoundsException      [CONTEXT]      if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }      [BUGGY]  }  else  if(!(o  instanceof  JsonArray))  {  ArrayIndexOutOfBoundsException  a  =(ArrayIndexOutOfBoundsException)object.next();  [BUGGY]      return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	replace	}  else  if(!(o  instanceof  JsonArray))  {  ArrayIndexOutOfBoundsException  a  =(ArrayIndexOutOfBoundsException)object.next();	  }    else    if(!(o    instanceof    JsonArray))    {    ArrayIndexOutOfBoundsException    a    =(ArrayIndexOutOfBoundsException)iterator.next();    	non-compiled	[CE]  cannot  find  symbol  object	132	None	replace
1509	[BUG]  [BUGGY]  }  else  if(o  instanceof  JsonArray  &&!(o  instanceof  JsonNull  &&!(o  instanceof  JsonNull  &&!(o  instanceof  JsonNull  &&!(o  instanceof  JsonNull)))  {  [CE]  [FE]            AssertionError      [CONTEXT]      if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }      [BUGGY]  }  else  if(o  instanceof  JsonArray  &&!(o  instanceof  JsonNull  &&!(o  instanceof  JsonNull  &&!(o  instanceof  JsonNull  &&!(o  instanceof  JsonNull)))  {  [BUGGY]      return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	replace	}  else  if(o  instanceof  JsonArray  &&!(o  instanceof  JsonNull  &&!(o  instanceof  JsonNull  &&!(o  instanceof  JsonNull  &&!(o  instanceof  JsonNull)))  {	  }    else    if(o    instanceof    JsonNull    ||!(o    instanceof    JsonNull    &&!(o    instanceof    JsonNull    &&!(o    instanceof    JsonNull)))    {    	non-compiled	[CE]  	5	None	replace
1510	[BUG]  [BUGGY]  }  else  if(o  instanceof  JsonArray  ||  o  instanceof  JsonNull  ||!(o  instanceof  JsonNull  &&!(o  instanceof  JsonNull  &&!(o  instanceof  JsonNull)))  {  [CE]  ')'  expected  [FE]              AssertionError      [CONTEXT]      if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }      [BUGGY]  }  else  if(o  instanceof  JsonArray  ||  o  instanceof  JsonNull  ||!(o  instanceof  JsonNull  &&!(o  instanceof  JsonNull  &&!(o  instanceof  JsonNull)))  {  [BUGGY]      return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	replace	}  else  if(o  instanceof  JsonArray  ||  o  instanceof  JsonNull  ||!(o  instanceof  JsonNull  &&!(o  instanceof  JsonNull  &&!(o  instanceof  JsonNull)))  {	  }    else    if(o    instanceof    JsonNull    ||!(o    instanceof    JsonNull    &&!(o    instanceof    JsonNull    &&!(o    instanceof    JsonNull)))    {    	non-compiled	[CE]  ')'  expected	5	None	replace
1511	[BUG]  [BUGGY]  }  else  if(o  instanceof  JsonNull  ||!(o  instanceof  JsonNull  ||!(o  instanceof  JsonNull  ||!(o  instanceof  JsonNull)))  {  [CE]  ')'  expected  [FE]                AssertionError      [CONTEXT]      if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }      [BUGGY]  }  else  if(o  instanceof  JsonNull  ||!(o  instanceof  JsonNull  ||!(o  instanceof  JsonNull  ||!(o  instanceof  JsonNull)))  {  [BUGGY]      return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	replace	}  else  if(o  instanceof  JsonNull  ||!(o  instanceof  JsonNull  ||!(o  instanceof  JsonNull  ||!(o  instanceof  JsonNull)))  {	  }    else    if(o    instanceof    JsonNull    ||!(o    instanceof    JsonNull    &&!(o    instanceof    JsonNull    &&!(o    instanceof    JsonNull)))    {    	non-compiled	[CE]  ')'  expected	5	None	replace
1512	[BUG]  [BUGGY]  }  else  if(o  instanceof  JsonPrimitive)  {  }  else  if(o  instanceof  JsonPrimitive)  {  return  JsonPrimitive.NUMBER_OBJECT;  }  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]      if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }      [BUGGY]  }  else  if(o  instanceof  JsonPrimitive)  {  }  else  if(o  instanceof  JsonPrimitive)  {  return  JsonPrimitive.NUMBER_OBJECT;  }  [BUGGY]      return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	replace	}  else  if(o  instanceof  JsonPrimitive)  {  }  else  if(o  instanceof  JsonPrimitive)  {  return  JsonPrimitive.NUMBER_OBJECT;  }	  }    else    if(o    instanceof    JsonArray)    {    }    else    if(o    instanceof    JsonArray)    <    return    JsonToken.NUMBER_OBJECT;    	non-compiled	[CE]  illegal  start  of  type	103	None	replace
1513	[BUG]  [BUGGY]  }  else  if(o  instanceof  JsonPrimitive)  {  }  else  {  push(iterator.next());  return  JsonToken.NUMBER_OBJECT;  }  [CE]  illegal  start  of  type  [FE]                    AssertionError      [CONTEXT]      if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }      [BUGGY]  }  else  if(o  instanceof  JsonPrimitive)  {  }  else  {  push(iterator.next());  return  JsonToken.NUMBER_OBJECT;  }  [BUGGY]      return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	replace	}  else  if(o  instanceof  JsonPrimitive)  {  }  else  {  push(iterator.next());  return  JsonToken.NUMBER_OBJECT;  }	  }    else    if(o    instanceof    JsonArray)    {    }    else    if(o    instanceof    JsonArray)    <    return    JsonToken.NUMBER_OBJECT;    	non-compiled	[CE]  illegal  start  of  type	103	None	replace
1514	[BUG]  [BUGGY]  }  else  if(o  instanceof  JsonPrimitive)  {  }  else  if(o  instanceof  JsonPrimitive)  {  return  JsonPrimitive.UNREADABLE_READER;  }  [CE]  illegal  start  of  type  [FE]                      AssertionError      [CONTEXT]      if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }      [BUGGY]  }  else  if(o  instanceof  JsonPrimitive)  {  }  else  if(o  instanceof  JsonPrimitive)  {  return  JsonPrimitive.UNREADABLE_READER;  }  [BUGGY]      return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	replace	}  else  if(o  instanceof  JsonPrimitive)  {  }  else  if(o  instanceof  JsonPrimitive)  {  return  JsonPrimitive.UNREADABLE_READER;  }	  }    else    if(o    instanceof    JsonArray)    {    }    else    if(o    instanceof    JsonArray)    <    return    JsonToken.NUMBER_OBJECT;    	non-compiled	[CE]  illegal  start  of  type	103	None	replace
1515	[BUG]  [BUGGY]  }  else  if(o  instanceof  JsonArray)  {  }  else  {  push(iterator.next());  return  JsonToken.NUMBER_OBJECT;  }  [CE]  illegal  start  of  type  [FE]                        AssertionError      [CONTEXT]      if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }      [BUGGY]  }  else  if(o  instanceof  JsonArray)  {  }  else  {  push(iterator.next());  return  JsonToken.NUMBER_OBJECT;  }  [BUGGY]      return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	replace	}  else  if(o  instanceof  JsonArray)  {  }  else  {  push(iterator.next());  return  JsonToken.NUMBER_OBJECT;  }	  }    else    if(o    instanceof    JsonArray)    {    }    else    if(o    instanceof    JsonArray)    <    return    JsonToken.NUMBER_OBJECT;    	non-compiled	[CE]  illegal  start  of  type	103	None	replace
1516	[BUG]  [BUGGY]  Integer  o  =(Integer)iterator.getNext();  [CE]  variable  o  is  already  defined  in  method  peek()  [FE]                        ArrayIndexOutOfBoundsException      [CONTEXT]      if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }      [BUGGY]  Integer  o  =(Integer)iterator.getNext();  [BUGGY]      return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	replace	Integer  o  =(Integer)iterator.getNext();	  Integer    o    =(Integer)iterator.next();    	non-compiled	[CE]  variable  o  is  already  defined  in  method  peek()	34	None	replace
1517	[BUG]  [BUGGY]  Integer  o  =(Integer)iterator.peek();  [CE]  variable  o  is  already  defined  in  method  peek()  [FE]                          ArrayIndexOutOfBoundsException      [CONTEXT]      if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }      [BUGGY]  Integer  o  =(Integer)iterator.peek();  [BUGGY]      return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	replace	Integer  o  =(Integer)iterator.peek();	  Integer    o    =(Integer)iterator.next();    	non-compiled	[CE]  variable  o  is  already  defined  in  method  peek()	34	None	replace
1518	[BUG]  [BUGGY]  }    else    if(o    instanceof    JsonNull)    {    return  JsonToken.BEGIN_OBJECT;  }  else  if(o  instanceof  JsonNull)  {  return  JsonTokenBEGIN_OBJECT;  }  else  if(o  instanceof  JsonNull)  {  return  JsonToken.BEGIN_OBJECT;  }  [CE]  illegal  start  of  type  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]      if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }      [BUGGY]  }    else    if(o    instanceof    JsonNull)    {    return  JsonToken.BEGIN_OBJECT;  }  else  if(o  instanceof  JsonNull)  {  return  JsonTokenBEGIN_OBJECT;  }  else  if(o  instanceof  JsonNull)  {  return  JsonToken.BEGIN_OBJECT;  }  [BUGGY]      return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	replace	}        else        if(o        instanceof        JsonNull)        {        return    JsonToken.BEGIN_OBJECT;    }  else  if(o  instanceof  JsonNull)  {  return  JsonTokenBEGIN_OBJECT;  }  else  if(o  instanceof  JsonNull)  {  return  JsonToken.BEGIN_OBJECT;  }	  	non-compiled	[CE]  illegal  start  of  type	154	None	add
1519	[BUG]  [BUGGY]  }    else    if(o    instanceof    JsonNull)    {    return  JsonToken.BEGIN_OBJECT;  }  else  if(o  instanceof  JsonNull)  {  return  JsonToken.BEGIN_OBJECT;  }  else  if(o  instanceof  JsonNull)  {  return  JsonToken  BEGIN_OBJECT;  }  [CE]  [FE]      ArrayIndexOutOfBoundsException    [CONTEXT]      if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }      [BUGGY]  }    else    if(o    instanceof    JsonNull)    {    return  JsonToken.BEGIN_OBJECT;  }  else  if(o  instanceof  JsonNull)  {  return  JsonToken.BEGIN_OBJECT;  }  else  if(o  instanceof  JsonNull)  {  return  JsonToken  BEGIN_OBJECT;  }  [BUGGY]      return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	replace	}        else        if(o        instanceof        JsonNull)        {        return    JsonToken.BEGIN_OBJECT;    }  else  if(o  instanceof  JsonNull)  {  return  JsonToken.BEGIN_OBJECT;  }  else  if(o  instanceof  JsonNull)  {  return  JsonToken  BEGIN_OBJECT;  }	  	non-compiled	[CE]  	154	None	add
1520	[BUG]  [BUGGY]  }    else    if(o    instanceof    JsonNull)    {    return  JsonToken.BEGIN_OBJECT;  }  else  if(o  instanceof  JsonNull)  {  return  JsonToken.BEGIN_OBJECT;  }  else  if(o  instanceof  JsonNull)  {  return  JsonToken  beGIN_OBJECT;  }  [CE]  [FE]        ArrayIndexOutOfBoundsException    [CONTEXT]      if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }      [BUGGY]  }    else    if(o    instanceof    JsonNull)    {    return  JsonToken.BEGIN_OBJECT;  }  else  if(o  instanceof  JsonNull)  {  return  JsonToken.BEGIN_OBJECT;  }  else  if(o  instanceof  JsonNull)  {  return  JsonToken  beGIN_OBJECT;  }  [BUGGY]      return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	replace	}        else        if(o        instanceof        JsonNull)        {        return    JsonToken.BEGIN_OBJECT;    }  else  if(o  instanceof  JsonNull)  {  return  JsonToken.BEGIN_OBJECT;  }  else  if(o  instanceof  JsonNull)  {  return  JsonToken  beGIN_OBJECT;  }	  	non-compiled	[CE]  	154	None	add
1521	[BUG]  [BUGGY]  }    else    if(o    instanceof    JsonNull)    {    return  JsonToken.BEGIN_OBJECT;  }  else  if(o  instanceof  JsonNull)  {  return  JsonToken.BEGIN_OBJECT;  }  else  if(o  instanceof  JsonNull)  {  return  JsonToken  [CE]  ';'  expected  [FE]          ArrayIndexOutOfBoundsException    [CONTEXT]      if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }      [BUGGY]  }    else    if(o    instanceof    JsonNull)    {    return  JsonToken.BEGIN_OBJECT;  }  else  if(o  instanceof  JsonNull)  {  return  JsonToken.BEGIN_OBJECT;  }  else  if(o  instanceof  JsonNull)  {  return  JsonToken  [BUGGY]      return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	replace	}        else        if(o        instanceof        JsonNull)        {        return    JsonToken.BEGIN_OBJECT;    }  else  if(o  instanceof  JsonNull)  {  return  JsonToken.BEGIN_OBJECT;  }  else  if(o  instanceof  JsonNull)  {  return  JsonToken	  	non-compiled	[CE]  ';'  expected	154	None	add
1522	[BUG]  [BUGGY]  }  else  if(o  instanceof  JsonObject  ||  o  instanceof  String)  {  Object  value  =(Object)iterator.next();  [CE]  cannot  find  symbol  iterator  [FE]        ArrayIndexOutOfBoundsException      [CONTEXT]      if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }      [BUGGY]  }  else  if(o  instanceof  JsonObject  ||  o  instanceof  String)  {  Object  value  =(Object)iterator.next();  [BUGGY]      return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	replace	}  else  if(o  instanceof  JsonObject  ||  o  instanceof  String)  {  Object  value  =(Object)iterator.next();	  }    else    if(o    instanceof    JsonObject    ||    o    instanceof    String)    {    ArrayIndexOutOfBoundsException    e    =(ArrayIndexOutOfBoundsException)iterator.next();    	non-compiled	[CE]  cannot  find  symbol  iterator	148	None	replace
1523	[BUG]  [BUGGY]  }  else  if(o  instanceof  JsonObject  ||  o  instanceof  String)  {  ArrayIndexOutOfBoundsException  e  =(ArrayIndexOutOfBoundsException)keyboard.next();  [CE]  cannot  find  symbol  keyboard  [FE]          ArrayIndexOutOfBoundsException      [CONTEXT]      if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }      [BUGGY]  }  else  if(o  instanceof  JsonObject  ||  o  instanceof  String)  {  ArrayIndexOutOfBoundsException  e  =(ArrayIndexOutOfBoundsException)keyboard.next();  [BUGGY]      return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	replace	}  else  if(o  instanceof  JsonObject  ||  o  instanceof  String)  {  ArrayIndexOutOfBoundsException  e  =(ArrayIndexOutOfBoundsException)keyboard.next();	  }    else    if(o    instanceof    JsonObject    ||    o    instanceof    String)    {    ArrayIndexOutOfBoundsException    e    =(ArrayIndexOutOfBoundsException)iterator.next();    	non-compiled	[CE]  cannot  find  symbol  keyboard	148	None	replace
1524	[BUG]  [BUGGY]  }  else  if(o  instanceof  JsonObject  ||  o  instanceof  String)  {  Object[]  stack  =(Object[])iterator.next();  [CE]  cannot  find  symbol  iterator  [FE]            ArrayIndexOutOfBoundsException      [CONTEXT]      if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }      [BUGGY]  }  else  if(o  instanceof  JsonObject  ||  o  instanceof  String)  {  Object[]  stack  =(Object[])iterator.next();  [BUGGY]      return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	replace	}  else  if(o  instanceof  JsonObject  ||  o  instanceof  String)  {  Object[]  stack  =(Object[])iterator.next();	  }    else    if(o    instanceof    JsonObject    ||    o    instanceof    String)    {    ArrayIndexOutOfBoundsException    e    =(ArrayIndexOutOfBoundsException)iterator.next();    	non-compiled	[CE]  cannot  find  symbol  iterator	148	None	replace
1525	[BUG]  [BUGGY]  }  else  if(!(o  instanceof  JsonObject  ||  o  instanceof  String))  {  if(!(o  instanceof  JsonObject  ||  o  instanceof  String))  {  [CE]  illegal  start  of  expression  [FE]    AssertionError    [CONTEXT]      if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }      [BUGGY]  }  else  if(!(o  instanceof  JsonObject  ||  o  instanceof  String))  {  if(!(o  instanceof  JsonObject  ||  o  instanceof  String))  {  [BUGGY]      return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	replace	}    else    if(!(o    instanceof    JsonObject    ||    o    instanceof    String))    {    if(!(o  instanceof  JsonObject  ||  o  instanceof  String))  {	  	non-compiled	[CE]  illegal  start  of  expression	252	None	add
1526	[BUG]  [BUGGY]  [FE]  ArrayIndexOutOfBoundsException  [FE]      AssertionError    [CONTEXT]      if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }      [BUGGY]  }  else  if(!(o  instanceof  JsonObject  ||  o  instanceof  String))  {  return  JsonToken.BEGIN_OBJECT;  [BUGGY]      return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	add	}    else    if(!(o    instanceof    JsonObject    ||    o    instanceof    String))    {    return  JsonToken.BEGIN_OBJECT;	  	compilable	  [FE]  ArrayIndexOutOfBoundsException  	252	2	add
1527	[BUG]  [BUGGY]  }  else  if(!(o  instanceof  JsonObject  ||  o  instanceof  String))  {  return  JsonToken.BEGIN_OBJECT;  [FE]  ArrayIndexOutOfBoundsException  [FE]      AssertionError    [CONTEXT]      if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }      [BUGGY]  }  else  if(!(o  instanceof  JsonObject  ||  o  instanceof  String))  {  return  JsonToken.BEGIN_OBJECT;  [BUGGY]      return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	replace	}    else    if(!(o    instanceof    JsonObject    ||    o    instanceof    String))    {    return  JsonToken.BEGIN_OBJECT;	  	compilable	  [FE]  ArrayIndexOutOfBoundsException  	252	2	add
1528	[BUG]  [BUGGY]  }  else  if(!(o  instanceof  JsonObject  ||  o  instanceof  String))  {  }  else  if(!(o  instanceof  JsonObject  ||  o  instanceof  String))  {  return  JsonToken.BEGIN_OBJECT;  [CE]  missing  return  statement  [FE]        AssertionError    [CONTEXT]      if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }      [BUGGY]  }  else  if(!(o  instanceof  JsonObject  ||  o  instanceof  String))  {  }  else  if(!(o  instanceof  JsonObject  ||  o  instanceof  String))  {  return  JsonToken.BEGIN_OBJECT;  [BUGGY]      return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	replace	}    else    if(!(o    instanceof    JsonObject    ||    o    instanceof    String))    {    }  else  if(!(o  instanceof  JsonObject  ||  o  instanceof  String))  {  return  JsonToken.BEGIN_OBJECT;	  	non-compiled	[CE]  missing  return  statement	252	None	add
1529	[BUG]  [BUGGY]  }  else  if(o  instanceof  JsonObject  <  ')')  {  [CE]  illegal  start  of  type  [FE]              ArrayIndexOutOfBoundsException      [CONTEXT]      if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }      [BUGGY]  }  else  if(o  instanceof  JsonObject  <  ')')  {  [BUGGY]      return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	replace	}  else  if(o  instanceof  JsonObject  <  ')')  {	  }    else    if(o    instanceof    JsonObject!=    ')')    {    	non-compiled	[CE]  illegal  start  of  type	214	None	replace
1530	[BUG]  [BUGGY]  }  else  if(o  instanceof  JsonObject  >>  ')')  {  [CE]  cannot  find  symbol  JsonObject  [FE]                ArrayIndexOutOfBoundsException      [CONTEXT]      if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }      [BUGGY]  }  else  if(o  instanceof  JsonObject  >>  ')')  {  [BUGGY]      return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	replace	}  else  if(o  instanceof  JsonObject  >>  ')')  {	  }    else    if(o    instanceof    JsonObject!=    ')')    {    	non-compiled	[CE]  cannot  find  symbol  JsonObject	214	None	replace
1531	[BUG]  [BUGGY]  }  else  if(o  instanceof  JsonNull  ||!(o  instanceof  JsonNull  ||!(o  instanceof  JsonNull  ||!(o  instanceof  JsonNull  ||!(o  instanceof  JsonNull  ||!(o  instanceof  JsonNull)))  {  [CE]  [FE]        AssertionError      [CONTEXT]      if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }      [BUGGY]  }  else  if(o  instanceof  JsonNull  ||!(o  instanceof  JsonNull  ||!(o  instanceof  JsonNull  ||!(o  instanceof  JsonNull  ||!(o  instanceof  JsonNull  ||!(o  instanceof  JsonNull)))  {  [BUGGY]      return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	replace	}  else  if(o  instanceof  JsonNull  ||!(o  instanceof  JsonNull  ||!(o  instanceof  JsonNull  ||!(o  instanceof  JsonNull  ||!(o  instanceof  JsonNull  ||!(o  instanceof  JsonNull)))  {	  }    else    if(o    instanceof    JsonNull    ||!(o    instanceof    JsonNull    &&!(o    instanceof    JsonNull    &&!(o    instanceof    JsonNull    &&!(o    instanceof    JsonNull)))    {    	non-compiled	[CE]  	142	None	replace
1532	[BUG]  [BUGGY]  }  else  if(o  instanceof  JsonArray  &&!(o  instanceof  JsonNull  &&!(o  instanceof  JsonNull  &&!(o  instanceof  JsonNull  &&!(o  instanceof  JsonNull  &&!(o  instanceof  JsonNull  &&  [CE]  illegal  start  of  expression  [FE]          AssertionError      [CONTEXT]      if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }      [BUGGY]  }  else  if(o  instanceof  JsonArray  &&!(o  instanceof  JsonNull  &&!(o  instanceof  JsonNull  &&!(o  instanceof  JsonNull  &&!(o  instanceof  JsonNull  &&!(o  instanceof  JsonNull  &&  [BUGGY]      return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	replace	}  else  if(o  instanceof  JsonArray  &&!(o  instanceof  JsonNull  &&!(o  instanceof  JsonNull  &&!(o  instanceof  JsonNull  &&!(o  instanceof  JsonNull  &&!(o  instanceof  JsonNull  &&	  }    else    if(o    instanceof    JsonNull    ||!(o    instanceof    JsonNull    &&!(o    instanceof    JsonNull    &&!(o    instanceof    JsonNull    &&!(o    instanceof    JsonNull)))    {    	non-compiled	[CE]  illegal  start  of  expression	142	None	replace
1533	[BUG]  [BUGGY]  }  else  if(o  instanceof  JsonNull  ||!(o  instanceof  JsonNull  ||!(o  instanceof  JsonNull  ||!(o  instanceof  JsonNull  ||!(o  instanceof  JsonNull  ||!(o  instanceof  JsonNull  ||!(o  instanceof  JsonNull)))  {  [CE]  [FE]            AssertionError      [CONTEXT]      if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }      [BUGGY]  }  else  if(o  instanceof  JsonNull  ||!(o  instanceof  JsonNull  ||!(o  instanceof  JsonNull  ||!(o  instanceof  JsonNull  ||!(o  instanceof  JsonNull  ||!(o  instanceof  JsonNull  ||!(o  instanceof  JsonNull)))  {  [BUGGY]      return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	replace	}  else  if(o  instanceof  JsonNull  ||!(o  instanceof  JsonNull  ||!(o  instanceof  JsonNull  ||!(o  instanceof  JsonNull  ||!(o  instanceof  JsonNull  ||!(o  instanceof  JsonNull  ||!(o  instanceof  JsonNull)))  {	  }    else    if(o    instanceof    JsonNull    ||!(o    instanceof    JsonNull    &&!(o    instanceof    JsonNull    &&!(o    instanceof    JsonNull    &&!(o    instanceof    JsonNull)))    {    	non-compiled	[CE]  	142	None	replace
1534	[BUG]  [BUGGY]  }  else  if(!(o  instanceof  JsonObject  ||  o  instanceof  JsonLong))  {  [CE]  cannot  find  symbol  [FE]          ArrayIndexOutOfBoundsException      [CONTEXT]      if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }      [BUGGY]  }  else  if(!(o  instanceof  JsonObject  ||  o  instanceof  JsonLong))  {  [BUGGY]      return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	replace	}  else  if(!(o  instanceof  JsonObject  ||  o  instanceof  JsonLong))  {	  }    else    if(o    instanceof    JsonObject    ||    o    instanceof    JsonLong)    {    	non-compiled	[CE]  cannot  find  symbol	184	None	replace
1535	[BUG]  [BUGGY]  }  else  if(o  instanceof  JsonArray  ||  o  instanceof  JsonLong)  {  [CE]  cannot  find  symbol  [FE]            ArrayIndexOutOfBoundsException      [CONTEXT]      if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }      [BUGGY]  }  else  if(o  instanceof  JsonArray  ||  o  instanceof  JsonLong)  {  [BUGGY]      return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	replace	}  else  if(o  instanceof  JsonArray  ||  o  instanceof  JsonLong)  {	  }    else    if(o    instanceof    JsonObject    ||    o    instanceof    JsonLong)    {    	non-compiled	[CE]  cannot  find  symbol	184	None	replace
1536	[BUG]  [BUGGY]  }  else  if(o  instanceof  JsonNull)  {  }  else  {  push(iterator.next());  return  JsonToken.BEGIN_NULL;  }  [CE]  illegal  start  of  type  [FE]            AssertionError      [CONTEXT]      if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }      [BUGGY]  }  else  if(o  instanceof  JsonNull)  {  }  else  {  push(iterator.next());  return  JsonToken.BEGIN_NULL;  }  [BUGGY]      return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	replace	}  else  if(o  instanceof  JsonNull)  {  }  else  {  push(iterator.next());  return  JsonToken.BEGIN_NULL;  }	  }    else    if(o    instanceof    JsonNull)    {    }    else    if(o    instanceof    JsonNull)    <    return    JsonToken.BEGIN_NULL;    	non-compiled	[CE]  illegal  start  of  type	222	None	replace
1537	[BUG]  [BUGGY]  }  else  if(o  instanceof  JsonNull)  {  return  JsonToken.BEGIN_NULL;  }  [CE]  illegal  start  of  type  [FE]              AssertionError      [CONTEXT]      if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }      [BUGGY]  }  else  if(o  instanceof  JsonNull)  {  return  JsonToken.BEGIN_NULL;  }  [BUGGY]      return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	replace	}  else  if(o  instanceof  JsonNull)  {  return  JsonToken.BEGIN_NULL;  }	  }    else    if(o    instanceof    JsonNull)    {    }    else    if(o    instanceof    JsonNull)    <    return    JsonToken.BEGIN_NULL;    	non-compiled	[CE]  illegal  start  of  type	222	None	replace
1538	[BUG]  [BUGGY]  }  else  if(o  instanceof  JsonPrimitive)  {  }  else  {  push(iterator.next());  return  JsonToken.NUMBER_ARRAY;  }  [CE]  illegal  start  of  type  [FE]                    AssertionError      [CONTEXT]      if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }      [BUGGY]  }  else  if(o  instanceof  JsonPrimitive)  {  }  else  {  push(iterator.next());  return  JsonToken.NUMBER_ARRAY;  }  [BUGGY]      return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	replace	}  else  if(o  instanceof  JsonPrimitive)  {  }  else  {  push(iterator.next());  return  JsonToken.NUMBER_ARRAY;  }	  }    else    if(o    instanceof    JsonArray)    {    }    else    if(o    instanceof    JsonArray)    <    return    JsonToken.NUMBER_ARRAY;    	non-compiled	[CE]  illegal  start  of  type	104	None	replace
1539	[BUG]  [BUGGY]  }  else  if(o  instanceof  JsonPrimitive)  {  }  else  {  push(iterator.next());  }  [CE]  illegal  start  of  type  [FE]                      AssertionError      [CONTEXT]      if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }      [BUGGY]  }  else  if(o  instanceof  JsonPrimitive)  {  }  else  {  push(iterator.next());  }  [BUGGY]      return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	replace	}  else  if(o  instanceof  JsonPrimitive)  {  }  else  {  push(iterator.next());  }	  }    else    if(o    instanceof    JsonArray)    {    }    else    if(o    instanceof    JsonArray)    <    return    JsonToken.NUMBER_ARRAY;    	non-compiled	[CE]  illegal  start  of  type	104	None	replace
1540	[BUG]  [BUGGY]  }  else  if(o  instanceof  JsonPrimitive)  {  }  else  if(o  instanceof  JsonPrimitive)  {  return  JsonToken  token  =(JsonPrimitive)o;  }  [CE]  [FE]                        AssertionError      [CONTEXT]      if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }      [BUGGY]  }  else  if(o  instanceof  JsonPrimitive)  {  }  else  if(o  instanceof  JsonPrimitive)  {  return  JsonToken  token  =(JsonPrimitive)o;  }  [BUGGY]      return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	replace	}  else  if(o  instanceof  JsonPrimitive)  {  }  else  if(o  instanceof  JsonPrimitive)  {  return  JsonToken  token  =(JsonPrimitive)o;  }	  }    else    if(o    instanceof    JsonArray)    {    }    else    if(o    instanceof    JsonArray)    <    return    JsonToken.NUMBER_ARRAY;    	non-compiled	[CE]  	104	None	replace
1541	[BUG]  [BUGGY]  try  {  if(isObject)  {  return  JsonToken.FIELD_NAME;  }  [CE]  'try'  without  'catch'  or  'finally'  [FE]                                  ArrayIndexOutOfBoundsException      [CONTEXT]      if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }      [BUGGY]  try  {  if(isObject)  {  return  JsonToken.FIELD_NAME;  }  [BUGGY]      return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	replace	try  {  if(isObject)  {  return  JsonToken.FIELD_NAME;  }	  if(o    ==    null)    {    if(isObject)    {    return    JsonToken.FIELD_NAME;    }    	non-compiled	[CE]  'try'  without  'catch'  or  'finally'	190	None	replace
1542	[BUG]  [BUGGY]  [Delete]  [CE]  illegal  start  of  expression  [FE]                                    ArrayIndexOutOfBoundsException      [CONTEXT]      if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }      [BUGGY]  [Delete]  [BUGGY]      return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	replace	[Delete]	  if(o    ==    null)    {    if(isObject)    {    return    JsonToken.FIELD_NAME;    }    	non-compiled	[CE]  illegal  start  of  expression	190	None	replace
1543	[BUG]  [BUGGY]  aughtExceptionHandler(this,  JsonToken.FIELD_NAME,  null);  [CE]  cannot  find  symbol  FIELD_NAME  [FE]                                      ArrayIndexOutOfBoundsException      [CONTEXT]      if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }      [BUGGY]  aughtExceptionHandler(this,  JsonToken.FIELD_NAME,  null);  [BUGGY]      return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	replace	aughtExceptionHandler(this,  JsonToken.FIELD_NAME,  null);	  if(o    ==    null)    {    if(isObject)    {    return    JsonToken.FIELD_NAME;    }    	non-compiled	[CE]  cannot  find  symbol  FIELD_NAME	190	None	replace
1544	[BUG]  [BUGGY]  }  else  if(o  instanceof  JsonObject)  {  <  JsonObject>  push(iterator.next());  return  JsonToken.BEGIN_OBJECT;  [CE]  illegal  start  of  expression  [FE]          ArrayIndexOutOfBoundsException      [CONTEXT]      if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }      [BUGGY]  }  else  if(o  instanceof  JsonObject)  {  <  JsonObject>  push(iterator.next());  return  JsonToken.BEGIN_OBJECT;  [BUGGY]      return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	replace	}  else  if(o  instanceof  JsonObject)  {  <  JsonObject>  push(iterator.next());  return  JsonToken.BEGIN_OBJECT;	  }    else    if(o    instanceof    JsonObject    ||    o    instanceof    JsonArray)    {    <    JsonObject>    push(iterator.next());    return    JsonToken.BEGIN_OBJECT;    	non-compiled	[CE]  illegal  start  of  expression	232	None	replace
1545	[BUG]  [BUGGY]  }  else  if(o  instanceof  JsonArray)  {  <  JsonObject>  push(iterator.next());  return  JsonToken.BEGIN_OBJECT;  [CE]  illegal  start  of  expression  [FE]            ArrayIndexOutOfBoundsException      [CONTEXT]      if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }      [BUGGY]  }  else  if(o  instanceof  JsonArray)  {  <  JsonObject>  push(iterator.next());  return  JsonToken.BEGIN_OBJECT;  [BUGGY]      return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	replace	}  else  if(o  instanceof  JsonArray)  {  <  JsonObject>  push(iterator.next());  return  JsonToken.BEGIN_OBJECT;	  }    else    if(o    instanceof    JsonObject    ||    o    instanceof    JsonArray)    {    <    JsonObject>    push(iterator.next());    return    JsonToken.BEGIN_OBJECT;    	non-compiled	[CE]  illegal  start  of  expression	232	None	replace
1546	[BUG]  [BUGGY]  }  else  if(o  instanceof  JsonObject  ||  o  instanceof  JsonPrimitive)  {  <  JsonObject>  push(iterator.next());  return  JsonToken.BEGIN_OBJECT;  [CE]  illegal  start  of  expression  [FE]              ArrayIndexOutOfBoundsException      [CONTEXT]      if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }      [BUGGY]  }  else  if(o  instanceof  JsonObject  ||  o  instanceof  JsonPrimitive)  {  <  JsonObject>  push(iterator.next());  return  JsonToken.BEGIN_OBJECT;  [BUGGY]      return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	replace	}  else  if(o  instanceof  JsonObject  ||  o  instanceof  JsonPrimitive)  {  <  JsonObject>  push(iterator.next());  return  JsonToken.BEGIN_OBJECT;	  }    else    if(o    instanceof    JsonObject    ||    o    instanceof    JsonArray)    {    <    JsonObject>    push(iterator.next());    return    JsonToken.BEGIN_OBJECT;    	non-compiled	[CE]  illegal  start  of  expression	232	None	replace
1547	[BUG]  [BUGGY]  }  else  if(!(o  instanceof  JsonObject)&&((  JsonObject)o).isObject())  {  [CE]  cannot  find  symbol  [FE]                AssertionError      [CONTEXT]      if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }      [BUGGY]  }  else  if(!(o  instanceof  JsonObject)&&((  JsonObject)o).isObject())  {  [BUGGY]      return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	replace	}  else  if(!(o  instanceof  JsonObject)&&((  JsonObject)o).isObject())  {	  }    else    if(!(o    instanceof    JsonObject))    {    ((    JsonObject)o).setObject(isObject?    JsonToken.BEGIN_OBJECT    :    JsonToken.BEGIN_OBJECT);    }    else    if(!(o    instanceof    JsonObject))    {    	non-compiled	[CE]  cannot  find  symbol	160	None	replace
1548	[BUG]  [BUGGY]  }  else  if(o  instanceof  JsonNull  ||!(o  instanceof  JsonNull  ||!(o  instanceof  JsonNull  ||!(o  instanceof  JsonNull  ||!(o  instanceof  JsonNull)))  {  [CE]  [FE]            AssertionError      [CONTEXT]      if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }      [BUGGY]  }  else  if(o  instanceof  JsonNull  ||!(o  instanceof  JsonNull  ||!(o  instanceof  JsonNull  ||!(o  instanceof  JsonNull  ||!(o  instanceof  JsonNull)))  {  [BUGGY]      return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	replace	}  else  if(o  instanceof  JsonNull  ||!(o  instanceof  JsonNull  ||!(o  instanceof  JsonNull  ||!(o  instanceof  JsonNull  ||!(o  instanceof  JsonNull)))  {	  }    else    if(o    instanceof    JsonNull    ||!(o    instanceof    JsonNull    &&!(o    instanceof    JsonNull    &&!(o    instanceof    JsonNull)))    {    	non-compiled	[CE]  	5	None	replace
1549	[BUG]  [BUGGY]  }  else  if(o  instanceof  JsonArray  &&!(o  instanceof  JsonNull  &&!(o  instanceof  JsonNull  &&!(o  instanceof  JsonNull)))  {  [CE]  ')'  expected  [FE]              AssertionError      [CONTEXT]      if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }      [BUGGY]  }  else  if(o  instanceof  JsonArray  &&!(o  instanceof  JsonNull  &&!(o  instanceof  JsonNull  &&!(o  instanceof  JsonNull)))  {  [BUGGY]      return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	replace	}  else  if(o  instanceof  JsonArray  &&!(o  instanceof  JsonNull  &&!(o  instanceof  JsonNull  &&!(o  instanceof  JsonNull)))  {	  }    else    if(o    instanceof    JsonNull    ||!(o    instanceof    JsonNull    &&!(o    instanceof    JsonNull    &&!(o    instanceof    JsonNull)))    {    	non-compiled	[CE]  ')'  expected	5	None	replace
1550	[BUG]  [BUGGY]  }  else  if(o  instanceof  JsonArray  ||!(o  instanceof  JsonNull  &&!(o  instanceof  JsonNull  &&!(o  instanceof  JsonNull)))  {  [CE]  ')'  expected  [FE]                AssertionError      [CONTEXT]      if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }      [BUGGY]  }  else  if(o  instanceof  JsonArray  ||!(o  instanceof  JsonNull  &&!(o  instanceof  JsonNull  &&!(o  instanceof  JsonNull)))  {  [BUGGY]      return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	replace	}  else  if(o  instanceof  JsonArray  ||!(o  instanceof  JsonNull  &&!(o  instanceof  JsonNull  &&!(o  instanceof  JsonNull)))  {	  }    else    if(o    instanceof    JsonNull    ||!(o    instanceof    JsonNull    &&!(o    instanceof    JsonNull    &&!(o    instanceof    JsonNull)))    {    	non-compiled	[CE]  ')'  expected	5	None	replace
1551	[BUG]  [BUGGY]  }  else  if(!(o  instanceof  JsonArray)&&  object)  {  [CE]  cannot  find  symbol  object  [FE]            ArrayIndexOutOfBoundsException      [CONTEXT]      if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }      [BUGGY]  }  else  if(!(o  instanceof  JsonArray)&&  object)  {  [BUGGY]      return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	replace	}  else  if(!(o  instanceof  JsonArray)&&  object)  {	  }    else    if(!(o    instanceof    JsonArray)&&    isObject)    {    	non-compiled	[CE]  cannot  find  symbol  object	66	None	replace
1552	[BUG]  [BUGGY]  }  else  if(!(o  instanceof  JsonArray)&&!isObject)  {  [CE]  cannot  find  symbol  isObject  [FE]              ArrayIndexOutOfBoundsException      [CONTEXT]      if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }      [BUGGY]  }  else  if(!(o  instanceof  JsonArray)&&!isObject)  {  [BUGGY]      return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	replace	}  else  if(!(o  instanceof  JsonArray)&&!isObject)  {	  }    else    if(!(o    instanceof    JsonArray)&&    isObject)    {    	non-compiled	[CE]  cannot  find  symbol  isObject	66	None	replace
1553	[BUG]  [BUGGY]  }  else  if(!(o  instanceof  JsonArray)&&  areObject)  {  [CE]  cannot  find  symbol  areObject  [FE]                ArrayIndexOutOfBoundsException      [CONTEXT]      if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }      [BUGGY]  }  else  if(!(o  instanceof  JsonArray)&&  areObject)  {  [BUGGY]      return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	replace	}  else  if(!(o  instanceof  JsonArray)&&  areObject)  {	  }    else    if(!(o    instanceof    JsonArray)&&    isObject)    {    	non-compiled	[CE]  cannot  find  symbol  areObject	66	None	replace
1554	[BUG]  [BUGGY]  }  else  if(o  instanceof  JsonObject  ||!(o  instanceof  JsonNull  &&!((  JsonNull)o).isObject()))  {  [CE]  cannot  find  symbol  [FE]          AssertionError      [CONTEXT]      if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }      [BUGGY]  }  else  if(o  instanceof  JsonObject  ||!(o  instanceof  JsonNull  &&!((  JsonNull)o).isObject()))  {  [BUGGY]      return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	replace	}  else  if(o  instanceof  JsonObject  ||!(o  instanceof  JsonNull  &&!((  JsonNull)o).isObject()))  {	  }    else    if(o    instanceof    JsonNull    ||!(o    instanceof    JsonNull    &&!(o    instanceof    JsonNull    &&!((    JsonNull)o).isObject()))    {    	non-compiled	[CE]  cannot  find  symbol	236	None	replace
1555	[BUG]  [BUGGY]  }  else  {  ArrayIndexOutOfBoundsException  e  =  new  ArrayIndexOutOfBoundsException(pathNames[0],  pathNames[1]);  [CE]  'else'  without  'if'  [FE]            ArrayIndexOutOfBoundsException      [CONTEXT]      if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }      [BUGGY]  }  else  {  ArrayIndexOutOfBoundsException  e  =  new  ArrayIndexOutOfBoundsException(pathNames[0],  pathNames[1]);  [BUGGY]      return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	replace	}  else  {  ArrayIndexOutOfBoundsException  e  =  new  ArrayIndexOutOfBoundsException(pathNames[0],  pathNames[1]);	  }    else    if(o    instanceof    JsonObject    ||    o    instanceof    JsonPrimitive)    {    ArrayIndexOutOfBoundsException    e    =    new    ArrayIndexOutOfBoundsException(pathNames[0],    pathNames[1]);    	non-compiled	[CE]  'else'  without  'if'	168	None	replace
1556	[BUG]  [BUGGY]  }  else  if(!(o  instanceof  JsonObject  <?>)&&!(o  instanceof  JsonArray))  {  [CE]  type  JsonObject  does  not  take  parameters  [FE]                    ArrayIndexOutOfBoundsException      [CONTEXT]      if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }      [BUGGY]  }  else  if(!(o  instanceof  JsonObject  <?>)&&!(o  instanceof  JsonArray))  {  [BUGGY]      return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	replace	}  else  if(!(o  instanceof  JsonObject  <?>)&&!(o  instanceof  JsonArray))  {	  }    else    if(!(o    instanceof    JsonObject    <?>))    {    	non-compiled	[CE]  type  JsonObject  does  not  take  parameters	79	None	replace
1557	[BUG]  [BUGGY]  }  else  if(!(o  instanceof  JsonObject  <?>)&&!(o  instanceof  String))  {  [CE]  type  JsonObject  does  not  take  parameters  [FE]                      ArrayIndexOutOfBoundsException      [CONTEXT]      if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }      [BUGGY]  }  else  if(!(o  instanceof  JsonObject  <?>)&&!(o  instanceof  String))  {  [BUGGY]      return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	replace	}  else  if(!(o  instanceof  JsonObject  <?>)&&!(o  instanceof  String))  {	  }    else    if(!(o    instanceof    JsonObject    <?>))    {    	non-compiled	[CE]  type  JsonObject  does  not  take  parameters	79	None	replace
1558	[BUG]  [BUGGY]  }    else    if(o    instanceof    JsonObject    ||    o    instanceof    String)    {    return  JsonToken.BEGIN_OBJECT;  if(o  instanceof  JsonObject  ||  o  instanceof  String)  {  return  JsonToken.BEGIN_OBJECT;  }  else  if(o  instanceof  JsonObject  ||  o  instanceof  String)  {  return  JsonToken.BEGIN_ARRAY;  }  [CE]  unreachable  statement  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]      if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }      [BUGGY]  }    else    if(o    instanceof    JsonObject    ||    o    instanceof    String)    {    return  JsonToken.BEGIN_OBJECT;  if(o  instanceof  JsonObject  ||  o  instanceof  String)  {  return  JsonToken.BEGIN_OBJECT;  }  else  if(o  instanceof  JsonObject  ||  o  instanceof  String)  {  return  JsonToken.BEGIN_ARRAY;  }  [BUGGY]      return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	replace	}        else        if(o        instanceof        JsonObject        ||        o        instanceof        String)        {        return    JsonToken.BEGIN_OBJECT;    if(o  instanceof  JsonObject  ||  o  instanceof  String)  {  return  JsonToken.BEGIN_OBJECT;  }  else  if(o  instanceof  JsonObject  ||  o  instanceof  String)  {  return  JsonToken.BEGIN_ARRAY;  }	  	non-compiled	[CE]  unreachable  statement	151	None	add
1559	[BUG]  [BUGGY]  }  else  {  case  JsonToken.BEGIN_OBJECT:  return  JsonToken.BEGIN_OBJECT;  [CE]  orphaned  case  [FE]          AssertionError      [CONTEXT]      if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }      [BUGGY]  }  else  {  case  JsonToken.BEGIN_OBJECT:  return  JsonToken.BEGIN_OBJECT;  [BUGGY]      return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	replace	}  else  {  case  JsonToken.BEGIN_OBJECT:  return  JsonToken.BEGIN_OBJECT;	  }    else    if(!(o    instanceof    JsonObject))    {    }    else    if(!(o    instanceof    JsonObject))    {    case    JsonToken.BEGIN_OBJECT:    return    JsonToken.BEGIN_OBJECT;    	non-compiled	[CE]  orphaned  case	207	None	replace
1560	[BUG]  [BUGGY]  }  else  {  if(o  ==  null)  {  return  JsonToken.BEGIN_OBJECT;  }  [CE]  'else'  without  'if'  [FE]            AssertionError      [CONTEXT]      if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }      [BUGGY]  }  else  {  if(o  ==  null)  {  return  JsonToken.BEGIN_OBJECT;  }  [BUGGY]      return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	replace	}  else  {  if(o  ==  null)  {  return  JsonToken.BEGIN_OBJECT;  }	  }    else    if(!(o    instanceof    JsonObject))    {    }    else    if(!(o    instanceof    JsonObject))    {    case    JsonToken.BEGIN_OBJECT:    return    JsonToken.BEGIN_OBJECT;    	non-compiled	[CE]  'else'  without  'if'	207	None	replace
1561	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]              AssertionError      [CONTEXT]      if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }      [BUGGY]  }  else  if(o  ==  JsonToken.BEGIN_OBJECT  ||  o  ==  JsonToken.BEGIN_OBJECT)  {  [BUGGY]      return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	add	}  else  if(o  ==  JsonToken.BEGIN_OBJECT  ||  o  ==  JsonToken.BEGIN_OBJECT)  {	  }    else    if(!(o    instanceof    JsonObject))    {    }    else    if(!(o    instanceof    JsonObject))    {    case    JsonToken.BEGIN_OBJECT:    return    JsonToken.BEGIN_OBJECT;    	compilable	  [FE]  AssertionError  	207	2	replace
1562	[BUG]  [BUGGY]  }  else  if(o  ==  JsonToken.BEGIN_OBJECT  ||  o  ==  JsonToken.BEGIN_OBJECT)  {  [FE]  AssertionError  [FE]              AssertionError      [CONTEXT]      if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }      [BUGGY]  }  else  if(o  ==  JsonToken.BEGIN_OBJECT  ||  o  ==  JsonToken.BEGIN_OBJECT)  {  [BUGGY]      return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	replace	}  else  if(o  ==  JsonToken.BEGIN_OBJECT  ||  o  ==  JsonToken.BEGIN_OBJECT)  {	  }    else    if(!(o    instanceof    JsonObject))    {    }    else    if(!(o    instanceof    JsonObject))    {    case    JsonToken.BEGIN_OBJECT:    return    JsonToken.BEGIN_OBJECT;    	compilable	  [FE]  AssertionError  	207	2	replace
1563	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]                AssertionError      [CONTEXT]      if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }      [BUGGY]  }  else  if(o  ==  JsonToken.BEGIN_OBJECT  ||  o  ==  JsonToken.BEGIN_ARRAY)  {  [BUGGY]      return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	add	}  else  if(o  ==  JsonToken.BEGIN_OBJECT  ||  o  ==  JsonToken.BEGIN_ARRAY)  {	  }    else    if(!(o    instanceof    JsonObject))    {    }    else    if(!(o    instanceof    JsonObject))    {    case    JsonToken.BEGIN_OBJECT:    return    JsonToken.BEGIN_OBJECT;    	compilable	  [FE]  AssertionError  	207	2	replace
1564	[BUG]  [BUGGY]  }  else  if(o  ==  JsonToken.BEGIN_OBJECT  ||  o  ==  JsonToken.BEGIN_ARRAY)  {  [FE]  AssertionError  [FE]                AssertionError      [CONTEXT]      if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }      [BUGGY]  }  else  if(o  ==  JsonToken.BEGIN_OBJECT  ||  o  ==  JsonToken.BEGIN_ARRAY)  {  [BUGGY]      return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	replace	}  else  if(o  ==  JsonToken.BEGIN_OBJECT  ||  o  ==  JsonToken.BEGIN_ARRAY)  {	  }    else    if(!(o    instanceof    JsonObject))    {    }    else    if(!(o    instanceof    JsonObject))    {    case    JsonToken.BEGIN_OBJECT:    return    JsonToken.BEGIN_OBJECT;    	compilable	  [FE]  AssertionError  	207	2	replace
1565	[BUG]  [BUGGY]  }  else  if(o  instanceof  JsonNull  ||!(o  instanceof  JsonNull  &&!((  JsonNull)o).getClass().isAssignmentTo(JsonToken.BEGIN_OBJECT))  {  [CE]  ')'  expected  [FE]        AssertionError      [CONTEXT]      if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }      [BUGGY]  }  else  if(o  instanceof  JsonNull  ||!(o  instanceof  JsonNull  &&!((  JsonNull)o).getClass().isAssignmentTo(JsonToken.BEGIN_OBJECT))  {  [BUGGY]      return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	replace	}  else  if(o  instanceof  JsonNull  ||!(o  instanceof  JsonNull  &&!((  JsonNull)o).getClass().isAssignmentTo(JsonToken.BEGIN_OBJECT))  {	  }    else    if(o    instanceof    JsonNull    ||!(o    instanceof    JsonNull    &&!(o    instanceof    JsonNull    &&!((    JsonNull)o).getClass().isArray()))    {    	non-compiled	[CE]  ')'  expected	235	None	replace
1566	[BUG]  [BUGGY]  }  else  if(!(o  instanceof  JsonObject  ||  o  instanceof  Boolean))  {  }  else  if(!(o  instanceof  JsonObject  ||  o  instanceof  Boolean))  {  return  JsonToken.BEGIN_OBJECT;  }  else  if(!(o  instanceof  JsonObject  ||  o  instanceof  Boolean))  {  [CE]  missing  return  statement  [FE]    AssertionError    [CONTEXT]      if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }      [BUGGY]  }  else  if(!(o  instanceof  JsonObject  ||  o  instanceof  Boolean))  {  }  else  if(!(o  instanceof  JsonObject  ||  o  instanceof  Boolean))  {  return  JsonToken.BEGIN_OBJECT;  }  else  if(!(o  instanceof  JsonObject  ||  o  instanceof  Boolean))  {  [BUGGY]      return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	replace	}    else    if(!(o    instanceof    JsonObject    ||    o    instanceof    Boolean))    {    }  else  if(!(o  instanceof  JsonObject  ||  o  instanceof  Boolean))  {  return  JsonToken.BEGIN_OBJECT;  }  else  if(!(o  instanceof  JsonObject  ||  o  instanceof  Boolean))  {	  	non-compiled	[CE]  missing  return  statement	254	None	add
1567	[BUG]  [BUGGY]  }  else  if(!(o  instanceof  JsonObject  ||  o  instanceof  Boolean))  {  }  else  if(!(o  instanceof  JsonObject  ||  o  instanceof  Boolean))  {  this  return  JsonToken.BEGIN_OBJECT;  }  else  if(!(o  instanceof  JsonObject  ||  o  instanceof  Boolean))  {  [CE]  not  a  statement  [FE]      AssertionError    [CONTEXT]      if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }      [BUGGY]  }  else  if(!(o  instanceof  JsonObject  ||  o  instanceof  Boolean))  {  }  else  if(!(o  instanceof  JsonObject  ||  o  instanceof  Boolean))  {  this  return  JsonToken.BEGIN_OBJECT;  }  else  if(!(o  instanceof  JsonObject  ||  o  instanceof  Boolean))  {  [BUGGY]      return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	replace	}    else    if(!(o    instanceof    JsonObject    ||    o    instanceof    Boolean))    {    }  else  if(!(o  instanceof  JsonObject  ||  o  instanceof  Boolean))  {  this  return  JsonToken.BEGIN_OBJECT;  }  else  if(!(o  instanceof  JsonObject  ||  o  instanceof  Boolean))  {	  	non-compiled	[CE]  not  a  statement	254	None	add
1568	[BUG]  [BUGGY]  }  else  if(!(o  instanceof  JsonObject  ||  o  instanceof  Boolean))  {  }  else  if(!(o  instanceof  JsonObject  ||  o  instanceof  Boolean))  {  case  JsonToken.BEGIN_OBJECT;  return  JsonToken.BEGIN_OBJECT;  }  else  if(!(o  instanceof  JsonObject  ||  o  instanceof  Boolean))  {  [CE]  orphaned  case  [FE]        AssertionError    [CONTEXT]      if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }      [BUGGY]  }  else  if(!(o  instanceof  JsonObject  ||  o  instanceof  Boolean))  {  }  else  if(!(o  instanceof  JsonObject  ||  o  instanceof  Boolean))  {  case  JsonToken.BEGIN_OBJECT;  return  JsonToken.BEGIN_OBJECT;  }  else  if(!(o  instanceof  JsonObject  ||  o  instanceof  Boolean))  {  [BUGGY]      return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	replace	}    else    if(!(o    instanceof    JsonObject    ||    o    instanceof    Boolean))    {    }  else  if(!(o  instanceof  JsonObject  ||  o  instanceof  Boolean))  {  case  JsonToken.BEGIN_OBJECT;  return  JsonToken.BEGIN_OBJECT;  }  else  if(!(o  instanceof  JsonObject  ||  o  instanceof  Boolean))  {	  	non-compiled	[CE]  orphaned  case	254	None	add
1569	[BUG]  [BUGGY]  }  else  if(!(o  instanceof  JsonObject  ||  o  instanceof  Boolean))  {  }  else  if(!(o  instanceof  JsonObject  ||  o  instanceof  Boolean))  {  case  JsonToken.BEGIN_OBJECT;  return  JsonToken.BEGIN_ARRAY;  }  else  if(!(o  instanceof  JsonObject  ||  o  instanceof  Boolean))  {  [CE]  orphaned  case  [FE]          AssertionError    [CONTEXT]      if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }      [BUGGY]  }  else  if(!(o  instanceof  JsonObject  ||  o  instanceof  Boolean))  {  }  else  if(!(o  instanceof  JsonObject  ||  o  instanceof  Boolean))  {  case  JsonToken.BEGIN_OBJECT;  return  JsonToken.BEGIN_ARRAY;  }  else  if(!(o  instanceof  JsonObject  ||  o  instanceof  Boolean))  {  [BUGGY]      return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	replace	}    else    if(!(o    instanceof    JsonObject    ||    o    instanceof    Boolean))    {    }  else  if(!(o  instanceof  JsonObject  ||  o  instanceof  Boolean))  {  case  JsonToken.BEGIN_OBJECT;  return  JsonToken.BEGIN_ARRAY;  }  else  if(!(o  instanceof  JsonObject  ||  o  instanceof  Boolean))  {	  	non-compiled	[CE]  orphaned  case	254	None	add
1570	[BUG]  [BUGGY]  }  else  if(!(o  instanceof  JsonObject  ||  o  instanceof  Boolean))  {  }  else  if(!(o  instanceof  JsonObject  ||  o  instanceof  Boolean))  {  return  JsonToken.BEGIN_OBJECT;  }  else  if(!(o  instanceof  JSONObject  ||  o  instanceof  Boolean))  {  [CE]  cannot  find  symbol  [FE]            AssertionError    [CONTEXT]      if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }      [BUGGY]  }  else  if(!(o  instanceof  JsonObject  ||  o  instanceof  Boolean))  {  }  else  if(!(o  instanceof  JsonObject  ||  o  instanceof  Boolean))  {  return  JsonToken.BEGIN_OBJECT;  }  else  if(!(o  instanceof  JSONObject  ||  o  instanceof  Boolean))  {  [BUGGY]      return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	replace	}    else    if(!(o    instanceof    JsonObject    ||    o    instanceof    Boolean))    {    }  else  if(!(o  instanceof  JsonObject  ||  o  instanceof  Boolean))  {  return  JsonToken.BEGIN_OBJECT;  }  else  if(!(o  instanceof  JSONObject  ||  o  instanceof  Boolean))  {	  	non-compiled	[CE]  cannot  find  symbol	254	None	add
1571	[BUG]  [BUGGY]  }  else  if(!(o  instanceof  JsonArray))  {  ArrayIndexOutOfBoundsException  e  =  new  ArrayIndexOutOfBoundsException(i.next());  [CE]  cannot  find  symbol  i  [FE]            ArrayIndexOutOfBoundsException      [CONTEXT]      if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }      [BUGGY]  }  else  if(!(o  instanceof  JsonArray))  {  ArrayIndexOutOfBoundsException  e  =  new  ArrayIndexOutOfBoundsException(i.next());  [BUGGY]      return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	replace	}  else  if(!(o  instanceof  JsonArray))  {  ArrayIndexOutOfBoundsException  e  =  new  ArrayIndexOutOfBoundsException(i.next());	  }    else    if(!(o    instanceof    JsonArray))    {    ArrayIndexOutOfBoundsException    e    =    new    ArrayIndexOutOfBoundsException(iterator.next());    	non-compiled	[CE]  cannot  find  symbol  i	133	None	replace
1572	[BUG]  [BUGGY]  }  else  if(!(o  instanceof  JsonArray))  {  ArrayIndexOutOfBoundsException  e  =  new  ArrayIndexOutOfBoundsException(docInfo.next());  [CE]  cannot  find  symbol  docInfo  [FE]              ArrayIndexOutOfBoundsException      [CONTEXT]      if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }      [BUGGY]  }  else  if(!(o  instanceof  JsonArray))  {  ArrayIndexOutOfBoundsException  e  =  new  ArrayIndexOutOfBoundsException(docInfo.next());  [BUGGY]      return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	replace	}  else  if(!(o  instanceof  JsonArray))  {  ArrayIndexOutOfBoundsException  e  =  new  ArrayIndexOutOfBoundsException(docInfo.next());	  }    else    if(!(o    instanceof    JsonArray))    {    ArrayIndexOutOfBoundsException    e    =    new    ArrayIndexOutOfBoundsException(iterator.next());    	non-compiled	[CE]  cannot  find  symbol  docInfo	133	None	replace
1573	[BUG]  [BUGGY]  }  else  if(!(o  instanceof  JsonArray))  {  ArrayIndexOutOfBoundsException  e  =  new  ArrayIndexOutOfBoundsException(iterator.getCurrentToken());  [CE]  cannot  find  symbol  iterator  [FE]                ArrayIndexOutOfBoundsException      [CONTEXT]      if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }      [BUGGY]  }  else  if(!(o  instanceof  JsonArray))  {  ArrayIndexOutOfBoundsException  e  =  new  ArrayIndexOutOfBoundsException(iterator.getCurrentToken());  [BUGGY]      return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	replace	}  else  if(!(o  instanceof  JsonArray))  {  ArrayIndexOutOfBoundsException  e  =  new  ArrayIndexOutOfBoundsException(iterator.getCurrentToken());	  }    else    if(!(o    instanceof    JsonArray))    {    ArrayIndexOutOfBoundsException    e    =    new    ArrayIndexOutOfBoundsException(iterator.next());    	non-compiled	[CE]  cannot  find  symbol  iterator	133	None	replace
1574	[BUG]  [BUGGY]  }  else  if(!(o  instanceof  JsonArray))  {  ArrayIndexOutOfBoundsException  e  =  new  ArrayIndexOutOfBoundsException(document);  [CE]  cannot  find  symbol  document  [FE]                  ArrayIndexOutOfBoundsException      [CONTEXT]      if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }      [BUGGY]  }  else  if(!(o  instanceof  JsonArray))  {  ArrayIndexOutOfBoundsException  e  =  new  ArrayIndexOutOfBoundsException(document);  [BUGGY]      return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	replace	}  else  if(!(o  instanceof  JsonArray))  {  ArrayIndexOutOfBoundsException  e  =  new  ArrayIndexOutOfBoundsException(document);	  }    else    if(!(o    instanceof    JsonArray))    {    ArrayIndexOutOfBoundsException    e    =    new    ArrayIndexOutOfBoundsException(iterator.next());    	non-compiled	[CE]  cannot  find  symbol  document	133	None	replace
1575	[BUG]  [BUGGY]  [FE]  ArrayIndexOutOfBoundsException  [FE]                    ArrayIndexOutOfBoundsException      [CONTEXT]      if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }      [BUGGY]  }  else  if(!(o  instanceof  JsonArray))  {  ArrayIndexOutOfBoundsException  e  =  new  ArrayIndexOutOfBoundsException(toString());  [BUGGY]      return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	add	}  else  if(!(o  instanceof  JsonArray))  {  ArrayIndexOutOfBoundsException  e  =  new  ArrayIndexOutOfBoundsException(toString());	  }    else    if(!(o    instanceof    JsonArray))    {    ArrayIndexOutOfBoundsException    e    =    new    ArrayIndexOutOfBoundsException(iterator.next());    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	133	2	replace
1576	[BUG]  [BUGGY]  }  else  if(!(o  instanceof  JsonArray))  {  ArrayIndexOutOfBoundsException  e  =  new  ArrayIndexOutOfBoundsException(toString());  [FE]  ArrayIndexOutOfBoundsException  [FE]                    ArrayIndexOutOfBoundsException      [CONTEXT]      if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }      [BUGGY]  }  else  if(!(o  instanceof  JsonArray))  {  ArrayIndexOutOfBoundsException  e  =  new  ArrayIndexOutOfBoundsException(toString());  [BUGGY]      return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	replace	}  else  if(!(o  instanceof  JsonArray))  {  ArrayIndexOutOfBoundsException  e  =  new  ArrayIndexOutOfBoundsException(toString());	  }    else    if(!(o    instanceof    JsonArray))    {    ArrayIndexOutOfBoundsException    e    =    new    ArrayIndexOutOfBoundsException(iterator.next());    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	133	2	replace
1577	[BUG]  [BUGGY]  }  else  if(o  instanceof  JsonArray  ||  o  instanceof  JsonPrimitive)  {  }  else  if(o  instanceof  JsonArray  ||  o  instanceof  JsonPrimitive)  {  return  JsonToken.BEGIN_OBJECT;  }  else  if(o  instanceof  JsonPrimitive)  {  return  JsonToken.BEGIN_ARRAY;  }  [CE]  illegal  start  of  type  [FE]    AssertionError    [CONTEXT]      if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }      [BUGGY]  }  else  if(o  instanceof  JsonArray  ||  o  instanceof  JsonPrimitive)  {  }  else  if(o  instanceof  JsonArray  ||  o  instanceof  JsonPrimitive)  {  return  JsonToken.BEGIN_OBJECT;  }  else  if(o  instanceof  JsonPrimitive)  {  return  JsonToken.BEGIN_ARRAY;  }  [BUGGY]      return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	replace	}    else    if(o    instanceof    JsonArray    ||    o    instanceof    JsonPrimitive)    {    }  else  if(o  instanceof  JsonArray  ||  o  instanceof  JsonPrimitive)  {  return  JsonToken.BEGIN_OBJECT;  }  else  if(o  instanceof  JsonPrimitive)  {  return  JsonToken.BEGIN_ARRAY;  }	  	non-compiled	[CE]  illegal  start  of  type	110	None	add
1578	[BUG]  [BUGGY]  }  else  if(o  instanceof  JsonArray  ||  o  instanceof  JsonPrimitive)  {  }  else  if(o  instanceof  JsonArray  ||  o  instanceof  JsonPrimitive)  {  return  JsonToken.BEGIN_OBJECT;  }  else  if(o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  [CE]  illegal  start  of  type  [FE]      AssertionError    [CONTEXT]      if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }      [BUGGY]  }  else  if(o  instanceof  JsonArray  ||  o  instanceof  JsonPrimitive)  {  }  else  if(o  instanceof  JsonArray  ||  o  instanceof  JsonPrimitive)  {  return  JsonToken.BEGIN_OBJECT;  }  else  if(o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  [BUGGY]      return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	replace	}    else    if(o    instanceof    JsonArray    ||    o    instanceof    JsonPrimitive)    {    }  else  if(o  instanceof  JsonArray  ||  o  instanceof  JsonPrimitive)  {  return  JsonToken.BEGIN_OBJECT;  }  else  if(o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }	  	non-compiled	[CE]  illegal  start  of  type	110	None	add
1579	[BUG]  [BUGGY]  }  else  if(o  instanceof  JsonArray  ||  o  instanceof  JsonPrimitive)  {  }  else  if(o  instanceof  JsonArray  ||  o  instanceof  JsonPrimitive)  {  returned  JsonToken.BEGIN_OBJECT;  }  else  if(o  instanceof  JsonPrimitive)  {  return  JsonToken.BEGIN_ARRAY;  }  [CE]  [FE]        AssertionError    [CONTEXT]      if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }      [BUGGY]  }  else  if(o  instanceof  JsonArray  ||  o  instanceof  JsonPrimitive)  {  }  else  if(o  instanceof  JsonArray  ||  o  instanceof  JsonPrimitive)  {  returned  JsonToken.BEGIN_OBJECT;  }  else  if(o  instanceof  JsonPrimitive)  {  return  JsonToken.BEGIN_ARRAY;  }  [BUGGY]      return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	replace	}    else    if(o    instanceof    JsonArray    ||    o    instanceof    JsonPrimitive)    {    }  else  if(o  instanceof  JsonArray  ||  o  instanceof  JsonPrimitive)  {  returned  JsonToken.BEGIN_OBJECT;  }  else  if(o  instanceof  JsonPrimitive)  {  return  JsonToken.BEGIN_ARRAY;  }	  	non-compiled	[CE]  	110	None	add
1580	[BUG]  [BUGGY]  }  else  if(o  instanceof  JsonArray  ||  o  instanceof  JsonPrimitive)  {  }  else  if(o  instanceof  JsonArray  ||  o  instanceof  JsonPrimitive)  {  return  JsonToken.BEGIN_OBJECT;  }  else  if(o  instanceof  JsonPrimitive)  {  return  JsonToken.BEGIN_OBJECT;  }  [CE]  illegal  start  of  type  [FE]          AssertionError    [CONTEXT]      if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }      [BUGGY]  }  else  if(o  instanceof  JsonArray  ||  o  instanceof  JsonPrimitive)  {  }  else  if(o  instanceof  JsonArray  ||  o  instanceof  JsonPrimitive)  {  return  JsonToken.BEGIN_OBJECT;  }  else  if(o  instanceof  JsonPrimitive)  {  return  JsonToken.BEGIN_OBJECT;  }  [BUGGY]      return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	replace	}    else    if(o    instanceof    JsonArray    ||    o    instanceof    JsonPrimitive)    {    }  else  if(o  instanceof  JsonArray  ||  o  instanceof  JsonPrimitive)  {  return  JsonToken.BEGIN_OBJECT;  }  else  if(o  instanceof  JsonPrimitive)  {  return  JsonToken.BEGIN_OBJECT;  }	  	non-compiled	[CE]  illegal  start  of  type	110	None	add
1581	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }      [BUGGY]  }  else  if(o  instanceof  JsonObject  ==  false  ||  o  instanceof  JsonPrimitive)  {  [BUGGY]      return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	add	}  else  if(o  instanceof  JsonObject  ==  false  ||  o  instanceof  JsonPrimitive)  {	  }    else    if(o    instanceof    JsonObject    ==    false)    {    	compilable	  [FE]  AssertionError  	82	2	replace
1582	[BUG]  [BUGGY]  }  else  if(o  instanceof  JsonObject  ==  false  ||  o  instanceof  JsonPrimitive)  {  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }      [BUGGY]  }  else  if(o  instanceof  JsonObject  ==  false  ||  o  instanceof  JsonPrimitive)  {  [BUGGY]      return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	replace	}  else  if(o  instanceof  JsonObject  ==  false  ||  o  instanceof  JsonPrimitive)  {	  }    else    if(o    instanceof    JsonObject    ==    false)    {    	compilable	  [FE]  AssertionError  	82	2	replace
1583	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }      [BUGGY]  }  else  if(o  instanceof  JsonObject  ==  false  ||  o  instanceof  JsonArray)  {  [BUGGY]      return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	add	}  else  if(o  instanceof  JsonObject  ==  false  ||  o  instanceof  JsonArray)  {	  }    else    if(o    instanceof    JsonObject    ==    false)    {    	compilable	  [FE]  AssertionError  	82	2	replace
1584	[BUG]  [BUGGY]  }  else  if(o  instanceof  JsonObject  ==  false  ||  o  instanceof  JsonArray)  {  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }      [BUGGY]  }  else  if(o  instanceof  JsonObject  ==  false  ||  o  instanceof  JsonArray)  {  [BUGGY]      return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	replace	}  else  if(o  instanceof  JsonObject  ==  false  ||  o  instanceof  JsonArray)  {	  }    else    if(o    instanceof    JsonObject    ==    false)    {    	compilable	  [FE]  AssertionError  	82	2	replace
1585	[BUG]  [BUGGY]  }  else  if(o  instanceof  JsonObject!=  )  {  [CE]  illegal  start  of  expression  [FE]            ArrayIndexOutOfBoundsException      [CONTEXT]      if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }      [BUGGY]  }  else  if(o  instanceof  JsonObject!=  )  {  [BUGGY]      return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	replace	}  else  if(o  instanceof  JsonObject!=  )  {	  }    else    if(o    instanceof    JsonObject    <    =)    {    	non-compiled	[CE]  illegal  start  of  expression	30	None	replace
1586	[BUG]  [BUGGY]  }  else  if(o  instanceof  JsonPrimitive)  {  ((  JsonPrimitive)o).getClass().isArray())  {  return  JsonToken.BEGIN_OBJECT;  }  else  if(o  instanceof  JsonPrimitive)  {  [CE]  ';'  expected  [FE]    AssertionError    [CONTEXT]      if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }      [BUGGY]  }  else  if(o  instanceof  JsonPrimitive)  {  ((  JsonPrimitive)o).getClass().isArray())  {  return  JsonToken.BEGIN_OBJECT;  }  else  if(o  instanceof  JsonPrimitive)  {  [BUGGY]      return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	replace	}    else    if(o    instanceof    JsonPrimitive)    {    ((  JsonPrimitive)o).getClass().isArray())  {  return  JsonToken.BEGIN_OBJECT;  }  else  if(o  instanceof  JsonPrimitive)  {	  	non-compiled	[CE]  ';'  expected	8	None	add
1587	[BUG]  [BUGGY]  }  else  if(o  instanceof  JsonPrimitive)  {  }  else  if(o  instanceof  JsonPrimitive)  {  return  JsonToken.BEGIN_OBJECT;  }  else  if(o  instanceof  JsonArray)  {  [CE]  missing  return  statement  [FE]      AssertionError    [CONTEXT]      if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }      [BUGGY]  }  else  if(o  instanceof  JsonPrimitive)  {  }  else  if(o  instanceof  JsonPrimitive)  {  return  JsonToken.BEGIN_OBJECT;  }  else  if(o  instanceof  JsonArray)  {  [BUGGY]      return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	replace	}    else    if(o    instanceof    JsonPrimitive)    {    }  else  if(o  instanceof  JsonPrimitive)  {  return  JsonToken.BEGIN_OBJECT;  }  else  if(o  instanceof  JsonArray)  {	  	non-compiled	[CE]  missing  return  statement	8	None	add
1588	[BUG]  [BUGGY]  }  else  if(o  instanceof  JsonPrimitive)  {  ((  JsonPrimitive)o).getClass().isArray()?  JsonToken.BEGIN_OBJECT  :  JsonToken.BEGIN_ARRAY;  [CE]  not  a  statement  [FE]        AssertionError    [CONTEXT]      if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }      [BUGGY]  }  else  if(o  instanceof  JsonPrimitive)  {  ((  JsonPrimitive)o).getClass().isArray()?  JsonToken.BEGIN_OBJECT  :  JsonToken.BEGIN_ARRAY;  [BUGGY]      return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	replace	}    else    if(o    instanceof    JsonPrimitive)    {    ((  JsonPrimitive)o).getClass().isArray()?  JsonToken.BEGIN_OBJECT  :  JsonToken.BEGIN_ARRAY;	  	non-compiled	[CE]  not  a  statement	8	None	add
1589	[BUG]  [BUGGY]  }  else  if(o  instanceof  JsonPrimitive)  {  ((  JsonPrimitive)o).getClass().isArray())  {  return  JsonToken.BEGIN_OBJECT;  [CE]  ';'  expected  [FE]          AssertionError    [CONTEXT]      if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }      [BUGGY]  }  else  if(o  instanceof  JsonPrimitive)  {  ((  JsonPrimitive)o).getClass().isArray())  {  return  JsonToken.BEGIN_OBJECT;  [BUGGY]      return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	replace	}    else    if(o    instanceof    JsonPrimitive)    {    ((  JsonPrimitive)o).getClass().isArray())  {  return  JsonToken.BEGIN_OBJECT;	  	non-compiled	[CE]  ';'  expected	8	None	add
1590	[BUG]  [BUGGY]  }  else  if(o  instanceof  JsonPrimitive)  {  ((  JsonPrimitive)o).getClass().isArray()?  JsonToken.BEGIN_OBJECT  :  JsonToken.END_ARRAY;  [CE]  not  a  statement  [FE]            AssertionError    [CONTEXT]      if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }      [BUGGY]  }  else  if(o  instanceof  JsonPrimitive)  {  ((  JsonPrimitive)o).getClass().isArray()?  JsonToken.BEGIN_OBJECT  :  JsonToken.END_ARRAY;  [BUGGY]      return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	replace	}    else    if(o    instanceof    JsonPrimitive)    {    ((  JsonPrimitive)o).getClass().isArray()?  JsonToken.BEGIN_OBJECT  :  JsonToken.END_ARRAY;	  	non-compiled	[CE]  not  a  statement	8	None	add
1591	[BUG]  [BUGGY]  }  else  if(!(o  instanceof  JsonType)&&!(o  instanceof  JsonArray))  {  [CE]  cannot  find  symbol  [FE]          ArrayIndexOutOfBoundsException      [CONTEXT]      if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }      [BUGGY]  }  else  if(!(o  instanceof  JsonType)&&!(o  instanceof  JsonArray))  {  [BUGGY]      return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	replace	}  else  if(!(o  instanceof  JsonType)&&!(o  instanceof  JsonArray))  {	  }    else    if(!(o    instanceof    JsonType))    {    	non-compiled	[CE]  cannot  find  symbol	65	None	replace
1592	[BUG]  [BUGGY]  aughtExceptionHandler(this,  JsonToken.START_OBJECT,  null);  [CE]  cannot  find  symbol  START_OBJECT  [FE]                          ArrayIndexOutOfBoundsException      [CONTEXT]      if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }      [BUGGY]  aughtExceptionHandler(this,  JsonToken.START_OBJECT,  null);  [BUGGY]      return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	replace	aughtExceptionHandler(this,  JsonToken.START_OBJECT,  null);	  if(o    ==    null)    {    if(isObject)    {    return    JsonToken.NAME;    }    	non-compiled	[CE]  cannot  find  symbol  START_OBJECT	186	None	replace
1593	[BUG]  [BUGGY]  }  else  if(!(o  instanceof  JsonObject)&&((  JsonObject)o).setObject(isObject?  JsonToken.BEGIN_OBJECT  :  JsonToken.BEGIN_OBJECT);  [CE]  [FE]                  AssertionError      [CONTEXT]      if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }      [BUGGY]  }  else  if(!(o  instanceof  JsonObject)&&((  JsonObject)o).setObject(isObject?  JsonToken.BEGIN_OBJECT  :  JsonToken.BEGIN_OBJECT);  [BUGGY]      return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	replace	}  else  if(!(o  instanceof  JsonObject)&&((  JsonObject)o).setObject(isObject?  JsonToken.BEGIN_OBJECT  :  JsonToken.BEGIN_OBJECT);	  }    else    if(!(o    instanceof    JsonObject))    {    ((    JsonObject)o).setObject(isObject?    JsonToken.BEGIN_OBJECT    :    JsonToken.BEGIN_OBJECT);    	non-compiled	[CE]  	161	None	replace
1594	[BUG]  [BUGGY]  }    else    if(o    instanceof    JsonArray)    {    return  JsonToken.BEGIN_OBJECT;  }  else  if(o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_OBJECT;  }  other  if(o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_OBJECT;  }  [CE]  not  a  statement  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]      if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }      [BUGGY]  }    else    if(o    instanceof    JsonArray)    {    return  JsonToken.BEGIN_OBJECT;  }  else  if(o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_OBJECT;  }  other  if(o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_OBJECT;  }  [BUGGY]      return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	replace	}        else        if(o        instanceof        JsonArray)        {        return    JsonToken.BEGIN_OBJECT;    }  else  if(o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_OBJECT;  }  other  if(o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_OBJECT;  }	  	non-compiled	[CE]  not  a  statement	171	None	add
1595	[BUG]  [BUGGY]  }    else    if(o    instanceof    JsonArray)    {    return  JsonToken.BEGIN_OBJECT;  }  else  if(o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_OBJECT;  }  while(o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  [CE]  illegal  start  of  type  [FE]      ArrayIndexOutOfBoundsException    [CONTEXT]      if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }      [BUGGY]  }    else    if(o    instanceof    JsonArray)    {    return  JsonToken.BEGIN_OBJECT;  }  else  if(o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_OBJECT;  }  while(o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  [BUGGY]      return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	replace	}        else        if(o        instanceof        JsonArray)        {        return    JsonToken.BEGIN_OBJECT;    }  else  if(o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_OBJECT;  }  while(o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }	  	non-compiled	[CE]  illegal  start  of  type	171	None	add
1596	[BUG]  [BUGGY]  }    else    if(o    instanceof    JsonArray)    {    return  JsonToken.BEGIN_OBJECT;  }  if(o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_OBJECT;  }  else  if(o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_OBJECT;  }  [CE]  illegal  start  of  type  [FE]        ArrayIndexOutOfBoundsException    [CONTEXT]      if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }      [BUGGY]  }    else    if(o    instanceof    JsonArray)    {    return  JsonToken.BEGIN_OBJECT;  }  if(o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_OBJECT;  }  else  if(o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_OBJECT;  }  [BUGGY]      return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	replace	}        else        if(o        instanceof        JsonArray)        {        return    JsonToken.BEGIN_OBJECT;    }  if(o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_OBJECT;  }  else  if(o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_OBJECT;  }	  	non-compiled	[CE]  illegal  start  of  type	171	None	add
1597	[BUG]  [BUGGY]  [FE]  ArrayIndexOutOfBoundsException  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]      if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }      [BUGGY]  }  else  if(o  instanceof  JsonArray  ||  o  instanceof  JsonNull  ||!(o  instanceof  JsonNull))  {  [BUGGY]      return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	add	}  else  if(o  instanceof  JsonArray  ||  o  instanceof  JsonNull  ||!(o  instanceof  JsonNull))  {	  }    else    if(o    instanceof    JsonNull    ||!(o    instanceof    JsonNull    &&!(o    instanceof    JsonNull)))    {    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	4	2	replace
1598	[BUG]  [BUGGY]  }  else  if(o  instanceof  JsonArray  ||  o  instanceof  JsonNull  ||!(o  instanceof  JsonNull))  {  [FE]  ArrayIndexOutOfBoundsException  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]      if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }      [BUGGY]  }  else  if(o  instanceof  JsonArray  ||  o  instanceof  JsonNull  ||!(o  instanceof  JsonNull))  {  [BUGGY]      return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	replace	}  else  if(o  instanceof  JsonArray  ||  o  instanceof  JsonNull  ||!(o  instanceof  JsonNull))  {	  }    else    if(o    instanceof    JsonNull    ||!(o    instanceof    JsonNull    &&!(o    instanceof    JsonNull)))    {    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	4	2	replace
1599	[BUG]  [BUGGY]  [FE]  ArrayIndexOutOfBoundsException  [FE]      ArrayIndexOutOfBoundsException    [CONTEXT]      if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }      [BUGGY]  }  else  if(o  instanceof  JsonNull  ||!(o  instanceof  JsonNull  ||  o  instanceof  JsonNull))  {  [BUGGY]      return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	add	}  else  if(o  instanceof  JsonNull  ||!(o  instanceof  JsonNull  ||  o  instanceof  JsonNull))  {	  }    else    if(o    instanceof    JsonNull    ||!(o    instanceof    JsonNull    &&!(o    instanceof    JsonNull)))    {    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	4	2	replace
1600	[BUG]  [BUGGY]  }  else  if(o  instanceof  JsonNull  ||!(o  instanceof  JsonNull  ||  o  instanceof  JsonNull))  {  [FE]  ArrayIndexOutOfBoundsException  [FE]      ArrayIndexOutOfBoundsException    [CONTEXT]      if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }      [BUGGY]  }  else  if(o  instanceof  JsonNull  ||!(o  instanceof  JsonNull  ||  o  instanceof  JsonNull))  {  [BUGGY]      return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	replace	}  else  if(o  instanceof  JsonNull  ||!(o  instanceof  JsonNull  ||  o  instanceof  JsonNull))  {	  }    else    if(o    instanceof    JsonNull    ||!(o    instanceof    JsonNull    &&!(o    instanceof    JsonNull)))    {    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	4	2	replace
1601	[BUG]  [BUGGY]  }  else  if(o  instanceof  JsonObject  ||  e  instanceof  String)  {  ArrayIndexOutOfBoundsException  e  =(ArrayIndexOutOfBoundsException)iterator.next();  [CE]  cannot  find  symbol  e  [FE]        ArrayIndexOutOfBoundsException      [CONTEXT]      if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }      [BUGGY]  }  else  if(o  instanceof  JsonObject  ||  e  instanceof  String)  {  ArrayIndexOutOfBoundsException  e  =(ArrayIndexOutOfBoundsException)iterator.next();  [BUGGY]      return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	replace	}  else  if(o  instanceof  JsonObject  ||  e  instanceof  String)  {  ArrayIndexOutOfBoundsException  e  =(ArrayIndexOutOfBoundsException)iterator.next();	  }    else    if(o    instanceof    JsonObject    ||    o    instanceof    String)    {    ArrayIndexOutOfBoundsException    e    =(ArrayIndexOutOfBoundsException)iterator.next();    	non-compiled	[CE]  cannot  find  symbol  e	148	None	replace
1602	[BUG]  [BUGGY]  }  else  if(o  instanceof  JsonArray  ||  o  instanceof  String)  {  ArrayIndexOutOfBoundsException  e  =(ArrayIndexOutOfBoundsException)iterator.next();  [CE]  cannot  find  symbol  iterator  [FE]          ArrayIndexOutOfBoundsException      [CONTEXT]      if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }      [BUGGY]  }  else  if(o  instanceof  JsonArray  ||  o  instanceof  String)  {  ArrayIndexOutOfBoundsException  e  =(ArrayIndexOutOfBoundsException)iterator.next();  [BUGGY]      return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	replace	}  else  if(o  instanceof  JsonArray  ||  o  instanceof  String)  {  ArrayIndexOutOfBoundsException  e  =(ArrayIndexOutOfBoundsException)iterator.next();	  }    else    if(o    instanceof    JsonObject    ||    o    instanceof    String)    {    ArrayIndexOutOfBoundsException    e    =(ArrayIndexOutOfBoundsException)iterator.next();    	non-compiled	[CE]  cannot  find  symbol  iterator	148	None	replace
1603	[BUG]  [BUGGY]  }  else  if(!(o  instanceof  JsonObject  ||  o  instanceof  JsonPrimitive))  {  }  else  if(!(o  instanceof  JsonObject  ||  o  instanceof  JsonPrimitive))  {  return  JsonToken.BEGIN_OBJECT;  }  else  if(!(o  instanceof  JsonObject  ||  o  instanceof  JsonPrimitive))  {  [CE]  missing  return  statement  [FE]    AssertionError    [CONTEXT]      if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }      [BUGGY]  }  else  if(!(o  instanceof  JsonObject  ||  o  instanceof  JsonPrimitive))  {  }  else  if(!(o  instanceof  JsonObject  ||  o  instanceof  JsonPrimitive))  {  return  JsonToken.BEGIN_OBJECT;  }  else  if(!(o  instanceof  JsonObject  ||  o  instanceof  JsonPrimitive))  {  [BUGGY]      return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	replace	}    else    if(!(o    instanceof    JsonObject    ||    o    instanceof    JsonPrimitive))    {    }  else  if(!(o  instanceof  JsonObject  ||  o  instanceof  JsonPrimitive))  {  return  JsonToken.BEGIN_OBJECT;  }  else  if(!(o  instanceof  JsonObject  ||  o  instanceof  JsonPrimitive))  {	  	non-compiled	[CE]  missing  return  statement	138	None	add
1604	[BUG]  [BUGGY]  }  else  if(!(o  instanceof  JsonObject  ||  o  instanceof  JsonPrimitive))  {  }  else  if(!(o  instanceof  JsonObject  ||  o  instanceof  JsonPrimitive))  {  aught  return  JsonToken.BEGIN_OBJECT;  }  else  if(!(o  instanceof  JsonObject  ||  o  instanceof  JsonPrimitive))  {  [CE]  not  a  statement  [FE]      AssertionError    [CONTEXT]      if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }      [BUGGY]  }  else  if(!(o  instanceof  JsonObject  ||  o  instanceof  JsonPrimitive))  {  }  else  if(!(o  instanceof  JsonObject  ||  o  instanceof  JsonPrimitive))  {  aught  return  JsonToken.BEGIN_OBJECT;  }  else  if(!(o  instanceof  JsonObject  ||  o  instanceof  JsonPrimitive))  {  [BUGGY]      return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	replace	}    else    if(!(o    instanceof    JsonObject    ||    o    instanceof    JsonPrimitive))    {    }  else  if(!(o  instanceof  JsonObject  ||  o  instanceof  JsonPrimitive))  {  aught  return  JsonToken.BEGIN_OBJECT;  }  else  if(!(o  instanceof  JsonObject  ||  o  instanceof  JsonPrimitive))  {	  	non-compiled	[CE]  not  a  statement	138	None	add
1605	[BUG]  [BUGGY]  }  else  if(!(o  instanceof  JsonObject  ||  o  instanceof  JsonPrimitive))  {  }  else  if(!(o  instanceof  JsonObject  ||  o  instanceof  JsonPrimitive))  {  this  return  JsonToken.BEGIN_OBJECT;  }  else  if(!(o  instanceof  JsonObject  ||  o  instanceof  JsonPrimitive))  {  [CE]  not  a  statement  [FE]        AssertionError    [CONTEXT]      if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }      [BUGGY]  }  else  if(!(o  instanceof  JsonObject  ||  o  instanceof  JsonPrimitive))  {  }  else  if(!(o  instanceof  JsonObject  ||  o  instanceof  JsonPrimitive))  {  this  return  JsonToken.BEGIN_OBJECT;  }  else  if(!(o  instanceof  JsonObject  ||  o  instanceof  JsonPrimitive))  {  [BUGGY]      return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	replace	}    else    if(!(o    instanceof    JsonObject    ||    o    instanceof    JsonPrimitive))    {    }  else  if(!(o  instanceof  JsonObject  ||  o  instanceof  JsonPrimitive))  {  this  return  JsonToken.BEGIN_OBJECT;  }  else  if(!(o  instanceof  JsonObject  ||  o  instanceof  JsonPrimitive))  {	  	non-compiled	[CE]  not  a  statement	138	None	add
1606	[BUG]  [BUGGY]  }  else  if(!(o  instanceof  JsonObject  ||  o  instanceof  JsonPrimitive))  {  }  else  if(!(o  instanceof  JsonObject  ||  o  instanceof  JsonPrimitive))  {  returned  JsonToken.BEGIN_OBJECT;  }  else  if(!(o  instanceof  JsonObject  ||  o  instanceof  JsonPrimitive))  {  [CE]  ';'  expected  [FE]          AssertionError    [CONTEXT]      if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }      [BUGGY]  }  else  if(!(o  instanceof  JsonObject  ||  o  instanceof  JsonPrimitive))  {  }  else  if(!(o  instanceof  JsonObject  ||  o  instanceof  JsonPrimitive))  {  returned  JsonToken.BEGIN_OBJECT;  }  else  if(!(o  instanceof  JsonObject  ||  o  instanceof  JsonPrimitive))  {  [BUGGY]      return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	replace	}    else    if(!(o    instanceof    JsonObject    ||    o    instanceof    JsonPrimitive))    {    }  else  if(!(o  instanceof  JsonObject  ||  o  instanceof  JsonPrimitive))  {  returned  JsonToken.BEGIN_OBJECT;  }  else  if(!(o  instanceof  JsonObject  ||  o  instanceof  JsonPrimitive))  {	  	non-compiled	[CE]  ';'  expected	138	None	add
1607	[BUG]  [BUGGY]  }  else  if(!(o  instanceof  JsonObject)&&!isObject)  {  [CE]  cannot  find  symbol  isObject  [FE]              AssertionError      [CONTEXT]      if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }      [BUGGY]  }  else  if(!(o  instanceof  JsonObject)&&!isObject)  {  [BUGGY]      return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	replace	}  else  if(!(o  instanceof  JsonObject)&&!isObject)  {	  }    else    if(!(o    instanceof    JsonObject)&&    isObject)    {    	non-compiled	[CE]  cannot  find  symbol  isObject	141	None	replace
1608	[BUG]  [BUGGY]  }  else  if(o  instanceof  JsonNull  ||!(o  instanceof  JsonNull  ||!(o  instanceof  JsonNull  ||!((  JsonNull)o).isNumber()))  {  [CE]  ')'  expected  [FE]            AssertionError      [CONTEXT]      if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }      [BUGGY]  }  else  if(o  instanceof  JsonNull  ||!(o  instanceof  JsonNull  ||!(o  instanceof  JsonNull  ||!((  JsonNull)o).isNumber()))  {  [BUGGY]      return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	replace	}  else  if(o  instanceof  JsonNull  ||!(o  instanceof  JsonNull  ||!(o  instanceof  JsonNull  ||!((  JsonNull)o).isNumber()))  {	  }    else    if(o    instanceof    JsonNull    ||!(o    instanceof    JsonNull    &&!(o    instanceof    JsonNull    &&!((    JsonNull)o).isArray()))    {    	non-compiled	[CE]  ')'  expected	237	None	replace
1609	[BUG]  [BUGGY]  }  else  if(o  instanceof  JsonObject  <?>  ||  o  instanceof  JsonObject  <?>)  {  [CE]  type  JsonObject  does  not  take  parameters  [FE]                ArrayIndexOutOfBoundsException      [CONTEXT]      if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }      [BUGGY]  }  else  if(o  instanceof  JsonObject  <?>  ||  o  instanceof  JsonObject  <?>)  {  [BUGGY]      return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	replace	}  else  if(o  instanceof  JsonObject  <?>  ||  o  instanceof  JsonObject  <?>)  {	  }    else    if(o    instanceof    JsonObject    <?>    ||    o    instanceof    JsonArray)    {    	non-compiled	[CE]  type  JsonObject  does  not  take  parameters	177	None	replace
1610	[BUG]  [BUGGY]  }  else  if(o  instanceof  JsonObject  <?>  &&  o  instanceof  JsonArray)  {  [CE]  type  JsonObject  does  not  take  parameters  [FE]                  ArrayIndexOutOfBoundsException      [CONTEXT]      if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }      [BUGGY]  }  else  if(o  instanceof  JsonObject  <?>  &&  o  instanceof  JsonArray)  {  [BUGGY]      return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	replace	}  else  if(o  instanceof  JsonObject  <?>  &&  o  instanceof  JsonArray)  {	  }    else    if(o    instanceof    JsonObject    <?>    ||    o    instanceof    JsonArray)    {    	non-compiled	[CE]  type  JsonObject  does  not  take  parameters	177	None	replace
1611	[BUG]  [BUGGY]  }  else  if(!(o  instanceof  JsonObject  ||  o  instanceof  String))  {  }  else  if(!(o  instanceof  JsonObject  ||  o  instanceof  String))  {  return  JsonToken.BEGIN_OBJECT;  }  else  if(!(o  instanceof  JsonObject  ||  o  instanceof  String))  {  [CE]  missing  return  statement  [FE]    AssertionError    [CONTEXT]      if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }      [BUGGY]  }  else  if(!(o  instanceof  JsonObject  ||  o  instanceof  String))  {  }  else  if(!(o  instanceof  JsonObject  ||  o  instanceof  String))  {  return  JsonToken.BEGIN_OBJECT;  }  else  if(!(o  instanceof  JsonObject  ||  o  instanceof  String))  {  [BUGGY]      return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	replace	}    else    if(!(o    instanceof    JsonObject    ||    o    instanceof    String))    {    }  else  if(!(o  instanceof  JsonObject  ||  o  instanceof  String))  {  return  JsonToken.BEGIN_OBJECT;  }  else  if(!(o  instanceof  JsonObject  ||  o  instanceof  String))  {	  	non-compiled	[CE]  missing  return  statement	252	None	add
1612	[BUG]  [BUGGY]  }  else  if(!(o  instanceof  JsonObject  ||  o  instanceof  String))  {  }  else  if(!(o  instanceof  JsonObject  ||  o  instanceof  String))  {  aught  return  JsonToken.BEGIN_OBJECT;  }  else  if(!(o  instanceof  JsonObject  ||  o  instanceof  String))  {  [CE]  not  a  statement  [FE]      AssertionError    [CONTEXT]      if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }      [BUGGY]  }  else  if(!(o  instanceof  JsonObject  ||  o  instanceof  String))  {  }  else  if(!(o  instanceof  JsonObject  ||  o  instanceof  String))  {  aught  return  JsonToken.BEGIN_OBJECT;  }  else  if(!(o  instanceof  JsonObject  ||  o  instanceof  String))  {  [BUGGY]      return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	replace	}    else    if(!(o    instanceof    JsonObject    ||    o    instanceof    String))    {    }  else  if(!(o  instanceof  JsonObject  ||  o  instanceof  String))  {  aught  return  JsonToken.BEGIN_OBJECT;  }  else  if(!(o  instanceof  JsonObject  ||  o  instanceof  String))  {	  	non-compiled	[CE]  not  a  statement	252	None	add
1613	[BUG]  [BUGGY]  }  else  if(!(o  instanceof  JsonObject  ||  o  instanceof  String))  {  }  else  if(!(o  instanceof  JsonObject  ||  o  instanceof  String))  {  case  JsonToken.BEGIN_OBJECT:  return  JsonToken.BEGIN_OBJECT;  [CE]  orphaned  case  [FE]        AssertionError    [CONTEXT]      if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }      [BUGGY]  }  else  if(!(o  instanceof  JsonObject  ||  o  instanceof  String))  {  }  else  if(!(o  instanceof  JsonObject  ||  o  instanceof  String))  {  case  JsonToken.BEGIN_OBJECT:  return  JsonToken.BEGIN_OBJECT;  [BUGGY]      return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	replace	}    else    if(!(o    instanceof    JsonObject    ||    o    instanceof    String))    {    }  else  if(!(o  instanceof  JsonObject  ||  o  instanceof  String))  {  case  JsonToken.BEGIN_OBJECT:  return  JsonToken.BEGIN_OBJECT;	  	non-compiled	[CE]  orphaned  case	252	None	add
1614	[BUG]  [BUGGY]  }  else  if(!(o  instanceof  JsonObject  ||  o  instanceof  String))  {  }  else  if(!(o  instanceof  JsonObject  ||  o  instanceof  String))  {  return  JsonToken.BEGIN_OBJECT;  }  else  if(!(o  instanceof  JSONObject  ||  o  instanceof  String))  {  [CE]  cannot  find  symbol  [FE]          AssertionError    [CONTEXT]      if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }      [BUGGY]  }  else  if(!(o  instanceof  JsonObject  ||  o  instanceof  String))  {  }  else  if(!(o  instanceof  JsonObject  ||  o  instanceof  String))  {  return  JsonToken.BEGIN_OBJECT;  }  else  if(!(o  instanceof  JSONObject  ||  o  instanceof  String))  {  [BUGGY]      return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	replace	}    else    if(!(o    instanceof    JsonObject    ||    o    instanceof    String))    {    }  else  if(!(o  instanceof  JsonObject  ||  o  instanceof  String))  {  return  JsonToken.BEGIN_OBJECT;  }  else  if(!(o  instanceof  JSONObject  ||  o  instanceof  String))  {	  	non-compiled	[CE]  cannot  find  symbol	252	None	add
1615	[BUG]  [BUGGY]  }  else  if(!(o  instanceof  JsonObject  ||  o  instanceof  String))  {  }  else  if(!(o  instanceof  JsonObject  ||  o  instanceof  String))  {  case  JsonToken.BEGIN_OBJECT:  return  JsonToken.BEGIN_ARRAY;  [CE]  orphaned  case  [FE]            AssertionError    [CONTEXT]      if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }      [BUGGY]  }  else  if(!(o  instanceof  JsonObject  ||  o  instanceof  String))  {  }  else  if(!(o  instanceof  JsonObject  ||  o  instanceof  String))  {  case  JsonToken.BEGIN_OBJECT:  return  JsonToken.BEGIN_ARRAY;  [BUGGY]      return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	replace	}    else    if(!(o    instanceof    JsonObject    ||    o    instanceof    String))    {    }  else  if(!(o  instanceof  JsonObject  ||  o  instanceof  String))  {  case  JsonToken.BEGIN_OBJECT:  return  JsonToken.BEGIN_ARRAY;	  	non-compiled	[CE]  orphaned  case	252	None	add
1616	[BUG]  [BUGGY]  }    else    if(o    instanceof    JsonObject    ||    o    instanceof    JsonArray)    {    return  JsonToken.BEGIN_OBJECT;  }  else  if(o  instanceof  JsonObject  ||  o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_OBJECT;  }  else  if(o  instanceof  JsonObject)  {  return  JsonToken.BEGIN_OBJECT;  }  [CE]  illegal  start  of  type  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]      if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }      [BUGGY]  }    else    if(o    instanceof    JsonObject    ||    o    instanceof    JsonArray)    {    return  JsonToken.BEGIN_OBJECT;  }  else  if(o  instanceof  JsonObject  ||  o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_OBJECT;  }  else  if(o  instanceof  JsonObject)  {  return  JsonToken.BEGIN_OBJECT;  }  [BUGGY]      return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	replace	}        else        if(o        instanceof        JsonObject        ||        o        instanceof        JsonArray)        {        return    JsonToken.BEGIN_OBJECT;    }  else  if(o  instanceof  JsonObject  ||  o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_OBJECT;  }  else  if(o  instanceof  JsonObject)  {  return  JsonToken.BEGIN_OBJECT;  }	  	non-compiled	[CE]  illegal  start  of  type	193	None	add
1617	[BUG]  [BUGGY]  }    else    if(o    instanceof    JsonObject    ||    o    instanceof    JsonArray)    {    return  JsonToken.BEGIN_OBJECT;  if(o  instanceof  JsonObject  ||  o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_OBJECT;  }  else  if(o  instanceof  JsonObject)  {  return  JsonToken.BEGIN_OBJECT;  }  [CE]  unreachable  statement  [FE]      ArrayIndexOutOfBoundsException    [CONTEXT]      if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }      [BUGGY]  }    else    if(o    instanceof    JsonObject    ||    o    instanceof    JsonArray)    {    return  JsonToken.BEGIN_OBJECT;  if(o  instanceof  JsonObject  ||  o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_OBJECT;  }  else  if(o  instanceof  JsonObject)  {  return  JsonToken.BEGIN_OBJECT;  }  [BUGGY]      return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	replace	}        else        if(o        instanceof        JsonObject        ||        o        instanceof        JsonArray)        {        return    JsonToken.BEGIN_OBJECT;    if(o  instanceof  JsonObject  ||  o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_OBJECT;  }  else  if(o  instanceof  JsonObject)  {  return  JsonToken.BEGIN_OBJECT;  }	  	non-compiled	[CE]  unreachable  statement	193	None	add
1618	[BUG]  [BUGGY]  }    else    if(o    instanceof    JsonObject    ||    o    instanceof    JsonArray)    {    return  JsonToken.BEGIN_OBJECT;  if(o  instanceof  JsonObject  ||  o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_OBJECT;  }  else  if(o  instanceof  JsonObject  ||  o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  [CE]  unreachable  statement  [FE]        ArrayIndexOutOfBoundsException    [CONTEXT]      if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }      [BUGGY]  }    else    if(o    instanceof    JsonObject    ||    o    instanceof    JsonArray)    {    return  JsonToken.BEGIN_OBJECT;  if(o  instanceof  JsonObject  ||  o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_OBJECT;  }  else  if(o  instanceof  JsonObject  ||  o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  [BUGGY]      return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	replace	}        else        if(o        instanceof        JsonObject        ||        o        instanceof        JsonArray)        {        return    JsonToken.BEGIN_OBJECT;    if(o  instanceof  JsonObject  ||  o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_OBJECT;  }  else  if(o  instanceof  JsonObject  ||  o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }	  	non-compiled	[CE]  unreachable  statement	193	None	add
1619	[BUG]  [BUGGY]  }  else  if(o  instanceof  JsonObject  ||  o  instanceof  JsonArray)  {  ArrayIndexOutOfBoundsException  e  =  new  ArrayIndexOutOfBoundsException(pathNames[0],  pathNames[1]),  e);  [CE]  ';'  expected  [FE]            ArrayIndexOutOfBoundsException      [CONTEXT]      if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }      [BUGGY]  }  else  if(o  instanceof  JsonObject  ||  o  instanceof  JsonArray)  {  ArrayIndexOutOfBoundsException  e  =  new  ArrayIndexOutOfBoundsException(pathNames[0],  pathNames[1]),  e);  [BUGGY]      return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	replace	}  else  if(o  instanceof  JsonObject  ||  o  instanceof  JsonArray)  {  ArrayIndexOutOfBoundsException  e  =  new  ArrayIndexOutOfBoundsException(pathNames[0],  pathNames[1]),  e);	  }    else    if(o    instanceof    JsonObject    ||    o    instanceof    JsonArray)    {    ArrayIndexOutOfBoundsException    e    =    new    ArrayIndexOutOfBoundsException(pathNames[0],    pathNames[1]);    	non-compiled	[CE]  ';'  expected	195	None	replace
1620	[BUG]  [BUGGY]  }  else  if(o  instanceof  JsonObject  <?>,  isObject)  {  [CE]  [FE]                  ArrayIndexOutOfBoundsException      [CONTEXT]      if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }      [BUGGY]  }  else  if(o  instanceof  JsonObject  <?>,  isObject)  {  [BUGGY]      return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	replace	}  else  if(o  instanceof  JsonObject  <?>,  isObject)  {	  }    else    if(o    instanceof    JsonObject    <?>    ||    isObject)    {    	non-compiled	[CE]  	178	None	replace
1621	[BUG]  [BUGGY]  }  else  {  if(o  instanceof  JsonNull)  {  return  JsonToken.BEGIN_OBJECT;  }  [CE]  'else'  without  'if'  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]      if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }      [BUGGY]  }  else  {  if(o  instanceof  JsonNull)  {  return  JsonToken.BEGIN_OBJECT;  }  [BUGGY]      return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	replace	}  else  {  if(o  instanceof  JsonNull)  {  return  JsonToken.BEGIN_OBJECT;  }	  }    else    if(o    instanceof    JsonNull)    {    return    JsonToken.BEGIN_OBJECT;    	non-compiled	[CE]  'else'  without  'if'	155	None	replace
1622	[BUG]  [BUGGY]  }  else  if(o  instanceof  JsonNull)  {  return  JsonToken.BEGIN_NUMBER;  }  [CE]  illegal  start  of  type  [FE]      ArrayIndexOutOfBoundsException    [CONTEXT]      if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }      [BUGGY]  }  else  if(o  instanceof  JsonNull)  {  return  JsonToken.BEGIN_NUMBER;  }  [BUGGY]      return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	replace	}  else  if(o  instanceof  JsonNull)  {  return  JsonToken.BEGIN_NUMBER;  }	  }    else    if(o    instanceof    JsonNull)    {    return    JsonToken.BEGIN_OBJECT;    	non-compiled	[CE]  illegal  start  of  type	155	None	replace
1623	[BUG]  [BUGGY]  }  else  if(isObject  instanceof  JsonObject  ||  o  instanceof  JsonNumber  ||  isObject)  {  [CE]  cannot  find  symbol  isObject  [FE]                ArrayIndexOutOfBoundsException      [CONTEXT]      if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }      [BUGGY]  }  else  if(isObject  instanceof  JsonObject  ||  o  instanceof  JsonNumber  ||  isObject)  {  [BUGGY]      return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	replace	}  else  if(isObject  instanceof  JsonObject  ||  o  instanceof  JsonNumber  ||  isObject)  {	  }    else    if(o    instanceof    JsonObject    ||    o    instanceof    JsonNumber    ||    isObject)    {    	non-compiled	[CE]  cannot  find  symbol  isObject	123	None	replace
1624	[BUG]  [BUGGY]  }  else  if(o  instanceof  JsonPrimitive)  {  }  else  {  if(!(o  instanceof  JsonPrimitive))  {  return  JsonToken.BEGIN_OBJECT;  }  [CE]  'else'  without  'if'  [FE]          ArrayIndexOutOfBoundsException      [CONTEXT]      if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }      [BUGGY]  }  else  if(o  instanceof  JsonPrimitive)  {  }  else  {  if(!(o  instanceof  JsonPrimitive))  {  return  JsonToken.BEGIN_OBJECT;  }  [BUGGY]      return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	replace	}  else  if(o  instanceof  JsonPrimitive)  {  }  else  {  if(!(o  instanceof  JsonPrimitive))  {  return  JsonToken.BEGIN_OBJECT;  }	  }    else    if(!(o    instanceof    JsonArray))    {    }    else    if(!(o    instanceof    JsonArray))    <    return    JsonToken.BEGIN_OBJECT;    	non-compiled	[CE]  'else'  without  'if'	84	None	replace
1625	[BUG]  [BUGGY]  }  else  if(o  instanceof  JsonArray)  {  }  else  {  if(!(o  instanceof  JsonArray))  {  return  JsonToken.BEGIN_OBJECT;  }  [CE]  'else'  without  'if'  [FE]            ArrayIndexOutOfBoundsException      [CONTEXT]      if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }      [BUGGY]  }  else  if(o  instanceof  JsonArray)  {  }  else  {  if(!(o  instanceof  JsonArray))  {  return  JsonToken.BEGIN_OBJECT;  }  [BUGGY]      return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	replace	}  else  if(o  instanceof  JsonArray)  {  }  else  {  if(!(o  instanceof  JsonArray))  {  return  JsonToken.BEGIN_OBJECT;  }	  }    else    if(!(o    instanceof    JsonArray))    {    }    else    if(!(o    instanceof    JsonArray))    <    return    JsonToken.BEGIN_OBJECT;    	non-compiled	[CE]  'else'  without  'if'	84	None	replace
1626	[BUG]  [BUGGY]  }  else  if(o  ==  null)  {  }  else  if(!o.getClass().isArray())  {  return  JsonToken.BEGIN_OBJECT;  }  [CE]  illegal  start  of  type  [FE]              ArrayIndexOutOfBoundsException      [CONTEXT]      if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }      [BUGGY]  }  else  if(o  ==  null)  {  }  else  if(!o.getClass().isArray())  {  return  JsonToken.BEGIN_OBJECT;  }  [BUGGY]      return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	replace	}  else  if(o  ==  null)  {  }  else  if(!o.getClass().isArray())  {  return  JsonToken.BEGIN_OBJECT;  }	  }    else    if(!(o    instanceof    JsonArray))    {    }    else    if(!(o    instanceof    JsonArray))    <    return    JsonToken.BEGIN_OBJECT;    	non-compiled	[CE]  illegal  start  of  type	84	None	replace
1627	[BUG]  [BUGGY]  }  else  if(!(o  instanceof  JsonPrimitive))  {  }  else  {  return  JsonToken.BEGIN_OBJECT;  }  [CE]  illegal  start  of  type  [FE]                ArrayIndexOutOfBoundsException      [CONTEXT]      if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }      [BUGGY]  }  else  if(!(o  instanceof  JsonPrimitive))  {  }  else  {  return  JsonToken.BEGIN_OBJECT;  }  [BUGGY]      return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	replace	}  else  if(!(o  instanceof  JsonPrimitive))  {  }  else  {  return  JsonToken.BEGIN_OBJECT;  }	  }    else    if(!(o    instanceof    JsonArray))    {    }    else    if(!(o    instanceof    JsonArray))    <    return    JsonToken.BEGIN_OBJECT;    	non-compiled	[CE]  illegal  start  of  type	84	None	replace
1628	[BUG]  [BUGGY]  }  else  {  if(o  instanceof  JsonObject  ||  o  instanceof  JsonPrimitive)  {  return  JsonToken.BEGIN_OBJECT;  }  [CE]  'else'  without  'if'  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]      if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }      [BUGGY]  }  else  {  if(o  instanceof  JsonObject  ||  o  instanceof  JsonPrimitive)  {  return  JsonToken.BEGIN_OBJECT;  }  [BUGGY]      return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	replace	}  else  {  if(o  instanceof  JsonObject  ||  o  instanceof  JsonPrimitive)  {  return  JsonToken.BEGIN_OBJECT;  }	  }    else    if(o    instanceof    JsonObject    ||    o    instanceof    JsonPrimitive)    {    return    JsonToken.BEGIN_OBJECT;    	non-compiled	[CE]  'else'  without  'if'	166	None	replace
1629	[BUG]  [BUGGY]  JsonToken  token  =(jsonToken)iterator.next();  [CE]  cannot  find  symbol  [FE]                          ArrayIndexOutOfBoundsException      [CONTEXT]      if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }      [BUGGY]  JsonToken  token  =(jsonToken)iterator.next();  [BUGGY]      return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	replace	JsonToken  token  =(jsonToken)iterator.next();	  JsonToken    token    =(JsonToken)iterator.next();    	non-compiled	[CE]  cannot  find  symbol	35	None	replace
1630	[BUG]  [BUGGY]  JsonToken  token  =(JsonToken)iterator.remove();  [CE]  inconvertible  types  [FE]                            ArrayIndexOutOfBoundsException      [CONTEXT]      if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }      [BUGGY]  JsonToken  token  =(JsonToken)iterator.remove();  [BUGGY]      return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	replace	JsonToken  token  =(JsonToken)iterator.remove();	  JsonToken    token    =(JsonToken)iterator.next();    	non-compiled	[CE]  inconvertible  types	35	None	replace
1631	[BUG]  [BUGGY]  JsonToken  token  =(JsonToken)iterator.previous();  [CE]  cannot  find  symbol  [FE]                              ArrayIndexOutOfBoundsException      [CONTEXT]      if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }      [BUGGY]  JsonToken  token  =(JsonToken)iterator.previous();  [BUGGY]      return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	replace	JsonToken  token  =(JsonToken)iterator.previous();	  JsonToken    token    =(JsonToken)iterator.next();    	non-compiled	[CE]  cannot  find  symbol	35	None	replace
1632	[BUG]  [BUGGY]  }  else  {  if(o  instanceof  JsonObject)  {  return  JsonToken.BEGIN_OBJECT;  }  [CE]  'else'  without  'if'  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]      if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }      [BUGGY]  }  else  {  if(o  instanceof  JsonObject)  {  return  JsonToken.BEGIN_OBJECT;  }  [BUGGY]      return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	replace	}  else  {  if(o  instanceof  JsonObject)  {  return  JsonToken.BEGIN_OBJECT;  }	  }    else    if(o    instanceof    JsonObject    ||    o    instanceof    String)    {    return    JsonToken.BEGIN_OBJECT;    	non-compiled	[CE]  'else'  without  'if'	152	None	replace
1633	[BUG]  [BUGGY]  }    else    if(o    instanceof    JsonArray)    {    return  JsonToken.BEGIN_ARRAY;  }  else  if(o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if(o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  [CE]  illegal  start  of  type  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]      if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }      [BUGGY]  }    else    if(o    instanceof    JsonArray)    {    return  JsonToken.BEGIN_ARRAY;  }  else  if(o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if(o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  [BUGGY]      return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	replace	}        else        if(o        instanceof        JsonArray)        {        return    JsonToken.BEGIN_ARRAY;    }  else  if(o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if(o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }	  	non-compiled	[CE]  illegal  start  of  type	174	None	add
1634	[BUG]  [BUGGY]  }    else    if(o    instanceof    JsonArray)    {    return  JsonToken.BEGIN_ARRAY;  }  else  if(o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  other  if(o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_OBJECT;  }  [CE]  not  a  statement  [FE]      ArrayIndexOutOfBoundsException    [CONTEXT]      if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }      [BUGGY]  }    else    if(o    instanceof    JsonArray)    {    return  JsonToken.BEGIN_ARRAY;  }  else  if(o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  other  if(o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_OBJECT;  }  [BUGGY]      return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	replace	}        else        if(o        instanceof        JsonArray)        {        return    JsonToken.BEGIN_ARRAY;    }  else  if(o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  other  if(o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_OBJECT;  }	  	non-compiled	[CE]  not  a  statement	174	None	add
1635	[BUG]  [BUGGY]  }  else  if(!(o  instanceof  JsonNumber  ||  o  instanceof  JsonString))  {  [CE]  cannot  find  symbol  [FE]                            ArrayIndexOutOfBoundsException      [CONTEXT]      if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }      [BUGGY]  }  else  if(!(o  instanceof  JsonNumber  ||  o  instanceof  JsonString))  {  [BUGGY]      return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	replace	}  else  if(!(o  instanceof  JsonNumber  ||  o  instanceof  JsonString))  {	  }    else    if(o    instanceof    JsonNumber    ||    o    instanceof    JsonString)    {    	non-compiled	[CE]  cannot  find  symbol	116	None	replace
1636	[BUG]  [BUGGY]  }  else  if(o  instanceof  JsonNull  ||  o  instanceof  JsonNull)  {  }  else  if(o  instanceof  JsonNull  ||  o  instanceof  JsonNull)  {  return  JsonToken.BEGIN_OBJECT;  }  else  if(o  instanceof  JsonNull)  {  [CE]  missing  return  statement  [FE]    AssertionError    [CONTEXT]      if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }      [BUGGY]  }  else  if(o  instanceof  JsonNull  ||  o  instanceof  JsonNull)  {  }  else  if(o  instanceof  JsonNull  ||  o  instanceof  JsonNull)  {  return  JsonToken.BEGIN_OBJECT;  }  else  if(o  instanceof  JsonNull)  {  [BUGGY]      return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	replace	}    else    if(o    instanceof    JsonNull    ||    o    instanceof    JsonNull)    {    }  else  if(o  instanceof  JsonNull  ||  o  instanceof  JsonNull)  {  return  JsonToken.BEGIN_OBJECT;  }  else  if(o  instanceof  JsonNull)  {	  	non-compiled	[CE]  missing  return  statement	1	None	add
1637	[BUG]  [BUGGY]  }  else  if(o  instanceof  JsonNull  ||  o  instanceof  JsonNull)  {  }  else  if(o  instanceof  JsonNull  ||  o  instanceof  JsonNull)  {  aught  return  JsonToken.BEGIN_OBJECT;  }  else  if(o  instanceof  JsonNull)  {  [CE]  not  a  statement  [FE]      AssertionError    [CONTEXT]      if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }      [BUGGY]  }  else  if(o  instanceof  JsonNull  ||  o  instanceof  JsonNull)  {  }  else  if(o  instanceof  JsonNull  ||  o  instanceof  JsonNull)  {  aught  return  JsonToken.BEGIN_OBJECT;  }  else  if(o  instanceof  JsonNull)  {  [BUGGY]      return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	replace	}    else    if(o    instanceof    JsonNull    ||    o    instanceof    JsonNull)    {    }  else  if(o  instanceof  JsonNull  ||  o  instanceof  JsonNull)  {  aught  return  JsonToken.BEGIN_OBJECT;  }  else  if(o  instanceof  JsonNull)  {	  	non-compiled	[CE]  not  a  statement	1	None	add
1638	[BUG]  [BUGGY]  }  else  if(o  instanceof  JsonNull  ||  o  instanceof  JsonNull)  {  }  else  if(o  instanceof  JsonNull  ||  o  instanceof  JsonNull)  {  return  JsonToken.BEGIN_OBJECT;  }  else  if(o  instanceof  JsonArray)  {  [CE]  missing  return  statement  [FE]        AssertionError    [CONTEXT]      if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }      [BUGGY]  }  else  if(o  instanceof  JsonNull  ||  o  instanceof  JsonNull)  {  }  else  if(o  instanceof  JsonNull  ||  o  instanceof  JsonNull)  {  return  JsonToken.BEGIN_OBJECT;  }  else  if(o  instanceof  JsonArray)  {  [BUGGY]      return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	replace	}    else    if(o    instanceof    JsonNull    ||    o    instanceof    JsonNull)    {    }  else  if(o  instanceof  JsonNull  ||  o  instanceof  JsonNull)  {  return  JsonToken.BEGIN_OBJECT;  }  else  if(o  instanceof  JsonArray)  {	  	non-compiled	[CE]  missing  return  statement	1	None	add
1639	[BUG]  [BUGGY]  }  else  if(o  instanceof  JsonObject  <?>  &&  o  instanceof  JsonPrimitive)  {  [CE]  type  JsonObject  does  not  take  parameters  [FE]    AssertionError    [CONTEXT]      if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }      [BUGGY]  }  else  if(o  instanceof  JsonObject  <?>  &&  o  instanceof  JsonPrimitive)  {  [BUGGY]      return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	replace	}  else  if(o  instanceof  JsonObject  <?>  &&  o  instanceof  JsonPrimitive)  {	  }    else    if(o    instanceof    JsonObject    &&    o    instanceof    JsonPrimitive)    {    	non-compiled	[CE]  type  JsonObject  does  not  take  parameters	109	None	replace
1640	[BUG]  [BUGGY]  }  else  if(o  instanceof  JsonObject  ||  o  instanceof  JsonArray)  {  ArrayIndexOutOfBoundsException  e  =  new  ArrayIndexOutOfBoundsException(iterator.getMessage());  [CE]  cannot  find  symbol  iterator  [FE]        ArrayIndexOutOfBoundsException      [CONTEXT]      if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }      [BUGGY]  }  else  if(o  instanceof  JsonObject  ||  o  instanceof  JsonArray)  {  ArrayIndexOutOfBoundsException  e  =  new  ArrayIndexOutOfBoundsException(iterator.getMessage());  [BUGGY]      return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	replace	}  else  if(o  instanceof  JsonObject  ||  o  instanceof  JsonArray)  {  ArrayIndexOutOfBoundsException  e  =  new  ArrayIndexOutOfBoundsException(iterator.getMessage());	  }    else    if(o    instanceof    JsonObject    ||    o    instanceof    JsonArray)    {    ArrayIndexOutOfBoundsException    e    =    new    ArrayIndexOutOfBoundsException(iterator.next());    	non-compiled	[CE]  cannot  find  symbol  iterator	192	None	replace
1641	[BUG]  [BUGGY]  }  else  if(o  instanceof  JsonObject  ||  o  instanceof  JsonArray)  {  ArrayIndexOutOfBoundsException  e  =  new  ArrayIndexOutOfBoundsException(iterator.getCurrentToken());  [CE]  cannot  find  symbol  iterator  [FE]          ArrayIndexOutOfBoundsException      [CONTEXT]      if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }      [BUGGY]  }  else  if(o  instanceof  JsonObject  ||  o  instanceof  JsonArray)  {  ArrayIndexOutOfBoundsException  e  =  new  ArrayIndexOutOfBoundsException(iterator.getCurrentToken());  [BUGGY]      return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	replace	}  else  if(o  instanceof  JsonObject  ||  o  instanceof  JsonArray)  {  ArrayIndexOutOfBoundsException  e  =  new  ArrayIndexOutOfBoundsException(iterator.getCurrentToken());	  }    else    if(o    instanceof    JsonObject    ||    o    instanceof    JsonArray)    {    ArrayIndexOutOfBoundsException    e    =    new    ArrayIndexOutOfBoundsException(iterator.next());    	non-compiled	[CE]  cannot  find  symbol  iterator	192	None	replace
1642	[BUG]  [BUGGY]  }  else  if(o  instanceof  JsonObject  ||  o  instanceof  JsonArray)  {  ArrayIndexOutOfBoundsException  e  =  new  ArrayIndexOutOfBoundsException(document);  [CE]  cannot  find  symbol  document  [FE]            ArrayIndexOutOfBoundsException      [CONTEXT]      if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }      [BUGGY]  }  else  if(o  instanceof  JsonObject  ||  o  instanceof  JsonArray)  {  ArrayIndexOutOfBoundsException  e  =  new  ArrayIndexOutOfBoundsException(document);  [BUGGY]      return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	replace	}  else  if(o  instanceof  JsonObject  ||  o  instanceof  JsonArray)  {  ArrayIndexOutOfBoundsException  e  =  new  ArrayIndexOutOfBoundsException(document);	  }    else    if(o    instanceof    JsonObject    ||    o    instanceof    JsonArray)    {    ArrayIndexOutOfBoundsException    e    =    new    ArrayIndexOutOfBoundsException(iterator.next());    	non-compiled	[CE]  cannot  find  symbol  document	192	None	replace
1643	[BUG]  [BUGGY]  }  else  {  if(o  instanceof  JsonPrimitive)  {  return  JsonToken.BEGIN_OBJECT;  }  [CE]  'else'  without  'if'  [FE]              AssertionError      [CONTEXT]      if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }      [BUGGY]  }  else  {  if(o  instanceof  JsonPrimitive)  {  return  JsonToken.BEGIN_OBJECT;  }  [BUGGY]      return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	replace	}  else  {  if(o  instanceof  JsonPrimitive)  {  return  JsonToken.BEGIN_OBJECT;  }	  }    else    if(o    instanceof    JsonArray)    {    }    else    if(o    instanceof    JsonArray)    {    return    JsonToken.BEGIN_OBJECT;    	non-compiled	[CE]  'else'  without  'if'	205	None	replace
1644	[BUG]  [BUGGY]  }  else  {  if(o  instanceof  JsonObject  ||  o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_OBJECT;  }  [CE]  'else'  without  'if'  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]      if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }      [BUGGY]  }  else  {  if(o  instanceof  JsonObject  ||  o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_OBJECT;  }  [BUGGY]      return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	replace	}  else  {  if(o  instanceof  JsonObject  ||  o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_OBJECT;  }	  }    else    if(o    instanceof    JsonObject    ||    o    instanceof    JsonArray)    {    return    JsonToken.BEGIN_OBJECT;    	non-compiled	[CE]  'else'  without  'if'	194	None	replace
1645	[BUG]  [BUGGY]  }  else  if(o  instanceof  JsonObject  ||  o  instanceof  JsonLabel)  {  return  JsonToken.BEGIN_OBJECT;  }  [CE]  illegal  start  of  type  [FE]      ArrayIndexOutOfBoundsException    [CONTEXT]      if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }      [BUGGY]  }  else  if(o  instanceof  JsonObject  ||  o  instanceof  JsonLabel)  {  return  JsonToken.BEGIN_OBJECT;  }  [BUGGY]      return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	replace	}  else  if(o  instanceof  JsonObject  ||  o  instanceof  JsonLabel)  {  return  JsonToken.BEGIN_OBJECT;  }	  }    else    if(o    instanceof    JsonObject    ||    o    instanceof    JsonArray)    {    return    JsonToken.BEGIN_OBJECT;    	non-compiled	[CE]  illegal  start  of  type	194	None	replace
1646	[BUG]  [BUGGY]  }  else  if(!(o  instanceof  JsonArray)||!(o  instanceof  JsonArray))  {  }  else  if(!(o  instanceof  JsonArray)||?!(o  instanceof  JsonArray))  {  [CE]  illegal  start  of  expression  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]      if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }      [BUGGY]  }  else  if(!(o  instanceof  JsonArray)||!(o  instanceof  JsonArray))  {  }  else  if(!(o  instanceof  JsonArray)||?!(o  instanceof  JsonArray))  {  [BUGGY]      return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	replace	}    else    if(!(o    instanceof    JsonArray)||!(o    instanceof    JsonArray))    {    }  else  if(!(o  instanceof  JsonArray)||?!(o  instanceof  JsonArray))  {	  	non-compiled	[CE]  illegal  start  of  expression	248	None	add
1647	[BUG]  [BUGGY]  }  else  if(!(o  instanceof  JsonObject  ||  o  instanceof  JsonUnknown))  {  [CE]  cannot  find  symbol  [FE]        ArrayIndexOutOfBoundsException      [CONTEXT]      if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }      [BUGGY]  }  else  if(!(o  instanceof  JsonObject  ||  o  instanceof  JsonUnknown))  {  [BUGGY]      return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	replace	}  else  if(!(o  instanceof  JsonObject  ||  o  instanceof  JsonUnknown))  {	  }    else    if(o    instanceof    JsonObject    ||    o    instanceof    JsonUnknown)    {    	non-compiled	[CE]  cannot  find  symbol	241	None	replace
1648	[BUG]  [BUGGY]  try  {  if(isObject)  {  return  JsonToken.END_OBJECT;  }  [CE]  'try'  without  'catch'  or  'finally'  [FE]                                    ArrayIndexOutOfBoundsException      [CONTEXT]      if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }      [BUGGY]  try  {  if(isObject)  {  return  JsonToken.END_OBJECT;  }  [BUGGY]      return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	replace	try  {  if(isObject)  {  return  JsonToken.END_OBJECT;  }	  if(o    ==    null)    {    if(isObject)    {    return    JsonToken.END_OBJECT;    }    	non-compiled	[CE]  'try'  without  'catch'  or  'finally'	191	None	replace
1649	[BUG]  [BUGGY]  aughtExceptionHandler(this,  JsonToken.END_OBJECT,  null);  [CE]  cannot  find  symbol  [FE]                                      ArrayIndexOutOfBoundsException      [CONTEXT]      if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }      [BUGGY]  aughtExceptionHandler(this,  JsonToken.END_OBJECT,  null);  [BUGGY]      return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	replace	aughtExceptionHandler(this,  JsonToken.END_OBJECT,  null);	  if(o    ==    null)    {    if(isObject)    {    return    JsonToken.END_OBJECT;    }    	non-compiled	[CE]  cannot  find  symbol	191	None	replace
1650	[BUG]  [BUGGY]  }  else  if(!(o  instanceof  JsonObject))  {  return(JsonObject)isObject?  JsonToken.BEGIN_OBJECT  :  JsonToken.BEGIN_OBJECT;  [CE]  cannot  find  symbol  isObject  [FE]            AssertionError      [CONTEXT]      if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }      [BUGGY]  }  else  if(!(o  instanceof  JsonObject))  {  return(JsonObject)isObject?  JsonToken.BEGIN_OBJECT  :  JsonToken.BEGIN_OBJECT;  [BUGGY]      return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	replace	}  else  if(!(o  instanceof  JsonObject))  {  return(JsonObject)isObject?  JsonToken.BEGIN_OBJECT  :  JsonToken.BEGIN_OBJECT;	  }    else    if(!(o    instanceof    JsonObject))    {    object    =(o    instanceof    JsonObject)?    JsonToken.BEGIN_OBJECT    :    JsonToken.BEGIN_OBJECT;    	non-compiled	[CE]  cannot  find  symbol  isObject	158	None	replace
1651	[BUG]  [BUGGY]  }  else  if(!(o  instanceof  JsonObject))  {  return(JsonObject)jsonToken.BEGIN_OBJECT?  JsonToken.BEGIN_OBJECT  :  JsonToken.BEGIN_OBJECT;  [CE]  cannot  find  symbol  jsonToken  [FE]              AssertionError      [CONTEXT]      if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }      [BUGGY]  }  else  if(!(o  instanceof  JsonObject))  {  return(JsonObject)jsonToken.BEGIN_OBJECT?  JsonToken.BEGIN_OBJECT  :  JsonToken.BEGIN_OBJECT;  [BUGGY]      return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	replace	}  else  if(!(o  instanceof  JsonObject))  {  return(JsonObject)jsonToken.BEGIN_OBJECT?  JsonToken.BEGIN_OBJECT  :  JsonToken.BEGIN_OBJECT;	  }    else    if(!(o    instanceof    JsonObject))    {    object    =(o    instanceof    JsonObject)?    JsonToken.BEGIN_OBJECT    :    JsonToken.BEGIN_OBJECT;    	non-compiled	[CE]  cannot  find  symbol  jsonToken	158	None	replace
1652	[BUG]  [BUGGY]  }  else  if(!(o  instanceof  JsonObject))  {  return(JsonObject)jsonToken.BEGIN_OBJECT  :  JsonToken.BEGIN_OBJECT;  [CE]  ';'  expected  [FE]                AssertionError      [CONTEXT]      if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }      [BUGGY]  }  else  if(!(o  instanceof  JsonObject))  {  return(JsonObject)jsonToken.BEGIN_OBJECT  :  JsonToken.BEGIN_OBJECT;  [BUGGY]      return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	replace	}  else  if(!(o  instanceof  JsonObject))  {  return(JsonObject)jsonToken.BEGIN_OBJECT  :  JsonToken.BEGIN_OBJECT;	  }    else    if(!(o    instanceof    JsonObject))    {    object    =(o    instanceof    JsonObject)?    JsonToken.BEGIN_OBJECT    :    JsonToken.BEGIN_OBJECT;    	non-compiled	[CE]  ';'  expected	158	None	replace
1653	[BUG]  [BUGGY]  }  else  if(o  instanceof  JsonObject!=  false)  {  }  else  if(o  instanceof  JsonObject  [BUGGY]  false)  {  [CE]  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]      if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }      [BUGGY]  }  else  if(o  instanceof  JsonObject!=  false)  {  }  else  if(o  instanceof  JsonObject  [BUGGY]  false)  {  [BUGGY]      return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	replace	}    else    if(o    instanceof    JsonObject!=    false)    {    }  else  if(o  instanceof  JsonObject  [BUGGY]  false)  {	  	non-compiled	[CE]  	32	None	add
1654	[BUG]  [BUGGY]  if(stack.size()  >  stackSize)  {  Object[]  stack  =(Object[])o;  push(stack.size()  -  stack.length);  return  JsonToken.BEGIN_ARRAY;  }  [CE]  cannot  find  symbol  [FE]                                    ArrayIndexOutOfBoundsException      [CONTEXT]      if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }      [BUGGY]  if(stack.size()  >  stackSize)  {  Object[]  stack  =(Object[])o;  push(stack.size()  -  stack.length);  return  JsonToken.BEGIN_ARRAY;  }  [BUGGY]      return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	replace	if(stack.size()  >  stackSize)  {  Object[]  stack  =(Object[])o;  push(stack.size()  -  stack.length);  return  JsonToken.BEGIN_ARRAY;  }	  if(o    instanceof    JsonArray)    {    Object[]    stack    =(Object[])o;    push(stack.size()    -    stack.length);    return    JsonToken.BEGIN_ARRAY;    }    	non-compiled	[CE]  cannot  find  symbol	40	None	replace
1655	[BUG]  [BUGGY]  if(stack!=  null)  {  Object[]  stack  =(Object[])stack.size();  push(stack.size()  -  stack.length);  return  JsonToken.BEGIN_ARRAY;  }  [CE]  cannot  find  symbol  [FE]                                      ArrayIndexOutOfBoundsException      [CONTEXT]      if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }      [BUGGY]  if(stack!=  null)  {  Object[]  stack  =(Object[])stack.size();  push(stack.size()  -  stack.length);  return  JsonToken.BEGIN_ARRAY;  }  [BUGGY]      return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	replace	if(stack!=  null)  {  Object[]  stack  =(Object[])stack.size();  push(stack.size()  -  stack.length);  return  JsonToken.BEGIN_ARRAY;  }	  if(o    instanceof    JsonArray)    {    Object[]    stack    =(Object[])o;    push(stack.size()    -    stack.length);    return    JsonToken.BEGIN_ARRAY;    }    	non-compiled	[CE]  cannot  find  symbol	40	None	replace
1656	[BUG]  [BUGGY]  if(o  instanceof  JsonArray)  {  Object[]  stack  =(Object[])stack.clone();  push(stack.size()  -  stack.length);  return  JsonToken.BEGIN_ARRAY;  }  [CE]  cannot  find  symbol  [FE]                                        ArrayIndexOutOfBoundsException      [CONTEXT]      if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }      [BUGGY]  if(o  instanceof  JsonArray)  {  Object[]  stack  =(Object[])stack.clone();  push(stack.size()  -  stack.length);  return  JsonToken.BEGIN_ARRAY;  }  [BUGGY]      return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	replace	if(o  instanceof  JsonArray)  {  Object[]  stack  =(Object[])stack.clone();  push(stack.size()  -  stack.length);  return  JsonToken.BEGIN_ARRAY;  }	  if(o    instanceof    JsonArray)    {    Object[]    stack    =(Object[])o;    push(stack.size()    -    stack.length);    return    JsonToken.BEGIN_ARRAY;    }    	non-compiled	[CE]  cannot  find  symbol	40	None	replace
1657	[BUG]  [BUGGY]  }  else  if(o  instanceof  JsonBlock  ||  o  instanceof  JsonObject)  {  [CE]  cannot  find  symbol  [FE]              ArrayIndexOutOfBoundsException      [CONTEXT]      if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }      [BUGGY]  }  else  if(o  instanceof  JsonBlock  ||  o  instanceof  JsonObject)  {  [BUGGY]      return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	replace	}  else  if(o  instanceof  JsonBlock  ||  o  instanceof  JsonObject)  {	  }    else    if(o    instanceof    JsonObject    ||    o    instanceof    String)    {    }    else    if(o    instanceof    JsonObject    ||    o    instanceof    String)    {    return    JsonToken.BEGIN_OBJECT;    }    else    if(o    instanceof    JsonObject    ||    o    instanceof    String)    {    	non-compiled	[CE]  cannot  find  symbol	19	None	replace
1658	[BUG]  [BUGGY]  [FE]  ArrayIndexOutOfBoundsException  [FE]                  ArrayIndexOutOfBoundsException      [CONTEXT]      if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }      [BUGGY]  }  else  if(o  instanceof  JsonObject  ||  o  instanceof  JsonArray  ||!(o  instanceof  JsonArray))  {  [BUGGY]      return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	add	}  else  if(o  instanceof  JsonObject  ||  o  instanceof  JsonArray  ||!(o  instanceof  JsonArray))  {	  }    else    if(o    instanceof    JsonObject    ||    o    instanceof    JsonNumber    ||!(o    instanceof    JsonArray))    {    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	124	2	replace
1659	[BUG]  [BUGGY]  }  else  if(o  instanceof  JsonObject  ||  o  instanceof  JsonArray  ||!(o  instanceof  JsonArray))  {  [FE]  ArrayIndexOutOfBoundsException  [FE]                  ArrayIndexOutOfBoundsException      [CONTEXT]      if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }      [BUGGY]  }  else  if(o  instanceof  JsonObject  ||  o  instanceof  JsonArray  ||!(o  instanceof  JsonArray))  {  [BUGGY]      return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	replace	}  else  if(o  instanceof  JsonObject  ||  o  instanceof  JsonArray  ||!(o  instanceof  JsonArray))  {	  }    else    if(o    instanceof    JsonObject    ||    o    instanceof    JsonNumber    ||!(o    instanceof    JsonArray))    {    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	124	2	replace
1660	[BUG]  [BUGGY]  [FE]  ArrayIndexOutOfBoundsException  [FE]                    ArrayIndexOutOfBoundsException      [CONTEXT]      if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }      [BUGGY]  }  else  if(o  instanceof  JsonObject  ||  o  instanceof  JsonNull  ||!(o  instanceof  JsonArray))  {  [BUGGY]      return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	add	}  else  if(o  instanceof  JsonObject  ||  o  instanceof  JsonNull  ||!(o  instanceof  JsonArray))  {	  }    else    if(o    instanceof    JsonObject    ||    o    instanceof    JsonNumber    ||!(o    instanceof    JsonArray))    {    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	124	2	replace
1661	[BUG]  [BUGGY]  }  else  if(o  instanceof  JsonObject  ||  o  instanceof  JsonNull  ||!(o  instanceof  JsonArray))  {  [FE]  ArrayIndexOutOfBoundsException  [FE]                    ArrayIndexOutOfBoundsException      [CONTEXT]      if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }      [BUGGY]  }  else  if(o  instanceof  JsonObject  ||  o  instanceof  JsonNull  ||!(o  instanceof  JsonArray))  {  [BUGGY]      return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	replace	}  else  if(o  instanceof  JsonObject  ||  o  instanceof  JsonNull  ||!(o  instanceof  JsonArray))  {	  }    else    if(o    instanceof    JsonObject    ||    o    instanceof    JsonNumber    ||!(o    instanceof    JsonArray))    {    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	124	2	replace
1662	[BUG]  [BUGGY]  }  else  if(o  instanceof  JsonObject  ||  o.isNumber()  ||!(o  instanceof  JsonArray))  {  [CE]  cannot  find  symbol  [FE]                      ArrayIndexOutOfBoundsException      [CONTEXT]      if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }      [BUGGY]  }  else  if(o  instanceof  JsonObject  ||  o.isNumber()  ||!(o  instanceof  JsonArray))  {  [BUGGY]      return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	replace	}  else  if(o  instanceof  JsonObject  ||  o.isNumber()  ||!(o  instanceof  JsonArray))  {	  }    else    if(o    instanceof    JsonObject    ||    o    instanceof    JsonNumber    ||!(o    instanceof    JsonArray))    {    	non-compiled	[CE]  cannot  find  symbol	124	None	replace
1663	[BUG]  [BUGGY]  }  else  if(!(o  instanceof  JsonObject  ||  o  instanceof  JsonNumber  ||!(o  instanceof  JsonArray))  {  [CE]  ')'  expected  [FE]                        ArrayIndexOutOfBoundsException      [CONTEXT]      if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }      [BUGGY]  }  else  if(!(o  instanceof  JsonObject  ||  o  instanceof  JsonNumber  ||!(o  instanceof  JsonArray))  {  [BUGGY]      return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	replace	}  else  if(!(o  instanceof  JsonObject  ||  o  instanceof  JsonNumber  ||!(o  instanceof  JsonArray))  {	  }    else    if(o    instanceof    JsonObject    ||    o    instanceof    JsonNumber    ||!(o    instanceof    JsonArray))    {    	non-compiled	[CE]  ')'  expected	124	None	replace
1664	[BUG]  [BUGGY]  }  else  if(o  instanceof  JsonObject  &&  o.getClass()!=  JsonNumber.class)  {  [CE]  cannot  find  symbol  [FE]              ArrayIndexOutOfBoundsException      [CONTEXT]      if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }      [BUGGY]  }  else  if(o  instanceof  JsonObject  &&  o.getClass()!=  JsonNumber.class)  {  [BUGGY]      return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	replace	}  else  if(o  instanceof  JsonObject  &&  o.getClass()!=  JsonNumber.class)  {	  }    else    if(o    instanceof    JsonObject    &&    o    instanceof    JsonNumber)    {    	non-compiled	[CE]  cannot  find  symbol	122	None	replace
1665	[BUG]  [BUGGY]  }  else  if(o  instanceof  JsonObject  &&  o.getClass()  ==  JsonNumber.class)  {  [CE]  cannot  find  symbol  [FE]                ArrayIndexOutOfBoundsException      [CONTEXT]      if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }      [BUGGY]  }  else  if(o  instanceof  JsonObject  &&  o.getClass()  ==  JsonNumber.class)  {  [BUGGY]      return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	replace	}  else  if(o  instanceof  JsonObject  &&  o.getClass()  ==  JsonNumber.class)  {	  }    else    if(o    instanceof    JsonObject    &&    o    instanceof    JsonNumber)    {    	non-compiled	[CE]  cannot  find  symbol	122	None	replace
1666	[BUG]  [BUGGY]  }  else  if(o  instanceof  JsonArray)  {  }  else  {  return  JsonToken.BEGIN_OBJECT;  }  [CE]  illegal  start  of  type  [FE]              AssertionError      [CONTEXT]      if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }      [BUGGY]  }  else  if(o  instanceof  JsonArray)  {  }  else  {  return  JsonToken.BEGIN_OBJECT;  }  [BUGGY]      return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	replace	}  else  if(o  instanceof  JsonArray)  {  }  else  {  return  JsonToken.BEGIN_OBJECT;  }	  }    else    if(o    instanceof    JsonNull)    {    }    else    if(o    instanceof    JsonNull)    <    return    JsonToken.BEGIN_OBJECT;    	non-compiled	[CE]  illegal  start  of  type	72	None	replace
1667	[BUG]  [BUGGY]  }  else  if(o  ==  null)  {  }  else  if(o  instanceof  JsonNull)  {  return  JsonToken.BEGIN_OBJECT;  }  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]      if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }      [BUGGY]  }  else  if(o  ==  null)  {  }  else  if(o  instanceof  JsonNull)  {  return  JsonToken.BEGIN_OBJECT;  }  [BUGGY]      return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	replace	}  else  if(o  ==  null)  {  }  else  if(o  instanceof  JsonNull)  {  return  JsonToken.BEGIN_OBJECT;  }	  }    else    if(o    instanceof    JsonNull)    {    }    else    if(o    instanceof    JsonNull)    <    return    JsonToken.BEGIN_OBJECT;    	non-compiled	[CE]  illegal  start  of  type	72	None	replace
1668	[BUG]  [BUGGY]  }  else  if(o  instanceof  JsonLong  ||  o  instanceof  String)  {  [CE]  cannot  find  symbol  [FE]                    ArrayIndexOutOfBoundsException      [CONTEXT]      if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }      [BUGGY]  }  else  if(o  instanceof  JsonLong  ||  o  instanceof  String)  {  [BUGGY]      return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	replace	}  else  if(o  instanceof  JsonLong  ||  o  instanceof  String)  {	  }    else    if(o    instanceof    JsonLong)    {    	non-compiled	[CE]  cannot  find  symbol	128	None	replace
1669	[BUG]  [BUGGY]  }  else  if(o  instanceof  JsonLong  ||  o  instanceof  Boolean)  {  [CE]  cannot  find  symbol  [FE]                      ArrayIndexOutOfBoundsException      [CONTEXT]      if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }      [BUGGY]  }  else  if(o  instanceof  JsonLong  ||  o  instanceof  Boolean)  {  [BUGGY]      return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	replace	}  else  if(o  instanceof  JsonLong  ||  o  instanceof  Boolean)  {	  }    else    if(o    instanceof    JsonLong)    {    	non-compiled	[CE]  cannot  find  symbol	128	None	replace
1670	[BUG]  [BUGGY]  [FE]  ArrayIndexOutOfBoundsException  [FE]                  ArrayIndexOutOfBoundsException      [CONTEXT]      if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }      [BUGGY]  }  else  if(o  instanceof  JsonObject  ||  o  instanceof  Character)  {  [BUGGY]      return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	add	}  else  if(o  instanceof  JsonObject  ||  o  instanceof  Character)  {	  }    else    if(o    instanceof    JsonObject    ||    o    instanceof    String)    {    <    }    else    if(o    instanceof    JsonObject    ||    o    instanceof    String)    {    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	21	2	replace
1671	[BUG]  [BUGGY]  }  else  if(o  instanceof  JsonObject  ||  o  instanceof  Character)  {  [FE]  ArrayIndexOutOfBoundsException  [FE]                  ArrayIndexOutOfBoundsException      [CONTEXT]      if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }      [BUGGY]  }  else  if(o  instanceof  JsonObject  ||  o  instanceof  Character)  {  [BUGGY]      return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	replace	}  else  if(o  instanceof  JsonObject  ||  o  instanceof  Character)  {	  }    else    if(o    instanceof    JsonObject    ||    o    instanceof    String)    {    <    }    else    if(o    instanceof    JsonObject    ||    o    instanceof    String)    {    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	21	2	replace
1672	[BUG]  [BUGGY]  }  else  if(!(o  instanceof  JsonObject  ||  o  instanceof  JsonNumber  ||!(o  instanceof  JsonPrimitive))  {  [CE]  ')'  expected  [FE]                      ArrayIndexOutOfBoundsException      [CONTEXT]      if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }      [BUGGY]  }  else  if(!(o  instanceof  JsonObject  ||  o  instanceof  JsonNumber  ||!(o  instanceof  JsonPrimitive))  {  [BUGGY]      return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	replace	}  else  if(!(o  instanceof  JsonObject  ||  o  instanceof  JsonNumber  ||!(o  instanceof  JsonPrimitive))  {	  }    else    if(o    instanceof    JsonObject    ||    o    instanceof    JsonNumber    ||!(o    instanceof    JsonPrimitive))    {    	non-compiled	[CE]  ')'  expected	126	None	replace
1673	[BUG]  [BUGGY]  }  else  if(o  instanceof  JsonObject  ||  o.isNumber()  ||!(o  instanceof  JsonPrimitive))  {  [CE]  cannot  find  symbol  [FE]                        ArrayIndexOutOfBoundsException      [CONTEXT]      if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }      [BUGGY]  }  else  if(o  instanceof  JsonObject  ||  o.isNumber()  ||!(o  instanceof  JsonPrimitive))  {  [BUGGY]      return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	replace	}  else  if(o  instanceof  JsonObject  ||  o.isNumber()  ||!(o  instanceof  JsonPrimitive))  {	  }    else    if(o    instanceof    JsonObject    ||    o    instanceof    JsonNumber    ||!(o    instanceof    JsonPrimitive))    {    	non-compiled	[CE]  cannot  find  symbol	126	None	replace
1674	[BUG]  [BUGGY]  }  else  if(o  instanceof  JsonArray!=  ')'  {  [CE]  ')'  expected  [FE]            ArrayIndexOutOfBoundsException      [CONTEXT]      if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }      [BUGGY]  }  else  if(o  instanceof  JsonArray!=  ')'  {  [BUGGY]      return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	replace	}  else  if(o  instanceof  JsonArray!=  ')'  {	  }    else    if(o    instanceof    JsonObject!=    ')'    {    	non-compiled	[CE]  ')'  expected	213	None	replace
1675	[BUG]  [BUGGY]  }  else  if(o  instanceof  JsonObject  [Delete]  ')'  {  [CE]  ']'  expected  [FE]              ArrayIndexOutOfBoundsException      [CONTEXT]      if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }      [BUGGY]  }  else  if(o  instanceof  JsonObject  [Delete]  ')'  {  [BUGGY]      return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	replace	}  else  if(o  instanceof  JsonObject  [Delete]  ')'  {	  }    else    if(o    instanceof    JsonObject!=    ')'    {    	non-compiled	[CE]  ']'  expected	213	None	replace
1676	[BUG]  [BUGGY]  }  else  if(!(o  instanceof  JsonArray))  {  ArrayIndexOutOfBoundsException  e  =  new  ArrayIndexOutOfBoundsException(pathNames[0],  stackSize[1]  +  1);  [CE]  array  required,  but  int  found  [FE]                ArrayIndexOutOfBoundsException      [CONTEXT]      if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }      [BUGGY]  }  else  if(!(o  instanceof  JsonArray))  {  ArrayIndexOutOfBoundsException  e  =  new  ArrayIndexOutOfBoundsException(pathNames[0],  stackSize[1]  +  1);  [BUGGY]      return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	replace	}  else  if(!(o  instanceof  JsonArray))  {  ArrayIndexOutOfBoundsException  e  =  new  ArrayIndexOutOfBoundsException(pathNames[0],  stackSize[1]  +  1);	  }    else    if(!(o    instanceof    JsonArray))    {    ArrayIndexOutOfBoundsException    e    =    new    ArrayIndexOutOfBoundsException(pathNames[0],    stackSize[1]);    	non-compiled	[CE]  array  required,  but  int  found	135	None	replace
1677	[BUG]  [BUGGY]  [FE]  ArrayIndexOutOfBoundsException  [FE]          AssertionError      [CONTEXT]      if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }      [BUGGY]  }  else  if(o!=  null)  {  [BUGGY]      return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	add	}  else  if(o!=  null)  {	  }    else    if(o    instanceof    JsonArray)    {    }    else    if(o    instanceof    JsonArray)    {    return    JsonToken.BEGIN_ARRAY;    }    else    if(o    instanceof    JsonArray)    {    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	203	2	replace
1678	[BUG]  [BUGGY]  }  else  if(o!=  null)  {  [FE]  ArrayIndexOutOfBoundsException  [FE]          AssertionError      [CONTEXT]      if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }      [BUGGY]  }  else  if(o!=  null)  {  [BUGGY]      return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	replace	}  else  if(o!=  null)  {	  }    else    if(o    instanceof    JsonArray)    {    }    else    if(o    instanceof    JsonArray)    {    return    JsonToken.BEGIN_ARRAY;    }    else    if(o    instanceof    JsonArray)    {    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	203	2	replace
1679	[BUG]  [BUGGY]  }  else  if(!(o  instanceof  JsonObject))  {  ((  JsonObject)o).setObject(isObject?  JsonToken.END_OBJECT  :  JsonToken.START_OBJECT);  [CE]  cannot  find  symbol  isObject  [FE]          AssertionError      [CONTEXT]      if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }      [BUGGY]  }  else  if(!(o  instanceof  JsonObject))  {  ((  JsonObject)o).setObject(isObject?  JsonToken.END_OBJECT  :  JsonToken.START_OBJECT);  [BUGGY]      return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	replace	}  else  if(!(o  instanceof  JsonObject))  {  ((  JsonObject)o).setObject(isObject?  JsonToken.END_OBJECT  :  JsonToken.START_OBJECT);	  }    else    if(!(o    instanceof    JsonObject))    {    ((    JsonObject)o).setObject(isObject?    JsonToken.END_OBJECT    :    JsonToken.END_OBJECT);    	non-compiled	[CE]  cannot  find  symbol  isObject	157	None	replace
1680	[BUG]  [BUGGY]  }  else  if(!(o  instanceof  JsonObject)&&((  JsonObject)o).setObject(isObject?  JsonToken.END_OBJECT  :  JsonToken.END_OBJECT);  [CE]  [FE]            AssertionError      [CONTEXT]      if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }      [BUGGY]  }  else  if(!(o  instanceof  JsonObject)&&((  JsonObject)o).setObject(isObject?  JsonToken.END_OBJECT  :  JsonToken.END_OBJECT);  [BUGGY]      return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	replace	}  else  if(!(o  instanceof  JsonObject)&&((  JsonObject)o).setObject(isObject?  JsonToken.END_OBJECT  :  JsonToken.END_OBJECT);	  }    else    if(!(o    instanceof    JsonObject))    {    ((    JsonObject)o).setObject(isObject?    JsonToken.END_OBJECT    :    JsonToken.END_OBJECT);    	non-compiled	[CE]  	157	None	replace
1681	[BUG]  [BUGGY]  }  else  if(!(o  instanceof  JsonObject))  {  ((  JsonObject)o).setObject(isObject?  JsonToken.END_OBJECT  :  JsonToken.BEGIN_OBJECT);  [CE]  cannot  find  symbol  isObject  [FE]              AssertionError      [CONTEXT]      if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }      [BUGGY]  }  else  if(!(o  instanceof  JsonObject))  {  ((  JsonObject)o).setObject(isObject?  JsonToken.END_OBJECT  :  JsonToken.BEGIN_OBJECT);  [BUGGY]      return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	replace	}  else  if(!(o  instanceof  JsonObject))  {  ((  JsonObject)o).setObject(isObject?  JsonToken.END_OBJECT  :  JsonToken.BEGIN_OBJECT);	  }    else    if(!(o    instanceof    JsonObject))    {    ((    JsonObject)o).setObject(isObject?    JsonToken.END_OBJECT    :    JsonToken.END_OBJECT);    	non-compiled	[CE]  cannot  find  symbol  isObject	157	None	replace
1682	[BUG]  [BUGGY]  }  else  if(o  instanceof  JsonObject  ||  o  instanceof  String  ||  isVoid)  {  [CE]  cannot  find  symbol  isVoid  [FE]                ArrayIndexOutOfBoundsException      [CONTEXT]      if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }      [BUGGY]  }  else  if(o  instanceof  JsonObject  ||  o  instanceof  String  ||  isVoid)  {  [BUGGY]      return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	replace	}  else  if(o  instanceof  JsonObject  ||  o  instanceof  String  ||  isVoid)  {	  }    else    if(o    instanceof    JsonObject    ||    o    instanceof    String    ||    isObject)    {    	non-compiled	[CE]  cannot  find  symbol  isVoid	55	None	replace
1683	[BUG]  [BUGGY]  }  else  if(o  instanceof  JsonObject)  {  return  JsonToken.NUMBER_ARRAY;  [CE]  cannot  find  symbol  NUMBER_ARRAY  [FE]                    AssertionError      [CONTEXT]      if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }      [BUGGY]  }  else  if(o  instanceof  JsonObject)  {  return  JsonToken.NUMBER_ARRAY;  [BUGGY]      return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	replace	}  else  if(o  instanceof  JsonObject)  {  return  JsonToken.NUMBER_ARRAY;	  }    else    if(o    instanceof    JsonArray)    {    }    else    if(o    instanceof    JsonArray)    <    return    JsonToken.NUMBER_ARRAY;    	non-compiled	[CE]  cannot  find  symbol  NUMBER_ARRAY	104	None	replace
1684	[BUG]  [BUGGY]  }  else  if(o  instanceof  JsonArray)  {  }  else  {  push(iterator.next());  return  JsonToken.NUMBER_ARRAY;  }  [CE]  illegal  start  of  type  [FE]                      AssertionError      [CONTEXT]      if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }      [BUGGY]  }  else  if(o  instanceof  JsonArray)  {  }  else  {  push(iterator.next());  return  JsonToken.NUMBER_ARRAY;  }  [BUGGY]      return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	replace	}  else  if(o  instanceof  JsonArray)  {  }  else  {  push(iterator.next());  return  JsonToken.NUMBER_ARRAY;  }	  }    else    if(o    instanceof    JsonArray)    {    }    else    if(o    instanceof    JsonArray)    <    return    JsonToken.NUMBER_ARRAY;    	non-compiled	[CE]  illegal  start  of  type	104	None	replace
1685	[BUG]  [BUGGY]  }  else  if(o  instanceof  JsonArray)  {  return  JsonToken.NUMBER_ARRAY;  }  [CE]  illegal  start  of  type  [FE]                        AssertionError      [CONTEXT]      if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }      [BUGGY]  }  else  if(o  instanceof  JsonArray)  {  return  JsonToken.NUMBER_ARRAY;  }  [BUGGY]      return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	replace	}  else  if(o  instanceof  JsonArray)  {  return  JsonToken.NUMBER_ARRAY;  }	  }    else    if(o    instanceof    JsonArray)    {    }    else    if(o    instanceof    JsonArray)    <    return    JsonToken.NUMBER_ARRAY;    	non-compiled	[CE]  illegal  start  of  type	104	None	replace
1686	[BUG]  [BUGGY]  }  else  if(o  instanceof  JsonObject  ||  o  instanceof  JsonNull)  {  }  else  if(o  instanceof  JsonObject  ||  o  instanceof  JsonNull)  {  return  JsonToken.BEGIN_OBJECT;  }  else  if(o  instanceof  JsonNull)  {  [CE]  missing  return  statement  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]      if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }      [BUGGY]  }  else  if(o  instanceof  JsonObject  ||  o  instanceof  JsonNull)  {  }  else  if(o  instanceof  JsonObject  ||  o  instanceof  JsonNull)  {  return  JsonToken.BEGIN_OBJECT;  }  else  if(o  instanceof  JsonNull)  {  [BUGGY]      return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	replace	}    else    if(o    instanceof    JsonObject    ||    o    instanceof    JsonNull)    {    }  else  if(o  instanceof  JsonObject  ||  o  instanceof  JsonNull)  {  return  JsonToken.BEGIN_OBJECT;  }  else  if(o  instanceof  JsonNull)  {	  	non-compiled	[CE]  missing  return  statement	44	None	add
1687	[BUG]  [BUGGY]  }  else  if(o  instanceof  JsonObject  ||  o  instanceof  JsonNull)  {  }  else  if(o  instanceof  JsonObject  ||  o  instanceof  JsonNull)  {  return  JsonToken.BEGIN_OBJECT;  }  else  if(o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_OBJECT;  }  [CE]  illegal  start  of  type  [FE]      ArrayIndexOutOfBoundsException    [CONTEXT]      if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }      [BUGGY]  }  else  if(o  instanceof  JsonObject  ||  o  instanceof  JsonNull)  {  }  else  if(o  instanceof  JsonObject  ||  o  instanceof  JsonNull)  {  return  JsonToken.BEGIN_OBJECT;  }  else  if(o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_OBJECT;  }  [BUGGY]      return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	replace	}    else    if(o    instanceof    JsonObject    ||    o    instanceof    JsonNull)    {    }  else  if(o  instanceof  JsonObject  ||  o  instanceof  JsonNull)  {  return  JsonToken.BEGIN_OBJECT;  }  else  if(o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_OBJECT;  }	  	non-compiled	[CE]  illegal  start  of  type	44	None	add
1688	[BUG]  [BUGGY]  }  else  if(o  instanceof  JsonObject  ||  o  instanceof  JsonNull)  {  }  else  if(o  instanceof  JsonObject  ||  o  instanceof  JsonNull)  {  return  JsonToken.BEGIN_OBJECT;  }  else  if(o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  [CE]  illegal  start  of  type  [FE]        ArrayIndexOutOfBoundsException    [CONTEXT]      if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }      [BUGGY]  }  else  if(o  instanceof  JsonObject  ||  o  instanceof  JsonNull)  {  }  else  if(o  instanceof  JsonObject  ||  o  instanceof  JsonNull)  {  return  JsonToken.BEGIN_OBJECT;  }  else  if(o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  [BUGGY]      return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	replace	}    else    if(o    instanceof    JsonObject    ||    o    instanceof    JsonNull)    {    }  else  if(o  instanceof  JsonObject  ||  o  instanceof  JsonNull)  {  return  JsonToken.BEGIN_OBJECT;  }  else  if(o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }	  	non-compiled	[CE]  illegal  start  of  type	44	None	add
1689	[BUG]  [BUGGY]  }  else  if(o  instanceof  JsonObject  ||  o  instanceof  JsonNull)  {  }  else  if(o  instanceof  JsonObject  ||  o  instanceof  JsonNull)  {  return  JsonToken.BEGIN_OBJECT;  }  else  if(o  instanceof  JsonNumber  ||  o  instanceof  JsonNull)  {  [CE]  cannot  find  symbol  [FE]          ArrayIndexOutOfBoundsException    [CONTEXT]      if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }      [BUGGY]  }  else  if(o  instanceof  JsonObject  ||  o  instanceof  JsonNull)  {  }  else  if(o  instanceof  JsonObject  ||  o  instanceof  JsonNull)  {  return  JsonToken.BEGIN_OBJECT;  }  else  if(o  instanceof  JsonNumber  ||  o  instanceof  JsonNull)  {  [BUGGY]      return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	replace	}    else    if(o    instanceof    JsonObject    ||    o    instanceof    JsonNull)    {    }  else  if(o  instanceof  JsonObject  ||  o  instanceof  JsonNull)  {  return  JsonToken.BEGIN_OBJECT;  }  else  if(o  instanceof  JsonNumber  ||  o  instanceof  JsonNull)  {	  	non-compiled	[CE]  cannot  find  symbol	44	None	add
1690	[BUG]  [BUGGY]  }  else  if(o  instanceof  JsonObject  ||  o  instanceof  JsonNull)  {  }  else  if(o  instanceof  JsonObject  ||  o  instanceof  JsonNull)  {  return  JsonToken.BEGIN_OBJECT;  }  else  if(o  instanceof  JsonObject  ||  o  instanceof  JsonNull)  {  [CE]  missing  return  statement  [FE]            ArrayIndexOutOfBoundsException    [CONTEXT]      if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }      [BUGGY]  }  else  if(o  instanceof  JsonObject  ||  o  instanceof  JsonNull)  {  }  else  if(o  instanceof  JsonObject  ||  o  instanceof  JsonNull)  {  return  JsonToken.BEGIN_OBJECT;  }  else  if(o  instanceof  JsonObject  ||  o  instanceof  JsonNull)  {  [BUGGY]      return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	replace	}    else    if(o    instanceof    JsonObject    ||    o    instanceof    JsonNull)    {    }  else  if(o  instanceof  JsonObject  ||  o  instanceof  JsonNull)  {  return  JsonToken.BEGIN_OBJECT;  }  else  if(o  instanceof  JsonObject  ||  o  instanceof  JsonNull)  {	  	non-compiled	[CE]  missing  return  statement	44	None	add
1691	[BUG]  [BUGGY]  }  else  if(!(o  instanceof  JsonObject)&&((  JsonObject)o).setObject(isObject?  JsonToken.BEGIN_OBJECT  :  JsonToken.END_OBJECT);  [CE]  [FE]              AssertionError      [CONTEXT]      if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }      [BUGGY]  }  else  if(!(o  instanceof  JsonObject)&&((  JsonObject)o).setObject(isObject?  JsonToken.BEGIN_OBJECT  :  JsonToken.END_OBJECT);  [BUGGY]      return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	replace	}  else  if(!(o  instanceof  JsonObject)&&((  JsonObject)o).setObject(isObject?  JsonToken.BEGIN_OBJECT  :  JsonToken.END_OBJECT);	  }    else    if(!(o    instanceof    JsonObject))    {    ((    JsonObject)o).setObject(isObject?    JsonToken.BEGIN_OBJECT    :    JsonToken.END_OBJECT);    	non-compiled	[CE]  	159	None	replace
1692	[BUG]  [BUGGY]  }  else  if(!(o  instanceof  JsonObject))  {  ((  JsonObject)o).setObject(isObject?  JsonToken.BEGIN_OBJECT  :  JsonToken.END_ARRAY);  [CE]  cannot  find  symbol  isObject  [FE]                AssertionError      [CONTEXT]      if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }      [BUGGY]  }  else  if(!(o  instanceof  JsonObject))  {  ((  JsonObject)o).setObject(isObject?  JsonToken.BEGIN_OBJECT  :  JsonToken.END_ARRAY);  [BUGGY]      return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	replace	}  else  if(!(o  instanceof  JsonObject))  {  ((  JsonObject)o).setObject(isObject?  JsonToken.BEGIN_OBJECT  :  JsonToken.END_ARRAY);	  }    else    if(!(o    instanceof    JsonObject))    {    ((    JsonObject)o).setObject(isObject?    JsonToken.BEGIN_OBJECT    :    JsonToken.END_OBJECT);    	non-compiled	[CE]  cannot  find  symbol  isObject	159	None	replace
1693	[BUG]  [BUGGY]  Object  o  =  iterator.getValue();  [CE]  variable  o  is  already  defined  in  method  peek()  [FE]                        ArrayIndexOutOfBoundsException      [CONTEXT]      if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }      [BUGGY]  Object  o  =  iterator.getValue();  [BUGGY]      return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	replace	Object  o  =  iterator.getValue();	  Object    o    =    iterator.next();    	non-compiled	[CE]  variable  o  is  already  defined  in  method  peek()	185	None	replace
1694	[BUG]  [BUGGY]  }  else  if(o  instanceof  JsonType  ||  o  instanceof  JsonSequence)  {  [CE]  cannot  find  symbol  [FE]            AssertionError      [CONTEXT]      if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }      [BUGGY]  }  else  if(o  instanceof  JsonType  ||  o  instanceof  JsonSequence)  {  [BUGGY]      return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	replace	}  else  if(o  instanceof  JsonType  ||  o  instanceof  JsonSequence)  {	  }    else    if(o    instanceof    JsonType)    {    	non-compiled	[CE]  cannot  find  symbol	12	None	replace
1695	[BUG]  [BUGGY]  o  =  iterator.getCurrentToken();  [CE]  cannot  find  symbol  [FE]                          ArrayIndexOutOfBoundsException      [CONTEXT]      if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }      [BUGGY]  o  =  iterator.getCurrentToken();  [BUGGY]      return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	replace	o  =  iterator.getCurrentToken();	  o    =    iterator.next();    	non-compiled	[CE]  cannot  find  symbol	224	None	replace
1696	[BUG]  [BUGGY]  o  =  this.iterator.next();  [CE]  cannot  find  symbol  iterator  [FE]                            ArrayIndexOutOfBoundsException      [CONTEXT]      if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }      [BUGGY]  o  =  this.iterator.next();  [BUGGY]      return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	replace	o  =  this.iterator.next();	  o    =    iterator.next();    	non-compiled	[CE]  cannot  find  symbol  iterator	224	None	replace
1697	[BUG]  [BUGGY]  o  =  itserator.next();  [CE]  cannot  find  symbol  itserator  [FE]                              ArrayIndexOutOfBoundsException      [CONTEXT]      if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }      [BUGGY]  o  =  itserator.next();  [BUGGY]      return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	replace	o  =  itserator.next();	  o    =    iterator.next();    	non-compiled	[CE]  cannot  find  symbol  itserator	224	None	replace
1698	[BUG]  [BUGGY]  o  =  iterator.getNext();  [CE]  cannot  find  symbol  [FE]                                ArrayIndexOutOfBoundsException      [CONTEXT]      if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }      [BUGGY]  o  =  iterator.getNext();  [BUGGY]      return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	replace	o  =  iterator.getNext();	  o    =    iterator.next();    	non-compiled	[CE]  cannot  find  symbol	224	None	replace
1699	[BUG]  [BUGGY]  o  =  iterator.previous();  [CE]  cannot  find  symbol  [FE]                                  ArrayIndexOutOfBoundsException      [CONTEXT]      if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }      [BUGGY]  o  =  iterator.previous();  [BUGGY]      return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	replace	o  =  iterator.previous();	  o    =    iterator.next();    	non-compiled	[CE]  cannot  find  symbol	224	None	replace
1700	[BUG]  [BUGGY]  o  =  iterator.peek();  [CE]  cannot  find  symbol  [FE]                                    ArrayIndexOutOfBoundsException      [CONTEXT]      if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }      [BUGGY]  o  =  iterator.peek();  [BUGGY]      return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	replace	o  =  iterator.peek();	  o    =    iterator.next();    	non-compiled	[CE]  cannot  find  symbol	224	None	replace
1701	[BUG]  [BUGGY]  }  else  {  if(isObject)  {  return  JsonToken.BEGIN_OBJECT;  }  [CE]  'else'  without  'if'  [FE]                ArrayIndexOutOfBoundsException      [CONTEXT]      if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }      [BUGGY]  }  else  {  if(isObject)  {  return  JsonToken.BEGIN_OBJECT;  }  [BUGGY]      return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	replace	}  else  {  if(isObject)  {  return  JsonToken.BEGIN_OBJECT;  }	  }    else    if(!(o    instanceof    JsonArray))    {    }    else    if(!(o    instanceof    JsonArray))    {    case    JsonToken.BEGIN_OBJECT:    return    JsonToken.BEGIN_OBJECT;    	non-compiled	[CE]  'else'  without  'if'	219	None	replace
1702	[BUG]  [BUGGY]  }  else  if(!(o  instanceof  JsonNull))  {  }  else  if(!(o  instanceof  JsonNull))  {  return  JsonToken.BEGIN_OBJECT;  }  else  if(!(o  instanceof  JsonNull))  {  [CE]  missing  return  statement  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]      if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }      [BUGGY]  }  else  if(!(o  instanceof  JsonNull))  {  }  else  if(!(o  instanceof  JsonNull))  {  return  JsonToken.BEGIN_OBJECT;  }  else  if(!(o  instanceof  JsonNull))  {  [BUGGY]      return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	replace	}    else    if(!(o    instanceof    JsonNull))    {    }  else  if(!(o  instanceof  JsonNull))  {  return  JsonToken.BEGIN_OBJECT;  }  else  if(!(o  instanceof  JsonNull))  {	  	non-compiled	[CE]  missing  return  statement	67	None	add
1703	[BUG]  [BUGGY]  }  else  if(!(o  instanceof  JsonNull))  {  }  else  if(!(o  instanceof  JsonNull))  {  aught  return  JsonToken.BEGIN_OBJECT;  }  else  if(!(o  instanceof  JsonNull))  {  [CE]  not  a  statement  [FE]      ArrayIndexOutOfBoundsException    [CONTEXT]      if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }      [BUGGY]  }  else  if(!(o  instanceof  JsonNull))  {  }  else  if(!(o  instanceof  JsonNull))  {  aught  return  JsonToken.BEGIN_OBJECT;  }  else  if(!(o  instanceof  JsonNull))  {  [BUGGY]      return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	replace	}    else    if(!(o    instanceof    JsonNull))    {    }  else  if(!(o  instanceof  JsonNull))  {  aught  return  JsonToken.BEGIN_OBJECT;  }  else  if(!(o  instanceof  JsonNull))  {	  	non-compiled	[CE]  not  a  statement	67	None	add
1704	[BUG]  [BUGGY]  }  else  if(!(o  instanceof  JsonNull))  {  }  else  if(!(o  instanceof  JsonNull))  {  return  JsonToken.BEGIN_OBJECT;  }  else  if(!(o  instanceof  JSONNull))  {  [CE]  cannot  find  symbol  [FE]        ArrayIndexOutOfBoundsException    [CONTEXT]      if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }      [BUGGY]  }  else  if(!(o  instanceof  JsonNull))  {  }  else  if(!(o  instanceof  JsonNull))  {  return  JsonToken.BEGIN_OBJECT;  }  else  if(!(o  instanceof  JSONNull))  {  [BUGGY]      return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	replace	}    else    if(!(o    instanceof    JsonNull))    {    }  else  if(!(o  instanceof  JsonNull))  {  return  JsonToken.BEGIN_OBJECT;  }  else  if(!(o  instanceof  JSONNull))  {	  	non-compiled	[CE]  cannot  find  symbol	67	None	add
1705	[BUG]  [BUGGY]  }  else  if(!(o  instanceof  JsonArray  ||  o  instanceof  JsonPrimitive)||  isObject)  {  [CE]  cannot  find  symbol  isObject  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]      if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }      [BUGGY]  }  else  if(!(o  instanceof  JsonArray  ||  o  instanceof  JsonPrimitive)||  isObject)  {  [BUGGY]      return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	replace	}  else  if(!(o  instanceof  JsonArray  ||  o  instanceof  JsonPrimitive)||  isObject)  {	  }    else    if(!(o    instanceof    JsonArray    ||    o    instanceof    JsonPrimitive))    {    	non-compiled	[CE]  cannot  find  symbol  isObject	146	None	replace
1706	[BUG]  [BUGGY]  }  else  if(o  instanceof  JsonObject  <?>  &&  o  instanceof  String)  {  [CE]  type  JsonObject  does  not  take  parameters  [FE]    AssertionError    [CONTEXT]      if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }      [BUGGY]  }  else  if(o  instanceof  JsonObject  <?>  &&  o  instanceof  String)  {  [BUGGY]      return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	replace	}  else  if(o  instanceof  JsonObject  <?>  &&  o  instanceof  String)  {	  }    else    if(o    instanceof    JsonObject    &&    o    instanceof    String)    {    	non-compiled	[CE]  type  JsonObject  does  not  take  parameters	48	None	replace
1707	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]        AssertionError      [CONTEXT]      if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }      [BUGGY]  }  else  if(o  ==  null  ||!(o  instanceof  JsonObject))  {  [BUGGY]      return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	add	}  else  if(o  ==  null  ||!(o  instanceof  JsonObject))  {	  }    else    if(!(o    instanceof    JsonObject))    {    }    else    if(!(o    instanceof    JsonObject))    {    	compilable	  [FE]  AssertionError  	91	2	replace
1708	[BUG]  [BUGGY]  }  else  if(o  ==  null  ||!(o  instanceof  JsonObject))  {  [FE]  AssertionError  [FE]        AssertionError      [CONTEXT]      if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }      [BUGGY]  }  else  if(o  ==  null  ||!(o  instanceof  JsonObject))  {  [BUGGY]      return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	replace	}  else  if(o  ==  null  ||!(o  instanceof  JsonObject))  {	  }    else    if(!(o    instanceof    JsonObject))    {    }    else    if(!(o    instanceof    JsonObject))    {    	compilable	  [FE]  AssertionError  	91	2	replace
1709	[BUG]  [BUGGY]  if(stack.size()  >  stackSize)  {  Object[]  stack  =(Object[])o;  push(stack.size()  -  stack.length);  return  JsonToken.BOOLEAN;  }  [CE]  cannot  find  symbol  [FE]                                ArrayIndexOutOfBoundsException      [CONTEXT]      if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }      [BUGGY]  if(stack.size()  >  stackSize)  {  Object[]  stack  =(Object[])o;  push(stack.size()  -  stack.length);  return  JsonToken.BOOLEAN;  }  [BUGGY]      return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	replace	if(stack.size()  >  stackSize)  {  Object[]  stack  =(Object[])o;  push(stack.size()  -  stack.length);  return  JsonToken.BOOLEAN;  }	  if(o    instanceof    JsonArray)    {    Object[]    stack    =(Object[])o;    push(stack.size()    -    stack.length);    return    JsonToken.BOOLEAN;    }    	non-compiled	[CE]  cannot  find  symbol	38	None	replace
1710	[BUG]  [BUGGY]  if(o  instanceof  JsonArray)  {  Object[]  stack  =(Object[])stack.clone();  push(stack.size()  -  stack.length);  return  JsonToken.BOOLEAN;  }  [CE]  cannot  find  symbol  [FE]                                  ArrayIndexOutOfBoundsException      [CONTEXT]      if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }      [BUGGY]  if(o  instanceof  JsonArray)  {  Object[]  stack  =(Object[])stack.clone();  push(stack.size()  -  stack.length);  return  JsonToken.BOOLEAN;  }  [BUGGY]      return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	replace	if(o  instanceof  JsonArray)  {  Object[]  stack  =(Object[])stack.clone();  push(stack.size()  -  stack.length);  return  JsonToken.BOOLEAN;  }	  if(o    instanceof    JsonArray)    {    Object[]    stack    =(Object[])o;    push(stack.size()    -    stack.length);    return    JsonToken.BOOLEAN;    }    	non-compiled	[CE]  cannot  find  symbol	38	None	replace
1711	[BUG]  [BUGGY]  Object[]  stack  =(Object[])stack.peek();  push(stack.size()  -  stack.length);  return  JsonToken.BOOLEAN;  [CE]  cannot  find  symbol  [FE]                                    ArrayIndexOutOfBoundsException      [CONTEXT]      if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }      [BUGGY]  Object[]  stack  =(Object[])stack.peek();  push(stack.size()  -  stack.length);  return  JsonToken.BOOLEAN;  [BUGGY]      return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	replace	Object[]  stack  =(Object[])stack.peek();  push(stack.size()  -  stack.length);  return  JsonToken.BOOLEAN;	  if(o    instanceof    JsonArray)    {    Object[]    stack    =(Object[])o;    push(stack.size()    -    stack.length);    return    JsonToken.BOOLEAN;    }    	non-compiled	[CE]  cannot  find  symbol	38	None	replace
1712	[BUG]  [BUGGY]  if(stack.size()  >  stackSize)  {  Object[]  stack  =(Object[])o;  push(stack.size()  -  stack.length);  return  JsonToken.BEGIN_OBJECT;  }  [CE]  cannot  find  symbol  [FE]                                  ArrayIndexOutOfBoundsException      [CONTEXT]      if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }      [BUGGY]  if(stack.size()  >  stackSize)  {  Object[]  stack  =(Object[])o;  push(stack.size()  -  stack.length);  return  JsonToken.BEGIN_OBJECT;  }  [BUGGY]      return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	replace	if(stack.size()  >  stackSize)  {  Object[]  stack  =(Object[])o;  push(stack.size()  -  stack.length);  return  JsonToken.BEGIN_OBJECT;  }	  if(o    instanceof    JsonArray)    {    Object[]    stack    =(Object[])o;    push(stack.size()    -    stack.length);    return    JsonToken.BEGIN_OBJECT;    }    	non-compiled	[CE]  cannot  find  symbol	39	None	replace
1713	[BUG]  [BUGGY]  if(stack!=  null)  {  Object[]  stack  =(Object[])stack.size();  push(stack.size()  -  stack.length);  return  JsonToken.BEGIN_OBJECT;  }  [CE]  cannot  find  symbol  [FE]                                    ArrayIndexOutOfBoundsException      [CONTEXT]      if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }      [BUGGY]  if(stack!=  null)  {  Object[]  stack  =(Object[])stack.size();  push(stack.size()  -  stack.length);  return  JsonToken.BEGIN_OBJECT;  }  [BUGGY]      return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	replace	if(stack!=  null)  {  Object[]  stack  =(Object[])stack.size();  push(stack.size()  -  stack.length);  return  JsonToken.BEGIN_OBJECT;  }	  if(o    instanceof    JsonArray)    {    Object[]    stack    =(Object[])o;    push(stack.size()    -    stack.length);    return    JsonToken.BEGIN_OBJECT;    }    	non-compiled	[CE]  cannot  find  symbol	39	None	replace
1714	[BUG]  [BUGGY]  if(o  instanceof  JsonArray)  {  Object[]  stack  =(Object[])stack.clone();  push(stack.size()  -  stack.length);  return  JsonToken.BEGIN_OBJECT;  }  [CE]  cannot  find  symbol  [FE]                                      ArrayIndexOutOfBoundsException      [CONTEXT]      if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }      [BUGGY]  if(o  instanceof  JsonArray)  {  Object[]  stack  =(Object[])stack.clone();  push(stack.size()  -  stack.length);  return  JsonToken.BEGIN_OBJECT;  }  [BUGGY]      return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	replace	if(o  instanceof  JsonArray)  {  Object[]  stack  =(Object[])stack.clone();  push(stack.size()  -  stack.length);  return  JsonToken.BEGIN_OBJECT;  }	  if(o    instanceof    JsonArray)    {    Object[]    stack    =(Object[])o;    push(stack.size()    -    stack.length);    return    JsonToken.BEGIN_OBJECT;    }    	non-compiled	[CE]  cannot  find  symbol	39	None	replace
1715	[BUG]  [BUGGY]  [FE]  ArrayIndexOutOfBoundsException  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]      if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }      [BUGGY]  }  else  if(o  instanceof  JsonObject  ||  o  instanceof  Integer  ||  o  instanceof  Class  <?>)  {  [BUGGY]      return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	add	}  else  if(o  instanceof  JsonObject  ||  o  instanceof  Integer  ||  o  instanceof  Class  <?>)  {	  }    else    if(o    instanceof    JsonObject    ||    o    instanceof    String    ||    o    instanceof    Class    <?>)    {    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	245	2	replace
1716	[BUG]  [BUGGY]  }  else  if(o  instanceof  JsonObject  ||  o  instanceof  Integer  ||  o  instanceof  Class  <?>)  {  [FE]  ArrayIndexOutOfBoundsException  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]      if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }      [BUGGY]  }  else  if(o  instanceof  JsonObject  ||  o  instanceof  Integer  ||  o  instanceof  Class  <?>)  {  [BUGGY]      return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	replace	}  else  if(o  instanceof  JsonObject  ||  o  instanceof  Integer  ||  o  instanceof  Class  <?>)  {	  }    else    if(o    instanceof    JsonObject    ||    o    instanceof    String    ||    o    instanceof    Class    <?>)    {    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	245	2	replace
1717	[BUG]  [BUGGY]  [FE]  ArrayIndexOutOfBoundsException  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]      if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }      [BUGGY]  }  else  if(o  ==  null  ||!(o  instanceof  JsonPrimitive))  {  [BUGGY]      return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	add	}  else  if(o  ==  null  ||!(o  instanceof  JsonPrimitive))  {	  }    else    if(!(o    instanceof    JsonPrimitive))    {    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	11	2	replace
1718	[BUG]  [BUGGY]  }  else  if(o  ==  null  ||!(o  instanceof  JsonPrimitive))  {  [FE]  ArrayIndexOutOfBoundsException  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]      if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }      [BUGGY]  }  else  if(o  ==  null  ||!(o  instanceof  JsonPrimitive))  {  [BUGGY]      return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	replace	}  else  if(o  ==  null  ||!(o  instanceof  JsonPrimitive))  {	  }    else    if(!(o    instanceof    JsonPrimitive))    {    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	11	2	replace
1719	[BUG]  [BUGGY]  }  else  if(o  instanceof  JsonObject  ||  o  instanceof  String  ||  o  instanceof  Boolean)  {  }  else  if(o  instanceof  JsonObject  ||  o  instanceof  String  ||  o  instanceof  Boolean)  {  return  JsonToken.BEGIN_OBJECT;  }  else  if(o  instanceof  JsonObject)  {  return  JsonToken.BEGIN_OBJECT;  }  [CE]  illegal  start  of  type  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]      if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }      [BUGGY]  }  else  if(o  instanceof  JsonObject  ||  o  instanceof  String  ||  o  instanceof  Boolean)  {  }  else  if(o  instanceof  JsonObject  ||  o  instanceof  String  ||  o  instanceof  Boolean)  {  return  JsonToken.BEGIN_OBJECT;  }  else  if(o  instanceof  JsonObject)  {  return  JsonToken.BEGIN_OBJECT;  }  [BUGGY]      return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	replace	}    else    if(o    instanceof    JsonObject    ||    o    instanceof    String    ||    o    instanceof    Boolean)    {    }  else  if(o  instanceof  JsonObject  ||  o  instanceof  String  ||  o  instanceof  Boolean)  {  return  JsonToken.BEGIN_OBJECT;  }  else  if(o  instanceof  JsonObject)  {  return  JsonToken.BEGIN_OBJECT;  }	  	non-compiled	[CE]  illegal  start  of  type	246	None	add
1720	[BUG]  [BUGGY]  }  else  if(o  instanceof  JsonObject  ||  o  instanceof  String  ||  o  instanceof  Boolean)  {  }  else  if(o  instanceof  JsonObject  ||  o  instanceof  String  ||  o  instanceof  Boolean)  {  return  JsonToken.BEGIN_OBJECT;  }  else  if(o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  [CE]  illegal  start  of  type  [FE]      ArrayIndexOutOfBoundsException    [CONTEXT]      if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }      [BUGGY]  }  else  if(o  instanceof  JsonObject  ||  o  instanceof  String  ||  o  instanceof  Boolean)  {  }  else  if(o  instanceof  JsonObject  ||  o  instanceof  String  ||  o  instanceof  Boolean)  {  return  JsonToken.BEGIN_OBJECT;  }  else  if(o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  [BUGGY]      return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	replace	}    else    if(o    instanceof    JsonObject    ||    o    instanceof    String    ||    o    instanceof    Boolean)    {    }  else  if(o  instanceof  JsonObject  ||  o  instanceof  String  ||  o  instanceof  Boolean)  {  return  JsonToken.BEGIN_OBJECT;  }  else  if(o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }	  	non-compiled	[CE]  illegal  start  of  type	246	None	add
1721	[BUG]  [BUGGY]  }  else  if(o  instanceof  JsonObject  ||  o  instanceof  String  ||  o  instanceof  Boolean)  {  }  else  if(o  instanceof  JsonObject  ||  o  instanceof  String  ||  o  instanceof  Boolean)  {  return  JsonToken.BEGIN_OBJECT;  }  else  if(o  instanceof  JsonObject)  {  return  JsonToken.BEGIN_ARRAY;  }  [CE]  illegal  start  of  type  [FE]        ArrayIndexOutOfBoundsException    [CONTEXT]      if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }      [BUGGY]  }  else  if(o  instanceof  JsonObject  ||  o  instanceof  String  ||  o  instanceof  Boolean)  {  }  else  if(o  instanceof  JsonObject  ||  o  instanceof  String  ||  o  instanceof  Boolean)  {  return  JsonToken.BEGIN_OBJECT;  }  else  if(o  instanceof  JsonObject)  {  return  JsonToken.BEGIN_ARRAY;  }  [BUGGY]      return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	replace	}    else    if(o    instanceof    JsonObject    ||    o    instanceof    String    ||    o    instanceof    Boolean)    {    }  else  if(o  instanceof  JsonObject  ||  o  instanceof  String  ||  o  instanceof  Boolean)  {  return  JsonToken.BEGIN_OBJECT;  }  else  if(o  instanceof  JsonObject)  {  return  JsonToken.BEGIN_ARRAY;  }	  	non-compiled	[CE]  illegal  start  of  type	246	None	add
1722	[BUG]  [BUGGY]  }  else  if(o  instanceof  JsonObject  ||  o  instanceof  JsonPrimitive)  {  ArrayIndexOutOfBoundsException  e  =  new  ArrayIndexOutOfBoundsException(document);  [CE]  cannot  find  symbol  document  [FE]              ArrayIndexOutOfBoundsException      [CONTEXT]      if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }      [BUGGY]  }  else  if(o  instanceof  JsonObject  ||  o  instanceof  JsonPrimitive)  {  ArrayIndexOutOfBoundsException  e  =  new  ArrayIndexOutOfBoundsException(document);  [BUGGY]      return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	replace	}  else  if(o  instanceof  JsonObject  ||  o  instanceof  JsonPrimitive)  {  ArrayIndexOutOfBoundsException  e  =  new  ArrayIndexOutOfBoundsException(document);	  }    else    if(o    instanceof    JsonObject    ||    o    instanceof    JsonPrimitive)    {    ArrayIndexOutOfBoundsException    e    =    new    ArrayIndexOutOfBoundsException(iterator.next());    	non-compiled	[CE]  cannot  find  symbol  document	169	None	replace
1723	[BUG]  [BUGGY]  }  else  if(o  instanceof  JsonObject  ||  o  instanceof  JsonPrimitive)  {  ArrayIndexOutOfBoundsException  e  =  new  ArrayIndexOutOfBoundsException(getMessage());  [CE]  cannot  find  symbol  [FE]                ArrayIndexOutOfBoundsException      [CONTEXT]      if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }      [BUGGY]  }  else  if(o  instanceof  JsonObject  ||  o  instanceof  JsonPrimitive)  {  ArrayIndexOutOfBoundsException  e  =  new  ArrayIndexOutOfBoundsException(getMessage());  [BUGGY]      return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	replace	}  else  if(o  instanceof  JsonObject  ||  o  instanceof  JsonPrimitive)  {  ArrayIndexOutOfBoundsException  e  =  new  ArrayIndexOutOfBoundsException(getMessage());	  }    else    if(o    instanceof    JsonObject    ||    o    instanceof    JsonPrimitive)    {    ArrayIndexOutOfBoundsException    e    =    new    ArrayIndexOutOfBoundsException(iterator.next());    	non-compiled	[CE]  cannot  find  symbol	169	None	replace
1724	[BUG]  [BUGGY]  }  else  if(o  instanceof  JsonObject  ||  o  instanceof  JsonPrimitive)  {  ArrayIndexOutOfBoundsException  e  =  new  ArrayIndexOutOfBoundsException(iterator.getMessage());  [CE]  cannot  find  symbol  iterator  [FE]                  ArrayIndexOutOfBoundsException      [CONTEXT]      if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }      [BUGGY]  }  else  if(o  instanceof  JsonObject  ||  o  instanceof  JsonPrimitive)  {  ArrayIndexOutOfBoundsException  e  =  new  ArrayIndexOutOfBoundsException(iterator.getMessage());  [BUGGY]      return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	replace	}  else  if(o  instanceof  JsonObject  ||  o  instanceof  JsonPrimitive)  {  ArrayIndexOutOfBoundsException  e  =  new  ArrayIndexOutOfBoundsException(iterator.getMessage());	  }    else    if(o    instanceof    JsonObject    ||    o    instanceof    JsonPrimitive)    {    ArrayIndexOutOfBoundsException    e    =    new    ArrayIndexOutOfBoundsException(iterator.next());    	non-compiled	[CE]  cannot  find  symbol  iterator	169	None	replace
1725	[BUG]  [BUGGY]  }  else  if(!(o  instanceof  JsonArray))  {  ArrayIndexOutOfBoundsException  a  =(ArrayIndexOutOfBoundsException)iterator.getSourceReference();  [CE]  cannot  find  symbol  iterator  [FE]          ArrayIndexOutOfBoundsException      [CONTEXT]      if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }      [BUGGY]  }  else  if(!(o  instanceof  JsonArray))  {  ArrayIndexOutOfBoundsException  a  =(ArrayIndexOutOfBoundsException)iterator.getSourceReference();  [BUGGY]      return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	replace	}  else  if(!(o  instanceof  JsonArray))  {  ArrayIndexOutOfBoundsException  a  =(ArrayIndexOutOfBoundsException)iterator.getSourceReference();	  }    else    if(!(o    instanceof    JsonArray))    {    ArrayIndexOutOfBoundsException    a    =(ArrayIndexOutOfBoundsException)iterator.next();    	non-compiled	[CE]  cannot  find  symbol  iterator	132	None	replace
1726	[BUG]  [BUGGY]  }  else  if(!(o  instanceof  JsonArray))  {  ArrayIndexOutOfBoundsException  a  =(ArrayIndexOutOfBoundsException)entry.next();  [CE]  cannot  find  symbol  entry  [FE]            ArrayIndexOutOfBoundsException      [CONTEXT]      if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }      [BUGGY]  }  else  if(!(o  instanceof  JsonArray))  {  ArrayIndexOutOfBoundsException  a  =(ArrayIndexOutOfBoundsException)entry.next();  [BUGGY]      return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	replace	}  else  if(!(o  instanceof  JsonArray))  {  ArrayIndexOutOfBoundsException  a  =(ArrayIndexOutOfBoundsException)entry.next();	  }    else    if(!(o    instanceof    JsonArray))    {    ArrayIndexOutOfBoundsException    a    =(ArrayIndexOutOfBoundsException)iterator.next();    	non-compiled	[CE]  cannot  find  symbol  entry	132	None	replace
1727	[BUG]  [BUGGY]  }  else  {  ArrayIndexOutOfBoundsException  a  =(ArrayIndexOutOfBoundsException)iterator.next();  [CE]  'else'  without  'if'  [FE]              ArrayIndexOutOfBoundsException      [CONTEXT]      if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }      [BUGGY]  }  else  {  ArrayIndexOutOfBoundsException  a  =(ArrayIndexOutOfBoundsException)iterator.next();  [BUGGY]      return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	replace	}  else  {  ArrayIndexOutOfBoundsException  a  =(ArrayIndexOutOfBoundsException)iterator.next();	  }    else    if(!(o    instanceof    JsonArray))    {    ArrayIndexOutOfBoundsException    a    =(ArrayIndexOutOfBoundsException)iterator.next();    	non-compiled	[CE]  'else'  without  'if'	132	None	replace
1728	[BUG]  [BUGGY]  }  else  if(!(o  instanceof  JsonNumber  ||  o  instanceof  JsonPrimitive))  {  [CE]  cannot  find  symbol  [FE]                              ArrayIndexOutOfBoundsException      [CONTEXT]      if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }      [BUGGY]  }  else  if(!(o  instanceof  JsonNumber  ||  o  instanceof  JsonPrimitive))  {  [BUGGY]      return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	replace	}  else  if(!(o  instanceof  JsonNumber  ||  o  instanceof  JsonPrimitive))  {	  }    else    if(o    instanceof    JsonNumber    ||    o    instanceof    JsonPrimitive)    {    	non-compiled	[CE]  cannot  find  symbol	117	None	replace
1729	[BUG]  [BUGGY]  }  else  if(o  instanceof  JsonObject  ||  o  instanceof  JsonArray  ||  o  instanceof  JsonPrimitive)  {  }  else  if(o  instanceof  JsonObject  ||  o  instanceof  JsonArray  ||  o  instanceof  JsonPrimitive)  {  return  JsonToken.BEGIN_OBJECT;  }  else  if(o  instanceof  JsonPrimitive)  {  [CE]  missing  return  statement  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]      if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }      [BUGGY]  }  else  if(o  instanceof  JsonObject  ||  o  instanceof  JsonArray  ||  o  instanceof  JsonPrimitive)  {  }  else  if(o  instanceof  JsonObject  ||  o  instanceof  JsonArray  ||  o  instanceof  JsonPrimitive)  {  return  JsonToken.BEGIN_OBJECT;  }  else  if(o  instanceof  JsonPrimitive)  {  [BUGGY]      return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	replace	}    else    if(o    instanceof    JsonObject    ||    o    instanceof    JsonArray    ||    o    instanceof    JsonPrimitive)    {    }  else  if(o  instanceof  JsonObject  ||  o  instanceof  JsonArray  ||  o  instanceof  JsonPrimitive)  {  return  JsonToken.BEGIN_OBJECT;  }  else  if(o  instanceof  JsonPrimitive)  {	  	non-compiled	[CE]  missing  return  statement	143	None	add
1730	[BUG]  [BUGGY]  }  else  if(o  instanceof  JsonObject  ||  o  instanceof  JsonArray  ||  o  instanceof  JsonPrimitive)  {  }  else  if(o  instanceof  JsonObject  ||  o  instanceof  JsonArray  ||  o  instanceof  JsonPrimitive)  {  return  JsonToken.BEGIN_OBJECT;  }  else  if(o  instanceof  JsonPrimitive)  {  return  JsonToken.BEGIN_ARRAY;  }  [CE]  illegal  start  of  type  [FE]      ArrayIndexOutOfBoundsException    [CONTEXT]      if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }      [BUGGY]  }  else  if(o  instanceof  JsonObject  ||  o  instanceof  JsonArray  ||  o  instanceof  JsonPrimitive)  {  }  else  if(o  instanceof  JsonObject  ||  o  instanceof  JsonArray  ||  o  instanceof  JsonPrimitive)  {  return  JsonToken.BEGIN_OBJECT;  }  else  if(o  instanceof  JsonPrimitive)  {  return  JsonToken.BEGIN_ARRAY;  }  [BUGGY]      return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	replace	}    else    if(o    instanceof    JsonObject    ||    o    instanceof    JsonArray    ||    o    instanceof    JsonPrimitive)    {    }  else  if(o  instanceof  JsonObject  ||  o  instanceof  JsonArray  ||  o  instanceof  JsonPrimitive)  {  return  JsonToken.BEGIN_OBJECT;  }  else  if(o  instanceof  JsonPrimitive)  {  return  JsonToken.BEGIN_ARRAY;  }	  	non-compiled	[CE]  illegal  start  of  type	143	None	add
1731	[BUG]  [BUGGY]  }  else  if(o  instanceof  JsonObject  ||  o  instanceof  JsonArray  ||  o  instanceof  JsonPrimitive)  {  }  else  if(o  instanceof  JsonObject  ||  o  instanceof  JsonArray  ||  o  instanceof  JsonPrimitive)  {  return  JsonToken.BEGIN_OBJECT;  }  else  if(o  instanceof  JsonPrimitive)  {  return  JsonToken.BEGIN_  [CE]  ';'  expected  [FE]        ArrayIndexOutOfBoundsException    [CONTEXT]      if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }      [BUGGY]  }  else  if(o  instanceof  JsonObject  ||  o  instanceof  JsonArray  ||  o  instanceof  JsonPrimitive)  {  }  else  if(o  instanceof  JsonObject  ||  o  instanceof  JsonArray  ||  o  instanceof  JsonPrimitive)  {  return  JsonToken.BEGIN_OBJECT;  }  else  if(o  instanceof  JsonPrimitive)  {  return  JsonToken.BEGIN_  [BUGGY]      return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	replace	}    else    if(o    instanceof    JsonObject    ||    o    instanceof    JsonArray    ||    o    instanceof    JsonPrimitive)    {    }  else  if(o  instanceof  JsonObject  ||  o  instanceof  JsonArray  ||  o  instanceof  JsonPrimitive)  {  return  JsonToken.BEGIN_OBJECT;  }  else  if(o  instanceof  JsonPrimitive)  {  return  JsonToken.BEGIN_	  	non-compiled	[CE]  ';'  expected	143	None	add
1732	[BUG]  [BUGGY]  }  else  if(o  instanceof  JsonObject  ||  o  instanceof  JsonArray  ||  o  instanceof  JsonPrimitive)  {  }  else  if(o  instanceof  JsonObject  ||  o  instanceof  JsonArray  ||  o  instanceof  JsonPrimitive)  {  return  JsonToken.BEGIN_OBJECT;  }  else  if(o  instanceof  JsonPrimitive)  {  return  JsonToken.BEGIN  [CE]  ';'  expected  [FE]          ArrayIndexOutOfBoundsException    [CONTEXT]      if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }      [BUGGY]  }  else  if(o  instanceof  JsonObject  ||  o  instanceof  JsonArray  ||  o  instanceof  JsonPrimitive)  {  }  else  if(o  instanceof  JsonObject  ||  o  instanceof  JsonArray  ||  o  instanceof  JsonPrimitive)  {  return  JsonToken.BEGIN_OBJECT;  }  else  if(o  instanceof  JsonPrimitive)  {  return  JsonToken.BEGIN  [BUGGY]      return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	replace	}    else    if(o    instanceof    JsonObject    ||    o    instanceof    JsonArray    ||    o    instanceof    JsonPrimitive)    {    }  else  if(o  instanceof  JsonObject  ||  o  instanceof  JsonArray  ||  o  instanceof  JsonPrimitive)  {  return  JsonToken.BEGIN_OBJECT;  }  else  if(o  instanceof  JsonPrimitive)  {  return  JsonToken.BEGIN	  	non-compiled	[CE]  ';'  expected	143	None	add
1733	[BUG]  [BUGGY]  }  else  if(!(o  instanceof  String))  {  }  else  if(!(o  instanceof  String))  {  return  JsonToken.BEGIN_OBJECT;  }  else  if(!(o  instanceof  String))  {  [CE]  missing  return  statement  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]      if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }      [BUGGY]  }  else  if(!(o  instanceof  String))  {  }  else  if(!(o  instanceof  String))  {  return  JsonToken.BEGIN_OBJECT;  }  else  if(!(o  instanceof  String))  {  [BUGGY]      return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	replace	}    else    if(!(o    instanceof    String))    {    }  else  if(!(o  instanceof  String))  {  return  JsonToken.BEGIN_OBJECT;  }  else  if(!(o  instanceof  String))  {	  	non-compiled	[CE]  missing  return  statement	63	None	add
1734	[BUG]  [BUGGY]  }  else  if(!(o  instanceof  String))  {  return  JsonToken.BEGIN_OBJECT;  }  else  if(!(o  instanceof  String))  {  [CE]  missing  return  statement  [FE]      ArrayIndexOutOfBoundsException    [CONTEXT]      if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }      [BUGGY]  }  else  if(!(o  instanceof  String))  {  return  JsonToken.BEGIN_OBJECT;  }  else  if(!(o  instanceof  String))  {  [BUGGY]      return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	replace	}    else    if(!(o    instanceof    String))    {    return  JsonToken.BEGIN_OBJECT;  }  else  if(!(o  instanceof  String))  {	  	non-compiled	[CE]  missing  return  statement	63	None	add
1735	[BUG]  [BUGGY]  }  else  if(!(o  instanceof  String))  {  return  JsonToken.START_OBJECT;  }  else  if(!(o  instanceof  String))  {  [CE]  cannot  find  symbol  START_OBJECT  [FE]        ArrayIndexOutOfBoundsException    [CONTEXT]      if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }      [BUGGY]  }  else  if(!(o  instanceof  String))  {  return  JsonToken.START_OBJECT;  }  else  if(!(o  instanceof  String))  {  [BUGGY]      return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	replace	}    else    if(!(o    instanceof    String))    {    return  JsonToken.START_OBJECT;  }  else  if(!(o  instanceof  String))  {	  	non-compiled	[CE]  cannot  find  symbol  START_OBJECT	63	None	add
1736	[BUG]  [BUGGY]  }  else  if(!(o  instanceof  String))  {  }  else  if(!(o  instanceof  String))  {  return  JsonToken.BEGIN_OBJECT;  [CE]  missing  return  statement  [FE]          ArrayIndexOutOfBoundsException    [CONTEXT]      if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }      [BUGGY]  }  else  if(!(o  instanceof  String))  {  }  else  if(!(o  instanceof  String))  {  return  JsonToken.BEGIN_OBJECT;  [BUGGY]      return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	replace	}    else    if(!(o    instanceof    String))    {    }  else  if(!(o  instanceof  String))  {  return  JsonToken.BEGIN_OBJECT;	  	non-compiled	[CE]  missing  return  statement	63	None	add
1737	[BUG]  [BUGGY]  }  else  if(!(o  instanceof  String))  {  }  else  if(!(o  instanceof  String))  <  return  JsonToken.BEGIN_OBJECT;  ((  String)o).getClass().isArray())  {  [CE]  illegal  start  of  type  [FE]            ArrayIndexOutOfBoundsException    [CONTEXT]      if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }      [BUGGY]  }  else  if(!(o  instanceof  String))  {  }  else  if(!(o  instanceof  String))  <  return  JsonToken.BEGIN_OBJECT;  ((  String)o).getClass().isArray())  {  [BUGGY]      return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	replace	}    else    if(!(o    instanceof    String))    {    }  else  if(!(o  instanceof  String))  <  return  JsonToken.BEGIN_OBJECT;  ((  String)o).getClass().isArray())  {	  	non-compiled	[CE]  illegal  start  of  type	63	None	add
1738	[BUG]  [BUGGY]  }  else  if(o  instanceof  JsonObject  ||  o  instanceof  String  ||  o  instanceof  Class  <?>)  {  if(o  instanceof  JsonObject  ||  o  instanceof  String  ||  o  instanceof  Class  <?>)  {  return  JsonToken.BEGIN_OBJECT;  }  else  if(o  instanceof  JsonObject  ||  o  instanceof  String  ||  o  instanceof  Class  <?>)  {  [CE]  illegal  start  of  expression  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]      if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }      [BUGGY]  }  else  if(o  instanceof  JsonObject  ||  o  instanceof  String  ||  o  instanceof  Class  <?>)  {  if(o  instanceof  JsonObject  ||  o  instanceof  String  ||  o  instanceof  Class  <?>)  {  return  JsonToken.BEGIN_OBJECT;  }  else  if(o  instanceof  JsonObject  ||  o  instanceof  String  ||  o  instanceof  Class  <?>)  {  [BUGGY]      return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	replace	}    else    if(o    instanceof    JsonObject    ||    o    instanceof    String    ||    o    instanceof    Class    <?>)    {    if(o  instanceof  JsonObject  ||  o  instanceof  String  ||  o  instanceof  Class  <?>)  {  return  JsonToken.BEGIN_OBJECT;  }  else  if(o  instanceof  JsonObject  ||  o  instanceof  String  ||  o  instanceof  Class  <?>)  {	  	non-compiled	[CE]  illegal  start  of  expression	244	None	add
1739	[BUG]  [BUGGY]  }  else  if(o  instanceof  JsonObject  ||  o  instanceof  String  ||  o  instanceof  Class  <?>)  {  }  else  if(o  instanceof  JsonObject  ||  o  instanceof  String  ||  o  instanceof  Class  <?>)  {  return  JsonToken.BEGIN_OBJECT;  }  else  if(o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  [CE]  illegal  start  of  type  [FE]      ArrayIndexOutOfBoundsException    [CONTEXT]      if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }      [BUGGY]  }  else  if(o  instanceof  JsonObject  ||  o  instanceof  String  ||  o  instanceof  Class  <?>)  {  }  else  if(o  instanceof  JsonObject  ||  o  instanceof  String  ||  o  instanceof  Class  <?>)  {  return  JsonToken.BEGIN_OBJECT;  }  else  if(o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  [BUGGY]      return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	replace	}    else    if(o    instanceof    JsonObject    ||    o    instanceof    String    ||    o    instanceof    Class    <?>)    {    }  else  if(o  instanceof  JsonObject  ||  o  instanceof  String  ||  o  instanceof  Class  <?>)  {  return  JsonToken.BEGIN_OBJECT;  }  else  if(o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }	  	non-compiled	[CE]  illegal  start  of  type	244	None	add
1740	[BUG]  [BUGGY]  }  else  if(o  instanceof  JsonObject  ||  o  instanceof  String  ||  o  instanceof  Class  <?>)  {  }  else  if(o  instanceof  JsonObject  ||  o  instanceof  String  ||  o  instanceof  Class  <?>)  {  return  JsonToken.BEGIN_OBJECT;  }  else  if(o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_OBJECT;  }  [CE]  illegal  start  of  type  [FE]        ArrayIndexOutOfBoundsException    [CONTEXT]      if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }      [BUGGY]  }  else  if(o  instanceof  JsonObject  ||  o  instanceof  String  ||  o  instanceof  Class  <?>)  {  }  else  if(o  instanceof  JsonObject  ||  o  instanceof  String  ||  o  instanceof  Class  <?>)  {  return  JsonToken.BEGIN_OBJECT;  }  else  if(o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_OBJECT;  }  [BUGGY]      return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	replace	}    else    if(o    instanceof    JsonObject    ||    o    instanceof    String    ||    o    instanceof    Class    <?>)    {    }  else  if(o  instanceof  JsonObject  ||  o  instanceof  String  ||  o  instanceof  Class  <?>)  {  return  JsonToken.BEGIN_OBJECT;  }  else  if(o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_OBJECT;  }	  	non-compiled	[CE]  illegal  start  of  type	244	None	add
1741	[BUG]  [BUGGY]  }  else  if(o  instanceof  JsonObject  ||  o  instanceof  String  ||  o  instanceof  Class  <?>)  {  }  else  if(o  instanceof  JsonObject  ||  o  instanceof  String  ||  o  instanceof  Class  <?>)  {  return  JsonToken.BEGIN_OBJECT;  }  else  if(o  instanceof  JsonClass  ||  o  instanceof  JsonObject  ||  o  instanceof  Class  <?>)  {  [CE]  cannot  find  symbol  [FE]          ArrayIndexOutOfBoundsException    [CONTEXT]      if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }      [BUGGY]  }  else  if(o  instanceof  JsonObject  ||  o  instanceof  String  ||  o  instanceof  Class  <?>)  {  }  else  if(o  instanceof  JsonObject  ||  o  instanceof  String  ||  o  instanceof  Class  <?>)  {  return  JsonToken.BEGIN_OBJECT;  }  else  if(o  instanceof  JsonClass  ||  o  instanceof  JsonObject  ||  o  instanceof  Class  <?>)  {  [BUGGY]      return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	replace	}    else    if(o    instanceof    JsonObject    ||    o    instanceof    String    ||    o    instanceof    Class    <?>)    {    }  else  if(o  instanceof  JsonObject  ||  o  instanceof  String  ||  o  instanceof  Class  <?>)  {  return  JsonToken.BEGIN_OBJECT;  }  else  if(o  instanceof  JsonClass  ||  o  instanceof  JsonObject  ||  o  instanceof  Class  <?>)  {	  	non-compiled	[CE]  cannot  find  symbol	244	None	add
1742	[BUG]  [BUGGY]  [FE]  ArrayIndexOutOfBoundsException  [FE]    AssertionError    [CONTEXT]      if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }      [BUGGY]  }  else  if(o  instanceof  JsonObject  ||  o  instanceof  Boolean  ||!(o  instanceof  JsonArray))  {  [BUGGY]      return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	add	}  else  if(o  instanceof  JsonObject  ||  o  instanceof  Boolean  ||!(o  instanceof  JsonArray))  {	  }    else    if(!(o    instanceof    JsonObject    ||    o    instanceof    Boolean))    {    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	255	2	replace
1743	[BUG]  [BUGGY]  }  else  if(o  instanceof  JsonObject  ||  o  instanceof  Boolean  ||!(o  instanceof  JsonArray))  {  [FE]  ArrayIndexOutOfBoundsException  [FE]    AssertionError    [CONTEXT]      if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }      [BUGGY]  }  else  if(o  instanceof  JsonObject  ||  o  instanceof  Boolean  ||!(o  instanceof  JsonArray))  {  [BUGGY]      return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	replace	}  else  if(o  instanceof  JsonObject  ||  o  instanceof  Boolean  ||!(o  instanceof  JsonArray))  {	  }    else    if(!(o    instanceof    JsonObject    ||    o    instanceof    Boolean))    {    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	255	2	replace
1744	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }      [BUGGY]  }  else  if(!(o  instanceof  JsonObject  ||  o  instanceof  Boolean  ||  o  instanceof  Integer))  {  [BUGGY]      return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	add	}  else  if(!(o  instanceof  JsonObject  ||  o  instanceof  Boolean  ||  o  instanceof  Integer))  {	  }    else    if(!(o    instanceof    JsonObject    ||    o    instanceof    Boolean))    {    	compilable	  [FE]  AssertionError  	255	2	replace
1745	[BUG]  [BUGGY]  }  else  if(!(o  instanceof  JsonObject  ||  o  instanceof  Boolean  ||  o  instanceof  Integer))  {  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }      [BUGGY]  }  else  if(!(o  instanceof  JsonObject  ||  o  instanceof  Boolean  ||  o  instanceof  Integer))  {  [BUGGY]      return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	replace	}  else  if(!(o  instanceof  JsonObject  ||  o  instanceof  Boolean  ||  o  instanceof  Integer))  {	  }    else    if(!(o    instanceof    JsonObject    ||    o    instanceof    Boolean))    {    	compilable	  [FE]  AssertionError  	255	2	replace
1746	[BUG]  [BUGGY]  }  else  if(o  instanceof  JsonObject!=  ')'  ||  o  instanceof  JsonString)  {  [CE]  incomparable  types:  boolean  and  char  [FE]              ArrayIndexOutOfBoundsException      [CONTEXT]      if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }      [BUGGY]  }  else  if(o  instanceof  JsonObject!=  ')'  ||  o  instanceof  JsonString)  {  [BUGGY]      return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	replace	}  else  if(o  instanceof  JsonObject!=  ')'  ||  o  instanceof  JsonString)  {	  }    else    if(o    instanceof    JsonObject!=    ')')    {    	non-compiled	[CE]  incomparable  types:  boolean  and  char	214	None	replace
1747	[BUG]  [BUGGY]  }  else  if(!(o  instanceof  JsonArray)||  hasObject)  {  [CE]  cannot  find  symbol  hasObject  [FE]          ArrayIndexOutOfBoundsException      [CONTEXT]      if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }      [BUGGY]  }  else  if(!(o  instanceof  JsonArray)||  hasObject)  {  [BUGGY]      return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	replace	}  else  if(!(o  instanceof  JsonArray)||  hasObject)  {	  }    else    if(!(o    instanceof    JsonArray)||    isObject)    {    	non-compiled	[CE]  cannot  find  symbol  hasObject	147	None	replace
1748	[BUG]  [BUGGY]  }  else  if(!(o  instanceof  JsonArray)||  isNumberObject)  {  [CE]  cannot  find  symbol  isNumberObject  [FE]            ArrayIndexOutOfBoundsException      [CONTEXT]      if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }      [BUGGY]  }  else  if(!(o  instanceof  JsonArray)||  isNumberObject)  {  [BUGGY]      return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	replace	}  else  if(!(o  instanceof  JsonArray)||  isNumberObject)  {	  }    else    if(!(o    instanceof    JsonArray)||    isObject)    {    	non-compiled	[CE]  cannot  find  symbol  isNumberObject	147	None	replace
1749	[BUG]  [BUGGY]  }  else  if(!(o  instanceof  JsonArray)||  object)  {  [CE]  cannot  find  symbol  object  [FE]              ArrayIndexOutOfBoundsException      [CONTEXT]      if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }      [BUGGY]  }  else  if(!(o  instanceof  JsonArray)||  object)  {  [BUGGY]      return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	replace	}  else  if(!(o  instanceof  JsonArray)||  object)  {	  }    else    if(!(o    instanceof    JsonArray)||    isObject)    {    	non-compiled	[CE]  cannot  find  symbol  object	147	None	replace
1750	[BUG]  [BUGGY]  }  else  {  case  JsonToken.BEGIN_OBJECT:  return  JsonToken.BEGIN_OBJECT;  break;  [CE]  orphaned  case  [FE]                  AssertionError      [CONTEXT]      if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }      [BUGGY]  }  else  {  case  JsonToken.BEGIN_OBJECT:  return  JsonToken.BEGIN_OBJECT;  break;  [BUGGY]      return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	replace	}  else  {  case  JsonToken.BEGIN_OBJECT:  return  JsonToken.BEGIN_OBJECT;  break;	  }    else    if(!(o    instanceof    JsonObject))    {    }    else    if(!(o    instanceof    JsonObject))    {    case    JsonToken.BEGIN_OBJECT:    return    JsonToken.BEGIN_OBJECT;    break;    	non-compiled	[CE]  orphaned  case	211	None	replace
1751	[BUG]  [BUGGY]  case  JsonToken.BEGIN_OBJECT:  return  JsonToken.BEGIN_OBJECT;  break;  [CE]  orphaned  case  [FE]                    AssertionError      [CONTEXT]      if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }      [BUGGY]  case  JsonToken.BEGIN_OBJECT:  return  JsonToken.BEGIN_OBJECT;  break;  [BUGGY]      return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	replace	case  JsonToken.BEGIN_OBJECT:  return  JsonToken.BEGIN_OBJECT;  break;	  }    else    if(!(o    instanceof    JsonObject))    {    }    else    if(!(o    instanceof    JsonObject))    {    case    JsonToken.BEGIN_OBJECT:    return    JsonToken.BEGIN_OBJECT;    break;    	non-compiled	[CE]  orphaned  case	211	None	replace
1752	[BUG]  [BUGGY]  }  else  if(o  instanceof  String  ||  o  instanceof  JsonObject)  {  }  else  if(o  instanceof  String  ||  o  instanceof  JsonObject)  {  return  JsonToken.BEGIN_OBJECT;  }  else  if(o  instanceof  JsonObject)  {  [CE]  missing  return  statement  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]      if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }      [BUGGY]  }  else  if(o  instanceof  String  ||  o  instanceof  JsonObject)  {  }  else  if(o  instanceof  String  ||  o  instanceof  JsonObject)  {  return  JsonToken.BEGIN_OBJECT;  }  else  if(o  instanceof  JsonObject)  {  [BUGGY]      return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	replace	}    else    if(o    instanceof    String    ||    o    instanceof    JsonObject)    {    }  else  if(o  instanceof  String  ||  o  instanceof  JsonObject)  {  return  JsonToken.BEGIN_OBJECT;  }  else  if(o  instanceof  JsonObject)  {	  	non-compiled	[CE]  missing  return  statement	49	None	add
1753	[BUG]  [BUGGY]  }  else  if(o  instanceof  String  ||  o  instanceof  JsonObject)  {  }  else  if(o  instanceof  String  ||  o  instanceof  JsonObject)  {  return  JsonToken.BEGIN_OBJECT;  }  else  if(o  instanceof  JsonString  ||  o  instanceof  JsonObject)  {  [CE]  cannot  find  symbol  [FE]      ArrayIndexOutOfBoundsException    [CONTEXT]      if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }      [BUGGY]  }  else  if(o  instanceof  String  ||  o  instanceof  JsonObject)  {  }  else  if(o  instanceof  String  ||  o  instanceof  JsonObject)  {  return  JsonToken.BEGIN_OBJECT;  }  else  if(o  instanceof  JsonString  ||  o  instanceof  JsonObject)  {  [BUGGY]      return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	replace	}    else    if(o    instanceof    String    ||    o    instanceof    JsonObject)    {    }  else  if(o  instanceof  String  ||  o  instanceof  JsonObject)  {  return  JsonToken.BEGIN_OBJECT;  }  else  if(o  instanceof  JsonString  ||  o  instanceof  JsonObject)  {	  	non-compiled	[CE]  cannot  find  symbol	49	None	add
1754	[BUG]  [BUGGY]  }  else  if(o  instanceof  String  ||  o  instanceof  JsonObject)  {  }  else  if(o  instanceof  String  ||  o  instanceof  JsonObject)  {  return  JsonToken.BEGIN_OBJECT;  }  else  if(o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_OBJECT;  }  [CE]  illegal  start  of  type  [FE]        ArrayIndexOutOfBoundsException    [CONTEXT]      if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }      [BUGGY]  }  else  if(o  instanceof  String  ||  o  instanceof  JsonObject)  {  }  else  if(o  instanceof  String  ||  o  instanceof  JsonObject)  {  return  JsonToken.BEGIN_OBJECT;  }  else  if(o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_OBJECT;  }  [BUGGY]      return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	replace	}    else    if(o    instanceof    String    ||    o    instanceof    JsonObject)    {    }  else  if(o  instanceof  String  ||  o  instanceof  JsonObject)  {  return  JsonToken.BEGIN_OBJECT;  }  else  if(o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_OBJECT;  }	  	non-compiled	[CE]  illegal  start  of  type	49	None	add
1755	[BUG]  [BUGGY]  }  else  if(o  instanceof  String  ||  o  instanceof  JsonObject)  {  }  else  if(o  instanceof  String  ||  o  instanceof  JsonObject)  {  return  JsonToken.BEGIN_OBJECT;  }  else  if(o  instanceof  JsonArray)  {  [CE]  missing  return  statement  [FE]          ArrayIndexOutOfBoundsException    [CONTEXT]      if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }      [BUGGY]  }  else  if(o  instanceof  String  ||  o  instanceof  JsonObject)  {  }  else  if(o  instanceof  String  ||  o  instanceof  JsonObject)  {  return  JsonToken.BEGIN_OBJECT;  }  else  if(o  instanceof  JsonArray)  {  [BUGGY]      return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	replace	}    else    if(o    instanceof    String    ||    o    instanceof    JsonObject)    {    }  else  if(o  instanceof  String  ||  o  instanceof  JsonObject)  {  return  JsonToken.BEGIN_OBJECT;  }  else  if(o  instanceof  JsonArray)  {	  	non-compiled	[CE]  missing  return  statement	49	None	add
1756	[BUG]  [BUGGY]  }  else  if(o  instanceof  String  ||  o  instanceof  JsonObject)  {  }  else  if(o  instanceof  String  ||  o  instanceof  JsonObject)  {  return  JsonToken.BEGIN_OBJECT;  }  else  if(o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  [CE]  illegal  start  of  type  [FE]            ArrayIndexOutOfBoundsException    [CONTEXT]      if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }      [BUGGY]  }  else  if(o  instanceof  String  ||  o  instanceof  JsonObject)  {  }  else  if(o  instanceof  String  ||  o  instanceof  JsonObject)  {  return  JsonToken.BEGIN_OBJECT;  }  else  if(o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  [BUGGY]      return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	replace	}    else    if(o    instanceof    String    ||    o    instanceof    JsonObject)    {    }  else  if(o  instanceof  String  ||  o  instanceof  JsonObject)  {  return  JsonToken.BEGIN_OBJECT;  }  else  if(o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }	  	non-compiled	[CE]  illegal  start  of  type	49	None	add
1757	[BUG]  [BUGGY]  }  else  if(!(o  instanceof  JsonPrimitive))  {  }  else  if(!(o  instanceof  JsonPrimitive))  {  case  JsonToken.BEGIN_OBJECT:  return  JsonToken.BEGIN_ARRAY;  [CE]  orphaned  case  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]      if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }      [BUGGY]  }  else  if(!(o  instanceof  JsonPrimitive))  {  }  else  if(!(o  instanceof  JsonPrimitive))  {  case  JsonToken.BEGIN_OBJECT:  return  JsonToken.BEGIN_ARRAY;  [BUGGY]      return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	replace	}    else    if(!(o    instanceof    JsonPrimitive))    {    }  else  if(!(o  instanceof  JsonPrimitive))  {  case  JsonToken.BEGIN_OBJECT:  return  JsonToken.BEGIN_ARRAY;	  	non-compiled	[CE]  orphaned  case	10	None	add
1758	[BUG]  [BUGGY]  }  else  if(!(o  instanceof  JsonPrimitive))  {  }  else  if(!(o  instanceof  JsonPrimitive))  {  case  JsonToken.BEGIN_OBJECT:  push(iterator.next());  return  JsonToken.BEGIN_ARRAY;  [CE]  orphaned  case  [FE]      ArrayIndexOutOfBoundsException    [CONTEXT]      if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }      [BUGGY]  }  else  if(!(o  instanceof  JsonPrimitive))  {  }  else  if(!(o  instanceof  JsonPrimitive))  {  case  JsonToken.BEGIN_OBJECT:  push(iterator.next());  return  JsonToken.BEGIN_ARRAY;  [BUGGY]      return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	replace	}    else    if(!(o    instanceof    JsonPrimitive))    {    }  else  if(!(o  instanceof  JsonPrimitive))  {  case  JsonToken.BEGIN_OBJECT:  push(iterator.next());  return  JsonToken.BEGIN_ARRAY;	  	non-compiled	[CE]  orphaned  case	10	None	add
1759	[BUG]  [BUGGY]  }  else  if(!(o  instanceof  JsonPrimitive))  {  }  else  if(!(o  instanceof  JsonPrimitive))  {  case  JsonToken.BEGIN_OBJECT:  return  JsonToken.BEGIN_ARRAY;  default:  throw  new  IllegalArgumentException( " ");  [CE]  orphaned  case  [FE]        ArrayIndexOutOfBoundsException    [CONTEXT]      if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }      [BUGGY]  }  else  if(!(o  instanceof  JsonPrimitive))  {  }  else  if(!(o  instanceof  JsonPrimitive))  {  case  JsonToken.BEGIN_OBJECT:  return  JsonToken.BEGIN_ARRAY;  default:  throw  new  IllegalArgumentException( " ");  [BUGGY]      return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	replace	}    else    if(!(o    instanceof    JsonPrimitive))    {    }  else  if(!(o  instanceof  JsonPrimitive))  {  case  JsonToken.BEGIN_OBJECT:  return  JsonToken.BEGIN_ARRAY;  default:  throw  new  IllegalArgumentException( " ");	  	non-compiled	[CE]  orphaned  case	10	None	add
1760	[BUG]  [BUGGY]  }  else  if(!(o  instanceof  JsonPrimitive))  {  }  else  if(!(o  instanceof  JsonPrimitive))  {  case  JsonToken.BEGIN_OBJECT:  push(iterator.next());  return  JsonToken.BEGIN_ARRAY;  }  [CE]  orphaned  case  [FE]          ArrayIndexOutOfBoundsException    [CONTEXT]      if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }      [BUGGY]  }  else  if(!(o  instanceof  JsonPrimitive))  {  }  else  if(!(o  instanceof  JsonPrimitive))  {  case  JsonToken.BEGIN_OBJECT:  push(iterator.next());  return  JsonToken.BEGIN_ARRAY;  }  [BUGGY]      return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	replace	}    else    if(!(o    instanceof    JsonPrimitive))    {    }  else  if(!(o  instanceof  JsonPrimitive))  {  case  JsonToken.BEGIN_OBJECT:  push(iterator.next());  return  JsonToken.BEGIN_ARRAY;  }	  	non-compiled	[CE]  orphaned  case	10	None	add
1761	[BUG]  [BUGGY]  }  else  if(o  instanceof  JsonNumber  ||  Object.valueOf(o))  {  [CE]  cannot  find  symbol  [FE]                          ArrayIndexOutOfBoundsException      [CONTEXT]      if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }      [BUGGY]  }  else  if(o  instanceof  JsonNumber  ||  Object.valueOf(o))  {  [BUGGY]      return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	replace	}  else  if(o  instanceof  JsonNumber  ||  Object.valueOf(o))  {	  }    else    if(o    instanceof    JsonNumber    ||    o    instanceof    JsonLong)    {    	non-compiled	[CE]  cannot  find  symbol	115	None	replace
1762	[BUG]  [BUGGY]  }  else  {  if(o  ==  null)  {  return  JsonToken.BEGIN_ARRAY;  }  [CE]  'else'  without  'if'  [FE]              ArrayIndexOutOfBoundsException      [CONTEXT]      if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }      [BUGGY]  }  else  {  if(o  ==  null)  {  return  JsonToken.BEGIN_ARRAY;  }  [BUGGY]      return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	replace	}  else  {  if(o  ==  null)  {  return  JsonToken.BEGIN_ARRAY;  }	  }    else    if(!(o    instanceof    JsonArray))    {    }    else    if(!(o    instanceof    JsonArray))    {    case    JsonToken.BEGIN_ARRAY:    return    JsonToken.BEGIN_OBJECT;    	non-compiled	[CE]  'else'  without  'if'	218	None	replace
1763	[BUG]  [BUGGY]  }  else  {  if(isObject)  {  return  JsonToken.BEGIN_ARRAY;  }  [CE]  'else'  without  'if'  [FE]                ArrayIndexOutOfBoundsException      [CONTEXT]      if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }      [BUGGY]  }  else  {  if(isObject)  {  return  JsonToken.BEGIN_ARRAY;  }  [BUGGY]      return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	replace	}  else  {  if(isObject)  {  return  JsonToken.BEGIN_ARRAY;  }	  }    else    if(!(o    instanceof    JsonArray))    {    }    else    if(!(o    instanceof    JsonArray))    {    case    JsonToken.BEGIN_ARRAY:    return    JsonToken.BEGIN_OBJECT;    	non-compiled	[CE]  'else'  without  'if'	218	None	replace
1764	[BUG]  [BUGGY]  }  else  if(o  instanceof  JsonNumber  ||  o.getClass()!=  String)  {  [CE]  cannot  find  symbol  [FE]                    ArrayIndexOutOfBoundsException      [CONTEXT]      if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }      [BUGGY]  }  else  if(o  instanceof  JsonNumber  ||  o.getClass()!=  String)  {  [BUGGY]      return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	replace	}  else  if(o  instanceof  JsonNumber  ||  o.getClass()!=  String)  {	  }    else    if(o    instanceof    JsonNumber    ||    o    instanceof    String)    {    	non-compiled	[CE]  cannot  find  symbol	227	None	replace
1765	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]      if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }      [BUGGY]  }  else  if(!(o  instanceof  JsonObject  ||  o  instanceof  Class  <?>))  {  [BUGGY]      return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	add	}  else  if(!(o  instanceof  JsonObject  ||  o  instanceof  Class  <?>))  {	  }    else    if(o    instanceof    JsonObject    ||    o    instanceof    Class    <?>)    {    	compilable	  [FE]  AssertionError  	243	2	replace
1766	[BUG]  [BUGGY]  }  else  if(!(o  instanceof  JsonObject  ||  o  instanceof  Class  <?>))  {  [FE]  AssertionError  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]      if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }      [BUGGY]  }  else  if(!(o  instanceof  JsonObject  ||  o  instanceof  Class  <?>))  {  [BUGGY]      return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	replace	}  else  if(!(o  instanceof  JsonObject  ||  o  instanceof  Class  <?>))  {	  }    else    if(o    instanceof    JsonObject    ||    o    instanceof    Class    <?>)    {    	compilable	  [FE]  AssertionError  	243	2	replace
1767	[BUG]  [BUGGY]  }  else  if(o  ==  JsonToken.BEGIN_OBJECT)  {  case  JsonToken.BEGIN_OBJECT:  return  JsonToken.BEGIN_ARRAY;  [CE]  orphaned  case  [FE]              AssertionError      [CONTEXT]      if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }      [BUGGY]  }  else  if(o  ==  JsonToken.BEGIN_OBJECT)  {  case  JsonToken.BEGIN_OBJECT:  return  JsonToken.BEGIN_ARRAY;  [BUGGY]      return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	replace	}  else  if(o  ==  JsonToken.BEGIN_OBJECT)  {  case  JsonToken.BEGIN_OBJECT:  return  JsonToken.BEGIN_ARRAY;	  }    else    if(!(o    instanceof    JsonObject))    {    }    else    if(!(o    instanceof    JsonObject))    {    case    JsonToken.BEGIN_OBJECT:    return    JsonToken.BEGIN_ARRAY;    	non-compiled	[CE]  orphaned  case	209	None	replace
1768	[BUG]  [BUGGY]  }  else  if(o  ==  JsonToken.BEGIN_OBJECT  ||  o  ==  JsonToken.BEGIN_ARRAY)  {  case  JsonToken.BEGIN_OBJECT:  return  JsonToken.BEGIN_OBJECT;  [CE]  orphaned  case  [FE]                AssertionError      [CONTEXT]      if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }      [BUGGY]  }  else  if(o  ==  JsonToken.BEGIN_OBJECT  ||  o  ==  JsonToken.BEGIN_ARRAY)  {  case  JsonToken.BEGIN_OBJECT:  return  JsonToken.BEGIN_OBJECT;  [BUGGY]      return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	replace	}  else  if(o  ==  JsonToken.BEGIN_OBJECT  ||  o  ==  JsonToken.BEGIN_ARRAY)  {  case  JsonToken.BEGIN_OBJECT:  return  JsonToken.BEGIN_OBJECT;	  }    else    if(!(o    instanceof    JsonObject))    {    }    else    if(!(o    instanceof    JsonObject))    {    case    JsonToken.BEGIN_OBJECT:    return    JsonToken.BEGIN_ARRAY;    	non-compiled	[CE]  orphaned  case	209	None	replace
1769	[BUG]  [BUGGY]  }  else  if(o  ==  JsonToken.BEGIN_OBJECT  ||  o  ==  JsonToken.BEGIN_ARRAY)  {  return  JsonToken.BEGIN_OBJECT;  [CE]  unreachable  statement  [FE]                  AssertionError      [CONTEXT]      if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }      [BUGGY]  }  else  if(o  ==  JsonToken.BEGIN_OBJECT  ||  o  ==  JsonToken.BEGIN_ARRAY)  {  return  JsonToken.BEGIN_OBJECT;  [BUGGY]      return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	replace	}  else  if(o  ==  JsonToken.BEGIN_OBJECT  ||  o  ==  JsonToken.BEGIN_ARRAY)  {  return  JsonToken.BEGIN_OBJECT;	  }    else    if(!(o    instanceof    JsonObject))    {    }    else    if(!(o    instanceof    JsonObject))    {    case    JsonToken.BEGIN_OBJECT:    return    JsonToken.BEGIN_ARRAY;    	non-compiled	[CE]  unreachable  statement	209	None	replace
1770	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]      if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }      [BUGGY]  }  else  if(o  instanceof  JsonArray!=  false)  {  [BUGGY]      return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	add	}  else  if(o  instanceof  JsonArray!=  false)  {	  }    else    if(o    instanceof    JsonObject!=    false)    {    	compilable	  [FE]  AssertionError  	33	2	replace
1771	[BUG]  [BUGGY]  }  else  if(o  instanceof  JsonArray!=  false)  {  [FE]  AssertionError  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]      if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }      [BUGGY]  }  else  if(o  instanceof  JsonArray!=  false)  {  [BUGGY]      return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	replace	}  else  if(o  instanceof  JsonArray!=  false)  {	  }    else    if(o    instanceof    JsonObject!=    false)    {    	compilable	  [FE]  AssertionError  	33	2	replace
1772	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }      [BUGGY]  }  else  if(!(o  instanceof  JsonObject  ||  o  instanceof  JsonObject  ||  o  instanceof  JsonPrimitive))  {  [BUGGY]      return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	add	}  else  if(!(o  instanceof  JsonObject  ||  o  instanceof  JsonObject  ||  o  instanceof  JsonPrimitive))  {	  }    else    if(!(o    instanceof    JsonObject    ||    o    instanceof    JsonArray))    {    	compilable	  [FE]  AssertionError  	137	2	replace
1773	[BUG]  [BUGGY]  }  else  if(!(o  instanceof  JsonObject  ||  o  instanceof  JsonObject  ||  o  instanceof  JsonPrimitive))  {  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }      [BUGGY]  }  else  if(!(o  instanceof  JsonObject  ||  o  instanceof  JsonObject  ||  o  instanceof  JsonPrimitive))  {  [BUGGY]      return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	replace	}  else  if(!(o  instanceof  JsonObject  ||  o  instanceof  JsonObject  ||  o  instanceof  JsonPrimitive))  {	  }    else    if(!(o    instanceof    JsonObject    ||    o    instanceof    JsonArray))    {    	compilable	  [FE]  AssertionError  	137	2	replace
1774	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }      [BUGGY]  }  else  if(!(o  instanceof  JsonObject  ||  o  instanceof  JsonObject))  {  [BUGGY]      return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	add	}  else  if(!(o  instanceof  JsonObject  ||  o  instanceof  JsonObject))  {	  }    else    if(!(o    instanceof    JsonObject    ||    o    instanceof    JsonArray))    {    	compilable	  [FE]  AssertionError  	137	2	replace
1775	[BUG]  [BUGGY]  }  else  if(!(o  instanceof  JsonObject  ||  o  instanceof  JsonObject))  {  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }      [BUGGY]  }  else  if(!(o  instanceof  JsonObject  ||  o  instanceof  JsonObject))  {  [BUGGY]      return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	replace	}  else  if(!(o  instanceof  JsonObject  ||  o  instanceof  JsonObject))  {	  }    else    if(!(o    instanceof    JsonObject    ||    o    instanceof    JsonArray))    {    	compilable	  [FE]  AssertionError  	137	2	replace
1776	[BUG]  [BUGGY]  }  else  if(!(o  instanceof  JsonObject  ||  o  instanceof  JsonArray))  {  }  else  if(!(o  instanceof  JsonObject  ||  o  instanceof  JsonArray))  {  return  JsonToken.BEGIN_OBJECT;  }  else  if(!(o  instanceof  JsonObject  ||  o  instanceof  JsonArray))  {  [CE]  missing  return  statement  [FE]    AssertionError    [CONTEXT]      if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }      [BUGGY]  }  else  if(!(o  instanceof  JsonObject  ||  o  instanceof  JsonArray))  {  }  else  if(!(o  instanceof  JsonObject  ||  o  instanceof  JsonArray))  {  return  JsonToken.BEGIN_OBJECT;  }  else  if(!(o  instanceof  JsonObject  ||  o  instanceof  JsonArray))  {  [BUGGY]      return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	replace	}    else    if(!(o    instanceof    JsonObject    ||    o    instanceof    JsonArray))    {    }  else  if(!(o  instanceof  JsonObject  ||  o  instanceof  JsonArray))  {  return  JsonToken.BEGIN_OBJECT;  }  else  if(!(o  instanceof  JsonObject  ||  o  instanceof  JsonArray))  {	  	non-compiled	[CE]  missing  return  statement	136	None	add
1777	[BUG]  [BUGGY]  }  else  if(!(o  instanceof  JsonObject  ||  o  instanceof  JsonArray))  {  }  else  if(!(o  instanceof  JsonObject  ||  o  instanceof  JsonArray))  {  aught  return  JsonToken.BEGIN_OBJECT;  }  else  if(!(o  instanceof  JsonObject  ||  o  instanceof  JsonArray))  {  [CE]  not  a  statement  [FE]      AssertionError    [CONTEXT]      if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }      [BUGGY]  }  else  if(!(o  instanceof  JsonObject  ||  o  instanceof  JsonArray))  {  }  else  if(!(o  instanceof  JsonObject  ||  o  instanceof  JsonArray))  {  aught  return  JsonToken.BEGIN_OBJECT;  }  else  if(!(o  instanceof  JsonObject  ||  o  instanceof  JsonArray))  {  [BUGGY]      return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	replace	}    else    if(!(o    instanceof    JsonObject    ||    o    instanceof    JsonArray))    {    }  else  if(!(o  instanceof  JsonObject  ||  o  instanceof  JsonArray))  {  aught  return  JsonToken.BEGIN_OBJECT;  }  else  if(!(o  instanceof  JsonObject  ||  o  instanceof  JsonArray))  {	  	non-compiled	[CE]  not  a  statement	136	None	add
1778	[BUG]  [BUGGY]  }  else  if(!(o  instanceof  JsonObject  ||  o  instanceof  JsonArray))  {  }  else  if(!(o  instanceof  JsonObject  ||  o  instanceof  JsonArray))  {  this  return  JsonToken.BEGIN_OBJECT;  }  else  if(!(o  instanceof  JsonObject  ||  o  instanceof  JsonArray))  {  [CE]  not  a  statement  [FE]        AssertionError    [CONTEXT]      if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }      [BUGGY]  }  else  if(!(o  instanceof  JsonObject  ||  o  instanceof  JsonArray))  {  }  else  if(!(o  instanceof  JsonObject  ||  o  instanceof  JsonArray))  {  this  return  JsonToken.BEGIN_OBJECT;  }  else  if(!(o  instanceof  JsonObject  ||  o  instanceof  JsonArray))  {  [BUGGY]      return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	replace	}    else    if(!(o    instanceof    JsonObject    ||    o    instanceof    JsonArray))    {    }  else  if(!(o  instanceof  JsonObject  ||  o  instanceof  JsonArray))  {  this  return  JsonToken.BEGIN_OBJECT;  }  else  if(!(o  instanceof  JsonObject  ||  o  instanceof  JsonArray))  {	  	non-compiled	[CE]  not  a  statement	136	None	add
1779	[BUG]  [BUGGY]  }  else  if(!(o  instanceof  JsonObject  ||  o  instanceof  JsonArray))  {  }  else  if(!(o  instanceof  JsonObject  ||  o  instanceof  JsonArray))  {  return  JsonToken.BEGIN_OBJECT;  }  else  if(!(o  instanceof  JSONObject  ||  o  instanceof  JsonArray))  {  [CE]  cannot  find  symbol  [FE]          AssertionError    [CONTEXT]      if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }      [BUGGY]  }  else  if(!(o  instanceof  JsonObject  ||  o  instanceof  JsonArray))  {  }  else  if(!(o  instanceof  JsonObject  ||  o  instanceof  JsonArray))  {  return  JsonToken.BEGIN_OBJECT;  }  else  if(!(o  instanceof  JSONObject  ||  o  instanceof  JsonArray))  {  [BUGGY]      return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	replace	}    else    if(!(o    instanceof    JsonObject    ||    o    instanceof    JsonArray))    {    }  else  if(!(o  instanceof  JsonObject  ||  o  instanceof  JsonArray))  {  return  JsonToken.BEGIN_OBJECT;  }  else  if(!(o  instanceof  JSONObject  ||  o  instanceof  JsonArray))  {	  	non-compiled	[CE]  cannot  find  symbol	136	None	add
1780	[BUG]  [BUGGY]  try  {  if(o  ==  null)return  JsonToken.NUMBER;  else  {  push(iterator.next());  return  JsonToken.END_ARRAY;  }  [CE]  'try'  without  'catch'  or  'finally'  [FE]                              ArrayIndexOutOfBoundsException      [CONTEXT]      if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }      [BUGGY]  try  {  if(o  ==  null)return  JsonToken.NUMBER;  else  {  push(iterator.next());  return  JsonToken.END_ARRAY;  }  [BUGGY]      return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	replace	try  {  if(o  ==  null)return  JsonToken.NUMBER;  else  {  push(iterator.next());  return  JsonToken.END_ARRAY;  }	  if(o    ==    null)return    JsonToken.NUMBER;    else    {    push(iterator.next());    return    JsonToken.END_ARRAY;    }    	non-compiled	[CE]  'try'  without  'catch'  or  'finally'	226	None	replace
1781	[BUG]  [BUGGY]  else  {  push(iterator.next());  return  JsonToken.END_ARRAY;  }  [CE]  'else'  without  'if'  [FE]                                ArrayIndexOutOfBoundsException      [CONTEXT]      if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }      [BUGGY]  else  {  push(iterator.next());  return  JsonToken.END_ARRAY;  }  [BUGGY]      return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	replace	else  {  push(iterator.next());  return  JsonToken.END_ARRAY;  }	  if(o    ==    null)return    JsonToken.NUMBER;    else    {    push(iterator.next());    return    JsonToken.END_ARRAY;    }    	non-compiled	[CE]  'else'  without  'if'	226	None	replace
1782	[BUG]  [BUGGY]  if(o  ==  null  ||  isObject)return  JsonToken.NUMBER;  else  {  push(iterator.next());  return  JsonToken.END_ARRAY;  }  [CE]  unreachable  statement  [FE]                                  ArrayIndexOutOfBoundsException      [CONTEXT]      if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }      [BUGGY]  if(o  ==  null  ||  isObject)return  JsonToken.NUMBER;  else  {  push(iterator.next());  return  JsonToken.END_ARRAY;  }  [BUGGY]      return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	replace	if(o  ==  null  ||  isObject)return  JsonToken.NUMBER;  else  {  push(iterator.next());  return  JsonToken.END_ARRAY;  }	  if(o    ==    null)return    JsonToken.NUMBER;    else    {    push(iterator.next());    return    JsonToken.END_ARRAY;    }    	non-compiled	[CE]  unreachable  statement	226	None	replace
1783	[BUG]  [BUGGY]  if(o  ==  null  ||!isObject)return  JsonToken.NUMBER;  else  {  push(iterator.next());  return  JsonToken.END_ARRAY;  }  [CE]  unreachable  statement  [FE]                                    ArrayIndexOutOfBoundsException      [CONTEXT]      if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }      [BUGGY]  if(o  ==  null  ||!isObject)return  JsonToken.NUMBER;  else  {  push(iterator.next());  return  JsonToken.END_ARRAY;  }  [BUGGY]      return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	replace	if(o  ==  null  ||!isObject)return  JsonToken.NUMBER;  else  {  push(iterator.next());  return  JsonToken.END_ARRAY;  }	  if(o    ==    null)return    JsonToken.NUMBER;    else    {    push(iterator.next());    return    JsonToken.END_ARRAY;    }    	non-compiled	[CE]  unreachable  statement	226	None	replace
1784	[BUG]  [BUGGY]  }    else    if(o    instanceof    JsonObject    ||    o    instanceof    JsonPrimitive)    {    return  JsonToken.BEGIN_OBJECT;  else  if(o  instanceof  JsonObject  ||  o  instanceof  JsonPrimitive)  {  return  JsonToken.BEGIN_OBJECT;  }  [CE]  'else'  without  'if'  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]      if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }      [BUGGY]  }    else    if(o    instanceof    JsonObject    ||    o    instanceof    JsonPrimitive)    {    return  JsonToken.BEGIN_OBJECT;  else  if(o  instanceof  JsonObject  ||  o  instanceof  JsonPrimitive)  {  return  JsonToken.BEGIN_OBJECT;  }  [BUGGY]      return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	replace	}        else        if(o        instanceof        JsonObject        ||        o        instanceof        JsonPrimitive)        {        return    JsonToken.BEGIN_OBJECT;    else  if(o  instanceof  JsonObject  ||  o  instanceof  JsonPrimitive)  {  return  JsonToken.BEGIN_OBJECT;  }	  	non-compiled	[CE]  'else'  without  'if'	165	None	add
1785	[BUG]  [BUGGY]  }    else    if(o    instanceof    JsonObject    ||    o    instanceof    JsonPrimitive)    {    return  JsonToken.BEGIN_OBJECT;  if(o  instanceof  JsonObject  ||  o  instanceof  JsonPrimitive)  {  return  JsonToken.BEGIN_OBJECT;  }  [CE]  unreachable  statement  [FE]      ArrayIndexOutOfBoundsException    [CONTEXT]      if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }      [BUGGY]  }    else    if(o    instanceof    JsonObject    ||    o    instanceof    JsonPrimitive)    {    return  JsonToken.BEGIN_OBJECT;  if(o  instanceof  JsonObject  ||  o  instanceof  JsonPrimitive)  {  return  JsonToken.BEGIN_OBJECT;  }  [BUGGY]      return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	replace	}        else        if(o        instanceof        JsonObject        ||        o        instanceof        JsonPrimitive)        {        return    JsonToken.BEGIN_OBJECT;    if(o  instanceof  JsonObject  ||  o  instanceof  JsonPrimitive)  {  return  JsonToken.BEGIN_OBJECT;  }	  	non-compiled	[CE]  unreachable  statement	165	None	add
1786	[BUG]  [BUGGY]  }    else    if(o    instanceof    JsonObject    ||    o    instanceof    JsonPrimitive)    {    return  JsonToken.BEGIN_OBJECT;  }  else  if(o  instanceof  JsonObject  ||  o  instanceof  JsonPrimitive)  {  return  JsonToken.BEGIN_OBJECT;  }  else  if(o  instanceof  JsonObject)  {  return  JsonToken.BEGIN_OBJECT;  }  [CE]  illegal  start  of  type  [FE]        ArrayIndexOutOfBoundsException    [CONTEXT]      if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }      [BUGGY]  }    else    if(o    instanceof    JsonObject    ||    o    instanceof    JsonPrimitive)    {    return  JsonToken.BEGIN_OBJECT;  }  else  if(o  instanceof  JsonObject  ||  o  instanceof  JsonPrimitive)  {  return  JsonToken.BEGIN_OBJECT;  }  else  if(o  instanceof  JsonObject)  {  return  JsonToken.BEGIN_OBJECT;  }  [BUGGY]      return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	replace	}        else        if(o        instanceof        JsonObject        ||        o        instanceof        JsonPrimitive)        {        return    JsonToken.BEGIN_OBJECT;    }  else  if(o  instanceof  JsonObject  ||  o  instanceof  JsonPrimitive)  {  return  JsonToken.BEGIN_OBJECT;  }  else  if(o  instanceof  JsonObject)  {  return  JsonToken.BEGIN_OBJECT;  }	  	non-compiled	[CE]  illegal  start  of  type	165	None	add
1787	[BUG]  [BUGGY]  }    else    if(o    instanceof    JsonObject    ||    o    instanceof    JsonPrimitive)    {    return  JsonToken.BEGIN_OBJECT;  if(o  instanceof  JsonObject  ||  o  instanceof  JsonPrimitive)  {  return  JsonToken.BEGIN_OBJECT;  }  else  if(o  instanceof  JsonObject  ||  o  instanceof  JsonPrimitive)  {  return  JsonToken.BEGIN_OB  [CE]  ';'  expected  [FE]          ArrayIndexOutOfBoundsException    [CONTEXT]      if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }      [BUGGY]  }    else    if(o    instanceof    JsonObject    ||    o    instanceof    JsonPrimitive)    {    return  JsonToken.BEGIN_OBJECT;  if(o  instanceof  JsonObject  ||  o  instanceof  JsonPrimitive)  {  return  JsonToken.BEGIN_OBJECT;  }  else  if(o  instanceof  JsonObject  ||  o  instanceof  JsonPrimitive)  {  return  JsonToken.BEGIN_OB  [BUGGY]      return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	replace	}        else        if(o        instanceof        JsonObject        ||        o        instanceof        JsonPrimitive)        {        return    JsonToken.BEGIN_OBJECT;    if(o  instanceof  JsonObject  ||  o  instanceof  JsonPrimitive)  {  return  JsonToken.BEGIN_OBJECT;  }  else  if(o  instanceof  JsonObject  ||  o  instanceof  JsonPrimitive)  {  return  JsonToken.BEGIN_OB	  	non-compiled	[CE]  ';'  expected	165	None	add
1788	[BUG]  [BUGGY]  }  else  if(o  instanceof  JsonArray  ||  o  instanceof  String)  {  }  else  if(o  instanceof  JsonArray  ||  o  instanceof  String)  {  return  JsonToken.BEGIN_OBJECT;  }  else  if(o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  [CE]  illegal  start  of  type  [FE]    AssertionError    [CONTEXT]      if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }      [BUGGY]  }  else  if(o  instanceof  JsonArray  ||  o  instanceof  String)  {  }  else  if(o  instanceof  JsonArray  ||  o  instanceof  String)  {  return  JsonToken.BEGIN_OBJECT;  }  else  if(o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  [BUGGY]      return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	replace	}    else    if(o    instanceof    JsonArray    ||    o    instanceof    String)    {    }  else  if(o  instanceof  JsonArray  ||  o  instanceof  String)  {  return  JsonToken.BEGIN_OBJECT;  }  else  if(o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }	  	non-compiled	[CE]  illegal  start  of  type	51	None	add
1789	[BUG]  [BUGGY]  }  else  if(o  instanceof  JsonArray  ||  o  instanceof  String)  {  }  else  if(o  instanceof  JsonArray  ||  o  instanceof  String)  {  return  JsonToken.BEGIN_OBJECT;  }  else  if(o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_OBJECT;  }  [CE]  illegal  start  of  type  [FE]      AssertionError    [CONTEXT]      if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }      [BUGGY]  }  else  if(o  instanceof  JsonArray  ||  o  instanceof  String)  {  }  else  if(o  instanceof  JsonArray  ||  o  instanceof  String)  {  return  JsonToken.BEGIN_OBJECT;  }  else  if(o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_OBJECT;  }  [BUGGY]      return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	replace	}    else    if(o    instanceof    JsonArray    ||    o    instanceof    String)    {    }  else  if(o  instanceof  JsonArray  ||  o  instanceof  String)  {  return  JsonToken.BEGIN_OBJECT;  }  else  if(o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_OBJECT;  }	  	non-compiled	[CE]  illegal  start  of  type	51	None	add
1790	[BUG]  [BUGGY]  }  else  if(o  instanceof  JsonObject  &&  o  instanceof  JsonArray)  {  }  else  if(o  instanceof  JsonObject  &&  o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_OBJECT;  }  else  if(o  instanceof  JsonObject)  {  return  JsonToken.BEGIN_OBJECT;  }  [CE]  illegal  start  of  type  [FE]    AssertionError    [CONTEXT]      if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }      [BUGGY]  }  else  if(o  instanceof  JsonObject  &&  o  instanceof  JsonArray)  {  }  else  if(o  instanceof  JsonObject  &&  o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_OBJECT;  }  else  if(o  instanceof  JsonObject)  {  return  JsonToken.BEGIN_OBJECT;  }  [BUGGY]      return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	replace	}    else    if(o    instanceof    JsonObject    &&    o    instanceof    JsonArray)    {    }  else  if(o  instanceof  JsonObject  &&  o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_OBJECT;  }  else  if(o  instanceof  JsonObject)  {  return  JsonToken.BEGIN_OBJECT;  }	  	non-compiled	[CE]  illegal  start  of  type	41	None	add
1791	[BUG]  [BUGGY]  }  else  if(o  instanceof  JsonObject  &&  o  instanceof  JsonArray)  {  }  else  if(o  instanceof  JsonObject  &&  o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_OBJECT;  }  else  if(o  instanceof  JsonObject)  {  return  JsonToken.BEGIN_ARRAY;  }  [CE]  illegal  start  of  type  [FE]      AssertionError    [CONTEXT]      if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }      [BUGGY]  }  else  if(o  instanceof  JsonObject  &&  o  instanceof  JsonArray)  {  }  else  if(o  instanceof  JsonObject  &&  o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_OBJECT;  }  else  if(o  instanceof  JsonObject)  {  return  JsonToken.BEGIN_ARRAY;  }  [BUGGY]      return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	replace	}    else    if(o    instanceof    JsonObject    &&    o    instanceof    JsonArray)    {    }  else  if(o  instanceof  JsonObject  &&  o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_OBJECT;  }  else  if(o  instanceof  JsonObject)  {  return  JsonToken.BEGIN_ARRAY;  }	  	non-compiled	[CE]  illegal  start  of  type	41	None	add
1792	[BUG]  [BUGGY]  }  else  if(o  instanceof  JsonObject  ==  false)  {  }  else  if(o  instanceof  JsonObject  >>  false)  {  [CE]  cannot  find  symbol  JsonObject  [FE]    AssertionError    [CONTEXT]      if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }      [BUGGY]  }  else  if(o  instanceof  JsonObject  ==  false)  {  }  else  if(o  instanceof  JsonObject  >>  false)  {  [BUGGY]      return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	replace	}    else    if(o    instanceof    JsonObject    ==    false)    {    }  else  if(o  instanceof  JsonObject  >>  false)  {	  	non-compiled	[CE]  cannot  find  symbol  JsonObject	81	None	add
1793	[BUG]  [BUGGY]  }  else  if(!(o  instanceof  JsonArray))  {  ArrayIndexOutOfBoundsException  e  =(ArrayIndexOutOfBoundsException)entry.next();  [CE]  cannot  find  symbol  entry  [FE]        ArrayIndexOutOfBoundsException      [CONTEXT]      if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }      [BUGGY]  }  else  if(!(o  instanceof  JsonArray))  {  ArrayIndexOutOfBoundsException  e  =(ArrayIndexOutOfBoundsException)entry.next();  [BUGGY]      return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	replace	}  else  if(!(o  instanceof  JsonArray))  {  ArrayIndexOutOfBoundsException  e  =(ArrayIndexOutOfBoundsException)entry.next();	  }    else    if(!(o    instanceof    JsonArray))    {    ArrayIndexOutOfBoundsException    e    =(ArrayIndexOutOfBoundsException)iterator.next();    	non-compiled	[CE]  cannot  find  symbol  entry	131	None	replace
1794	[BUG]  [BUGGY]  }  else  if(!(o  instanceof  JsonArray))  {  ArrayIndexOutOfBoundsException  e  =(ArrayIndexOutOfBoundsException)iterator.getMessage();  [CE]  cannot  find  symbol  iterator  [FE]          ArrayIndexOutOfBoundsException      [CONTEXT]      if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }      [BUGGY]  }  else  if(!(o  instanceof  JsonArray))  {  ArrayIndexOutOfBoundsException  e  =(ArrayIndexOutOfBoundsException)iterator.getMessage();  [BUGGY]      return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	replace	}  else  if(!(o  instanceof  JsonArray))  {  ArrayIndexOutOfBoundsException  e  =(ArrayIndexOutOfBoundsException)iterator.getMessage();	  }    else    if(!(o    instanceof    JsonArray))    {    ArrayIndexOutOfBoundsException    e    =(ArrayIndexOutOfBoundsException)iterator.next();    	non-compiled	[CE]  cannot  find  symbol  iterator	131	None	replace
1795	[BUG]  [BUGGY]  }  else  {  ArrayIndexOutOfBoundsException  e  =(ArrayIndexOutOfBoundsException)iterator.next();  [CE]  'else'  without  'if'  [FE]            ArrayIndexOutOfBoundsException      [CONTEXT]      if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }      [BUGGY]  }  else  {  ArrayIndexOutOfBoundsException  e  =(ArrayIndexOutOfBoundsException)iterator.next();  [BUGGY]      return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	replace	}  else  {  ArrayIndexOutOfBoundsException  e  =(ArrayIndexOutOfBoundsException)iterator.next();	  }    else    if(!(o    instanceof    JsonArray))    {    ArrayIndexOutOfBoundsException    e    =(ArrayIndexOutOfBoundsException)iterator.next();    	non-compiled	[CE]  'else'  without  'if'	131	None	replace
1796	[BUG]  [BUGGY]  try  {  if(isObject)  {  return  JsonToken.START_OBJECT;  }  [CE]  'try'  without  'catch'  or  'finally'  [FE]                                ArrayIndexOutOfBoundsException      [CONTEXT]      if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }      [BUGGY]  try  {  if(isObject)  {  return  JsonToken.START_OBJECT;  }  [BUGGY]      return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	replace	try  {  if(isObject)  {  return  JsonToken.START_OBJECT;  }	  if(o    ==    null)    {    if(isObject)    {    return    JsonToken.START_OBJECT;    }    	non-compiled	[CE]  'try'  without  'catch'  or  'finally'	189	None	replace
1797	[BUG]  [BUGGY]  }  else  if(o  instanceof  JsonArray)  {  }  else  if(o  instanceof  String)  {  return  JsonToken.BEGIN_OBJECT;  }  [CE]  illegal  start  of  type  [FE]            ArrayIndexOutOfBoundsException      [CONTEXT]      if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }      [BUGGY]  }  else  if(o  instanceof  JsonArray)  {  }  else  if(o  instanceof  String)  {  return  JsonToken.BEGIN_OBJECT;  }  [BUGGY]      return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	replace	}  else  if(o  instanceof  JsonArray)  {  }  else  if(o  instanceof  String)  {  return  JsonToken.BEGIN_OBJECT;  }	  }    else    if(o    instanceof    JsonObject    ||    o    instanceof    String)    {    }    else    if(o    instanceof    JsonObject    ||    o    instanceof    String)    <    return    JsonToken.BEGIN_OBJECT;    	non-compiled	[CE]  illegal  start  of  type	18	None	replace
1798	[BUG]  [BUGGY]  Iterator  iterator  =  paths.iterator();  [CE]  variable  iterator  is  already  defined  in  method  peek()  [FE]                              ArrayIndexOutOfBoundsException      [CONTEXT]      if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }      [BUGGY]  Iterator  iterator  =  paths.iterator();  [BUGGY]      return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	replace	Iterator  iterator  =  paths.iterator();	  Iterator    iterator    =    stacks.iterator();    	non-compiled	[CE]  variable  iterator  is  already  defined  in  method  peek()	188	None	replace
1799	[BUG]  [BUGGY]  Iterator  iterator  =  buckets.iterator();  [CE]  variable  iterator  is  already  defined  in  method  peek()  [FE]                                ArrayIndexOutOfBoundsException      [CONTEXT]      if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }      [BUGGY]  Iterator  iterator  =  buckets.iterator();  [BUGGY]      return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	replace	Iterator  iterator  =  buckets.iterator();	  Iterator    iterator    =    stacks.iterator();    	non-compiled	[CE]  variable  iterator  is  already  defined  in  method  peek()	188	None	replace
1800	[BUG]  [BUGGY]  [FE]  ArrayIndexOutOfBoundsException  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]      if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }      [BUGGY]  }  else  if(o  instanceof  JsonObject  ||  o  instanceof  Boolean  ||!(o  instanceof  JsonPrimitive))  {  [BUGGY]      return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	add	}  else  if(o  instanceof  JsonObject  ||  o  instanceof  Boolean  ||!(o  instanceof  JsonPrimitive))  {	  }    else    if(o    instanceof    JsonObject    ||    o    instanceof    Boolean)    {    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	54	2	replace
1801	[BUG]  [BUGGY]  }  else  if(o  instanceof  JsonObject  ||  o  instanceof  Boolean  ||!(o  instanceof  JsonPrimitive))  {  [FE]  ArrayIndexOutOfBoundsException  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]      if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }      [BUGGY]  }  else  if(o  instanceof  JsonObject  ||  o  instanceof  Boolean  ||!(o  instanceof  JsonPrimitive))  {  [BUGGY]      return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	replace	}  else  if(o  instanceof  JsonObject  ||  o  instanceof  Boolean  ||!(o  instanceof  JsonPrimitive))  {	  }    else    if(o    instanceof    JsonObject    ||    o    instanceof    Boolean)    {    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	54	2	replace
1802	[BUG]  [BUGGY]  [FE]  ArrayIndexOutOfBoundsException  [FE]      ArrayIndexOutOfBoundsException    [CONTEXT]      if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }      [BUGGY]  }  else  if(o  instanceof  JsonObject  ||  o  instanceof  Boolean  ||  o  instanceof  Integer)  {  [BUGGY]      return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	add	}  else  if(o  instanceof  JsonObject  ||  o  instanceof  Boolean  ||  o  instanceof  Integer)  {	  }    else    if(o    instanceof    JsonObject    ||    o    instanceof    Boolean)    {    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	54	2	replace
1803	[BUG]  [BUGGY]  }  else  if(o  instanceof  JsonObject  ||  o  instanceof  Boolean  ||  o  instanceof  Integer)  {  [FE]  ArrayIndexOutOfBoundsException  [FE]      ArrayIndexOutOfBoundsException    [CONTEXT]      if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }      [BUGGY]  }  else  if(o  instanceof  JsonObject  ||  o  instanceof  Boolean  ||  o  instanceof  Integer)  {  [BUGGY]      return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	replace	}  else  if(o  instanceof  JsonObject  ||  o  instanceof  Boolean  ||  o  instanceof  Integer)  {	  }    else    if(o    instanceof    JsonObject    ||    o    instanceof    Boolean)    {    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	54	2	replace
1804	[BUG]  [BUGGY]  [FE]  ArrayIndexOutOfBoundsException  [FE]        ArrayIndexOutOfBoundsException    [CONTEXT]      if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }      [BUGGY]  }  else  if(o  instanceof  JsonObject  ||  o  instanceof  Boolean  ||  o  instanceof  String)  {  [BUGGY]      return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	add	}  else  if(o  instanceof  JsonObject  ||  o  instanceof  Boolean  ||  o  instanceof  String)  {	  }    else    if(o    instanceof    JsonObject    ||    o    instanceof    Boolean)    {    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	54	2	replace
1805	[BUG]  [BUGGY]  }  else  if(o  instanceof  JsonObject  ||  o  instanceof  Boolean  ||  o  instanceof  String)  {  [FE]  ArrayIndexOutOfBoundsException  [FE]        ArrayIndexOutOfBoundsException    [CONTEXT]      if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }      [BUGGY]  }  else  if(o  instanceof  JsonObject  ||  o  instanceof  Boolean  ||  o  instanceof  String)  {  [BUGGY]      return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	replace	}  else  if(o  instanceof  JsonObject  ||  o  instanceof  Boolean  ||  o  instanceof  String)  {	  }    else    if(o    instanceof    JsonObject    ||    o    instanceof    Boolean)    {    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	54	2	replace
1806	[BUG]  [BUGGY]  }  else  if(o  instanceof  JsonObject  ||  o  instanceof  Boolean)  {  }  else  if(o  instanceof  JsonObject  ||  o  instanceof  Boolean)  {  return  JsonToken.BEGIN_OBJECT;  }  else  if(o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  [CE]  illegal  start  of  type  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]      if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }      [BUGGY]  }  else  if(o  instanceof  JsonObject  ||  o  instanceof  Boolean)  {  }  else  if(o  instanceof  JsonObject  ||  o  instanceof  Boolean)  {  return  JsonToken.BEGIN_OBJECT;  }  else  if(o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  [BUGGY]      return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	replace	}    else    if(o    instanceof    JsonObject    ||    o    instanceof    Boolean)    {    }  else  if(o  instanceof  JsonObject  ||  o  instanceof  Boolean)  {  return  JsonToken.BEGIN_OBJECT;  }  else  if(o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }	  	non-compiled	[CE]  illegal  start  of  type	53	None	add
1807	[BUG]  [BUGGY]  }  else  if(o  instanceof  JsonObject  ||  o  instanceof  Boolean)  {  }  else  if(o  instanceof  JsonObject  ||  o  instanceof  Boolean)  {  returned  JsonToken.BEGIN_OBJECT;  }  else  if(o  instanceof  JsonObject  ||  o  instanceof  Boolean)  {  [CE]  ';'  expected  [FE]      ArrayIndexOutOfBoundsException    [CONTEXT]      if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }      [BUGGY]  }  else  if(o  instanceof  JsonObject  ||  o  instanceof  Boolean)  {  }  else  if(o  instanceof  JsonObject  ||  o  instanceof  Boolean)  {  returned  JsonToken.BEGIN_OBJECT;  }  else  if(o  instanceof  JsonObject  ||  o  instanceof  Boolean)  {  [BUGGY]      return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	replace	}    else    if(o    instanceof    JsonObject    ||    o    instanceof    Boolean)    {    }  else  if(o  instanceof  JsonObject  ||  o  instanceof  Boolean)  {  returned  JsonToken.BEGIN_OBJECT;  }  else  if(o  instanceof  JsonObject  ||  o  instanceof  Boolean)  {	  	non-compiled	[CE]  ';'  expected	53	None	add
1808	[BUG]  [BUGGY]  }  else  if(o  instanceof  JsonObject  ||  o  instanceof  Boolean)  {  }  else  if(o  instanceof  JsonObject  ||  o  instanceof  Boolean)  {  return  JsonToken.BEGIN_OBJECT;  }  else  if(o  instanceof  JsonString  ||  o  instanceof  Boolean)  {  [CE]  cannot  find  symbol  [FE]        ArrayIndexOutOfBoundsException    [CONTEXT]      if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }      [BUGGY]  }  else  if(o  instanceof  JsonObject  ||  o  instanceof  Boolean)  {  }  else  if(o  instanceof  JsonObject  ||  o  instanceof  Boolean)  {  return  JsonToken.BEGIN_OBJECT;  }  else  if(o  instanceof  JsonString  ||  o  instanceof  Boolean)  {  [BUGGY]      return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	replace	}    else    if(o    instanceof    JsonObject    ||    o    instanceof    Boolean)    {    }  else  if(o  instanceof  JsonObject  ||  o  instanceof  Boolean)  {  return  JsonToken.BEGIN_OBJECT;  }  else  if(o  instanceof  JsonString  ||  o  instanceof  Boolean)  {	  	non-compiled	[CE]  cannot  find  symbol	53	None	add
1809	[BUG]  [BUGGY]  [FE]  ArrayIndexOutOfBoundsException  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]      if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }      [BUGGY]  }    else    if(o    instanceof    JsonNull)    {    return  JsonToken.BEGIN_OBJECT;  }  else  if(o  instanceof  JsonNull)  {  return  JsonToken.BEGIN_OBJECT;  [BUGGY]      return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	add	}        else        if(o        instanceof        JsonNull)        {        return    JsonToken.BEGIN_OBJECT;    }  else  if(o  instanceof  JsonNull)  {  return  JsonToken.BEGIN_OBJECT;	  	compilable	  [FE]  ArrayIndexOutOfBoundsException  	154	2	add
1810	[BUG]  [BUGGY]  }    else    if(o    instanceof    JsonNull)    {    return  JsonToken.BEGIN_OBJECT;  }  else  if(o  instanceof  JsonNull)  {  return  JsonToken.BEGIN_OBJECT;  [FE]  ArrayIndexOutOfBoundsException  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]      if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }      [BUGGY]  }    else    if(o    instanceof    JsonNull)    {    return  JsonToken.BEGIN_OBJECT;  }  else  if(o  instanceof  JsonNull)  {  return  JsonToken.BEGIN_OBJECT;  [BUGGY]      return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	replace	}        else        if(o        instanceof        JsonNull)        {        return    JsonToken.BEGIN_OBJECT;    }  else  if(o  instanceof  JsonNull)  {  return  JsonToken.BEGIN_OBJECT;	  	compilable	  [FE]  ArrayIndexOutOfBoundsException  	154	2	add
1811	[BUG]  [BUGGY]  }    else    if(o    instanceof    JsonNull)    {    return  JsonToken.BEGIN_OBJECT;  }  else  if(o  instanceof  JsonNull)  {  return  JsonToken.BEGIN_OBJECT;  }  else  if(o  instanceof  JsonNull)  {  return  JsonToken.BEGIN_NULL;  }  [CE]  illegal  start  of  type  [FE]      ArrayIndexOutOfBoundsException    [CONTEXT]      if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }      [BUGGY]  }    else    if(o    instanceof    JsonNull)    {    return  JsonToken.BEGIN_OBJECT;  }  else  if(o  instanceof  JsonNull)  {  return  JsonToken.BEGIN_OBJECT;  }  else  if(o  instanceof  JsonNull)  {  return  JsonToken.BEGIN_NULL;  }  [BUGGY]      return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	replace	}        else        if(o        instanceof        JsonNull)        {        return    JsonToken.BEGIN_OBJECT;    }  else  if(o  instanceof  JsonNull)  {  return  JsonToken.BEGIN_OBJECT;  }  else  if(o  instanceof  JsonNull)  {  return  JsonToken.BEGIN_NULL;  }	  	non-compiled	[CE]  illegal  start  of  type	154	None	add
1812	[BUG]  [BUGGY]  }  else  {  if(o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  [CE]  'else'  without  'if'  [FE]        ArrayIndexOutOfBoundsException      [CONTEXT]      if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }      [BUGGY]  }  else  {  if(o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  [BUGGY]      return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	replace	}  else  {  if(o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }	  }    else    if(o    instanceof    JsonObject    ||    o    instanceof    String)    {    }    else    if(o    instanceof    JsonObject    ||    o    instanceof    String)    {    return    JsonToken.BEGIN_OBJECT;    }    else    if(o    instanceof    JsonObject)    {    return    JsonToken.BEGIN_OBJECT;    }    	non-compiled	[CE]  'else'  without  'if'	238	None	replace
1813	[BUG]  [BUGGY]  }  else  if(o  instanceof  JsonNull  ||  o  instanceof  JsonNull)  {  return  JsonToken.BEGIN_NULL;  [CE]  cannot  find  symbol  BEGIN_NULL  [FE]            AssertionError      [CONTEXT]      if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }      [BUGGY]  }  else  if(o  instanceof  JsonNull  ||  o  instanceof  JsonNull)  {  return  JsonToken.BEGIN_NULL;  [BUGGY]      return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	replace	}  else  if(o  instanceof  JsonNull  ||  o  instanceof  JsonNull)  {  return  JsonToken.BEGIN_NULL;	  }    else    if(o    instanceof    JsonNull)    {    }    else    if(o    instanceof    JsonNull)    <    return    JsonToken.BEGIN_NULL;    	non-compiled	[CE]  cannot  find  symbol  BEGIN_NULL	222	None	replace
1814	[BUG]  [BUGGY]  }  else  if(o  instanceof  JsonNull)  {  return  JsonToken.BEGIN_NULL;  [CE]  cannot  find  symbol  BEGIN_NULL  [FE]              AssertionError      [CONTEXT]      if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }      [BUGGY]  }  else  if(o  instanceof  JsonNull)  {  return  JsonToken.BEGIN_NULL;  [BUGGY]      return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	replace	}  else  if(o  instanceof  JsonNull)  {  return  JsonToken.BEGIN_NULL;	  }    else    if(o    instanceof    JsonNull)    {    }    else    if(o    instanceof    JsonNull)    <    return    JsonToken.BEGIN_NULL;    	non-compiled	[CE]  cannot  find  symbol  BEGIN_NULL	222	None	replace
1815	[BUG]  [BUGGY]  }  else  if(o  instanceof  JsonArray)  {  }  else  {  push(iterator.next());  return  JsonToken.BEGIN_NULL;  }  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]      if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }      [BUGGY]  }  else  if(o  instanceof  JsonArray)  {  }  else  {  push(iterator.next());  return  JsonToken.BEGIN_NULL;  }  [BUGGY]      return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	replace	}  else  if(o  instanceof  JsonArray)  {  }  else  {  push(iterator.next());  return  JsonToken.BEGIN_NULL;  }	  }    else    if(o    instanceof    JsonNull)    {    }    else    if(o    instanceof    JsonNull)    <    return    JsonToken.BEGIN_NULL;    	non-compiled	[CE]  illegal  start  of  type	222	None	replace
1816	[BUG]  [BUGGY]  }  else  if(o  ==  null)  {  }  else  if(o  instanceof  JsonNull)  <  return  JsonToken.BEGIN_NULL;  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]      if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }      [BUGGY]  }  else  if(o  ==  null)  {  }  else  if(o  instanceof  JsonNull)  <  return  JsonToken.BEGIN_NULL;  [BUGGY]      return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	replace	}  else  if(o  ==  null)  {  }  else  if(o  instanceof  JsonNull)  <  return  JsonToken.BEGIN_NULL;	  }    else    if(o    instanceof    JsonNull)    {    }    else    if(o    instanceof    JsonNull)    <    return    JsonToken.BEGIN_NULL;    	non-compiled	[CE]  illegal  start  of  type	222	None	replace
1817	[BUG]  [BUGGY]  }  else  if(o  instanceof  JsonObject  ||  o  instanceof  String)  {  ArrayIndexOutOfBoundsException  e  =  new  ArrayIndexOutOfBoundsException(Iterator.this,  iterator.next());  [CE]  not  an  enclosing  class:  Iterator  [FE]          ArrayIndexOutOfBoundsException      [CONTEXT]      if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }      [BUGGY]  }  else  if(o  instanceof  JsonObject  ||  o  instanceof  String)  {  ArrayIndexOutOfBoundsException  e  =  new  ArrayIndexOutOfBoundsException(Iterator.this,  iterator.next());  [BUGGY]      return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	replace	}  else  if(o  instanceof  JsonObject  ||  o  instanceof  String)  {  ArrayIndexOutOfBoundsException  e  =  new  ArrayIndexOutOfBoundsException(Iterator.this,  iterator.next());	  }    else    if(o    instanceof    JsonObject    ||    o    instanceof    String)    {    ArrayIndexOutOfBoundsException    e    =    new    ArrayIndexOutOfBoundsException(iterator.next());    	non-compiled	[CE]  not  an  enclosing  class:  Iterator	149	None	replace
1818	[BUG]  [BUGGY]  }  else  if(o  instanceof  JsonObject  ||  o  instanceof  JsonObject)  {  }  else  if(o  instanceof  JsonObject  ||  o  instanceof  JsonObject)  {  aught  return  JsonToken.BEGIN_OBJECT;  }  else  if(o  instanceof  JsonObject)  {  [CE]  not  a  statement  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]      if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }      [BUGGY]  }  else  if(o  instanceof  JsonObject  ||  o  instanceof  JsonObject)  {  }  else  if(o  instanceof  JsonObject  ||  o  instanceof  JsonObject)  {  aught  return  JsonToken.BEGIN_OBJECT;  }  else  if(o  instanceof  JsonObject)  {  [BUGGY]      return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	replace	}    else    if(o    instanceof    JsonObject    ||    o    instanceof    JsonObject)    {    }  else  if(o  instanceof  JsonObject  ||  o  instanceof  JsonObject)  {  aught  return  JsonToken.BEGIN_OBJECT;  }  else  if(o  instanceof  JsonObject)  {	  	non-compiled	[CE]  not  a  statement	179	None	add
1819	[BUG]  [BUGGY]  }  else  if(o  instanceof  JsonObject  ||  o  instanceof  JsonObject)  {  }  else  if(o  instanceof  JsonObject  ||  o  instanceof  JsonObject)  {  case  JsonToken.BEGIN_OBJECT:  return  JsonToken.BEGIN_OBJECT;  [CE]  orphaned  case  [FE]      ArrayIndexOutOfBoundsException    [CONTEXT]      if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }      [BUGGY]  }  else  if(o  instanceof  JsonObject  ||  o  instanceof  JsonObject)  {  }  else  if(o  instanceof  JsonObject  ||  o  instanceof  JsonObject)  {  case  JsonToken.BEGIN_OBJECT:  return  JsonToken.BEGIN_OBJECT;  [BUGGY]      return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	replace	}    else    if(o    instanceof    JsonObject    ||    o    instanceof    JsonObject)    {    }  else  if(o  instanceof  JsonObject  ||  o  instanceof  JsonObject)  {  case  JsonToken.BEGIN_OBJECT:  return  JsonToken.BEGIN_OBJECT;	  	non-compiled	[CE]  orphaned  case	179	None	add
1820	[BUG]  [BUGGY]  }  else  if(o  instanceof  JsonObject  ||  o  instanceof  JsonObject)  {  }  else  if(o  instanceof  JsonObject  ||  o  instanceof  JsonObject)  {  return  JsonToken.BEGIN_OBJECT;  }  else  if(o  instanceof  JsonArray)  {  [CE]  missing  return  statement  [FE]        ArrayIndexOutOfBoundsException    [CONTEXT]      if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }      [BUGGY]  }  else  if(o  instanceof  JsonObject  ||  o  instanceof  JsonObject)  {  }  else  if(o  instanceof  JsonObject  ||  o  instanceof  JsonObject)  {  return  JsonToken.BEGIN_OBJECT;  }  else  if(o  instanceof  JsonArray)  {  [BUGGY]      return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	replace	}    else    if(o    instanceof    JsonObject    ||    o    instanceof    JsonObject)    {    }  else  if(o  instanceof  JsonObject  ||  o  instanceof  JsonObject)  {  return  JsonToken.BEGIN_OBJECT;  }  else  if(o  instanceof  JsonArray)  {	  	non-compiled	[CE]  missing  return  statement	179	None	add
1821	[BUG]  [BUGGY]  if(o  ==  null)return  JsonToken.START_OBJECT;  else  {  push(iterator.next());  return  JsonToken.START_OBJECT;  }  [CE]  cannot  find  symbol  START_OBJECT  [FE]                        ArrayIndexOutOfBoundsException      [CONTEXT]      if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }      [BUGGY]  if(o  ==  null)return  JsonToken.START_OBJECT;  else  {  push(iterator.next());  return  JsonToken.START_OBJECT;  }  [BUGGY]      return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	replace	if(o  ==  null)return  JsonToken.START_OBJECT;  else  {  push(iterator.next());  return  JsonToken.START_OBJECT;  }	  if(o    ==    null)return    JsonToken.NUMBER;    else    {    push(iterator.next());    return    JsonToken.START_OBJECT;    }    	non-compiled	[CE]  cannot  find  symbol  START_OBJECT	223	None	replace
1822	[BUG]  [BUGGY]  try  {  if(o  ==  null)return  JsonToken.NUMBER;  else  {  push(iterator.next());  return  JsonToken.START_OBJECT;  }  [CE]  'try'  without  'catch'  or  'finally'  [FE]                          ArrayIndexOutOfBoundsException      [CONTEXT]      if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }      [BUGGY]  try  {  if(o  ==  null)return  JsonToken.NUMBER;  else  {  push(iterator.next());  return  JsonToken.START_OBJECT;  }  [BUGGY]      return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	replace	try  {  if(o  ==  null)return  JsonToken.NUMBER;  else  {  push(iterator.next());  return  JsonToken.START_OBJECT;  }	  if(o    ==    null)return    JsonToken.NUMBER;    else    {    push(iterator.next());    return    JsonToken.START_OBJECT;    }    	non-compiled	[CE]  'try'  without  'catch'  or  'finally'	223	None	replace
1823	[BUG]  [BUGGY]  }  else  if(o  instanceof  JsonObject  ||  o  instanceof  JsonCollection)  {  [CE]  cannot  find  symbol  [FE]          ArrayIndexOutOfBoundsException      [CONTEXT]      if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }      [BUGGY]  }  else  if(o  instanceof  JsonObject  ||  o  instanceof  JsonCollection)  {  [BUGGY]      return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	replace	}  else  if(o  instanceof  JsonObject  ||  o  instanceof  JsonCollection)  {	  }    else    if(o    instanceof    JsonObject    ||    o    instanceof    JsonPrimitive)    {    instanceof    JsonObject    ||    o    instanceof    JsonPrimitive)    {    	non-compiled	[CE]  cannot  find  symbol	167	None	replace
1824	[BUG]  [BUGGY]  }  else  if(o  instanceof  JsonNull  ||!(o  instanceof  JsonNull  &&!(o  instanceof  JsonNull))  {  [CE]  ')'  expected  [FE]                    AssertionError      [CONTEXT]      if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }      [BUGGY]  }  else  if(o  instanceof  JsonNull  ||!(o  instanceof  JsonNull  &&!(o  instanceof  JsonNull))  {  [BUGGY]      return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	replace	}  else  if(o  instanceof  JsonNull  ||!(o  instanceof  JsonNull  &&!(o  instanceof  JsonNull))  {	  }    else    if(o    instanceof    JsonNull)    {    <    }    else    if(o    instanceof    JsonNull)    {    	non-compiled	[CE]  ')'  expected	75	None	replace
1825	[BUG]  [BUGGY]  }  else  if(!(o  instanceof  JsonArray))  {  ArrayIndexOutOfBoundsException  e  =  new  ArrayIndexOutOfBoundsException(pathNames,  0,  pathNames.length);  [CE]  no  suitable  constructor  found  for  ArrayIndexOutOfBoundsException(String[],int,int)  [FE]              ArrayIndexOutOfBoundsException      [CONTEXT]      if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }      [BUGGY]  }  else  if(!(o  instanceof  JsonArray))  {  ArrayIndexOutOfBoundsException  e  =  new  ArrayIndexOutOfBoundsException(pathNames,  0,  pathNames.length);  [BUGGY]      return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	replace	}  else  if(!(o  instanceof  JsonArray))  {  ArrayIndexOutOfBoundsException  e  =  new  ArrayIndexOutOfBoundsException(pathNames,  0,  pathNames.length);	  }    else    if(!(o    instanceof    JsonArray))    {    ArrayIndexOutOfBoundsException    e    =    new    ArrayIndexOutOfBoundsException(pathNames[0],    pathNames[1]);    	non-compiled	[CE]  no  suitable  constructor  found  for  ArrayIndexOutOfBoundsException(String[],int,int)	134	None	replace
1826	[BUG]  [BUGGY]  }  else  if(!(o  instanceof  JsonObject))  {  ArrayIndexOutOfBoundsException  e  =  new  ArrayIndexOutOfBoundsException(pathNames[0],  pathNames[1]);  [CE]  no  suitable  constructor  found  for  ArrayIndexOutOfBoundsException(String,String)  [FE]                ArrayIndexOutOfBoundsException      [CONTEXT]      if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }      [BUGGY]  }  else  if(!(o  instanceof  JsonObject))  {  ArrayIndexOutOfBoundsException  e  =  new  ArrayIndexOutOfBoundsException(pathNames[0],  pathNames[1]);  [BUGGY]      return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	replace	}  else  if(!(o  instanceof  JsonObject))  {  ArrayIndexOutOfBoundsException  e  =  new  ArrayIndexOutOfBoundsException(pathNames[0],  pathNames[1]);	  }    else    if(!(o    instanceof    JsonArray))    {    ArrayIndexOutOfBoundsException    e    =    new    ArrayIndexOutOfBoundsException(pathNames[0],    pathNames[1]);    	non-compiled	[CE]  no  suitable  constructor  found  for  ArrayIndexOutOfBoundsException(String,String)	134	None	replace
1827	[BUG]  [BUGGY]  [FE]  ArrayIndexOutOfBoundsException  [FE]        AssertionError      [CONTEXT]      if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }      [BUGGY]  }  else  if(o  ==  null  ||!(o  instanceof  JsonNull))  {  [BUGGY]      return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	add	}  else  if(o  ==  null  ||!(o  instanceof  JsonNull))  {	  }    else    if(!(o    instanceof    JsonObject))    {    }    else    if(!(o    instanceof    JsonObject))    {    return    JsonToken.BEGIN_OBJECT;    }    else    if(!(o    instanceof    JsonObject))    {    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	206	2	replace
1828	[BUG]  [BUGGY]  }  else  if(o  ==  null  ||!(o  instanceof  JsonNull))  {  [FE]  ArrayIndexOutOfBoundsException  [FE]        AssertionError      [CONTEXT]      if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }      [BUGGY]  }  else  if(o  ==  null  ||!(o  instanceof  JsonNull))  {  [BUGGY]      return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	replace	}  else  if(o  ==  null  ||!(o  instanceof  JsonNull))  {	  }    else    if(!(o    instanceof    JsonObject))    {    }    else    if(!(o    instanceof    JsonObject))    {    return    JsonToken.BEGIN_OBJECT;    }    else    if(!(o    instanceof    JsonObject))    {    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	206	2	replace
1829	[BUG]  [BUGGY]  }  else  if(o  instanceof  JsonArray)  {  }  else  {  if(!(o  instanceof  JsonArray))  {  return  JsonToken.BEGIN_ARRAY;  }  [CE]  'else'  without  'if'  [FE]                      ArrayIndexOutOfBoundsException      [CONTEXT]      if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }      [BUGGY]  }  else  if(o  instanceof  JsonArray)  {  }  else  {  if(!(o  instanceof  JsonArray))  {  return  JsonToken.BEGIN_ARRAY;  }  [BUGGY]      return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	replace	}  else  if(o  instanceof  JsonArray)  {  }  else  {  if(!(o  instanceof  JsonArray))  {  return  JsonToken.BEGIN_ARRAY;  }	  }    else    if(!(o    instanceof    JsonArray))    {    }    else    if(!(o    instanceof    JsonArray))    <    return    JsonToken.BEGIN_ARRAY;    	non-compiled	[CE]  'else'  without  'if'	90	None	replace
1830	[BUG]  [BUGGY]  }  else  if(o  instanceof  JsonPrimitive)  {  }  else  {  if(!(o  instanceof  JsonPrimitive))  {  return  JsonToken.BEGIN_ARRAY;  }  [CE]  'else'  without  'if'  [FE]                        ArrayIndexOutOfBoundsException      [CONTEXT]      if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }      [BUGGY]  }  else  if(o  instanceof  JsonPrimitive)  {  }  else  {  if(!(o  instanceof  JsonPrimitive))  {  return  JsonToken.BEGIN_ARRAY;  }  [BUGGY]      return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	replace	}  else  if(o  instanceof  JsonPrimitive)  {  }  else  {  if(!(o  instanceof  JsonPrimitive))  {  return  JsonToken.BEGIN_ARRAY;  }	  }    else    if(!(o    instanceof    JsonArray))    {    }    else    if(!(o    instanceof    JsonArray))    <    return    JsonToken.BEGIN_ARRAY;    	non-compiled	[CE]  'else'  without  'if'	90	None	replace
1831	[BUG]  [BUGGY]  }  else  if(o  instanceof  JsonObject)  {  }  else  {  if(!(o  instanceof  JsonObject))  {  return  JsonToken.BEGIN_ARRAY;  }  [CE]  'else'  without  'if'  [FE]                          ArrayIndexOutOfBoundsException      [CONTEXT]      if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }      [BUGGY]  }  else  if(o  instanceof  JsonObject)  {  }  else  {  if(!(o  instanceof  JsonObject))  {  return  JsonToken.BEGIN_ARRAY;  }  [BUGGY]      return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	replace	}  else  if(o  instanceof  JsonObject)  {  }  else  {  if(!(o  instanceof  JsonObject))  {  return  JsonToken.BEGIN_ARRAY;  }	  }    else    if(!(o    instanceof    JsonArray))    {    }    else    if(!(o    instanceof    JsonArray))    <    return    JsonToken.BEGIN_ARRAY;    	non-compiled	[CE]  'else'  without  'if'	90	None	replace
1832	[BUG]  [BUGGY]  }  else  if(o  instanceof  JsonBlock  ||  o  instanceof  JsonPrimitive)  {  [CE]  cannot  find  symbol  [FE]            ArrayIndexOutOfBoundsException      [CONTEXT]      if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }      [BUGGY]  }  else  if(o  instanceof  JsonBlock  ||  o  instanceof  JsonPrimitive)  {  [BUGGY]      return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	replace	}  else  if(o  instanceof  JsonBlock  ||  o  instanceof  JsonPrimitive)  {	  }    else    if(o    instanceof    JsonObject    ||    o    instanceof    JsonPrimitive)    {    }    else    if(o    instanceof    JsonObject    ||    o    instanceof    JsonPrimitive)    {    return    JsonToken.BEGIN_OBJECT;    }    else    if(o    instanceof    JsonObject    ||    o    instanceof    JsonPrimitive)    {    	non-compiled	[CE]  cannot  find  symbol	58	None	replace
1833	[BUG]  [BUGGY]  }  else  if(!(o  instanceof  JsonObject  ||  o  instanceof  Unknown))  {  [CE]  cannot  find  symbol  [FE]                    AssertionError      [CONTEXT]      if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }      [BUGGY]  }  else  if(!(o  instanceof  JsonObject  ||  o  instanceof  Unknown))  {  [BUGGY]      return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	replace	}  else  if(!(o  instanceof  JsonObject  ||  o  instanceof  Unknown))  {	  }    else    if(!(o    instanceof    JsonObject))    {    <    }    else    if(!(o    instanceof    JsonObject))    {    	non-compiled	[CE]  cannot  find  symbol	97	None	replace
1834	[BUG]  [BUGGY]  if(o  ==  null  ||  isObject)  {  push(iterator.next());  return  JsonToken.NAME;  }  [CE]  unreachable  statement  [FE]                            ArrayIndexOutOfBoundsException      [CONTEXT]      if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }      [BUGGY]  if(o  ==  null  ||  isObject)  {  push(iterator.next());  return  JsonToken.NAME;  }  [BUGGY]      return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	replace	if(o  ==  null  ||  isObject)  {  push(iterator.next());  return  JsonToken.NAME;  }	  if(o    ==    null)return    JsonToken.NULL;    if(isObject)    {    push(iterator.next());    return    JsonToken.NAME;    }    	non-compiled	[CE]  unreachable  statement	225	None	replace
1835	[BUG]  [BUGGY]  try  {  if(o  ==  null)return  JsonToken.NULL;  if(isObject)  {  push(iterator.next());  return  JsonToken.NAME;  }  [CE]  'try'  without  'catch'  or  'finally'  [FE]                              ArrayIndexOutOfBoundsException      [CONTEXT]      if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }      [BUGGY]  try  {  if(o  ==  null)return  JsonToken.NULL;  if(isObject)  {  push(iterator.next());  return  JsonToken.NAME;  }  [BUGGY]      return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	replace	try  {  if(o  ==  null)return  JsonToken.NULL;  if(isObject)  {  push(iterator.next());  return  JsonToken.NAME;  }	  if(o    ==    null)return    JsonToken.NULL;    if(isObject)    {    push(iterator.next());    return    JsonToken.NAME;    }    	non-compiled	[CE]  'try'  without  'catch'  or  'finally'	225	None	replace
1836	[BUG]  [BUGGY]  if(o  ==  null  ||!isObject)  {  push(iterator.next());  return  JsonToken.NAME;  }  [CE]  unreachable  statement  [FE]                                ArrayIndexOutOfBoundsException      [CONTEXT]      if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }      [BUGGY]  if(o  ==  null  ||!isObject)  {  push(iterator.next());  return  JsonToken.NAME;  }  [BUGGY]      return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	replace	if(o  ==  null  ||!isObject)  {  push(iterator.next());  return  JsonToken.NAME;  }	  if(o    ==    null)return    JsonToken.NULL;    if(isObject)    {    push(iterator.next());    return    JsonToken.NAME;    }    	non-compiled	[CE]  unreachable  statement	225	None	replace
1837	[BUG]  [BUGGY]  }  else  if(o  instanceof  String)  {  <  String>  push(iterator.next());  return  JsonToken.BEGIN_OBJECT;  [CE]  illegal  start  of  expression  [FE]    AssertionError    [CONTEXT]      if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }      [BUGGY]  }  else  if(o  instanceof  String)  {  <  String>  push(iterator.next());  return  JsonToken.BEGIN_OBJECT;  [BUGGY]      return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	replace	}    else    if(o    instanceof    String)    {    <  String>  push(iterator.next());  return  JsonToken.BEGIN_OBJECT;	  	non-compiled	[CE]  illegal  start  of  expression	13	None	add
1838	[BUG]  [BUGGY]  }  else  if(o  instanceof  String)  {  <  String>  push(iterator.next());  return  JsonToken.BEGIN_ARRAY;  [CE]  illegal  start  of  expression  [FE]      AssertionError    [CONTEXT]      if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }      [BUGGY]  }  else  if(o  instanceof  String)  {  <  String>  push(iterator.next());  return  JsonToken.BEGIN_ARRAY;  [BUGGY]      return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	replace	}    else    if(o    instanceof    String)    {    <  String>  push(iterator.next());  return  JsonToken.BEGIN_ARRAY;	  	non-compiled	[CE]  illegal  start  of  expression	13	None	add
1839	[BUG]  [BUGGY]  }  else  if(o  instanceof  String)  {  <  String>  return  JsonToken.BEGIN_OBJECT;  }  else  if(o  instanceof  String)  {  [CE]  illegal  start  of  expression  [FE]        AssertionError    [CONTEXT]      if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }      [BUGGY]  }  else  if(o  instanceof  String)  {  <  String>  return  JsonToken.BEGIN_OBJECT;  }  else  if(o  instanceof  String)  {  [BUGGY]      return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	replace	}    else    if(o    instanceof    String)    {    <  String>  return  JsonToken.BEGIN_OBJECT;  }  else  if(o  instanceof  String)  {	  	non-compiled	[CE]  illegal  start  of  expression	13	None	add
1840	[BUG]  [BUGGY]  }  else  if(o  instanceof  JsonObject  &&  o  instanceof  String)  {  }  else  if(o  instanceof  JsonObject  &&  o  instanceof  String)  {  return  JsonToken.BEGIN_OBJECT;  }  else  if(o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  [CE]  illegal  start  of  type  [FE]    AssertionError    [CONTEXT]      if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }      [BUGGY]  }  else  if(o  instanceof  JsonObject  &&  o  instanceof  String)  {  }  else  if(o  instanceof  JsonObject  &&  o  instanceof  String)  {  return  JsonToken.BEGIN_OBJECT;  }  else  if(o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  [BUGGY]      return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	replace	}    else    if(o    instanceof    JsonObject    &&    o    instanceof    String)    {    }  else  if(o  instanceof  JsonObject  &&  o  instanceof  String)  {  return  JsonToken.BEGIN_OBJECT;  }  else  if(o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }	  	non-compiled	[CE]  illegal  start  of  type	47	None	add
1841	[BUG]  [BUGGY]  }  else  if(o  instanceof  JsonObject  &&  o  instanceof  String)  {  }  else  if(o  instanceof  JsonObject  &&  o  instanceof  String)  {  return  JsonToken.BEGIN_OBJECT;  }  else  if(o  instanceof  JsonObject)  {  [CE]  missing  return  statement  [FE]      AssertionError    [CONTEXT]      if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }      [BUGGY]  }  else  if(o  instanceof  JsonObject  &&  o  instanceof  String)  {  }  else  if(o  instanceof  JsonObject  &&  o  instanceof  String)  {  return  JsonToken.BEGIN_OBJECT;  }  else  if(o  instanceof  JsonObject)  {  [BUGGY]      return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	replace	}    else    if(o    instanceof    JsonObject    &&    o    instanceof    String)    {    }  else  if(o  instanceof  JsonObject  &&  o  instanceof  String)  {  return  JsonToken.BEGIN_OBJECT;  }  else  if(o  instanceof  JsonObject)  {	  	non-compiled	[CE]  missing  return  statement	47	None	add
1842	[BUG]  [BUGGY]  }  else  if(o  instanceof  JsonObject  &&  o  instanceof  String)  {  }  else  if(o  instanceof  JsonObject  &&  o  instanceof  String)  {  return  JsonToken.BEGIN_OBJECT;  }  else  if(o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_OBJECT;  }  [CE]  illegal  start  of  type  [FE]        AssertionError    [CONTEXT]      if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }      [BUGGY]  }  else  if(o  instanceof  JsonObject  &&  o  instanceof  String)  {  }  else  if(o  instanceof  JsonObject  &&  o  instanceof  String)  {  return  JsonToken.BEGIN_OBJECT;  }  else  if(o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_OBJECT;  }  [BUGGY]      return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	replace	}    else    if(o    instanceof    JsonObject    &&    o    instanceof    String)    {    }  else  if(o  instanceof  JsonObject  &&  o  instanceof  String)  {  return  JsonToken.BEGIN_OBJECT;  }  else  if(o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_OBJECT;  }	  	non-compiled	[CE]  illegal  start  of  type	47	None	add
1843	[BUG]  [BUGGY]  }  else  if(o  instanceof  JsonObject  &&  o  instanceof  String)  {  }  else  if(o  instanceof  JsonObject  &&  o  instanceof  String)  {  return  JsonToken.BEGIN_OBJECT;  }  else  if(o  instanceof  JsonObject)  {  return  JsonToken.BEGIN_OBJECT;  }  [CE]  illegal  start  of  type  [FE]          AssertionError    [CONTEXT]      if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }      [BUGGY]  }  else  if(o  instanceof  JsonObject  &&  o  instanceof  String)  {  }  else  if(o  instanceof  JsonObject  &&  o  instanceof  String)  {  return  JsonToken.BEGIN_OBJECT;  }  else  if(o  instanceof  JsonObject)  {  return  JsonToken.BEGIN_OBJECT;  }  [BUGGY]      return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	replace	}    else    if(o    instanceof    JsonObject    &&    o    instanceof    String)    {    }  else  if(o  instanceof  JsonObject  &&  o  instanceof  String)  {  return  JsonToken.BEGIN_OBJECT;  }  else  if(o  instanceof  JsonObject)  {  return  JsonToken.BEGIN_OBJECT;  }	  	non-compiled	[CE]  illegal  start  of  type	47	None	add
1844	[BUG]  [BUGGY]  }  else  if(o  instanceof  JsonObject  >>  [CE]  illegal  start  of  expression  [FE]            ArrayIndexOutOfBoundsException      [CONTEXT]      if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }      [BUGGY]  }  else  if(o  instanceof  JsonObject  >>  [BUGGY]      return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	replace	}  else  if(o  instanceof  JsonObject  >>	  }    else    if(o    instanceof    JsonObject    ==    	non-compiled	[CE]  illegal  start  of  expression	129	None	replace
1845	[BUG]  [BUGGY]  }  else  if(o  instanceof  JsonObject  <  Node>)  {  [CE]  cannot  find  symbol  [FE]              ArrayIndexOutOfBoundsException      [CONTEXT]      if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }      [BUGGY]  }  else  if(o  instanceof  JsonObject  <  Node>)  {  [BUGGY]      return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	replace	}  else  if(o  instanceof  JsonObject  <  Node>)  {	  }    else    if(o    instanceof    JsonObject    ==    	non-compiled	[CE]  cannot  find  symbol	129	None	replace
1846	[BUG]  [BUGGY]  }  else  if(o  instanceof  JsonObject  >=  [CE]  illegal  start  of  expression  [FE]                ArrayIndexOutOfBoundsException      [CONTEXT]      if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }      [BUGGY]  }  else  if(o  instanceof  JsonObject  >=  [BUGGY]      return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	replace	}  else  if(o  instanceof  JsonObject  >=	  }    else    if(o    instanceof    JsonObject    ==    	non-compiled	[CE]  illegal  start  of  expression	129	None	replace
1847	[BUG]  [BUGGY]  }  else  if(o  instanceof  JsonObject  {  ||  o  instanceof  String)  {  [CE]  ')'  expected  [FE]                  ArrayIndexOutOfBoundsException      [CONTEXT]      if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }      [BUGGY]  }  else  if(o  instanceof  JsonObject  {  ||  o  instanceof  String)  {  [BUGGY]      return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	replace	}  else  if(o  instanceof  JsonObject  {  ||  o  instanceof  String)  {	  }    else    if(o    instanceof    JsonObject    ==    1)    {    	non-compiled	[CE]  ')'  expected	118	None	replace
1848	[BUG]  [BUGGY]  }  else  if(o  instanceof  JsonObject  ||  o.isNumber()  ||!(o  instanceof  JsonNull))  {  [CE]  cannot  find  symbol  [FE]                        ArrayIndexOutOfBoundsException      [CONTEXT]      if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }      [BUGGY]  }  else  if(o  instanceof  JsonObject  ||  o.isNumber()  ||!(o  instanceof  JsonNull))  {  [BUGGY]      return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	replace	}  else  if(o  instanceof  JsonObject  ||  o.isNumber()  ||!(o  instanceof  JsonNull))  {	  }    else    if(o    instanceof    JsonObject    ||    o    instanceof    JsonNumber    ||!(o    instanceof    JsonNull))    {    	non-compiled	[CE]  cannot  find  symbol	127	None	replace
1849	[BUG]  [BUGGY]  [FE]  ArrayIndexOutOfBoundsException  [FE]                          ArrayIndexOutOfBoundsException      [CONTEXT]      if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }      [BUGGY]  }  else  if(o  instanceof  JsonObject  ||  o  instanceof  JsonArray  ||!(o  instanceof  JsonNull))  {  [BUGGY]      return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	add	}  else  if(o  instanceof  JsonObject  ||  o  instanceof  JsonArray  ||!(o  instanceof  JsonNull))  {	  }    else    if(o    instanceof    JsonObject    ||    o    instanceof    JsonNumber    ||!(o    instanceof    JsonNull))    {    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	127	2	replace
1850	[BUG]  [BUGGY]  }  else  if(o  instanceof  JsonObject  ||  o  instanceof  JsonArray  ||!(o  instanceof  JsonNull))  {  [FE]  ArrayIndexOutOfBoundsException  [FE]                          ArrayIndexOutOfBoundsException      [CONTEXT]      if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }      [BUGGY]  }  else  if(o  instanceof  JsonObject  ||  o  instanceof  JsonArray  ||!(o  instanceof  JsonNull))  {  [BUGGY]      return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	replace	}  else  if(o  instanceof  JsonObject  ||  o  instanceof  JsonArray  ||!(o  instanceof  JsonNull))  {	  }    else    if(o    instanceof    JsonObject    ||    o    instanceof    JsonNumber    ||!(o    instanceof    JsonNull))    {    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	127	2	replace
1851	[BUG]  [BUGGY]  }  else  if(o  instanceof  JsonArray  ||  o  instanceof  JsonObject)  {  }  else  if(o  instanceof  JsonArray  ||  o  instanceof  JsonObject)  {  aught  return  JsonToken.BEGIN_OBJECT;  }  else  if(o  instanceof  JsonObject)  {  [CE]  not  a  statement  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]      if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }      [BUGGY]  }  else  if(o  instanceof  JsonArray  ||  o  instanceof  JsonObject)  {  }  else  if(o  instanceof  JsonArray  ||  o  instanceof  JsonObject)  {  aught  return  JsonToken.BEGIN_OBJECT;  }  else  if(o  instanceof  JsonObject)  {  [BUGGY]      return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	replace	}    else    if(o    instanceof    JsonArray    ||    o    instanceof    JsonObject)    {    }  else  if(o  instanceof  JsonArray  ||  o  instanceof  JsonObject)  {  aught  return  JsonToken.BEGIN_OBJECT;  }  else  if(o  instanceof  JsonObject)  {	  	non-compiled	[CE]  not  a  statement	163	None	add
1852	[BUG]  [BUGGY]  }  else  if(o  instanceof  JsonArray  ||  o  instanceof  JsonObject)  {  }  else  if(o  instanceof  JsonArray  ||  o  instanceof  JsonObject)  {  case  JsonToken.BEGIN_OBJECT:  return  JsonToken.BEGIN_ARRAY;  [CE]  orphaned  case  [FE]      ArrayIndexOutOfBoundsException    [CONTEXT]      if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }      [BUGGY]  }  else  if(o  instanceof  JsonArray  ||  o  instanceof  JsonObject)  {  }  else  if(o  instanceof  JsonArray  ||  o  instanceof  JsonObject)  {  case  JsonToken.BEGIN_OBJECT:  return  JsonToken.BEGIN_ARRAY;  [BUGGY]      return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	replace	}    else    if(o    instanceof    JsonArray    ||    o    instanceof    JsonObject)    {    }  else  if(o  instanceof  JsonArray  ||  o  instanceof  JsonObject)  {  case  JsonToken.BEGIN_OBJECT:  return  JsonToken.BEGIN_ARRAY;	  	non-compiled	[CE]  orphaned  case	163	None	add
1853	[BUG]  [BUGGY]  }  else  if(o  instanceof  JsonToken)  {  return  JsonToken.BEGIN_OBJECT;  }  [CE]  illegal  start  of  type  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]      if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }      [BUGGY]  }  else  if(o  instanceof  JsonToken)  {  return  JsonToken.BEGIN_OBJECT;  }  [BUGGY]      return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	replace	}  else  if(o  instanceof  JsonToken)  {  return  JsonToken.BEGIN_OBJECT;  }	  }    else    if(o    instanceof    JsonArray)    {    return    JsonToken.BEGIN_OBJECT;    	non-compiled	[CE]  illegal  start  of  type	172	None	replace
1854	[BUG]  [BUGGY]  }  else  if(o  instanceof  JsonArray  <?>  &&  isObject)  {  [CE]  type  JsonArray  does  not  take  parameters  [FE]                  ArrayIndexOutOfBoundsException      [CONTEXT]      if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }      [BUGGY]  }  else  if(o  instanceof  JsonArray  <?>  &&  isObject)  {  [BUGGY]      return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	replace	}  else  if(o  instanceof  JsonArray  <?>  &&  isObject)  {	  }    else    if(o    instanceof    JsonObject    <?>    &&    isObject)    {    	non-compiled	[CE]  type  JsonArray  does  not  take  parameters	78	None	replace
1855	[BUG]  [BUGGY]  }  else  if(o  instanceof  JsonArray  ||  o  instanceof  JsonArray)  {  }  else  if(o  instanceof  JsonArray  ||  o  instanceof  JsonArray)  {  aught  return  JsonToken.BEGIN_OBJECT;  }  else  if(o  instanceof  JsonArray)  {  [CE]  not  a  statement  [FE]    AssertionError    [CONTEXT]      if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }      [BUGGY]  }  else  if(o  instanceof  JsonArray  ||  o  instanceof  JsonArray)  {  }  else  if(o  instanceof  JsonArray  ||  o  instanceof  JsonArray)  {  aught  return  JsonToken.BEGIN_OBJECT;  }  else  if(o  instanceof  JsonArray)  {  [BUGGY]      return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	replace	}    else    if(o    instanceof    JsonArray    ||    o    instanceof    JsonArray)    {    }  else  if(o  instanceof  JsonArray  ||  o  instanceof  JsonArray)  {  aught  return  JsonToken.BEGIN_OBJECT;  }  else  if(o  instanceof  JsonArray)  {	  	non-compiled	[CE]  not  a  statement	200	None	add
1856	[BUG]  [BUGGY]  }  else  if(o  instanceof  JsonArray  ||  o  instanceof  JsonArray)  {  <  JsonArray>  push(iterator.next());  return  JsonToken.BEGIN_ARRAY;  }  else  if(o  instanceof  JsonArray  ||  o  instanceof  JsonArray)  {  [CE]  illegal  start  of  expression  [FE]      AssertionError    [CONTEXT]      if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }      [BUGGY]  }  else  if(o  instanceof  JsonArray  ||  o  instanceof  JsonArray)  {  <  JsonArray>  push(iterator.next());  return  JsonToken.BEGIN_ARRAY;  }  else  if(o  instanceof  JsonArray  ||  o  instanceof  JsonArray)  {  [BUGGY]      return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	replace	}    else    if(o    instanceof    JsonArray    ||    o    instanceof    JsonArray)    {    <  JsonArray>  push(iterator.next());  return  JsonToken.BEGIN_ARRAY;  }  else  if(o  instanceof  JsonArray  ||  o  instanceof  JsonArray)  {	  	non-compiled	[CE]  illegal  start  of  expression	200	None	add
1857	[BUG]  [BUGGY]  }  else  if(o  instanceof  JsonObject  ||  o  instanceof  String)  {  ArrayIndexOutOfBoundsException  e  =  new  ArrayIndexOutOfBoundsException(pathNames[0],  pathNames[1]),  e);  [CE]  ';'  expected  [FE]            ArrayIndexOutOfBoundsException      [CONTEXT]      if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }      [BUGGY]  }  else  if(o  instanceof  JsonObject  ||  o  instanceof  String)  {  ArrayIndexOutOfBoundsException  e  =  new  ArrayIndexOutOfBoundsException(pathNames[0],  pathNames[1]),  e);  [BUGGY]      return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	replace	}  else  if(o  instanceof  JsonObject  ||  o  instanceof  String)  {  ArrayIndexOutOfBoundsException  e  =  new  ArrayIndexOutOfBoundsException(pathNames[0],  pathNames[1]),  e);	  }    else    if(o    instanceof    JsonObject    ||    o    instanceof    String)    {    ArrayIndexOutOfBoundsException    e    =    new    ArrayIndexOutOfBoundsException(pathNames[0],    pathNames[1]);    	non-compiled	[CE]  ';'  expected	150	None	replace
1858	[BUG]  [BUGGY]  }  else  if(o  instanceof  JsonNull  ||!(o  instanceof  JsonNull  &&!(o  instanceof  JsonNull)))  {  }  else  if(o  instanceof  JsonNull  ||!(o  instanceof  JsonNull  &&!(o  instanceof  JsonNull)))  {  return  JsonToken.BEGIN_OBJECT;  }  [CE]  illegal  start  of  type  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]      if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }      [BUGGY]  }  else  if(o  instanceof  JsonNull  ||!(o  instanceof  JsonNull  &&!(o  instanceof  JsonNull)))  {  }  else  if(o  instanceof  JsonNull  ||!(o  instanceof  JsonNull  &&!(o  instanceof  JsonNull)))  {  return  JsonToken.BEGIN_OBJECT;  }  [BUGGY]      return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	replace	}    else    if(o    instanceof    JsonNull    ||!(o    instanceof    JsonNull    &&!(o    instanceof    JsonNull)))    {    }  else  if(o  instanceof  JsonNull  ||!(o  instanceof  JsonNull  &&!(o  instanceof  JsonNull)))  {  return  JsonToken.BEGIN_OBJECT;  }	  	non-compiled	[CE]  illegal  start  of  type	3	None	add
1859	[BUG]  [BUGGY]  }  else  if(o  instanceof  JsonNull  ||!(o  instanceof  JsonNull  &&!(o  instanceof  JsonNull)))  {  }  else  if(o  instanceof  JsonNull  ||.!(o  instanceof  JsonNull  &&!(o  instanceof  JsonNull)))  {  [CE]  illegal  start  of  expression  [FE]      ArrayIndexOutOfBoundsException    [CONTEXT]      if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }      [BUGGY]  }  else  if(o  instanceof  JsonNull  ||!(o  instanceof  JsonNull  &&!(o  instanceof  JsonNull)))  {  }  else  if(o  instanceof  JsonNull  ||.!(o  instanceof  JsonNull  &&!(o  instanceof  JsonNull)))  {  [BUGGY]      return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	replace	}    else    if(o    instanceof    JsonNull    ||!(o    instanceof    JsonNull    &&!(o    instanceof    JsonNull)))    {    }  else  if(o  instanceof  JsonNull  ||.!(o  instanceof  JsonNull  &&!(o  instanceof  JsonNull)))  {	  	non-compiled	[CE]  illegal  start  of  expression	3	None	add
1860	[BUG]  [BUGGY]  }  else  if(o  instanceof  JsonNull  ||  o  instanceof  JsonNull)  {  return  JsonToken.NUMBER_OBJECT;  [CE]  cannot  find  symbol  NUMBER_OBJECT  [FE]                  AssertionError      [CONTEXT]      if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }      [BUGGY]  }  else  if(o  instanceof  JsonNull  ||  o  instanceof  JsonNull)  {  return  JsonToken.NUMBER_OBJECT;  [BUGGY]      return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	replace	}  else  if(o  instanceof  JsonNull  ||  o  instanceof  JsonNull)  {  return  JsonToken.NUMBER_OBJECT;	  }    else    if(o    instanceof    JsonNull)    {    }    else    if(o    instanceof    JsonNull)    <    return    JsonToken.NUMBER_OBJECT;    	non-compiled	[CE]  cannot  find  symbol  NUMBER_OBJECT	74	None	replace
1861	[BUG]  [BUGGY]  }  else  if(o  instanceof  JsonArray)  {  }  else  {  return  JsonToken.NUMBER_OBJECT;  }  [CE]  illegal  start  of  type  [FE]                    AssertionError      [CONTEXT]      if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }      [BUGGY]  }  else  if(o  instanceof  JsonArray)  {  }  else  {  return  JsonToken.NUMBER_OBJECT;  }  [BUGGY]      return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	replace	}  else  if(o  instanceof  JsonArray)  {  }  else  {  return  JsonToken.NUMBER_OBJECT;  }	  }    else    if(o    instanceof    JsonNull)    {    }    else    if(o    instanceof    JsonNull)    <    return    JsonToken.NUMBER_OBJECT;    	non-compiled	[CE]  illegal  start  of  type	74	None	replace
1862	[BUG]  [BUGGY]  }  else  if(o  instanceof  JsonNull)  {  return  JsonToken.NUMBER_OBJECT;  }  [CE]  illegal  start  of  type  [FE]                      AssertionError      [CONTEXT]      if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }      [BUGGY]  }  else  if(o  instanceof  JsonNull)  {  return  JsonToken.NUMBER_OBJECT;  }  [BUGGY]      return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	replace	}  else  if(o  instanceof  JsonNull)  {  return  JsonToken.NUMBER_OBJECT;  }	  }    else    if(o    instanceof    JsonNull)    {    }    else    if(o    instanceof    JsonNull)    <    return    JsonToken.NUMBER_OBJECT;    	non-compiled	[CE]  illegal  start  of  type	74	None	replace
1863	[BUG]  [BUGGY]  }  else  if(o  instanceof  JsonObject  ||  o  instanceof  JsonPrimitive)  {  return  JsonToken.BEGIN_ARRAY;  }  [CE]  illegal  start  of  type  [FE]            ArrayIndexOutOfBoundsException      [CONTEXT]      if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }      [BUGGY]  }  else  if(o  instanceof  JsonObject  ||  o  instanceof  JsonPrimitive)  {  return  JsonToken.BEGIN_ARRAY;  }  [BUGGY]      return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	replace	}  else  if(o  instanceof  JsonObject  ||  o  instanceof  JsonPrimitive)  {  return  JsonToken.BEGIN_ARRAY;  }	  }    else    if(o    instanceof    JsonObject    ||    o    instanceof    JsonPrimitive)    {    }    else    if(o    instanceof    JsonObject    ||    o    instanceof    JsonPrimitive)    {    return    JsonToken.BEGIN_OBJECT;    }    else    if(o    instanceof    JsonArray)    {    return    JsonToken.BEGIN_ARRAY;    }    	non-compiled	[CE]  illegal  start  of  type	230	None	replace
1864	[BUG]  [BUGGY]  }  else  if(o  instanceof  JsonObject  ||  o  instanceof  JsonDecimal)  {  [CE]  cannot  find  symbol  [FE]              ArrayIndexOutOfBoundsException      [CONTEXT]      if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }      [BUGGY]  }  else  if(o  instanceof  JsonObject  ||  o  instanceof  JsonDecimal)  {  [BUGGY]      return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	replace	}  else  if(o  instanceof  JsonObject  ||  o  instanceof  JsonDecimal)  {	  }    else    if(o    instanceof    JsonObject    ||    o    instanceof    JsonEnum)    {    	non-compiled	[CE]  cannot  find  symbol	46	None	replace
1865	[BUG]  [BUGGY]  }  else  if(o  instanceof  JsonNumber  <?>  &&  isObject)  {  [CE]  cannot  find  symbol  [FE]                      ArrayIndexOutOfBoundsException      [CONTEXT]      if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }      [BUGGY]  }  else  if(o  instanceof  JsonNumber  <?>  &&  isObject)  {  [BUGGY]      return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	replace	}  else  if(o  instanceof  JsonNumber  <?>  &&  isObject)  {	  }    else    if(o    instanceof    JsonNumber    <?>)    {    	non-compiled	[CE]  cannot  find  symbol	80	None	replace
1866	[BUG]  [BUGGY]  }  else  if(o  instanceof  JsonNumber  ==?>)  {  [CE]  illegal  start  of  expression  [FE]                        ArrayIndexOutOfBoundsException      [CONTEXT]      if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }      [BUGGY]  }  else  if(o  instanceof  JsonNumber  ==?>)  {  [BUGGY]      return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	replace	}  else  if(o  instanceof  JsonNumber  ==?>)  {	  }    else    if(o    instanceof    JsonNumber    <?>)    {    	non-compiled	[CE]  illegal  start  of  expression	80	None	replace
1867	[BUG]  [BUGGY]  }  else  if(o  instanceof  JsonNumber  <?>  ||  o  instanceof  String)  {  [CE]  cannot  find  symbol  [FE]                          ArrayIndexOutOfBoundsException      [CONTEXT]      if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }      [BUGGY]  }  else  if(o  instanceof  JsonNumber  <?>  ||  o  instanceof  String)  {  [BUGGY]      return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	replace	}  else  if(o  instanceof  JsonNumber  <?>  ||  o  instanceof  String)  {	  }    else    if(o    instanceof    JsonNumber    <?>)    {    	non-compiled	[CE]  cannot  find  symbol	80	None	replace
1868	[BUG]  [BUGGY]  }  else  {  if(o  instanceof  JsonPrimitive)  {  return  JsonToken.BEGIN_ARRAY;  }  [CE]  'else'  without  'if'  [FE]          ArrayIndexOutOfBoundsException      [CONTEXT]      if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }      [BUGGY]  }  else  {  if(o  instanceof  JsonPrimitive)  {  return  JsonToken.BEGIN_ARRAY;  }  [BUGGY]      return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	replace	}  else  {  if(o  instanceof  JsonPrimitive)  {  return  JsonToken.BEGIN_ARRAY;  }	  }    else    if(o    instanceof    JsonObject    ||    o    instanceof    String)    {    }    else    if(o    instanceof    JsonObject    ||    o    instanceof    String)    {    return    JsonToken.BEGIN_OBJECT;    }    else    if(o    instanceof    JsonArray)    {    return    JsonToken.BEGIN_OBJECT;    }    	non-compiled	[CE]  'else'  without  'if'	239	None	replace
1869	[BUG]  [BUGGY]  }  else  if(o  instanceof  JsonObject  &&  o  instanceof  JsonPrimitive)  {  }  else  if(o  instanceof  JsonObject  &&  o  instanceof  JsonPrimitive)  {  return  JsonToken.BEGIN_OBJECT;  }  else  if(o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  [CE]  illegal  start  of  type  [FE]    AssertionError    [CONTEXT]      if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }      [BUGGY]  }  else  if(o  instanceof  JsonObject  &&  o  instanceof  JsonPrimitive)  {  }  else  if(o  instanceof  JsonObject  &&  o  instanceof  JsonPrimitive)  {  return  JsonToken.BEGIN_OBJECT;  }  else  if(o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  [BUGGY]      return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	replace	}    else    if(o    instanceof    JsonObject    &&    o    instanceof    JsonPrimitive)    {    }  else  if(o  instanceof  JsonObject  &&  o  instanceof  JsonPrimitive)  {  return  JsonToken.BEGIN_OBJECT;  }  else  if(o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }	  	non-compiled	[CE]  illegal  start  of  type	108	None	add
1870	[BUG]  [BUGGY]  }  else  if(o  instanceof  JsonObject  &&  o  instanceof  JsonPrimitive)  {  }  else  if(o  instanceof  JsonObject  &&  o  instanceof  JsonPrimitive)  {  return  JsonToken.BEGIN_OBJECT;  }  else  if(o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_OBJECT;  }  [CE]  illegal  start  of  type  [FE]      AssertionError    [CONTEXT]      if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }      [BUGGY]  }  else  if(o  instanceof  JsonObject  &&  o  instanceof  JsonPrimitive)  {  }  else  if(o  instanceof  JsonObject  &&  o  instanceof  JsonPrimitive)  {  return  JsonToken.BEGIN_OBJECT;  }  else  if(o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_OBJECT;  }  [BUGGY]      return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	replace	}    else    if(o    instanceof    JsonObject    &&    o    instanceof    JsonPrimitive)    {    }  else  if(o  instanceof  JsonObject  &&  o  instanceof  JsonPrimitive)  {  return  JsonToken.BEGIN_OBJECT;  }  else  if(o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_OBJECT;  }	  	non-compiled	[CE]  illegal  start  of  type	108	None	add
1871	[BUG]  [BUGGY]  }  else  if(o  instanceof  JsonObject  &&  o  instanceof  JsonPrimitive)  {  }  else  if(o  instanceof  JsonObject  &&  o  instanceof  JsonPrimitive)  {  return  JsonToken.BEGIN_OBJECT;  }  else  if(o  instanceof  JsonObject)  {  return  JsonToken.BEGIN_ARRAY;  }  [CE]  illegal  start  of  type  [FE]        AssertionError    [CONTEXT]      if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }      [BUGGY]  }  else  if(o  instanceof  JsonObject  &&  o  instanceof  JsonPrimitive)  {  }  else  if(o  instanceof  JsonObject  &&  o  instanceof  JsonPrimitive)  {  return  JsonToken.BEGIN_OBJECT;  }  else  if(o  instanceof  JsonObject)  {  return  JsonToken.BEGIN_ARRAY;  }  [BUGGY]      return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	replace	}    else    if(o    instanceof    JsonObject    &&    o    instanceof    JsonPrimitive)    {    }  else  if(o  instanceof  JsonObject  &&  o  instanceof  JsonPrimitive)  {  return  JsonToken.BEGIN_OBJECT;  }  else  if(o  instanceof  JsonObject)  {  return  JsonToken.BEGIN_ARRAY;  }	  	non-compiled	[CE]  illegal  start  of  type	108	None	add
1872	[BUG]  [BUGGY]  }  else  if(o  instanceof  JsonObject  &&  o  instanceof  JsonPrimitive)  {  }  else  if(o  instanceof  JsonObject  &&  o  instanceof  JsonPrimitive)  {  return  JsonToken.BEGIN_OBJECT;  }  else  if(o  instanceof  JsonObject)  {  [CE]  missing  return  statement  [FE]          AssertionError    [CONTEXT]      if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }      [BUGGY]  }  else  if(o  instanceof  JsonObject  &&  o  instanceof  JsonPrimitive)  {  }  else  if(o  instanceof  JsonObject  &&  o  instanceof  JsonPrimitive)  {  return  JsonToken.BEGIN_OBJECT;  }  else  if(o  instanceof  JsonObject)  {  [BUGGY]      return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	replace	}    else    if(o    instanceof    JsonObject    &&    o    instanceof    JsonPrimitive)    {    }  else  if(o  instanceof  JsonObject  &&  o  instanceof  JsonPrimitive)  {  return  JsonToken.BEGIN_OBJECT;  }  else  if(o  instanceof  JsonObject)  {	  	non-compiled	[CE]  missing  return  statement	108	None	add
1873	[BUG]  [BUGGY]  }  else  if(o  instanceof  JsonArray  <  Object>  ||  o  instanceof  JsonArray  <  Object>)  {  [CE]  type  JsonArray  does  not  take  parameters  [FE]          AssertionError      [CONTEXT]      if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }      [BUGGY]  }  else  if(o  instanceof  JsonArray  <  Object>  ||  o  instanceof  JsonArray  <  Object>)  {  [BUGGY]      return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	replace	}  else  if(o  instanceof  JsonArray  <  Object>  ||  o  instanceof  JsonArray  <  Object>)  {	  }    else    if(o    instanceof    JsonArray    <    Object>)    {    	non-compiled	[CE]  type  JsonArray  does  not  take  parameters	199	None	replace
1874	[BUG]  [BUGGY]  }  else  if(o  instanceof  JsonArray  ||  o  instanceof  JsonNumber  <?>)  {  [CE]  cannot  find  symbol  [FE]              ArrayIndexOutOfBoundsException      [CONTEXT]      if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }      [BUGGY]  }  else  if(o  instanceof  JsonArray  ||  o  instanceof  JsonNumber  <?>)  {  [BUGGY]      return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	replace	}  else  if(o  instanceof  JsonArray  ||  o  instanceof  JsonNumber  <?>)  {	  }    else    if(o    instanceof    JsonArray    ||    o    instanceof    JsonNumber)    {    	non-compiled	[CE]  cannot  find  symbol	258	None	replace
1875	[BUG]  [BUGGY]  }  else  if(o  instanceof  JsonObject  &&!(o  instanceof  JsonPrimitive))  {  }  else  if(o  instanceof  JsonObject  &&!(o  instanceof  JsonPrimitive))  {  return  JsonToken.BEGIN_OBJECT;  }  else  if(o  instanceof  JsonObject  &&!(o  instanceof  JsonPrimitive))  {  [CE]  missing  return  statement  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]      if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }      [BUGGY]  }  else  if(o  instanceof  JsonObject  &&!(o  instanceof  JsonPrimitive))  {  }  else  if(o  instanceof  JsonObject  &&!(o  instanceof  JsonPrimitive))  {  return  JsonToken.BEGIN_OBJECT;  }  else  if(o  instanceof  JsonObject  &&!(o  instanceof  JsonPrimitive))  {  [BUGGY]      return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	replace	}    else    if(o    instanceof    JsonObject    &&!(o    instanceof    JsonPrimitive))    {    }  else  if(o  instanceof  JsonObject  &&!(o  instanceof  JsonPrimitive))  {  return  JsonToken.BEGIN_OBJECT;  }  else  if(o  instanceof  JsonObject  &&!(o  instanceof  JsonPrimitive))  {	  	non-compiled	[CE]  missing  return  statement	181	None	add
1876	[BUG]  [BUGGY]  }  else  if(o  instanceof  JsonObject  &&!(o  instanceof  JsonPrimitive))  {  }  else  if(o  instanceof  JsonObject  &&!(o  instanceof  JsonPrimitive))  {  return  JsonToken.BEGIN_OBJECT;  }  else  if(o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_OBJECT;  }  [CE]  illegal  start  of  type  [FE]      ArrayIndexOutOfBoundsException    [CONTEXT]      if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }      [BUGGY]  }  else  if(o  instanceof  JsonObject  &&!(o  instanceof  JsonPrimitive))  {  }  else  if(o  instanceof  JsonObject  &&!(o  instanceof  JsonPrimitive))  {  return  JsonToken.BEGIN_OBJECT;  }  else  if(o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_OBJECT;  }  [BUGGY]      return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	replace	}    else    if(o    instanceof    JsonObject    &&!(o    instanceof    JsonPrimitive))    {    }  else  if(o  instanceof  JsonObject  &&!(o  instanceof  JsonPrimitive))  {  return  JsonToken.BEGIN_OBJECT;  }  else  if(o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_OBJECT;  }	  	non-compiled	[CE]  illegal  start  of  type	181	None	add
1877	[BUG]  [BUGGY]  }  else  if(o  instanceof  JsonObject  &&!(o  instanceof  JsonPrimitive))  {  }  else  if(o  instanceof  JsonObject  &&!(o  instanceof  JsonPrimitive))  {  return  JsonToken.BEGIN_OBJECT;  }  else  if(o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  [CE]  illegal  start  of  type  [FE]        ArrayIndexOutOfBoundsException    [CONTEXT]      if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }      [BUGGY]  }  else  if(o  instanceof  JsonObject  &&!(o  instanceof  JsonPrimitive))  {  }  else  if(o  instanceof  JsonObject  &&!(o  instanceof  JsonPrimitive))  {  return  JsonToken.BEGIN_OBJECT;  }  else  if(o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  [BUGGY]      return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	replace	}    else    if(o    instanceof    JsonObject    &&!(o    instanceof    JsonPrimitive))    {    }  else  if(o  instanceof  JsonObject  &&!(o  instanceof  JsonPrimitive))  {  return  JsonToken.BEGIN_OBJECT;  }  else  if(o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }	  	non-compiled	[CE]  illegal  start  of  type	181	None	add
1878	[BUG]  [BUGGY]  }  else  if(o  instanceof  JsonObject  &&!(o  instanceof  JsonPrimitive))  {  }  else  if(o  instanceof  JsonObject  &&!(o  instanceof  JsonPrimitive))  {  aught  return  JsonToken.BEGIN_OBJECT;  }  else  if(o  instanceof  JsonObject  &&!(o  instanceof  JsonPrimitive))  {  [CE]  not  a  statement  [FE]          ArrayIndexOutOfBoundsException    [CONTEXT]      if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }      [BUGGY]  }  else  if(o  instanceof  JsonObject  &&!(o  instanceof  JsonPrimitive))  {  }  else  if(o  instanceof  JsonObject  &&!(o  instanceof  JsonPrimitive))  {  aught  return  JsonToken.BEGIN_OBJECT;  }  else  if(o  instanceof  JsonObject  &&!(o  instanceof  JsonPrimitive))  {  [BUGGY]      return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	replace	}    else    if(o    instanceof    JsonObject    &&!(o    instanceof    JsonPrimitive))    {    }  else  if(o  instanceof  JsonObject  &&!(o  instanceof  JsonPrimitive))  {  aught  return  JsonToken.BEGIN_OBJECT;  }  else  if(o  instanceof  JsonObject  &&!(o  instanceof  JsonPrimitive))  {	  	non-compiled	[CE]  not  a  statement	181	None	add
1879	[BUG]  [BUGGY]  }  else  if(o  instanceof  JsonObject  &&!(o  instanceof  JsonPrimitive))  {  }  else  if(o  instanceof  JsonObject  &&!(o  instanceof  JsonPrimitive))  {  returned  JsonToken.BEGIN_OBJECT;  }  else  if(o  instanceof  JsonObject  &&!(o  instanceof  JsonPrimitive))  {  [CE]  ';'  expected  [FE]            ArrayIndexOutOfBoundsException    [CONTEXT]      if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }      [BUGGY]  }  else  if(o  instanceof  JsonObject  &&!(o  instanceof  JsonPrimitive))  {  }  else  if(o  instanceof  JsonObject  &&!(o  instanceof  JsonPrimitive))  {  returned  JsonToken.BEGIN_OBJECT;  }  else  if(o  instanceof  JsonObject  &&!(o  instanceof  JsonPrimitive))  {  [BUGGY]      return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	replace	}    else    if(o    instanceof    JsonObject    &&!(o    instanceof    JsonPrimitive))    {    }  else  if(o  instanceof  JsonObject  &&!(o  instanceof  JsonPrimitive))  {  returned  JsonToken.BEGIN_OBJECT;  }  else  if(o  instanceof  JsonObject  &&!(o  instanceof  JsonPrimitive))  {	  	non-compiled	[CE]  ';'  expected	181	None	add
1880	[BUG]  [BUGGY]  }  else  if(o  instanceof  JsonObject  &&!(o  instanceof  JsonPrimitive))  {  }  else  if(o  instanceof  JsonObject  &&!(o  instanceof  JsonPrimitive))  {  return  JsonToken.BEGIN_OBJECT;  }  else  if(o  instanceof  JsonObject  &&  isObject?  JsonToken.BEGIN_ARRAY  :  JsonTo  [CE]  ')'  expected  [FE]              ArrayIndexOutOfBoundsException    [CONTEXT]      if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }      [BUGGY]  }  else  if(o  instanceof  JsonObject  &&!(o  instanceof  JsonPrimitive))  {  }  else  if(o  instanceof  JsonObject  &&!(o  instanceof  JsonPrimitive))  {  return  JsonToken.BEGIN_OBJECT;  }  else  if(o  instanceof  JsonObject  &&  isObject?  JsonToken.BEGIN_ARRAY  :  JsonTo  [BUGGY]      return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	replace	}    else    if(o    instanceof    JsonObject    &&!(o    instanceof    JsonPrimitive))    {    }  else  if(o  instanceof  JsonObject  &&!(o  instanceof  JsonPrimitive))  {  return  JsonToken.BEGIN_OBJECT;  }  else  if(o  instanceof  JsonObject  &&  isObject?  JsonToken.BEGIN_ARRAY  :  JsonTo	  	non-compiled	[CE]  ')'  expected	181	None	add
1881	[BUG]  [BUGGY]  }  else  if(!(o  instanceof  JsonNumber  ||  o  instanceof  String))  {  [CE]  cannot  find  symbol  [FE]          AssertionError      [CONTEXT]      if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }      [BUGGY]  }  else  if(!(o  instanceof  JsonNumber  ||  o  instanceof  String))  {  [BUGGY]      return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	replace	}  else  if(!(o  instanceof  JsonNumber  ||  o  instanceof  String))  {	  }    else    if(!(o    instanceof    JsonNumber))    {    	non-compiled	[CE]  cannot  find  symbol	107	None	replace
1882	[BUG]  [BUGGY]  }  else  if(!(o  instanceof  JsonNumber  ||  o  instanceof  Boolean))  {  [CE]  cannot  find  symbol  [FE]            AssertionError      [CONTEXT]      if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }      [BUGGY]  }  else  if(!(o  instanceof  JsonNumber  ||  o  instanceof  Boolean))  {  [BUGGY]      return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	replace	}  else  if(!(o  instanceof  JsonNumber  ||  o  instanceof  Boolean))  {	  }    else    if(!(o    instanceof    JsonNumber))    {    	non-compiled	[CE]  cannot  find  symbol	107	None	replace
1883	[BUG]  [BUGGY]  }  else  if(o  instanceof  JsonArray  <?>  ||  o  instanceof  JsonArray  <?>)  {  [CE]  type  JsonArray  does  not  take  parameters  [FE]                ArrayIndexOutOfBoundsException      [CONTEXT]      if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }      [BUGGY]  }  else  if(o  instanceof  JsonArray  <?>  ||  o  instanceof  JsonArray  <?>)  {  [BUGGY]      return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	replace	}  else  if(o  instanceof  JsonArray  <?>  ||  o  instanceof  JsonArray  <?>)  {	  }    else    if(o    instanceof    JsonArray    <?>)    {    	non-compiled	[CE]  type  JsonArray  does  not  take  parameters	77	None	replace
1884	[BUG]  [BUGGY]  }  else  if(o  instanceof  JsonArray  <?>  ||  o  instanceof  JsonPrimitive)  {  [CE]  type  JsonArray  does  not  take  parameters  [FE]                  ArrayIndexOutOfBoundsException      [CONTEXT]      if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }      [BUGGY]  }  else  if(o  instanceof  JsonArray  <?>  ||  o  instanceof  JsonPrimitive)  {  [BUGGY]      return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	replace	}  else  if(o  instanceof  JsonArray  <?>  ||  o  instanceof  JsonPrimitive)  {	  }    else    if(o    instanceof    JsonArray    <?>)    {    	non-compiled	[CE]  type  JsonArray  does  not  take  parameters	77	None	replace
1885	[BUG]  [BUGGY]  }  else  if(o  instanceof  JsonObject)  {  }  else  {  if(!(o  instanceof  JsonObject))  {  return  JsonToken.BEGIN_OBJECT;  }  [CE]  'else'  without  'if'  [FE]          AssertionError      [CONTEXT]      if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }      [BUGGY]  }  else  if(o  instanceof  JsonObject)  {  }  else  {  if(!(o  instanceof  JsonObject))  {  return  JsonToken.BEGIN_OBJECT;  }  [BUGGY]      return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	replace	}  else  if(o  instanceof  JsonObject)  {  }  else  {  if(!(o  instanceof  JsonObject))  {  return  JsonToken.BEGIN_OBJECT;  }	  }    else    if(!(o    instanceof    JsonObject))    {    }    else    if(!(o    instanceof    JsonObject))    <    return    JsonToken.BEGIN_OBJECT;    	non-compiled	[CE]  'else'  without  'if'	92	None	replace
1886	[BUG]  [BUGGY]  }  else  if(o  instanceof  JsonObject)  {  }  [CE]  illegal  start  of  type  [FE]            AssertionError      [CONTEXT]      if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }      [BUGGY]  }  else  if(o  instanceof  JsonObject)  {  }  [BUGGY]      return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	replace	}  else  if(o  instanceof  JsonObject)  {  }	  }    else    if(!(o    instanceof    JsonObject))    {    }    else    if(!(o    instanceof    JsonObject))    <    return    JsonToken.BEGIN_OBJECT;    	non-compiled	[CE]  illegal  start  of  type	92	None	replace
1887	[BUG]  [BUGGY]  }  else  if(o  instanceof  JsonArray  <  NULL)  {  return  JsonToken.NUMBER_OBJECT;  [CE]  >  expected  [FE]                  AssertionError      [CONTEXT]      if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }      [BUGGY]  }  else  if(o  instanceof  JsonArray  <  NULL)  {  return  JsonToken.NUMBER_OBJECT;  [BUGGY]      return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	replace	}  else  if(o  instanceof  JsonArray  <  NULL)  {  return  JsonToken.NUMBER_OBJECT;	  }    else    if(o    instanceof    JsonArray)    {    }    else    if(o    instanceof    JsonArray)    <    return    JsonToken.NUMBER_OBJECT;    	non-compiled	[CE]  >  expected	103	None	replace
1888	[BUG]  [BUGGY]  }  else  if(o  instanceof  JsonArray)  {  return  JsonToken.NUMBER_OBJECT;  }  [CE]  illegal  start  of  type  [FE]                    AssertionError      [CONTEXT]      if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }      [BUGGY]  }  else  if(o  instanceof  JsonArray)  {  return  JsonToken.NUMBER_OBJECT;  }  [BUGGY]      return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	replace	}  else  if(o  instanceof  JsonArray)  {  return  JsonToken.NUMBER_OBJECT;  }	  }    else    if(o    instanceof    JsonArray)    {    }    else    if(o    instanceof    JsonArray)    <    return    JsonToken.NUMBER_OBJECT;    	non-compiled	[CE]  illegal  start  of  type	103	None	replace
1889	[BUG]  [BUGGY]  }  else  if(!(o  instanceof  JsonObject  ||  o  instanceof  Number))  {  }  else  if(!(o  instanceof  JsonObject  ||  o  instanceof  Number))  {  return  JsonToken.BEGIN_OBJECT;  }  else  if(!(o  instanceof  JsonObject  ||  o  instanceof  Number))  {  [CE]  missing  return  statement  [FE]    AssertionError    [CONTEXT]      if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }      [BUGGY]  }  else  if(!(o  instanceof  JsonObject  ||  o  instanceof  Number))  {  }  else  if(!(o  instanceof  JsonObject  ||  o  instanceof  Number))  {  return  JsonToken.BEGIN_OBJECT;  }  else  if(!(o  instanceof  JsonObject  ||  o  instanceof  Number))  {  [BUGGY]      return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	replace	}    else    if(!(o    instanceof    JsonObject    ||    o    instanceof    Number))    {    }  else  if(!(o  instanceof  JsonObject  ||  o  instanceof  Number))  {  return  JsonToken.BEGIN_OBJECT;  }  else  if(!(o  instanceof  JsonObject  ||  o  instanceof  Number))  {	  	non-compiled	[CE]  missing  return  statement	256	None	add
1890	[BUG]  [BUGGY]  }  else  if(!(o  instanceof  JsonObject  ||  o  instanceof  Number))  {  }  else  if(!(o  instanceof  JsonObject  ||  o  instanceof  Number))  {  aught  return  JsonToken.BEGIN_OBJECT;  }  else  if(!(o  instanceof  JsonObject  ||  o  instanceof  Number))  {  [CE]  not  a  statement  [FE]      AssertionError    [CONTEXT]      if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }      [BUGGY]  }  else  if(!(o  instanceof  JsonObject  ||  o  instanceof  Number))  {  }  else  if(!(o  instanceof  JsonObject  ||  o  instanceof  Number))  {  aught  return  JsonToken.BEGIN_OBJECT;  }  else  if(!(o  instanceof  JsonObject  ||  o  instanceof  Number))  {  [BUGGY]      return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	replace	}    else    if(!(o    instanceof    JsonObject    ||    o    instanceof    Number))    {    }  else  if(!(o  instanceof  JsonObject  ||  o  instanceof  Number))  {  aught  return  JsonToken.BEGIN_OBJECT;  }  else  if(!(o  instanceof  JsonObject  ||  o  instanceof  Number))  {	  	non-compiled	[CE]  not  a  statement	256	None	add
1891	[BUG]  [BUGGY]  }  else  if(!(o  instanceof  JsonObject  ||  o  instanceof  Number))  {  }  else  if(!(o  instanceof  JsonObject  ||  o  instanceof  Number))  {  case  JsonToken.BEGIN_OBJECT:  return  JsonToken.BEGIN_OBJECT;  [CE]  orphaned  case  [FE]        AssertionError    [CONTEXT]      if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }      [BUGGY]  }  else  if(!(o  instanceof  JsonObject  ||  o  instanceof  Number))  {  }  else  if(!(o  instanceof  JsonObject  ||  o  instanceof  Number))  {  case  JsonToken.BEGIN_OBJECT:  return  JsonToken.BEGIN_OBJECT;  [BUGGY]      return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	replace	}    else    if(!(o    instanceof    JsonObject    ||    o    instanceof    Number))    {    }  else  if(!(o  instanceof  JsonObject  ||  o  instanceof  Number))  {  case  JsonToken.BEGIN_OBJECT:  return  JsonToken.BEGIN_OBJECT;	  	non-compiled	[CE]  orphaned  case	256	None	add
1892	[BUG]  [BUGGY]  }  else  if(!(o  instanceof  JsonObject  ||  o  instanceof  Number))  {  }  else  if(!(o  instanceof  JsonObject  ||  o  instanceof  Number))  {  case  JsonToken.BEGIN_OBJECT:  return  JsonToken.BEGIN_ARRAY;  [CE]  orphaned  case  [FE]          AssertionError    [CONTEXT]      if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }      [BUGGY]  }  else  if(!(o  instanceof  JsonObject  ||  o  instanceof  Number))  {  }  else  if(!(o  instanceof  JsonObject  ||  o  instanceof  Number))  {  case  JsonToken.BEGIN_OBJECT:  return  JsonToken.BEGIN_ARRAY;  [BUGGY]      return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	replace	}    else    if(!(o    instanceof    JsonObject    ||    o    instanceof    Number))    {    }  else  if(!(o  instanceof  JsonObject  ||  o  instanceof  Number))  {  case  JsonToken.BEGIN_OBJECT:  return  JsonToken.BEGIN_ARRAY;	  	non-compiled	[CE]  orphaned  case	256	None	add
1893	[BUG]  [BUGGY]  }  else  if(o  instanceof  JsonObject  ||  o  instanceof  JsonType  ||  o  instanceof  JsonArray)  {  [CE]  cannot  find  symbol  [FE]          ArrayIndexOutOfBoundsException      [CONTEXT]      if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }      [BUGGY]  }  else  if(o  instanceof  JsonObject  ||  o  instanceof  JsonType  ||  o  instanceof  JsonArray)  {  [BUGGY]      return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	replace	}  else  if(o  instanceof  JsonObject  ||  o  instanceof  JsonType  ||  o  instanceof  JsonArray)  {	  }    else    if(o    instanceof    JsonObject    ||    o    instanceof    JsonType)    {    	non-compiled	[CE]  cannot  find  symbol	43	None	replace
1894	[BUG]  [BUGGY]  }  else  if(o  instanceof  JsonToken)  {  }  else  if(o  instanceof  JsonToken)  {  return  JsonToken.BEGIN_OBJECT;  }  else  if(o  instanceof  JsonArray)  {  [CE]  missing  return  statement  [FE]    AssertionError    [CONTEXT]      if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }      [BUGGY]  }  else  if(o  instanceof  JsonToken)  {  }  else  if(o  instanceof  JsonToken)  {  return  JsonToken.BEGIN_OBJECT;  }  else  if(o  instanceof  JsonArray)  {  [BUGGY]      return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	replace	}    else    if(o    instanceof    JsonToken)    {    }  else  if(o  instanceof  JsonToken)  {  return  JsonToken.BEGIN_OBJECT;  }  else  if(o  instanceof  JsonArray)  {	  	non-compiled	[CE]  missing  return  statement	197	None	add
1895	[BUG]  [BUGGY]  }  else  if(o  instanceof  JsonToken)  {  <  K,  V>  o  =  iterator.next();  return  JsonToken.BEGIN_OBJECT;  [CE]  illegal  start  of  expression  [FE]      AssertionError    [CONTEXT]      if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }      [BUGGY]  }  else  if(o  instanceof  JsonToken)  {  <  K,  V>  o  =  iterator.next();  return  JsonToken.BEGIN_OBJECT;  [BUGGY]      return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	replace	}    else    if(o    instanceof    JsonToken)    {    <  K,  V>  o  =  iterator.next();  return  JsonToken.BEGIN_OBJECT;	  	non-compiled	[CE]  illegal  start  of  expression	197	None	add
1896	[BUG]  [BUGGY]  }  else  if(o  instanceof  JsonToken)  {  <  K,  V>  o  =  iterator.next();  return  JsonToken.BEGIN_OBJECT  ||  o  ==  JsonToken.BEGIN_ARRAY;  [CE]  illegal  start  of  expression  [FE]        AssertionError    [CONTEXT]      if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }      [BUGGY]  }  else  if(o  instanceof  JsonToken)  {  <  K,  V>  o  =  iterator.next();  return  JsonToken.BEGIN_OBJECT  ||  o  ==  JsonToken.BEGIN_ARRAY;  [BUGGY]      return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	replace	}    else    if(o    instanceof    JsonToken)    {    <  K,  V>  o  =  iterator.next();  return  JsonToken.BEGIN_OBJECT  ||  o  ==  JsonToken.BEGIN_ARRAY;	  	non-compiled	[CE]  illegal  start  of  expression	197	None	add
1897	[BUG]  [BUGGY]  }  else  if(o  instanceof  JsonToken)  {  <  K,  V>  o  =  iterator.next();  return  JsonToken.BEGIN_OBJECT  ||  o!=  JsonToken.BEGIN_ARRAY;  [CE]  illegal  start  of  expression  [FE]          AssertionError    [CONTEXT]      if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }      [BUGGY]  }  else  if(o  instanceof  JsonToken)  {  <  K,  V>  o  =  iterator.next();  return  JsonToken.BEGIN_OBJECT  ||  o!=  JsonToken.BEGIN_ARRAY;  [BUGGY]      return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	replace	}    else    if(o    instanceof    JsonToken)    {    <  K,  V>  o  =  iterator.next();  return  JsonToken.BEGIN_OBJECT  ||  o!=  JsonToken.BEGIN_ARRAY;	  	non-compiled	[CE]  illegal  start  of  expression	197	None	add
1898	[BUG]  [BUGGY]  }  else  if(o  instanceof  JsonToken)  {  <  K,  V>  o  =  iterator.next();  return  JsonToken.BEGIN_OBJECT;  }  else  if(o  instanceof  JsonToken)  {  [CE]  illegal  start  of  expression  [FE]            AssertionError    [CONTEXT]      if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }      [BUGGY]  }  else  if(o  instanceof  JsonToken)  {  <  K,  V>  o  =  iterator.next();  return  JsonToken.BEGIN_OBJECT;  }  else  if(o  instanceof  JsonToken)  {  [BUGGY]      return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	replace	}    else    if(o    instanceof    JsonToken)    {    <  K,  V>  o  =  iterator.next();  return  JsonToken.BEGIN_OBJECT;  }  else  if(o  instanceof  JsonToken)  {	  	non-compiled	[CE]  illegal  start  of  expression	197	None	add
1899	[BUG]  [BUGGY]  }  else  {  if(o  ==  null)  {  return  JsonToken.NUMBER;  }  [CE]  'else'  without  'if'  [FE]            ArrayIndexOutOfBoundsException      [CONTEXT]      if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }      [BUGGY]  }  else  {  if(o  ==  null)  {  return  JsonToken.NUMBER;  }  [BUGGY]      return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	replace	}  else  {  if(o  ==  null)  {  return  JsonToken.NUMBER;  }	  }    else    if(!(o    instanceof    JsonArray))    {    }    else    if(!(o    instanceof    JsonArray))    {    case    JsonToken.BEGIN_OBJECT:    return    JsonToken.BEGIN_ARRAY;    	non-compiled	[CE]  'else'  without  'if'	217	None	replace
1900	[BUG]  [BUGGY]  aughtExceptionHandler(iterator.next(),  JsonToken.BEGIN_OBJECT);  [CE]  cannot  find  symbol  [FE]                            ArrayIndexOutOfBoundsException      [CONTEXT]      if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }      [BUGGY]  aughtExceptionHandler(iterator.next(),  JsonToken.BEGIN_OBJECT);  [BUGGY]      return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	replace	aughtExceptionHandler(iterator.next(),  JsonToken.BEGIN_OBJECT);	  if(o    instanceof    JsonArray)    {    if(isObject)    {    push(iterator.next());    return    JsonToken.NAME;    }    	non-compiled	[CE]  cannot  find  symbol	36	None	replace
1901	[BUG]  [BUGGY]  aughtExceptionHandler(iterator.next(),  JsonToken.NAME);  [CE]  cannot  find  symbol  [FE]                              ArrayIndexOutOfBoundsException      [CONTEXT]      if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }      [BUGGY]  aughtExceptionHandler(iterator.next(),  JsonToken.NAME);  [BUGGY]      return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	replace	aughtExceptionHandler(iterator.next(),  JsonToken.NAME);	  if(o    instanceof    JsonArray)    {    if(isObject)    {    push(iterator.next());    return    JsonToken.NAME;    }    	non-compiled	[CE]  cannot  find  symbol	36	None	replace
1902	[BUG]  [BUGGY]  aughtExceptionHandler(iterator.next(),  JsonToken.END_OBJECT);  [CE]  cannot  find  symbol  [FE]                                ArrayIndexOutOfBoundsException      [CONTEXT]      if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }      [BUGGY]  aughtExceptionHandler(iterator.next(),  JsonToken.END_OBJECT);  [BUGGY]      return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	replace	aughtExceptionHandler(iterator.next(),  JsonToken.END_OBJECT);	  if(o    instanceof    JsonArray)    {    if(isObject)    {    push(iterator.next());    return    JsonToken.NAME;    }    	non-compiled	[CE]  cannot  find  symbol	36	None	replace
1903	[BUG]  [BUGGY]  if(isObject)  {  push(iterator.next());  return  JsonToken.BEGIN_OBJECT;  }  [CE]  unreachable  statement  [FE]                                  ArrayIndexOutOfBoundsException      [CONTEXT]      if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }      [BUGGY]  if(isObject)  {  push(iterator.next());  return  JsonToken.BEGIN_OBJECT;  }  [BUGGY]      return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	replace	if(isObject)  {  push(iterator.next());  return  JsonToken.BEGIN_OBJECT;  }	  if(o    instanceof    JsonArray)    {    if(isObject)    {    push(iterator.next());    return    JsonToken.NAME;    }    	non-compiled	[CE]  unreachable  statement	36	None	replace
1904	[BUG]  [BUGGY]  }  else  if(o  instanceof  JsonObject  ==  ||  o  instanceof  JsonPrimitive)  {  [CE]  illegal  start  of  expression  [FE]              ArrayIndexOutOfBoundsException      [CONTEXT]      if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }      [BUGGY]  }  else  if(o  instanceof  JsonObject  ==  ||  o  instanceof  JsonPrimitive)  {  [BUGGY]      return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	replace	}  else  if(o  instanceof  JsonObject  ==  ||  o  instanceof  JsonPrimitive)  {	  }    else    if(o    instanceof    JsonObject    ==    {    	non-compiled	[CE]  illegal  start  of  expression	31	None	replace
1905	[BUG]  [BUGGY]  }  else  if(o  instanceof  JsonObject  ==  ||  o  instanceof  String)  {  [CE]  illegal  start  of  expression  [FE]                ArrayIndexOutOfBoundsException      [CONTEXT]      if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }      [BUGGY]  }  else  if(o  instanceof  JsonObject  ==  ||  o  instanceof  String)  {  [BUGGY]      return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	replace	}  else  if(o  instanceof  JsonObject  ==  ||  o  instanceof  String)  {	  }    else    if(o    instanceof    JsonObject    ==    {    	non-compiled	[CE]  illegal  start  of  expression	31	None	replace
1906	[BUG]  [BUGGY]  }  else  if(o  instanceof  JsonArray)  {  }  else  if(o  instanceof  JsonObject  ||  o  instanceof  JsonPrimitive)  {  return  JsonToken.BEGIN_OBJECT;  }  [CE]  illegal  start  of  type  [FE]              ArrayIndexOutOfBoundsException      [CONTEXT]      if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }      [BUGGY]  }  else  if(o  instanceof  JsonArray)  {  }  else  if(o  instanceof  JsonObject  ||  o  instanceof  JsonPrimitive)  {  return  JsonToken.BEGIN_OBJECT;  }  [BUGGY]      return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	replace	}  else  if(o  instanceof  JsonArray)  {  }  else  if(o  instanceof  JsonObject  ||  o  instanceof  JsonPrimitive)  {  return  JsonToken.BEGIN_OBJECT;  }	  }    else    if(o    instanceof    JsonObject    ||    o    instanceof    JsonPrimitive)    {    }    else    if(o    instanceof    JsonObject    ||    o    instanceof    JsonPrimitive)    <    return    JsonToken.BEGIN_OBJECT;    	non-compiled	[CE]  illegal  start  of  type	59	None	replace
1907	[BUG]  [BUGGY]  }  else  if(o  instanceof  JsonArray)  {  }  else  if(o  instanceof  JsonObject  ||  o  instanceof  JsonPrimitive)  <  return  JsonToken.BEGIN_OBJECT;  [CE]  illegal  start  of  type  [FE]                ArrayIndexOutOfBoundsException      [CONTEXT]      if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }      [BUGGY]  }  else  if(o  instanceof  JsonArray)  {  }  else  if(o  instanceof  JsonObject  ||  o  instanceof  JsonPrimitive)  <  return  JsonToken.BEGIN_OBJECT;  [BUGGY]      return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	replace	}  else  if(o  instanceof  JsonArray)  {  }  else  if(o  instanceof  JsonObject  ||  o  instanceof  JsonPrimitive)  <  return  JsonToken.BEGIN_OBJECT;	  }    else    if(o    instanceof    JsonObject    ||    o    instanceof    JsonPrimitive)    {    }    else    if(o    instanceof    JsonObject    ||    o    instanceof    JsonPrimitive)    <    return    JsonToken.BEGIN_OBJECT;    	non-compiled	[CE]  illegal  start  of  type	59	None	replace
1908	[BUG]  [BUGGY]  Integer  o  =(Integer)iterator.getObject();  [CE]  variable  o  is  already  defined  in  method  peek()  [FE]                        ArrayIndexOutOfBoundsException      [CONTEXT]      if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }      [BUGGY]  Integer  o  =(Integer)iterator.getObject();  [BUGGY]      return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	replace	Integer  o  =(Integer)iterator.getObject();	  Integer    o    =(Integer)iterator.next();    	non-compiled	[CE]  variable  o  is  already  defined  in  method  peek()	34	None	replace
1909	[BUG]  [BUGGY]  Integer  o  =(Integer)iterator.previous();  [CE]  variable  o  is  already  defined  in  method  peek()  [FE]                          ArrayIndexOutOfBoundsException      [CONTEXT]      if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }      [BUGGY]  Integer  o  =(Integer)iterator.previous();  [BUGGY]      return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	replace	Integer  o  =(Integer)iterator.previous();	  Integer    o    =(Integer)iterator.next();    	non-compiled	[CE]  variable  o  is  already  defined  in  method  peek()	34	None	replace
1910	[BUG]  [BUGGY]  }  else  if(o  instanceof  JsonNull  ||!(o  instanceof  JsonNull  &&  Object.class))  {  [CE]  bad  operand  types  for  binary  operator  '&&'  [FE]                AssertionError      [CONTEXT]      if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }      [BUGGY]  }  else  if(o  instanceof  JsonNull  ||!(o  instanceof  JsonNull  &&  Object.class))  {  [BUGGY]      return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	replace	}  else  if(o  instanceof  JsonNull  ||!(o  instanceof  JsonNull  &&  Object.class))  {	  }    else    if(o    instanceof    JsonNull    ||!(o    instanceof    JsonNull    &&    isObject))    {    	non-compiled	[CE]  bad  operand  types  for  binary  operator  '&&'	7	None	replace
1911	[BUG]  [BUGGY]  }  else  if(o  instanceof  JsonNull  ||!(o  instanceof  JsonNull  &&  array.length  >  0))  {  [CE]  cannot  find  symbol  array  [FE]                  AssertionError      [CONTEXT]      if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }      [BUGGY]  }  else  if(o  instanceof  JsonNull  ||!(o  instanceof  JsonNull  &&  array.length  >  0))  {  [BUGGY]      return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	replace	}  else  if(o  instanceof  JsonNull  ||!(o  instanceof  JsonNull  &&  array.length  >  0))  {	  }    else    if(o    instanceof    JsonNull    ||!(o    instanceof    JsonNull    &&    isObject))    {    	non-compiled	[CE]  cannot  find  symbol  array	7	None	replace
1912	[BUG]  [BUGGY]  }  else  if(o  instanceof  JsonObject)  {  return  JsonToken.BEGIN_ARRAY;  [CE]  unreachable  statement  [FE]            AssertionError      [CONTEXT]      if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }      [BUGGY]  }  else  if(o  instanceof  JsonObject)  {  return  JsonToken.BEGIN_ARRAY;  [BUGGY]      return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	replace	}  else  if(o  instanceof  JsonObject)  {  return  JsonToken.BEGIN_ARRAY;	  }    else    if(o    instanceof    JsonArray)    {    }    else    if(o    instanceof    JsonArray)    <    return    JsonToken.BEGIN_ARRAY;    	non-compiled	[CE]  unreachable  statement	204	None	replace
1913	[BUG]  [BUGGY]  [FE]  ArrayIndexOutOfBoundsException  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]      if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }      [BUGGY]  }  else  if(o  instanceof  JsonObject  &&  o  instanceof  JsonObject)  {  [BUGGY]      return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	add	}  else  if(o  instanceof  JsonObject  &&  o  instanceof  JsonObject)  {	  }    else    if(o    instanceof    JsonObject    ||    o    instanceof    JsonObject)    {    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	180	2	replace
1914	[BUG]  [BUGGY]  }  else  if(o  instanceof  JsonObject  &&  o  instanceof  JsonObject)  {  [FE]  ArrayIndexOutOfBoundsException  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]      if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }      [BUGGY]  }  else  if(o  instanceof  JsonObject  &&  o  instanceof  JsonObject)  {  [BUGGY]      return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	replace	}  else  if(o  instanceof  JsonObject  &&  o  instanceof  JsonObject)  {	  }    else    if(o    instanceof    JsonObject    ||    o    instanceof    JsonObject)    {    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	180	2	replace
1915	[BUG]  [BUGGY]  if(stack.size()  >  stackSize)  {  Object[]  stack  =(Object[])o;  push(stack.size()  -  stack.length);  return  JsonToken.NAME;  }  [CE]  cannot  find  symbol  [FE]                              ArrayIndexOutOfBoundsException      [CONTEXT]      if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }      [BUGGY]  if(stack.size()  >  stackSize)  {  Object[]  stack  =(Object[])o;  push(stack.size()  -  stack.length);  return  JsonToken.NAME;  }  [BUGGY]      return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	replace	if(stack.size()  >  stackSize)  {  Object[]  stack  =(Object[])o;  push(stack.size()  -  stack.length);  return  JsonToken.NAME;  }	  if(o    instanceof    JsonArray)    {    Object[]    stack    =(Object[])o;    push(stack.size()    -    stack.length);    return    JsonToken.NAME;    }    	non-compiled	[CE]  cannot  find  symbol	37	None	replace
1916	[BUG]  [BUGGY]  if(o  instanceof  JsonArray)  {  Object[]  stack  =(Object[])stack.clone();  push(stack.size()  -  stack.length);  return  JsonToken.NAME;  }  [CE]  cannot  find  symbol  [FE]                                ArrayIndexOutOfBoundsException      [CONTEXT]      if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }      [BUGGY]  if(o  instanceof  JsonArray)  {  Object[]  stack  =(Object[])stack.clone();  push(stack.size()  -  stack.length);  return  JsonToken.NAME;  }  [BUGGY]      return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	replace	if(o  instanceof  JsonArray)  {  Object[]  stack  =(Object[])stack.clone();  push(stack.size()  -  stack.length);  return  JsonToken.NAME;  }	  if(o    instanceof    JsonArray)    {    Object[]    stack    =(Object[])o;    push(stack.size()    -    stack.length);    return    JsonToken.NAME;    }    	non-compiled	[CE]  cannot  find  symbol	37	None	replace
1917	[BUG]  [BUGGY]  Object[]  stack  =(Object[])stack.clone();  push(stack.size()  -  stack.length);  return  JsonToken.NAME;  }  [CE]  illegal  start  of  type  [FE]                                  ArrayIndexOutOfBoundsException      [CONTEXT]      if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }      [BUGGY]  Object[]  stack  =(Object[])stack.clone();  push(stack.size()  -  stack.length);  return  JsonToken.NAME;  }  [BUGGY]      return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	replace	Object[]  stack  =(Object[])stack.clone();  push(stack.size()  -  stack.length);  return  JsonToken.NAME;  }	  if(o    instanceof    JsonArray)    {    Object[]    stack    =(Object[])o;    push(stack.size()    -    stack.length);    return    JsonToken.NAME;    }    	non-compiled	[CE]  illegal  start  of  type	37	None	replace
1918	[BUG]  [BUGGY]  }  else  if(o  instanceof  JsonNumber  &&  isObject  &&  isObject)  {  [CE]  cannot  find  symbol  [FE]                    ArrayIndexOutOfBoundsException      [CONTEXT]      if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }      [BUGGY]  }  else  if(o  instanceof  JsonNumber  &&  isObject  &&  isObject)  {  [BUGGY]      return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	replace	}  else  if(o  instanceof  JsonNumber  &&  isObject  &&  isObject)  {	  }    else    if(o    instanceof    JsonNumber    &&    isObject)    {    	non-compiled	[CE]  cannot  find  symbol	112	None	replace
1919	[BUG]  [BUGGY]  }  else  if(o  instanceof  JsonNumber  &&  isObject  &&  isPrimitive)  {  [CE]  cannot  find  symbol  [FE]                      ArrayIndexOutOfBoundsException      [CONTEXT]      if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }      [BUGGY]  }  else  if(o  instanceof  JsonNumber  &&  isObject  &&  isPrimitive)  {  [BUGGY]      return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	replace	}  else  if(o  instanceof  JsonNumber  &&  isObject  &&  isPrimitive)  {	  }    else    if(o    instanceof    JsonNumber    &&    isObject)    {    	non-compiled	[CE]  cannot  find  symbol	112	None	replace
1920	[BUG]  [BUGGY]  }  else  if(o  instanceof  JsonNumber  &&  isObject  &&  isCollection())  {  [CE]  cannot  find  symbol  [FE]                        ArrayIndexOutOfBoundsException      [CONTEXT]      if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }      [BUGGY]  }  else  if(o  instanceof  JsonNumber  &&  isObject  &&  isCollection())  {  [BUGGY]      return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	replace	}  else  if(o  instanceof  JsonNumber  &&  isObject  &&  isCollection())  {	  }    else    if(o    instanceof    JsonNumber    &&    isObject)    {    	non-compiled	[CE]  cannot  find  symbol	112	None	replace
1921	[BUG]  [BUGGY]  }  else  if(isObject  instanceof  JsonNumber  &&  o  instanceof  JsonArray)  {  [CE]  cannot  find  symbol  isObject  [FE]                          ArrayIndexOutOfBoundsException      [CONTEXT]      if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }      [BUGGY]  }  else  if(isObject  instanceof  JsonNumber  &&  o  instanceof  JsonArray)  {  [BUGGY]      return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	replace	}  else  if(isObject  instanceof  JsonNumber  &&  o  instanceof  JsonArray)  {	  }    else    if(o    instanceof    JsonNumber    &&    isObject)    {    	non-compiled	[CE]  cannot  find  symbol  isObject	112	None	replace
1922	[BUG]  [BUGGY]  }  else  if(!(o  instanceof  JsonArray  ||  o  instanceof  JsonPrimitive))  {  }  else  if(!(o  instanceof  JsonArray  ||  o  instanceof  JsonPrimitive))  {  return  JsonToken.BEGIN_OBJECT;  }  else  if(!(o  instanceof  JsonArray  ||  o  instanceof  JsonPrimitive))  {  [CE]  missing  return  statement  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]      if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }      [BUGGY]  }  else  if(!(o  instanceof  JsonArray  ||  o  instanceof  JsonPrimitive))  {  }  else  if(!(o  instanceof  JsonArray  ||  o  instanceof  JsonPrimitive))  {  return  JsonToken.BEGIN_OBJECT;  }  else  if(!(o  instanceof  JsonArray  ||  o  instanceof  JsonPrimitive))  {  [BUGGY]      return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	replace	}    else    if(!(o    instanceof    JsonArray    ||    o    instanceof    JsonPrimitive))    {    }  else  if(!(o  instanceof  JsonArray  ||  o  instanceof  JsonPrimitive))  {  return  JsonToken.BEGIN_OBJECT;  }  else  if(!(o  instanceof  JsonArray  ||  o  instanceof  JsonPrimitive))  {	  	non-compiled	[CE]  missing  return  statement	145	None	add
1923	[BUG]  [BUGGY]  }  else  if(!(o  instanceof  JsonArray  ||  o  instanceof  JsonPrimitive))  {  }  else  if(!(o  instanceof  JsonArray  ||  o  instanceof  JsonPrimitive))  {  aught  return  JsonToken.BEGIN_OBJECT;  }  else  if(!(o  instanceof  JsonArray  ||  o  instanceof  JsonPrimitive))  {  [CE]  not  a  statement  [FE]      ArrayIndexOutOfBoundsException    [CONTEXT]      if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }      [BUGGY]  }  else  if(!(o  instanceof  JsonArray  ||  o  instanceof  JsonPrimitive))  {  }  else  if(!(o  instanceof  JsonArray  ||  o  instanceof  JsonPrimitive))  {  aught  return  JsonToken.BEGIN_OBJECT;  }  else  if(!(o  instanceof  JsonArray  ||  o  instanceof  JsonPrimitive))  {  [BUGGY]      return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	replace	}    else    if(!(o    instanceof    JsonArray    ||    o    instanceof    JsonPrimitive))    {    }  else  if(!(o  instanceof  JsonArray  ||  o  instanceof  JsonPrimitive))  {  aught  return  JsonToken.BEGIN_OBJECT;  }  else  if(!(o  instanceof  JsonArray  ||  o  instanceof  JsonPrimitive))  {	  	non-compiled	[CE]  not  a  statement	145	None	add
1924	[BUG]  [BUGGY]  }  else  if(!(o  instanceof  JsonArray  ||  o  instanceof  JsonPrimitive))  {  }  else  if(!(o  instanceof  JsonArray  ||  o  instanceof  JsonPrimitive))  {  return  JsonToken.BEGIN_OBJECT;  }  else  if(!(o  instanceof  JsonObject  ||  o  instanceof  JsonPrimitive))  {  [CE]  missing  return  statement  [FE]        ArrayIndexOutOfBoundsException    [CONTEXT]      if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }      [BUGGY]  }  else  if(!(o  instanceof  JsonArray  ||  o  instanceof  JsonPrimitive))  {  }  else  if(!(o  instanceof  JsonArray  ||  o  instanceof  JsonPrimitive))  {  return  JsonToken.BEGIN_OBJECT;  }  else  if(!(o  instanceof  JsonObject  ||  o  instanceof  JsonPrimitive))  {  [BUGGY]      return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	replace	}    else    if(!(o    instanceof    JsonArray    ||    o    instanceof    JsonPrimitive))    {    }  else  if(!(o  instanceof  JsonArray  ||  o  instanceof  JsonPrimitive))  {  return  JsonToken.BEGIN_OBJECT;  }  else  if(!(o  instanceof  JsonObject  ||  o  instanceof  JsonPrimitive))  {	  	non-compiled	[CE]  missing  return  statement	145	None	add
1925	[BUG]  [BUGGY]  }  else  if(!(o  instanceof  JsonArray  ||  o  instanceof  JsonPrimitive))  {  }  else  if(!(o  instanceof  JsonArray  ||  o  instanceof  JsonPrimitive))  {  returned  JsonToken.BEGIN_OBJECT;  }  else  if(!(o  instanceof  JsonArray  ||  o  instanceof  JsonPrimitive))  {  [CE]  ';'  expected  [FE]          ArrayIndexOutOfBoundsException    [CONTEXT]      if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }      [BUGGY]  }  else  if(!(o  instanceof  JsonArray  ||  o  instanceof  JsonPrimitive))  {  }  else  if(!(o  instanceof  JsonArray  ||  o  instanceof  JsonPrimitive))  {  returned  JsonToken.BEGIN_OBJECT;  }  else  if(!(o  instanceof  JsonArray  ||  o  instanceof  JsonPrimitive))  {  [BUGGY]      return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	replace	}    else    if(!(o    instanceof    JsonArray    ||    o    instanceof    JsonPrimitive))    {    }  else  if(!(o  instanceof  JsonArray  ||  o  instanceof  JsonPrimitive))  {  returned  JsonToken.BEGIN_OBJECT;  }  else  if(!(o  instanceof  JsonArray  ||  o  instanceof  JsonPrimitive))  {	  	non-compiled	[CE]  ';'  expected	145	None	add
1926	[BUG]  [BUGGY]  }  else  if(!(o  instanceof  JsonArray  ||  o  instanceof  JsonPrimitive))  {  }  else  if(!(o  instanceof  JsonArray  ||  o  instanceof  JsonPrimitive))  {  return  JsonToken.BEGIN_OBJECT;  }  else  if(!(o  instanceof  JsonArray))  {  [CE]  missing  return  statement  [FE]            ArrayIndexOutOfBoundsException    [CONTEXT]      if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }      [BUGGY]  }  else  if(!(o  instanceof  JsonArray  ||  o  instanceof  JsonPrimitive))  {  }  else  if(!(o  instanceof  JsonArray  ||  o  instanceof  JsonPrimitive))  {  return  JsonToken.BEGIN_OBJECT;  }  else  if(!(o  instanceof  JsonArray))  {  [BUGGY]      return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	replace	}    else    if(!(o    instanceof    JsonArray    ||    o    instanceof    JsonPrimitive))    {    }  else  if(!(o  instanceof  JsonArray  ||  o  instanceof  JsonPrimitive))  {  return  JsonToken.BEGIN_OBJECT;  }  else  if(!(o  instanceof  JsonArray))  {	  	non-compiled	[CE]  missing  return  statement	145	None	add
1927	[BUG]  [BUGGY]  }  else  if(!(o  instanceof  JsonArray  ||  o  instanceof  JsonPrimitive))  {  }  else  if(!(o  instanceof  JsonArray  ||  o  instanceof  JsonPrimitive))  <  return  JsonToken.BEGIN_OBJECT;  }  else  if(!(o  instanceof  JsonArray  ||  o  instanceof  JsonPrimitive))  {  [CE]  illegal  start  of  type  [FE]              ArrayIndexOutOfBoundsException    [CONTEXT]      if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  return  isObject  ?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  }      [BUGGY]  }  else  if(!(o  instanceof  JsonArray  ||  o  instanceof  JsonPrimitive))  {  }  else  if(!(o  instanceof  JsonArray  ||  o  instanceof  JsonPrimitive))  <  return  JsonToken.BEGIN_OBJECT;  }  else  if(!(o  instanceof  JsonArray  ||  o  instanceof  JsonPrimitive))  {  [BUGGY]      return  JsonToken.BEGIN_OBJECT;  }  else  if  (o  instanceof  JsonArray)  {  return  JsonToken.BEGIN_ARRAY;  }  else  if  (o  instanceof  JsonPrimitive)  {  JsonPrimitive  primitive  =  (JsonPrimitive)  o;  if  (primitive.isString())  {  return  JsonToken.STRING;  }  else  if  (primitive.isBoolean())  {  return  JsonToken.BOOLEAN;  }  else  if  (primitive.isNumber())  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	125	125	2	replace	}    else    if(!(o    instanceof    JsonArray    ||    o    instanceof    JsonPrimitive))    {    }  else  if(!(o  instanceof  JsonArray  ||  o  instanceof  JsonPrimitive))  <  return  JsonToken.BEGIN_OBJECT;  }  else  if(!(o  instanceof  JsonArray  ||  o  instanceof  JsonPrimitive))  {	  	non-compiled	[CE]  illegal  start  of  type	145	None	add
