bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  if(stackSize  ==  newTop)  {  if(stackSize  ==  newTop)  {  [CE]  ';'  expected  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]    private  void  push(Object  newTop)  {    [BUGGY]  if(stackSize  ==  newTop)  {  if(stackSize  ==  newTop)  {  [BUGGY]    Object[]  newStack  =  new  Object[stackSize  *  2];  int[]  newPathIndices  =  new  int[stackSize  *  2];  String[]  newPathNames  =  new  String[stackSize  *  2];  System.arraycopy(stack,  0,  newStack,  0,  stackSize);  System.arraycopy(pathIndices,  0,  newPathIndices,  0,  stackSize);  System.arraycopy(pathNames,  0,  newPathNames,  0,  stackSize);  stack  =  newStack;  pathIndices  =  newPathIndices;  pathNames  =  newPathNames;  }  [CLASS]  JsonTreeReader  1  [METHOD]  push  [RETURN_TYPE]  void  Object  newTop  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  newTop  o  result  int[]  newPathIndices  pathIndices  String[]  newPathNames  pathNames  Object[]  newStack  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	280	280	2	replace	if(stackSize    ==    newTop)    {    if(stackSize  ==  newTop)  {	  	non-compiled	[CE]  ';'  expected	16	None	add
2	[BUG]  [BUGGY]  if(stackSize  ==  newTop)  {  if(stackSize!=  newTop)  {  [CE]  ';'  expected  [FE]      ArrayIndexOutOfBoundsException    [CONTEXT]    private  void  push(Object  newTop)  {    [BUGGY]  if(stackSize  ==  newTop)  {  if(stackSize!=  newTop)  {  [BUGGY]    Object[]  newStack  =  new  Object[stackSize  *  2];  int[]  newPathIndices  =  new  int[stackSize  *  2];  String[]  newPathNames  =  new  String[stackSize  *  2];  System.arraycopy(stack,  0,  newStack,  0,  stackSize);  System.arraycopy(pathIndices,  0,  newPathIndices,  0,  stackSize);  System.arraycopy(pathNames,  0,  newPathNames,  0,  stackSize);  stack  =  newStack;  pathIndices  =  newPathIndices;  pathNames  =  newPathNames;  }  [CLASS]  JsonTreeReader  1  [METHOD]  push  [RETURN_TYPE]  void  Object  newTop  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  newTop  o  result  int[]  newPathIndices  pathIndices  String[]  newPathNames  pathNames  Object[]  newStack  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	280	280	2	replace	if(stackSize    ==    newTop)    {    if(stackSize!=  newTop)  {	  	non-compiled	[CE]  ';'  expected	16	None	add
3	[BUG]  [BUGGY]  if(stackSize  ==  newTop)  {  if(stackSize  >=  newTop)  {  [CE]  ';'  expected  [FE]        ArrayIndexOutOfBoundsException    [CONTEXT]    private  void  push(Object  newTop)  {    [BUGGY]  if(stackSize  ==  newTop)  {  if(stackSize  >=  newTop)  {  [BUGGY]    Object[]  newStack  =  new  Object[stackSize  *  2];  int[]  newPathIndices  =  new  int[stackSize  *  2];  String[]  newPathNames  =  new  String[stackSize  *  2];  System.arraycopy(stack,  0,  newStack,  0,  stackSize);  System.arraycopy(pathIndices,  0,  newPathIndices,  0,  stackSize);  System.arraycopy(pathNames,  0,  newPathNames,  0,  stackSize);  stack  =  newStack;  pathIndices  =  newPathIndices;  pathNames  =  newPathNames;  }  [CLASS]  JsonTreeReader  1  [METHOD]  push  [RETURN_TYPE]  void  Object  newTop  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  newTop  o  result  int[]  newPathIndices  pathIndices  String[]  newPathNames  pathNames  Object[]  newStack  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	280	280	2	replace	if(stackSize    ==    newTop)    {    if(stackSize  >=  newTop)  {	  	non-compiled	[CE]  ';'  expected	16	None	add
4	[BUG]  [BUGGY]  if(stackSize  ==  newTop)  {  if(stackSize  >>  newTop)  {  [CE]  ';'  expected  [FE]          ArrayIndexOutOfBoundsException    [CONTEXT]    private  void  push(Object  newTop)  {    [BUGGY]  if(stackSize  ==  newTop)  {  if(stackSize  >>  newTop)  {  [BUGGY]    Object[]  newStack  =  new  Object[stackSize  *  2];  int[]  newPathIndices  =  new  int[stackSize  *  2];  String[]  newPathNames  =  new  String[stackSize  *  2];  System.arraycopy(stack,  0,  newStack,  0,  stackSize);  System.arraycopy(pathIndices,  0,  newPathIndices,  0,  stackSize);  System.arraycopy(pathNames,  0,  newPathNames,  0,  stackSize);  stack  =  newStack;  pathIndices  =  newPathIndices;  pathNames  =  newPathNames;  }  [CLASS]  JsonTreeReader  1  [METHOD]  push  [RETURN_TYPE]  void  Object  newTop  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  newTop  o  result  int[]  newPathIndices  pathIndices  String[]  newPathNames  pathNames  Object[]  newStack  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	280	280	2	replace	if(stackSize    ==    newTop)    {    if(stackSize  >>  newTop)  {	  	non-compiled	[CE]  ';'  expected	16	None	add
5	[BUG]  [BUGGY]  if(stackSize  ==  newTop)  {  If(stackSize  ==  newTop)  {  [CE]  ';'  expected  [FE]            ArrayIndexOutOfBoundsException    [CONTEXT]    private  void  push(Object  newTop)  {    [BUGGY]  if(stackSize  ==  newTop)  {  If(stackSize  ==  newTop)  {  [BUGGY]    Object[]  newStack  =  new  Object[stackSize  *  2];  int[]  newPathIndices  =  new  int[stackSize  *  2];  String[]  newPathNames  =  new  String[stackSize  *  2];  System.arraycopy(stack,  0,  newStack,  0,  stackSize);  System.arraycopy(pathIndices,  0,  newPathIndices,  0,  stackSize);  System.arraycopy(pathNames,  0,  newPathNames,  0,  stackSize);  stack  =  newStack;  pathIndices  =  newPathIndices;  pathNames  =  newPathNames;  }  [CLASS]  JsonTreeReader  1  [METHOD]  push  [RETURN_TYPE]  void  Object  newTop  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  newTop  o  result  int[]  newPathIndices  pathIndices  String[]  newPathNames  pathNames  Object[]  newStack  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	280	280	2	replace	if(stackSize    ==    newTop)    {    If(stackSize  ==  newTop)  {	  	non-compiled	[CE]  ';'  expected	16	None	add
6	[BUG]  [BUGGY]  if(stackSize  ==  newTop)  {  if(stackSize  [BUGGY]  newTop)  {  [CE]  ')'  expected  [FE]              ArrayIndexOutOfBoundsException    [CONTEXT]    private  void  push(Object  newTop)  {    [BUGGY]  if(stackSize  ==  newTop)  {  if(stackSize  [BUGGY]  newTop)  {  [BUGGY]    Object[]  newStack  =  new  Object[stackSize  *  2];  int[]  newPathIndices  =  new  int[stackSize  *  2];  String[]  newPathNames  =  new  String[stackSize  *  2];  System.arraycopy(stack,  0,  newStack,  0,  stackSize);  System.arraycopy(pathIndices,  0,  newPathIndices,  0,  stackSize);  System.arraycopy(pathNames,  0,  newPathNames,  0,  stackSize);  stack  =  newStack;  pathIndices  =  newPathIndices;  pathNames  =  newPathNames;  }  [CLASS]  JsonTreeReader  1  [METHOD]  push  [RETURN_TYPE]  void  Object  newTop  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  newTop  o  result  int[]  newPathIndices  pathIndices  String[]  newPathNames  pathNames  Object[]  newStack  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	280	280	2	replace	if(stackSize    ==    newTop)    {    if(stackSize  [BUGGY]  newTop)  {	  	non-compiled	[CE]  ')'  expected	16	None	add
7	[BUG]  [BUGGY]  if(stackSize  ==  newTop)  {  if(stackSize  [PATCH]  newTop)  {  [CE]  ')'  expected  [FE]                ArrayIndexOutOfBoundsException    [CONTEXT]    private  void  push(Object  newTop)  {    [BUGGY]  if(stackSize  ==  newTop)  {  if(stackSize  [PATCH]  newTop)  {  [BUGGY]    Object[]  newStack  =  new  Object[stackSize  *  2];  int[]  newPathIndices  =  new  int[stackSize  *  2];  String[]  newPathNames  =  new  String[stackSize  *  2];  System.arraycopy(stack,  0,  newStack,  0,  stackSize);  System.arraycopy(pathIndices,  0,  newPathIndices,  0,  stackSize);  System.arraycopy(pathNames,  0,  newPathNames,  0,  stackSize);  stack  =  newStack;  pathIndices  =  newPathIndices;  pathNames  =  newPathNames;  }  [CLASS]  JsonTreeReader  1  [METHOD]  push  [RETURN_TYPE]  void  Object  newTop  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  newTop  o  result  int[]  newPathIndices  pathIndices  String[]  newPathNames  pathNames  Object[]  newStack  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	280	280	2	replace	if(stackSize    ==    newTop)    {    if(stackSize  [PATCH]  newTop)  {	  	non-compiled	[CE]  ')'  expected	16	None	add
8	[BUG]  [BUGGY]  [FE]  ArrayIndexOutOfBoundsException  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]    private  void  push(Object  newTop)  {    [BUGGY]  if(stack.length  ==  2  ||  stack.length  >  1)  {  [BUGGY]    Object[]  newStack  =  new  Object[stackSize  *  2];  int[]  newPathIndices  =  new  int[stackSize  *  2];  String[]  newPathNames  =  new  String[stackSize  *  2];  System.arraycopy(stack,  0,  newStack,  0,  stackSize);  System.arraycopy(pathIndices,  0,  newPathIndices,  0,  stackSize);  System.arraycopy(pathNames,  0,  newPathNames,  0,  stackSize);  stack  =  newStack;  pathIndices  =  newPathIndices;  pathNames  =  newPathNames;  }  [CLASS]  JsonTreeReader  1  [METHOD]  push  [RETURN_TYPE]  void  Object  newTop  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  newTop  o  result  int[]  newPathIndices  pathIndices  String[]  newPathNames  pathNames  Object[]  newStack  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	280	280	2	add	if(stack.length  ==  2  ||  stack.length  >  1)  {	  if(stack.length    ==    2    ||    stack.length    >    0)    {    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	21	2	replace
9	[BUG]  [BUGGY]  if(stack.length  ==  2  ||  stack.length  >  1)  {  [FE]  ArrayIndexOutOfBoundsException  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]    private  void  push(Object  newTop)  {    [BUGGY]  if(stack.length  ==  2  ||  stack.length  >  1)  {  [BUGGY]    Object[]  newStack  =  new  Object[stackSize  *  2];  int[]  newPathIndices  =  new  int[stackSize  *  2];  String[]  newPathNames  =  new  String[stackSize  *  2];  System.arraycopy(stack,  0,  newStack,  0,  stackSize);  System.arraycopy(pathIndices,  0,  newPathIndices,  0,  stackSize);  System.arraycopy(pathNames,  0,  newPathNames,  0,  stackSize);  stack  =  newStack;  pathIndices  =  newPathIndices;  pathNames  =  newPathNames;  }  [CLASS]  JsonTreeReader  1  [METHOD]  push  [RETURN_TYPE]  void  Object  newTop  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  newTop  o  result  int[]  newPathIndices  pathIndices  String[]  newPathNames  pathNames  Object[]  newStack  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	280	280	2	replace	if(stack.length  ==  2  ||  stack.length  >  1)  {	  if(stack.length    ==    2    ||    stack.length    >    0)    {    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	21	2	replace
10	[BUG]  [BUGGY]  [FE]  ArrayIndexOutOfBoundsException  [FE]      ArrayIndexOutOfBoundsException    [CONTEXT]    private  void  push(Object  newTop)  {    [BUGGY]  if(stack.length  ==  2  ||  stackSize  >  0)  {  [BUGGY]    Object[]  newStack  =  new  Object[stackSize  *  2];  int[]  newPathIndices  =  new  int[stackSize  *  2];  String[]  newPathNames  =  new  String[stackSize  *  2];  System.arraycopy(stack,  0,  newStack,  0,  stackSize);  System.arraycopy(pathIndices,  0,  newPathIndices,  0,  stackSize);  System.arraycopy(pathNames,  0,  newPathNames,  0,  stackSize);  stack  =  newStack;  pathIndices  =  newPathIndices;  pathNames  =  newPathNames;  }  [CLASS]  JsonTreeReader  1  [METHOD]  push  [RETURN_TYPE]  void  Object  newTop  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  newTop  o  result  int[]  newPathIndices  pathIndices  String[]  newPathNames  pathNames  Object[]  newStack  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	280	280	2	add	if(stack.length  ==  2  ||  stackSize  >  0)  {	  if(stack.length    ==    2    ||    stack.length    >    0)    {    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	21	2	replace
11	[BUG]  [BUGGY]  if(stack.length  ==  2  ||  stackSize  >  0)  {  [FE]  ArrayIndexOutOfBoundsException  [FE]      ArrayIndexOutOfBoundsException    [CONTEXT]    private  void  push(Object  newTop)  {    [BUGGY]  if(stack.length  ==  2  ||  stackSize  >  0)  {  [BUGGY]    Object[]  newStack  =  new  Object[stackSize  *  2];  int[]  newPathIndices  =  new  int[stackSize  *  2];  String[]  newPathNames  =  new  String[stackSize  *  2];  System.arraycopy(stack,  0,  newStack,  0,  stackSize);  System.arraycopy(pathIndices,  0,  newPathIndices,  0,  stackSize);  System.arraycopy(pathNames,  0,  newPathNames,  0,  stackSize);  stack  =  newStack;  pathIndices  =  newPathIndices;  pathNames  =  newPathNames;  }  [CLASS]  JsonTreeReader  1  [METHOD]  push  [RETURN_TYPE]  void  Object  newTop  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  newTop  o  result  int[]  newPathIndices  pathIndices  String[]  newPathNames  pathNames  Object[]  newStack  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	280	280	2	replace	if(stack.length  ==  2  ||  stackSize  >  0)  {	  if(stack.length    ==    2    ||    stack.length    >    0)    {    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	21	2	replace
12	[BUG]  [BUGGY]  [FE]  ArrayIndexOutOfBoundsException  [FE]        ArrayIndexOutOfBoundsException    [CONTEXT]    private  void  push(Object  newTop)  {    [BUGGY]  if(stack.length  >  2  ||  stack.length  >  0)  {  [BUGGY]    Object[]  newStack  =  new  Object[stackSize  *  2];  int[]  newPathIndices  =  new  int[stackSize  *  2];  String[]  newPathNames  =  new  String[stackSize  *  2];  System.arraycopy(stack,  0,  newStack,  0,  stackSize);  System.arraycopy(pathIndices,  0,  newPathIndices,  0,  stackSize);  System.arraycopy(pathNames,  0,  newPathNames,  0,  stackSize);  stack  =  newStack;  pathIndices  =  newPathIndices;  pathNames  =  newPathNames;  }  [CLASS]  JsonTreeReader  1  [METHOD]  push  [RETURN_TYPE]  void  Object  newTop  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  newTop  o  result  int[]  newPathIndices  pathIndices  String[]  newPathNames  pathNames  Object[]  newStack  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	280	280	2	add	if(stack.length  >  2  ||  stack.length  >  0)  {	  if(stack.length    ==    2    ||    stack.length    >    0)    {    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	21	2	replace
13	[BUG]  [BUGGY]  if(stack.length  >  2  ||  stack.length  >  0)  {  [FE]  ArrayIndexOutOfBoundsException  [FE]        ArrayIndexOutOfBoundsException    [CONTEXT]    private  void  push(Object  newTop)  {    [BUGGY]  if(stack.length  >  2  ||  stack.length  >  0)  {  [BUGGY]    Object[]  newStack  =  new  Object[stackSize  *  2];  int[]  newPathIndices  =  new  int[stackSize  *  2];  String[]  newPathNames  =  new  String[stackSize  *  2];  System.arraycopy(stack,  0,  newStack,  0,  stackSize);  System.arraycopy(pathIndices,  0,  newPathIndices,  0,  stackSize);  System.arraycopy(pathNames,  0,  newPathNames,  0,  stackSize);  stack  =  newStack;  pathIndices  =  newPathIndices;  pathNames  =  newPathNames;  }  [CLASS]  JsonTreeReader  1  [METHOD]  push  [RETURN_TYPE]  void  Object  newTop  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  newTop  o  result  int[]  newPathIndices  pathIndices  String[]  newPathNames  pathNames  Object[]  newStack  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	280	280	2	replace	if(stack.length  >  2  ||  stack.length  >  0)  {	  if(stack.length    ==    2    ||    stack.length    >    0)    {    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	21	2	replace
14	[BUG]  [BUGGY]  if(stack.length  ==  2  ||  stack.length  <  =  0)  {  [CE]  illegal  start  of  expression  [FE]          ArrayIndexOutOfBoundsException    [CONTEXT]    private  void  push(Object  newTop)  {    [BUGGY]  if(stack.length  ==  2  ||  stack.length  <  =  0)  {  [BUGGY]    Object[]  newStack  =  new  Object[stackSize  *  2];  int[]  newPathIndices  =  new  int[stackSize  *  2];  String[]  newPathNames  =  new  String[stackSize  *  2];  System.arraycopy(stack,  0,  newStack,  0,  stackSize);  System.arraycopy(pathIndices,  0,  newPathIndices,  0,  stackSize);  System.arraycopy(pathNames,  0,  newPathNames,  0,  stackSize);  stack  =  newStack;  pathIndices  =  newPathIndices;  pathNames  =  newPathNames;  }  [CLASS]  JsonTreeReader  1  [METHOD]  push  [RETURN_TYPE]  void  Object  newTop  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  newTop  o  result  int[]  newPathIndices  pathIndices  String[]  newPathNames  pathNames  Object[]  newStack  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	280	280	2	replace	if(stack.length  ==  2  ||  stack.length  <  =  0)  {	  if(stack.length    ==    2    ||    stack.length    >    0)    {    	non-compiled	[CE]  illegal  start  of  expression	21	None	replace
15	[BUG]  [BUGGY]  [FE]  ArrayIndexOutOfBoundsException  [FE]            ArrayIndexOutOfBoundsException    [CONTEXT]    private  void  push(Object  newTop)  {    [BUGGY]  if(newTop  ==  null  ||  stack.length  >  0)  {  [BUGGY]    Object[]  newStack  =  new  Object[stackSize  *  2];  int[]  newPathIndices  =  new  int[stackSize  *  2];  String[]  newPathNames  =  new  String[stackSize  *  2];  System.arraycopy(stack,  0,  newStack,  0,  stackSize);  System.arraycopy(pathIndices,  0,  newPathIndices,  0,  stackSize);  System.arraycopy(pathNames,  0,  newPathNames,  0,  stackSize);  stack  =  newStack;  pathIndices  =  newPathIndices;  pathNames  =  newPathNames;  }  [CLASS]  JsonTreeReader  1  [METHOD]  push  [RETURN_TYPE]  void  Object  newTop  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  newTop  o  result  int[]  newPathIndices  pathIndices  String[]  newPathNames  pathNames  Object[]  newStack  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	280	280	2	add	if(newTop  ==  null  ||  stack.length  >  0)  {	  if(stack.length    ==    2    ||    stack.length    >    0)    {    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	21	2	replace
16	[BUG]  [BUGGY]  if(newTop  ==  null  ||  stack.length  >  0)  {  [FE]  ArrayIndexOutOfBoundsException  [FE]            ArrayIndexOutOfBoundsException    [CONTEXT]    private  void  push(Object  newTop)  {    [BUGGY]  if(newTop  ==  null  ||  stack.length  >  0)  {  [BUGGY]    Object[]  newStack  =  new  Object[stackSize  *  2];  int[]  newPathIndices  =  new  int[stackSize  *  2];  String[]  newPathNames  =  new  String[stackSize  *  2];  System.arraycopy(stack,  0,  newStack,  0,  stackSize);  System.arraycopy(pathIndices,  0,  newPathIndices,  0,  stackSize);  System.arraycopy(pathNames,  0,  newPathNames,  0,  stackSize);  stack  =  newStack;  pathIndices  =  newPathIndices;  pathNames  =  newPathNames;  }  [CLASS]  JsonTreeReader  1  [METHOD]  push  [RETURN_TYPE]  void  Object  newTop  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  newTop  o  result  int[]  newPathIndices  pathIndices  String[]  newPathNames  pathNames  Object[]  newStack  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	280	280	2	replace	if(newTop  ==  null  ||  stack.length  >  0)  {	  if(stack.length    ==    2    ||    stack.length    >    0)    {    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	21	2	replace
17	[BUG]  [BUGGY]  [FE]  ArrayIndexOutOfBoundsException  [FE]              ArrayIndexOutOfBoundsException    [CONTEXT]    private  void  push(Object  newTop)  {    [BUGGY]  if(stack.length  ==  2  ||  stack.length  >  2)  {  [BUGGY]    Object[]  newStack  =  new  Object[stackSize  *  2];  int[]  newPathIndices  =  new  int[stackSize  *  2];  String[]  newPathNames  =  new  String[stackSize  *  2];  System.arraycopy(stack,  0,  newStack,  0,  stackSize);  System.arraycopy(pathIndices,  0,  newPathIndices,  0,  stackSize);  System.arraycopy(pathNames,  0,  newPathNames,  0,  stackSize);  stack  =  newStack;  pathIndices  =  newPathIndices;  pathNames  =  newPathNames;  }  [CLASS]  JsonTreeReader  1  [METHOD]  push  [RETURN_TYPE]  void  Object  newTop  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  newTop  o  result  int[]  newPathIndices  pathIndices  String[]  newPathNames  pathNames  Object[]  newStack  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	280	280	2	add	if(stack.length  ==  2  ||  stack.length  >  2)  {	  if(stack.length    ==    2    ||    stack.length    >    0)    {    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	21	2	replace
18	[BUG]  [BUGGY]  if(stack.length  ==  2  ||  stack.length  >  2)  {  [FE]  ArrayIndexOutOfBoundsException  [FE]              ArrayIndexOutOfBoundsException    [CONTEXT]    private  void  push(Object  newTop)  {    [BUGGY]  if(stack.length  ==  2  ||  stack.length  >  2)  {  [BUGGY]    Object[]  newStack  =  new  Object[stackSize  *  2];  int[]  newPathIndices  =  new  int[stackSize  *  2];  String[]  newPathNames  =  new  String[stackSize  *  2];  System.arraycopy(stack,  0,  newStack,  0,  stackSize);  System.arraycopy(pathIndices,  0,  newPathIndices,  0,  stackSize);  System.arraycopy(pathNames,  0,  newPathNames,  0,  stackSize);  stack  =  newStack;  pathIndices  =  newPathIndices;  pathNames  =  newPathNames;  }  [CLASS]  JsonTreeReader  1  [METHOD]  push  [RETURN_TYPE]  void  Object  newTop  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  newTop  o  result  int[]  newPathIndices  pathIndices  String[]  newPathNames  pathNames  Object[]  newStack  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	280	280	2	replace	if(stack.length  ==  2  ||  stack.length  >  2)  {	  if(stack.length    ==    2    ||    stack.length    >    0)    {    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	21	2	replace
19	[BUG]  [BUGGY]  [FE]  ArrayIndexOutOfBoundsException  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]    private  void  push(Object  newTop)  {    [BUGGY]  if(newTop!=  null  ||  stack.length  ==  0)  {  [BUGGY]    Object[]  newStack  =  new  Object[stackSize  *  2];  int[]  newPathIndices  =  new  int[stackSize  *  2];  String[]  newPathNames  =  new  String[stackSize  *  2];  System.arraycopy(stack,  0,  newStack,  0,  stackSize);  System.arraycopy(pathIndices,  0,  newPathIndices,  0,  stackSize);  System.arraycopy(pathNames,  0,  newPathNames,  0,  stackSize);  stack  =  newStack;  pathIndices  =  newPathIndices;  pathNames  =  newPathNames;  }  [CLASS]  JsonTreeReader  1  [METHOD]  push  [RETURN_TYPE]  void  Object  newTop  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  newTop  o  result  int[]  newPathIndices  pathIndices  String[]  newPathNames  pathNames  Object[]  newStack  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	280	280	2	add	if(newTop!=  null  ||  stack.length  ==  0)  {	  if(stack!=    null    ||    stack.length    ==    0)    {    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	13	2	replace
20	[BUG]  [BUGGY]  if(newTop!=  null  ||  stack.length  ==  0)  {  [FE]  ArrayIndexOutOfBoundsException  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]    private  void  push(Object  newTop)  {    [BUGGY]  if(newTop!=  null  ||  stack.length  ==  0)  {  [BUGGY]    Object[]  newStack  =  new  Object[stackSize  *  2];  int[]  newPathIndices  =  new  int[stackSize  *  2];  String[]  newPathNames  =  new  String[stackSize  *  2];  System.arraycopy(stack,  0,  newStack,  0,  stackSize);  System.arraycopy(pathIndices,  0,  newPathIndices,  0,  stackSize);  System.arraycopy(pathNames,  0,  newPathNames,  0,  stackSize);  stack  =  newStack;  pathIndices  =  newPathIndices;  pathNames  =  newPathNames;  }  [CLASS]  JsonTreeReader  1  [METHOD]  push  [RETURN_TYPE]  void  Object  newTop  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  newTop  o  result  int[]  newPathIndices  pathIndices  String[]  newPathNames  pathNames  Object[]  newStack  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	280	280	2	replace	if(newTop!=  null  ||  stack.length  ==  0)  {	  if(stack!=    null    ||    stack.length    ==    0)    {    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	13	2	replace
21	[BUG]  [BUGGY]  [FE]  ArrayIndexOutOfBoundsException  [FE]      ArrayIndexOutOfBoundsException    [CONTEXT]    private  void  push(Object  newTop)  {    [BUGGY]  if(newTop  ==  null  ||  stack.length  ==  0)  {  [BUGGY]    Object[]  newStack  =  new  Object[stackSize  *  2];  int[]  newPathIndices  =  new  int[stackSize  *  2];  String[]  newPathNames  =  new  String[stackSize  *  2];  System.arraycopy(stack,  0,  newStack,  0,  stackSize);  System.arraycopy(pathIndices,  0,  newPathIndices,  0,  stackSize);  System.arraycopy(pathNames,  0,  newPathNames,  0,  stackSize);  stack  =  newStack;  pathIndices  =  newPathIndices;  pathNames  =  newPathNames;  }  [CLASS]  JsonTreeReader  1  [METHOD]  push  [RETURN_TYPE]  void  Object  newTop  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  newTop  o  result  int[]  newPathIndices  pathIndices  String[]  newPathNames  pathNames  Object[]  newStack  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	280	280	2	add	if(newTop  ==  null  ||  stack.length  ==  0)  {	  if(stack!=    null    ||    stack.length    ==    0)    {    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	13	2	replace
22	[BUG]  [BUGGY]  if(newTop  ==  null  ||  stack.length  ==  0)  {  [FE]  ArrayIndexOutOfBoundsException  [FE]      ArrayIndexOutOfBoundsException    [CONTEXT]    private  void  push(Object  newTop)  {    [BUGGY]  if(newTop  ==  null  ||  stack.length  ==  0)  {  [BUGGY]    Object[]  newStack  =  new  Object[stackSize  *  2];  int[]  newPathIndices  =  new  int[stackSize  *  2];  String[]  newPathNames  =  new  String[stackSize  *  2];  System.arraycopy(stack,  0,  newStack,  0,  stackSize);  System.arraycopy(pathIndices,  0,  newPathIndices,  0,  stackSize);  System.arraycopy(pathNames,  0,  newPathNames,  0,  stackSize);  stack  =  newStack;  pathIndices  =  newPathIndices;  pathNames  =  newPathNames;  }  [CLASS]  JsonTreeReader  1  [METHOD]  push  [RETURN_TYPE]  void  Object  newTop  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  newTop  o  result  int[]  newPathIndices  pathIndices  String[]  newPathNames  pathNames  Object[]  newStack  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	280	280	2	replace	if(newTop  ==  null  ||  stack.length  ==  0)  {	  if(stack!=    null    ||    stack.length    ==    0)    {    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	13	2	replace
23	[BUG]  [BUGGY]  if(stack!=  null  ||  newTop  ==  0)  {  [CE]  incomparable  types:  Object  and  int  [FE]        ArrayIndexOutOfBoundsException    [CONTEXT]    private  void  push(Object  newTop)  {    [BUGGY]  if(stack!=  null  ||  newTop  ==  0)  {  [BUGGY]    Object[]  newStack  =  new  Object[stackSize  *  2];  int[]  newPathIndices  =  new  int[stackSize  *  2];  String[]  newPathNames  =  new  String[stackSize  *  2];  System.arraycopy(stack,  0,  newStack,  0,  stackSize);  System.arraycopy(pathIndices,  0,  newPathIndices,  0,  stackSize);  System.arraycopy(pathNames,  0,  newPathNames,  0,  stackSize);  stack  =  newStack;  pathIndices  =  newPathIndices;  pathNames  =  newPathNames;  }  [CLASS]  JsonTreeReader  1  [METHOD]  push  [RETURN_TYPE]  void  Object  newTop  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  newTop  o  result  int[]  newPathIndices  pathIndices  String[]  newPathNames  pathNames  Object[]  newStack  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	280	280	2	replace	if(stack!=  null  ||  newTop  ==  0)  {	  if(stack!=    null    ||    stack.length    ==    0)    {    	non-compiled	[CE]  incomparable  types:  Object  and  int	13	None	replace
24	[BUG]  [BUGGY]  if(stack!=  null  ||  newTop.length  ==  0)  {  [CE]  cannot  find  symbol  length  [FE]          ArrayIndexOutOfBoundsException    [CONTEXT]    private  void  push(Object  newTop)  {    [BUGGY]  if(stack!=  null  ||  newTop.length  ==  0)  {  [BUGGY]    Object[]  newStack  =  new  Object[stackSize  *  2];  int[]  newPathIndices  =  new  int[stackSize  *  2];  String[]  newPathNames  =  new  String[stackSize  *  2];  System.arraycopy(stack,  0,  newStack,  0,  stackSize);  System.arraycopy(pathIndices,  0,  newPathIndices,  0,  stackSize);  System.arraycopy(pathNames,  0,  newPathNames,  0,  stackSize);  stack  =  newStack;  pathIndices  =  newPathIndices;  pathNames  =  newPathNames;  }  [CLASS]  JsonTreeReader  1  [METHOD]  push  [RETURN_TYPE]  void  Object  newTop  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  newTop  o  result  int[]  newPathIndices  pathIndices  String[]  newPathNames  pathNames  Object[]  newStack  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	280	280	2	replace	if(stack!=  null  ||  newTop.length  ==  0)  {	  if(stack!=    null    ||    stack.length    ==    0)    {    	non-compiled	[CE]  cannot  find  symbol  length	13	None	replace
25	[BUG]  [BUGGY]  if(stack  ==  null  ||  newTop  ==  0)  {  [CE]  incomparable  types:  Object  and  int  [FE]            ArrayIndexOutOfBoundsException    [CONTEXT]    private  void  push(Object  newTop)  {    [BUGGY]  if(stack  ==  null  ||  newTop  ==  0)  {  [BUGGY]    Object[]  newStack  =  new  Object[stackSize  *  2];  int[]  newPathIndices  =  new  int[stackSize  *  2];  String[]  newPathNames  =  new  String[stackSize  *  2];  System.arraycopy(stack,  0,  newStack,  0,  stackSize);  System.arraycopy(pathIndices,  0,  newPathIndices,  0,  stackSize);  System.arraycopy(pathNames,  0,  newPathNames,  0,  stackSize);  stack  =  newStack;  pathIndices  =  newPathIndices;  pathNames  =  newPathNames;  }  [CLASS]  JsonTreeReader  1  [METHOD]  push  [RETURN_TYPE]  void  Object  newTop  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  newTop  o  result  int[]  newPathIndices  pathIndices  String[]  newPathNames  pathNames  Object[]  newStack  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	280	280	2	replace	if(stack  ==  null  ||  newTop  ==  0)  {	  if(stack!=    null    ||    stack.length    ==    0)    {    	non-compiled	[CE]  incomparable  types:  Object  and  int	13	None	replace
26	[BUG]  [BUGGY]  [FE]  ArrayIndexOutOfBoundsException  [FE]              ArrayIndexOutOfBoundsException    [CONTEXT]    private  void  push(Object  newTop)  {    [BUGGY]  if(stack  ==  null  ||  stack.length  ==  0)  {  [BUGGY]    Object[]  newStack  =  new  Object[stackSize  *  2];  int[]  newPathIndices  =  new  int[stackSize  *  2];  String[]  newPathNames  =  new  String[stackSize  *  2];  System.arraycopy(stack,  0,  newStack,  0,  stackSize);  System.arraycopy(pathIndices,  0,  newPathIndices,  0,  stackSize);  System.arraycopy(pathNames,  0,  newPathNames,  0,  stackSize);  stack  =  newStack;  pathIndices  =  newPathIndices;  pathNames  =  newPathNames;  }  [CLASS]  JsonTreeReader  1  [METHOD]  push  [RETURN_TYPE]  void  Object  newTop  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  newTop  o  result  int[]  newPathIndices  pathIndices  String[]  newPathNames  pathNames  Object[]  newStack  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	280	280	2	add	if(stack  ==  null  ||  stack.length  ==  0)  {	  if(stack!=    null    ||    stack.length    ==    0)    {    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	13	2	replace
27	[BUG]  [BUGGY]  if(stack  ==  null  ||  stack.length  ==  0)  {  [FE]  ArrayIndexOutOfBoundsException  [FE]              ArrayIndexOutOfBoundsException    [CONTEXT]    private  void  push(Object  newTop)  {    [BUGGY]  if(stack  ==  null  ||  stack.length  ==  0)  {  [BUGGY]    Object[]  newStack  =  new  Object[stackSize  *  2];  int[]  newPathIndices  =  new  int[stackSize  *  2];  String[]  newPathNames  =  new  String[stackSize  *  2];  System.arraycopy(stack,  0,  newStack,  0,  stackSize);  System.arraycopy(pathIndices,  0,  newPathIndices,  0,  stackSize);  System.arraycopy(pathNames,  0,  newPathNames,  0,  stackSize);  stack  =  newStack;  pathIndices  =  newPathIndices;  pathNames  =  newPathNames;  }  [CLASS]  JsonTreeReader  1  [METHOD]  push  [RETURN_TYPE]  void  Object  newTop  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  newTop  o  result  int[]  newPathIndices  pathIndices  String[]  newPathNames  pathNames  Object[]  newStack  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	280	280	2	replace	if(stack  ==  null  ||  stack.length  ==  0)  {	  if(stack!=    null    ||    stack.length    ==    0)    {    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	13	2	replace
28	[BUG]  [BUGGY]  if(stack!=  null  ||  stack.length  ==  0)  {  if(stack!=  null  ||  stack.length  ==  0)  {  [CE]  ';'  expected  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]    private  void  push(Object  newTop)  {    [BUGGY]  if(stack!=  null  ||  stack.length  ==  0)  {  if(stack!=  null  ||  stack.length  ==  0)  {  [BUGGY]    Object[]  newStack  =  new  Object[stackSize  *  2];  int[]  newPathIndices  =  new  int[stackSize  *  2];  String[]  newPathNames  =  new  String[stackSize  *  2];  System.arraycopy(stack,  0,  newStack,  0,  stackSize);  System.arraycopy(pathIndices,  0,  newPathIndices,  0,  stackSize);  System.arraycopy(pathNames,  0,  newPathNames,  0,  stackSize);  stack  =  newStack;  pathIndices  =  newPathIndices;  pathNames  =  newPathNames;  }  [CLASS]  JsonTreeReader  1  [METHOD]  push  [RETURN_TYPE]  void  Object  newTop  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  newTop  o  result  int[]  newPathIndices  pathIndices  String[]  newPathNames  pathNames  Object[]  newStack  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	280	280	2	replace	if(stack!=    null    ||    stack.length    ==    0)    {    if(stack!=  null  ||  stack.length  ==  0)  {	  	non-compiled	[CE]  ';'  expected	12	None	add
29	[BUG]  [BUGGY]  if(stack!=  null  ||  stack.length  ==  0)  {  if(stack  ==  null  ||  stack.length  ==  0)  {  [CE]  ';'  expected  [FE]      ArrayIndexOutOfBoundsException    [CONTEXT]    private  void  push(Object  newTop)  {    [BUGGY]  if(stack!=  null  ||  stack.length  ==  0)  {  if(stack  ==  null  ||  stack.length  ==  0)  {  [BUGGY]    Object[]  newStack  =  new  Object[stackSize  *  2];  int[]  newPathIndices  =  new  int[stackSize  *  2];  String[]  newPathNames  =  new  String[stackSize  *  2];  System.arraycopy(stack,  0,  newStack,  0,  stackSize);  System.arraycopy(pathIndices,  0,  newPathIndices,  0,  stackSize);  System.arraycopy(pathNames,  0,  newPathNames,  0,  stackSize);  stack  =  newStack;  pathIndices  =  newPathIndices;  pathNames  =  newPathNames;  }  [CLASS]  JsonTreeReader  1  [METHOD]  push  [RETURN_TYPE]  void  Object  newTop  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  newTop  o  result  int[]  newPathIndices  pathIndices  String[]  newPathNames  pathNames  Object[]  newStack  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	280	280	2	replace	if(stack!=    null    ||    stack.length    ==    0)    {    if(stack  ==  null  ||  stack.length  ==  0)  {	  	non-compiled	[CE]  ';'  expected	12	None	add
30	[BUG]  [BUGGY]  if(stack!=  null  ||  stack.length  ==  0)  {  if(stack  >=  null  ||  stack.length  ==  0)  {  [CE]  ';'  expected  [FE]        ArrayIndexOutOfBoundsException    [CONTEXT]    private  void  push(Object  newTop)  {    [BUGGY]  if(stack!=  null  ||  stack.length  ==  0)  {  if(stack  >=  null  ||  stack.length  ==  0)  {  [BUGGY]    Object[]  newStack  =  new  Object[stackSize  *  2];  int[]  newPathIndices  =  new  int[stackSize  *  2];  String[]  newPathNames  =  new  String[stackSize  *  2];  System.arraycopy(stack,  0,  newStack,  0,  stackSize);  System.arraycopy(pathIndices,  0,  newPathIndices,  0,  stackSize);  System.arraycopy(pathNames,  0,  newPathNames,  0,  stackSize);  stack  =  newStack;  pathIndices  =  newPathIndices;  pathNames  =  newPathNames;  }  [CLASS]  JsonTreeReader  1  [METHOD]  push  [RETURN_TYPE]  void  Object  newTop  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  newTop  o  result  int[]  newPathIndices  pathIndices  String[]  newPathNames  pathNames  Object[]  newStack  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	280	280	2	replace	if(stack!=    null    ||    stack.length    ==    0)    {    if(stack  >=  null  ||  stack.length  ==  0)  {	  	non-compiled	[CE]  ';'  expected	12	None	add
31	[BUG]  [BUGGY]  if(stack!=  null  ||  stack.length  ==  0)  {  if(stack!=  null  ||  stack.length  >=  0)  {  [CE]  ';'  expected  [FE]          ArrayIndexOutOfBoundsException    [CONTEXT]    private  void  push(Object  newTop)  {    [BUGGY]  if(stack!=  null  ||  stack.length  ==  0)  {  if(stack!=  null  ||  stack.length  >=  0)  {  [BUGGY]    Object[]  newStack  =  new  Object[stackSize  *  2];  int[]  newPathIndices  =  new  int[stackSize  *  2];  String[]  newPathNames  =  new  String[stackSize  *  2];  System.arraycopy(stack,  0,  newStack,  0,  stackSize);  System.arraycopy(pathIndices,  0,  newPathIndices,  0,  stackSize);  System.arraycopy(pathNames,  0,  newPathNames,  0,  stackSize);  stack  =  newStack;  pathIndices  =  newPathIndices;  pathNames  =  newPathNames;  }  [CLASS]  JsonTreeReader  1  [METHOD]  push  [RETURN_TYPE]  void  Object  newTop  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  newTop  o  result  int[]  newPathIndices  pathIndices  String[]  newPathNames  pathNames  Object[]  newStack  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	280	280	2	replace	if(stack!=    null    ||    stack.length    ==    0)    {    if(stack!=  null  ||  stack.length  >=  0)  {	  	non-compiled	[CE]  ';'  expected	12	None	add
32	[BUG]  [BUGGY]  if(stack!=  null  ||  stack.length  ==  0)  {  If(stack!=  null  ||  stack.length  ==  0)  {  [CE]  ';'  expected  [FE]            ArrayIndexOutOfBoundsException    [CONTEXT]    private  void  push(Object  newTop)  {    [BUGGY]  if(stack!=  null  ||  stack.length  ==  0)  {  If(stack!=  null  ||  stack.length  ==  0)  {  [BUGGY]    Object[]  newStack  =  new  Object[stackSize  *  2];  int[]  newPathIndices  =  new  int[stackSize  *  2];  String[]  newPathNames  =  new  String[stackSize  *  2];  System.arraycopy(stack,  0,  newStack,  0,  stackSize);  System.arraycopy(pathIndices,  0,  newPathIndices,  0,  stackSize);  System.arraycopy(pathNames,  0,  newPathNames,  0,  stackSize);  stack  =  newStack;  pathIndices  =  newPathIndices;  pathNames  =  newPathNames;  }  [CLASS]  JsonTreeReader  1  [METHOD]  push  [RETURN_TYPE]  void  Object  newTop  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  newTop  o  result  int[]  newPathIndices  pathIndices  String[]  newPathNames  pathNames  Object[]  newStack  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	280	280	2	replace	if(stack!=    null    ||    stack.length    ==    0)    {    If(stack!=  null  ||  stack.length  ==  0)  {	  	non-compiled	[CE]  ';'  expected	12	None	add
33	[BUG]  [BUGGY]  if(stack!=  null  ||  stack.length  ==  0)  {  if(stack  >>  null  ||  stack.length  ==  0)  {  [CE]  ';'  expected  [FE]              ArrayIndexOutOfBoundsException    [CONTEXT]    private  void  push(Object  newTop)  {    [BUGGY]  if(stack!=  null  ||  stack.length  ==  0)  {  if(stack  >>  null  ||  stack.length  ==  0)  {  [BUGGY]    Object[]  newStack  =  new  Object[stackSize  *  2];  int[]  newPathIndices  =  new  int[stackSize  *  2];  String[]  newPathNames  =  new  String[stackSize  *  2];  System.arraycopy(stack,  0,  newStack,  0,  stackSize);  System.arraycopy(pathIndices,  0,  newPathIndices,  0,  stackSize);  System.arraycopy(pathNames,  0,  newPathNames,  0,  stackSize);  stack  =  newStack;  pathIndices  =  newPathIndices;  pathNames  =  newPathNames;  }  [CLASS]  JsonTreeReader  1  [METHOD]  push  [RETURN_TYPE]  void  Object  newTop  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  newTop  o  result  int[]  newPathIndices  pathIndices  String[]  newPathNames  pathNames  Object[]  newStack  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	280	280	2	replace	if(stack!=    null    ||    stack.length    ==    0)    {    if(stack  >>  null  ||  stack.length  ==  0)  {	  	non-compiled	[CE]  ';'  expected	12	None	add
34	[BUG]  [BUGGY]  if(stack!=  null  ||  stack.length  ==  0)  {  if(stack  [Delete]  null  ||  stack.length  ==  0)  {  [CE]  ')'  expected  [FE]                ArrayIndexOutOfBoundsException    [CONTEXT]    private  void  push(Object  newTop)  {    [BUGGY]  if(stack!=  null  ||  stack.length  ==  0)  {  if(stack  [Delete]  null  ||  stack.length  ==  0)  {  [BUGGY]    Object[]  newStack  =  new  Object[stackSize  *  2];  int[]  newPathIndices  =  new  int[stackSize  *  2];  String[]  newPathNames  =  new  String[stackSize  *  2];  System.arraycopy(stack,  0,  newStack,  0,  stackSize);  System.arraycopy(pathIndices,  0,  newPathIndices,  0,  stackSize);  System.arraycopy(pathNames,  0,  newPathNames,  0,  stackSize);  stack  =  newStack;  pathIndices  =  newPathIndices;  pathNames  =  newPathNames;  }  [CLASS]  JsonTreeReader  1  [METHOD]  push  [RETURN_TYPE]  void  Object  newTop  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  newTop  o  result  int[]  newPathIndices  pathIndices  String[]  newPathNames  pathNames  Object[]  newStack  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	280	280	2	replace	if(stack!=    null    ||    stack.length    ==    0)    {    if(stack  [Delete]  null  ||  stack.length  ==  0)  {	  	non-compiled	[CE]  ')'  expected	12	None	add
35	[BUG]  [BUGGY]  [FE]  ArrayIndexOutOfBoundsException  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]    private  void  push(Object  newTop)  {    [BUGGY]  if(stack!=  null  ||  stack.length  ==  newTop)  {  [BUGGY]    Object[]  newStack  =  new  Object[stackSize  *  2];  int[]  newPathIndices  =  new  int[stackSize  *  2];  String[]  newPathNames  =  new  String[stackSize  *  2];  System.arraycopy(stack,  0,  newStack,  0,  stackSize);  System.arraycopy(pathIndices,  0,  newPathIndices,  0,  stackSize);  System.arraycopy(pathNames,  0,  newPathNames,  0,  stackSize);  stack  =  newStack;  pathIndices  =  newPathIndices;  pathNames  =  newPathNames;  }  [CLASS]  JsonTreeReader  1  [METHOD]  push  [RETURN_TYPE]  void  Object  newTop  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  newTop  o  result  int[]  newPathIndices  pathIndices  String[]  newPathNames  pathNames  Object[]  newStack  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	280	280	2	add	if(stack!=  null  ||  stack.length  ==  newTop)  {	  if(stack.length    ==    newTop)    {    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	2	2	replace
36	[BUG]  [BUGGY]  if(stack!=  null  ||  stack.length  ==  newTop)  {  [FE]  ArrayIndexOutOfBoundsException  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]    private  void  push(Object  newTop)  {    [BUGGY]  if(stack!=  null  ||  stack.length  ==  newTop)  {  [BUGGY]    Object[]  newStack  =  new  Object[stackSize  *  2];  int[]  newPathIndices  =  new  int[stackSize  *  2];  String[]  newPathNames  =  new  String[stackSize  *  2];  System.arraycopy(stack,  0,  newStack,  0,  stackSize);  System.arraycopy(pathIndices,  0,  newPathIndices,  0,  stackSize);  System.arraycopy(pathNames,  0,  newPathNames,  0,  stackSize);  stack  =  newStack;  pathIndices  =  newPathIndices;  pathNames  =  newPathNames;  }  [CLASS]  JsonTreeReader  1  [METHOD]  push  [RETURN_TYPE]  void  Object  newTop  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  newTop  o  result  int[]  newPathIndices  pathIndices  String[]  newPathNames  pathNames  Object[]  newStack  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	280	280	2	replace	if(stack!=  null  ||  stack.length  ==  newTop)  {	  if(stack.length    ==    newTop)    {    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	2	2	replace
37	[BUG]  [BUGGY]  [FE]  ArrayIndexOutOfBoundsException  [FE]      ArrayIndexOutOfBoundsException    [CONTEXT]    private  void  push(Object  newTop)  {    [BUGGY]  if(stack  ==  null  ||  stack.length  ==  newTop)  {  [BUGGY]    Object[]  newStack  =  new  Object[stackSize  *  2];  int[]  newPathIndices  =  new  int[stackSize  *  2];  String[]  newPathNames  =  new  String[stackSize  *  2];  System.arraycopy(stack,  0,  newStack,  0,  stackSize);  System.arraycopy(pathIndices,  0,  newPathIndices,  0,  stackSize);  System.arraycopy(pathNames,  0,  newPathNames,  0,  stackSize);  stack  =  newStack;  pathIndices  =  newPathIndices;  pathNames  =  newPathNames;  }  [CLASS]  JsonTreeReader  1  [METHOD]  push  [RETURN_TYPE]  void  Object  newTop  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  newTop  o  result  int[]  newPathIndices  pathIndices  String[]  newPathNames  pathNames  Object[]  newStack  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	280	280	2	add	if(stack  ==  null  ||  stack.length  ==  newTop)  {	  if(stack.length    ==    newTop)    {    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	2	2	replace
38	[BUG]  [BUGGY]  if(stack  ==  null  ||  stack.length  ==  newTop)  {  [FE]  ArrayIndexOutOfBoundsException  [FE]      ArrayIndexOutOfBoundsException    [CONTEXT]    private  void  push(Object  newTop)  {    [BUGGY]  if(stack  ==  null  ||  stack.length  ==  newTop)  {  [BUGGY]    Object[]  newStack  =  new  Object[stackSize  *  2];  int[]  newPathIndices  =  new  int[stackSize  *  2];  String[]  newPathNames  =  new  String[stackSize  *  2];  System.arraycopy(stack,  0,  newStack,  0,  stackSize);  System.arraycopy(pathIndices,  0,  newPathIndices,  0,  stackSize);  System.arraycopy(pathNames,  0,  newPathNames,  0,  stackSize);  stack  =  newStack;  pathIndices  =  newPathIndices;  pathNames  =  newPathNames;  }  [CLASS]  JsonTreeReader  1  [METHOD]  push  [RETURN_TYPE]  void  Object  newTop  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  newTop  o  result  int[]  newPathIndices  pathIndices  String[]  newPathNames  pathNames  Object[]  newStack  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	280	280	2	replace	if(stack  ==  null  ||  stack.length  ==  newTop)  {	  if(stack.length    ==    newTop)    {    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	2	2	replace
39	[BUG]  [BUGGY]  if(stack!=  null  ||  newTop  ==  stack.length)  {  [CE]  incomparable  types:  Object  and  int  [FE]        ArrayIndexOutOfBoundsException    [CONTEXT]    private  void  push(Object  newTop)  {    [BUGGY]  if(stack!=  null  ||  newTop  ==  stack.length)  {  [BUGGY]    Object[]  newStack  =  new  Object[stackSize  *  2];  int[]  newPathIndices  =  new  int[stackSize  *  2];  String[]  newPathNames  =  new  String[stackSize  *  2];  System.arraycopy(stack,  0,  newStack,  0,  stackSize);  System.arraycopy(pathIndices,  0,  newPathIndices,  0,  stackSize);  System.arraycopy(pathNames,  0,  newPathNames,  0,  stackSize);  stack  =  newStack;  pathIndices  =  newPathIndices;  pathNames  =  newPathNames;  }  [CLASS]  JsonTreeReader  1  [METHOD]  push  [RETURN_TYPE]  void  Object  newTop  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  newTop  o  result  int[]  newPathIndices  pathIndices  String[]  newPathNames  pathNames  Object[]  newStack  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	280	280	2	replace	if(stack!=  null  ||  newTop  ==  stack.length)  {	  if(stack.length    ==    newTop)    {    	non-compiled	[CE]  incomparable  types:  Object  and  int	2	None	replace
40	[BUG]  [BUGGY]  if(stack  ==  null  ||  newTop  ==  stack.length)  {  [CE]  incomparable  types:  Object  and  int  [FE]          ArrayIndexOutOfBoundsException    [CONTEXT]    private  void  push(Object  newTop)  {    [BUGGY]  if(stack  ==  null  ||  newTop  ==  stack.length)  {  [BUGGY]    Object[]  newStack  =  new  Object[stackSize  *  2];  int[]  newPathIndices  =  new  int[stackSize  *  2];  String[]  newPathNames  =  new  String[stackSize  *  2];  System.arraycopy(stack,  0,  newStack,  0,  stackSize);  System.arraycopy(pathIndices,  0,  newPathIndices,  0,  stackSize);  System.arraycopy(pathNames,  0,  newPathNames,  0,  stackSize);  stack  =  newStack;  pathIndices  =  newPathIndices;  pathNames  =  newPathNames;  }  [CLASS]  JsonTreeReader  1  [METHOD]  push  [RETURN_TYPE]  void  Object  newTop  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  newTop  o  result  int[]  newPathIndices  pathIndices  String[]  newPathNames  pathNames  Object[]  newStack  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	280	280	2	replace	if(stack  ==  null  ||  newTop  ==  stack.length)  {	  if(stack.length    ==    newTop)    {    	non-compiled	[CE]  incomparable  types:  Object  and  int	2	None	replace
41	[BUG]  [BUGGY]  [FE]  ArrayIndexOutOfBoundsException  [FE]            ArrayIndexOutOfBoundsException    [CONTEXT]    private  void  push(Object  newTop)  {    [BUGGY]  if(stack.length  ==  1)  {  [BUGGY]    Object[]  newStack  =  new  Object[stackSize  *  2];  int[]  newPathIndices  =  new  int[stackSize  *  2];  String[]  newPathNames  =  new  String[stackSize  *  2];  System.arraycopy(stack,  0,  newStack,  0,  stackSize);  System.arraycopy(pathIndices,  0,  newPathIndices,  0,  stackSize);  System.arraycopy(pathNames,  0,  newPathNames,  0,  stackSize);  stack  =  newStack;  pathIndices  =  newPathIndices;  pathNames  =  newPathNames;  }  [CLASS]  JsonTreeReader  1  [METHOD]  push  [RETURN_TYPE]  void  Object  newTop  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  newTop  o  result  int[]  newPathIndices  pathIndices  String[]  newPathNames  pathNames  Object[]  newStack  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	280	280	2	add	if(stack.length  ==  1)  {	  if(stack.length    ==    newTop)    {    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	2	2	replace
42	[BUG]  [BUGGY]  if(stack.length  ==  1)  {  [FE]  ArrayIndexOutOfBoundsException  [FE]            ArrayIndexOutOfBoundsException    [CONTEXT]    private  void  push(Object  newTop)  {    [BUGGY]  if(stack.length  ==  1)  {  [BUGGY]    Object[]  newStack  =  new  Object[stackSize  *  2];  int[]  newPathIndices  =  new  int[stackSize  *  2];  String[]  newPathNames  =  new  String[stackSize  *  2];  System.arraycopy(stack,  0,  newStack,  0,  stackSize);  System.arraycopy(pathIndices,  0,  newPathIndices,  0,  stackSize);  System.arraycopy(pathNames,  0,  newPathNames,  0,  stackSize);  stack  =  newStack;  pathIndices  =  newPathIndices;  pathNames  =  newPathNames;  }  [CLASS]  JsonTreeReader  1  [METHOD]  push  [RETURN_TYPE]  void  Object  newTop  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  newTop  o  result  int[]  newPathIndices  pathIndices  String[]  newPathNames  pathNames  Object[]  newStack  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	280	280	2	replace	if(stack.length  ==  1)  {	  if(stack.length    ==    newTop)    {    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	2	2	replace
43	[BUG]  [BUGGY]  if(newTop  ==  stackSize)  {  [CE]  incomparable  types:  Object  and  int  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]    private  void  push(Object  newTop)  {    [BUGGY]  if(newTop  ==  stackSize)  {  [BUGGY]    Object[]  newStack  =  new  Object[stackSize  *  2];  int[]  newPathIndices  =  new  int[stackSize  *  2];  String[]  newPathNames  =  new  String[stackSize  *  2];  System.arraycopy(stack,  0,  newStack,  0,  stackSize);  System.arraycopy(pathIndices,  0,  newPathIndices,  0,  stackSize);  System.arraycopy(pathNames,  0,  newPathNames,  0,  stackSize);  stack  =  newStack;  pathIndices  =  newPathIndices;  pathNames  =  newPathNames;  }  [CLASS]  JsonTreeReader  1  [METHOD]  push  [RETURN_TYPE]  void  Object  newTop  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  newTop  o  result  int[]  newPathIndices  pathIndices  String[]  newPathNames  pathNames  Object[]  newStack  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	280	280	2	replace	if(newTop  ==  stackSize)  {	  if(stackSize    ==    newTop)    {    	non-compiled	[CE]  incomparable  types:  Object  and  int	17	None	replace
44	[BUG]  [BUGGY]  if(stack!=  null  ||  stack.size()  ==  newTop)  {  [CE]  cannot  find  symbol  [FE]      ArrayIndexOutOfBoundsException    [CONTEXT]    private  void  push(Object  newTop)  {    [BUGGY]  if(stack!=  null  ||  stack.size()  ==  newTop)  {  [BUGGY]    Object[]  newStack  =  new  Object[stackSize  *  2];  int[]  newPathIndices  =  new  int[stackSize  *  2];  String[]  newPathNames  =  new  String[stackSize  *  2];  System.arraycopy(stack,  0,  newStack,  0,  stackSize);  System.arraycopy(pathIndices,  0,  newPathIndices,  0,  stackSize);  System.arraycopy(pathNames,  0,  newPathNames,  0,  stackSize);  stack  =  newStack;  pathIndices  =  newPathIndices;  pathNames  =  newPathNames;  }  [CLASS]  JsonTreeReader  1  [METHOD]  push  [RETURN_TYPE]  void  Object  newTop  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  newTop  o  result  int[]  newPathIndices  pathIndices  String[]  newPathNames  pathNames  Object[]  newStack  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	280	280	2	replace	if(stack!=  null  ||  stack.size()  ==  newTop)  {	  if(stackSize    ==    newTop)    {    	non-compiled	[CE]  cannot  find  symbol	17	None	replace
45	[BUG]  [BUGGY]  if(stack  ==  null  ||  stack.size()  ==  newTop)  {  [CE]  cannot  find  symbol  [FE]        ArrayIndexOutOfBoundsException    [CONTEXT]    private  void  push(Object  newTop)  {    [BUGGY]  if(stack  ==  null  ||  stack.size()  ==  newTop)  {  [BUGGY]    Object[]  newStack  =  new  Object[stackSize  *  2];  int[]  newPathIndices  =  new  int[stackSize  *  2];  String[]  newPathNames  =  new  String[stackSize  *  2];  System.arraycopy(stack,  0,  newStack,  0,  stackSize);  System.arraycopy(pathIndices,  0,  newPathIndices,  0,  stackSize);  System.arraycopy(pathNames,  0,  newPathNames,  0,  stackSize);  stack  =  newStack;  pathIndices  =  newPathIndices;  pathNames  =  newPathNames;  }  [CLASS]  JsonTreeReader  1  [METHOD]  push  [RETURN_TYPE]  void  Object  newTop  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  newTop  o  result  int[]  newPathIndices  pathIndices  String[]  newPathNames  pathNames  Object[]  newStack  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	280	280	2	replace	if(stack  ==  null  ||  stack.size()  ==  newTop)  {	  if(stackSize    ==    newTop)    {    	non-compiled	[CE]  cannot  find  symbol	17	None	replace
46	[BUG]  [BUGGY]  if(newTop!=  stackSize)  {  [CE]  incomparable  types:  Object  and  int  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]    private  void  push(Object  newTop)  {    [BUGGY]  if(newTop!=  stackSize)  {  [BUGGY]    Object[]  newStack  =  new  Object[stackSize  *  2];  int[]  newPathIndices  =  new  int[stackSize  *  2];  String[]  newPathNames  =  new  String[stackSize  *  2];  System.arraycopy(stack,  0,  newStack,  0,  stackSize);  System.arraycopy(pathIndices,  0,  newPathIndices,  0,  stackSize);  System.arraycopy(pathNames,  0,  newPathNames,  0,  stackSize);  stack  =  newStack;  pathIndices  =  newPathIndices;  pathNames  =  newPathNames;  }  [CLASS]  JsonTreeReader  1  [METHOD]  push  [RETURN_TYPE]  void  Object  newTop  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  newTop  o  result  int[]  newPathIndices  pathIndices  String[]  newPathNames  pathNames  Object[]  newStack  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	280	280	2	replace	if(newTop!=  stackSize)  {	  if(stackSize!=    newTop)    {    	non-compiled	[CE]  incomparable  types:  Object  and  int	23	None	replace
47	[BUG]  [BUGGY]  if(stackSize  >=  newTop)  {  [CE]  bad  operand  types  for  binary  operator  '>='  [FE]      ArrayIndexOutOfBoundsException    [CONTEXT]    private  void  push(Object  newTop)  {    [BUGGY]  if(stackSize  >=  newTop)  {  [BUGGY]    Object[]  newStack  =  new  Object[stackSize  *  2];  int[]  newPathIndices  =  new  int[stackSize  *  2];  String[]  newPathNames  =  new  String[stackSize  *  2];  System.arraycopy(stack,  0,  newStack,  0,  stackSize);  System.arraycopy(pathIndices,  0,  newPathIndices,  0,  stackSize);  System.arraycopy(pathNames,  0,  newPathNames,  0,  stackSize);  stack  =  newStack;  pathIndices  =  newPathIndices;  pathNames  =  newPathNames;  }  [CLASS]  JsonTreeReader  1  [METHOD]  push  [RETURN_TYPE]  void  Object  newTop  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  newTop  o  result  int[]  newPathIndices  pathIndices  String[]  newPathNames  pathNames  Object[]  newStack  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	280	280	2	replace	if(stackSize  >=  newTop)  {	  if(stackSize!=    newTop)    {    	non-compiled	[CE]  bad  operand  types  for  binary  operator  '>='	23	None	replace
48	[BUG]  [BUGGY]  if(stackSize  <  =  newTop)  {  [CE]  illegal  start  of  expression  [FE]        ArrayIndexOutOfBoundsException    [CONTEXT]    private  void  push(Object  newTop)  {    [BUGGY]  if(stackSize  <  =  newTop)  {  [BUGGY]    Object[]  newStack  =  new  Object[stackSize  *  2];  int[]  newPathIndices  =  new  int[stackSize  *  2];  String[]  newPathNames  =  new  String[stackSize  *  2];  System.arraycopy(stack,  0,  newStack,  0,  stackSize);  System.arraycopy(pathIndices,  0,  newPathIndices,  0,  stackSize);  System.arraycopy(pathNames,  0,  newPathNames,  0,  stackSize);  stack  =  newStack;  pathIndices  =  newPathIndices;  pathNames  =  newPathNames;  }  [CLASS]  JsonTreeReader  1  [METHOD]  push  [RETURN_TYPE]  void  Object  newTop  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  newTop  o  result  int[]  newPathIndices  pathIndices  String[]  newPathNames  pathNames  Object[]  newStack  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	280	280	2	replace	if(stackSize  <  =  newTop)  {	  if(stackSize!=    newTop)    {    	non-compiled	[CE]  illegal  start  of  expression	23	None	replace
49	[BUG]  [BUGGY]  if(stackSize  >  newTop)  {  [CE]  bad  operand  types  for  binary  operator  '>'  [FE]          ArrayIndexOutOfBoundsException    [CONTEXT]    private  void  push(Object  newTop)  {    [BUGGY]  if(stackSize  >  newTop)  {  [BUGGY]    Object[]  newStack  =  new  Object[stackSize  *  2];  int[]  newPathIndices  =  new  int[stackSize  *  2];  String[]  newPathNames  =  new  String[stackSize  *  2];  System.arraycopy(stack,  0,  newStack,  0,  stackSize);  System.arraycopy(pathIndices,  0,  newPathIndices,  0,  stackSize);  System.arraycopy(pathNames,  0,  newPathNames,  0,  stackSize);  stack  =  newStack;  pathIndices  =  newPathIndices;  pathNames  =  newPathNames;  }  [CLASS]  JsonTreeReader  1  [METHOD]  push  [RETURN_TYPE]  void  Object  newTop  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  newTop  o  result  int[]  newPathIndices  pathIndices  String[]  newPathNames  pathNames  Object[]  newStack  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	280	280	2	replace	if(stackSize  >  newTop)  {	  if(stackSize!=    newTop)    {    	non-compiled	[CE]  bad  operand  types  for  binary  operator  '>'	23	None	replace
50	[BUG]  [BUGGY]  if(newTop  >=  stack.length)  {  [CE]  bad  operand  types  for  binary  operator  '>='  [FE]                ArrayIndexOutOfBoundsException    [CONTEXT]    private  void  push(Object  newTop)  {    [BUGGY]  if(newTop  >=  stack.length)  {  [BUGGY]    Object[]  newStack  =  new  Object[stackSize  *  2];  int[]  newPathIndices  =  new  int[stackSize  *  2];  String[]  newPathNames  =  new  String[stackSize  *  2];  System.arraycopy(stack,  0,  newStack,  0,  stackSize);  System.arraycopy(pathIndices,  0,  newPathIndices,  0,  stackSize);  System.arraycopy(pathNames,  0,  newPathNames,  0,  stackSize);  stack  =  newStack;  pathIndices  =  newPathIndices;  pathNames  =  newPathNames;  }  [CLASS]  JsonTreeReader  1  [METHOD]  push  [RETURN_TYPE]  void  Object  newTop  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  newTop  o  result  int[]  newPathIndices  pathIndices  String[]  newPathNames  pathNames  Object[]  newStack  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	280	280	2	replace	if(newTop  >=  stack.length)  {	  if(newTop!=    stack.length)    {    	non-compiled	[CE]  bad  operand  types  for  binary  operator  '>='	8	None	replace
51	[BUG]  [BUGGY]  if(stack.length  >=  newTop)  {  [CE]  bad  operand  types  for  binary  operator  '>='  [FE]                  ArrayIndexOutOfBoundsException    [CONTEXT]    private  void  push(Object  newTop)  {    [BUGGY]  if(stack.length  >=  newTop)  {  [BUGGY]    Object[]  newStack  =  new  Object[stackSize  *  2];  int[]  newPathIndices  =  new  int[stackSize  *  2];  String[]  newPathNames  =  new  String[stackSize  *  2];  System.arraycopy(stack,  0,  newStack,  0,  stackSize);  System.arraycopy(pathIndices,  0,  newPathIndices,  0,  stackSize);  System.arraycopy(pathNames,  0,  newPathNames,  0,  stackSize);  stack  =  newStack;  pathIndices  =  newPathIndices;  pathNames  =  newPathNames;  }  [CLASS]  JsonTreeReader  1  [METHOD]  push  [RETURN_TYPE]  void  Object  newTop  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  newTop  o  result  int[]  newPathIndices  pathIndices  String[]  newPathNames  pathNames  Object[]  newStack  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	280	280	2	replace	if(stack.length  >=  newTop)  {	  if(newTop!=    stack.length)    {    	non-compiled	[CE]  bad  operand  types  for  binary  operator  '>='	8	None	replace
52	[BUG]  [BUGGY]  if(stack!=  newTop.length)  {  [CE]  cannot  find  symbol  length  [FE]                    ArrayIndexOutOfBoundsException    [CONTEXT]    private  void  push(Object  newTop)  {    [BUGGY]  if(stack!=  newTop.length)  {  [BUGGY]    Object[]  newStack  =  new  Object[stackSize  *  2];  int[]  newPathIndices  =  new  int[stackSize  *  2];  String[]  newPathNames  =  new  String[stackSize  *  2];  System.arraycopy(stack,  0,  newStack,  0,  stackSize);  System.arraycopy(pathIndices,  0,  newPathIndices,  0,  stackSize);  System.arraycopy(pathNames,  0,  newPathNames,  0,  stackSize);  stack  =  newStack;  pathIndices  =  newPathIndices;  pathNames  =  newPathNames;  }  [CLASS]  JsonTreeReader  1  [METHOD]  push  [RETURN_TYPE]  void  Object  newTop  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  newTop  o  result  int[]  newPathIndices  pathIndices  String[]  newPathNames  pathNames  Object[]  newStack  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	280	280	2	replace	if(stack!=  newTop.length)  {	  if(newTop!=    stack.length)    {    	non-compiled	[CE]  cannot  find  symbol  length	8	None	replace
53	[BUG]  [BUGGY]  if(newTop!=  newStack.length)  {  [CE]  cannot  find  symbol  newStack  [FE]                      ArrayIndexOutOfBoundsException    [CONTEXT]    private  void  push(Object  newTop)  {    [BUGGY]  if(newTop!=  newStack.length)  {  [BUGGY]    Object[]  newStack  =  new  Object[stackSize  *  2];  int[]  newPathIndices  =  new  int[stackSize  *  2];  String[]  newPathNames  =  new  String[stackSize  *  2];  System.arraycopy(stack,  0,  newStack,  0,  stackSize);  System.arraycopy(pathIndices,  0,  newPathIndices,  0,  stackSize);  System.arraycopy(pathNames,  0,  newPathNames,  0,  stackSize);  stack  =  newStack;  pathIndices  =  newPathIndices;  pathNames  =  newPathNames;  }  [CLASS]  JsonTreeReader  1  [METHOD]  push  [RETURN_TYPE]  void  Object  newTop  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  newTop  o  result  int[]  newPathIndices  pathIndices  String[]  newPathNames  pathNames  Object[]  newStack  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	280	280	2	replace	if(newTop!=  newStack.length)  {	  if(newTop!=    stack.length)    {    	non-compiled	[CE]  cannot  find  symbol  newStack	8	None	replace
54	[BUG]  [BUGGY]  if(stack.length!=  newTop)  {  if(stack.length!=  newTop)  {  [CE]  ';'  expected  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]    private  void  push(Object  newTop)  {    [BUGGY]  if(stack.length!=  newTop)  {  if(stack.length!=  newTop)  {  [BUGGY]    Object[]  newStack  =  new  Object[stackSize  *  2];  int[]  newPathIndices  =  new  int[stackSize  *  2];  String[]  newPathNames  =  new  String[stackSize  *  2];  System.arraycopy(stack,  0,  newStack,  0,  stackSize);  System.arraycopy(pathIndices,  0,  newPathIndices,  0,  stackSize);  System.arraycopy(pathNames,  0,  newPathNames,  0,  stackSize);  stack  =  newStack;  pathIndices  =  newPathIndices;  pathNames  =  newPathNames;  }  [CLASS]  JsonTreeReader  1  [METHOD]  push  [RETURN_TYPE]  void  Object  newTop  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  newTop  o  result  int[]  newPathIndices  pathIndices  String[]  newPathNames  pathNames  Object[]  newStack  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	280	280	2	replace	if(stack.length!=    newTop)    {    if(stack.length!=  newTop)  {	  	non-compiled	[CE]  ';'  expected	4	None	add
55	[BUG]  [BUGGY]  if(stack.length!=  newTop)  {  if(stack.length  >=  newTop)  {  [CE]  ';'  expected  [FE]      ArrayIndexOutOfBoundsException    [CONTEXT]    private  void  push(Object  newTop)  {    [BUGGY]  if(stack.length!=  newTop)  {  if(stack.length  >=  newTop)  {  [BUGGY]    Object[]  newStack  =  new  Object[stackSize  *  2];  int[]  newPathIndices  =  new  int[stackSize  *  2];  String[]  newPathNames  =  new  String[stackSize  *  2];  System.arraycopy(stack,  0,  newStack,  0,  stackSize);  System.arraycopy(pathIndices,  0,  newPathIndices,  0,  stackSize);  System.arraycopy(pathNames,  0,  newPathNames,  0,  stackSize);  stack  =  newStack;  pathIndices  =  newPathIndices;  pathNames  =  newPathNames;  }  [CLASS]  JsonTreeReader  1  [METHOD]  push  [RETURN_TYPE]  void  Object  newTop  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  newTop  o  result  int[]  newPathIndices  pathIndices  String[]  newPathNames  pathNames  Object[]  newStack  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	280	280	2	replace	if(stack.length!=    newTop)    {    if(stack.length  >=  newTop)  {	  	non-compiled	[CE]  ';'  expected	4	None	add
56	[BUG]  [BUGGY]  if(stack.length!=  newTop)  {  if(stack.length  ==  newTop)  {  [CE]  ';'  expected  [FE]        ArrayIndexOutOfBoundsException    [CONTEXT]    private  void  push(Object  newTop)  {    [BUGGY]  if(stack.length!=  newTop)  {  if(stack.length  ==  newTop)  {  [BUGGY]    Object[]  newStack  =  new  Object[stackSize  *  2];  int[]  newPathIndices  =  new  int[stackSize  *  2];  String[]  newPathNames  =  new  String[stackSize  *  2];  System.arraycopy(stack,  0,  newStack,  0,  stackSize);  System.arraycopy(pathIndices,  0,  newPathIndices,  0,  stackSize);  System.arraycopy(pathNames,  0,  newPathNames,  0,  stackSize);  stack  =  newStack;  pathIndices  =  newPathIndices;  pathNames  =  newPathNames;  }  [CLASS]  JsonTreeReader  1  [METHOD]  push  [RETURN_TYPE]  void  Object  newTop  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  newTop  o  result  int[]  newPathIndices  pathIndices  String[]  newPathNames  pathNames  Object[]  newStack  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	280	280	2	replace	if(stack.length!=    newTop)    {    if(stack.length  ==  newTop)  {	  	non-compiled	[CE]  ';'  expected	4	None	add
57	[BUG]  [BUGGY]  if(stack.length!=  newTop)  {  if(stack.length  >>  newTop)  {  [CE]  ';'  expected  [FE]          ArrayIndexOutOfBoundsException    [CONTEXT]    private  void  push(Object  newTop)  {    [BUGGY]  if(stack.length!=  newTop)  {  if(stack.length  >>  newTop)  {  [BUGGY]    Object[]  newStack  =  new  Object[stackSize  *  2];  int[]  newPathIndices  =  new  int[stackSize  *  2];  String[]  newPathNames  =  new  String[stackSize  *  2];  System.arraycopy(stack,  0,  newStack,  0,  stackSize);  System.arraycopy(pathIndices,  0,  newPathIndices,  0,  stackSize);  System.arraycopy(pathNames,  0,  newPathNames,  0,  stackSize);  stack  =  newStack;  pathIndices  =  newPathIndices;  pathNames  =  newPathNames;  }  [CLASS]  JsonTreeReader  1  [METHOD]  push  [RETURN_TYPE]  void  Object  newTop  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  newTop  o  result  int[]  newPathIndices  pathIndices  String[]  newPathNames  pathNames  Object[]  newStack  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	280	280	2	replace	if(stack.length!=    newTop)    {    if(stack.length  >>  newTop)  {	  	non-compiled	[CE]  ';'  expected	4	None	add
58	[BUG]  [BUGGY]  if(stack.length!=  newTop)  {  if(stack.length  [BUGGY]  newTop)  {  [CE]  ')'  expected  [FE]            ArrayIndexOutOfBoundsException    [CONTEXT]    private  void  push(Object  newTop)  {    [BUGGY]  if(stack.length!=  newTop)  {  if(stack.length  [BUGGY]  newTop)  {  [BUGGY]    Object[]  newStack  =  new  Object[stackSize  *  2];  int[]  newPathIndices  =  new  int[stackSize  *  2];  String[]  newPathNames  =  new  String[stackSize  *  2];  System.arraycopy(stack,  0,  newStack,  0,  stackSize);  System.arraycopy(pathIndices,  0,  newPathIndices,  0,  stackSize);  System.arraycopy(pathNames,  0,  newPathNames,  0,  stackSize);  stack  =  newStack;  pathIndices  =  newPathIndices;  pathNames  =  newPathNames;  }  [CLASS]  JsonTreeReader  1  [METHOD]  push  [RETURN_TYPE]  void  Object  newTop  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  newTop  o  result  int[]  newPathIndices  pathIndices  String[]  newPathNames  pathNames  Object[]  newStack  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	280	280	2	replace	if(stack.length!=    newTop)    {    if(stack.length  [BUGGY]  newTop)  {	  	non-compiled	[CE]  ')'  expected	4	None	add
59	[BUG]  [BUGGY]  if(stack.length!=  newTop)  {  if(stack.length  [Delete]  newTop)  {  [CE]  ')'  expected  [FE]              ArrayIndexOutOfBoundsException    [CONTEXT]    private  void  push(Object  newTop)  {    [BUGGY]  if(stack.length!=  newTop)  {  if(stack.length  [Delete]  newTop)  {  [BUGGY]    Object[]  newStack  =  new  Object[stackSize  *  2];  int[]  newPathIndices  =  new  int[stackSize  *  2];  String[]  newPathNames  =  new  String[stackSize  *  2];  System.arraycopy(stack,  0,  newStack,  0,  stackSize);  System.arraycopy(pathIndices,  0,  newPathIndices,  0,  stackSize);  System.arraycopy(pathNames,  0,  newPathNames,  0,  stackSize);  stack  =  newStack;  pathIndices  =  newPathIndices;  pathNames  =  newPathNames;  }  [CLASS]  JsonTreeReader  1  [METHOD]  push  [RETURN_TYPE]  void  Object  newTop  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  newTop  o  result  int[]  newPathIndices  pathIndices  String[]  newPathNames  pathNames  Object[]  newStack  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	280	280	2	replace	if(stack.length!=    newTop)    {    if(stack.length  [Delete]  newTop)  {	  	non-compiled	[CE]  ')'  expected	4	None	add
60	[BUG]  [BUGGY]  if(stack.length!=  newTop)  {  If(stack.length!=  newTop)  {  [CE]  ';'  expected  [FE]                ArrayIndexOutOfBoundsException    [CONTEXT]    private  void  push(Object  newTop)  {    [BUGGY]  if(stack.length!=  newTop)  {  If(stack.length!=  newTop)  {  [BUGGY]    Object[]  newStack  =  new  Object[stackSize  *  2];  int[]  newPathIndices  =  new  int[stackSize  *  2];  String[]  newPathNames  =  new  String[stackSize  *  2];  System.arraycopy(stack,  0,  newStack,  0,  stackSize);  System.arraycopy(pathIndices,  0,  newPathIndices,  0,  stackSize);  System.arraycopy(pathNames,  0,  newPathNames,  0,  stackSize);  stack  =  newStack;  pathIndices  =  newPathIndices;  pathNames  =  newPathNames;  }  [CLASS]  JsonTreeReader  1  [METHOD]  push  [RETURN_TYPE]  void  Object  newTop  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  newTop  o  result  int[]  newPathIndices  pathIndices  String[]  newPathNames  pathNames  Object[]  newStack  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	280	280	2	replace	if(stack.length!=    newTop)    {    If(stack.length!=  newTop)  {	  	non-compiled	[CE]  ';'  expected	4	None	add
61	[BUG]  [BUGGY]  JsonTreeReader.this.push(newTop);  [CE]  ']'  expected  [FE]                      ArrayIndexOutOfBoundsException    [CONTEXT]    private  void  push(Object  newTop)  {    [BUGGY]  JsonTreeReader.this.push(newTop);  [BUGGY]    Object[]  newStack  =  new  Object[stackSize  *  2];  int[]  newPathIndices  =  new  int[stackSize  *  2];  String[]  newPathNames  =  new  String[stackSize  *  2];  System.arraycopy(stack,  0,  newStack,  0,  stackSize);  System.arraycopy(pathIndices,  0,  newPathIndices,  0,  stackSize);  System.arraycopy(pathNames,  0,  newPathNames,  0,  stackSize);  stack  =  newStack;  pathIndices  =  newPathIndices;  pathNames  =  newPathNames;  }  [CLASS]  JsonTreeReader  1  [METHOD]  push  [RETURN_TYPE]  void  Object  newTop  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  newTop  o  result  int[]  newPathIndices  pathIndices  String[]  newPathNames  pathNames  Object[]  newStack  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	280	280	2	replace	JsonTreeReader.this.push(newTop);	      	non-compiled	[CE]  ']'  expected	11	None	replace
62	[BUG]  [BUGGY]  if(newTop  ==  null)  {  System.arraycopy(stack,  0,  newStack,  0,  stackSize);  }  else  {  System.arraycopy(pathNames,  0,  newStack,  0,  stackSize);  }  [CE]  ']'  expected  [FE]                        ArrayIndexOutOfBoundsException    [CONTEXT]    private  void  push(Object  newTop)  {    [BUGGY]  if(newTop  ==  null)  {  System.arraycopy(stack,  0,  newStack,  0,  stackSize);  }  else  {  System.arraycopy(pathNames,  0,  newStack,  0,  stackSize);  }  [BUGGY]    Object[]  newStack  =  new  Object[stackSize  *  2];  int[]  newPathIndices  =  new  int[stackSize  *  2];  String[]  newPathNames  =  new  String[stackSize  *  2];  System.arraycopy(stack,  0,  newStack,  0,  stackSize);  System.arraycopy(pathIndices,  0,  newPathIndices,  0,  stackSize);  System.arraycopy(pathNames,  0,  newPathNames,  0,  stackSize);  stack  =  newStack;  pathIndices  =  newPathIndices;  pathNames  =  newPathNames;  }  [CLASS]  JsonTreeReader  1  [METHOD]  push  [RETURN_TYPE]  void  Object  newTop  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  newTop  o  result  int[]  newPathIndices  pathIndices  String[]  newPathNames  pathNames  Object[]  newStack  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	280	280	2	replace	if(newTop  ==  null)  {  System.arraycopy(stack,  0,  newStack,  0,  stackSize);  }  else  {  System.arraycopy(pathNames,  0,  newStack,  0,  stackSize);  }	      	non-compiled	[CE]  ']'  expected	11	None	replace
63	[BUG]  [BUGGY]  if(newTop!=  null)  {  System.arraycopy(stack,  0,  newStack,  0,  stackSize);  }  else  {  System.arraycopy(pathNames,  0,  newStack,  0,  stackSize);  }  [CE]  ']'  expected  [FE]                          ArrayIndexOutOfBoundsException    [CONTEXT]    private  void  push(Object  newTop)  {    [BUGGY]  if(newTop!=  null)  {  System.arraycopy(stack,  0,  newStack,  0,  stackSize);  }  else  {  System.arraycopy(pathNames,  0,  newStack,  0,  stackSize);  }  [BUGGY]    Object[]  newStack  =  new  Object[stackSize  *  2];  int[]  newPathIndices  =  new  int[stackSize  *  2];  String[]  newPathNames  =  new  String[stackSize  *  2];  System.arraycopy(stack,  0,  newStack,  0,  stackSize);  System.arraycopy(pathIndices,  0,  newPathIndices,  0,  stackSize);  System.arraycopy(pathNames,  0,  newPathNames,  0,  stackSize);  stack  =  newStack;  pathIndices  =  newPathIndices;  pathNames  =  newPathNames;  }  [CLASS]  JsonTreeReader  1  [METHOD]  push  [RETURN_TYPE]  void  Object  newTop  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  newTop  o  result  int[]  newPathIndices  pathIndices  String[]  newPathNames  pathNames  Object[]  newStack  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	280	280	2	replace	if(newTop!=  null)  {  System.arraycopy(stack,  0,  newStack,  0,  stackSize);  }  else  {  System.arraycopy(pathNames,  0,  newStack,  0,  stackSize);  }	      	non-compiled	[CE]  ']'  expected	11	None	replace
64	[BUG]  [BUGGY]  if(newTop  ==  null)  {  System.arraycopy(pathNames,  0,  newStack,  0,  stackSize);  }  else  {  System.arraycopy(pathNames,  0,  newStack,  0,  stackSize);  }  [CE]  ']'  expected  [FE]                            ArrayIndexOutOfBoundsException    [CONTEXT]    private  void  push(Object  newTop)  {    [BUGGY]  if(newTop  ==  null)  {  System.arraycopy(pathNames,  0,  newStack,  0,  stackSize);  }  else  {  System.arraycopy(pathNames,  0,  newStack,  0,  stackSize);  }  [BUGGY]    Object[]  newStack  =  new  Object[stackSize  *  2];  int[]  newPathIndices  =  new  int[stackSize  *  2];  String[]  newPathNames  =  new  String[stackSize  *  2];  System.arraycopy(stack,  0,  newStack,  0,  stackSize);  System.arraycopy(pathIndices,  0,  newPathIndices,  0,  stackSize);  System.arraycopy(pathNames,  0,  newPathNames,  0,  stackSize);  stack  =  newStack;  pathIndices  =  newPathIndices;  pathNames  =  newPathNames;  }  [CLASS]  JsonTreeReader  1  [METHOD]  push  [RETURN_TYPE]  void  Object  newTop  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  newTop  o  result  int[]  newPathIndices  pathIndices  String[]  newPathNames  pathNames  Object[]  newStack  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	280	280	2	replace	if(newTop  ==  null)  {  System.arraycopy(pathNames,  0,  newStack,  0,  stackSize);  }  else  {  System.arraycopy(pathNames,  0,  newStack,  0,  stackSize);  }	      	non-compiled	[CE]  ']'  expected	11	None	replace
65	[BUG]  [BUGGY]  if(newTop  ==  null)  {  System.arraycopy(stack,  0,  newStack,  0,  stackSize);  }  else  {  System.arraycopy(stack,  0,  newStack,  0,  stackSize);  }  [CE]  ']'  expected  [FE]                              ArrayIndexOutOfBoundsException    [CONTEXT]    private  void  push(Object  newTop)  {    [BUGGY]  if(newTop  ==  null)  {  System.arraycopy(stack,  0,  newStack,  0,  stackSize);  }  else  {  System.arraycopy(stack,  0,  newStack,  0,  stackSize);  }  [BUGGY]    Object[]  newStack  =  new  Object[stackSize  *  2];  int[]  newPathIndices  =  new  int[stackSize  *  2];  String[]  newPathNames  =  new  String[stackSize  *  2];  System.arraycopy(stack,  0,  newStack,  0,  stackSize);  System.arraycopy(pathIndices,  0,  newPathIndices,  0,  stackSize);  System.arraycopy(pathNames,  0,  newPathNames,  0,  stackSize);  stack  =  newStack;  pathIndices  =  newPathIndices;  pathNames  =  newPathNames;  }  [CLASS]  JsonTreeReader  1  [METHOD]  push  [RETURN_TYPE]  void  Object  newTop  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  newTop  o  result  int[]  newPathIndices  pathIndices  String[]  newPathNames  pathNames  Object[]  newStack  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	280	280	2	replace	if(newTop  ==  null)  {  System.arraycopy(stack,  0,  newStack,  0,  stackSize);  }  else  {  System.arraycopy(stack,  0,  newStack,  0,  stackSize);  }	      	non-compiled	[CE]  ']'  expected	11	None	replace
66	[BUG]  [BUGGY]  if(newTop  ==  null)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  ']'  expected  [FE]                                ArrayIndexOutOfBoundsException    [CONTEXT]    private  void  push(Object  newTop)  {    [BUGGY]  if(newTop  ==  null)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]    Object[]  newStack  =  new  Object[stackSize  *  2];  int[]  newPathIndices  =  new  int[stackSize  *  2];  String[]  newPathNames  =  new  String[stackSize  *  2];  System.arraycopy(stack,  0,  newStack,  0,  stackSize);  System.arraycopy(pathIndices,  0,  newPathIndices,  0,  stackSize);  System.arraycopy(pathNames,  0,  newPathNames,  0,  stackSize);  stack  =  newStack;  pathIndices  =  newPathIndices;  pathNames  =  newPathNames;  }  [CLASS]  JsonTreeReader  1  [METHOD]  push  [RETURN_TYPE]  void  Object  newTop  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  newTop  o  result  int[]  newPathIndices  pathIndices  String[]  newPathNames  pathNames  Object[]  newStack  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	280	280	2	replace	if(newTop  ==  null)  {  throw  new  IllegalArgumentException( " ");  }	      	non-compiled	[CE]  ']'  expected	11	None	replace
67	[BUG]  [BUGGY]  if(newTop!=  null)  {  System.arraycopy(pathNames,  0,  newStack,  0,  stackSize);  }  else  {  System.arraycopy(pathNames,  0,  newStack,  0,  stackSize);  }  [CE]  ']'  expected  [FE]                                  ArrayIndexOutOfBoundsException    [CONTEXT]    private  void  push(Object  newTop)  {    [BUGGY]  if(newTop!=  null)  {  System.arraycopy(pathNames,  0,  newStack,  0,  stackSize);  }  else  {  System.arraycopy(pathNames,  0,  newStack,  0,  stackSize);  }  [BUGGY]    Object[]  newStack  =  new  Object[stackSize  *  2];  int[]  newPathIndices  =  new  int[stackSize  *  2];  String[]  newPathNames  =  new  String[stackSize  *  2];  System.arraycopy(stack,  0,  newStack,  0,  stackSize);  System.arraycopy(pathIndices,  0,  newPathIndices,  0,  stackSize);  System.arraycopy(pathNames,  0,  newPathNames,  0,  stackSize);  stack  =  newStack;  pathIndices  =  newPathIndices;  pathNames  =  newPathNames;  }  [CLASS]  JsonTreeReader  1  [METHOD]  push  [RETURN_TYPE]  void  Object  newTop  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  newTop  o  result  int[]  newPathIndices  pathIndices  String[]  newPathNames  pathNames  Object[]  newStack  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	280	280	2	replace	if(newTop!=  null)  {  System.arraycopy(pathNames,  0,  newStack,  0,  stackSize);  }  else  {  System.arraycopy(pathNames,  0,  newStack,  0,  stackSize);  }	      	non-compiled	[CE]  ']'  expected	11	None	replace
68	[BUG]  [BUGGY]  if(stack.length  <  =  stackSize)  {  [CE]  illegal  start  of  expression  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]    private  void  push(Object  newTop)  {    [BUGGY]  if(stack.length  <  =  stackSize)  {  [BUGGY]    Object[]  newStack  =  new  Object[stackSize  *  2];  int[]  newPathIndices  =  new  int[stackSize  *  2];  String[]  newPathNames  =  new  String[stackSize  *  2];  System.arraycopy(stack,  0,  newStack,  0,  stackSize);  System.arraycopy(pathIndices,  0,  newPathIndices,  0,  stackSize);  System.arraycopy(pathNames,  0,  newPathNames,  0,  stackSize);  stack  =  newStack;  pathIndices  =  newPathIndices;  pathNames  =  newPathNames;  }  [CLASS]  JsonTreeReader  1  [METHOD]  push  [RETURN_TYPE]  void  Object  newTop  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  newTop  o  result  int[]  newPathIndices  pathIndices  String[]  newPathNames  pathNames  Object[]  newStack  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	280	280	2	replace	if(stack.length  <  =  stackSize)  {	  if(stack.length    ==    stackSize)    {    	non-compiled	[CE]  illegal  start  of  expression	15	None	replace
69	[BUG]  [BUGGY]  [FE]  ArrayIndexOutOfBoundsException  [FE]      ArrayIndexOutOfBoundsException    [CONTEXT]    private  void  push(Object  newTop)  {    [BUGGY]  if(stack.length  ==  0)  {  [BUGGY]    Object[]  newStack  =  new  Object[stackSize  *  2];  int[]  newPathIndices  =  new  int[stackSize  *  2];  String[]  newPathNames  =  new  String[stackSize  *  2];  System.arraycopy(stack,  0,  newStack,  0,  stackSize);  System.arraycopy(pathIndices,  0,  newPathIndices,  0,  stackSize);  System.arraycopy(pathNames,  0,  newPathNames,  0,  stackSize);  stack  =  newStack;  pathIndices  =  newPathIndices;  pathNames  =  newPathNames;  }  [CLASS]  JsonTreeReader  1  [METHOD]  push  [RETURN_TYPE]  void  Object  newTop  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  newTop  o  result  int[]  newPathIndices  pathIndices  String[]  newPathNames  pathNames  Object[]  newStack  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	280	280	2	add	if(stack.length  ==  0)  {	  if(stack.length    ==    stackSize)    {    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	15	2	replace
70	[BUG]  [BUGGY]  if(stack.length  ==  0)  {  [FE]  ArrayIndexOutOfBoundsException  [FE]      ArrayIndexOutOfBoundsException    [CONTEXT]    private  void  push(Object  newTop)  {    [BUGGY]  if(stack.length  ==  0)  {  [BUGGY]    Object[]  newStack  =  new  Object[stackSize  *  2];  int[]  newPathIndices  =  new  int[stackSize  *  2];  String[]  newPathNames  =  new  String[stackSize  *  2];  System.arraycopy(stack,  0,  newStack,  0,  stackSize);  System.arraycopy(pathIndices,  0,  newPathIndices,  0,  stackSize);  System.arraycopy(pathNames,  0,  newPathNames,  0,  stackSize);  stack  =  newStack;  pathIndices  =  newPathIndices;  pathNames  =  newPathNames;  }  [CLASS]  JsonTreeReader  1  [METHOD]  push  [RETURN_TYPE]  void  Object  newTop  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  newTop  o  result  int[]  newPathIndices  pathIndices  String[]  newPathNames  pathNames  Object[]  newStack  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	280	280	2	replace	if(stack.length  ==  0)  {	  if(stack.length    ==    stackSize)    {    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	15	2	replace
71	[BUG]  [BUGGY]  if(stack.length  ==  1  ||  stack.length  >  0)  {  if(stack.length  ==  1  ||  stack.length  >  0)  {  [CE]  ';'  expected  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]    private  void  push(Object  newTop)  {    [BUGGY]  if(stack.length  ==  1  ||  stack.length  >  0)  {  if(stack.length  ==  1  ||  stack.length  >  0)  {  [BUGGY]    Object[]  newStack  =  new  Object[stackSize  *  2];  int[]  newPathIndices  =  new  int[stackSize  *  2];  String[]  newPathNames  =  new  String[stackSize  *  2];  System.arraycopy(stack,  0,  newStack,  0,  stackSize);  System.arraycopy(pathIndices,  0,  newPathIndices,  0,  stackSize);  System.arraycopy(pathNames,  0,  newPathNames,  0,  stackSize);  stack  =  newStack;  pathIndices  =  newPathIndices;  pathNames  =  newPathNames;  }  [CLASS]  JsonTreeReader  1  [METHOD]  push  [RETURN_TYPE]  void  Object  newTop  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  newTop  o  result  int[]  newPathIndices  pathIndices  String[]  newPathNames  pathNames  Object[]  newStack  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	280	280	2	replace	if(stack.length    ==    1    ||    stack.length    >    0)    {    if(stack.length  ==  1  ||  stack.length  >  0)  {	  	non-compiled	[CE]  ';'  expected	18	None	add
72	[BUG]  [BUGGY]  if(stack.length  ==  1  ||  stack.length  >  0)  {  if(stack.length!=  1  ||  stack.length  >  0)  {  [CE]  ';'  expected  [FE]      ArrayIndexOutOfBoundsException    [CONTEXT]    private  void  push(Object  newTop)  {    [BUGGY]  if(stack.length  ==  1  ||  stack.length  >  0)  {  if(stack.length!=  1  ||  stack.length  >  0)  {  [BUGGY]    Object[]  newStack  =  new  Object[stackSize  *  2];  int[]  newPathIndices  =  new  int[stackSize  *  2];  String[]  newPathNames  =  new  String[stackSize  *  2];  System.arraycopy(stack,  0,  newStack,  0,  stackSize);  System.arraycopy(pathIndices,  0,  newPathIndices,  0,  stackSize);  System.arraycopy(pathNames,  0,  newPathNames,  0,  stackSize);  stack  =  newStack;  pathIndices  =  newPathIndices;  pathNames  =  newPathNames;  }  [CLASS]  JsonTreeReader  1  [METHOD]  push  [RETURN_TYPE]  void  Object  newTop  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  newTop  o  result  int[]  newPathIndices  pathIndices  String[]  newPathNames  pathNames  Object[]  newStack  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	280	280	2	replace	if(stack.length    ==    1    ||    stack.length    >    0)    {    if(stack.length!=  1  ||  stack.length  >  0)  {	  	non-compiled	[CE]  ';'  expected	18	None	add
73	[BUG]  [BUGGY]  if(stack.length  ==  1  ||  stack.length  >  0)  {  if(stack.length  >=  1  ||  stack.length  >  0)  {  [CE]  ';'  expected  [FE]        ArrayIndexOutOfBoundsException    [CONTEXT]    private  void  push(Object  newTop)  {    [BUGGY]  if(stack.length  ==  1  ||  stack.length  >  0)  {  if(stack.length  >=  1  ||  stack.length  >  0)  {  [BUGGY]    Object[]  newStack  =  new  Object[stackSize  *  2];  int[]  newPathIndices  =  new  int[stackSize  *  2];  String[]  newPathNames  =  new  String[stackSize  *  2];  System.arraycopy(stack,  0,  newStack,  0,  stackSize);  System.arraycopy(pathIndices,  0,  newPathIndices,  0,  stackSize);  System.arraycopy(pathNames,  0,  newPathNames,  0,  stackSize);  stack  =  newStack;  pathIndices  =  newPathIndices;  pathNames  =  newPathNames;  }  [CLASS]  JsonTreeReader  1  [METHOD]  push  [RETURN_TYPE]  void  Object  newTop  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  newTop  o  result  int[]  newPathIndices  pathIndices  String[]  newPathNames  pathNames  Object[]  newStack  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	280	280	2	replace	if(stack.length    ==    1    ||    stack.length    >    0)    {    if(stack.length  >=  1  ||  stack.length  >  0)  {	  	non-compiled	[CE]  ';'  expected	18	None	add
74	[BUG]  [BUGGY]  if(stack.length  ==  1  ||  stack.length  >  0)  {  If(stack.length  ==  1  ||  stack.length  >  0)  {  [CE]  ';'  expected  [FE]          ArrayIndexOutOfBoundsException    [CONTEXT]    private  void  push(Object  newTop)  {    [BUGGY]  if(stack.length  ==  1  ||  stack.length  >  0)  {  If(stack.length  ==  1  ||  stack.length  >  0)  {  [BUGGY]    Object[]  newStack  =  new  Object[stackSize  *  2];  int[]  newPathIndices  =  new  int[stackSize  *  2];  String[]  newPathNames  =  new  String[stackSize  *  2];  System.arraycopy(stack,  0,  newStack,  0,  stackSize);  System.arraycopy(pathIndices,  0,  newPathIndices,  0,  stackSize);  System.arraycopy(pathNames,  0,  newPathNames,  0,  stackSize);  stack  =  newStack;  pathIndices  =  newPathIndices;  pathNames  =  newPathNames;  }  [CLASS]  JsonTreeReader  1  [METHOD]  push  [RETURN_TYPE]  void  Object  newTop  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  newTop  o  result  int[]  newPathIndices  pathIndices  String[]  newPathNames  pathNames  Object[]  newStack  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	280	280	2	replace	if(stack.length    ==    1    ||    stack.length    >    0)    {    If(stack.length  ==  1  ||  stack.length  >  0)  {	  	non-compiled	[CE]  ';'  expected	18	None	add
75	[BUG]  [BUGGY]  if(stack.length  ==  1  ||  stack.length  >  0)  {  if(stack.length  >>  1  ||  stack.length  >  0)  {  [CE]  ';'  expected  [FE]            ArrayIndexOutOfBoundsException    [CONTEXT]    private  void  push(Object  newTop)  {    [BUGGY]  if(stack.length  ==  1  ||  stack.length  >  0)  {  if(stack.length  >>  1  ||  stack.length  >  0)  {  [BUGGY]    Object[]  newStack  =  new  Object[stackSize  *  2];  int[]  newPathIndices  =  new  int[stackSize  *  2];  String[]  newPathNames  =  new  String[stackSize  *  2];  System.arraycopy(stack,  0,  newStack,  0,  stackSize);  System.arraycopy(pathIndices,  0,  newPathIndices,  0,  stackSize);  System.arraycopy(pathNames,  0,  newPathNames,  0,  stackSize);  stack  =  newStack;  pathIndices  =  newPathIndices;  pathNames  =  newPathNames;  }  [CLASS]  JsonTreeReader  1  [METHOD]  push  [RETURN_TYPE]  void  Object  newTop  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  newTop  o  result  int[]  newPathIndices  pathIndices  String[]  newPathNames  pathNames  Object[]  newStack  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	280	280	2	replace	if(stack.length    ==    1    ||    stack.length    >    0)    {    if(stack.length  >>  1  ||  stack.length  >  0)  {	  	non-compiled	[CE]  ';'  expected	18	None	add
76	[BUG]  [BUGGY]  if(stack.length  ==  1  ||  stack.length  >  0)  {  Object  stack.length  ==  1  ||  stack.length  >  0)  {  [CE]  ';'  expected  [FE]              ArrayIndexOutOfBoundsException    [CONTEXT]    private  void  push(Object  newTop)  {    [BUGGY]  if(stack.length  ==  1  ||  stack.length  >  0)  {  Object  stack.length  ==  1  ||  stack.length  >  0)  {  [BUGGY]    Object[]  newStack  =  new  Object[stackSize  *  2];  int[]  newPathIndices  =  new  int[stackSize  *  2];  String[]  newPathNames  =  new  String[stackSize  *  2];  System.arraycopy(stack,  0,  newStack,  0,  stackSize);  System.arraycopy(pathIndices,  0,  newPathIndices,  0,  stackSize);  System.arraycopy(pathNames,  0,  newPathNames,  0,  stackSize);  stack  =  newStack;  pathIndices  =  newPathIndices;  pathNames  =  newPathNames;  }  [CLASS]  JsonTreeReader  1  [METHOD]  push  [RETURN_TYPE]  void  Object  newTop  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  newTop  o  result  int[]  newPathIndices  pathIndices  String[]  newPathNames  pathNames  Object[]  newStack  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	280	280	2	replace	if(stack.length    ==    1    ||    stack.length    >    0)    {    Object  stack.length  ==  1  ||  stack.length  >  0)  {	  	non-compiled	[CE]  ';'  expected	18	None	add
77	[BUG]  [BUGGY]  if(stack.length  ==  newTop)  {  if(stack.length  ==  newTop)  {  [CE]  ';'  expected  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]    private  void  push(Object  newTop)  {    [BUGGY]  if(stack.length  ==  newTop)  {  if(stack.length  ==  newTop)  {  [BUGGY]    Object[]  newStack  =  new  Object[stackSize  *  2];  int[]  newPathIndices  =  new  int[stackSize  *  2];  String[]  newPathNames  =  new  String[stackSize  *  2];  System.arraycopy(stack,  0,  newStack,  0,  stackSize);  System.arraycopy(pathIndices,  0,  newPathIndices,  0,  stackSize);  System.arraycopy(pathNames,  0,  newPathNames,  0,  stackSize);  stack  =  newStack;  pathIndices  =  newPathIndices;  pathNames  =  newPathNames;  }  [CLASS]  JsonTreeReader  1  [METHOD]  push  [RETURN_TYPE]  void  Object  newTop  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  newTop  o  result  int[]  newPathIndices  pathIndices  String[]  newPathNames  pathNames  Object[]  newStack  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	280	280	2	replace	if(stack.length    ==    newTop)    {    if(stack.length  ==  newTop)  {	  	non-compiled	[CE]  ';'  expected	1	None	add
78	[BUG]  [BUGGY]  if(stack.length  ==  newTop)  {  if(stack.length!=  newTop)  {  [CE]  ';'  expected  [FE]      ArrayIndexOutOfBoundsException    [CONTEXT]    private  void  push(Object  newTop)  {    [BUGGY]  if(stack.length  ==  newTop)  {  if(stack.length!=  newTop)  {  [BUGGY]    Object[]  newStack  =  new  Object[stackSize  *  2];  int[]  newPathIndices  =  new  int[stackSize  *  2];  String[]  newPathNames  =  new  String[stackSize  *  2];  System.arraycopy(stack,  0,  newStack,  0,  stackSize);  System.arraycopy(pathIndices,  0,  newPathIndices,  0,  stackSize);  System.arraycopy(pathNames,  0,  newPathNames,  0,  stackSize);  stack  =  newStack;  pathIndices  =  newPathIndices;  pathNames  =  newPathNames;  }  [CLASS]  JsonTreeReader  1  [METHOD]  push  [RETURN_TYPE]  void  Object  newTop  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  newTop  o  result  int[]  newPathIndices  pathIndices  String[]  newPathNames  pathNames  Object[]  newStack  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	280	280	2	replace	if(stack.length    ==    newTop)    {    if(stack.length!=  newTop)  {	  	non-compiled	[CE]  ';'  expected	1	None	add
79	[BUG]  [BUGGY]  if(stack.length  ==  newTop)  {  if(stack.length  >=  newTop)  {  [CE]  ';'  expected  [FE]        ArrayIndexOutOfBoundsException    [CONTEXT]    private  void  push(Object  newTop)  {    [BUGGY]  if(stack.length  ==  newTop)  {  if(stack.length  >=  newTop)  {  [BUGGY]    Object[]  newStack  =  new  Object[stackSize  *  2];  int[]  newPathIndices  =  new  int[stackSize  *  2];  String[]  newPathNames  =  new  String[stackSize  *  2];  System.arraycopy(stack,  0,  newStack,  0,  stackSize);  System.arraycopy(pathIndices,  0,  newPathIndices,  0,  stackSize);  System.arraycopy(pathNames,  0,  newPathNames,  0,  stackSize);  stack  =  newStack;  pathIndices  =  newPathIndices;  pathNames  =  newPathNames;  }  [CLASS]  JsonTreeReader  1  [METHOD]  push  [RETURN_TYPE]  void  Object  newTop  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  newTop  o  result  int[]  newPathIndices  pathIndices  String[]  newPathNames  pathNames  Object[]  newStack  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	280	280	2	replace	if(stack.length    ==    newTop)    {    if(stack.length  >=  newTop)  {	  	non-compiled	[CE]  ';'  expected	1	None	add
80	[BUG]  [BUGGY]  if(stack.length  ==  newTop)  {  If(stack.length  ==  newTop)  {  [CE]  ';'  expected  [FE]          ArrayIndexOutOfBoundsException    [CONTEXT]    private  void  push(Object  newTop)  {    [BUGGY]  if(stack.length  ==  newTop)  {  If(stack.length  ==  newTop)  {  [BUGGY]    Object[]  newStack  =  new  Object[stackSize  *  2];  int[]  newPathIndices  =  new  int[stackSize  *  2];  String[]  newPathNames  =  new  String[stackSize  *  2];  System.arraycopy(stack,  0,  newStack,  0,  stackSize);  System.arraycopy(pathIndices,  0,  newPathIndices,  0,  stackSize);  System.arraycopy(pathNames,  0,  newPathNames,  0,  stackSize);  stack  =  newStack;  pathIndices  =  newPathIndices;  pathNames  =  newPathNames;  }  [CLASS]  JsonTreeReader  1  [METHOD]  push  [RETURN_TYPE]  void  Object  newTop  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  newTop  o  result  int[]  newPathIndices  pathIndices  String[]  newPathNames  pathNames  Object[]  newStack  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	280	280	2	replace	if(stack.length    ==    newTop)    {    If(stack.length  ==  newTop)  {	  	non-compiled	[CE]  ';'  expected	1	None	add
81	[BUG]  [BUGGY]  if(stack.length  ==  newTop)  {  if(stack.length  >>  newTop)  {  [CE]  ';'  expected  [FE]            ArrayIndexOutOfBoundsException    [CONTEXT]    private  void  push(Object  newTop)  {    [BUGGY]  if(stack.length  ==  newTop)  {  if(stack.length  >>  newTop)  {  [BUGGY]    Object[]  newStack  =  new  Object[stackSize  *  2];  int[]  newPathIndices  =  new  int[stackSize  *  2];  String[]  newPathNames  =  new  String[stackSize  *  2];  System.arraycopy(stack,  0,  newStack,  0,  stackSize);  System.arraycopy(pathIndices,  0,  newPathIndices,  0,  stackSize);  System.arraycopy(pathNames,  0,  newPathNames,  0,  stackSize);  stack  =  newStack;  pathIndices  =  newPathIndices;  pathNames  =  newPathNames;  }  [CLASS]  JsonTreeReader  1  [METHOD]  push  [RETURN_TYPE]  void  Object  newTop  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  newTop  o  result  int[]  newPathIndices  pathIndices  String[]  newPathNames  pathNames  Object[]  newStack  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	280	280	2	replace	if(stack.length    ==    newTop)    {    if(stack.length  >>  newTop)  {	  	non-compiled	[CE]  ';'  expected	1	None	add
82	[BUG]  [BUGGY]  if(stack.length  ==  newTop)  {  if(stack.length  [BUGGY]  newTop)  {  [CE]  ')'  expected  [FE]              ArrayIndexOutOfBoundsException    [CONTEXT]    private  void  push(Object  newTop)  {    [BUGGY]  if(stack.length  ==  newTop)  {  if(stack.length  [BUGGY]  newTop)  {  [BUGGY]    Object[]  newStack  =  new  Object[stackSize  *  2];  int[]  newPathIndices  =  new  int[stackSize  *  2];  String[]  newPathNames  =  new  String[stackSize  *  2];  System.arraycopy(stack,  0,  newStack,  0,  stackSize);  System.arraycopy(pathIndices,  0,  newPathIndices,  0,  stackSize);  System.arraycopy(pathNames,  0,  newPathNames,  0,  stackSize);  stack  =  newStack;  pathIndices  =  newPathIndices;  pathNames  =  newPathNames;  }  [CLASS]  JsonTreeReader  1  [METHOD]  push  [RETURN_TYPE]  void  Object  newTop  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  newTop  o  result  int[]  newPathIndices  pathIndices  String[]  newPathNames  pathNames  Object[]  newStack  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	280	280	2	replace	if(stack.length    ==    newTop)    {    if(stack.length  [BUGGY]  newTop)  {	  	non-compiled	[CE]  ')'  expected	1	None	add
83	[BUG]  [BUGGY]  if(stack.length  ==  newTop)  {  if(stack.length  [PATCH]  newTop)  {  [CE]  ')'  expected  [FE]                ArrayIndexOutOfBoundsException    [CONTEXT]    private  void  push(Object  newTop)  {    [BUGGY]  if(stack.length  ==  newTop)  {  if(stack.length  [PATCH]  newTop)  {  [BUGGY]    Object[]  newStack  =  new  Object[stackSize  *  2];  int[]  newPathIndices  =  new  int[stackSize  *  2];  String[]  newPathNames  =  new  String[stackSize  *  2];  System.arraycopy(stack,  0,  newStack,  0,  stackSize);  System.arraycopy(pathIndices,  0,  newPathIndices,  0,  stackSize);  System.arraycopy(pathNames,  0,  newPathNames,  0,  stackSize);  stack  =  newStack;  pathIndices  =  newPathIndices;  pathNames  =  newPathNames;  }  [CLASS]  JsonTreeReader  1  [METHOD]  push  [RETURN_TYPE]  void  Object  newTop  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  newTop  o  result  int[]  newPathIndices  pathIndices  String[]  newPathNames  pathNames  Object[]  newStack  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	280	280	2	replace	if(stack.length    ==    newTop)    {    if(stack.length  [PATCH]  newTop)  {	  	non-compiled	[CE]  ')'  expected	1	None	add
84	[BUG]  [BUGGY]  if(newTop  ==  1  ||  stack.length  >  0)  {  [CE]  incomparable  types:  Object  and  int  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]    private  void  push(Object  newTop)  {    [BUGGY]  if(newTop  ==  1  ||  stack.length  >  0)  {  [BUGGY]    Object[]  newStack  =  new  Object[stackSize  *  2];  int[]  newPathIndices  =  new  int[stackSize  *  2];  String[]  newPathNames  =  new  String[stackSize  *  2];  System.arraycopy(stack,  0,  newStack,  0,  stackSize);  System.arraycopy(pathIndices,  0,  newPathIndices,  0,  stackSize);  System.arraycopy(pathNames,  0,  newPathNames,  0,  stackSize);  stack  =  newStack;  pathIndices  =  newPathIndices;  pathNames  =  newPathNames;  }  [CLASS]  JsonTreeReader  1  [METHOD]  push  [RETURN_TYPE]  void  Object  newTop  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  newTop  o  result  int[]  newPathIndices  pathIndices  String[]  newPathNames  pathNames  Object[]  newStack  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	280	280	2	replace	if(newTop  ==  1  ||  stack.length  >  0)  {	  if(stack.length    ==    1    ||    stack.length    >    0)    {    	non-compiled	[CE]  incomparable  types:  Object  and  int	19	None	replace
85	[BUG]  [BUGGY]  [FE]  ArrayIndexOutOfBoundsException  [FE]      ArrayIndexOutOfBoundsException    [CONTEXT]    private  void  push(Object  newTop)  {    [BUGGY]  if(stack.length  ==  1  ||  stack.length  >  1)  {  [BUGGY]    Object[]  newStack  =  new  Object[stackSize  *  2];  int[]  newPathIndices  =  new  int[stackSize  *  2];  String[]  newPathNames  =  new  String[stackSize  *  2];  System.arraycopy(stack,  0,  newStack,  0,  stackSize);  System.arraycopy(pathIndices,  0,  newPathIndices,  0,  stackSize);  System.arraycopy(pathNames,  0,  newPathNames,  0,  stackSize);  stack  =  newStack;  pathIndices  =  newPathIndices;  pathNames  =  newPathNames;  }  [CLASS]  JsonTreeReader  1  [METHOD]  push  [RETURN_TYPE]  void  Object  newTop  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  newTop  o  result  int[]  newPathIndices  pathIndices  String[]  newPathNames  pathNames  Object[]  newStack  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	280	280	2	add	if(stack.length  ==  1  ||  stack.length  >  1)  {	  if(stack.length    ==    1    ||    stack.length    >    0)    {    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	19	2	replace
86	[BUG]  [BUGGY]  if(stack.length  ==  1  ||  stack.length  >  1)  {  [FE]  ArrayIndexOutOfBoundsException  [FE]      ArrayIndexOutOfBoundsException    [CONTEXT]    private  void  push(Object  newTop)  {    [BUGGY]  if(stack.length  ==  1  ||  stack.length  >  1)  {  [BUGGY]    Object[]  newStack  =  new  Object[stackSize  *  2];  int[]  newPathIndices  =  new  int[stackSize  *  2];  String[]  newPathNames  =  new  String[stackSize  *  2];  System.arraycopy(stack,  0,  newStack,  0,  stackSize);  System.arraycopy(pathIndices,  0,  newPathIndices,  0,  stackSize);  System.arraycopy(pathNames,  0,  newPathNames,  0,  stackSize);  stack  =  newStack;  pathIndices  =  newPathIndices;  pathNames  =  newPathNames;  }  [CLASS]  JsonTreeReader  1  [METHOD]  push  [RETURN_TYPE]  void  Object  newTop  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  newTop  o  result  int[]  newPathIndices  pathIndices  String[]  newPathNames  pathNames  Object[]  newStack  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	280	280	2	replace	if(stack.length  ==  1  ||  stack.length  >  1)  {	  if(stack.length    ==    1    ||    stack.length    >    0)    {    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	19	2	replace
87	[BUG]  [BUGGY]  [FE]  ArrayIndexOutOfBoundsException  [FE]        ArrayIndexOutOfBoundsException    [CONTEXT]    private  void  push(Object  newTop)  {    [BUGGY]  if(stack.length  ==  1  ||  stack.length  >  2)  {  [BUGGY]    Object[]  newStack  =  new  Object[stackSize  *  2];  int[]  newPathIndices  =  new  int[stackSize  *  2];  String[]  newPathNames  =  new  String[stackSize  *  2];  System.arraycopy(stack,  0,  newStack,  0,  stackSize);  System.arraycopy(pathIndices,  0,  newPathIndices,  0,  stackSize);  System.arraycopy(pathNames,  0,  newPathNames,  0,  stackSize);  stack  =  newStack;  pathIndices  =  newPathIndices;  pathNames  =  newPathNames;  }  [CLASS]  JsonTreeReader  1  [METHOD]  push  [RETURN_TYPE]  void  Object  newTop  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  newTop  o  result  int[]  newPathIndices  pathIndices  String[]  newPathNames  pathNames  Object[]  newStack  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	280	280	2	add	if(stack.length  ==  1  ||  stack.length  >  2)  {	  if(stack.length    ==    1    ||    stack.length    >    0)    {    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	19	2	replace
88	[BUG]  [BUGGY]  if(stack.length  ==  1  ||  stack.length  >  2)  {  [FE]  ArrayIndexOutOfBoundsException  [FE]        ArrayIndexOutOfBoundsException    [CONTEXT]    private  void  push(Object  newTop)  {    [BUGGY]  if(stack.length  ==  1  ||  stack.length  >  2)  {  [BUGGY]    Object[]  newStack  =  new  Object[stackSize  *  2];  int[]  newPathIndices  =  new  int[stackSize  *  2];  String[]  newPathNames  =  new  String[stackSize  *  2];  System.arraycopy(stack,  0,  newStack,  0,  stackSize);  System.arraycopy(pathIndices,  0,  newPathIndices,  0,  stackSize);  System.arraycopy(pathNames,  0,  newPathNames,  0,  stackSize);  stack  =  newStack;  pathIndices  =  newPathIndices;  pathNames  =  newPathNames;  }  [CLASS]  JsonTreeReader  1  [METHOD]  push  [RETURN_TYPE]  void  Object  newTop  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  newTop  o  result  int[]  newPathIndices  pathIndices  String[]  newPathNames  pathNames  Object[]  newStack  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	280	280	2	replace	if(stack.length  ==  1  ||  stack.length  >  2)  {	  if(stack.length    ==    1    ||    stack.length    >    0)    {    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	19	2	replace
89	[BUG]  [BUGGY]  [FE]  ArrayIndexOutOfBoundsException  [FE]          ArrayIndexOutOfBoundsException    [CONTEXT]    private  void  push(Object  newTop)  {    [BUGGY]  if(stack.length  >  1  ||  stack.length  >  0)  {  [BUGGY]    Object[]  newStack  =  new  Object[stackSize  *  2];  int[]  newPathIndices  =  new  int[stackSize  *  2];  String[]  newPathNames  =  new  String[stackSize  *  2];  System.arraycopy(stack,  0,  newStack,  0,  stackSize);  System.arraycopy(pathIndices,  0,  newPathIndices,  0,  stackSize);  System.arraycopy(pathNames,  0,  newPathNames,  0,  stackSize);  stack  =  newStack;  pathIndices  =  newPathIndices;  pathNames  =  newPathNames;  }  [CLASS]  JsonTreeReader  1  [METHOD]  push  [RETURN_TYPE]  void  Object  newTop  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  newTop  o  result  int[]  newPathIndices  pathIndices  String[]  newPathNames  pathNames  Object[]  newStack  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	280	280	2	add	if(stack.length  >  1  ||  stack.length  >  0)  {	  if(stack.length    ==    1    ||    stack.length    >    0)    {    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	19	2	replace
90	[BUG]  [BUGGY]  if(stack.length  >  1  ||  stack.length  >  0)  {  [FE]  ArrayIndexOutOfBoundsException  [FE]          ArrayIndexOutOfBoundsException    [CONTEXT]    private  void  push(Object  newTop)  {    [BUGGY]  if(stack.length  >  1  ||  stack.length  >  0)  {  [BUGGY]    Object[]  newStack  =  new  Object[stackSize  *  2];  int[]  newPathIndices  =  new  int[stackSize  *  2];  String[]  newPathNames  =  new  String[stackSize  *  2];  System.arraycopy(stack,  0,  newStack,  0,  stackSize);  System.arraycopy(pathIndices,  0,  newPathIndices,  0,  stackSize);  System.arraycopy(pathNames,  0,  newPathNames,  0,  stackSize);  stack  =  newStack;  pathIndices  =  newPathIndices;  pathNames  =  newPathNames;  }  [CLASS]  JsonTreeReader  1  [METHOD]  push  [RETURN_TYPE]  void  Object  newTop  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  newTop  o  result  int[]  newPathIndices  pathIndices  String[]  newPathNames  pathNames  Object[]  newStack  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	280	280	2	replace	if(stack.length  >  1  ||  stack.length  >  0)  {	  if(stack.length    ==    1    ||    stack.length    >    0)    {    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	19	2	replace
91	[BUG]  [BUGGY]  if(stack.length  ==  1  ||  stack.length  <  =  0)  {  [CE]  illegal  start  of  expression  [FE]            ArrayIndexOutOfBoundsException    [CONTEXT]    private  void  push(Object  newTop)  {    [BUGGY]  if(stack.length  ==  1  ||  stack.length  <  =  0)  {  [BUGGY]    Object[]  newStack  =  new  Object[stackSize  *  2];  int[]  newPathIndices  =  new  int[stackSize  *  2];  String[]  newPathNames  =  new  String[stackSize  *  2];  System.arraycopy(stack,  0,  newStack,  0,  stackSize);  System.arraycopy(pathIndices,  0,  newPathIndices,  0,  stackSize);  System.arraycopy(pathNames,  0,  newPathNames,  0,  stackSize);  stack  =  newStack;  pathIndices  =  newPathIndices;  pathNames  =  newPathNames;  }  [CLASS]  JsonTreeReader  1  [METHOD]  push  [RETURN_TYPE]  void  Object  newTop  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  newTop  o  result  int[]  newPathIndices  pathIndices  String[]  newPathNames  pathNames  Object[]  newStack  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	280	280	2	replace	if(stack.length  ==  1  ||  stack.length  <  =  0)  {	  if(stack.length    ==    1    ||    stack.length    >    0)    {    	non-compiled	[CE]  illegal  start  of  expression	19	None	replace
92	[BUG]  [BUGGY]  [FE]  ArrayIndexOutOfBoundsException  [FE]              ArrayIndexOutOfBoundsException    [CONTEXT]    private  void  push(Object  newTop)  {    [BUGGY]  if(stack.length  ==  1  ||  stack.length!=  0)  {  [BUGGY]    Object[]  newStack  =  new  Object[stackSize  *  2];  int[]  newPathIndices  =  new  int[stackSize  *  2];  String[]  newPathNames  =  new  String[stackSize  *  2];  System.arraycopy(stack,  0,  newStack,  0,  stackSize);  System.arraycopy(pathIndices,  0,  newPathIndices,  0,  stackSize);  System.arraycopy(pathNames,  0,  newPathNames,  0,  stackSize);  stack  =  newStack;  pathIndices  =  newPathIndices;  pathNames  =  newPathNames;  }  [CLASS]  JsonTreeReader  1  [METHOD]  push  [RETURN_TYPE]  void  Object  newTop  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  newTop  o  result  int[]  newPathIndices  pathIndices  String[]  newPathNames  pathNames  Object[]  newStack  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	280	280	2	add	if(stack.length  ==  1  ||  stack.length!=  0)  {	  if(stack.length    ==    1    ||    stack.length    >    0)    {    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	19	2	replace
93	[BUG]  [BUGGY]  if(stack.length  ==  1  ||  stack.length!=  0)  {  [FE]  ArrayIndexOutOfBoundsException  [FE]              ArrayIndexOutOfBoundsException    [CONTEXT]    private  void  push(Object  newTop)  {    [BUGGY]  if(stack.length  ==  1  ||  stack.length!=  0)  {  [BUGGY]    Object[]  newStack  =  new  Object[stackSize  *  2];  int[]  newPathIndices  =  new  int[stackSize  *  2];  String[]  newPathNames  =  new  String[stackSize  *  2];  System.arraycopy(stack,  0,  newStack,  0,  stackSize);  System.arraycopy(pathIndices,  0,  newPathIndices,  0,  stackSize);  System.arraycopy(pathNames,  0,  newPathNames,  0,  stackSize);  stack  =  newStack;  pathIndices  =  newPathIndices;  pathNames  =  newPathNames;  }  [CLASS]  JsonTreeReader  1  [METHOD]  push  [RETURN_TYPE]  void  Object  newTop  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  newTop  o  result  int[]  newPathIndices  pathIndices  String[]  newPathNames  pathNames  Object[]  newStack  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	280	280	2	replace	if(stack.length  ==  1  ||  stack.length!=  0)  {	  if(stack.length    ==    1    ||    stack.length    >    0)    {    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	19	2	replace
94	[BUG]  [BUGGY]  if(stack.length  ==  2  ||  stack.length  >  0)  {  if(stack.length  ==  2  ||  stack.length  >  0)  {  [CE]  ';'  expected  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]    private  void  push(Object  newTop)  {    [BUGGY]  if(stack.length  ==  2  ||  stack.length  >  0)  {  if(stack.length  ==  2  ||  stack.length  >  0)  {  [BUGGY]    Object[]  newStack  =  new  Object[stackSize  *  2];  int[]  newPathIndices  =  new  int[stackSize  *  2];  String[]  newPathNames  =  new  String[stackSize  *  2];  System.arraycopy(stack,  0,  newStack,  0,  stackSize);  System.arraycopy(pathIndices,  0,  newPathIndices,  0,  stackSize);  System.arraycopy(pathNames,  0,  newPathNames,  0,  stackSize);  stack  =  newStack;  pathIndices  =  newPathIndices;  pathNames  =  newPathNames;  }  [CLASS]  JsonTreeReader  1  [METHOD]  push  [RETURN_TYPE]  void  Object  newTop  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  newTop  o  result  int[]  newPathIndices  pathIndices  String[]  newPathNames  pathNames  Object[]  newStack  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	280	280	2	replace	if(stack.length    ==    2    ||    stack.length    >    0)    {    if(stack.length  ==  2  ||  stack.length  >  0)  {	  	non-compiled	[CE]  ';'  expected	20	None	add
95	[BUG]  [BUGGY]  if(stack.length  ==  2  ||  stack.length  >  0)  {  if(stack.length!=  2  ||  stack.length  >  0)  {  [CE]  ';'  expected  [FE]      ArrayIndexOutOfBoundsException    [CONTEXT]    private  void  push(Object  newTop)  {    [BUGGY]  if(stack.length  ==  2  ||  stack.length  >  0)  {  if(stack.length!=  2  ||  stack.length  >  0)  {  [BUGGY]    Object[]  newStack  =  new  Object[stackSize  *  2];  int[]  newPathIndices  =  new  int[stackSize  *  2];  String[]  newPathNames  =  new  String[stackSize  *  2];  System.arraycopy(stack,  0,  newStack,  0,  stackSize);  System.arraycopy(pathIndices,  0,  newPathIndices,  0,  stackSize);  System.arraycopy(pathNames,  0,  newPathNames,  0,  stackSize);  stack  =  newStack;  pathIndices  =  newPathIndices;  pathNames  =  newPathNames;  }  [CLASS]  JsonTreeReader  1  [METHOD]  push  [RETURN_TYPE]  void  Object  newTop  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  newTop  o  result  int[]  newPathIndices  pathIndices  String[]  newPathNames  pathNames  Object[]  newStack  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	280	280	2	replace	if(stack.length    ==    2    ||    stack.length    >    0)    {    if(stack.length!=  2  ||  stack.length  >  0)  {	  	non-compiled	[CE]  ';'  expected	20	None	add
96	[BUG]  [BUGGY]  if(stack.length  ==  2  ||  stack.length  >  0)  {  if(stack.length  >=  2  ||  stack.length  >  0)  {  [CE]  ';'  expected  [FE]        ArrayIndexOutOfBoundsException    [CONTEXT]    private  void  push(Object  newTop)  {    [BUGGY]  if(stack.length  ==  2  ||  stack.length  >  0)  {  if(stack.length  >=  2  ||  stack.length  >  0)  {  [BUGGY]    Object[]  newStack  =  new  Object[stackSize  *  2];  int[]  newPathIndices  =  new  int[stackSize  *  2];  String[]  newPathNames  =  new  String[stackSize  *  2];  System.arraycopy(stack,  0,  newStack,  0,  stackSize);  System.arraycopy(pathIndices,  0,  newPathIndices,  0,  stackSize);  System.arraycopy(pathNames,  0,  newPathNames,  0,  stackSize);  stack  =  newStack;  pathIndices  =  newPathIndices;  pathNames  =  newPathNames;  }  [CLASS]  JsonTreeReader  1  [METHOD]  push  [RETURN_TYPE]  void  Object  newTop  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  newTop  o  result  int[]  newPathIndices  pathIndices  String[]  newPathNames  pathNames  Object[]  newStack  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	280	280	2	replace	if(stack.length    ==    2    ||    stack.length    >    0)    {    if(stack.length  >=  2  ||  stack.length  >  0)  {	  	non-compiled	[CE]  ';'  expected	20	None	add
97	[BUG]  [BUGGY]  if(stack.length  ==  2  ||  stack.length  >  0)  {  If(stack.length  ==  2  ||  stack.length  >  0)  {  [CE]  ';'  expected  [FE]          ArrayIndexOutOfBoundsException    [CONTEXT]    private  void  push(Object  newTop)  {    [BUGGY]  if(stack.length  ==  2  ||  stack.length  >  0)  {  If(stack.length  ==  2  ||  stack.length  >  0)  {  [BUGGY]    Object[]  newStack  =  new  Object[stackSize  *  2];  int[]  newPathIndices  =  new  int[stackSize  *  2];  String[]  newPathNames  =  new  String[stackSize  *  2];  System.arraycopy(stack,  0,  newStack,  0,  stackSize);  System.arraycopy(pathIndices,  0,  newPathIndices,  0,  stackSize);  System.arraycopy(pathNames,  0,  newPathNames,  0,  stackSize);  stack  =  newStack;  pathIndices  =  newPathIndices;  pathNames  =  newPathNames;  }  [CLASS]  JsonTreeReader  1  [METHOD]  push  [RETURN_TYPE]  void  Object  newTop  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  newTop  o  result  int[]  newPathIndices  pathIndices  String[]  newPathNames  pathNames  Object[]  newStack  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	280	280	2	replace	if(stack.length    ==    2    ||    stack.length    >    0)    {    If(stack.length  ==  2  ||  stack.length  >  0)  {	  	non-compiled	[CE]  ';'  expected	20	None	add
98	[BUG]  [BUGGY]  if(stack.length  ==  2  ||  stack.length  >  0)  {  if(stack.length  >>  2  ||  stack.length  >  0)  {  [CE]  ';'  expected  [FE]            ArrayIndexOutOfBoundsException    [CONTEXT]    private  void  push(Object  newTop)  {    [BUGGY]  if(stack.length  ==  2  ||  stack.length  >  0)  {  if(stack.length  >>  2  ||  stack.length  >  0)  {  [BUGGY]    Object[]  newStack  =  new  Object[stackSize  *  2];  int[]  newPathIndices  =  new  int[stackSize  *  2];  String[]  newPathNames  =  new  String[stackSize  *  2];  System.arraycopy(stack,  0,  newStack,  0,  stackSize);  System.arraycopy(pathIndices,  0,  newPathIndices,  0,  stackSize);  System.arraycopy(pathNames,  0,  newPathNames,  0,  stackSize);  stack  =  newStack;  pathIndices  =  newPathIndices;  pathNames  =  newPathNames;  }  [CLASS]  JsonTreeReader  1  [METHOD]  push  [RETURN_TYPE]  void  Object  newTop  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  newTop  o  result  int[]  newPathIndices  pathIndices  String[]  newPathNames  pathNames  Object[]  newStack  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	280	280	2	replace	if(stack.length    ==    2    ||    stack.length    >    0)    {    if(stack.length  >>  2  ||  stack.length  >  0)  {	  	non-compiled	[CE]  ';'  expected	20	None	add
99	[BUG]  [BUGGY]  if(stack.length  ==  2  ||  stack.length  >  0)  {  if(stack.length  [BUGGY]  2  ||  stack.length  >  0)  {  [CE]  ')'  expected  [FE]              ArrayIndexOutOfBoundsException    [CONTEXT]    private  void  push(Object  newTop)  {    [BUGGY]  if(stack.length  ==  2  ||  stack.length  >  0)  {  if(stack.length  [BUGGY]  2  ||  stack.length  >  0)  {  [BUGGY]    Object[]  newStack  =  new  Object[stackSize  *  2];  int[]  newPathIndices  =  new  int[stackSize  *  2];  String[]  newPathNames  =  new  String[stackSize  *  2];  System.arraycopy(stack,  0,  newStack,  0,  stackSize);  System.arraycopy(pathIndices,  0,  newPathIndices,  0,  stackSize);  System.arraycopy(pathNames,  0,  newPathNames,  0,  stackSize);  stack  =  newStack;  pathIndices  =  newPathIndices;  pathNames  =  newPathNames;  }  [CLASS]  JsonTreeReader  1  [METHOD]  push  [RETURN_TYPE]  void  Object  newTop  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  newTop  o  result  int[]  newPathIndices  pathIndices  String[]  newPathNames  pathNames  Object[]  newStack  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	280	280	2	replace	if(stack.length    ==    2    ||    stack.length    >    0)    {    if(stack.length  [BUGGY]  2  ||  stack.length  >  0)  {	  	non-compiled	[CE]  ')'  expected	20	None	add
100	[BUG]  [BUGGY]  if(stack.length!=  newTop.length)  {  [CE]  cannot  find  symbol  length  [FE]                    ArrayIndexOutOfBoundsException    [CONTEXT]    private  void  push(Object  newTop)  {    [BUGGY]  if(stack.length!=  newTop.length)  {  [BUGGY]    Object[]  newStack  =  new  Object[stackSize  *  2];  int[]  newPathIndices  =  new  int[stackSize  *  2];  String[]  newPathNames  =  new  String[stackSize  *  2];  System.arraycopy(stack,  0,  newStack,  0,  stackSize);  System.arraycopy(pathIndices,  0,  newPathIndices,  0,  stackSize);  System.arraycopy(pathNames,  0,  newPathNames,  0,  stackSize);  stack  =  newStack;  pathIndices  =  newPathIndices;  pathNames  =  newPathNames;  }  [CLASS]  JsonTreeReader  1  [METHOD]  push  [RETURN_TYPE]  void  Object  newTop  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  newTop  o  result  int[]  newPathIndices  pathIndices  String[]  newPathNames  pathNames  Object[]  newStack  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	280	280	2	replace	if(stack.length!=  newTop.length)  {	  if(stack.length    ==    newTop.length)    {    	non-compiled	[CE]  cannot  find  symbol  length	10	None	replace
101	[BUG]  [BUGGY]  if(this.stack.length  ==  newTop.length)  {  [CE]  cannot  find  symbol  length  [FE]                      ArrayIndexOutOfBoundsException    [CONTEXT]    private  void  push(Object  newTop)  {    [BUGGY]  if(this.stack.length  ==  newTop.length)  {  [BUGGY]    Object[]  newStack  =  new  Object[stackSize  *  2];  int[]  newPathIndices  =  new  int[stackSize  *  2];  String[]  newPathNames  =  new  String[stackSize  *  2];  System.arraycopy(stack,  0,  newStack,  0,  stackSize);  System.arraycopy(pathIndices,  0,  newPathIndices,  0,  stackSize);  System.arraycopy(pathNames,  0,  newPathNames,  0,  stackSize);  stack  =  newStack;  pathIndices  =  newPathIndices;  pathNames  =  newPathNames;  }  [CLASS]  JsonTreeReader  1  [METHOD]  push  [RETURN_TYPE]  void  Object  newTop  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  newTop  o  result  int[]  newPathIndices  pathIndices  String[]  newPathNames  pathNames  Object[]  newStack  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	280	280	2	replace	if(this.stack.length  ==  newTop.length)  {	  if(stack.length    ==    newTop.length)    {    	non-compiled	[CE]  cannot  find  symbol  length	10	None	replace
102	[BUG]  [BUGGY]  [FE]  ArrayIndexOutOfBoundsException  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]    private  void  push(Object  newTop)  {    [BUGGY]  if(stack!=  null  ||  stack.length!=  newTop)  {  [BUGGY]    Object[]  newStack  =  new  Object[stackSize  *  2];  int[]  newPathIndices  =  new  int[stackSize  *  2];  String[]  newPathNames  =  new  String[stackSize  *  2];  System.arraycopy(stack,  0,  newStack,  0,  stackSize);  System.arraycopy(pathIndices,  0,  newPathIndices,  0,  stackSize);  System.arraycopy(pathNames,  0,  newPathNames,  0,  stackSize);  stack  =  newStack;  pathIndices  =  newPathIndices;  pathNames  =  newPathNames;  }  [CLASS]  JsonTreeReader  1  [METHOD]  push  [RETURN_TYPE]  void  Object  newTop  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  newTop  o  result  int[]  newPathIndices  pathIndices  String[]  newPathNames  pathNames  Object[]  newStack  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	280	280	2	add	if(stack!=  null  ||  stack.length!=  newTop)  {	  if(stack.length!=    newTop)    {    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	5	2	replace
103	[BUG]  [BUGGY]  if(stack!=  null  ||  stack.length!=  newTop)  {  [FE]  ArrayIndexOutOfBoundsException  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]    private  void  push(Object  newTop)  {    [BUGGY]  if(stack!=  null  ||  stack.length!=  newTop)  {  [BUGGY]    Object[]  newStack  =  new  Object[stackSize  *  2];  int[]  newPathIndices  =  new  int[stackSize  *  2];  String[]  newPathNames  =  new  String[stackSize  *  2];  System.arraycopy(stack,  0,  newStack,  0,  stackSize);  System.arraycopy(pathIndices,  0,  newPathIndices,  0,  stackSize);  System.arraycopy(pathNames,  0,  newPathNames,  0,  stackSize);  stack  =  newStack;  pathIndices  =  newPathIndices;  pathNames  =  newPathNames;  }  [CLASS]  JsonTreeReader  1  [METHOD]  push  [RETURN_TYPE]  void  Object  newTop  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  newTop  o  result  int[]  newPathIndices  pathIndices  String[]  newPathNames  pathNames  Object[]  newStack  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	280	280	2	replace	if(stack!=  null  ||  stack.length!=  newTop)  {	  if(stack.length!=    newTop)    {    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	5	2	replace
104	[BUG]  [BUGGY]  if(stack!=  null  ||  newTop!=  stack.length)  {  [CE]  incomparable  types:  Object  and  int  [FE]      ArrayIndexOutOfBoundsException    [CONTEXT]    private  void  push(Object  newTop)  {    [BUGGY]  if(stack!=  null  ||  newTop!=  stack.length)  {  [BUGGY]    Object[]  newStack  =  new  Object[stackSize  *  2];  int[]  newPathIndices  =  new  int[stackSize  *  2];  String[]  newPathNames  =  new  String[stackSize  *  2];  System.arraycopy(stack,  0,  newStack,  0,  stackSize);  System.arraycopy(pathIndices,  0,  newPathIndices,  0,  stackSize);  System.arraycopy(pathNames,  0,  newPathNames,  0,  stackSize);  stack  =  newStack;  pathIndices  =  newPathIndices;  pathNames  =  newPathNames;  }  [CLASS]  JsonTreeReader  1  [METHOD]  push  [RETURN_TYPE]  void  Object  newTop  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  newTop  o  result  int[]  newPathIndices  pathIndices  String[]  newPathNames  pathNames  Object[]  newStack  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	280	280	2	replace	if(stack!=  null  ||  newTop!=  stack.length)  {	  if(stack.length!=    newTop)    {    	non-compiled	[CE]  incomparable  types:  Object  and  int	5	None	replace
105	[BUG]  [BUGGY]  [FE]  ArrayIndexOutOfBoundsException  [FE]        ArrayIndexOutOfBoundsException    [CONTEXT]    private  void  push(Object  newTop)  {    [BUGGY]  if(stack  ==  null  ||  stack.length!=  newTop)  {  [BUGGY]    Object[]  newStack  =  new  Object[stackSize  *  2];  int[]  newPathIndices  =  new  int[stackSize  *  2];  String[]  newPathNames  =  new  String[stackSize  *  2];  System.arraycopy(stack,  0,  newStack,  0,  stackSize);  System.arraycopy(pathIndices,  0,  newPathIndices,  0,  stackSize);  System.arraycopy(pathNames,  0,  newPathNames,  0,  stackSize);  stack  =  newStack;  pathIndices  =  newPathIndices;  pathNames  =  newPathNames;  }  [CLASS]  JsonTreeReader  1  [METHOD]  push  [RETURN_TYPE]  void  Object  newTop  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  newTop  o  result  int[]  newPathIndices  pathIndices  String[]  newPathNames  pathNames  Object[]  newStack  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	280	280	2	add	if(stack  ==  null  ||  stack.length!=  newTop)  {	  if(stack.length!=    newTop)    {    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	5	2	replace
106	[BUG]  [BUGGY]  if(stack  ==  null  ||  stack.length!=  newTop)  {  [FE]  ArrayIndexOutOfBoundsException  [FE]        ArrayIndexOutOfBoundsException    [CONTEXT]    private  void  push(Object  newTop)  {    [BUGGY]  if(stack  ==  null  ||  stack.length!=  newTop)  {  [BUGGY]    Object[]  newStack  =  new  Object[stackSize  *  2];  int[]  newPathIndices  =  new  int[stackSize  *  2];  String[]  newPathNames  =  new  String[stackSize  *  2];  System.arraycopy(stack,  0,  newStack,  0,  stackSize);  System.arraycopy(pathIndices,  0,  newPathIndices,  0,  stackSize);  System.arraycopy(pathNames,  0,  newPathNames,  0,  stackSize);  stack  =  newStack;  pathIndices  =  newPathIndices;  pathNames  =  newPathNames;  }  [CLASS]  JsonTreeReader  1  [METHOD]  push  [RETURN_TYPE]  void  Object  newTop  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  newTop  o  result  int[]  newPathIndices  pathIndices  String[]  newPathNames  pathNames  Object[]  newStack  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	280	280	2	replace	if(stack  ==  null  ||  stack.length!=  newTop)  {	  if(stack.length!=    newTop)    {    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	5	2	replace
107	[BUG]  [BUGGY]  if(stack  ==  null  ||  newTop!=  stack.length)  {  [CE]  incomparable  types:  Object  and  int  [FE]          ArrayIndexOutOfBoundsException    [CONTEXT]    private  void  push(Object  newTop)  {    [BUGGY]  if(stack  ==  null  ||  newTop!=  stack.length)  {  [BUGGY]    Object[]  newStack  =  new  Object[stackSize  *  2];  int[]  newPathIndices  =  new  int[stackSize  *  2];  String[]  newPathNames  =  new  String[stackSize  *  2];  System.arraycopy(stack,  0,  newStack,  0,  stackSize);  System.arraycopy(pathIndices,  0,  newPathIndices,  0,  stackSize);  System.arraycopy(pathNames,  0,  newPathNames,  0,  stackSize);  stack  =  newStack;  pathIndices  =  newPathIndices;  pathNames  =  newPathNames;  }  [CLASS]  JsonTreeReader  1  [METHOD]  push  [RETURN_TYPE]  void  Object  newTop  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  newTop  o  result  int[]  newPathIndices  pathIndices  String[]  newPathNames  pathNames  Object[]  newStack  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	280	280	2	replace	if(stack  ==  null  ||  newTop!=  stack.length)  {	  if(stack.length!=    newTop)    {    	non-compiled	[CE]  incomparable  types:  Object  and  int	5	None	replace
108	[BUG]  [BUGGY]  if(stackSize!=  newTop)  {  if(stackSize!=  newTop)  {  [CE]  ';'  expected  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]    private  void  push(Object  newTop)  {    [BUGGY]  if(stackSize!=  newTop)  {  if(stackSize!=  newTop)  {  [BUGGY]    Object[]  newStack  =  new  Object[stackSize  *  2];  int[]  newPathIndices  =  new  int[stackSize  *  2];  String[]  newPathNames  =  new  String[stackSize  *  2];  System.arraycopy(stack,  0,  newStack,  0,  stackSize);  System.arraycopy(pathIndices,  0,  newPathIndices,  0,  stackSize);  System.arraycopy(pathNames,  0,  newPathNames,  0,  stackSize);  stack  =  newStack;  pathIndices  =  newPathIndices;  pathNames  =  newPathNames;  }  [CLASS]  JsonTreeReader  1  [METHOD]  push  [RETURN_TYPE]  void  Object  newTop  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  newTop  o  result  int[]  newPathIndices  pathIndices  String[]  newPathNames  pathNames  Object[]  newStack  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	280	280	2	replace	if(stackSize!=    newTop)    {    if(stackSize!=  newTop)  {	  	non-compiled	[CE]  ';'  expected	22	None	add
109	[BUG]  [BUGGY]  if(stackSize!=  newTop)  {  if(stackSize  >=  newTop)  {  [CE]  ';'  expected  [FE]      ArrayIndexOutOfBoundsException    [CONTEXT]    private  void  push(Object  newTop)  {    [BUGGY]  if(stackSize!=  newTop)  {  if(stackSize  >=  newTop)  {  [BUGGY]    Object[]  newStack  =  new  Object[stackSize  *  2];  int[]  newPathIndices  =  new  int[stackSize  *  2];  String[]  newPathNames  =  new  String[stackSize  *  2];  System.arraycopy(stack,  0,  newStack,  0,  stackSize);  System.arraycopy(pathIndices,  0,  newPathIndices,  0,  stackSize);  System.arraycopy(pathNames,  0,  newPathNames,  0,  stackSize);  stack  =  newStack;  pathIndices  =  newPathIndices;  pathNames  =  newPathNames;  }  [CLASS]  JsonTreeReader  1  [METHOD]  push  [RETURN_TYPE]  void  Object  newTop  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  newTop  o  result  int[]  newPathIndices  pathIndices  String[]  newPathNames  pathNames  Object[]  newStack  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	280	280	2	replace	if(stackSize!=    newTop)    {    if(stackSize  >=  newTop)  {	  	non-compiled	[CE]  ';'  expected	22	None	add
110	[BUG]  [BUGGY]  if(stackSize!=  newTop)  {  if(stackSize  >>  newTop)  {  [CE]  ';'  expected  [FE]        ArrayIndexOutOfBoundsException    [CONTEXT]    private  void  push(Object  newTop)  {    [BUGGY]  if(stackSize!=  newTop)  {  if(stackSize  >>  newTop)  {  [BUGGY]    Object[]  newStack  =  new  Object[stackSize  *  2];  int[]  newPathIndices  =  new  int[stackSize  *  2];  String[]  newPathNames  =  new  String[stackSize  *  2];  System.arraycopy(stack,  0,  newStack,  0,  stackSize);  System.arraycopy(pathIndices,  0,  newPathIndices,  0,  stackSize);  System.arraycopy(pathNames,  0,  newPathNames,  0,  stackSize);  stack  =  newStack;  pathIndices  =  newPathIndices;  pathNames  =  newPathNames;  }  [CLASS]  JsonTreeReader  1  [METHOD]  push  [RETURN_TYPE]  void  Object  newTop  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  newTop  o  result  int[]  newPathIndices  pathIndices  String[]  newPathNames  pathNames  Object[]  newStack  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	280	280	2	replace	if(stackSize!=    newTop)    {    if(stackSize  >>  newTop)  {	  	non-compiled	[CE]  ';'  expected	22	None	add
111	[BUG]  [BUGGY]  if(stackSize!=  newTop)  {  if(stackSize  ==  newTop)  {  [CE]  ';'  expected  [FE]          ArrayIndexOutOfBoundsException    [CONTEXT]    private  void  push(Object  newTop)  {    [BUGGY]  if(stackSize!=  newTop)  {  if(stackSize  ==  newTop)  {  [BUGGY]    Object[]  newStack  =  new  Object[stackSize  *  2];  int[]  newPathIndices  =  new  int[stackSize  *  2];  String[]  newPathNames  =  new  String[stackSize  *  2];  System.arraycopy(stack,  0,  newStack,  0,  stackSize);  System.arraycopy(pathIndices,  0,  newPathIndices,  0,  stackSize);  System.arraycopy(pathNames,  0,  newPathNames,  0,  stackSize);  stack  =  newStack;  pathIndices  =  newPathIndices;  pathNames  =  newPathNames;  }  [CLASS]  JsonTreeReader  1  [METHOD]  push  [RETURN_TYPE]  void  Object  newTop  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  newTop  o  result  int[]  newPathIndices  pathIndices  String[]  newPathNames  pathNames  Object[]  newStack  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	280	280	2	replace	if(stackSize!=    newTop)    {    if(stackSize  ==  newTop)  {	  	non-compiled	[CE]  ';'  expected	22	None	add
112	[BUG]  [BUGGY]  if(stackSize!=  newTop)  {  if(stackSize  [BUGGY]  newTop)  {  [CE]  ')'  expected  [FE]            ArrayIndexOutOfBoundsException    [CONTEXT]    private  void  push(Object  newTop)  {    [BUGGY]  if(stackSize!=  newTop)  {  if(stackSize  [BUGGY]  newTop)  {  [BUGGY]    Object[]  newStack  =  new  Object[stackSize  *  2];  int[]  newPathIndices  =  new  int[stackSize  *  2];  String[]  newPathNames  =  new  String[stackSize  *  2];  System.arraycopy(stack,  0,  newStack,  0,  stackSize);  System.arraycopy(pathIndices,  0,  newPathIndices,  0,  stackSize);  System.arraycopy(pathNames,  0,  newPathNames,  0,  stackSize);  stack  =  newStack;  pathIndices  =  newPathIndices;  pathNames  =  newPathNames;  }  [CLASS]  JsonTreeReader  1  [METHOD]  push  [RETURN_TYPE]  void  Object  newTop  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  newTop  o  result  int[]  newPathIndices  pathIndices  String[]  newPathNames  pathNames  Object[]  newStack  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	280	280	2	replace	if(stackSize!=    newTop)    {    if(stackSize  [BUGGY]  newTop)  {	  	non-compiled	[CE]  ')'  expected	22	None	add
113	[BUG]  [BUGGY]  if(stackSize!=  newTop)  {  if(stackSize  [Delete]  newTop)  {  [CE]  ')'  expected  [FE]              ArrayIndexOutOfBoundsException    [CONTEXT]    private  void  push(Object  newTop)  {    [BUGGY]  if(stackSize!=  newTop)  {  if(stackSize  [Delete]  newTop)  {  [BUGGY]    Object[]  newStack  =  new  Object[stackSize  *  2];  int[]  newPathIndices  =  new  int[stackSize  *  2];  String[]  newPathNames  =  new  String[stackSize  *  2];  System.arraycopy(stack,  0,  newStack,  0,  stackSize);  System.arraycopy(pathIndices,  0,  newPathIndices,  0,  stackSize);  System.arraycopy(pathNames,  0,  newPathNames,  0,  stackSize);  stack  =  newStack;  pathIndices  =  newPathIndices;  pathNames  =  newPathNames;  }  [CLASS]  JsonTreeReader  1  [METHOD]  push  [RETURN_TYPE]  void  Object  newTop  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  newTop  o  result  int[]  newPathIndices  pathIndices  String[]  newPathNames  pathNames  Object[]  newStack  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	280	280	2	replace	if(stackSize!=    newTop)    {    if(stackSize  [Delete]  newTop)  {	  	non-compiled	[CE]  ')'  expected	22	None	add
114	[BUG]  [BUGGY]  if(newTop  ==  stack.length  ||  newTop  ==  stack.length)  {  [CE]  incomparable  types:  Object  and  int  [FE]          ArrayIndexOutOfBoundsException    [CONTEXT]    private  void  push(Object  newTop)  {    [BUGGY]  if(newTop  ==  stack.length  ||  newTop  ==  stack.length)  {  [BUGGY]    Object[]  newStack  =  new  Object[stackSize  *  2];  int[]  newPathIndices  =  new  int[stackSize  *  2];  String[]  newPathNames  =  new  String[stackSize  *  2];  System.arraycopy(stack,  0,  newStack,  0,  stackSize);  System.arraycopy(pathIndices,  0,  newPathIndices,  0,  stackSize);  System.arraycopy(pathNames,  0,  newPathNames,  0,  stackSize);  stack  =  newStack;  pathIndices  =  newPathIndices;  pathNames  =  newPathNames;  }  [CLASS]  JsonTreeReader  1  [METHOD]  push  [RETURN_TYPE]  void  Object  newTop  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  newTop  o  result  int[]  newPathIndices  pathIndices  String[]  newPathNames  pathNames  Object[]  newStack  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	280	280	2	replace	if(newTop  ==  stack.length  ||  newTop  ==  stack.length)  {	  if(newTop    ==    stack.length)    {    	non-compiled	[CE]  incomparable  types:  Object  and  int	3	None	replace
115	[BUG]  [BUGGY]  if(newTop  ==  stack.length  ||(stack.getClass().isArray()  &&  newTop!=  null))  {  [CE]  incomparable  types:  Object  and  int  [FE]            ArrayIndexOutOfBoundsException    [CONTEXT]    private  void  push(Object  newTop)  {    [BUGGY]  if(newTop  ==  stack.length  ||(stack.getClass().isArray()  &&  newTop!=  null))  {  [BUGGY]    Object[]  newStack  =  new  Object[stackSize  *  2];  int[]  newPathIndices  =  new  int[stackSize  *  2];  String[]  newPathNames  =  new  String[stackSize  *  2];  System.arraycopy(stack,  0,  newStack,  0,  stackSize);  System.arraycopy(pathIndices,  0,  newPathIndices,  0,  stackSize);  System.arraycopy(pathNames,  0,  newPathNames,  0,  stackSize);  stack  =  newStack;  pathIndices  =  newPathIndices;  pathNames  =  newPathNames;  }  [CLASS]  JsonTreeReader  1  [METHOD]  push  [RETURN_TYPE]  void  Object  newTop  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  newTop  o  result  int[]  newPathIndices  pathIndices  String[]  newPathNames  pathNames  Object[]  newStack  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	280	280	2	replace	if(newTop  ==  stack.length  ||(stack.getClass().isArray()  &&  newTop!=  null))  {	  if(newTop    ==    stack.length)    {    	non-compiled	[CE]  incomparable  types:  Object  and  int	3	None	replace
116	[BUG]  [BUGGY]  if(newTop  ==  stack.length  ||(stack.getClass()!=  getCurrentSegmentCount()  -  1))  {  [CE]  incomparable  types:  Object  and  int  [FE]              ArrayIndexOutOfBoundsException    [CONTEXT]    private  void  push(Object  newTop)  {    [BUGGY]  if(newTop  ==  stack.length  ||(stack.getClass()!=  getCurrentSegmentCount()  -  1))  {  [BUGGY]    Object[]  newStack  =  new  Object[stackSize  *  2];  int[]  newPathIndices  =  new  int[stackSize  *  2];  String[]  newPathNames  =  new  String[stackSize  *  2];  System.arraycopy(stack,  0,  newStack,  0,  stackSize);  System.arraycopy(pathIndices,  0,  newPathIndices,  0,  stackSize);  System.arraycopy(pathNames,  0,  newPathNames,  0,  stackSize);  stack  =  newStack;  pathIndices  =  newPathIndices;  pathNames  =  newPathNames;  }  [CLASS]  JsonTreeReader  1  [METHOD]  push  [RETURN_TYPE]  void  Object  newTop  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  newTop  o  result  int[]  newPathIndices  pathIndices  String[]  newPathNames  pathNames  Object[]  newStack  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	280	280	2	replace	if(newTop  ==  stack.length  ||(stack.getClass()!=  getCurrentSegmentCount()  -  1))  {	  if(newTop    ==    stack.length)    {    	non-compiled	[CE]  incomparable  types:  Object  and  int	3	None	replace
117	[BUG]  [BUGGY]  if(stack.length  ==  stack.length)  {  if(stack.length  ==  stack.length)  {  [CE]  ';'  expected  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]    private  void  push(Object  newTop)  {    [BUGGY]  if(stack.length  ==  stack.length)  {  if(stack.length  ==  stack.length)  {  [BUGGY]    Object[]  newStack  =  new  Object[stackSize  *  2];  int[]  newPathIndices  =  new  int[stackSize  *  2];  String[]  newPathNames  =  new  String[stackSize  *  2];  System.arraycopy(stack,  0,  newStack,  0,  stackSize);  System.arraycopy(pathIndices,  0,  newPathIndices,  0,  stackSize);  System.arraycopy(pathNames,  0,  newPathNames,  0,  stackSize);  stack  =  newStack;  pathIndices  =  newPathIndices;  pathNames  =  newPathNames;  }  [CLASS]  JsonTreeReader  1  [METHOD]  push  [RETURN_TYPE]  void  Object  newTop  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  newTop  o  result  int[]  newPathIndices  pathIndices  String[]  newPathNames  pathNames  Object[]  newStack  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	280	280	2	replace	if(stack.length    ==    stack.length)    {    if(stack.length  ==  stack.length)  {	  	non-compiled	[CE]  ';'  expected	6	None	add
118	[BUG]  [BUGGY]  if(stack.length  ==  stack.length)  {  if(stack.length!=  stack.length)  {  [CE]  ';'  expected  [FE]      ArrayIndexOutOfBoundsException    [CONTEXT]    private  void  push(Object  newTop)  {    [BUGGY]  if(stack.length  ==  stack.length)  {  if(stack.length!=  stack.length)  {  [BUGGY]    Object[]  newStack  =  new  Object[stackSize  *  2];  int[]  newPathIndices  =  new  int[stackSize  *  2];  String[]  newPathNames  =  new  String[stackSize  *  2];  System.arraycopy(stack,  0,  newStack,  0,  stackSize);  System.arraycopy(pathIndices,  0,  newPathIndices,  0,  stackSize);  System.arraycopy(pathNames,  0,  newPathNames,  0,  stackSize);  stack  =  newStack;  pathIndices  =  newPathIndices;  pathNames  =  newPathNames;  }  [CLASS]  JsonTreeReader  1  [METHOD]  push  [RETURN_TYPE]  void  Object  newTop  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  newTop  o  result  int[]  newPathIndices  pathIndices  String[]  newPathNames  pathNames  Object[]  newStack  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	280	280	2	replace	if(stack.length    ==    stack.length)    {    if(stack.length!=  stack.length)  {	  	non-compiled	[CE]  ';'  expected	6	None	add
119	[BUG]  [BUGGY]  if(stack.length  ==  stack.length)  {  if(stack.length  >=  stack.length)  {  [CE]  ';'  expected  [FE]        ArrayIndexOutOfBoundsException    [CONTEXT]    private  void  push(Object  newTop)  {    [BUGGY]  if(stack.length  ==  stack.length)  {  if(stack.length  >=  stack.length)  {  [BUGGY]    Object[]  newStack  =  new  Object[stackSize  *  2];  int[]  newPathIndices  =  new  int[stackSize  *  2];  String[]  newPathNames  =  new  String[stackSize  *  2];  System.arraycopy(stack,  0,  newStack,  0,  stackSize);  System.arraycopy(pathIndices,  0,  newPathIndices,  0,  stackSize);  System.arraycopy(pathNames,  0,  newPathNames,  0,  stackSize);  stack  =  newStack;  pathIndices  =  newPathIndices;  pathNames  =  newPathNames;  }  [CLASS]  JsonTreeReader  1  [METHOD]  push  [RETURN_TYPE]  void  Object  newTop  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  newTop  o  result  int[]  newPathIndices  pathIndices  String[]  newPathNames  pathNames  Object[]  newStack  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	280	280	2	replace	if(stack.length    ==    stack.length)    {    if(stack.length  >=  stack.length)  {	  	non-compiled	[CE]  ';'  expected	6	None	add
120	[BUG]  [BUGGY]  if(stack.length  ==  stack.length)  {  If(stack.length  ==  stack.length)  {  [CE]  ';'  expected  [FE]          ArrayIndexOutOfBoundsException    [CONTEXT]    private  void  push(Object  newTop)  {    [BUGGY]  if(stack.length  ==  stack.length)  {  If(stack.length  ==  stack.length)  {  [BUGGY]    Object[]  newStack  =  new  Object[stackSize  *  2];  int[]  newPathIndices  =  new  int[stackSize  *  2];  String[]  newPathNames  =  new  String[stackSize  *  2];  System.arraycopy(stack,  0,  newStack,  0,  stackSize);  System.arraycopy(pathIndices,  0,  newPathIndices,  0,  stackSize);  System.arraycopy(pathNames,  0,  newPathNames,  0,  stackSize);  stack  =  newStack;  pathIndices  =  newPathIndices;  pathNames  =  newPathNames;  }  [CLASS]  JsonTreeReader  1  [METHOD]  push  [RETURN_TYPE]  void  Object  newTop  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  newTop  o  result  int[]  newPathIndices  pathIndices  String[]  newPathNames  pathNames  Object[]  newStack  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	280	280	2	replace	if(stack.length    ==    stack.length)    {    If(stack.length  ==  stack.length)  {	  	non-compiled	[CE]  ';'  expected	6	None	add
121	[BUG]  [BUGGY]  if(stack.length  ==  stack.length)  {  if(stack.length  >>  stack.length)  {  [CE]  ';'  expected  [FE]            ArrayIndexOutOfBoundsException    [CONTEXT]    private  void  push(Object  newTop)  {    [BUGGY]  if(stack.length  ==  stack.length)  {  if(stack.length  >>  stack.length)  {  [BUGGY]    Object[]  newStack  =  new  Object[stackSize  *  2];  int[]  newPathIndices  =  new  int[stackSize  *  2];  String[]  newPathNames  =  new  String[stackSize  *  2];  System.arraycopy(stack,  0,  newStack,  0,  stackSize);  System.arraycopy(pathIndices,  0,  newPathIndices,  0,  stackSize);  System.arraycopy(pathNames,  0,  newPathNames,  0,  stackSize);  stack  =  newStack;  pathIndices  =  newPathIndices;  pathNames  =  newPathNames;  }  [CLASS]  JsonTreeReader  1  [METHOD]  push  [RETURN_TYPE]  void  Object  newTop  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  newTop  o  result  int[]  newPathIndices  pathIndices  String[]  newPathNames  pathNames  Object[]  newStack  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	280	280	2	replace	if(stack.length    ==    stack.length)    {    if(stack.length  >>  stack.length)  {	  	non-compiled	[CE]  ';'  expected	6	None	add
122	[BUG]  [BUGGY]  if(stack.length  ==  stack.length)  {  if(stack.length  [BUGGY]  stack.length)  {  [CE]  ')'  expected  [FE]              ArrayIndexOutOfBoundsException    [CONTEXT]    private  void  push(Object  newTop)  {    [BUGGY]  if(stack.length  ==  stack.length)  {  if(stack.length  [BUGGY]  stack.length)  {  [BUGGY]    Object[]  newStack  =  new  Object[stackSize  *  2];  int[]  newPathIndices  =  new  int[stackSize  *  2];  String[]  newPathNames  =  new  String[stackSize  *  2];  System.arraycopy(stack,  0,  newStack,  0,  stackSize);  System.arraycopy(pathIndices,  0,  newPathIndices,  0,  stackSize);  System.arraycopy(pathNames,  0,  newPathNames,  0,  stackSize);  stack  =  newStack;  pathIndices  =  newPathIndices;  pathNames  =  newPathNames;  }  [CLASS]  JsonTreeReader  1  [METHOD]  push  [RETURN_TYPE]  void  Object  newTop  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  newTop  o  result  int[]  newPathIndices  pathIndices  String[]  newPathNames  pathNames  Object[]  newStack  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	280	280	2	replace	if(stack.length    ==    stack.length)    {    if(stack.length  [BUGGY]  stack.length)  {	  	non-compiled	[CE]  ')'  expected	6	None	add
123	[BUG]  [BUGGY]  if(stack.size()  ==  newTop.length)  {  [CE]  cannot  find  symbol  [FE]                  ArrayIndexOutOfBoundsException    [CONTEXT]    private  void  push(Object  newTop)  {    [BUGGY]  if(stack.size()  ==  newTop.length)  {  [BUGGY]    Object[]  newStack  =  new  Object[stackSize  *  2];  int[]  newPathIndices  =  new  int[stackSize  *  2];  String[]  newPathNames  =  new  String[stackSize  *  2];  System.arraycopy(stack,  0,  newStack,  0,  stackSize);  System.arraycopy(pathIndices,  0,  newPathIndices,  0,  stackSize);  System.arraycopy(pathNames,  0,  newPathNames,  0,  stackSize);  stack  =  newStack;  pathIndices  =  newPathIndices;  pathNames  =  newPathNames;  }  [CLASS]  JsonTreeReader  1  [METHOD]  push  [RETURN_TYPE]  void  Object  newTop  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  newTop  o  result  int[]  newPathIndices  pathIndices  String[]  newPathNames  pathNames  Object[]  newStack  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	280	280	2	replace	if(stack.size()  ==  newTop.length)  {	  if(stack.size()    ==    stack.length)    {    	non-compiled	[CE]  cannot  find  symbol	9	None	replace
124	[BUG]  [BUGGY]  if(stack.size()  ==  newTop)  {  [CE]  cannot  find  symbol  [FE]                    ArrayIndexOutOfBoundsException    [CONTEXT]    private  void  push(Object  newTop)  {    [BUGGY]  if(stack.size()  ==  newTop)  {  [BUGGY]    Object[]  newStack  =  new  Object[stackSize  *  2];  int[]  newPathIndices  =  new  int[stackSize  *  2];  String[]  newPathNames  =  new  String[stackSize  *  2];  System.arraycopy(stack,  0,  newStack,  0,  stackSize);  System.arraycopy(pathIndices,  0,  newPathIndices,  0,  stackSize);  System.arraycopy(pathNames,  0,  newPathNames,  0,  stackSize);  stack  =  newStack;  pathIndices  =  newPathIndices;  pathNames  =  newPathNames;  }  [CLASS]  JsonTreeReader  1  [METHOD]  push  [RETURN_TYPE]  void  Object  newTop  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  newTop  o  result  int[]  newPathIndices  pathIndices  String[]  newPathNames  pathNames  Object[]  newStack  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	280	280	2	replace	if(stack.size()  ==  newTop)  {	  if(stack.size()    ==    stack.length)    {    	non-compiled	[CE]  cannot  find  symbol	9	None	replace
125	[BUG]  [BUGGY]  if(stack.size()  ==  stackSize)  {  [CE]  cannot  find  symbol  [FE]                      ArrayIndexOutOfBoundsException    [CONTEXT]    private  void  push(Object  newTop)  {    [BUGGY]  if(stack.size()  ==  stackSize)  {  [BUGGY]    Object[]  newStack  =  new  Object[stackSize  *  2];  int[]  newPathIndices  =  new  int[stackSize  *  2];  String[]  newPathNames  =  new  String[stackSize  *  2];  System.arraycopy(stack,  0,  newStack,  0,  stackSize);  System.arraycopy(pathIndices,  0,  newPathIndices,  0,  stackSize);  System.arraycopy(pathNames,  0,  newPathNames,  0,  stackSize);  stack  =  newStack;  pathIndices  =  newPathIndices;  pathNames  =  newPathNames;  }  [CLASS]  JsonTreeReader  1  [METHOD]  push  [RETURN_TYPE]  void  Object  newTop  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  newTop  o  result  int[]  newPathIndices  pathIndices  String[]  newPathNames  pathNames  Object[]  newStack  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	280	280	2	replace	if(stack.size()  ==  stackSize)  {	  if(stack.size()    ==    stack.length)    {    	non-compiled	[CE]  cannot  find  symbol	9	None	replace
126	[BUG]  [BUGGY]  if(stack.size()  ==  stackTop.length)  {  [CE]  cannot  find  symbol  [FE]                        ArrayIndexOutOfBoundsException    [CONTEXT]    private  void  push(Object  newTop)  {    [BUGGY]  if(stack.size()  ==  stackTop.length)  {  [BUGGY]    Object[]  newStack  =  new  Object[stackSize  *  2];  int[]  newPathIndices  =  new  int[stackSize  *  2];  String[]  newPathNames  =  new  String[stackSize  *  2];  System.arraycopy(stack,  0,  newStack,  0,  stackSize);  System.arraycopy(pathIndices,  0,  newPathIndices,  0,  stackSize);  System.arraycopy(pathNames,  0,  newPathNames,  0,  stackSize);  stack  =  newStack;  pathIndices  =  newPathIndices;  pathNames  =  newPathNames;  }  [CLASS]  JsonTreeReader  1  [METHOD]  push  [RETURN_TYPE]  void  Object  newTop  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  newTop  o  result  int[]  newPathIndices  pathIndices  String[]  newPathNames  pathNames  Object[]  newStack  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	280	280	2	replace	if(stack.size()  ==  stackTop.length)  {	  if(stack.size()    ==    stack.length)    {    	non-compiled	[CE]  cannot  find  symbol	9	None	replace
127	[BUG]  [BUGGY]  if(stack.size()  ==  pathNames.length)  {  [CE]  cannot  find  symbol  [FE]                          ArrayIndexOutOfBoundsException    [CONTEXT]    private  void  push(Object  newTop)  {    [BUGGY]  if(stack.size()  ==  pathNames.length)  {  [BUGGY]    Object[]  newStack  =  new  Object[stackSize  *  2];  int[]  newPathIndices  =  new  int[stackSize  *  2];  String[]  newPathNames  =  new  String[stackSize  *  2];  System.arraycopy(stack,  0,  newStack,  0,  stackSize);  System.arraycopy(pathIndices,  0,  newPathIndices,  0,  stackSize);  System.arraycopy(pathNames,  0,  newPathNames,  0,  stackSize);  stack  =  newStack;  pathIndices  =  newPathIndices;  pathNames  =  newPathNames;  }  [CLASS]  JsonTreeReader  1  [METHOD]  push  [RETURN_TYPE]  void  Object  newTop  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  newTop  o  result  int[]  newPathIndices  pathIndices  String[]  newPathNames  pathNames  Object[]  newStack  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	280	280	2	replace	if(stack.size()  ==  pathNames.length)  {	  if(stack.size()    ==    stack.length)    {    	non-compiled	[CE]  cannot  find  symbol	9	None	replace
128	[BUG]  [BUGGY]  if(stack.length()  ==  stack.length)  {  [CE]  cannot  find  symbol  [FE]                            ArrayIndexOutOfBoundsException    [CONTEXT]    private  void  push(Object  newTop)  {    [BUGGY]  if(stack.length()  ==  stack.length)  {  [BUGGY]    Object[]  newStack  =  new  Object[stackSize  *  2];  int[]  newPathIndices  =  new  int[stackSize  *  2];  String[]  newPathNames  =  new  String[stackSize  *  2];  System.arraycopy(stack,  0,  newStack,  0,  stackSize);  System.arraycopy(pathIndices,  0,  newPathIndices,  0,  stackSize);  System.arraycopy(pathNames,  0,  newPathNames,  0,  stackSize);  stack  =  newStack;  pathIndices  =  newPathIndices;  pathNames  =  newPathNames;  }  [CLASS]  JsonTreeReader  1  [METHOD]  push  [RETURN_TYPE]  void  Object  newTop  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  newTop  o  result  int[]  newPathIndices  pathIndices  String[]  newPathNames  pathNames  Object[]  newStack  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	280	280	2	replace	if(stack.length()  ==  stack.length)  {	  if(stack.size()    ==    stack.length)    {    	non-compiled	[CE]  cannot  find  symbol	9	None	replace
129	[BUG]  [BUGGY]  if(stack.length  ==  stackSize)  {  if(stack.length  ==  stackSize)  {  [CE]  ';'  expected  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]    private  void  push(Object  newTop)  {    [BUGGY]  if(stack.length  ==  stackSize)  {  if(stack.length  ==  stackSize)  {  [BUGGY]    Object[]  newStack  =  new  Object[stackSize  *  2];  int[]  newPathIndices  =  new  int[stackSize  *  2];  String[]  newPathNames  =  new  String[stackSize  *  2];  System.arraycopy(stack,  0,  newStack,  0,  stackSize);  System.arraycopy(pathIndices,  0,  newPathIndices,  0,  stackSize);  System.arraycopy(pathNames,  0,  newPathNames,  0,  stackSize);  stack  =  newStack;  pathIndices  =  newPathIndices;  pathNames  =  newPathNames;  }  [CLASS]  JsonTreeReader  1  [METHOD]  push  [RETURN_TYPE]  void  Object  newTop  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  newTop  o  result  int[]  newPathIndices  pathIndices  String[]  newPathNames  pathNames  Object[]  newStack  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	280	280	2	replace	if(stack.length    ==    stackSize)    {    if(stack.length  ==  stackSize)  {	  	non-compiled	[CE]  ';'  expected	14	None	add
130	[BUG]  [BUGGY]  if(stack.length  ==  stackSize)  {  if(stack.length!=  stackSize)  {  [CE]  ';'  expected  [FE]      ArrayIndexOutOfBoundsException    [CONTEXT]    private  void  push(Object  newTop)  {    [BUGGY]  if(stack.length  ==  stackSize)  {  if(stack.length!=  stackSize)  {  [BUGGY]    Object[]  newStack  =  new  Object[stackSize  *  2];  int[]  newPathIndices  =  new  int[stackSize  *  2];  String[]  newPathNames  =  new  String[stackSize  *  2];  System.arraycopy(stack,  0,  newStack,  0,  stackSize);  System.arraycopy(pathIndices,  0,  newPathIndices,  0,  stackSize);  System.arraycopy(pathNames,  0,  newPathNames,  0,  stackSize);  stack  =  newStack;  pathIndices  =  newPathIndices;  pathNames  =  newPathNames;  }  [CLASS]  JsonTreeReader  1  [METHOD]  push  [RETURN_TYPE]  void  Object  newTop  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  newTop  o  result  int[]  newPathIndices  pathIndices  String[]  newPathNames  pathNames  Object[]  newStack  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	280	280	2	replace	if(stack.length    ==    stackSize)    {    if(stack.length!=  stackSize)  {	  	non-compiled	[CE]  ';'  expected	14	None	add
131	[BUG]  [BUGGY]  if(stack.length  ==  stackSize)  {  if(stack.length  >=  stackSize)  {  [CE]  ';'  expected  [FE]        ArrayIndexOutOfBoundsException    [CONTEXT]    private  void  push(Object  newTop)  {    [BUGGY]  if(stack.length  ==  stackSize)  {  if(stack.length  >=  stackSize)  {  [BUGGY]    Object[]  newStack  =  new  Object[stackSize  *  2];  int[]  newPathIndices  =  new  int[stackSize  *  2];  String[]  newPathNames  =  new  String[stackSize  *  2];  System.arraycopy(stack,  0,  newStack,  0,  stackSize);  System.arraycopy(pathIndices,  0,  newPathIndices,  0,  stackSize);  System.arraycopy(pathNames,  0,  newPathNames,  0,  stackSize);  stack  =  newStack;  pathIndices  =  newPathIndices;  pathNames  =  newPathNames;  }  [CLASS]  JsonTreeReader  1  [METHOD]  push  [RETURN_TYPE]  void  Object  newTop  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  newTop  o  result  int[]  newPathIndices  pathIndices  String[]  newPathNames  pathNames  Object[]  newStack  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	280	280	2	replace	if(stack.length    ==    stackSize)    {    if(stack.length  >=  stackSize)  {	  	non-compiled	[CE]  ';'  expected	14	None	add
132	[BUG]  [BUGGY]  if(stack.length  ==  stackSize)  {  If(stack.length  ==  stackSize)  {  [CE]  ';'  expected  [FE]          ArrayIndexOutOfBoundsException    [CONTEXT]    private  void  push(Object  newTop)  {    [BUGGY]  if(stack.length  ==  stackSize)  {  If(stack.length  ==  stackSize)  {  [BUGGY]    Object[]  newStack  =  new  Object[stackSize  *  2];  int[]  newPathIndices  =  new  int[stackSize  *  2];  String[]  newPathNames  =  new  String[stackSize  *  2];  System.arraycopy(stack,  0,  newStack,  0,  stackSize);  System.arraycopy(pathIndices,  0,  newPathIndices,  0,  stackSize);  System.arraycopy(pathNames,  0,  newPathNames,  0,  stackSize);  stack  =  newStack;  pathIndices  =  newPathIndices;  pathNames  =  newPathNames;  }  [CLASS]  JsonTreeReader  1  [METHOD]  push  [RETURN_TYPE]  void  Object  newTop  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  newTop  o  result  int[]  newPathIndices  pathIndices  String[]  newPathNames  pathNames  Object[]  newStack  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	280	280	2	replace	if(stack.length    ==    stackSize)    {    If(stack.length  ==  stackSize)  {	  	non-compiled	[CE]  ';'  expected	14	None	add
133	[BUG]  [BUGGY]  if(stack.length  ==  stackSize)  {  int  stackSize  =  stack.length;  if(stack.length  ==  stackSize)  {  [CE]  ';'  expected  [FE]            ArrayIndexOutOfBoundsException    [CONTEXT]    private  void  push(Object  newTop)  {    [BUGGY]  if(stack.length  ==  stackSize)  {  int  stackSize  =  stack.length;  if(stack.length  ==  stackSize)  {  [BUGGY]    Object[]  newStack  =  new  Object[stackSize  *  2];  int[]  newPathIndices  =  new  int[stackSize  *  2];  String[]  newPathNames  =  new  String[stackSize  *  2];  System.arraycopy(stack,  0,  newStack,  0,  stackSize);  System.arraycopy(pathIndices,  0,  newPathIndices,  0,  stackSize);  System.arraycopy(pathNames,  0,  newPathNames,  0,  stackSize);  stack  =  newStack;  pathIndices  =  newPathIndices;  pathNames  =  newPathNames;  }  [CLASS]  JsonTreeReader  1  [METHOD]  push  [RETURN_TYPE]  void  Object  newTop  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  newTop  o  result  int[]  newPathIndices  pathIndices  String[]  newPathNames  pathNames  Object[]  newStack  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	280	280	2	replace	if(stack.length    ==    stackSize)    {    int  stackSize  =  stack.length;  if(stack.length  ==  stackSize)  {	  	non-compiled	[CE]  ';'  expected	14	None	add
134	[BUG]  [BUGGY]  if(stack.length  ==  stackSize)  {  if(stack.length  >>  stackSize)  {  [CE]  ';'  expected  [FE]              ArrayIndexOutOfBoundsException    [CONTEXT]    private  void  push(Object  newTop)  {    [BUGGY]  if(stack.length  ==  stackSize)  {  if(stack.length  >>  stackSize)  {  [BUGGY]    Object[]  newStack  =  new  Object[stackSize  *  2];  int[]  newPathIndices  =  new  int[stackSize  *  2];  String[]  newPathNames  =  new  String[stackSize  *  2];  System.arraycopy(stack,  0,  newStack,  0,  stackSize);  System.arraycopy(pathIndices,  0,  newPathIndices,  0,  stackSize);  System.arraycopy(pathNames,  0,  newPathNames,  0,  stackSize);  stack  =  newStack;  pathIndices  =  newPathIndices;  pathNames  =  newPathNames;  }  [CLASS]  JsonTreeReader  1  [METHOD]  push  [RETURN_TYPE]  void  Object  newTop  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  newTop  o  result  int[]  newPathIndices  pathIndices  String[]  newPathNames  pathNames  Object[]  newStack  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	280	280	2	replace	if(stack.length    ==    stackSize)    {    if(stack.length  >>  stackSize)  {	  	non-compiled	[CE]  ';'  expected	14	None	add
135	[BUG]  [BUGGY]  if(stack.length  ==  stackSize)  {  if(stack.length  ==  stackSize)  throw  new  IllegalArgumentException( " ");  [CE]  ';'  expected  [FE]                ArrayIndexOutOfBoundsException    [CONTEXT]    private  void  push(Object  newTop)  {    [BUGGY]  if(stack.length  ==  stackSize)  {  if(stack.length  ==  stackSize)  throw  new  IllegalArgumentException( " ");  [BUGGY]    Object[]  newStack  =  new  Object[stackSize  *  2];  int[]  newPathIndices  =  new  int[stackSize  *  2];  String[]  newPathNames  =  new  String[stackSize  *  2];  System.arraycopy(stack,  0,  newStack,  0,  stackSize);  System.arraycopy(pathIndices,  0,  newPathIndices,  0,  stackSize);  System.arraycopy(pathNames,  0,  newPathNames,  0,  stackSize);  stack  =  newStack;  pathIndices  =  newPathIndices;  pathNames  =  newPathNames;  }  [CLASS]  JsonTreeReader  1  [METHOD]  push  [RETURN_TYPE]  void  Object  newTop  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  newTop  o  result  int[]  newPathIndices  pathIndices  String[]  newPathNames  pathNames  Object[]  newStack  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	280	280	2	replace	if(stack.length    ==    stackSize)    {    if(stack.length  ==  stackSize)  throw  new  IllegalArgumentException( " ");	  	non-compiled	[CE]  ';'  expected	14	None	add
136	[BUG]  [BUGGY]  if(stack.length  ==  1  ||  stack.length  >  0)  {  Object  stack  =  getCurrentSegment();  [CE]  ';'  expected  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]    private  void  push(Object  newTop)  {    [BUGGY]  if(stack.length  ==  1  ||  stack.length  >  0)  {  Object  stack  =  getCurrentSegment();  [BUGGY]    Object[]  newStack  =  new  Object[stackSize  *  2];  int[]  newPathIndices  =  new  int[stackSize  *  2];  String[]  newPathNames  =  new  String[stackSize  *  2];  System.arraycopy(stack,  0,  newStack,  0,  stackSize);  System.arraycopy(pathIndices,  0,  newPathIndices,  0,  stackSize);  System.arraycopy(pathNames,  0,  newPathNames,  0,  stackSize);  stack  =  newStack;  pathIndices  =  newPathIndices;  pathNames  =  newPathNames;  }  [CLASS]  JsonTreeReader  1  [METHOD]  push  [RETURN_TYPE]  void  Object  newTop  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  newTop  o  result  int[]  newPathIndices  pathIndices  String[]  newPathNames  pathNames  Object[]  newStack  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	280	280	2	replace	if(stack.length    ==    1    ||    stack.length    >    0)    {    Object  stack  =  getCurrentSegment();	  	non-compiled	[CE]  ';'  expected	18	None	add
137	[BUG]  [BUGGY]  if(stack.length  ==  1  ||  stack.length  >  0)  {  if(stack.length  ==  1)  {  [CE]  ';'  expected  [FE]      ArrayIndexOutOfBoundsException    [CONTEXT]    private  void  push(Object  newTop)  {    [BUGGY]  if(stack.length  ==  1  ||  stack.length  >  0)  {  if(stack.length  ==  1)  {  [BUGGY]    Object[]  newStack  =  new  Object[stackSize  *  2];  int[]  newPathIndices  =  new  int[stackSize  *  2];  String[]  newPathNames  =  new  String[stackSize  *  2];  System.arraycopy(stack,  0,  newStack,  0,  stackSize);  System.arraycopy(pathIndices,  0,  newPathIndices,  0,  stackSize);  System.arraycopy(pathNames,  0,  newPathNames,  0,  stackSize);  stack  =  newStack;  pathIndices  =  newPathIndices;  pathNames  =  newPathNames;  }  [CLASS]  JsonTreeReader  1  [METHOD]  push  [RETURN_TYPE]  void  Object  newTop  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  newTop  o  result  int[]  newPathIndices  pathIndices  String[]  newPathNames  pathNames  Object[]  newStack  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	280	280	2	replace	if(stack.length    ==    1    ||    stack.length    >    0)    {    if(stack.length  ==  1)  {	  	non-compiled	[CE]  ';'  expected	18	None	add
138	[BUG]  [BUGGY]  [FE]  ArrayIndexOutOfBoundsException  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]    private  void  push(Object  newTop)  {    [BUGGY]  if(stack!=  null)  {  [BUGGY]    Object[]  newStack  =  new  Object[stackSize  *  2];  int[]  newPathIndices  =  new  int[stackSize  *  2];  String[]  newPathNames  =  new  String[stackSize  *  2];  System.arraycopy(stack,  0,  newStack,  0,  stackSize);  System.arraycopy(pathIndices,  0,  newPathIndices,  0,  stackSize);  System.arraycopy(pathNames,  0,  newPathNames,  0,  stackSize);  stack  =  newStack;  pathIndices  =  newPathIndices;  pathNames  =  newPathNames;  }  [CLASS]  JsonTreeReader  1  [METHOD]  push  [RETURN_TYPE]  void  Object  newTop  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  newTop  o  result  int[]  newPathIndices  pathIndices  String[]  newPathNames  pathNames  Object[]  newStack  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	280	280	2	add	if(stack!=  null)  {	  if(stack.length    ==    stack.length)    {    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	7	2	replace
139	[BUG]  [BUGGY]  if(stack!=  null)  {  [FE]  ArrayIndexOutOfBoundsException  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]    private  void  push(Object  newTop)  {    [BUGGY]  if(stack!=  null)  {  [BUGGY]    Object[]  newStack  =  new  Object[stackSize  *  2];  int[]  newPathIndices  =  new  int[stackSize  *  2];  String[]  newPathNames  =  new  String[stackSize  *  2];  System.arraycopy(stack,  0,  newStack,  0,  stackSize);  System.arraycopy(pathIndices,  0,  newPathIndices,  0,  stackSize);  System.arraycopy(pathNames,  0,  newPathNames,  0,  stackSize);  stack  =  newStack;  pathIndices  =  newPathIndices;  pathNames  =  newPathNames;  }  [CLASS]  JsonTreeReader  1  [METHOD]  push  [RETURN_TYPE]  void  Object  newTop  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  newTop  o  result  int[]  newPathIndices  pathIndices  String[]  newPathNames  pathNames  Object[]  newStack  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	280	280	2	replace	if(stack!=  null)  {	  if(stack.length    ==    stack.length)    {    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	7	2	replace
140	[BUG]  [BUGGY]  if(stackSize  ==  newTop)  {  int  stackSize  ==  newTop)  {  [CE]  ';'  expected  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]    private  void  push(Object  newTop)  {    [BUGGY]  if(stackSize  ==  newTop)  {  int  stackSize  ==  newTop)  {  [BUGGY]    Object[]  newStack  =  new  Object[stackSize  *  2];  int[]  newPathIndices  =  new  int[stackSize  *  2];  String[]  newPathNames  =  new  String[stackSize  *  2];  System.arraycopy(stack,  0,  newStack,  0,  stackSize);  System.arraycopy(pathIndices,  0,  newPathIndices,  0,  stackSize);  System.arraycopy(pathNames,  0,  newPathNames,  0,  stackSize);  stack  =  newStack;  pathIndices  =  newPathIndices;  pathNames  =  newPathNames;  }  [CLASS]  JsonTreeReader  1  [METHOD]  push  [RETURN_TYPE]  void  Object  newTop  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  newTop  o  result  int[]  newPathIndices  pathIndices  String[]  newPathNames  pathNames  Object[]  newStack  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	280	280	2	replace	if(stackSize    ==    newTop)    {    int  stackSize  ==  newTop)  {	  	non-compiled	[CE]  ';'  expected	16	None	add
141	[BUG]  [BUGGY]  if(stackSize  ==  newTop)  {  Object  stackSize  ==  newTop)  {  [CE]  ';'  expected  [FE]      ArrayIndexOutOfBoundsException    [CONTEXT]    private  void  push(Object  newTop)  {    [BUGGY]  if(stackSize  ==  newTop)  {  Object  stackSize  ==  newTop)  {  [BUGGY]    Object[]  newStack  =  new  Object[stackSize  *  2];  int[]  newPathIndices  =  new  int[stackSize  *  2];  String[]  newPathNames  =  new  String[stackSize  *  2];  System.arraycopy(stack,  0,  newStack,  0,  stackSize);  System.arraycopy(pathIndices,  0,  newPathIndices,  0,  stackSize);  System.arraycopy(pathNames,  0,  newPathNames,  0,  stackSize);  stack  =  newStack;  pathIndices  =  newPathIndices;  pathNames  =  newPathNames;  }  [CLASS]  JsonTreeReader  1  [METHOD]  push  [RETURN_TYPE]  void  Object  newTop  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  newTop  o  result  int[]  newPathIndices  pathIndices  String[]  newPathNames  pathNames  Object[]  newStack  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	280	280	2	replace	if(stackSize    ==    newTop)    {    Object  stackSize  ==  newTop)  {	  	non-compiled	[CE]  ';'  expected	16	None	add
142	[BUG]  [BUGGY]  if(stack!=  null  ||  stack.length  <  newTop)  {  [CE]  bad  operand  types  for  binary  operator  '<'  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]    private  void  push(Object  newTop)  {    [BUGGY]  if(stack!=  null  ||  stack.length  <  newTop)  {  [BUGGY]    Object[]  newStack  =  new  Object[stackSize  *  2];  int[]  newPathIndices  =  new  int[stackSize  *  2];  String[]  newPathNames  =  new  String[stackSize  *  2];  System.arraycopy(stack,  0,  newStack,  0,  stackSize);  System.arraycopy(pathIndices,  0,  newPathIndices,  0,  stackSize);  System.arraycopy(pathNames,  0,  newPathNames,  0,  stackSize);  stack  =  newStack;  pathIndices  =  newPathIndices;  pathNames  =  newPathNames;  }  [CLASS]  JsonTreeReader  1  [METHOD]  push  [RETURN_TYPE]  void  Object  newTop  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  newTop  o  result  int[]  newPathIndices  pathIndices  String[]  newPathNames  pathNames  Object[]  newStack  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	280	280	2	replace	if(stack!=  null  ||  stack.length  <  newTop)  {	  if(stack.length    ==    newTop)    {    	non-compiled	[CE]  bad  operand  types  for  binary  operator  '<'	2	None	replace
143	[BUG]  [BUGGY]  if(newTop  ==  null)  {  System.arraycopy(stack,  0,  newPathNames,  0,  stackSize);  System.arraycopy(pathNames,  0,  newPathNames,  0,  stackSize);  }  [CE]  ']'  expected  [FE]                      ArrayIndexOutOfBoundsException    [CONTEXT]    private  void  push(Object  newTop)  {    [BUGGY]  if(newTop  ==  null)  {  System.arraycopy(stack,  0,  newPathNames,  0,  stackSize);  System.arraycopy(pathNames,  0,  newPathNames,  0,  stackSize);  }  [BUGGY]    Object[]  newStack  =  new  Object[stackSize  *  2];  int[]  newPathIndices  =  new  int[stackSize  *  2];  String[]  newPathNames  =  new  String[stackSize  *  2];  System.arraycopy(stack,  0,  newStack,  0,  stackSize);  System.arraycopy(pathIndices,  0,  newPathIndices,  0,  stackSize);  System.arraycopy(pathNames,  0,  newPathNames,  0,  stackSize);  stack  =  newStack;  pathIndices  =  newPathIndices;  pathNames  =  newPathNames;  }  [CLASS]  JsonTreeReader  1  [METHOD]  push  [RETURN_TYPE]  void  Object  newTop  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  newTop  o  result  int[]  newPathIndices  pathIndices  String[]  newPathNames  pathNames  Object[]  newStack  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	280	280	2	replace	if(newTop  ==  null)  {  System.arraycopy(stack,  0,  newPathNames,  0,  stackSize);  System.arraycopy(pathNames,  0,  newPathNames,  0,  stackSize);  }	      	non-compiled	[CE]  ']'  expected	11	None	replace
144	[BUG]  [BUGGY]  if(newTop!=  null)  {  System.arraycopy(stack,  0,  newPathNames,  0,  stackSize);  System.arraycopy(pathNames,  0,  newPathNames,  0,  stackSize);  }  [CE]  ']'  expected  [FE]                        ArrayIndexOutOfBoundsException    [CONTEXT]    private  void  push(Object  newTop)  {    [BUGGY]  if(newTop!=  null)  {  System.arraycopy(stack,  0,  newPathNames,  0,  stackSize);  System.arraycopy(pathNames,  0,  newPathNames,  0,  stackSize);  }  [BUGGY]    Object[]  newStack  =  new  Object[stackSize  *  2];  int[]  newPathIndices  =  new  int[stackSize  *  2];  String[]  newPathNames  =  new  String[stackSize  *  2];  System.arraycopy(stack,  0,  newStack,  0,  stackSize);  System.arraycopy(pathIndices,  0,  newPathIndices,  0,  stackSize);  System.arraycopy(pathNames,  0,  newPathNames,  0,  stackSize);  stack  =  newStack;  pathIndices  =  newPathIndices;  pathNames  =  newPathNames;  }  [CLASS]  JsonTreeReader  1  [METHOD]  push  [RETURN_TYPE]  void  Object  newTop  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  newTop  o  result  int[]  newPathIndices  pathIndices  String[]  newPathNames  pathNames  Object[]  newStack  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	280	280	2	replace	if(newTop!=  null)  {  System.arraycopy(stack,  0,  newPathNames,  0,  stackSize);  System.arraycopy(pathNames,  0,  newPathNames,  0,  stackSize);  }	      	non-compiled	[CE]  ']'  expected	11	None	replace
145	[BUG]  [BUGGY]  if(newTop  ==  null)  {  System.arraycopy(stack,  0,  newPathNames,  0,  stackSize);  System.arraycopy(pathNames,  0,  newPathNames,  0,  stackSize);  }  else  {  System.arraycopy(pathNames,  0,  newPathNames,  [CE]  '.class'  expected  [FE]                          ArrayIndexOutOfBoundsException    [CONTEXT]    private  void  push(Object  newTop)  {    [BUGGY]  if(newTop  ==  null)  {  System.arraycopy(stack,  0,  newPathNames,  0,  stackSize);  System.arraycopy(pathNames,  0,  newPathNames,  0,  stackSize);  }  else  {  System.arraycopy(pathNames,  0,  newPathNames,  [BUGGY]    Object[]  newStack  =  new  Object[stackSize  *  2];  int[]  newPathIndices  =  new  int[stackSize  *  2];  String[]  newPathNames  =  new  String[stackSize  *  2];  System.arraycopy(stack,  0,  newStack,  0,  stackSize);  System.arraycopy(pathIndices,  0,  newPathIndices,  0,  stackSize);  System.arraycopy(pathNames,  0,  newPathNames,  0,  stackSize);  stack  =  newStack;  pathIndices  =  newPathIndices;  pathNames  =  newPathNames;  }  [CLASS]  JsonTreeReader  1  [METHOD]  push  [RETURN_TYPE]  void  Object  newTop  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  newTop  o  result  int[]  newPathIndices  pathIndices  String[]  newPathNames  pathNames  Object[]  newStack  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	280	280	2	replace	if(newTop  ==  null)  {  System.arraycopy(stack,  0,  newPathNames,  0,  stackSize);  System.arraycopy(pathNames,  0,  newPathNames,  0,  stackSize);  }  else  {  System.arraycopy(pathNames,  0,  newPathNames,	      	non-compiled	[CE]  '.class'  expected	11	None	replace
146	[BUG]  [BUGGY]  if(newTop!=  null)  {  System.arraycopy(stack,  0,  newPathNames,  0,  stackSize);  System.arraycopy(pathNames,  0,  newPathNames,  0,  stackSize);  }  else  {  System.arraycopy(pathNames,  0,  newPathNames,  [CE]  '.class'  expected  [FE]                            ArrayIndexOutOfBoundsException    [CONTEXT]    private  void  push(Object  newTop)  {    [BUGGY]  if(newTop!=  null)  {  System.arraycopy(stack,  0,  newPathNames,  0,  stackSize);  System.arraycopy(pathNames,  0,  newPathNames,  0,  stackSize);  }  else  {  System.arraycopy(pathNames,  0,  newPathNames,  [BUGGY]    Object[]  newStack  =  new  Object[stackSize  *  2];  int[]  newPathIndices  =  new  int[stackSize  *  2];  String[]  newPathNames  =  new  String[stackSize  *  2];  System.arraycopy(stack,  0,  newStack,  0,  stackSize);  System.arraycopy(pathIndices,  0,  newPathIndices,  0,  stackSize);  System.arraycopy(pathNames,  0,  newPathNames,  0,  stackSize);  stack  =  newStack;  pathIndices  =  newPathIndices;  pathNames  =  newPathNames;  }  [CLASS]  JsonTreeReader  1  [METHOD]  push  [RETURN_TYPE]  void  Object  newTop  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  newTop  o  result  int[]  newPathIndices  pathIndices  String[]  newPathNames  pathNames  Object[]  newStack  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	280	280	2	replace	if(newTop!=  null)  {  System.arraycopy(stack,  0,  newPathNames,  0,  stackSize);  System.arraycopy(pathNames,  0,  newPathNames,  0,  stackSize);  }  else  {  System.arraycopy(pathNames,  0,  newPathNames,	      	non-compiled	[CE]  '.class'  expected	11	None	replace
147	[BUG]  [BUGGY]  if(newTop  ==  null)  {  System.arraycopy(stack,  0,  newPathNames,  0,  stackSize);  System.arraycopy(pathNames,  0,  newPathNames,  0,  stackSize);  }  else  {  System.arraycopy(pathNames,  0,  newPathNames  [CE]  ')'  expected  [FE]                              ArrayIndexOutOfBoundsException    [CONTEXT]    private  void  push(Object  newTop)  {    [BUGGY]  if(newTop  ==  null)  {  System.arraycopy(stack,  0,  newPathNames,  0,  stackSize);  System.arraycopy(pathNames,  0,  newPathNames,  0,  stackSize);  }  else  {  System.arraycopy(pathNames,  0,  newPathNames  [BUGGY]    Object[]  newStack  =  new  Object[stackSize  *  2];  int[]  newPathIndices  =  new  int[stackSize  *  2];  String[]  newPathNames  =  new  String[stackSize  *  2];  System.arraycopy(stack,  0,  newStack,  0,  stackSize);  System.arraycopy(pathIndices,  0,  newPathIndices,  0,  stackSize);  System.arraycopy(pathNames,  0,  newPathNames,  0,  stackSize);  stack  =  newStack;  pathIndices  =  newPathIndices;  pathNames  =  newPathNames;  }  [CLASS]  JsonTreeReader  1  [METHOD]  push  [RETURN_TYPE]  void  Object  newTop  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  newTop  o  result  int[]  newPathIndices  pathIndices  String[]  newPathNames  pathNames  Object[]  newStack  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	280	280	2	replace	if(newTop  ==  null)  {  System.arraycopy(stack,  0,  newPathNames,  0,  stackSize);  System.arraycopy(pathNames,  0,  newPathNames,  0,  stackSize);  }  else  {  System.arraycopy(pathNames,  0,  newPathNames	      	non-compiled	[CE]  ')'  expected	11	None	replace
148	[BUG]  [BUGGY]  if(newTop  ==  null)  {  System.arraycopy(stack,  0,  newPathNames,  0,  stackSize);  System.arraycopy(pathNames,  0,  newPathNames,  0,  stackSize);  System.arraycopy(pathNames,  0,  newPathNames,  [CE]  '.class'  expected  [FE]                                ArrayIndexOutOfBoundsException    [CONTEXT]    private  void  push(Object  newTop)  {    [BUGGY]  if(newTop  ==  null)  {  System.arraycopy(stack,  0,  newPathNames,  0,  stackSize);  System.arraycopy(pathNames,  0,  newPathNames,  0,  stackSize);  System.arraycopy(pathNames,  0,  newPathNames,  [BUGGY]    Object[]  newStack  =  new  Object[stackSize  *  2];  int[]  newPathIndices  =  new  int[stackSize  *  2];  String[]  newPathNames  =  new  String[stackSize  *  2];  System.arraycopy(stack,  0,  newStack,  0,  stackSize);  System.arraycopy(pathIndices,  0,  newPathIndices,  0,  stackSize);  System.arraycopy(pathNames,  0,  newPathNames,  0,  stackSize);  stack  =  newStack;  pathIndices  =  newPathIndices;  pathNames  =  newPathNames;  }  [CLASS]  JsonTreeReader  1  [METHOD]  push  [RETURN_TYPE]  void  Object  newTop  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  newTop  o  result  int[]  newPathIndices  pathIndices  String[]  newPathNames  pathNames  Object[]  newStack  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	280	280	2	replace	if(newTop  ==  null)  {  System.arraycopy(stack,  0,  newPathNames,  0,  stackSize);  System.arraycopy(pathNames,  0,  newPathNames,  0,  stackSize);  System.arraycopy(pathNames,  0,  newPathNames,	      	non-compiled	[CE]  '.class'  expected	11	None	replace
149	[BUG]  [BUGGY]  if(newTop!=  null)  {  System.arraycopy(stack,  0,  newPathNames,  0,  stackSize);  System.arraycopy(pathNames,  0,  newPathNames,  0,  stackSize);  System.arraycopy(pathNames,  0,  newPathNames,  [CE]  '.class'  expected  [FE]                                  ArrayIndexOutOfBoundsException    [CONTEXT]    private  void  push(Object  newTop)  {    [BUGGY]  if(newTop!=  null)  {  System.arraycopy(stack,  0,  newPathNames,  0,  stackSize);  System.arraycopy(pathNames,  0,  newPathNames,  0,  stackSize);  System.arraycopy(pathNames,  0,  newPathNames,  [BUGGY]    Object[]  newStack  =  new  Object[stackSize  *  2];  int[]  newPathIndices  =  new  int[stackSize  *  2];  String[]  newPathNames  =  new  String[stackSize  *  2];  System.arraycopy(stack,  0,  newStack,  0,  stackSize);  System.arraycopy(pathIndices,  0,  newPathIndices,  0,  stackSize);  System.arraycopy(pathNames,  0,  newPathNames,  0,  stackSize);  stack  =  newStack;  pathIndices  =  newPathIndices;  pathNames  =  newPathNames;  }  [CLASS]  JsonTreeReader  1  [METHOD]  push  [RETURN_TYPE]  void  Object  newTop  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  newTop  o  result  int[]  newPathIndices  pathIndices  String[]  newPathNames  pathNames  Object[]  newStack  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	280	280	2	replace	if(newTop!=  null)  {  System.arraycopy(stack,  0,  newPathNames,  0,  stackSize);  System.arraycopy(pathNames,  0,  newPathNames,  0,  stackSize);  System.arraycopy(pathNames,  0,  newPathNames,	      	non-compiled	[CE]  '.class'  expected	11	None	replace
150	[BUG]  [BUGGY]  if(stack!=  null  ||  stack.length  >=  newTop)  {  [CE]  bad  operand  types  for  binary  operator  '>='  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]    private  void  push(Object  newTop)  {    [BUGGY]  if(stack!=  null  ||  stack.length  >=  newTop)  {  [BUGGY]    Object[]  newStack  =  new  Object[stackSize  *  2];  int[]  newPathIndices  =  new  int[stackSize  *  2];  String[]  newPathNames  =  new  String[stackSize  *  2];  System.arraycopy(stack,  0,  newStack,  0,  stackSize);  System.arraycopy(pathIndices,  0,  newPathIndices,  0,  stackSize);  System.arraycopy(pathNames,  0,  newPathNames,  0,  stackSize);  stack  =  newStack;  pathIndices  =  newPathIndices;  pathNames  =  newPathNames;  }  [CLASS]  JsonTreeReader  1  [METHOD]  push  [RETURN_TYPE]  void  Object  newTop  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  newTop  o  result  int[]  newPathIndices  pathIndices  String[]  newPathNames  pathNames  Object[]  newStack  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	280	280	2	replace	if(stack!=  null  ||  stack.length  >=  newTop)  {	  if(stack.length!=    newTop)    {    	non-compiled	[CE]  bad  operand  types  for  binary  operator  '>='	5	None	replace
151	[BUG]  [BUGGY]  if(stack.length  ==  stackSize)  {  Object  stackSize  =  stack.length;  [CE]  ';'  expected  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]    private  void  push(Object  newTop)  {    [BUGGY]  if(stack.length  ==  stackSize)  {  Object  stackSize  =  stack.length;  [BUGGY]    Object[]  newStack  =  new  Object[stackSize  *  2];  int[]  newPathIndices  =  new  int[stackSize  *  2];  String[]  newPathNames  =  new  String[stackSize  *  2];  System.arraycopy(stack,  0,  newStack,  0,  stackSize);  System.arraycopy(pathIndices,  0,  newPathIndices,  0,  stackSize);  System.arraycopy(pathNames,  0,  newPathNames,  0,  stackSize);  stack  =  newStack;  pathIndices  =  newPathIndices;  pathNames  =  newPathNames;  }  [CLASS]  JsonTreeReader  1  [METHOD]  push  [RETURN_TYPE]  void  Object  newTop  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  newTop  o  result  int[]  newPathIndices  pathIndices  String[]  newPathNames  pathNames  Object[]  newStack  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	280	280	2	replace	if(stack.length    ==    stackSize)    {    Object  stackSize  =  stack.length;	  	non-compiled	[CE]  ';'  expected	14	None	add
152	[BUG]  [BUGGY]  if(stack.length  ==  stackSize)  {  int  stackSize  =  stack.length;  [CE]  ';'  expected  [FE]      ArrayIndexOutOfBoundsException    [CONTEXT]    private  void  push(Object  newTop)  {    [BUGGY]  if(stack.length  ==  stackSize)  {  int  stackSize  =  stack.length;  [BUGGY]    Object[]  newStack  =  new  Object[stackSize  *  2];  int[]  newPathIndices  =  new  int[stackSize  *  2];  String[]  newPathNames  =  new  String[stackSize  *  2];  System.arraycopy(stack,  0,  newStack,  0,  stackSize);  System.arraycopy(pathIndices,  0,  newPathIndices,  0,  stackSize);  System.arraycopy(pathNames,  0,  newPathNames,  0,  stackSize);  stack  =  newStack;  pathIndices  =  newPathIndices;  pathNames  =  newPathNames;  }  [CLASS]  JsonTreeReader  1  [METHOD]  push  [RETURN_TYPE]  void  Object  newTop  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  newTop  o  result  int[]  newPathIndices  pathIndices  String[]  newPathNames  pathNames  Object[]  newStack  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	280	280	2	replace	if(stack.length    ==    stackSize)    {    int  stackSize  =  stack.length;	  	non-compiled	[CE]  ';'  expected	14	None	add
153	[BUG]  [BUGGY]  if(stack.length  ==  stackSize)  {  Object  stack.length  ==  stackSize)  {  [CE]  ';'  expected  [FE]        ArrayIndexOutOfBoundsException    [CONTEXT]    private  void  push(Object  newTop)  {    [BUGGY]  if(stack.length  ==  stackSize)  {  Object  stack.length  ==  stackSize)  {  [BUGGY]    Object[]  newStack  =  new  Object[stackSize  *  2];  int[]  newPathIndices  =  new  int[stackSize  *  2];  String[]  newPathNames  =  new  String[stackSize  *  2];  System.arraycopy(stack,  0,  newStack,  0,  stackSize);  System.arraycopy(pathIndices,  0,  newPathIndices,  0,  stackSize);  System.arraycopy(pathNames,  0,  newPathNames,  0,  stackSize);  stack  =  newStack;  pathIndices  =  newPathIndices;  pathNames  =  newPathNames;  }  [CLASS]  JsonTreeReader  1  [METHOD]  push  [RETURN_TYPE]  void  Object  newTop  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  newTop  o  result  int[]  newPathIndices  pathIndices  String[]  newPathNames  pathNames  Object[]  newStack  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	280	280	2	replace	if(stack.length    ==    stackSize)    {    Object  stack.length  ==  stackSize)  {	  	non-compiled	[CE]  ';'  expected	14	None	add
154	[BUG]  [BUGGY]  [FE]  ArrayIndexOutOfBoundsException  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]    private  void  push(Object  newTop)  {    [BUGGY]  if(newTop!=  null  ||  newTop  ==  null)  {  [BUGGY]    Object[]  newStack  =  new  Object[stackSize  *  2];  int[]  newPathIndices  =  new  int[stackSize  *  2];  String[]  newPathNames  =  new  String[stackSize  *  2];  System.arraycopy(stack,  0,  newStack,  0,  stackSize);  System.arraycopy(pathIndices,  0,  newPathIndices,  0,  stackSize);  System.arraycopy(pathNames,  0,  newPathNames,  0,  stackSize);  stack  =  newStack;  pathIndices  =  newPathIndices;  pathNames  =  newPathNames;  }  [CLASS]  JsonTreeReader  1  [METHOD]  push  [RETURN_TYPE]  void  Object  newTop  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  newTop  o  result  int[]  newPathIndices  pathIndices  String[]  newPathNames  pathNames  Object[]  newStack  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	280	280	2	add	if(newTop!=  null  ||  newTop  ==  null)  {	  if(stack!=    null    ||    stack.length    ==    0)    {    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	13	2	replace
155	[BUG]  [BUGGY]  if(newTop!=  null  ||  newTop  ==  null)  {  [FE]  ArrayIndexOutOfBoundsException  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]    private  void  push(Object  newTop)  {    [BUGGY]  if(newTop!=  null  ||  newTop  ==  null)  {  [BUGGY]    Object[]  newStack  =  new  Object[stackSize  *  2];  int[]  newPathIndices  =  new  int[stackSize  *  2];  String[]  newPathNames  =  new  String[stackSize  *  2];  System.arraycopy(stack,  0,  newStack,  0,  stackSize);  System.arraycopy(pathIndices,  0,  newPathIndices,  0,  stackSize);  System.arraycopy(pathNames,  0,  newPathNames,  0,  stackSize);  stack  =  newStack;  pathIndices  =  newPathIndices;  pathNames  =  newPathNames;  }  [CLASS]  JsonTreeReader  1  [METHOD]  push  [RETURN_TYPE]  void  Object  newTop  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  newTop  o  result  int[]  newPathIndices  pathIndices  String[]  newPathNames  pathNames  Object[]  newStack  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	280	280	2	replace	if(newTop!=  null  ||  newTop  ==  null)  {	  if(stack!=    null    ||    stack.length    ==    0)    {    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	13	2	replace
156	[BUG]  [BUGGY]  [FE]  ArrayIndexOutOfBoundsException  [FE]          ArrayIndexOutOfBoundsException    [CONTEXT]    private  void  push(Object  newTop)  {    [BUGGY]  if(stack!=  newTop)  {  [BUGGY]    Object[]  newStack  =  new  Object[stackSize  *  2];  int[]  newPathIndices  =  new  int[stackSize  *  2];  String[]  newPathNames  =  new  String[stackSize  *  2];  System.arraycopy(stack,  0,  newStack,  0,  stackSize);  System.arraycopy(pathIndices,  0,  newPathIndices,  0,  stackSize);  System.arraycopy(pathNames,  0,  newPathNames,  0,  stackSize);  stack  =  newStack;  pathIndices  =  newPathIndices;  pathNames  =  newPathNames;  }  [CLASS]  JsonTreeReader  1  [METHOD]  push  [RETURN_TYPE]  void  Object  newTop  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  newTop  o  result  int[]  newPathIndices  pathIndices  String[]  newPathNames  pathNames  Object[]  newStack  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	280	280	2	add	if(stack!=  newTop)  {	  if(newTop    ==    stack.length)    {    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	3	2	replace
157	[BUG]  [BUGGY]  if(stack!=  newTop)  {  [FE]  ArrayIndexOutOfBoundsException  [FE]          ArrayIndexOutOfBoundsException    [CONTEXT]    private  void  push(Object  newTop)  {    [BUGGY]  if(stack!=  newTop)  {  [BUGGY]    Object[]  newStack  =  new  Object[stackSize  *  2];  int[]  newPathIndices  =  new  int[stackSize  *  2];  String[]  newPathNames  =  new  String[stackSize  *  2];  System.arraycopy(stack,  0,  newStack,  0,  stackSize);  System.arraycopy(pathIndices,  0,  newPathIndices,  0,  stackSize);  System.arraycopy(pathNames,  0,  newPathNames,  0,  stackSize);  stack  =  newStack;  pathIndices  =  newPathIndices;  pathNames  =  newPathNames;  }  [CLASS]  JsonTreeReader  1  [METHOD]  push  [RETURN_TYPE]  void  Object  newTop  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  newTop  o  result  int[]  newPathIndices  pathIndices  String[]  newPathNames  pathNames  Object[]  newStack  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	280	280	2	replace	if(stack!=  newTop)  {	  if(newTop    ==    stack.length)    {    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	3	2	replace
158	[BUG]  [BUGGY]  [FE]  ArrayIndexOutOfBoundsException  [FE]            ArrayIndexOutOfBoundsException    [CONTEXT]    private  void  push(Object  newTop)  {    [BUGGY]  if(stack  ==  newTop)  {  [BUGGY]    Object[]  newStack  =  new  Object[stackSize  *  2];  int[]  newPathIndices  =  new  int[stackSize  *  2];  String[]  newPathNames  =  new  String[stackSize  *  2];  System.arraycopy(stack,  0,  newStack,  0,  stackSize);  System.arraycopy(pathIndices,  0,  newPathIndices,  0,  stackSize);  System.arraycopy(pathNames,  0,  newPathNames,  0,  stackSize);  stack  =  newStack;  pathIndices  =  newPathIndices;  pathNames  =  newPathNames;  }  [CLASS]  JsonTreeReader  1  [METHOD]  push  [RETURN_TYPE]  void  Object  newTop  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  newTop  o  result  int[]  newPathIndices  pathIndices  String[]  newPathNames  pathNames  Object[]  newStack  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	280	280	2	add	if(stack  ==  newTop)  {	  if(newTop    ==    stack.length)    {    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	3	2	replace
159	[BUG]  [BUGGY]  if(stack  ==  newTop)  {  [FE]  ArrayIndexOutOfBoundsException  [FE]            ArrayIndexOutOfBoundsException    [CONTEXT]    private  void  push(Object  newTop)  {    [BUGGY]  if(stack  ==  newTop)  {  [BUGGY]    Object[]  newStack  =  new  Object[stackSize  *  2];  int[]  newPathIndices  =  new  int[stackSize  *  2];  String[]  newPathNames  =  new  String[stackSize  *  2];  System.arraycopy(stack,  0,  newStack,  0,  stackSize);  System.arraycopy(pathIndices,  0,  newPathIndices,  0,  stackSize);  System.arraycopy(pathNames,  0,  newPathNames,  0,  stackSize);  stack  =  newStack;  pathIndices  =  newPathIndices;  pathNames  =  newPathNames;  }  [CLASS]  JsonTreeReader  1  [METHOD]  push  [RETURN_TYPE]  void  Object  newTop  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  newTop  o  result  int[]  newPathIndices  pathIndices  String[]  newPathNames  pathNames  Object[]  newStack  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	280	280	2	replace	if(stack  ==  newTop)  {	  if(newTop    ==    stack.length)    {    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	3	2	replace
160	[BUG]  [BUGGY]  if(stack!=  null  ||  stack.length  ==  0)  {  if(stack!=  null  ||  stack[length  ==  0)  {  [CE]  ']'  expected  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]    private  void  push(Object  newTop)  {    [BUGGY]  if(stack!=  null  ||  stack.length  ==  0)  {  if(stack!=  null  ||  stack[length  ==  0)  {  [BUGGY]    Object[]  newStack  =  new  Object[stackSize  *  2];  int[]  newPathIndices  =  new  int[stackSize  *  2];  String[]  newPathNames  =  new  String[stackSize  *  2];  System.arraycopy(stack,  0,  newStack,  0,  stackSize);  System.arraycopy(pathIndices,  0,  newPathIndices,  0,  stackSize);  System.arraycopy(pathNames,  0,  newPathNames,  0,  stackSize);  stack  =  newStack;  pathIndices  =  newPathIndices;  pathNames  =  newPathNames;  }  [CLASS]  JsonTreeReader  1  [METHOD]  push  [RETURN_TYPE]  void  Object  newTop  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  newTop  o  result  int[]  newPathIndices  pathIndices  String[]  newPathNames  pathNames  Object[]  newStack  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	280	280	2	replace	if(stack!=    null    ||    stack.length    ==    0)    {    if(stack!=  null  ||  stack[length  ==  0)  {	  	non-compiled	[CE]  ']'  expected	12	None	add
161	[BUG]  [BUGGY]  if(stack!=  null  ||  stack.length  ==  0)  {  if(stack!=  null  ||  stack.length  >>  0)  {  [CE]  ';'  expected  [FE]      ArrayIndexOutOfBoundsException    [CONTEXT]    private  void  push(Object  newTop)  {    [BUGGY]  if(stack!=  null  ||  stack.length  ==  0)  {  if(stack!=  null  ||  stack.length  >>  0)  {  [BUGGY]    Object[]  newStack  =  new  Object[stackSize  *  2];  int[]  newPathIndices  =  new  int[stackSize  *  2];  String[]  newPathNames  =  new  String[stackSize  *  2];  System.arraycopy(stack,  0,  newStack,  0,  stackSize);  System.arraycopy(pathIndices,  0,  newPathIndices,  0,  stackSize);  System.arraycopy(pathNames,  0,  newPathNames,  0,  stackSize);  stack  =  newStack;  pathIndices  =  newPathIndices;  pathNames  =  newPathNames;  }  [CLASS]  JsonTreeReader  1  [METHOD]  push  [RETURN_TYPE]  void  Object  newTop  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  newTop  o  result  int[]  newPathIndices  pathIndices  String[]  newPathNames  pathNames  Object[]  newStack  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	280	280	2	replace	if(stack!=    null    ||    stack.length    ==    0)    {    if(stack!=  null  ||  stack.length  >>  0)  {	  	non-compiled	[CE]  ';'  expected	12	None	add
162	[BUG]  [BUGGY]  if(stack!=  null  ||  stack.length  ==  0)  {  if(stack!=  null  ||  stack.length  ==  0])  {  [CE]  ')'  expected  [FE]        ArrayIndexOutOfBoundsException    [CONTEXT]    private  void  push(Object  newTop)  {    [BUGGY]  if(stack!=  null  ||  stack.length  ==  0)  {  if(stack!=  null  ||  stack.length  ==  0])  {  [BUGGY]    Object[]  newStack  =  new  Object[stackSize  *  2];  int[]  newPathIndices  =  new  int[stackSize  *  2];  String[]  newPathNames  =  new  String[stackSize  *  2];  System.arraycopy(stack,  0,  newStack,  0,  stackSize);  System.arraycopy(pathIndices,  0,  newPathIndices,  0,  stackSize);  System.arraycopy(pathNames,  0,  newPathNames,  0,  stackSize);  stack  =  newStack;  pathIndices  =  newPathIndices;  pathNames  =  newPathNames;  }  [CLASS]  JsonTreeReader  1  [METHOD]  push  [RETURN_TYPE]  void  Object  newTop  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  newTop  o  result  int[]  newPathIndices  pathIndices  String[]  newPathNames  pathNames  Object[]  newStack  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	280	280	2	replace	if(stack!=    null    ||    stack.length    ==    0)    {    if(stack!=  null  ||  stack.length  ==  0])  {	  	non-compiled	[CE]  ')'  expected	12	None	add
163	[BUG]  [BUGGY]  if(stackSize  ==  newTop.length)  {  [CE]  cannot  find  symbol  length  [FE]                    ArrayIndexOutOfBoundsException    [CONTEXT]    private  void  push(Object  newTop)  {    [BUGGY]  if(stackSize  ==  newTop.length)  {  [BUGGY]    Object[]  newStack  =  new  Object[stackSize  *  2];  int[]  newPathIndices  =  new  int[stackSize  *  2];  String[]  newPathNames  =  new  String[stackSize  *  2];  System.arraycopy(stack,  0,  newStack,  0,  stackSize);  System.arraycopy(pathIndices,  0,  newPathIndices,  0,  stackSize);  System.arraycopy(pathNames,  0,  newPathNames,  0,  stackSize);  stack  =  newStack;  pathIndices  =  newPathIndices;  pathNames  =  newPathNames;  }  [CLASS]  JsonTreeReader  1  [METHOD]  push  [RETURN_TYPE]  void  Object  newTop  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  newTop  o  result  int[]  newPathIndices  pathIndices  String[]  newPathNames  pathNames  Object[]  newStack  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	280	280	2	replace	if(stackSize  ==  newTop.length)  {	  if(stack.length    ==    newTop.length)    {    	non-compiled	[CE]  cannot  find  symbol  length	10	None	replace
164	[BUG]  [BUGGY]  [FE]  ArrayIndexOutOfBoundsException  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]    private  void  push(Object  newTop)  {    [BUGGY]  if(stack!=  null  ||  stack.length  >  0)  {  [BUGGY]    Object[]  newStack  =  new  Object[stackSize  *  2];  int[]  newPathIndices  =  new  int[stackSize  *  2];  String[]  newPathNames  =  new  String[stackSize  *  2];  System.arraycopy(stack,  0,  newStack,  0,  stackSize);  System.arraycopy(pathIndices,  0,  newPathIndices,  0,  stackSize);  System.arraycopy(pathNames,  0,  newPathNames,  0,  stackSize);  stack  =  newStack;  pathIndices  =  newPathIndices;  pathNames  =  newPathNames;  }  [CLASS]  JsonTreeReader  1  [METHOD]  push  [RETURN_TYPE]  void  Object  newTop  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  newTop  o  result  int[]  newPathIndices  pathIndices  String[]  newPathNames  pathNames  Object[]  newStack  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	280	280	2	add	if(stack!=  null  ||  stack.length  >  0)  {	  if(stack.length    ==    2    ||    stack.length    >    0)    {    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	21	2	replace
165	[BUG]  [BUGGY]  if(stack!=  null  ||  stack.length  >  0)  {  [FE]  ArrayIndexOutOfBoundsException  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]    private  void  push(Object  newTop)  {    [BUGGY]  if(stack!=  null  ||  stack.length  >  0)  {  [BUGGY]    Object[]  newStack  =  new  Object[stackSize  *  2];  int[]  newPathIndices  =  new  int[stackSize  *  2];  String[]  newPathNames  =  new  String[stackSize  *  2];  System.arraycopy(stack,  0,  newStack,  0,  stackSize);  System.arraycopy(pathIndices,  0,  newPathIndices,  0,  stackSize);  System.arraycopy(pathNames,  0,  newPathNames,  0,  stackSize);  stack  =  newStack;  pathIndices  =  newPathIndices;  pathNames  =  newPathNames;  }  [CLASS]  JsonTreeReader  1  [METHOD]  push  [RETURN_TYPE]  void  Object  newTop  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  newTop  o  result  int[]  newPathIndices  pathIndices  String[]  newPathNames  pathNames  Object[]  newStack  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	280	280	2	replace	if(stack!=  null  ||  stack.length  >  0)  {	  if(stack.length    ==    2    ||    stack.length    >    0)    {    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	21	2	replace
166	[BUG]  [BUGGY]  [FE]  ArrayIndexOutOfBoundsException  [FE]      ArrayIndexOutOfBoundsException    [CONTEXT]    private  void  push(Object  newTop)  {    [BUGGY]  if(stack.length  ==  2  ||  newTop!=  null)  {  [BUGGY]    Object[]  newStack  =  new  Object[stackSize  *  2];  int[]  newPathIndices  =  new  int[stackSize  *  2];  String[]  newPathNames  =  new  String[stackSize  *  2];  System.arraycopy(stack,  0,  newStack,  0,  stackSize);  System.arraycopy(pathIndices,  0,  newPathIndices,  0,  stackSize);  System.arraycopy(pathNames,  0,  newPathNames,  0,  stackSize);  stack  =  newStack;  pathIndices  =  newPathIndices;  pathNames  =  newPathNames;  }  [CLASS]  JsonTreeReader  1  [METHOD]  push  [RETURN_TYPE]  void  Object  newTop  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  newTop  o  result  int[]  newPathIndices  pathIndices  String[]  newPathNames  pathNames  Object[]  newStack  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	280	280	2	add	if(stack.length  ==  2  ||  newTop!=  null)  {	  if(stack.length    ==    2    ||    stack.length    >    0)    {    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	21	2	replace
167	[BUG]  [BUGGY]  if(stack.length  ==  2  ||  newTop!=  null)  {  [FE]  ArrayIndexOutOfBoundsException  [FE]      ArrayIndexOutOfBoundsException    [CONTEXT]    private  void  push(Object  newTop)  {    [BUGGY]  if(stack.length  ==  2  ||  newTop!=  null)  {  [BUGGY]    Object[]  newStack  =  new  Object[stackSize  *  2];  int[]  newPathIndices  =  new  int[stackSize  *  2];  String[]  newPathNames  =  new  String[stackSize  *  2];  System.arraycopy(stack,  0,  newStack,  0,  stackSize);  System.arraycopy(pathIndices,  0,  newPathIndices,  0,  stackSize);  System.arraycopy(pathNames,  0,  newPathNames,  0,  stackSize);  stack  =  newStack;  pathIndices  =  newPathIndices;  pathNames  =  newPathNames;  }  [CLASS]  JsonTreeReader  1  [METHOD]  push  [RETURN_TYPE]  void  Object  newTop  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  newTop  o  result  int[]  newPathIndices  pathIndices  String[]  newPathNames  pathNames  Object[]  newStack  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	280	280	2	replace	if(stack.length  ==  2  ||  newTop!=  null)  {	  if(stack.length    ==    2    ||    stack.length    >    0)    {    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	21	2	replace
168	[BUG]  [BUGGY]  if(stack.length  ==  2  ||  newTop!=  0)  {  [CE]  incomparable  types:  Object  and  int  [FE]        ArrayIndexOutOfBoundsException    [CONTEXT]    private  void  push(Object  newTop)  {    [BUGGY]  if(stack.length  ==  2  ||  newTop!=  0)  {  [BUGGY]    Object[]  newStack  =  new  Object[stackSize  *  2];  int[]  newPathIndices  =  new  int[stackSize  *  2];  String[]  newPathNames  =  new  String[stackSize  *  2];  System.arraycopy(stack,  0,  newStack,  0,  stackSize);  System.arraycopy(pathIndices,  0,  newPathIndices,  0,  stackSize);  System.arraycopy(pathNames,  0,  newPathNames,  0,  stackSize);  stack  =  newStack;  pathIndices  =  newPathIndices;  pathNames  =  newPathNames;  }  [CLASS]  JsonTreeReader  1  [METHOD]  push  [RETURN_TYPE]  void  Object  newTop  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  newTop  o  result  int[]  newPathIndices  pathIndices  String[]  newPathNames  pathNames  Object[]  newStack  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	280	280	2	replace	if(stack.length  ==  2  ||  newTop!=  0)  {	  if(stack.length    ==    2    ||    stack.length    >    0)    {    	non-compiled	[CE]  incomparable  types:  Object  and  int	21	None	replace
169	[BUG]  [BUGGY]  if(stack.length  ==  2  ||  stack.length  >  0)  {  Object  stack.length  ==  2  ||  stack.length  >  0)  {  [CE]  ';'  expected  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]    private  void  push(Object  newTop)  {    [BUGGY]  if(stack.length  ==  2  ||  stack.length  >  0)  {  Object  stack.length  ==  2  ||  stack.length  >  0)  {  [BUGGY]    Object[]  newStack  =  new  Object[stackSize  *  2];  int[]  newPathIndices  =  new  int[stackSize  *  2];  String[]  newPathNames  =  new  String[stackSize  *  2];  System.arraycopy(stack,  0,  newStack,  0,  stackSize);  System.arraycopy(pathIndices,  0,  newPathIndices,  0,  stackSize);  System.arraycopy(pathNames,  0,  newPathNames,  0,  stackSize);  stack  =  newStack;  pathIndices  =  newPathIndices;  pathNames  =  newPathNames;  }  [CLASS]  JsonTreeReader  1  [METHOD]  push  [RETURN_TYPE]  void  Object  newTop  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  newTop  o  result  int[]  newPathIndices  pathIndices  String[]  newPathNames  pathNames  Object[]  newStack  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	280	280	2	replace	if(stack.length    ==    2    ||    stack.length    >    0)    {    Object  stack.length  ==  2  ||  stack.length  >  0)  {	  	non-compiled	[CE]  ';'  expected	20	None	add
170	[BUG]  [BUGGY]  if(stack.length  ==  2  ||  stack.length  >  0)  {  if(stack.length  ==  2  ||  stack[length  >  0)  {  [CE]  ']'  expected  [FE]      ArrayIndexOutOfBoundsException    [CONTEXT]    private  void  push(Object  newTop)  {    [BUGGY]  if(stack.length  ==  2  ||  stack.length  >  0)  {  if(stack.length  ==  2  ||  stack[length  >  0)  {  [BUGGY]    Object[]  newStack  =  new  Object[stackSize  *  2];  int[]  newPathIndices  =  new  int[stackSize  *  2];  String[]  newPathNames  =  new  String[stackSize  *  2];  System.arraycopy(stack,  0,  newStack,  0,  stackSize);  System.arraycopy(pathIndices,  0,  newPathIndices,  0,  stackSize);  System.arraycopy(pathNames,  0,  newPathNames,  0,  stackSize);  stack  =  newStack;  pathIndices  =  newPathIndices;  pathNames  =  newPathNames;  }  [CLASS]  JsonTreeReader  1  [METHOD]  push  [RETURN_TYPE]  void  Object  newTop  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  newTop  o  result  int[]  newPathIndices  pathIndices  String[]  newPathNames  pathNames  Object[]  newStack  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	280	280	2	replace	if(stack.length    ==    2    ||    stack.length    >    0)    {    if(stack.length  ==  2  ||  stack[length  >  0)  {	  	non-compiled	[CE]  ']'  expected	20	None	add
171	[BUG]  [BUGGY]  if(stackSize!=  newTop)  {  If(stackSize!=  newTop)  {  [CE]  ';'  expected  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]    private  void  push(Object  newTop)  {    [BUGGY]  if(stackSize!=  newTop)  {  If(stackSize!=  newTop)  {  [BUGGY]    Object[]  newStack  =  new  Object[stackSize  *  2];  int[]  newPathIndices  =  new  int[stackSize  *  2];  String[]  newPathNames  =  new  String[stackSize  *  2];  System.arraycopy(stack,  0,  newStack,  0,  stackSize);  System.arraycopy(pathIndices,  0,  newPathIndices,  0,  stackSize);  System.arraycopy(pathNames,  0,  newPathNames,  0,  stackSize);  stack  =  newStack;  pathIndices  =  newPathIndices;  pathNames  =  newPathNames;  }  [CLASS]  JsonTreeReader  1  [METHOD]  push  [RETURN_TYPE]  void  Object  newTop  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  newTop  o  result  int[]  newPathIndices  pathIndices  String[]  newPathNames  pathNames  Object[]  newStack  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	280	280	2	replace	if(stackSize!=    newTop)    {    If(stackSize!=  newTop)  {	  	non-compiled	[CE]  ';'  expected	22	None	add
172	[BUG]  [BUGGY]  [FE]  ArrayIndexOutOfBoundsException  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]    private  void  push(Object  newTop)  {    [BUGGY]  if(stackSize  ==  0)  {  [BUGGY]    Object[]  newStack  =  new  Object[stackSize  *  2];  int[]  newPathIndices  =  new  int[stackSize  *  2];  String[]  newPathNames  =  new  String[stackSize  *  2];  System.arraycopy(stack,  0,  newStack,  0,  stackSize);  System.arraycopy(pathIndices,  0,  newPathIndices,  0,  stackSize);  System.arraycopy(pathNames,  0,  newPathNames,  0,  stackSize);  stack  =  newStack;  pathIndices  =  newPathIndices;  pathNames  =  newPathNames;  }  [CLASS]  JsonTreeReader  1  [METHOD]  push  [RETURN_TYPE]  void  Object  newTop  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  newTop  o  result  int[]  newPathIndices  pathIndices  String[]  newPathNames  pathNames  Object[]  newStack  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	280	280	2	add	if(stackSize  ==  0)  {	  if(stackSize    ==    newTop)    {    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	17	2	replace
173	[BUG]  [BUGGY]  if(stackSize  ==  0)  {  [FE]  ArrayIndexOutOfBoundsException  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]    private  void  push(Object  newTop)  {    [BUGGY]  if(stackSize  ==  0)  {  [BUGGY]    Object[]  newStack  =  new  Object[stackSize  *  2];  int[]  newPathIndices  =  new  int[stackSize  *  2];  String[]  newPathNames  =  new  String[stackSize  *  2];  System.arraycopy(stack,  0,  newStack,  0,  stackSize);  System.arraycopy(pathIndices,  0,  newPathIndices,  0,  stackSize);  System.arraycopy(pathNames,  0,  newPathNames,  0,  stackSize);  stack  =  newStack;  pathIndices  =  newPathIndices;  pathNames  =  newPathNames;  }  [CLASS]  JsonTreeReader  1  [METHOD]  push  [RETURN_TYPE]  void  Object  newTop  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  newTop  o  result  int[]  newPathIndices  pathIndices  String[]  newPathNames  pathNames  Object[]  newStack  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	280	280	2	replace	if(stackSize  ==  0)  {	  if(stackSize    ==    newTop)    {    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	17	2	replace
174	[BUG]  [BUGGY]  [FE]  ArrayIndexOutOfBoundsException  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]    private  void  push(Object  newTop)  {    [BUGGY]  if(stack.length  ==  0  ||  stack.length  >  0)  {  [BUGGY]    Object[]  newStack  =  new  Object[stackSize  *  2];  int[]  newPathIndices  =  new  int[stackSize  *  2];  String[]  newPathNames  =  new  String[stackSize  *  2];  System.arraycopy(stack,  0,  newStack,  0,  stackSize);  System.arraycopy(pathIndices,  0,  newPathIndices,  0,  stackSize);  System.arraycopy(pathNames,  0,  newPathNames,  0,  stackSize);  stack  =  newStack;  pathIndices  =  newPathIndices;  pathNames  =  newPathNames;  }  [CLASS]  JsonTreeReader  1  [METHOD]  push  [RETURN_TYPE]  void  Object  newTop  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  newTop  o  result  int[]  newPathIndices  pathIndices  String[]  newPathNames  pathNames  Object[]  newStack  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	280	280	2	add	if(stack.length  ==  0  ||  stack.length  >  0)  {	  if(stack.length    ==    1    ||    stack.length    >    0)    {    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	19	2	replace
175	[BUG]  [BUGGY]  if(stack.length  ==  0  ||  stack.length  >  0)  {  [FE]  ArrayIndexOutOfBoundsException  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]    private  void  push(Object  newTop)  {    [BUGGY]  if(stack.length  ==  0  ||  stack.length  >  0)  {  [BUGGY]    Object[]  newStack  =  new  Object[stackSize  *  2];  int[]  newPathIndices  =  new  int[stackSize  *  2];  String[]  newPathNames  =  new  String[stackSize  *  2];  System.arraycopy(stack,  0,  newStack,  0,  stackSize);  System.arraycopy(pathIndices,  0,  newPathIndices,  0,  stackSize);  System.arraycopy(pathNames,  0,  newPathNames,  0,  stackSize);  stack  =  newStack;  pathIndices  =  newPathIndices;  pathNames  =  newPathNames;  }  [CLASS]  JsonTreeReader  1  [METHOD]  push  [RETURN_TYPE]  void  Object  newTop  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  newTop  o  result  int[]  newPathIndices  pathIndices  String[]  newPathNames  pathNames  Object[]  newStack  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	280	280	2	replace	if(stack.length  ==  0  ||  stack.length  >  0)  {	  if(stack.length    ==    1    ||    stack.length    >    0)    {    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	19	2	replace
176	[BUG]  [BUGGY]  [FE]  ArrayIndexOutOfBoundsException  [FE]      ArrayIndexOutOfBoundsException    [CONTEXT]    private  void  push(Object  newTop)  {    [BUGGY]  if(stack.length!=  1  ||  stack.length  >  0)  {  [BUGGY]    Object[]  newStack  =  new  Object[stackSize  *  2];  int[]  newPathIndices  =  new  int[stackSize  *  2];  String[]  newPathNames  =  new  String[stackSize  *  2];  System.arraycopy(stack,  0,  newStack,  0,  stackSize);  System.arraycopy(pathIndices,  0,  newPathIndices,  0,  stackSize);  System.arraycopy(pathNames,  0,  newPathNames,  0,  stackSize);  stack  =  newStack;  pathIndices  =  newPathIndices;  pathNames  =  newPathNames;  }  [CLASS]  JsonTreeReader  1  [METHOD]  push  [RETURN_TYPE]  void  Object  newTop  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  newTop  o  result  int[]  newPathIndices  pathIndices  String[]  newPathNames  pathNames  Object[]  newStack  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	280	280	2	add	if(stack.length!=  1  ||  stack.length  >  0)  {	  if(stack.length    ==    1    ||    stack.length    >    0)    {    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	19	2	replace
177	[BUG]  [BUGGY]  if(stack.length!=  1  ||  stack.length  >  0)  {  [FE]  ArrayIndexOutOfBoundsException  [FE]      ArrayIndexOutOfBoundsException    [CONTEXT]    private  void  push(Object  newTop)  {    [BUGGY]  if(stack.length!=  1  ||  stack.length  >  0)  {  [BUGGY]    Object[]  newStack  =  new  Object[stackSize  *  2];  int[]  newPathIndices  =  new  int[stackSize  *  2];  String[]  newPathNames  =  new  String[stackSize  *  2];  System.arraycopy(stack,  0,  newStack,  0,  stackSize);  System.arraycopy(pathIndices,  0,  newPathIndices,  0,  stackSize);  System.arraycopy(pathNames,  0,  newPathNames,  0,  stackSize);  stack  =  newStack;  pathIndices  =  newPathIndices;  pathNames  =  newPathNames;  }  [CLASS]  JsonTreeReader  1  [METHOD]  push  [RETURN_TYPE]  void  Object  newTop  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  newTop  o  result  int[]  newPathIndices  pathIndices  String[]  newPathNames  pathNames  Object[]  newStack  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	280	280	2	replace	if(stack.length!=  1  ||  stack.length  >  0)  {	  if(stack.length    ==    1    ||    stack.length    >    0)    {    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	19	2	replace
178	[BUG]  [BUGGY]  if(stack.length  ==  stack.length)  {  int  stackSize  =  stack.length;  if(stack.length  ==  stack.length)  {  [CE]  ';'  expected  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]    private  void  push(Object  newTop)  {    [BUGGY]  if(stack.length  ==  stack.length)  {  int  stackSize  =  stack.length;  if(stack.length  ==  stack.length)  {  [BUGGY]    Object[]  newStack  =  new  Object[stackSize  *  2];  int[]  newPathIndices  =  new  int[stackSize  *  2];  String[]  newPathNames  =  new  String[stackSize  *  2];  System.arraycopy(stack,  0,  newStack,  0,  stackSize);  System.arraycopy(pathIndices,  0,  newPathIndices,  0,  stackSize);  System.arraycopy(pathNames,  0,  newPathNames,  0,  stackSize);  stack  =  newStack;  pathIndices  =  newPathIndices;  pathNames  =  newPathNames;  }  [CLASS]  JsonTreeReader  1  [METHOD]  push  [RETURN_TYPE]  void  Object  newTop  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  newTop  o  result  int[]  newPathIndices  pathIndices  String[]  newPathNames  pathNames  Object[]  newStack  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	280	280	2	replace	if(stack.length    ==    stack.length)    {    int  stackSize  =  stack.length;  if(stack.length  ==  stack.length)  {	  	non-compiled	[CE]  ';'  expected	6	None	add
179	[BUG]  [BUGGY]  if(stack.length  ==  stack.length)  {  if(stack.length  ==  stack.length  ||  System.arraycopy(stack,  0,  newStack,  0,  stack.length))  {  [CE]  ';'  expected  [FE]      ArrayIndexOutOfBoundsException    [CONTEXT]    private  void  push(Object  newTop)  {    [BUGGY]  if(stack.length  ==  stack.length)  {  if(stack.length  ==  stack.length  ||  System.arraycopy(stack,  0,  newStack,  0,  stack.length))  {  [BUGGY]    Object[]  newStack  =  new  Object[stackSize  *  2];  int[]  newPathIndices  =  new  int[stackSize  *  2];  String[]  newPathNames  =  new  String[stackSize  *  2];  System.arraycopy(stack,  0,  newStack,  0,  stackSize);  System.arraycopy(pathIndices,  0,  newPathIndices,  0,  stackSize);  System.arraycopy(pathNames,  0,  newPathNames,  0,  stackSize);  stack  =  newStack;  pathIndices  =  newPathIndices;  pathNames  =  newPathNames;  }  [CLASS]  JsonTreeReader  1  [METHOD]  push  [RETURN_TYPE]  void  Object  newTop  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  newTop  o  result  int[]  newPathIndices  pathIndices  String[]  newPathNames  pathNames  Object[]  newStack  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	280	280	2	replace	if(stack.length    ==    stack.length)    {    if(stack.length  ==  stack.length  ||  System.arraycopy(stack,  0,  newStack,  0,  stack.length))  {	  	non-compiled	[CE]  ';'  expected	6	None	add
180	[BUG]  [BUGGY]  if(stack.length  ==  stack.length)  {  if(stack.length  ==  stack.length  ||  stack.length  ==  stack.length)  {  [CE]  ';'  expected  [FE]        ArrayIndexOutOfBoundsException    [CONTEXT]    private  void  push(Object  newTop)  {    [BUGGY]  if(stack.length  ==  stack.length)  {  if(stack.length  ==  stack.length  ||  stack.length  ==  stack.length)  {  [BUGGY]    Object[]  newStack  =  new  Object[stackSize  *  2];  int[]  newPathIndices  =  new  int[stackSize  *  2];  String[]  newPathNames  =  new  String[stackSize  *  2];  System.arraycopy(stack,  0,  newStack,  0,  stackSize);  System.arraycopy(pathIndices,  0,  newPathIndices,  0,  stackSize);  System.arraycopy(pathNames,  0,  newPathNames,  0,  stackSize);  stack  =  newStack;  pathIndices  =  newPathIndices;  pathNames  =  newPathNames;  }  [CLASS]  JsonTreeReader  1  [METHOD]  push  [RETURN_TYPE]  void  Object  newTop  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  newTop  o  result  int[]  newPathIndices  pathIndices  String[]  newPathNames  pathNames  Object[]  newStack  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	280	280	2	replace	if(stack.length    ==    stack.length)    {    if(stack.length  ==  stack.length  ||  stack.length  ==  stack.length)  {	  	non-compiled	[CE]  ';'  expected	6	None	add
181	[BUG]  [BUGGY]  if(stack.length  ==  newTop)  {  int  stackSize  =  stack.length;  if(stack.length  ==  newTop)  {  [CE]  ';'  expected  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]    private  void  push(Object  newTop)  {    [BUGGY]  if(stack.length  ==  newTop)  {  int  stackSize  =  stack.length;  if(stack.length  ==  newTop)  {  [BUGGY]    Object[]  newStack  =  new  Object[stackSize  *  2];  int[]  newPathIndices  =  new  int[stackSize  *  2];  String[]  newPathNames  =  new  String[stackSize  *  2];  System.arraycopy(stack,  0,  newStack,  0,  stackSize);  System.arraycopy(pathIndices,  0,  newPathIndices,  0,  stackSize);  System.arraycopy(pathNames,  0,  newPathNames,  0,  stackSize);  stack  =  newStack;  pathIndices  =  newPathIndices;  pathNames  =  newPathNames;  }  [CLASS]  JsonTreeReader  1  [METHOD]  push  [RETURN_TYPE]  void  Object  newTop  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  newTop  o  result  int[]  newPathIndices  pathIndices  String[]  newPathNames  pathNames  Object[]  newStack  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	280	280	2	replace	if(stack.length    ==    newTop)    {    int  stackSize  =  stack.length;  if(stack.length  ==  newTop)  {	  	non-compiled	[CE]  ';'  expected	1	None	add
182	[BUG]  [BUGGY]  if(stack.length  ==  newTop)  {  int  stackSize  =  stack.length  -  1;  System.arraycopy(stack,  0,  newStack,  0,  stackSize);  [CE]  ';'  expected  [FE]      ArrayIndexOutOfBoundsException    [CONTEXT]    private  void  push(Object  newTop)  {    [BUGGY]  if(stack.length  ==  newTop)  {  int  stackSize  =  stack.length  -  1;  System.arraycopy(stack,  0,  newStack,  0,  stackSize);  [BUGGY]    Object[]  newStack  =  new  Object[stackSize  *  2];  int[]  newPathIndices  =  new  int[stackSize  *  2];  String[]  newPathNames  =  new  String[stackSize  *  2];  System.arraycopy(stack,  0,  newStack,  0,  stackSize);  System.arraycopy(pathIndices,  0,  newPathIndices,  0,  stackSize);  System.arraycopy(pathNames,  0,  newPathNames,  0,  stackSize);  stack  =  newStack;  pathIndices  =  newPathIndices;  pathNames  =  newPathNames;  }  [CLASS]  JsonTreeReader  1  [METHOD]  push  [RETURN_TYPE]  void  Object  newTop  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  newTop  o  result  int[]  newPathIndices  pathIndices  String[]  newPathNames  pathNames  Object[]  newStack  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	280	280	2	replace	if(stack.length    ==    newTop)    {    int  stackSize  =  stack.length  -  1;  System.arraycopy(stack,  0,  newStack,  0,  stackSize);	  	non-compiled	[CE]  ';'  expected	1	None	add
183	[BUG]  [BUGGY]  if(stack.length  ==  newTop)  {  if(stack.length  ==  newTop)  <  System.arraycopy(stack,  0,  newStack,  0,  stackSize);  [CE]  >  expected  [FE]        ArrayIndexOutOfBoundsException    [CONTEXT]    private  void  push(Object  newTop)  {    [BUGGY]  if(stack.length  ==  newTop)  {  if(stack.length  ==  newTop)  <  System.arraycopy(stack,  0,  newStack,  0,  stackSize);  [BUGGY]    Object[]  newStack  =  new  Object[stackSize  *  2];  int[]  newPathIndices  =  new  int[stackSize  *  2];  String[]  newPathNames  =  new  String[stackSize  *  2];  System.arraycopy(stack,  0,  newStack,  0,  stackSize);  System.arraycopy(pathIndices,  0,  newPathIndices,  0,  stackSize);  System.arraycopy(pathNames,  0,  newPathNames,  0,  stackSize);  stack  =  newStack;  pathIndices  =  newPathIndices;  pathNames  =  newPathNames;  }  [CLASS]  JsonTreeReader  1  [METHOD]  push  [RETURN_TYPE]  void  Object  newTop  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  newTop  o  result  int[]  newPathIndices  pathIndices  String[]  newPathNames  pathNames  Object[]  newStack  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	280	280	2	replace	if(stack.length    ==    newTop)    {    if(stack.length  ==  newTop)  <  System.arraycopy(stack,  0,  newStack,  0,  stackSize);	  	non-compiled	[CE]  >  expected	1	None	add
184	[BUG]  [BUGGY]  if(stack.length  ==  newTop)  {  int  stackSize  =  stack.length  -  1;  if(stack.length  ==  newTop)  {  [CE]  ';'  expected  [FE]          ArrayIndexOutOfBoundsException    [CONTEXT]    private  void  push(Object  newTop)  {    [BUGGY]  if(stack.length  ==  newTop)  {  int  stackSize  =  stack.length  -  1;  if(stack.length  ==  newTop)  {  [BUGGY]    Object[]  newStack  =  new  Object[stackSize  *  2];  int[]  newPathIndices  =  new  int[stackSize  *  2];  String[]  newPathNames  =  new  String[stackSize  *  2];  System.arraycopy(stack,  0,  newStack,  0,  stackSize);  System.arraycopy(pathIndices,  0,  newPathIndices,  0,  stackSize);  System.arraycopy(pathNames,  0,  newPathNames,  0,  stackSize);  stack  =  newStack;  pathIndices  =  newPathIndices;  pathNames  =  newPathNames;  }  [CLASS]  JsonTreeReader  1  [METHOD]  push  [RETURN_TYPE]  void  Object  newTop  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  newTop  o  result  int[]  newPathIndices  pathIndices  String[]  newPathNames  pathNames  Object[]  newStack  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	280	280	2	replace	if(stack.length    ==    newTop)    {    int  stackSize  =  stack.length  -  1;  if(stack.length  ==  newTop)  {	  	non-compiled	[CE]  ';'  expected	1	None	add
185	[BUG]  [BUGGY]  if(stack.size()  ==  currentStack.length)  {  [CE]  cannot  find  symbol  [FE]                  ArrayIndexOutOfBoundsException    [CONTEXT]    private  void  push(Object  newTop)  {    [BUGGY]  if(stack.size()  ==  currentStack.length)  {  [BUGGY]    Object[]  newStack  =  new  Object[stackSize  *  2];  int[]  newPathIndices  =  new  int[stackSize  *  2];  String[]  newPathNames  =  new  String[stackSize  *  2];  System.arraycopy(stack,  0,  newStack,  0,  stackSize);  System.arraycopy(pathIndices,  0,  newPathIndices,  0,  stackSize);  System.arraycopy(pathNames,  0,  newPathNames,  0,  stackSize);  stack  =  newStack;  pathIndices  =  newPathIndices;  pathNames  =  newPathNames;  }  [CLASS]  JsonTreeReader  1  [METHOD]  push  [RETURN_TYPE]  void  Object  newTop  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  newTop  o  result  int[]  newPathIndices  pathIndices  String[]  newPathNames  pathNames  Object[]  newStack  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	280	280	2	replace	if(stack.size()  ==  currentStack.length)  {	  if(stack.size()    ==    stack.length)    {    	non-compiled	[CE]  cannot  find  symbol	9	None	replace
186	[BUG]  [BUGGY]  if(newTop!=  stack.size())  {  [CE]  cannot  find  symbol  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]    private  void  push(Object  newTop)  {    [BUGGY]  if(newTop!=  stack.size())  {  [BUGGY]    Object[]  newStack  =  new  Object[stackSize  *  2];  int[]  newPathIndices  =  new  int[stackSize  *  2];  String[]  newPathNames  =  new  String[stackSize  *  2];  System.arraycopy(stack,  0,  newStack,  0,  stackSize);  System.arraycopy(pathIndices,  0,  newPathIndices,  0,  stackSize);  System.arraycopy(pathNames,  0,  newPathNames,  0,  stackSize);  stack  =  newStack;  pathIndices  =  newPathIndices;  pathNames  =  newPathNames;  }  [CLASS]  JsonTreeReader  1  [METHOD]  push  [RETURN_TYPE]  void  Object  newTop  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  newTop  o  result  int[]  newPathIndices  pathIndices  String[]  newPathNames  pathNames  Object[]  newStack  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	280	280	2	replace	if(newTop!=  stack.size())  {	  if(stackSize!=    newTop)    {    	non-compiled	[CE]  cannot  find  symbol	23	None	replace
187	[BUG]  [BUGGY]  if(newTop!=  stack.size)  {  [CE]  cannot  find  symbol  size  [FE]      ArrayIndexOutOfBoundsException    [CONTEXT]    private  void  push(Object  newTop)  {    [BUGGY]  if(newTop!=  stack.size)  {  [BUGGY]    Object[]  newStack  =  new  Object[stackSize  *  2];  int[]  newPathIndices  =  new  int[stackSize  *  2];  String[]  newPathNames  =  new  String[stackSize  *  2];  System.arraycopy(stack,  0,  newStack,  0,  stackSize);  System.arraycopy(pathIndices,  0,  newPathIndices,  0,  stackSize);  System.arraycopy(pathNames,  0,  newPathNames,  0,  stackSize);  stack  =  newStack;  pathIndices  =  newPathIndices;  pathNames  =  newPathNames;  }  [CLASS]  JsonTreeReader  1  [METHOD]  push  [RETURN_TYPE]  void  Object  newTop  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  newTop  o  result  int[]  newPathIndices  pathIndices  String[]  newPathNames  pathNames  Object[]  newStack  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	280	280	2	replace	if(newTop!=  stack.size)  {	  if(stackSize!=    newTop)    {    	non-compiled	[CE]  cannot  find  symbol  size	23	None	replace
188	[BUG]  [BUGGY]  if(newTop  <  stack.length)  {  [CE]  bad  operand  types  for  binary  operator  '<'  [FE]          ArrayIndexOutOfBoundsException    [CONTEXT]    private  void  push(Object  newTop)  {    [BUGGY]  if(newTop  <  stack.length)  {  [BUGGY]    Object[]  newStack  =  new  Object[stackSize  *  2];  int[]  newPathIndices  =  new  int[stackSize  *  2];  String[]  newPathNames  =  new  String[stackSize  *  2];  System.arraycopy(stack,  0,  newStack,  0,  stackSize);  System.arraycopy(pathIndices,  0,  newPathIndices,  0,  stackSize);  System.arraycopy(pathNames,  0,  newPathNames,  0,  stackSize);  stack  =  newStack;  pathIndices  =  newPathIndices;  pathNames  =  newPathNames;  }  [CLASS]  JsonTreeReader  1  [METHOD]  push  [RETURN_TYPE]  void  Object  newTop  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  newTop  o  result  int[]  newPathIndices  pathIndices  String[]  newPathNames  pathNames  Object[]  newStack  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	280	280	2	replace	if(newTop  <  stack.length)  {	  if(newTop    ==    stack.length)    {    	non-compiled	[CE]  bad  operand  types  for  binary  operator  '<'	3	None	replace
189	[BUG]  [BUGGY]  if(newTop  <  =  stack.length)  {  [CE]  illegal  start  of  expression  [FE]            ArrayIndexOutOfBoundsException    [CONTEXT]    private  void  push(Object  newTop)  {    [BUGGY]  if(newTop  <  =  stack.length)  {  [BUGGY]    Object[]  newStack  =  new  Object[stackSize  *  2];  int[]  newPathIndices  =  new  int[stackSize  *  2];  String[]  newPathNames  =  new  String[stackSize  *  2];  System.arraycopy(stack,  0,  newStack,  0,  stackSize);  System.arraycopy(pathIndices,  0,  newPathIndices,  0,  stackSize);  System.arraycopy(pathNames,  0,  newPathNames,  0,  stackSize);  stack  =  newStack;  pathIndices  =  newPathIndices;  pathNames  =  newPathNames;  }  [CLASS]  JsonTreeReader  1  [METHOD]  push  [RETURN_TYPE]  void  Object  newTop  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  newTop  o  result  int[]  newPathIndices  pathIndices  String[]  newPathNames  pathNames  Object[]  newStack  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	280	280	2	replace	if(newTop  <  =  stack.length)  {	  if(newTop    ==    stack.length)    {    	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
190	[BUG]  [BUGGY]  if(newTop  ==  stack.size())  {  [CE]  cannot  find  symbol  [FE]              ArrayIndexOutOfBoundsException    [CONTEXT]    private  void  push(Object  newTop)  {    [BUGGY]  if(newTop  ==  stack.size())  {  [BUGGY]    Object[]  newStack  =  new  Object[stackSize  *  2];  int[]  newPathIndices  =  new  int[stackSize  *  2];  String[]  newPathNames  =  new  String[stackSize  *  2];  System.arraycopy(stack,  0,  newStack,  0,  stackSize);  System.arraycopy(pathIndices,  0,  newPathIndices,  0,  stackSize);  System.arraycopy(pathNames,  0,  newPathNames,  0,  stackSize);  stack  =  newStack;  pathIndices  =  newPathIndices;  pathNames  =  newPathNames;  }  [CLASS]  JsonTreeReader  1  [METHOD]  push  [RETURN_TYPE]  void  Object  newTop  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  newTop  o  result  int[]  newPathIndices  pathIndices  String[]  newPathNames  pathNames  Object[]  newStack  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	280	280	2	replace	if(newTop  ==  stack.size())  {	  if(newTop    ==    stack.length)    {    	non-compiled	[CE]  cannot  find  symbol	3	None	replace
191	[BUG]  [BUGGY]  [FE]  ArrayIndexOutOfBoundsException  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]    private  void  push(Object  newTop)  {    [BUGGY]  if(stack.length  >=  1  ||  stack.length  >  0)  {  [BUGGY]    Object[]  newStack  =  new  Object[stackSize  *  2];  int[]  newPathIndices  =  new  int[stackSize  *  2];  String[]  newPathNames  =  new  String[stackSize  *  2];  System.arraycopy(stack,  0,  newStack,  0,  stackSize);  System.arraycopy(pathIndices,  0,  newPathIndices,  0,  stackSize);  System.arraycopy(pathNames,  0,  newPathNames,  0,  stackSize);  stack  =  newStack;  pathIndices  =  newPathIndices;  pathNames  =  newPathNames;  }  [CLASS]  JsonTreeReader  1  [METHOD]  push  [RETURN_TYPE]  void  Object  newTop  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  newTop  o  result  int[]  newPathIndices  pathIndices  String[]  newPathNames  pathNames  Object[]  newStack  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	280	280	2	add	if(stack.length  >=  1  ||  stack.length  >  0)  {	  if(stack.length    ==    1    ||    stack.length    >    0)    {    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	19	2	replace
192	[BUG]  [BUGGY]  if(stack.length  >=  1  ||  stack.length  >  0)  {  [FE]  ArrayIndexOutOfBoundsException  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]    private  void  push(Object  newTop)  {    [BUGGY]  if(stack.length  >=  1  ||  stack.length  >  0)  {  [BUGGY]    Object[]  newStack  =  new  Object[stackSize  *  2];  int[]  newPathIndices  =  new  int[stackSize  *  2];  String[]  newPathNames  =  new  String[stackSize  *  2];  System.arraycopy(stack,  0,  newStack,  0,  stackSize);  System.arraycopy(pathIndices,  0,  newPathIndices,  0,  stackSize);  System.arraycopy(pathNames,  0,  newPathNames,  0,  stackSize);  stack  =  newStack;  pathIndices  =  newPathIndices;  pathNames  =  newPathNames;  }  [CLASS]  JsonTreeReader  1  [METHOD]  push  [RETURN_TYPE]  void  Object  newTop  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  newTop  o  result  int[]  newPathIndices  pathIndices  String[]  newPathNames  pathNames  Object[]  newStack  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	280	280	2	replace	if(stack.length  >=  1  ||  stack.length  >  0)  {	  if(stack.length    ==    1    ||    stack.length    >    0)    {    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	19	2	replace
193	[BUG]  [BUGGY]  [FE]  ArrayIndexOutOfBoundsException  [FE]      ArrayIndexOutOfBoundsException    [CONTEXT]    private  void  push(Object  newTop)  {    [BUGGY]  if(stack.length  <  1  ||  stack.length  >  0)  {  [BUGGY]    Object[]  newStack  =  new  Object[stackSize  *  2];  int[]  newPathIndices  =  new  int[stackSize  *  2];  String[]  newPathNames  =  new  String[stackSize  *  2];  System.arraycopy(stack,  0,  newStack,  0,  stackSize);  System.arraycopy(pathIndices,  0,  newPathIndices,  0,  stackSize);  System.arraycopy(pathNames,  0,  newPathNames,  0,  stackSize);  stack  =  newStack;  pathIndices  =  newPathIndices;  pathNames  =  newPathNames;  }  [CLASS]  JsonTreeReader  1  [METHOD]  push  [RETURN_TYPE]  void  Object  newTop  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  newTop  o  result  int[]  newPathIndices  pathIndices  String[]  newPathNames  pathNames  Object[]  newStack  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	280	280	2	add	if(stack.length  <  1  ||  stack.length  >  0)  {	  if(stack.length    ==    1    ||    stack.length    >    0)    {    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	19	2	replace
194	[BUG]  [BUGGY]  if(stack.length  <  1  ||  stack.length  >  0)  {  [FE]  ArrayIndexOutOfBoundsException  [FE]      ArrayIndexOutOfBoundsException    [CONTEXT]    private  void  push(Object  newTop)  {    [BUGGY]  if(stack.length  <  1  ||  stack.length  >  0)  {  [BUGGY]    Object[]  newStack  =  new  Object[stackSize  *  2];  int[]  newPathIndices  =  new  int[stackSize  *  2];  String[]  newPathNames  =  new  String[stackSize  *  2];  System.arraycopy(stack,  0,  newStack,  0,  stackSize);  System.arraycopy(pathIndices,  0,  newPathIndices,  0,  stackSize);  System.arraycopy(pathNames,  0,  newPathNames,  0,  stackSize);  stack  =  newStack;  pathIndices  =  newPathIndices;  pathNames  =  newPathNames;  }  [CLASS]  JsonTreeReader  1  [METHOD]  push  [RETURN_TYPE]  void  Object  newTop  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  newTop  o  result  int[]  newPathIndices  pathIndices  String[]  newPathNames  pathNames  Object[]  newStack  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	280	280	2	replace	if(stack.length  <  1  ||  stack.length  >  0)  {	  if(stack.length    ==    1    ||    stack.length    >    0)    {    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	19	2	replace
195	[BUG]  [BUGGY]  if(stack.length  ==  1  ||  stack.length  >  0)  {  if(stack.length  ==  2  ||  stack.length  >  0)  {  [CE]  ';'  expected  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]    private  void  push(Object  newTop)  {    [BUGGY]  if(stack.length  ==  1  ||  stack.length  >  0)  {  if(stack.length  ==  2  ||  stack.length  >  0)  {  [BUGGY]    Object[]  newStack  =  new  Object[stackSize  *  2];  int[]  newPathIndices  =  new  int[stackSize  *  2];  String[]  newPathNames  =  new  String[stackSize  *  2];  System.arraycopy(stack,  0,  newStack,  0,  stackSize);  System.arraycopy(pathIndices,  0,  newPathIndices,  0,  stackSize);  System.arraycopy(pathNames,  0,  newPathNames,  0,  stackSize);  stack  =  newStack;  pathIndices  =  newPathIndices;  pathNames  =  newPathNames;  }  [CLASS]  JsonTreeReader  1  [METHOD]  push  [RETURN_TYPE]  void  Object  newTop  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  newTop  o  result  int[]  newPathIndices  pathIndices  String[]  newPathNames  pathNames  Object[]  newStack  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	280	280	2	replace	if(stack.length    ==    1    ||    stack.length    >    0)    {    if(stack.length  ==  2  ||  stack.length  >  0)  {	  	non-compiled	[CE]  ';'  expected	18	None	add
196	[BUG]  [BUGGY]  if(stack.length  ==  2  ||  stack.length  >  0)  {  if(stack.length  ==  2)  ||  stack.length  >  0)  {  [CE]  illegal  start  of  expression  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]    private  void  push(Object  newTop)  {    [BUGGY]  if(stack.length  ==  2  ||  stack.length  >  0)  {  if(stack.length  ==  2)  ||  stack.length  >  0)  {  [BUGGY]    Object[]  newStack  =  new  Object[stackSize  *  2];  int[]  newPathIndices  =  new  int[stackSize  *  2];  String[]  newPathNames  =  new  String[stackSize  *  2];  System.arraycopy(stack,  0,  newStack,  0,  stackSize);  System.arraycopy(pathIndices,  0,  newPathIndices,  0,  stackSize);  System.arraycopy(pathNames,  0,  newPathNames,  0,  stackSize);  stack  =  newStack;  pathIndices  =  newPathIndices;  pathNames  =  newPathNames;  }  [CLASS]  JsonTreeReader  1  [METHOD]  push  [RETURN_TYPE]  void  Object  newTop  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  newTop  o  result  int[]  newPathIndices  pathIndices  String[]  newPathNames  pathNames  Object[]  newStack  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	280	280	2	replace	if(stack.length    ==    2    ||    stack.length    >    0)    {    if(stack.length  ==  2)  ||  stack.length  >  0)  {	  	non-compiled	[CE]  illegal  start  of  expression	20	None	add
197	[BUG]  [BUGGY]  if(stack.length  ==  2  ||  stack.length  >  0)  {  if(stack.length  {  2  ||  stack.length  >  0)  {  [CE]  ')'  expected  [FE]      ArrayIndexOutOfBoundsException    [CONTEXT]    private  void  push(Object  newTop)  {    [BUGGY]  if(stack.length  ==  2  ||  stack.length  >  0)  {  if(stack.length  {  2  ||  stack.length  >  0)  {  [BUGGY]    Object[]  newStack  =  new  Object[stackSize  *  2];  int[]  newPathIndices  =  new  int[stackSize  *  2];  String[]  newPathNames  =  new  String[stackSize  *  2];  System.arraycopy(stack,  0,  newStack,  0,  stackSize);  System.arraycopy(pathIndices,  0,  newPathIndices,  0,  stackSize);  System.arraycopy(pathNames,  0,  newPathNames,  0,  stackSize);  stack  =  newStack;  pathIndices  =  newPathIndices;  pathNames  =  newPathNames;  }  [CLASS]  JsonTreeReader  1  [METHOD]  push  [RETURN_TYPE]  void  Object  newTop  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  newTop  o  result  int[]  newPathIndices  pathIndices  String[]  newPathNames  pathNames  Object[]  newStack  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	280	280	2	replace	if(stack.length    ==    2    ||    stack.length    >    0)    {    if(stack.length  {  2  ||  stack.length  >  0)  {	  	non-compiled	[CE]  ')'  expected	20	None	add
198	[BUG]  [BUGGY]  if(stack.length  <  =  newTop)  {  [CE]  illegal  start  of  expression  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]    private  void  push(Object  newTop)  {    [BUGGY]  if(stack.length  <  =  newTop)  {  [BUGGY]    Object[]  newStack  =  new  Object[stackSize  *  2];  int[]  newPathIndices  =  new  int[stackSize  *  2];  String[]  newPathNames  =  new  String[stackSize  *  2];  System.arraycopy(stack,  0,  newStack,  0,  stackSize);  System.arraycopy(pathIndices,  0,  newPathIndices,  0,  stackSize);  System.arraycopy(pathNames,  0,  newPathNames,  0,  stackSize);  stack  =  newStack;  pathIndices  =  newPathIndices;  pathNames  =  newPathNames;  }  [CLASS]  JsonTreeReader  1  [METHOD]  push  [RETURN_TYPE]  void  Object  newTop  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  newTop  o  result  int[]  newPathIndices  pathIndices  String[]  newPathNames  pathNames  Object[]  newStack  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	280	280	2	replace	if(stack.length  <  =  newTop)  {	  if(stack.length    ==    newTop)    {    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
199	[BUG]  [BUGGY]  if(stack.length  ==  stack.length)  {  if(stack.length  ==  stack)  {  [CE]  ';'  expected  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]    private  void  push(Object  newTop)  {    [BUGGY]  if(stack.length  ==  stack.length)  {  if(stack.length  ==  stack)  {  [BUGGY]    Object[]  newStack  =  new  Object[stackSize  *  2];  int[]  newPathIndices  =  new  int[stackSize  *  2];  String[]  newPathNames  =  new  String[stackSize  *  2];  System.arraycopy(stack,  0,  newStack,  0,  stackSize);  System.arraycopy(pathIndices,  0,  newPathIndices,  0,  stackSize);  System.arraycopy(pathNames,  0,  newPathNames,  0,  stackSize);  stack  =  newStack;  pathIndices  =  newPathIndices;  pathNames  =  newPathNames;  }  [CLASS]  JsonTreeReader  1  [METHOD]  push  [RETURN_TYPE]  void  Object  newTop  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  newTop  o  result  int[]  newPathIndices  pathIndices  String[]  newPathNames  pathNames  Object[]  newStack  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	280	280	2	replace	if(stack.length    ==    stack.length)    {    if(stack.length  ==  stack)  {	  	non-compiled	[CE]  ';'  expected	6	None	add
200	[BUG]  [BUGGY]  [FE]  ArrayIndexOutOfBoundsException  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]    private  void  push(Object  newTop)  {    [BUGGY]  if(stack.length!=  2)  {  [BUGGY]    Object[]  newStack  =  new  Object[stackSize  *  2];  int[]  newPathIndices  =  new  int[stackSize  *  2];  String[]  newPathNames  =  new  String[stackSize  *  2];  System.arraycopy(stack,  0,  newStack,  0,  stackSize);  System.arraycopy(pathIndices,  0,  newPathIndices,  0,  stackSize);  System.arraycopy(pathNames,  0,  newPathNames,  0,  stackSize);  stack  =  newStack;  pathIndices  =  newPathIndices;  pathNames  =  newPathNames;  }  [CLASS]  JsonTreeReader  1  [METHOD]  push  [RETURN_TYPE]  void  Object  newTop  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  newTop  o  result  int[]  newPathIndices  pathIndices  String[]  newPathNames  pathNames  Object[]  newStack  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	280	280	2	add	if(stack.length!=  2)  {	  if(stack.length!=    newTop)    {    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	5	2	replace
201	[BUG]  [BUGGY]  if(stack.length!=  2)  {  [FE]  ArrayIndexOutOfBoundsException  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]    private  void  push(Object  newTop)  {    [BUGGY]  if(stack.length!=  2)  {  [BUGGY]    Object[]  newStack  =  new  Object[stackSize  *  2];  int[]  newPathIndices  =  new  int[stackSize  *  2];  String[]  newPathNames  =  new  String[stackSize  *  2];  System.arraycopy(stack,  0,  newStack,  0,  stackSize);  System.arraycopy(pathIndices,  0,  newPathIndices,  0,  stackSize);  System.arraycopy(pathNames,  0,  newPathNames,  0,  stackSize);  stack  =  newStack;  pathIndices  =  newPathIndices;  pathNames  =  newPathNames;  }  [CLASS]  JsonTreeReader  1  [METHOD]  push  [RETURN_TYPE]  void  Object  newTop  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  newTop  o  result  int[]  newPathIndices  pathIndices  String[]  newPathNames  pathNames  Object[]  newStack  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	280	280	2	replace	if(stack.length!=  2)  {	  if(stack.length!=    newTop)    {    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	5	2	replace
202	[BUG]  [BUGGY]  [FE]  ArrayIndexOutOfBoundsException  [FE]      ArrayIndexOutOfBoundsException    [CONTEXT]    private  void  push(Object  newTop)  {    [BUGGY]  if(stack.length!=  2  ||  stack.length  >  0)  {  [BUGGY]    Object[]  newStack  =  new  Object[stackSize  *  2];  int[]  newPathIndices  =  new  int[stackSize  *  2];  String[]  newPathNames  =  new  String[stackSize  *  2];  System.arraycopy(stack,  0,  newStack,  0,  stackSize);  System.arraycopy(pathIndices,  0,  newPathIndices,  0,  stackSize);  System.arraycopy(pathNames,  0,  newPathNames,  0,  stackSize);  stack  =  newStack;  pathIndices  =  newPathIndices;  pathNames  =  newPathNames;  }  [CLASS]  JsonTreeReader  1  [METHOD]  push  [RETURN_TYPE]  void  Object  newTop  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  newTop  o  result  int[]  newPathIndices  pathIndices  String[]  newPathNames  pathNames  Object[]  newStack  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	280	280	2	add	if(stack.length!=  2  ||  stack.length  >  0)  {	  if(stack.length!=    newTop)    {    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	5	2	replace
203	[BUG]  [BUGGY]  if(stack.length!=  2  ||  stack.length  >  0)  {  [FE]  ArrayIndexOutOfBoundsException  [FE]      ArrayIndexOutOfBoundsException    [CONTEXT]    private  void  push(Object  newTop)  {    [BUGGY]  if(stack.length!=  2  ||  stack.length  >  0)  {  [BUGGY]    Object[]  newStack  =  new  Object[stackSize  *  2];  int[]  newPathIndices  =  new  int[stackSize  *  2];  String[]  newPathNames  =  new  String[stackSize  *  2];  System.arraycopy(stack,  0,  newStack,  0,  stackSize);  System.arraycopy(pathIndices,  0,  newPathIndices,  0,  stackSize);  System.arraycopy(pathNames,  0,  newPathNames,  0,  stackSize);  stack  =  newStack;  pathIndices  =  newPathIndices;  pathNames  =  newPathNames;  }  [CLASS]  JsonTreeReader  1  [METHOD]  push  [RETURN_TYPE]  void  Object  newTop  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  newTop  o  result  int[]  newPathIndices  pathIndices  String[]  newPathNames  pathNames  Object[]  newStack  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	280	280	2	replace	if(stack.length!=  2  ||  stack.length  >  0)  {	  if(stack.length!=    newTop)    {    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	5	2	replace
204	[BUG]  [BUGGY]  [FE]  ArrayIndexOutOfBoundsException  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]    private  void  push(Object  newTop)  {    [BUGGY]  if(stack.length  <  2  ||  stack.length  >  0)  {  [BUGGY]    Object[]  newStack  =  new  Object[stackSize  *  2];  int[]  newPathIndices  =  new  int[stackSize  *  2];  String[]  newPathNames  =  new  String[stackSize  *  2];  System.arraycopy(stack,  0,  newStack,  0,  stackSize);  System.arraycopy(pathIndices,  0,  newPathIndices,  0,  stackSize);  System.arraycopy(pathNames,  0,  newPathNames,  0,  stackSize);  stack  =  newStack;  pathIndices  =  newPathIndices;  pathNames  =  newPathNames;  }  [CLASS]  JsonTreeReader  1  [METHOD]  push  [RETURN_TYPE]  void  Object  newTop  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  newTop  o  result  int[]  newPathIndices  pathIndices  String[]  newPathNames  pathNames  Object[]  newStack  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	280	280	2	add	if(stack.length  <  2  ||  stack.length  >  0)  {	  if(stack.length    ==    2    ||    stack.length    >    0)    {    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	21	2	replace
205	[BUG]  [BUGGY]  if(stack.length  <  2  ||  stack.length  >  0)  {  [FE]  ArrayIndexOutOfBoundsException  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]    private  void  push(Object  newTop)  {    [BUGGY]  if(stack.length  <  2  ||  stack.length  >  0)  {  [BUGGY]    Object[]  newStack  =  new  Object[stackSize  *  2];  int[]  newPathIndices  =  new  int[stackSize  *  2];  String[]  newPathNames  =  new  String[stackSize  *  2];  System.arraycopy(stack,  0,  newStack,  0,  stackSize);  System.arraycopy(pathIndices,  0,  newPathIndices,  0,  stackSize);  System.arraycopy(pathNames,  0,  newPathNames,  0,  stackSize);  stack  =  newStack;  pathIndices  =  newPathIndices;  pathNames  =  newPathNames;  }  [CLASS]  JsonTreeReader  1  [METHOD]  push  [RETURN_TYPE]  void  Object  newTop  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  newTop  o  result  int[]  newPathIndices  pathIndices  String[]  newPathNames  pathNames  Object[]  newStack  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	280	280	2	replace	if(stack.length  <  2  ||  stack.length  >  0)  {	  if(stack.length    ==    2    ||    stack.length    >    0)    {    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	21	2	replace
206	[BUG]  [BUGGY]  [FE]  ArrayIndexOutOfBoundsException  [FE]      ArrayIndexOutOfBoundsException    [CONTEXT]    private  void  push(Object  newTop)  {    [BUGGY]  if(stack.length  >=  2  ||  stack.length  >  0)  {  [BUGGY]    Object[]  newStack  =  new  Object[stackSize  *  2];  int[]  newPathIndices  =  new  int[stackSize  *  2];  String[]  newPathNames  =  new  String[stackSize  *  2];  System.arraycopy(stack,  0,  newStack,  0,  stackSize);  System.arraycopy(pathIndices,  0,  newPathIndices,  0,  stackSize);  System.arraycopy(pathNames,  0,  newPathNames,  0,  stackSize);  stack  =  newStack;  pathIndices  =  newPathIndices;  pathNames  =  newPathNames;  }  [CLASS]  JsonTreeReader  1  [METHOD]  push  [RETURN_TYPE]  void  Object  newTop  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  newTop  o  result  int[]  newPathIndices  pathIndices  String[]  newPathNames  pathNames  Object[]  newStack  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	280	280	2	add	if(stack.length  >=  2  ||  stack.length  >  0)  {	  if(stack.length    ==    2    ||    stack.length    >    0)    {    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	21	2	replace
207	[BUG]  [BUGGY]  if(stack.length  >=  2  ||  stack.length  >  0)  {  [FE]  ArrayIndexOutOfBoundsException  [FE]      ArrayIndexOutOfBoundsException    [CONTEXT]    private  void  push(Object  newTop)  {    [BUGGY]  if(stack.length  >=  2  ||  stack.length  >  0)  {  [BUGGY]    Object[]  newStack  =  new  Object[stackSize  *  2];  int[]  newPathIndices  =  new  int[stackSize  *  2];  String[]  newPathNames  =  new  String[stackSize  *  2];  System.arraycopy(stack,  0,  newStack,  0,  stackSize);  System.arraycopy(pathIndices,  0,  newPathIndices,  0,  stackSize);  System.arraycopy(pathNames,  0,  newPathNames,  0,  stackSize);  stack  =  newStack;  pathIndices  =  newPathIndices;  pathNames  =  newPathNames;  }  [CLASS]  JsonTreeReader  1  [METHOD]  push  [RETURN_TYPE]  void  Object  newTop  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  newTop  o  result  int[]  newPathIndices  pathIndices  String[]  newPathNames  pathNames  Object[]  newStack  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	280	280	2	replace	if(stack.length  >=  2  ||  stack.length  >  0)  {	  if(stack.length    ==    2    ||    stack.length    >    0)    {    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	21	2	replace
208	[BUG]  [BUGGY]  [FE]  ArrayIndexOutOfBoundsException  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]    private  void  push(Object  newTop)  {    [BUGGY]  if(stack.length  >  stack.length)  {  [BUGGY]    Object[]  newStack  =  new  Object[stackSize  *  2];  int[]  newPathIndices  =  new  int[stackSize  *  2];  String[]  newPathNames  =  new  String[stackSize  *  2];  System.arraycopy(stack,  0,  newStack,  0,  stackSize);  System.arraycopy(pathIndices,  0,  newPathIndices,  0,  stackSize);  System.arraycopy(pathNames,  0,  newPathNames,  0,  stackSize);  stack  =  newStack;  pathIndices  =  newPathIndices;  pathNames  =  newPathNames;  }  [CLASS]  JsonTreeReader  1  [METHOD]  push  [RETURN_TYPE]  void  Object  newTop  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  newTop  o  result  int[]  newPathIndices  pathIndices  String[]  newPathNames  pathNames  Object[]  newStack  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	280	280	2	add	if(stack.length  >  stack.length)  {	  if(stack.length    ==    stack.length)    {    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	7	2	replace
209	[BUG]  [BUGGY]  if(stack.length  >  stack.length)  {  [FE]  ArrayIndexOutOfBoundsException  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]    private  void  push(Object  newTop)  {    [BUGGY]  if(stack.length  >  stack.length)  {  [BUGGY]    Object[]  newStack  =  new  Object[stackSize  *  2];  int[]  newPathIndices  =  new  int[stackSize  *  2];  String[]  newPathNames  =  new  String[stackSize  *  2];  System.arraycopy(stack,  0,  newStack,  0,  stackSize);  System.arraycopy(pathIndices,  0,  newPathIndices,  0,  stackSize);  System.arraycopy(pathNames,  0,  newPathNames,  0,  stackSize);  stack  =  newStack;  pathIndices  =  newPathIndices;  pathNames  =  newPathNames;  }  [CLASS]  JsonTreeReader  1  [METHOD]  push  [RETURN_TYPE]  void  Object  newTop  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  newTop  o  result  int[]  newPathIndices  pathIndices  String[]  newPathNames  pathNames  Object[]  newStack  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	280	280	2	replace	if(stack.length  >  stack.length)  {	  if(stack.length    ==    stack.length)    {    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	7	2	replace
210	[BUG]  [BUGGY]  if(stack.size()!=  newTop.length)  {  [CE]  cannot  find  symbol  [FE]                ArrayIndexOutOfBoundsException    [CONTEXT]    private  void  push(Object  newTop)  {    [BUGGY]  if(stack.size()!=  newTop.length)  {  [BUGGY]    Object[]  newStack  =  new  Object[stackSize  *  2];  int[]  newPathIndices  =  new  int[stackSize  *  2];  String[]  newPathNames  =  new  String[stackSize  *  2];  System.arraycopy(stack,  0,  newStack,  0,  stackSize);  System.arraycopy(pathIndices,  0,  newPathIndices,  0,  stackSize);  System.arraycopy(pathNames,  0,  newPathNames,  0,  stackSize);  stack  =  newStack;  pathIndices  =  newPathIndices;  pathNames  =  newPathNames;  }  [CLASS]  JsonTreeReader  1  [METHOD]  push  [RETURN_TYPE]  void  Object  newTop  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  newTop  o  result  int[]  newPathIndices  pathIndices  String[]  newPathNames  pathNames  Object[]  newStack  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	280	280	2	replace	if(stack.size()!=  newTop.length)  {	  if(newTop!=    stack.length)    {    	non-compiled	[CE]  cannot  find  symbol	8	None	replace
211	[BUG]  [BUGGY]  if(newTop!=  stack.length  ||  newTop!=  stack.length)  {  [CE]  incomparable  types:  Object  and  int  [FE]                  ArrayIndexOutOfBoundsException    [CONTEXT]    private  void  push(Object  newTop)  {    [BUGGY]  if(newTop!=  stack.length  ||  newTop!=  stack.length)  {  [BUGGY]    Object[]  newStack  =  new  Object[stackSize  *  2];  int[]  newPathIndices  =  new  int[stackSize  *  2];  String[]  newPathNames  =  new  String[stackSize  *  2];  System.arraycopy(stack,  0,  newStack,  0,  stackSize);  System.arraycopy(pathIndices,  0,  newPathIndices,  0,  stackSize);  System.arraycopy(pathNames,  0,  newPathNames,  0,  stackSize);  stack  =  newStack;  pathIndices  =  newPathIndices;  pathNames  =  newPathNames;  }  [CLASS]  JsonTreeReader  1  [METHOD]  push  [RETURN_TYPE]  void  Object  newTop  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  newTop  o  result  int[]  newPathIndices  pathIndices  String[]  newPathNames  pathNames  Object[]  newStack  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	280	280	2	replace	if(newTop!=  stack.length  ||  newTop!=  stack.length)  {	  if(newTop!=    stack.length)    {    	non-compiled	[CE]  incomparable  types:  Object  and  int	8	None	replace
212	[BUG]  [BUGGY]  if(stack.length  ==  stackSize)  {  Object[]  stack  =  new  Object[stack.length  ==  stackSize)  {  [CE]  ']'  expected  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]    private  void  push(Object  newTop)  {    [BUGGY]  if(stack.length  ==  stackSize)  {  Object[]  stack  =  new  Object[stack.length  ==  stackSize)  {  [BUGGY]    Object[]  newStack  =  new  Object[stackSize  *  2];  int[]  newPathIndices  =  new  int[stackSize  *  2];  String[]  newPathNames  =  new  String[stackSize  *  2];  System.arraycopy(stack,  0,  newStack,  0,  stackSize);  System.arraycopy(pathIndices,  0,  newPathIndices,  0,  stackSize);  System.arraycopy(pathNames,  0,  newPathNames,  0,  stackSize);  stack  =  newStack;  pathIndices  =  newPathIndices;  pathNames  =  newPathNames;  }  [CLASS]  JsonTreeReader  1  [METHOD]  push  [RETURN_TYPE]  void  Object  newTop  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  newTop  o  result  int[]  newPathIndices  pathIndices  String[]  newPathNames  pathNames  Object[]  newStack  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	280	280	2	replace	if(stack.length    ==    stackSize)    {    Object[]  stack  =  new  Object[stack.length  ==  stackSize)  {	  	non-compiled	[CE]  ']'  expected	14	None	add
213	[BUG]  [BUGGY]  if(stack.length  ==  stackSize)  {  Object[]  stack  =  new  Object[stack.length  ==  stackSize);  [CE]  ']'  expected  [FE]      ArrayIndexOutOfBoundsException    [CONTEXT]    private  void  push(Object  newTop)  {    [BUGGY]  if(stack.length  ==  stackSize)  {  Object[]  stack  =  new  Object[stack.length  ==  stackSize);  [BUGGY]    Object[]  newStack  =  new  Object[stackSize  *  2];  int[]  newPathIndices  =  new  int[stackSize  *  2];  String[]  newPathNames  =  new  String[stackSize  *  2];  System.arraycopy(stack,  0,  newStack,  0,  stackSize);  System.arraycopy(pathIndices,  0,  newPathIndices,  0,  stackSize);  System.arraycopy(pathNames,  0,  newPathNames,  0,  stackSize);  stack  =  newStack;  pathIndices  =  newPathIndices;  pathNames  =  newPathNames;  }  [CLASS]  JsonTreeReader  1  [METHOD]  push  [RETURN_TYPE]  void  Object  newTop  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  newTop  o  result  int[]  newPathIndices  pathIndices  String[]  newPathNames  pathNames  Object[]  newStack  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	280	280	2	replace	if(stack.length    ==    stackSize)    {    Object[]  stack  =  new  Object[stack.length  ==  stackSize);	  	non-compiled	[CE]  ']'  expected	14	None	add
214	[BUG]  [BUGGY]  if(stack.length  ==  newTop.length  ||  stack.length  ==  newTop.length)  {  [CE]  cannot  find  symbol  length  [FE]                    ArrayIndexOutOfBoundsException    [CONTEXT]    private  void  push(Object  newTop)  {    [BUGGY]  if(stack.length  ==  newTop.length  ||  stack.length  ==  newTop.length)  {  [BUGGY]    Object[]  newStack  =  new  Object[stackSize  *  2];  int[]  newPathIndices  =  new  int[stackSize  *  2];  String[]  newPathNames  =  new  String[stackSize  *  2];  System.arraycopy(stack,  0,  newStack,  0,  stackSize);  System.arraycopy(pathIndices,  0,  newPathIndices,  0,  stackSize);  System.arraycopy(pathNames,  0,  newPathNames,  0,  stackSize);  stack  =  newStack;  pathIndices  =  newPathIndices;  pathNames  =  newPathNames;  }  [CLASS]  JsonTreeReader  1  [METHOD]  push  [RETURN_TYPE]  void  Object  newTop  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  newTop  o  result  int[]  newPathIndices  pathIndices  String[]  newPathNames  pathNames  Object[]  newStack  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	280	280	2	replace	if(stack.length  ==  newTop.length  ||  stack.length  ==  newTop.length)  {	  if(stack.length    ==    newTop.length)    {    	non-compiled	[CE]  cannot  find  symbol  length	10	None	replace
215	[BUG]  [BUGGY]  if(stack.length  ==  currentTop.length)  {  [CE]  cannot  find  symbol  currentTop  [FE]                      ArrayIndexOutOfBoundsException    [CONTEXT]    private  void  push(Object  newTop)  {    [BUGGY]  if(stack.length  ==  currentTop.length)  {  [BUGGY]    Object[]  newStack  =  new  Object[stackSize  *  2];  int[]  newPathIndices  =  new  int[stackSize  *  2];  String[]  newPathNames  =  new  String[stackSize  *  2];  System.arraycopy(stack,  0,  newStack,  0,  stackSize);  System.arraycopy(pathIndices,  0,  newPathIndices,  0,  stackSize);  System.arraycopy(pathNames,  0,  newPathNames,  0,  stackSize);  stack  =  newStack;  pathIndices  =  newPathIndices;  pathNames  =  newPathNames;  }  [CLASS]  JsonTreeReader  1  [METHOD]  push  [RETURN_TYPE]  void  Object  newTop  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  newTop  o  result  int[]  newPathIndices  pathIndices  String[]  newPathNames  pathNames  Object[]  newStack  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	280	280	2	replace	if(stack.length  ==  currentTop.length)  {	  if(stack.length    ==    newTop.length)    {    	non-compiled	[CE]  cannot  find  symbol  currentTop	10	None	replace
216	[BUG]  [BUGGY]  if(stack!=  null  ||  stack.length  ==  0)  {  if(stack!=  null  ||  stack.length  {  0)  {  [CE]  ')'  expected  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]    private  void  push(Object  newTop)  {    [BUGGY]  if(stack!=  null  ||  stack.length  ==  0)  {  if(stack!=  null  ||  stack.length  {  0)  {  [BUGGY]    Object[]  newStack  =  new  Object[stackSize  *  2];  int[]  newPathIndices  =  new  int[stackSize  *  2];  String[]  newPathNames  =  new  String[stackSize  *  2];  System.arraycopy(stack,  0,  newStack,  0,  stackSize);  System.arraycopy(pathIndices,  0,  newPathIndices,  0,  stackSize);  System.arraycopy(pathNames,  0,  newPathNames,  0,  stackSize);  stack  =  newStack;  pathIndices  =  newPathIndices;  pathNames  =  newPathNames;  }  [CLASS]  JsonTreeReader  1  [METHOD]  push  [RETURN_TYPE]  void  Object  newTop  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  newTop  o  result  int[]  newPathIndices  pathIndices  String[]  newPathNames  pathNames  Object[]  newStack  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	280	280	2	replace	if(stack!=    null    ||    stack.length    ==    0)    {    if(stack!=  null  ||  stack.length  {  0)  {	  	non-compiled	[CE]  ')'  expected	12	None	add
217	[BUG]  [BUGGY]  if(stack!=  null)  {  int  stackSize  =  stack.size();  System.arraycopy(pathNames,  0,  newStack,  0,  stackSize);  System.arraycopy(pathNames,  0,  stackSize);  }  [CE]  ']'  expected  [FE]                      ArrayIndexOutOfBoundsException    [CONTEXT]    private  void  push(Object  newTop)  {    [BUGGY]  if(stack!=  null)  {  int  stackSize  =  stack.size();  System.arraycopy(pathNames,  0,  newStack,  0,  stackSize);  System.arraycopy(pathNames,  0,  stackSize);  }  [BUGGY]    Object[]  newStack  =  new  Object[stackSize  *  2];  int[]  newPathIndices  =  new  int[stackSize  *  2];  String[]  newPathNames  =  new  String[stackSize  *  2];  System.arraycopy(stack,  0,  newStack,  0,  stackSize);  System.arraycopy(pathIndices,  0,  newPathIndices,  0,  stackSize);  System.arraycopy(pathNames,  0,  newPathNames,  0,  stackSize);  stack  =  newStack;  pathIndices  =  newPathIndices;  pathNames  =  newPathNames;  }  [CLASS]  JsonTreeReader  1  [METHOD]  push  [RETURN_TYPE]  void  Object  newTop  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  newTop  o  result  int[]  newPathIndices  pathIndices  String[]  newPathNames  pathNames  Object[]  newStack  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	280	280	2	replace	if(stack!=  null)  {  int  stackSize  =  stack.size();  System.arraycopy(pathNames,  0,  newStack,  0,  stackSize);  System.arraycopy(pathNames,  0,  stackSize);  }	      	non-compiled	[CE]  ']'  expected	11	None	replace
218	[BUG]  [BUGGY]  if(stack!=  null)  {  int  stackSize  =  stack.size();  System.arraycopy(pathNames,  0,  newStack,  0,  stackSize);  System.arraycopy(pathNames,  0,  stackSize);  System.arraycopy(pathNames,  pathNames,  [CE]  '.class'  expected  [FE]                        ArrayIndexOutOfBoundsException    [CONTEXT]    private  void  push(Object  newTop)  {    [BUGGY]  if(stack!=  null)  {  int  stackSize  =  stack.size();  System.arraycopy(pathNames,  0,  newStack,  0,  stackSize);  System.arraycopy(pathNames,  0,  stackSize);  System.arraycopy(pathNames,  pathNames,  [BUGGY]    Object[]  newStack  =  new  Object[stackSize  *  2];  int[]  newPathIndices  =  new  int[stackSize  *  2];  String[]  newPathNames  =  new  String[stackSize  *  2];  System.arraycopy(stack,  0,  newStack,  0,  stackSize);  System.arraycopy(pathIndices,  0,  newPathIndices,  0,  stackSize);  System.arraycopy(pathNames,  0,  newPathNames,  0,  stackSize);  stack  =  newStack;  pathIndices  =  newPathIndices;  pathNames  =  newPathNames;  }  [CLASS]  JsonTreeReader  1  [METHOD]  push  [RETURN_TYPE]  void  Object  newTop  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  newTop  o  result  int[]  newPathIndices  pathIndices  String[]  newPathNames  pathNames  Object[]  newStack  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	280	280	2	replace	if(stack!=  null)  {  int  stackSize  =  stack.size();  System.arraycopy(pathNames,  0,  newStack,  0,  stackSize);  System.arraycopy(pathNames,  0,  stackSize);  System.arraycopy(pathNames,  pathNames,	      	non-compiled	[CE]  '.class'  expected	11	None	replace
219	[BUG]  [BUGGY]  if(newTop!=  null)  {  int  stackSize  =  stack.size();  System.arraycopy(pathNames,  0,  newStack,  0,  stackSize);  System.arraycopy(pathNames,  0,  stackSize);  }  [CE]  ']'  expected  [FE]                          ArrayIndexOutOfBoundsException    [CONTEXT]    private  void  push(Object  newTop)  {    [BUGGY]  if(newTop!=  null)  {  int  stackSize  =  stack.size();  System.arraycopy(pathNames,  0,  newStack,  0,  stackSize);  System.arraycopy(pathNames,  0,  stackSize);  }  [BUGGY]    Object[]  newStack  =  new  Object[stackSize  *  2];  int[]  newPathIndices  =  new  int[stackSize  *  2];  String[]  newPathNames  =  new  String[stackSize  *  2];  System.arraycopy(stack,  0,  newStack,  0,  stackSize);  System.arraycopy(pathIndices,  0,  newPathIndices,  0,  stackSize);  System.arraycopy(pathNames,  0,  newPathNames,  0,  stackSize);  stack  =  newStack;  pathIndices  =  newPathIndices;  pathNames  =  newPathNames;  }  [CLASS]  JsonTreeReader  1  [METHOD]  push  [RETURN_TYPE]  void  Object  newTop  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  newTop  o  result  int[]  newPathIndices  pathIndices  String[]  newPathNames  pathNames  Object[]  newStack  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	280	280	2	replace	if(newTop!=  null)  {  int  stackSize  =  stack.size();  System.arraycopy(pathNames,  0,  newStack,  0,  stackSize);  System.arraycopy(pathNames,  0,  stackSize);  }	      	non-compiled	[CE]  ']'  expected	11	None	replace
220	[BUG]  [BUGGY]  if(newTop!=  null)  {  int  stackSize  =  stack.size();  System.arraycopy(stack,  0,  newStack,  0,  stackSize);  System.arraycopy(pathNames,  0,  stackSize);  }  [CE]  ']'  expected  [FE]                            ArrayIndexOutOfBoundsException    [CONTEXT]    private  void  push(Object  newTop)  {    [BUGGY]  if(newTop!=  null)  {  int  stackSize  =  stack.size();  System.arraycopy(stack,  0,  newStack,  0,  stackSize);  System.arraycopy(pathNames,  0,  stackSize);  }  [BUGGY]    Object[]  newStack  =  new  Object[stackSize  *  2];  int[]  newPathIndices  =  new  int[stackSize  *  2];  String[]  newPathNames  =  new  String[stackSize  *  2];  System.arraycopy(stack,  0,  newStack,  0,  stackSize);  System.arraycopy(pathIndices,  0,  newPathIndices,  0,  stackSize);  System.arraycopy(pathNames,  0,  newPathNames,  0,  stackSize);  stack  =  newStack;  pathIndices  =  newPathIndices;  pathNames  =  newPathNames;  }  [CLASS]  JsonTreeReader  1  [METHOD]  push  [RETURN_TYPE]  void  Object  newTop  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  newTop  o  result  int[]  newPathIndices  pathIndices  String[]  newPathNames  pathNames  Object[]  newStack  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	280	280	2	replace	if(newTop!=  null)  {  int  stackSize  =  stack.size();  System.arraycopy(stack,  0,  newStack,  0,  stackSize);  System.arraycopy(pathNames,  0,  stackSize);  }	      	non-compiled	[CE]  ']'  expected	11	None	replace
221	[BUG]  [BUGGY]  if(stack!=  null)  {  int  stackSize  =  stack.size();  for(int  i  =  0;  i  <  stackSize;  ++i)  {  stack[i]  =  newTop;  }  [CE]  cannot  find  symbol  [FE]                              ArrayIndexOutOfBoundsException    [CONTEXT]    private  void  push(Object  newTop)  {    [BUGGY]  if(stack!=  null)  {  int  stackSize  =  stack.size();  for(int  i  =  0;  i  <  stackSize;  ++i)  {  stack[i]  =  newTop;  }  [BUGGY]    Object[]  newStack  =  new  Object[stackSize  *  2];  int[]  newPathIndices  =  new  int[stackSize  *  2];  String[]  newPathNames  =  new  String[stackSize  *  2];  System.arraycopy(stack,  0,  newStack,  0,  stackSize);  System.arraycopy(pathIndices,  0,  newPathIndices,  0,  stackSize);  System.arraycopy(pathNames,  0,  newPathNames,  0,  stackSize);  stack  =  newStack;  pathIndices  =  newPathIndices;  pathNames  =  newPathNames;  }  [CLASS]  JsonTreeReader  1  [METHOD]  push  [RETURN_TYPE]  void  Object  newTop  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  newTop  o  result  int[]  newPathIndices  pathIndices  String[]  newPathNames  pathNames  Object[]  newStack  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	280	280	2	replace	if(stack!=  null)  {  int  stackSize  =  stack.size();  for(int  i  =  0;  i  <  stackSize;  ++i)  {  stack[i]  =  newTop;  }	      	non-compiled	[CE]  cannot  find  symbol	11	None	replace
222	[BUG]  [BUGGY]  if(stack!=  null)  {  int  stackSize  =  stack.size();  System.arraycopy(pathNames,  0,  newStack,  0,  stackSize);  System.arraycopy(pathNames,  0,  stackSize);  System.arraycopy(pathNames,  0,  stackSize);  }  [CE]  ']'  expected  [FE]                                ArrayIndexOutOfBoundsException    [CONTEXT]    private  void  push(Object  newTop)  {    [BUGGY]  if(stack!=  null)  {  int  stackSize  =  stack.size();  System.arraycopy(pathNames,  0,  newStack,  0,  stackSize);  System.arraycopy(pathNames,  0,  stackSize);  System.arraycopy(pathNames,  0,  stackSize);  }  [BUGGY]    Object[]  newStack  =  new  Object[stackSize  *  2];  int[]  newPathIndices  =  new  int[stackSize  *  2];  String[]  newPathNames  =  new  String[stackSize  *  2];  System.arraycopy(stack,  0,  newStack,  0,  stackSize);  System.arraycopy(pathIndices,  0,  newPathIndices,  0,  stackSize);  System.arraycopy(pathNames,  0,  newPathNames,  0,  stackSize);  stack  =  newStack;  pathIndices  =  newPathIndices;  pathNames  =  newPathNames;  }  [CLASS]  JsonTreeReader  1  [METHOD]  push  [RETURN_TYPE]  void  Object  newTop  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  newTop  o  result  int[]  newPathIndices  pathIndices  String[]  newPathNames  pathNames  Object[]  newStack  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	280	280	2	replace	if(stack!=  null)  {  int  stackSize  =  stack.size();  System.arraycopy(pathNames,  0,  newStack,  0,  stackSize);  System.arraycopy(pathNames,  0,  stackSize);  System.arraycopy(pathNames,  0,  stackSize);  }	      	non-compiled	[CE]  ']'  expected	11	None	replace
223	[BUG]  [BUGGY]  if(newTop!=  null)  {  int  stackSize  =  stack.size();  System.arraycopy(pathNames,  0,  newStack,  0,  stackSize);  System.arraycopy(pathNames,  0,  stackSize);  System.arraycopy(pathNames,  0,  stackSize);  }  [CE]  ']'  expected  [FE]                                  ArrayIndexOutOfBoundsException    [CONTEXT]    private  void  push(Object  newTop)  {    [BUGGY]  if(newTop!=  null)  {  int  stackSize  =  stack.size();  System.arraycopy(pathNames,  0,  newStack,  0,  stackSize);  System.arraycopy(pathNames,  0,  stackSize);  System.arraycopy(pathNames,  0,  stackSize);  }  [BUGGY]    Object[]  newStack  =  new  Object[stackSize  *  2];  int[]  newPathIndices  =  new  int[stackSize  *  2];  String[]  newPathNames  =  new  String[stackSize  *  2];  System.arraycopy(stack,  0,  newStack,  0,  stackSize);  System.arraycopy(pathIndices,  0,  newPathIndices,  0,  stackSize);  System.arraycopy(pathNames,  0,  newPathNames,  0,  stackSize);  stack  =  newStack;  pathIndices  =  newPathIndices;  pathNames  =  newPathNames;  }  [CLASS]  JsonTreeReader  1  [METHOD]  push  [RETURN_TYPE]  void  Object  newTop  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  newTop  o  result  int[]  newPathIndices  pathIndices  String[]  newPathNames  pathNames  Object[]  newStack  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	280	280	2	replace	if(newTop!=  null)  {  int  stackSize  =  stack.size();  System.arraycopy(pathNames,  0,  newStack,  0,  stackSize);  System.arraycopy(pathNames,  0,  stackSize);  System.arraycopy(pathNames,  0,  stackSize);  }	      	non-compiled	[CE]  ']'  expected	11	None	replace
224	[BUG]  [BUGGY]  if(stack!=  null  ||  stack.length  <  =  0)  {  [CE]  illegal  start  of  expression  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]    private  void  push(Object  newTop)  {    [BUGGY]  if(stack!=  null  ||  stack.length  <  =  0)  {  [BUGGY]    Object[]  newStack  =  new  Object[stackSize  *  2];  int[]  newPathIndices  =  new  int[stackSize  *  2];  String[]  newPathNames  =  new  String[stackSize  *  2];  System.arraycopy(stack,  0,  newStack,  0,  stackSize);  System.arraycopy(pathIndices,  0,  newPathIndices,  0,  stackSize);  System.arraycopy(pathNames,  0,  newPathNames,  0,  stackSize);  stack  =  newStack;  pathIndices  =  newPathIndices;  pathNames  =  newPathNames;  }  [CLASS]  JsonTreeReader  1  [METHOD]  push  [RETURN_TYPE]  void  Object  newTop  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  newTop  o  result  int[]  newPathIndices  pathIndices  String[]  newPathNames  pathNames  Object[]  newStack  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	280	280	2	replace	if(stack!=  null  ||  stack.length  <  =  0)  {	  if(stack!=    null    ||    stack.length    ==    0)    {    	non-compiled	[CE]  illegal  start  of  expression	13	None	replace
225	[BUG]  [BUGGY]  [FE]  ArrayIndexOutOfBoundsException  [FE]      ArrayIndexOutOfBoundsException    [CONTEXT]    private  void  push(Object  newTop)  {    [BUGGY]  if(stack!=  null  ||  stack.length  <  2)  {  [BUGGY]    Object[]  newStack  =  new  Object[stackSize  *  2];  int[]  newPathIndices  =  new  int[stackSize  *  2];  String[]  newPathNames  =  new  String[stackSize  *  2];  System.arraycopy(stack,  0,  newStack,  0,  stackSize);  System.arraycopy(pathIndices,  0,  newPathIndices,  0,  stackSize);  System.arraycopy(pathNames,  0,  newPathNames,  0,  stackSize);  stack  =  newStack;  pathIndices  =  newPathIndices;  pathNames  =  newPathNames;  }  [CLASS]  JsonTreeReader  1  [METHOD]  push  [RETURN_TYPE]  void  Object  newTop  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  newTop  o  result  int[]  newPathIndices  pathIndices  String[]  newPathNames  pathNames  Object[]  newStack  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	280	280	2	add	if(stack!=  null  ||  stack.length  <  2)  {	  if(stack!=    null    ||    stack.length    ==    0)    {    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	13	2	replace
226	[BUG]  [BUGGY]  if(stack!=  null  ||  stack.length  <  2)  {  [FE]  ArrayIndexOutOfBoundsException  [FE]      ArrayIndexOutOfBoundsException    [CONTEXT]    private  void  push(Object  newTop)  {    [BUGGY]  if(stack!=  null  ||  stack.length  <  2)  {  [BUGGY]    Object[]  newStack  =  new  Object[stackSize  *  2];  int[]  newPathIndices  =  new  int[stackSize  *  2];  String[]  newPathNames  =  new  String[stackSize  *  2];  System.arraycopy(stack,  0,  newStack,  0,  stackSize);  System.arraycopy(pathIndices,  0,  newPathIndices,  0,  stackSize);  System.arraycopy(pathNames,  0,  newPathNames,  0,  stackSize);  stack  =  newStack;  pathIndices  =  newPathIndices;  pathNames  =  newPathNames;  }  [CLASS]  JsonTreeReader  1  [METHOD]  push  [RETURN_TYPE]  void  Object  newTop  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  newTop  o  result  int[]  newPathIndices  pathIndices  String[]  newPathNames  pathNames  Object[]  newStack  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	280	280	2	replace	if(stack!=  null  ||  stack.length  <  2)  {	  if(stack!=    null    ||    stack.length    ==    0)    {    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	13	2	replace
227	[BUG]  [BUGGY]  if(stackSize  <  newTop)  {  [CE]  bad  operand  types  for  binary  operator  '<'  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]    private  void  push(Object  newTop)  {    [BUGGY]  if(stackSize  <  newTop)  {  [BUGGY]    Object[]  newStack  =  new  Object[stackSize  *  2];  int[]  newPathIndices  =  new  int[stackSize  *  2];  String[]  newPathNames  =  new  String[stackSize  *  2];  System.arraycopy(stack,  0,  newStack,  0,  stackSize);  System.arraycopy(pathIndices,  0,  newPathIndices,  0,  stackSize);  System.arraycopy(pathNames,  0,  newPathNames,  0,  stackSize);  stack  =  newStack;  pathIndices  =  newPathIndices;  pathNames  =  newPathNames;  }  [CLASS]  JsonTreeReader  1  [METHOD]  push  [RETURN_TYPE]  void  Object  newTop  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  newTop  o  result  int[]  newPathIndices  pathIndices  String[]  newPathNames  pathNames  Object[]  newStack  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	280	280	2	replace	if(stackSize  <  newTop)  {	  if(stackSize    ==    newTop)    {    	non-compiled	[CE]  bad  operand  types  for  binary  operator  '<'	17	None	replace
228	[BUG]  [BUGGY]  [FE]  ArrayIndexOutOfBoundsException  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]    private  void  push(Object  newTop)  {    [BUGGY]  if(stack.length  >  stackSize)  {  [BUGGY]    Object[]  newStack  =  new  Object[stackSize  *  2];  int[]  newPathIndices  =  new  int[stackSize  *  2];  String[]  newPathNames  =  new  String[stackSize  *  2];  System.arraycopy(stack,  0,  newStack,  0,  stackSize);  System.arraycopy(pathIndices,  0,  newPathIndices,  0,  stackSize);  System.arraycopy(pathNames,  0,  newPathNames,  0,  stackSize);  stack  =  newStack;  pathIndices  =  newPathIndices;  pathNames  =  newPathNames;  }  [CLASS]  JsonTreeReader  1  [METHOD]  push  [RETURN_TYPE]  void  Object  newTop  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  newTop  o  result  int[]  newPathIndices  pathIndices  String[]  newPathNames  pathNames  Object[]  newStack  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	280	280	2	add	if(stack.length  >  stackSize)  {	  if(stack.length    ==    stackSize)    {    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	15	2	replace
229	[BUG]  [BUGGY]  if(stack.length  >  stackSize)  {  [FE]  ArrayIndexOutOfBoundsException  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]    private  void  push(Object  newTop)  {    [BUGGY]  if(stack.length  >  stackSize)  {  [BUGGY]    Object[]  newStack  =  new  Object[stackSize  *  2];  int[]  newPathIndices  =  new  int[stackSize  *  2];  String[]  newPathNames  =  new  String[stackSize  *  2];  System.arraycopy(stack,  0,  newStack,  0,  stackSize);  System.arraycopy(pathIndices,  0,  newPathIndices,  0,  stackSize);  System.arraycopy(pathNames,  0,  newPathNames,  0,  stackSize);  stack  =  newStack;  pathIndices  =  newPathIndices;  pathNames  =  newPathNames;  }  [CLASS]  JsonTreeReader  1  [METHOD]  push  [RETURN_TYPE]  void  Object  newTop  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  newTop  o  result  int[]  newPathIndices  pathIndices  String[]  newPathNames  pathNames  Object[]  newStack  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	280	280	2	replace	if(stack.length  >  stackSize)  {	  if(stack.length    ==    stackSize)    {    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	15	2	replace
