bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  validateValue(JsonToken.VALUE_STRING);  [CE]  cannot  find  symbol  VALUE_STRING  [FE]                        ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {      [BUGGY]  validateValue(JsonToken.VALUE_STRING);  [BUGGY]      pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	261	261	2	replace	validateValue(JsonToken.VALUE_STRING);	  validateValue(JsonToken.VALUE_EMBEDDED_OBJECT);    	non-compiled	[CE]  cannot  find  symbol  VALUE_STRING	98	None	replace
2	[BUG]  [BUGGY]  validateValue(JsonToken.VALUE_NUMBER);  [CE]  cannot  find  symbol  VALUE_NUMBER  [FE]                          ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {      [BUGGY]  validateValue(JsonToken.VALUE_NUMBER);  [BUGGY]      pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	261	261	2	replace	validateValue(JsonToken.VALUE_NUMBER);	  validateValue(JsonToken.VALUE_EMBEDDED_OBJECT);    	non-compiled	[CE]  cannot  find  symbol  VALUE_NUMBER	98	None	replace
3	[BUG]  [BUGGY]  validateValue(JsonToken.VALUE_EMBEDDED_NAME);  [CE]  cannot  find  symbol  VALUE_EMBEDDED_NAME  [FE]                            ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {      [BUGGY]  validateValue(JsonToken.VALUE_EMBEDDED_NAME);  [BUGGY]      pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	261	261	2	replace	validateValue(JsonToken.VALUE_EMBEDDED_NAME);	  validateValue(JsonToken.VALUE_EMBEDDED_OBJECT);    	non-compiled	[CE]  cannot  find  symbol  VALUE_EMBEDDED_NAME	98	None	replace
4	[BUG]  [BUGGY]  validateValue(JsonToken.VALUE_EMBEDDED_FIELD);  [CE]  cannot  find  symbol  VALUE_EMBEDDED_FIELD  [FE]                              ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {      [BUGGY]  validateValue(JsonToken.VALUE_EMBEDDED_FIELD);  [BUGGY]      pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	261	261	2	replace	validateValue(JsonToken.VALUE_EMBEDDED_FIELD);	  validateValue(JsonToken.VALUE_EMBEDDED_OBJECT);    	non-compiled	[CE]  cannot  find  symbol  VALUE_EMBEDDED_FIELD	98	None	replace
5	[BUG]  [BUGGY]  Path  pathNames[stackSize  -  1]  =  null;  [CE]  ']'  expected  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {      [BUGGY]  Path  pathNames[stackSize  -  1]  =  null;  [BUGGY]      pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	261	261	2	replace	Path  pathNames[stackSize  -  1]  =  null;	          if(stackSize    >    0)    {    pathNames[stackSize    -    1]    =    null;    }    	non-compiled	[CE]  ']'  expected	174	None	replace
6	[BUG]  [BUGGY]  Path[]  result  =  pathNames.toArray(new  Path[result.size()  ]);  [CE]  cannot  find  symbol  [FE]      ArrayIndexOutOfBoundsException    [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {      [BUGGY]  Path[]  result  =  pathNames.toArray(new  Path[result.size()  ]);  [BUGGY]      pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	261	261	2	replace	Path[]  result  =  pathNames.toArray(new  Path[result.size()  ]);	          if(stackSize    >    0)    {    pathNames[stackSize    -    1]    =    null;    }    	non-compiled	[CE]  cannot  find  symbol	174	None	replace
7	[BUG]  [BUGGY]  Path[]  result  =  pathNames.toArray(new  Path[result.length  -  1]);  [CE]  cannot  find  symbol  [FE]        ArrayIndexOutOfBoundsException    [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {      [BUGGY]  Path[]  result  =  pathNames.toArray(new  Path[result.length  -  1]);  [BUGGY]      pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	261	261	2	replace	Path[]  result  =  pathNames.toArray(new  Path[result.length  -  1]);	          if(stackSize    >    0)    {    pathNames[stackSize    -    1]    =    null;    }    	non-compiled	[CE]  cannot  find  symbol	174	None	replace
8	[BUG]  [BUGGY]  StackTree  <  NUMBER_OF_RANGE  ||  stackSize  >  1)  {  popStack();  [CE]  >  expected  [FE]                      ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {      [BUGGY]  StackTree  <  NUMBER_OF_RANGE  ||  stackSize  >  1)  {  popStack();  [BUGGY]      pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	261	261	2	replace	StackTree  <  NUMBER_OF_RANGE  ||  stackSize  >  1)  {  popStack();	  StackTree    <    NUMBER_OF_RANGE    ||    stackSize    >    0)    {    popStack();    }    else    {    skipStack();    }    	non-compiled	[CE]  >  expected	75	None	replace
9	[BUG]  [BUGGY]  StackTree  <  NUMBER_OF_RANGE  ||  stackSize  >  1)  {  popStack();  }  else  {  skipStack();  }  [CE]  >  expected  [FE]                        ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {      [BUGGY]  StackTree  <  NUMBER_OF_RANGE  ||  stackSize  >  1)  {  popStack();  }  else  {  skipStack();  }  [BUGGY]      pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	261	261	2	replace	StackTree  <  NUMBER_OF_RANGE  ||  stackSize  >  1)  {  popStack();  }  else  {  skipStack();  }	  StackTree    <    NUMBER_OF_RANGE    ||    stackSize    >    0)    {    popStack();    }    else    {    skipStack();    }    	non-compiled	[CE]  >  expected	75	None	replace
10	[BUG]  [BUGGY]  StackTree  <  NUMBER_OF_RANGE  ||  stackSize  >  1)  {  popStack();  }  [CE]  >  expected  [FE]                          ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {      [BUGGY]  StackTree  <  NUMBER_OF_RANGE  ||  stackSize  >  1)  {  popStack();  }  [BUGGY]      pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	261	261	2	replace	StackTree  <  NUMBER_OF_RANGE  ||  stackSize  >  1)  {  popStack();  }	  StackTree    <    NUMBER_OF_RANGE    ||    stackSize    >    0)    {    popStack();    }    else    {    skipStack();    }    	non-compiled	[CE]  >  expected	75	None	replace
11	[BUG]  [BUGGY]  StackTree  <  NUMBER_OF_RANGE  &&  stackSize  >  0)  {  popStack();  }  else  {  skipStack();  }  [CE]  >  expected  [FE]                            ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {      [BUGGY]  StackTree  <  NUMBER_OF_RANGE  &&  stackSize  >  0)  {  popStack();  }  else  {  skipStack();  }  [BUGGY]      pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	261	261	2	replace	StackTree  <  NUMBER_OF_RANGE  &&  stackSize  >  0)  {  popStack();  }  else  {  skipStack();  }	  StackTree    <    NUMBER_OF_RANGE    ||    stackSize    >    0)    {    popStack();    }    else    {    skipStack();    }    	non-compiled	[CE]  >  expected	75	None	replace
12	[BUG]  [BUGGY]  StackTree  <  NUMBER_OF_RANGE  ||  stackSize  >=  0)  {  popStack();  }  else  {  skipStack();  }  [CE]  >  expected  [FE]                              ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {      [BUGGY]  StackTree  <  NUMBER_OF_RANGE  ||  stackSize  >=  0)  {  popStack();  }  else  {  skipStack();  }  [BUGGY]      pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	261	261	2	replace	StackTree  <  NUMBER_OF_RANGE  ||  stackSize  >=  0)  {  popStack();  }  else  {  skipStack();  }	  StackTree    <    NUMBER_OF_RANGE    ||    stackSize    >    0)    {    popStack();    }    else    {    skipStack();    }    	non-compiled	[CE]  >  expected	75	None	replace
13	[BUG]  [BUGGY]  StackTree  <  NUMBER_OF_RANGE  ||  stackSize  >=  0)  {  popStack();  [CE]  >  expected  [FE]                                ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {      [BUGGY]  StackTree  <  NUMBER_OF_RANGE  ||  stackSize  >=  0)  {  popStack();  [BUGGY]      pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	261	261	2	replace	StackTree  <  NUMBER_OF_RANGE  ||  stackSize  >=  0)  {  popStack();	  StackTree    <    NUMBER_OF_RANGE    ||    stackSize    >    0)    {    popStack();    }    else    {    skipStack();    }    	non-compiled	[CE]  >  expected	75	None	replace
14	[BUG]  [BUGGY]  StackTree  <  NUMBER_OF_RANGE  &&  stackSize  >  0)  {  popStack();  [CE]  >  expected  [FE]                                  ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {      [BUGGY]  StackTree  <  NUMBER_OF_RANGE  &&  stackSize  >  0)  {  popStack();  [BUGGY]      pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	261	261	2	replace	StackTree  <  NUMBER_OF_RANGE  &&  stackSize  >  0)  {  popStack();	  StackTree    <    NUMBER_OF_RANGE    ||    stackSize    >    0)    {    popStack();    }    else    {    skipStack();    }    	non-compiled	[CE]  >  expected	75	None	replace
15	[BUG]  [BUGGY]  pathIndices[stackSize  -  2]  =   "null ";  [CE]  incompatible  types  [FE]                              ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {      [BUGGY]  pathIndices[stackSize  -  2]  =   "null ";  [BUGGY]      pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	261	261	2	replace	pathIndices[stackSize  -  2]  =   "null ";	  pathIndices[stackSize    -    2]    =    null;    	non-compiled	[CE]  incompatible  types	23	None	replace
16	[BUG]  [BUGGY]  pathIndices[stackSize  -  2]  =  JsonToken.VALUE_NULL;  [CE]  cannot  find  symbol  VALUE_NULL  [FE]                                ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {      [BUGGY]  pathIndices[stackSize  -  2]  =  JsonToken.VALUE_NULL;  [BUGGY]      pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	261	261	2	replace	pathIndices[stackSize  -  2]  =  JsonToken.VALUE_NULL;	  pathIndices[stackSize    -    2]    =    null;    	non-compiled	[CE]  cannot  find  symbol  VALUE_NULL	23	None	replace
17	[BUG]  [BUGGY]  pathIndices[stackSize  -  2]  =  JsonToken.VALUE_EMBEDDED_ARRAY;  [CE]  cannot  find  symbol  VALUE_EMBEDDED_ARRAY  [FE]                                  ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {      [BUGGY]  pathIndices[stackSize  -  2]  =  JsonToken.VALUE_EMBEDDED_ARRAY;  [BUGGY]      pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	261	261	2	replace	pathIndices[stackSize  -  2]  =  JsonToken.VALUE_EMBEDDED_ARRAY;	  pathIndices[stackSize    -    2]    =    null;    	non-compiled	[CE]  cannot  find  symbol  VALUE_EMBEDDED_ARRAY	23	None	replace
18	[BUG]  [BUGGY]  pathIndices[stackSize  -  2]  =  JsonToken.VALUE_EMBEDDED_OBJECT;  [CE]  cannot  find  symbol  VALUE_EMBEDDED_OBJECT  [FE]                                    ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {      [BUGGY]  pathIndices[stackSize  -  2]  =  JsonToken.VALUE_EMBEDDED_OBJECT;  [BUGGY]      pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	261	261	2	replace	pathIndices[stackSize  -  2]  =  JsonToken.VALUE_EMBEDDED_OBJECT;	  pathIndices[stackSize    -    2]    =    null;    	non-compiled	[CE]  cannot  find  symbol  VALUE_EMBEDDED_OBJECT	23	None	replace
19	[BUG]  [BUGGY]  pathIndices[stackSize  -  2]  =  JsonToken.VALUE_EMPTY;  [CE]  cannot  find  symbol  VALUE_EMPTY  [FE]                                      ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {      [BUGGY]  pathIndices[stackSize  -  2]  =  JsonToken.VALUE_EMPTY;  [BUGGY]      pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	261	261	2	replace	pathIndices[stackSize  -  2]  =  JsonToken.VALUE_EMPTY;	  pathIndices[stackSize    -    2]    =    null;    	non-compiled	[CE]  cannot  find  symbol  VALUE_EMPTY	23	None	replace
20	[BUG]  [BUGGY]  _reportError( "Current  token( "+JsonToken.VALUE_NUMBER+ ")not  a  value. ");  [CE]  cannot  find  symbol  VALUE_NUMBER  [FE]                        ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {      [BUGGY]  _reportError( "Current  token( "+JsonToken.VALUE_NUMBER+ ")not  a  value. ");  [BUGGY]      pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	261	261	2	replace	_reportError( "Current  token( "+JsonToken.VALUE_NUMBER+ ")not  a  value. ");	  _reportError(   "Current    token(   "+JsonToken.VALUE_NULL+   ")not    a    value.   ");    	non-compiled	[CE]  cannot  find  symbol  VALUE_NUMBER	83	None	replace
21	[BUG]  [BUGGY]  _reportError( "Current  token( "+JsonToken.FIELD_NAME+ ")not  a  value. ");  [CE]  cannot  find  symbol  FIELD_NAME  [FE]                          ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {      [BUGGY]  _reportError( "Current  token( "+JsonToken.FIELD_NAME+ ")not  a  value. ");  [BUGGY]      pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	261	261	2	replace	_reportError( "Current  token( "+JsonToken.FIELD_NAME+ ")not  a  value. ");	  _reportError(   "Current    token(   "+JsonToken.VALUE_NULL+   ")not    a    value.   ");    	non-compiled	[CE]  cannot  find  symbol  FIELD_NAME	83	None	replace
22	[BUG]  [BUGGY]  [FE]  ArrayIndexOutOfBoundsException  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {      [BUGGY]          if(stackSize  >  0)  {  pathNames[stackSize  -  1]  =     "null   ";  }  if(stackSize  >  0)  {  pathNames[stackSize  -  1]  =   "null   ";  }  [BUGGY]      pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	261	261	2	add	                if(stackSize    >    0)    {    pathNames[stackSize    -    1]    =       "null   ";    }    if(stackSize  >  0)  {  pathNames[stackSize  -  1]  =   "null   ";  }	  	compilable	  [FE]  ArrayIndexOutOfBoundsException  	171	2	add
23	[BUG]  [BUGGY]          if(stackSize  >  0)  {  pathNames[stackSize  -  1]  =     "null   ";  }  if(stackSize  >  0)  {  pathNames[stackSize  -  1]  =   "null   ";  }  [FE]  ArrayIndexOutOfBoundsException  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {      [BUGGY]          if(stackSize  >  0)  {  pathNames[stackSize  -  1]  =     "null   ";  }  if(stackSize  >  0)  {  pathNames[stackSize  -  1]  =   "null   ";  }  [BUGGY]      pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	261	261	2	replace	                if(stackSize    >    0)    {    pathNames[stackSize    -    1]    =       "null   ";    }    if(stackSize  >  0)  {  pathNames[stackSize  -  1]  =   "null   ";  }	  	compilable	  [FE]  ArrayIndexOutOfBoundsException  	171	2	add
24	[BUG]  [BUGGY]  [FE]  ArrayIndexOutOfBoundsException  [FE]      ArrayIndexOutOfBoundsException    [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {      [BUGGY]          if(stackSize  >  0)  {  pathNames[stackSize  -  1]  =     "null   ";  }  if(stackSize  >  0)  {  pathNames[stackSize  -  1]  =   "null. ";  }  [BUGGY]      pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	261	261	2	add	                if(stackSize    >    0)    {    pathNames[stackSize    -    1]    =       "null   ";    }    if(stackSize  >  0)  {  pathNames[stackSize  -  1]  =   "null. ";  }	  	compilable	  [FE]  ArrayIndexOutOfBoundsException  	171	2	add
25	[BUG]  [BUGGY]          if(stackSize  >  0)  {  pathNames[stackSize  -  1]  =     "null   ";  }  if(stackSize  >  0)  {  pathNames[stackSize  -  1]  =   "null. ";  }  [FE]  ArrayIndexOutOfBoundsException  [FE]      ArrayIndexOutOfBoundsException    [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {      [BUGGY]          if(stackSize  >  0)  {  pathNames[stackSize  -  1]  =     "null   ";  }  if(stackSize  >  0)  {  pathNames[stackSize  -  1]  =   "null. ";  }  [BUGGY]      pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	261	261	2	replace	                if(stackSize    >    0)    {    pathNames[stackSize    -    1]    =       "null   ";    }    if(stackSize  >  0)  {  pathNames[stackSize  -  1]  =   "null. ";  }	  	compilable	  [FE]  ArrayIndexOutOfBoundsException  	171	2	add
26	[BUG]  [BUGGY]          if(stackSize  >  0)  {  pathNames[stackSize  -  1]  =     "null   ";  }  if(stackSize  >  0)  {  pathNames[stackSize  -  1]  =   "null ".;  }  [CE]  <identifier>  expected  [FE]        ArrayIndexOutOfBoundsException    [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {      [BUGGY]          if(stackSize  >  0)  {  pathNames[stackSize  -  1]  =     "null   ";  }  if(stackSize  >  0)  {  pathNames[stackSize  -  1]  =   "null ".;  }  [BUGGY]      pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	261	261	2	replace	                if(stackSize    >    0)    {    pathNames[stackSize    -    1]    =       "null   ";    }    if(stackSize  >  0)  {  pathNames[stackSize  -  1]  =   "null ".;  }	  	non-compiled	[CE]  <identifier>  expected	171	None	add
27	[BUG]  [BUGGY]          if(stackSize  >  0)  {  pathNames[stackSize  -  1]  =     "null   ";  }  if(stackSize  >  0)  {  pathNames[stackSize  -  1]  =   "null ",;  }  [CE]  [FE]          ArrayIndexOutOfBoundsException    [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {      [BUGGY]          if(stackSize  >  0)  {  pathNames[stackSize  -  1]  =     "null   ";  }  if(stackSize  >  0)  {  pathNames[stackSize  -  1]  =   "null ",;  }  [BUGGY]      pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	261	261	2	replace	                if(stackSize    >    0)    {    pathNames[stackSize    -    1]    =       "null   ";    }    if(stackSize  >  0)  {  pathNames[stackSize  -  1]  =   "null ",;  }	  	non-compiled	[CE]  	171	None	add
28	[BUG]  [BUGGY]  [FE]  ArrayIndexOutOfBoundsException  [FE]            ArrayIndexOutOfBoundsException    [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {      [BUGGY]          if(stackSize  >  0)  {  pathNames[stackSize  -  1]  =     "null   ";  }  if(stackSize  >  0)  {  pathNames[stackSize  -  1]  = ",null   ";  }  [BUGGY]      pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	261	261	2	add	                if(stackSize    >    0)    {    pathNames[stackSize    -    1]    =       "null   ";    }    if(stackSize  >  0)  {  pathNames[stackSize  -  1]  = ",null   ";  }	  	compilable	  [FE]  ArrayIndexOutOfBoundsException  	171	2	add
29	[BUG]  [BUGGY]          if(stackSize  >  0)  {  pathNames[stackSize  -  1]  =     "null   ";  }  if(stackSize  >  0)  {  pathNames[stackSize  -  1]  = ",null   ";  }  [FE]  ArrayIndexOutOfBoundsException  [FE]            ArrayIndexOutOfBoundsException    [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {      [BUGGY]          if(stackSize  >  0)  {  pathNames[stackSize  -  1]  =     "null   ";  }  if(stackSize  >  0)  {  pathNames[stackSize  -  1]  = ",null   ";  }  [BUGGY]      pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	261	261	2	replace	                if(stackSize    >    0)    {    pathNames[stackSize    -    1]    =       "null   ";    }    if(stackSize  >  0)  {  pathNames[stackSize  -  1]  = ",null   ";  }	  	compilable	  [FE]  ArrayIndexOutOfBoundsException  	171	2	add
30	[BUG]  [BUGGY]  [FE]  IllegalStateException  [FE]              ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {      [BUGGY]  if(stackSize  >  0)  {  nextName();  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	261	261	2	add	if(stackSize  >  0)  {  nextName();  }  else  {  throw  new  IllegalArgumentException( " ");  }	  if(stackSize    >    0)    {    stack();    }    else    {    throw    new    IllegalArgumentException(   "   ");    }    	compilable	  [FE]  IllegalStateException  	181	2	replace
31	[BUG]  [BUGGY]  if(stackSize  >  0)  {  nextName();  }  else  {  throw  new  IllegalArgumentException( " ");  }  [FE]  IllegalStateException  [FE]              ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {      [BUGGY]  if(stackSize  >  0)  {  nextName();  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	261	261	2	replace	if(stackSize  >  0)  {  nextName();  }  else  {  throw  new  IllegalArgumentException( " ");  }	  if(stackSize    >    0)    {    stack();    }    else    {    throw    new    IllegalArgumentException(   "   ");    }    	compilable	  [FE]  IllegalStateException  	181	2	replace
32	[BUG]  [BUGGY]  if(stackSize  >  1)  {  stack();  }  else  {  throw  new  IllegalArgumentException( " ");  }  [CE]  cannot  find  symbol  [FE]                ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {      [BUGGY]  if(stackSize  >  1)  {  stack();  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	261	261	2	replace	if(stackSize  >  1)  {  stack();  }  else  {  throw  new  IllegalArgumentException( " ");  }	  if(stackSize    >    0)    {    stack();    }    else    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  cannot  find  symbol	181	None	replace
33	[BUG]  [BUGGY]  StackTraceElement[stackSize  -  1]  =  null;  [CE]  cannot  find  symbol  StackTraceElement  [FE]                  ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {      [BUGGY]  StackTraceElement[stackSize  -  1]  =  null;  [BUGGY]      pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	261	261	2	replace	StackTraceElement[stackSize  -  1]  =  null;	  if(stackSize    >    0)    {    stack();    }    else    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  cannot  find  symbol  StackTraceElement	181	None	replace
34	[BUG]  [BUGGY]  if(stackSize  >  0)  {  stack();  }  [CE]  cannot  find  symbol  [FE]                    ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {      [BUGGY]  if(stackSize  >  0)  {  stack();  }  [BUGGY]      pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	261	261	2	replace	if(stackSize  >  0)  {  stack();  }	  if(stackSize    >    0)    {    stack();    }    else    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  cannot  find  symbol	181	None	replace
35	[BUG]  [BUGGY]  if(stackSize  >  0)  {  stack();  }  else  {  throw  new  IllegalArgumentException( " ".getMessage());  }  [CE]  cannot  find  symbol  [FE]                      ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {      [BUGGY]  if(stackSize  >  0)  {  stack();  }  else  {  throw  new  IllegalArgumentException( " ".getMessage());  }  [BUGGY]      pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	261	261	2	replace	if(stackSize  >  0)  {  stack();  }  else  {  throw  new  IllegalArgumentException( " ".getMessage());  }	  if(stackSize    >    0)    {    stack();    }    else    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  cannot  find  symbol	181	None	replace
36	[BUG]  [BUGGY]  _reportError( "Current  token( "+getClass().getName()  + ")not  null,  cannot  be  null.. ");  [CE]  cannot  find  symbol  [FE]                    ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {      [BUGGY]  _reportError( "Current  token( "+getClass().getName()  + ")not  null,  cannot  be  null.. ");  [BUGGY]      pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	261	261	2	replace	_reportError( "Current  token( "+getClass().getName()  + ")not  null,  cannot  be  null.. ");	  _reportError(   "Current    token(   "+getClass().getName()    +   ")not    null,    cannot    be    null.   ");    	non-compiled	[CE]  cannot  find  symbol	199	None	replace
37	[BUG]  [BUGGY]  _reportError( "Current  token( "+getClass().getName()  + ",  cannot  be  null,  cannot  be  null. ");  [CE]  cannot  find  symbol  [FE]                      ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {      [BUGGY]  _reportError( "Current  token( "+getClass().getName()  + ",  cannot  be  null,  cannot  be  null. ");  [BUGGY]      pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	261	261	2	replace	_reportError( "Current  token( "+getClass().getName()  + ",  cannot  be  null,  cannot  be  null. ");	  _reportError(   "Current    token(   "+getClass().getName()    +   ")not    null,    cannot    be    null.   ");    	non-compiled	[CE]  cannot  find  symbol	199	None	replace
38	[BUG]  [BUGGY]  _reportError( "Current  token( "+getClass().getName()  + ")not  null,  cannot  be  null. ",  JsonToken.END_OBJECT);  [CE]  cannot  find  symbol  [FE]                        ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {      [BUGGY]  _reportError( "Current  token( "+getClass().getName()  + ")not  null,  cannot  be  null. ",  JsonToken.END_OBJECT);  [BUGGY]      pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	261	261	2	replace	_reportError( "Current  token( "+getClass().getName()  + ")not  null,  cannot  be  null. ",  JsonToken.END_OBJECT);	  _reportError(   "Current    token(   "+getClass().getName()    +   ")not    null,    cannot    be    null.   ");    	non-compiled	[CE]  cannot  find  symbol	199	None	replace
39	[BUG]  [BUGGY]  connectToPossibleExceptionHandler(null,  JsonToken.VALUE_EMPTY);  [CE]  cannot  find  symbol  VALUE_EMPTY  [FE]                        ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {      [BUGGY]  connectToPossibleExceptionHandler(null,  JsonToken.VALUE_EMPTY);  [BUGGY]      pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	261	261	2	replace	connectToPossibleExceptionHandler(null,  JsonToken.VALUE_EMPTY);	  connectToPossibleExceptionHandler(null,    pathNames);    	non-compiled	[CE]  cannot  find  symbol  VALUE_EMPTY	145	None	replace
40	[BUG]  [BUGGY]  connectToPossibleExceptionHandler(null,  JsonToken.START_OBJECT,  pathNames);  [CE]  cannot  find  symbol  START_OBJECT  [FE]                          ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {      [BUGGY]  connectToPossibleExceptionHandler(null,  JsonToken.START_OBJECT,  pathNames);  [BUGGY]      pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	261	261	2	replace	connectToPossibleExceptionHandler(null,  JsonToken.START_OBJECT,  pathNames);	  connectToPossibleExceptionHandler(null,    pathNames);    	non-compiled	[CE]  cannot  find  symbol  START_OBJECT	145	None	replace
41	[BUG]  [BUGGY]  connectToPossibleExceptionHandler(null,  JsonToken.END_OBJECT,  pathNames);  [CE]  cannot  find  symbol  [FE]                            ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {      [BUGGY]  connectToPossibleExceptionHandler(null,  JsonToken.END_OBJECT,  pathNames);  [BUGGY]      pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	261	261	2	replace	connectToPossibleExceptionHandler(null,  JsonToken.END_OBJECT,  pathNames);	  connectToPossibleExceptionHandler(null,    pathNames);    	non-compiled	[CE]  cannot  find  symbol	145	None	replace
42	[BUG]  [BUGGY]  connectToPossibleExceptionHandler(pathNames,  null);  [CE]  cannot  find  symbol  [FE]                              ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {      [BUGGY]  connectToPossibleExceptionHandler(pathNames,  null);  [BUGGY]      pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	261	261	2	replace	connectToPossibleExceptionHandler(pathNames,  null);	  connectToPossibleExceptionHandler(null,    pathNames);    	non-compiled	[CE]  cannot  find  symbol	145	None	replace
43	[BUG]  [BUGGY]  [FE]  ArrayIndexOutOfBoundsException  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {      [BUGGY]  if(stackSize    >    0)    {    popStack();    }    if(stackSize  <  0)  {  popStack();  }  if(stackSize  >  0)  {  popStack();  }  if(stackSize  <  0)  {  popStack();  }  [BUGGY]      pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	261	261	2	add	if(stackSize        >        0)        {        popStack();        }        if(stackSize    <    0)    {    popStack();    }    if(stackSize  >  0)  {  popStack();  }  if(stackSize  <  0)  {  popStack();  }	  	compilable	  [FE]  ArrayIndexOutOfBoundsException  	206	2	add
44	[BUG]  [BUGGY]  if(stackSize    >    0)    {    popStack();    }    if(stackSize  <  0)  {  popStack();  }  if(stackSize  >  0)  {  popStack();  }  if(stackSize  <  0)  {  popStack();  }  [FE]  ArrayIndexOutOfBoundsException  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {      [BUGGY]  if(stackSize    >    0)    {    popStack();    }    if(stackSize  <  0)  {  popStack();  }  if(stackSize  >  0)  {  popStack();  }  if(stackSize  <  0)  {  popStack();  }  [BUGGY]      pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	261	261	2	replace	if(stackSize        >        0)        {        popStack();        }        if(stackSize    <    0)    {    popStack();    }    if(stackSize  >  0)  {  popStack();  }  if(stackSize  <  0)  {  popStack();  }	  	compilable	  [FE]  ArrayIndexOutOfBoundsException  	206	2	add
45	[BUG]  [BUGGY]  if(stackSize    >    0)    {    popStack();    }    if(stackSize  <  0)  {  popStack();  }  if(stackSize  >  0)  {  popStack();  }  if(stackSize  <  0)  {  [CE]  ';'  expected  [FE]      ArrayIndexOutOfBoundsException    [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {      [BUGGY]  if(stackSize    >    0)    {    popStack();    }    if(stackSize  <  0)  {  popStack();  }  if(stackSize  >  0)  {  popStack();  }  if(stackSize  <  0)  {  [BUGGY]      pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	261	261	2	replace	if(stackSize        >        0)        {        popStack();        }        if(stackSize    <    0)    {    popStack();    }    if(stackSize  >  0)  {  popStack();  }  if(stackSize  <  0)  {	  	non-compiled	[CE]  ';'  expected	206	None	add
46	[BUG]  [BUGGY]  [FE]  ArrayIndexOutOfBoundsException  [FE]        ArrayIndexOutOfBoundsException    [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {      [BUGGY]  if(stackSize    >    0)    {    popStack();    }    if(stackSize  <  0)  {  popStack();  }  if(stackSize  >  0)  {  popStack();  }  [BUGGY]      pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	261	261	2	add	if(stackSize        >        0)        {        popStack();        }        if(stackSize    <    0)    {    popStack();    }    if(stackSize  >  0)  {  popStack();  }	  	compilable	  [FE]  ArrayIndexOutOfBoundsException  	206	2	add
47	[BUG]  [BUGGY]  if(stackSize    >    0)    {    popStack();    }    if(stackSize  <  0)  {  popStack();  }  if(stackSize  >  0)  {  popStack();  }  [FE]  ArrayIndexOutOfBoundsException  [FE]        ArrayIndexOutOfBoundsException    [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {      [BUGGY]  if(stackSize    >    0)    {    popStack();    }    if(stackSize  <  0)  {  popStack();  }  if(stackSize  >  0)  {  popStack();  }  [BUGGY]      pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	261	261	2	replace	if(stackSize        >        0)        {        popStack();        }        if(stackSize    <    0)    {    popStack();    }    if(stackSize  >  0)  {  popStack();  }	  	compilable	  [FE]  ArrayIndexOutOfBoundsException  	206	2	add
48	[BUG]  [BUGGY]  [FE]  ArrayIndexOutOfBoundsException  [FE]          ArrayIndexOutOfBoundsException    [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {      [BUGGY]  if(stackSize    >    0)    {    popStack();    }    if(stackSize  <  0)  {  popStack();  }  if(stackSize  >  0)  {  popStack();  }  if(stackSize  >=  0)  {  popStack();  }  [BUGGY]      pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	261	261	2	add	if(stackSize        >        0)        {        popStack();        }        if(stackSize    <    0)    {    popStack();    }    if(stackSize  >  0)  {  popStack();  }  if(stackSize  >=  0)  {  popStack();  }	  	compilable	  [FE]  ArrayIndexOutOfBoundsException  	206	2	add
49	[BUG]  [BUGGY]  if(stackSize    >    0)    {    popStack();    }    if(stackSize  <  0)  {  popStack();  }  if(stackSize  >  0)  {  popStack();  }  if(stackSize  >=  0)  {  popStack();  }  [FE]  ArrayIndexOutOfBoundsException  [FE]          ArrayIndexOutOfBoundsException    [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {      [BUGGY]  if(stackSize    >    0)    {    popStack();    }    if(stackSize  <  0)  {  popStack();  }  if(stackSize  >  0)  {  popStack();  }  if(stackSize  >=  0)  {  popStack();  }  [BUGGY]      pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	261	261	2	replace	if(stackSize        >        0)        {        popStack();        }        if(stackSize    <    0)    {    popStack();    }    if(stackSize  >  0)  {  popStack();  }  if(stackSize  >=  0)  {  popStack();  }	  	compilable	  [FE]  ArrayIndexOutOfBoundsException  	206	2	add
50	[BUG]  [BUGGY]  if(stackSize    >    0)    {    popStack();    }    if(stackSize  <  0)  {  popStack();  }  if(stackSize  >  0)  {  popStack();  }  if(stackSize  <  0)  {  popStack();  [CE]  ';'  expected  [FE]            ArrayIndexOutOfBoundsException    [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {      [BUGGY]  if(stackSize    >    0)    {    popStack();    }    if(stackSize  <  0)  {  popStack();  }  if(stackSize  >  0)  {  popStack();  }  if(stackSize  <  0)  {  popStack();  [BUGGY]      pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	261	261	2	replace	if(stackSize        >        0)        {        popStack();        }        if(stackSize    <    0)    {    popStack();    }    if(stackSize  >  0)  {  popStack();  }  if(stackSize  <  0)  {  popStack();	  	non-compiled	[CE]  ';'  expected	206	None	add
51	[BUG]  [BUGGY]  if(stackSize    >    0)    {    popStack();    }    if(stackSize  <  0)  {  popStack();  }  if(stackSize  >  0)  {  popStack();  }  if(stackSize  <  0)  {  getStack();  }  [CE]  cannot  find  symbol  [FE]              ArrayIndexOutOfBoundsException    [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {      [BUGGY]  if(stackSize    >    0)    {    popStack();    }    if(stackSize  <  0)  {  popStack();  }  if(stackSize  >  0)  {  popStack();  }  if(stackSize  <  0)  {  getStack();  }  [BUGGY]      pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	261	261	2	replace	if(stackSize        >        0)        {        popStack();        }        if(stackSize    <    0)    {    popStack();    }    if(stackSize  >  0)  {  popStack();  }  if(stackSize  <  0)  {  getStack();  }	  	non-compiled	[CE]  cannot  find  symbol	206	None	add
52	[BUG]  [BUGGY]  if(stackSize    >    0)    {    popStack();    }    if(stackSize  <  0)  {  popStack();  }  if(stackSize  >  0)  {  popStack();  }  if(stackSize  <  =  0)  {  popStack();  }  [CE]  illegal  start  of  expression  [FE]                ArrayIndexOutOfBoundsException    [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {      [BUGGY]  if(stackSize    >    0)    {    popStack();    }    if(stackSize  <  0)  {  popStack();  }  if(stackSize  >  0)  {  popStack();  }  if(stackSize  <  =  0)  {  popStack();  }  [BUGGY]      pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	261	261	2	replace	if(stackSize        >        0)        {        popStack();        }        if(stackSize    <    0)    {    popStack();    }    if(stackSize  >  0)  {  popStack();  }  if(stackSize  <  =  0)  {  popStack();  }	  	non-compiled	[CE]  illegal  start  of  expression	206	None	add
53	[BUG]  [BUGGY]  if(isUnsupportedOperation())  {  reportUnsupportedOperation();  }  [CE]  cannot  find  symbol  [FE]                        ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {      [BUGGY]  if(isUnsupportedOperation())  {  reportUnsupportedOperation();  }  [BUGGY]      pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	261	261	2	replace	if(isUnsupportedOperation())  {  reportUnsupportedOperation();  }	  reportUnsupportedOperation();    	non-compiled	[CE]  cannot  find  symbol	68	None	replace
54	[BUG]  [BUGGY]  if(stackSize  >  stackSize)  {  reportUnsupportedOperation();  }  else  {  throw  new  IllegalArgumentException( " ");  }  [CE]  cannot  find  symbol  [FE]                          ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {      [BUGGY]  if(stackSize  >  stackSize)  {  reportUnsupportedOperation();  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	261	261	2	replace	if(stackSize  >  stackSize)  {  reportUnsupportedOperation();  }  else  {  throw  new  IllegalArgumentException( " ");  }	  reportUnsupportedOperation();    	non-compiled	[CE]  cannot  find  symbol	68	None	replace
55	[BUG]  [BUGGY]  if(isUnsupportedOperation())  {  reportUnsupportedOperation();  }  else  {  throw  new  IllegalArgumentException( " ");  }  [CE]  cannot  find  symbol  [FE]                            ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {      [BUGGY]  if(isUnsupportedOperation())  {  reportUnsupportedOperation();  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	261	261	2	replace	if(isUnsupportedOperation())  {  reportUnsupportedOperation();  }  else  {  throw  new  IllegalArgumentException( " ");  }	  reportUnsupportedOperation();    	non-compiled	[CE]  cannot  find  symbol	68	None	replace
56	[BUG]  [BUGGY]  if(stackSize  >  stackSize)  {  reportUnsupportedOperation();  }  [CE]  cannot  find  symbol  [FE]                              ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {      [BUGGY]  if(stackSize  >  stackSize)  {  reportUnsupportedOperation();  }  [BUGGY]      pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	261	261	2	replace	if(stackSize  >  stackSize)  {  reportUnsupportedOperation();  }	  reportUnsupportedOperation();    	non-compiled	[CE]  cannot  find  symbol	68	None	replace
57	[BUG]  [BUGGY]  if(stackSize  >  0)  {  reportUnsupportedOperation();  }  else  {  throw  new  IllegalArgumentException( " ");  }  [CE]  cannot  find  symbol  [FE]                                ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {      [BUGGY]  if(stackSize  >  0)  {  reportUnsupportedOperation();  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	261	261	2	replace	if(stackSize  >  0)  {  reportUnsupportedOperation();  }  else  {  throw  new  IllegalArgumentException( " ");  }	  reportUnsupportedOperation();    	non-compiled	[CE]  cannot  find  symbol	68	None	replace
58	[BUG]  [BUGGY]  if(stackSize  >  0)  {  reportUnsupportedOperation();  }  [CE]  cannot  find  symbol  [FE]                                  ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {      [BUGGY]  if(stackSize  >  0)  {  reportUnsupportedOperation();  }  [BUGGY]      pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	261	261	2	replace	if(stackSize  >  0)  {  reportUnsupportedOperation();  }	  reportUnsupportedOperation();    	non-compiled	[CE]  cannot  find  symbol	68	None	replace
59	[BUG]  [BUGGY]  if(peek()  ==  JsonToken.VALUE_NULL)  {  if(stackSize  >  0)  {  popStack();  }  [CE]  ';'  expected  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {      [BUGGY]  if(peek()  ==  JsonToken.VALUE_NULL)  {  if(stackSize  >  0)  {  popStack();  }  [BUGGY]      pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	261	261	2	replace	if(peek()  ==  JsonToken.VALUE_NULL)  {  if(stackSize  >  0)  {  popStack();  }	  if(stackSize    >    0)    {    popStack();    }    if(stackSize    >    0)    {    popStack();    }    	non-compiled	[CE]  ';'  expected	85	None	replace
60	[BUG]  [BUGGY]  if(isEnabled(Feature.QUOTE_FIELD_NAMES))  {  if(stackSize  >  0)  {  popStack();  }  [CE]  ';'  expected  [FE]      ArrayIndexOutOfBoundsException    [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {      [BUGGY]  if(isEnabled(Feature.QUOTE_FIELD_NAMES))  {  if(stackSize  >  0)  {  popStack();  }  [BUGGY]      pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	261	261	2	replace	if(isEnabled(Feature.QUOTE_FIELD_NAMES))  {  if(stackSize  >  0)  {  popStack();  }	  if(stackSize    >    0)    {    popStack();    }    if(stackSize    >    0)    {    popStack();    }    	non-compiled	[CE]  ';'  expected	85	None	replace
61	[BUG]  [BUGGY]  if(peek()  ==  JsonToken.VALUE_STRING)  {  if(stackSize  >  0)  {  popStack();  }  [CE]  ';'  expected  [FE]        ArrayIndexOutOfBoundsException    [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {      [BUGGY]  if(peek()  ==  JsonToken.VALUE_STRING)  {  if(stackSize  >  0)  {  popStack();  }  [BUGGY]      pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	261	261	2	replace	if(peek()  ==  JsonToken.VALUE_STRING)  {  if(stackSize  >  0)  {  popStack();  }	  if(stackSize    >    0)    {    popStack();    }    if(stackSize    >    0)    {    popStack();    }    	non-compiled	[CE]  ';'  expected	85	None	replace
62	[BUG]  [BUGGY]  if(peek()  ==  JsonToken.VALUE_NUMBER_INT)  {  if(stackSize  >  0)  {  popStack();  }  [CE]  ';'  expected  [FE]          ArrayIndexOutOfBoundsException    [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {      [BUGGY]  if(peek()  ==  JsonToken.VALUE_NUMBER_INT)  {  if(stackSize  >  0)  {  popStack();  }  [BUGGY]      pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	261	261	2	replace	if(peek()  ==  JsonToken.VALUE_NUMBER_INT)  {  if(stackSize  >  0)  {  popStack();  }	  if(stackSize    >    0)    {    popStack();    }    if(stackSize    >    0)    {    popStack();    }    	non-compiled	[CE]  ';'  expected	85	None	replace
63	[BUG]  [BUGGY]  if(peek()  ==  JsonToken.VALUE_NUMBER_EPARATOR)  {  if(stackSize  >  0)  {  popStack();  }  [CE]  ';'  expected  [FE]            ArrayIndexOutOfBoundsException    [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {      [BUGGY]  if(peek()  ==  JsonToken.VALUE_NUMBER_EPARATOR)  {  if(stackSize  >  0)  {  popStack();  }  [BUGGY]      pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	261	261	2	replace	if(peek()  ==  JsonToken.VALUE_NUMBER_EPARATOR)  {  if(stackSize  >  0)  {  popStack();  }	  if(stackSize    >    0)    {    popStack();    }    if(stackSize    >    0)    {    popStack();    }    	non-compiled	[CE]  ';'  expected	85	None	replace
64	[BUG]  [BUGGY]  if(isEnabled(Feature.QUOTE_FIELD_NAME))  {  if(stackSize  >  0)  {  popStack();  }  [CE]  ';'  expected  [FE]              ArrayIndexOutOfBoundsException    [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {      [BUGGY]  if(isEnabled(Feature.QUOTE_FIELD_NAME))  {  if(stackSize  >  0)  {  popStack();  }  [BUGGY]      pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	261	261	2	replace	if(isEnabled(Feature.QUOTE_FIELD_NAME))  {  if(stackSize  >  0)  {  popStack();  }	  if(stackSize    >    0)    {    popStack();    }    if(stackSize    >    0)    {    popStack();    }    	non-compiled	[CE]  ';'  expected	85	None	replace
65	[BUG]  [BUGGY]  _reportError( "Current  token( "+getMessage()  + ")was  expecting  a  value. ");  [CE]  cannot  find  symbol  [FE]                  ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {      [BUGGY]  _reportError( "Current  token( "+getMessage()  + ")was  expecting  a  value. ");  [BUGGY]      pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	261	261	2	replace	_reportError( "Current  token( "+getMessage()  + ")was  expecting  a  value. ");	  _reportError(   "Current    token(   "+getMessage()    +   ")was    expecting    a    value   ");    	non-compiled	[CE]  cannot  find  symbol	144	None	replace
66	[BUG]  [BUGGY]  _reportError( "Current  token( "+getMessage()  + ")was  expecting  a  value ",  JsonToken.VALUE_NULL);  [CE]  cannot  find  symbol  [FE]                    ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {      [BUGGY]  _reportError( "Current  token( "+getMessage()  + ")was  expecting  a  value ",  JsonToken.VALUE_NULL);  [BUGGY]      pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	261	261	2	replace	_reportError( "Current  token( "+getMessage()  + ")was  expecting  a  value ",  JsonToken.VALUE_NULL);	  _reportError(   "Current    token(   "+getMessage()    +   ")was    expecting    a    value   ");    	non-compiled	[CE]  cannot  find  symbol	144	None	replace
67	[BUG]  [BUGGY]  _reportError( "Current  token( "+getMessage()  + ")was  expecting  a  value ",  JsonToken.END_OBJECT);  [CE]  cannot  find  symbol  [FE]                      ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {      [BUGGY]  _reportError( "Current  token( "+getMessage()  + ")was  expecting  a  value ",  JsonToken.END_OBJECT);  [BUGGY]      pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	261	261	2	replace	_reportError( "Current  token( "+getMessage()  + ")was  expecting  a  value ",  JsonToken.END_OBJECT);	  _reportError(   "Current    token(   "+getMessage()    +   ")was    expecting    a    value   ");    	non-compiled	[CE]  cannot  find  symbol	144	None	replace
68	[BUG]  [BUGGY]  StackTree  <  NUMBER_ERROR  ||  stackSize  >  0)  {  popStack();  [CE]  >  expected  [FE]                    ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {      [BUGGY]  StackTree  <  NUMBER_ERROR  ||  stackSize  >  0)  {  popStack();  [BUGGY]      pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	261	261	2	replace	StackTree  <  NUMBER_ERROR  ||  stackSize  >  0)  {  popStack();	  StackTree    <    NUMBER_ERROR    &&    stackSize    >    0)    {    popStack();    }    else    {    skipStack();    }    	non-compiled	[CE]  >  expected	74	None	replace
69	[BUG]  [BUGGY]  StackTree  <  NUMBER_ERROR  ||  stackSize  >  0)  {  popStack();  }  else  {  skipStack();  }  [CE]  >  expected  [FE]                      ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {      [BUGGY]  StackTree  <  NUMBER_ERROR  ||  stackSize  >  0)  {  popStack();  }  else  {  skipStack();  }  [BUGGY]      pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	261	261	2	replace	StackTree  <  NUMBER_ERROR  ||  stackSize  >  0)  {  popStack();  }  else  {  skipStack();  }	  StackTree    <    NUMBER_ERROR    &&    stackSize    >    0)    {    popStack();    }    else    {    skipStack();    }    	non-compiled	[CE]  >  expected	74	None	replace
70	[BUG]  [BUGGY]  StackTree  <  NUMBER_ERROR  ||  stackSize  >  0)  {  popStack();  }  [CE]  >  expected  [FE]                        ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {      [BUGGY]  StackTree  <  NUMBER_ERROR  ||  stackSize  >  0)  {  popStack();  }  [BUGGY]      pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	261	261	2	replace	StackTree  <  NUMBER_ERROR  ||  stackSize  >  0)  {  popStack();  }	  StackTree    <    NUMBER_ERROR    &&    stackSize    >    0)    {    popStack();    }    else    {    skipStack();    }    	non-compiled	[CE]  >  expected	74	None	replace
71	[BUG]  [BUGGY]  StackTree  <  NUMBER_ERROR  &&  stackSize  >  1)  {  popStack();  }  [CE]  >  expected  [FE]                          ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {      [BUGGY]  StackTree  <  NUMBER_ERROR  &&  stackSize  >  1)  {  popStack();  }  [BUGGY]      pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	261	261	2	replace	StackTree  <  NUMBER_ERROR  &&  stackSize  >  1)  {  popStack();  }	  StackTree    <    NUMBER_ERROR    &&    stackSize    >    0)    {    popStack();    }    else    {    skipStack();    }    	non-compiled	[CE]  >  expected	74	None	replace
72	[BUG]  [BUGGY]  StackTree  <  NUMBER_ERROR  &&  stackSize  >  1)  {  popStack();  }  else  {  skipStack();  }  [CE]  >  expected  [FE]                            ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {      [BUGGY]  StackTree  <  NUMBER_ERROR  &&  stackSize  >  1)  {  popStack();  }  else  {  skipStack();  }  [BUGGY]      pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	261	261	2	replace	StackTree  <  NUMBER_ERROR  &&  stackSize  >  1)  {  popStack();  }  else  {  skipStack();  }	  StackTree    <    NUMBER_ERROR    &&    stackSize    >    0)    {    popStack();    }    else    {    skipStack();    }    	non-compiled	[CE]  >  expected	74	None	replace
73	[BUG]  [BUGGY]  StackTree  <  NUMBER_ERROR  &&  stackSize  >  1)  {  popStack();  [CE]  >  expected  [FE]                              ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {      [BUGGY]  StackTree  <  NUMBER_ERROR  &&  stackSize  >  1)  {  popStack();  [BUGGY]      pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	261	261	2	replace	StackTree  <  NUMBER_ERROR  &&  stackSize  >  1)  {  popStack();	  StackTree    <    NUMBER_ERROR    &&    stackSize    >    0)    {    popStack();    }    else    {    skipStack();    }    	non-compiled	[CE]  >  expected	74	None	replace
74	[BUG]  [BUGGY]  pathIndices[stackSize  -  2]  =  null   ";  [CE]  unclosed  string  literal  [FE]                  ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {      [BUGGY]  pathIndices[stackSize  -  2]  =  null   ";  [BUGGY]      pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	261	261	2	replace	pathIndices[stackSize  -  2]  =  null   ";	  pathIndices[stackSize    -    1]    =    null       ";    	non-compiled	[CE]  unclosed  string  literal	168	None	replace
75	[BUG]  [BUGGY]  connectToPossibleExceptionHandler(JsonToken.END_OBJECT,  pathNames);  [CE]  cannot  find  symbol  [FE]            ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {      [BUGGY]  connectToPossibleExceptionHandler(JsonToken.END_OBJECT,  pathNames);  [BUGGY]      pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	261	261	2	replace	connectToPossibleExceptionHandler(JsonToken.END_OBJECT,  pathNames);	  connectToPossibleExceptionHandler(JsonToken.END_OBJECT);    	non-compiled	[CE]  cannot  find  symbol	112	None	replace
76	[BUG]  [BUGGY]  connectToPossibleExceptionHandler(JsonToken.END_OBJECT,  nextName());  [CE]  cannot  find  symbol  [FE]              ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {      [BUGGY]  connectToPossibleExceptionHandler(JsonToken.END_OBJECT,  nextName());  [BUGGY]      pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	261	261	2	replace	connectToPossibleExceptionHandler(JsonToken.END_OBJECT,  nextName());	  connectToPossibleExceptionHandler(JsonToken.END_OBJECT);    	non-compiled	[CE]  cannot  find  symbol	112	None	replace
77	[BUG]  [BUGGY]  connectToPossibleExceptionHandler(JsonToken.END_OBJECT,  null);  [CE]  cannot  find  symbol  [FE]                ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {      [BUGGY]  connectToPossibleExceptionHandler(JsonToken.END_OBJECT,  null);  [BUGGY]      pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	261	261	2	replace	connectToPossibleExceptionHandler(JsonToken.END_OBJECT,  null);	  connectToPossibleExceptionHandler(JsonToken.END_OBJECT);    	non-compiled	[CE]  cannot  find  symbol	112	None	replace
78	[BUG]  [BUGGY]  connectToPossibleExceptionHandler(JsonToken.END_OBJECT,  stackSize);  [CE]  cannot  find  symbol  [FE]                  ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {      [BUGGY]  connectToPossibleExceptionHandler(JsonToken.END_OBJECT,  stackSize);  [BUGGY]      pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	261	261	2	replace	connectToPossibleExceptionHandler(JsonToken.END_OBJECT,  stackSize);	  connectToPossibleExceptionHandler(JsonToken.END_OBJECT);    	non-compiled	[CE]  cannot  find  symbol	112	None	replace
79	[BUG]  [BUGGY]  connectToPossibleExceptionHandler(JsonToken.END_OBJECT,  JsonToken.START_OBJECT);  [CE]  cannot  find  symbol  START_OBJECT  [FE]                    ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {      [BUGGY]  connectToPossibleExceptionHandler(JsonToken.END_OBJECT,  JsonToken.START_OBJECT);  [BUGGY]      pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	261	261	2	replace	connectToPossibleExceptionHandler(JsonToken.END_OBJECT,  JsonToken.START_OBJECT);	  connectToPossibleExceptionHandler(JsonToken.END_OBJECT);    	non-compiled	[CE]  cannot  find  symbol  START_OBJECT	112	None	replace
80	[BUG]  [BUGGY]  connectToPossibleExceptionHandler(JsonToken.END_OBJECT,  JsonToken.END_ARRAY);  [CE]  cannot  find  symbol  [FE]                      ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {      [BUGGY]  connectToPossibleExceptionHandler(JsonToken.END_OBJECT,  JsonToken.END_ARRAY);  [BUGGY]      pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	261	261	2	replace	connectToPossibleExceptionHandler(JsonToken.END_OBJECT,  JsonToken.END_ARRAY);	  connectToPossibleExceptionHandler(JsonToken.END_OBJECT);    	non-compiled	[CE]  cannot  find  symbol	112	None	replace
81	[BUG]  [BUGGY]  connectToPossibleExceptionHandler(JsonToken.END_OBJECT,  JsonToken.END_CLOSED);  [CE]  cannot  find  symbol  END_CLOSED  [FE]                        ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {      [BUGGY]  connectToPossibleExceptionHandler(JsonToken.END_OBJECT,  JsonToken.END_CLOSED);  [BUGGY]      pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	261	261	2	replace	connectToPossibleExceptionHandler(JsonToken.END_OBJECT,  JsonToken.END_CLOSED);	  connectToPossibleExceptionHandler(JsonToken.END_OBJECT);    	non-compiled	[CE]  cannot  find  symbol  END_CLOSED	112	None	replace
82	[BUG]  [BUGGY]  int  stackSize  =  stack.size()  -  1;  [CE]  cannot  find  symbol  [FE]              AssertionFailedError      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {      [BUGGY]  int  stackSize  =  stack.size()  -  1;  [BUGGY]      pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	261	261	2	replace	int  stackSize  =  stack.size()  -  1;	          int    stackSize    =    stack.size();    	non-compiled	[CE]  cannot  find  symbol	121	None	replace
83	[BUG]  [BUGGY]  int  stackSize  =  stack.length();  [CE]  cannot  find  symbol  [FE]                AssertionFailedError      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {      [BUGGY]  int  stackSize  =  stack.length();  [BUGGY]      pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	261	261	2	replace	int  stackSize  =  stack.length();	          int    stackSize    =    stack.size();    	non-compiled	[CE]  cannot  find  symbol	121	None	replace
84	[BUG]  [BUGGY]  int  stackSize  =  pathNames.size();  [CE]  cannot  find  symbol  [FE]                  AssertionFailedError      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {      [BUGGY]  int  stackSize  =  pathNames.size();  [BUGGY]      pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	261	261	2	replace	int  stackSize  =  pathNames.size();	          int    stackSize    =    stack.size();    	non-compiled	[CE]  cannot  find  symbol	121	None	replace
85	[BUG]  [BUGGY]  int  stackSize  =  stack.size()  -  2;  [CE]  cannot  find  symbol  [FE]                    AssertionFailedError      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {      [BUGGY]  int  stackSize  =  stack.size()  -  2;  [BUGGY]      pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	261	261	2	replace	int  stackSize  =  stack.size()  -  2;	          int    stackSize    =    stack.size();    	non-compiled	[CE]  cannot  find  symbol	121	None	replace
86	[BUG]  [BUGGY]  int  stackSize  =  this.stack.size();  [CE]  cannot  find  symbol  [FE]                      AssertionFailedError      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {      [BUGGY]  int  stackSize  =  this.stack.size();  [BUGGY]      pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	261	261	2	replace	int  stackSize  =  this.stack.size();	          int    stackSize    =    stack.size();    	non-compiled	[CE]  cannot  find  symbol	121	None	replace
87	[BUG]  [BUGGY]  int  stackSize  =  stack.size()  +  1;  [CE]  cannot  find  symbol  [FE]                        AssertionFailedError      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {      [BUGGY]  int  stackSize  =  stack.size()  +  1;  [BUGGY]      pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	261	261	2	replace	int  stackSize  =  stack.size()  +  1;	          int    stackSize    =    stack.size();    	non-compiled	[CE]  cannot  find  symbol	121	None	replace
88	[BUG]  [BUGGY]  connectToPossibleExceptionHandler(null,  JsonToken.START_OBJECT,  null);  [CE]  cannot  find  symbol  START_OBJECT  [FE]                    ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {      [BUGGY]  connectToPossibleExceptionHandler(null,  JsonToken.START_OBJECT,  null);  [BUGGY]      pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	261	261	2	replace	connectToPossibleExceptionHandler(null,  JsonToken.START_OBJECT,  null);	  connectToPossibleExceptionHandler(null,    JsonToken.START_OBJECT);    	non-compiled	[CE]  cannot  find  symbol  START_OBJECT	8	None	replace
89	[BUG]  [BUGGY]  connectToPossibleExceptionHandler(null,  JsonToken.START_OBJECT,  SENTINEL_CLOSED);  [CE]  cannot  find  symbol  START_OBJECT  [FE]                      ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {      [BUGGY]  connectToPossibleExceptionHandler(null,  JsonToken.START_OBJECT,  SENTINEL_CLOSED);  [BUGGY]      pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	261	261	2	replace	connectToPossibleExceptionHandler(null,  JsonToken.START_OBJECT,  SENTINEL_CLOSED);	  connectToPossibleExceptionHandler(null,    JsonToken.START_OBJECT);    	non-compiled	[CE]  cannot  find  symbol  START_OBJECT	8	None	replace
90	[BUG]  [BUGGY]  connectToPossibleExceptionHandler(null,  JsonToken.START_OBJECT,  pathIndices);  [CE]  cannot  find  symbol  START_OBJECT  [FE]                        ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {      [BUGGY]  connectToPossibleExceptionHandler(null,  JsonToken.START_OBJECT,  pathIndices);  [BUGGY]      pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	261	261	2	replace	connectToPossibleExceptionHandler(null,  JsonToken.START_OBJECT,  pathIndices);	  connectToPossibleExceptionHandler(null,    JsonToken.START_OBJECT);    	non-compiled	[CE]  cannot  find  symbol  START_OBJECT	8	None	replace
91	[BUG]  [BUGGY]  connectToPossibleExceptionHandler(null,  JsonToken.START_OBJECT,  stackSize);  [CE]  cannot  find  symbol  START_OBJECT  [FE]                          ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {      [BUGGY]  connectToPossibleExceptionHandler(null,  JsonToken.START_OBJECT,  stackSize);  [BUGGY]      pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	261	261	2	replace	connectToPossibleExceptionHandler(null,  JsonToken.START_OBJECT,  stackSize);	  connectToPossibleExceptionHandler(null,    JsonToken.START_OBJECT);    	non-compiled	[CE]  cannot  find  symbol  START_OBJECT	8	None	replace
92	[BUG]  [BUGGY]  [FE]  ArrayIndexOutOfBoundsException  [FE]    AssertionFailedError    [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {      [BUGGY]  peek();  peek();  [BUGGY]      pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	261	261	2	add	peek();    peek();	  	compilable	  [FE]  ArrayIndexOutOfBoundsException  	58	2	add
93	[BUG]  [BUGGY]  peek();  peek();  [FE]  ArrayIndexOutOfBoundsException  [FE]    AssertionFailedError    [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {      [BUGGY]  peek();  peek();  [BUGGY]      pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	261	261	2	replace	peek();    peek();	  	compilable	  [FE]  ArrayIndexOutOfBoundsException  	58	2	add
94	[BUG]  [BUGGY]  peek();  if(peek()  ==  JsonToken.VALUE_NULL)  {  nextName();  pathNames[stackSize  -  1]  =  null;  }  [CE]  cannot  find  symbol  VALUE_NULL  [FE]      AssertionFailedError    [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {      [BUGGY]  peek();  if(peek()  ==  JsonToken.VALUE_NULL)  {  nextName();  pathNames[stackSize  -  1]  =  null;  }  [BUGGY]      pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	261	261	2	replace	peek();    if(peek()  ==  JsonToken.VALUE_NULL)  {  nextName();  pathNames[stackSize  -  1]  =  null;  }	  	non-compiled	[CE]  cannot  find  symbol  VALUE_NULL	58	None	add
95	[BUG]  [BUGGY]  peek();  if(peek()  ==  JsonToken.VALUE_NULL)  {  nextName();  pathNames[stackSize  -  1]  =   "null ";  }  [CE]  cannot  find  symbol  VALUE_NULL  [FE]        AssertionFailedError    [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {      [BUGGY]  peek();  if(peek()  ==  JsonToken.VALUE_NULL)  {  nextName();  pathNames[stackSize  -  1]  =   "null ";  }  [BUGGY]      pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	261	261	2	replace	peek();    if(peek()  ==  JsonToken.VALUE_NULL)  {  nextName();  pathNames[stackSize  -  1]  =   "null ";  }	  	non-compiled	[CE]  cannot  find  symbol  VALUE_NULL	58	None	add
96	[BUG]  [BUGGY]  peek();  if(peek()  ==  JsonToken.VALUE_NULL)  {  nextName();  pathNames[stackSize  -  1]  =   "null ";  }  else  {  skip();  }  [CE]  cannot  find  symbol  VALUE_NULL  [FE]          AssertionFailedError    [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {      [BUGGY]  peek();  if(peek()  ==  JsonToken.VALUE_NULL)  {  nextName();  pathNames[stackSize  -  1]  =   "null ";  }  else  {  skip();  }  [BUGGY]      pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	261	261	2	replace	peek();    if(peek()  ==  JsonToken.VALUE_NULL)  {  nextName();  pathNames[stackSize  -  1]  =   "null ";  }  else  {  skip();  }	  	non-compiled	[CE]  cannot  find  symbol  VALUE_NULL	58	None	add
97	[BUG]  [BUGGY]  peek();  if(peek()  ==  JsonToken.VALUE_NULL)  {  nextName();  pathNames[stackSize  -  1]  =  null;  }  else  {  skip();  }  [CE]  cannot  find  symbol  VALUE_NULL  [FE]            AssertionFailedError    [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {      [BUGGY]  peek();  if(peek()  ==  JsonToken.VALUE_NULL)  {  nextName();  pathNames[stackSize  -  1]  =  null;  }  else  {  skip();  }  [BUGGY]      pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	261	261	2	replace	peek();    if(peek()  ==  JsonToken.VALUE_NULL)  {  nextName();  pathNames[stackSize  -  1]  =  null;  }  else  {  skip();  }	  	non-compiled	[CE]  cannot  find  symbol  VALUE_NULL	58	None	add
98	[BUG]  [BUGGY]  peek();  if(peek()  ==  JsonToken.VALUE_NULL)  {  peek();  }  else  {  pathNames[stackSize  -  1]  =  null;  }  [CE]  cannot  find  symbol  VALUE_NULL  [FE]              AssertionFailedError    [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {      [BUGGY]  peek();  if(peek()  ==  JsonToken.VALUE_NULL)  {  peek();  }  else  {  pathNames[stackSize  -  1]  =  null;  }  [BUGGY]      pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	261	261	2	replace	peek();    if(peek()  ==  JsonToken.VALUE_NULL)  {  peek();  }  else  {  pathNames[stackSize  -  1]  =  null;  }	  	non-compiled	[CE]  cannot  find  symbol  VALUE_NULL	58	None	add
99	[BUG]  [BUGGY]  peek();  if(nextToken()  ==  JsonToken.VALUE_STRING)  {  nextName();  pathNames[stackSize  -  1]  =   "null ";  }  [CE]  cannot  find  symbol  [FE]                AssertionFailedError    [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {      [BUGGY]  peek();  if(nextToken()  ==  JsonToken.VALUE_STRING)  {  nextName();  pathNames[stackSize  -  1]  =   "null ";  }  [BUGGY]      pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	261	261	2	replace	peek();    if(nextToken()  ==  JsonToken.VALUE_STRING)  {  nextName();  pathNames[stackSize  -  1]  =   "null ";  }	  	non-compiled	[CE]  cannot  find  symbol	58	None	add
100	[BUG]  [BUGGY]  peek();  if(result  ==  null)  {  nextName();  pathNames[stackSize  -  1]  =   "null ";  }  [CE]  cannot  find  symbol  result  [FE]                  AssertionFailedError    [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {      [BUGGY]  peek();  if(result  ==  null)  {  nextName();  pathNames[stackSize  -  1]  =   "null ";  }  [BUGGY]      pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	261	261	2	replace	peek();    if(result  ==  null)  {  nextName();  pathNames[stackSize  -  1]  =   "null ";  }	  	non-compiled	[CE]  cannot  find  symbol  result	58	None	add
101	[BUG]  [BUGGY]  StackTree  <  MISSING_READER  ||  stackSize  >  0)  {  popStack();  [CE]  >  expected  [FE]                  ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {      [BUGGY]  StackTree  <  MISSING_READER  ||  stackSize  >  0)  {  popStack();  [BUGGY]      pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	261	261	2	replace	StackTree  <  MISSING_READER  ||  stackSize  >  0)  {  popStack();	  StackTree    <    MISSING_READER    &&    stackSize    >    0)    {    popStack();    }    else    {    skipStack();    }    	non-compiled	[CE]  >  expected	73	None	replace
102	[BUG]  [BUGGY]  StackTree  <  MISSING_READER  ||  stackSize  >  0)  {  popStack();  }  else  {  skipStack();  }  [CE]  >  expected  [FE]                    ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {      [BUGGY]  StackTree  <  MISSING_READER  ||  stackSize  >  0)  {  popStack();  }  else  {  skipStack();  }  [BUGGY]      pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	261	261	2	replace	StackTree  <  MISSING_READER  ||  stackSize  >  0)  {  popStack();  }  else  {  skipStack();  }	  StackTree    <    MISSING_READER    &&    stackSize    >    0)    {    popStack();    }    else    {    skipStack();    }    	non-compiled	[CE]  >  expected	73	None	replace
103	[BUG]  [BUGGY]  StackTree  <  MISSING_READER  &&  stackSize  >  1)  {  popStack();  }  [CE]  >  expected  [FE]                      ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {      [BUGGY]  StackTree  <  MISSING_READER  &&  stackSize  >  1)  {  popStack();  }  [BUGGY]      pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	261	261	2	replace	StackTree  <  MISSING_READER  &&  stackSize  >  1)  {  popStack();  }	  StackTree    <    MISSING_READER    &&    stackSize    >    0)    {    popStack();    }    else    {    skipStack();    }    	non-compiled	[CE]  >  expected	73	None	replace
104	[BUG]  [BUGGY]  StackTree  <  MISSING_READER  ||  stackSize  >  0)  {  popStack();  }  [CE]  >  expected  [FE]                        ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {      [BUGGY]  StackTree  <  MISSING_READER  ||  stackSize  >  0)  {  popStack();  }  [BUGGY]      pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	261	261	2	replace	StackTree  <  MISSING_READER  ||  stackSize  >  0)  {  popStack();  }	  StackTree    <    MISSING_READER    &&    stackSize    >    0)    {    popStack();    }    else    {    skipStack();    }    	non-compiled	[CE]  >  expected	73	None	replace
105	[BUG]  [BUGGY]  StackTree  <  MISSING_READER  &&  stackSize  >  1)  {  popStack();  }  else  {  skipStack();  }  [CE]  >  expected  [FE]                          ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {      [BUGGY]  StackTree  <  MISSING_READER  &&  stackSize  >  1)  {  popStack();  }  else  {  skipStack();  }  [BUGGY]      pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	261	261	2	replace	StackTree  <  MISSING_READER  &&  stackSize  >  1)  {  popStack();  }  else  {  skipStack();  }	  StackTree    <    MISSING_READER    &&    stackSize    >    0)    {    popStack();    }    else    {    skipStack();    }    	non-compiled	[CE]  >  expected	73	None	replace
106	[BUG]  [BUGGY]  StackTree  <  MISSING_READER  &&  stackSize  >  1)  {  popStack();  [CE]  >  expected  [FE]                            ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {      [BUGGY]  StackTree  <  MISSING_READER  &&  stackSize  >  1)  {  popStack();  [BUGGY]      pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	261	261	2	replace	StackTree  <  MISSING_READER  &&  stackSize  >  1)  {  popStack();	  StackTree    <    MISSING_READER    &&    stackSize    >    0)    {    popStack();    }    else    {    skipStack();    }    	non-compiled	[CE]  >  expected	73	None	replace
107	[BUG]  [BUGGY]  connectToPossibleExceptionHandler(this.nextIndice());  [CE]  cannot  find  symbol  [FE]                    ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {      [BUGGY]  connectToPossibleExceptionHandler(this.nextIndice());  [BUGGY]      pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	261	261	2	replace	connectToPossibleExceptionHandler(this.nextIndice());	  connectToPossibleExceptionHandler(nextIndice());    	non-compiled	[CE]  cannot  find  symbol	185	None	replace
108	[BUG]  [BUGGY]  connectToPossibleExceptionHandler(nextIndice(),  nextName());  [CE]  cannot  find  symbol  [FE]                      ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {      [BUGGY]  connectToPossibleExceptionHandler(nextIndice(),  nextName());  [BUGGY]      pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	261	261	2	replace	connectToPossibleExceptionHandler(nextIndice(),  nextName());	  connectToPossibleExceptionHandler(nextIndice());    	non-compiled	[CE]  cannot  find  symbol	185	None	replace
109	[BUG]  [BUGGY]  connectToPossibleExceptionHandler(throwIndice());  [CE]  cannot  find  symbol  [FE]                        ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {      [BUGGY]  connectToPossibleExceptionHandler(throwIndice());  [BUGGY]      pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	261	261	2	replace	connectToPossibleExceptionHandler(throwIndice());	  connectToPossibleExceptionHandler(nextIndice());    	non-compiled	[CE]  cannot  find  symbol	185	None	replace
110	[BUG]  [BUGGY]  connectToPossibleExceptionHandler(resultIndice());  [CE]  cannot  find  symbol  [FE]                          ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {      [BUGGY]  connectToPossibleExceptionHandler(resultIndice());  [BUGGY]      pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	261	261	2	replace	connectToPossibleExceptionHandler(resultIndice());	  connectToPossibleExceptionHandler(nextIndice());    	non-compiled	[CE]  cannot  find  symbol	185	None	replace
111	[BUG]  [BUGGY]  connectToPossibleExceptionHandler(ch,  nextIndice());  [CE]  cannot  find  symbol  ch  [FE]                            ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {      [BUGGY]  connectToPossibleExceptionHandler(ch,  nextIndice());  [BUGGY]      pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	261	261	2	replace	connectToPossibleExceptionHandler(ch,  nextIndice());	  connectToPossibleExceptionHandler(nextIndice());    	non-compiled	[CE]  cannot  find  symbol  ch	185	None	replace
112	[BUG]  [BUGGY]  _reportError( "Current  token( "+getClass().getName()  + ")not  null. ",  JsonToken.END_OBJECT);  [CE]  cannot  find  symbol  [FE]                  ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {      [BUGGY]  _reportError( "Current  token( "+getClass().getName()  + ")not  null. ",  JsonToken.END_OBJECT);  [BUGGY]      pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	261	261	2	replace	_reportError( "Current  token( "+getClass().getName()  + ")not  null. ",  JsonToken.END_OBJECT);	  _reportError(   "Current    token(   "+getClass().getName()    +   ")not    null   ",    JsonToken.END_OBJECT);    	non-compiled	[CE]  cannot  find  symbol	36	None	replace
113	[BUG]  [BUGGY]  _reportError( "Current  token( "+getClass().getName()  + ")not  null,  JsonToken.END_OBJECT);  [CE]  unclosed  string  literal  [FE]                    ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {      [BUGGY]  _reportError( "Current  token( "+getClass().getName()  + ")not  null,  JsonToken.END_OBJECT);  [BUGGY]      pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	261	261	2	replace	_reportError( "Current  token( "+getClass().getName()  + ")not  null,  JsonToken.END_OBJECT);	  _reportError(   "Current    token(   "+getClass().getName()    +   ")not    null   ",    JsonToken.END_OBJECT);    	non-compiled	[CE]  unclosed  string  literal	36	None	replace
114	[BUG]  [BUGGY]  _reportError( "Current  token( "+getClass().getName()  + ")not  null, ",  JsonToken.END_OBJECT);  [CE]  cannot  find  symbol  [FE]                      ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {      [BUGGY]  _reportError( "Current  token( "+getClass().getName()  + ")not  null, ",  JsonToken.END_OBJECT);  [BUGGY]      pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	261	261	2	replace	_reportError( "Current  token( "+getClass().getName()  + ")not  null, ",  JsonToken.END_OBJECT);	  _reportError(   "Current    token(   "+getClass().getName()    +   ")not    null   ",    JsonToken.END_OBJECT);    	non-compiled	[CE]  cannot  find  symbol	36	None	replace
115	[BUG]  [BUGGY]  connectToPossibleExceptionHandler(this.nextName());  [CE]  cannot  find  symbol  [FE]                  ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {      [BUGGY]  connectToPossibleExceptionHandler(this.nextName());  [BUGGY]      pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	261	261	2	replace	connectToPossibleExceptionHandler(this.nextName());	  connectToPossibleExceptionHandler(this.nextInternal());    	non-compiled	[CE]  cannot  find  symbol	184	None	replace
116	[BUG]  [BUGGY]  connectToPossibleExceptionHandler(this.nextInternal(),  JsonToken.END_OBJECT);  [CE]  cannot  find  symbol  [FE]                    ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {      [BUGGY]  connectToPossibleExceptionHandler(this.nextInternal(),  JsonToken.END_OBJECT);  [BUGGY]      pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	261	261	2	replace	connectToPossibleExceptionHandler(this.nextInternal(),  JsonToken.END_OBJECT);	  connectToPossibleExceptionHandler(this.nextInternal());    	non-compiled	[CE]  cannot  find  symbol	184	None	replace
117	[BUG]  [BUGGY]  connectToPossibleExceptionHandler(this.nextInternal(),  JsonToken.START_OBJECT);  [CE]  cannot  find  symbol  [FE]                      ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {      [BUGGY]  connectToPossibleExceptionHandler(this.nextInternal(),  JsonToken.START_OBJECT);  [BUGGY]      pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	261	261	2	replace	connectToPossibleExceptionHandler(this.nextInternal(),  JsonToken.START_OBJECT);	  connectToPossibleExceptionHandler(this.nextInternal());    	non-compiled	[CE]  cannot  find  symbol	184	None	replace
118	[BUG]  [BUGGY]  connectToPossibleExceptionHandler(this,  nextInternal());  [CE]  cannot  find  symbol  [FE]                        ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {      [BUGGY]  connectToPossibleExceptionHandler(this,  nextInternal());  [BUGGY]      pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	261	261	2	replace	connectToPossibleExceptionHandler(this,  nextInternal());	  connectToPossibleExceptionHandler(this.nextInternal());    	non-compiled	[CE]  cannot  find  symbol	184	None	replace
119	[BUG]  [BUGGY]  connectToPossibleExceptionHandler(this.nextInternal(),  JsonToken.FUNCTION);  [CE]  cannot  find  symbol  [FE]                          ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {      [BUGGY]  connectToPossibleExceptionHandler(this.nextInternal(),  JsonToken.FUNCTION);  [BUGGY]      pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	261	261	2	replace	connectToPossibleExceptionHandler(this.nextInternal(),  JsonToken.FUNCTION);	  connectToPossibleExceptionHandler(this.nextInternal());    	non-compiled	[CE]  cannot  find  symbol	184	None	replace
120	[BUG]  [BUGGY]  connectToPossibleExceptionHandler(this.nextInternal(),  JsonToken.NAME);  [CE]  cannot  find  symbol  [FE]                            ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {      [BUGGY]  connectToPossibleExceptionHandler(this.nextInternal(),  JsonToken.NAME);  [BUGGY]      pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	261	261	2	replace	connectToPossibleExceptionHandler(this.nextInternal(),  JsonToken.NAME);	  connectToPossibleExceptionHandler(this.nextInternal());    	non-compiled	[CE]  cannot  find  symbol	184	None	replace
121	[BUG]  [BUGGY]  if(isEnabled(Feature.QUOTE_FIELD_NAMES)||  isEnabled(Feature.QUOTE_FIELD_NAMES))  {  if(stackSize  >  0)  {  popStack();  }  [CE]  ';'  expected  [FE]              ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {      [BUGGY]  if(isEnabled(Feature.QUOTE_FIELD_NAMES)||  isEnabled(Feature.QUOTE_FIELD_NAMES))  {  if(stackSize  >  0)  {  popStack();  }  [BUGGY]      pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	261	261	2	replace	if(isEnabled(Feature.QUOTE_FIELD_NAMES)||  isEnabled(Feature.QUOTE_FIELD_NAMES))  {  if(stackSize  >  0)  {  popStack();  }	  if(stackSize    >    0)    {    popStack();    }    if(stackSize    >    0)    {    popStack();    	non-compiled	[CE]  ';'  expected	210	None	replace
122	[BUG]  [BUGGY]  if(isEnabled(Feature.QUOTE_FIELD_NAMES)||  isEnabled(Feature.AUTO_CLOSE_NULL_OBJECT))  {  if(stackSize  >  0)  {  popStack();  }  [CE]  ';'  expected  [FE]                ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {      [BUGGY]  if(isEnabled(Feature.QUOTE_FIELD_NAMES)||  isEnabled(Feature.AUTO_CLOSE_NULL_OBJECT))  {  if(stackSize  >  0)  {  popStack();  }  [BUGGY]      pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	261	261	2	replace	if(isEnabled(Feature.QUOTE_FIELD_NAMES)||  isEnabled(Feature.AUTO_CLOSE_NULL_OBJECT))  {  if(stackSize  >  0)  {  popStack();  }	  if(stackSize    >    0)    {    popStack();    }    if(stackSize    >    0)    {    popStack();    	non-compiled	[CE]  ';'  expected	210	None	replace
123	[BUG]  [BUGGY]  if(isEnabled(Feature.QUOTE_FIELD_NAMES)||  isEnabled(Feature.QUOTE_NULL_OBJECT))  {  if(stackSize  >  0)  {  popStack();  }  [CE]  ';'  expected  [FE]                  ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {      [BUGGY]  if(isEnabled(Feature.QUOTE_FIELD_NAMES)||  isEnabled(Feature.QUOTE_NULL_OBJECT))  {  if(stackSize  >  0)  {  popStack();  }  [BUGGY]      pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	261	261	2	replace	if(isEnabled(Feature.QUOTE_FIELD_NAMES)||  isEnabled(Feature.QUOTE_NULL_OBJECT))  {  if(stackSize  >  0)  {  popStack();  }	  if(stackSize    >    0)    {    popStack();    }    if(stackSize    >    0)    {    popStack();    	non-compiled	[CE]  ';'  expected	210	None	replace
124	[BUG]  [BUGGY]  if(isEnabled(Feature.QUOTE_FIELD_NAMES)||  isEnabled(Feature.QUOTE_FIELD_NAMES))  {  if(stackSize  >  1)  {  popStack();  }  [CE]  ';'  expected  [FE]                    ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {      [BUGGY]  if(isEnabled(Feature.QUOTE_FIELD_NAMES)||  isEnabled(Feature.QUOTE_FIELD_NAMES))  {  if(stackSize  >  1)  {  popStack();  }  [BUGGY]      pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	261	261	2	replace	if(isEnabled(Feature.QUOTE_FIELD_NAMES)||  isEnabled(Feature.QUOTE_FIELD_NAMES))  {  if(stackSize  >  1)  {  popStack();  }	  if(stackSize    >    0)    {    popStack();    }    if(stackSize    >    0)    {    popStack();    	non-compiled	[CE]  ';'  expected	210	None	replace
125	[BUG]  [BUGGY]  StackTree  <  0)  {  popStack();  }  else  {  skipStack();  }  [CE]  illegal  start  of  type  [FE]                    ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {      [BUGGY]  StackTree  <  0)  {  popStack();  }  else  {  skipStack();  }  [BUGGY]      pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	261	261	2	replace	StackTree  <  0)  {  popStack();  }  else  {  skipStack();  }	  if(stackSize    <    0)    {    popStack();    }    else    {    skipStack();    }    	non-compiled	[CE]  illegal  start  of  type	110	None	replace
126	[BUG]  [BUGGY]  StackTree  <  0  ||  stackSize  <  0  ||  stackSize  >  0)  {  popStack();  }  else  {  skipStack();  }  [CE]  illegal  start  of  type  [FE]                      ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {      [BUGGY]  StackTree  <  0  ||  stackSize  <  0  ||  stackSize  >  0)  {  popStack();  }  else  {  skipStack();  }  [BUGGY]      pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	261	261	2	replace	StackTree  <  0  ||  stackSize  <  0  ||  stackSize  >  0)  {  popStack();  }  else  {  skipStack();  }	  if(stackSize    <    0)    {    popStack();    }    else    {    skipStack();    }    	non-compiled	[CE]  illegal  start  of  type	110	None	replace
127	[BUG]  [BUGGY]  StackTree  <  0  ||  stackSize  <  0)  {  popStack();  }  else  {  skipStack();  }  [CE]  illegal  start  of  type  [FE]                        ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {      [BUGGY]  StackTree  <  0  ||  stackSize  <  0)  {  popStack();  }  else  {  skipStack();  }  [BUGGY]      pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	261	261	2	replace	StackTree  <  0  ||  stackSize  <  0)  {  popStack();  }  else  {  skipStack();  }	  if(stackSize    <    0)    {    popStack();    }    else    {    skipStack();    }    	non-compiled	[CE]  illegal  start  of  type	110	None	replace
128	[BUG]  [BUGGY]  StackTree  <  0  ||  stackSize  <  =  0  ||  stackSize  >  0)  {  popStack();  }  else  {  skipStack();  }  [CE]  illegal  start  of  type  [FE]                          ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {      [BUGGY]  StackTree  <  0  ||  stackSize  <  =  0  ||  stackSize  >  0)  {  popStack();  }  else  {  skipStack();  }  [BUGGY]      pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	261	261	2	replace	StackTree  <  0  ||  stackSize  <  =  0  ||  stackSize  >  0)  {  popStack();  }  else  {  skipStack();  }	  if(stackSize    <    0)    {    popStack();    }    else    {    skipStack();    }    	non-compiled	[CE]  illegal  start  of  type	110	None	replace
129	[BUG]  [BUGGY]  StackTree  <  0  ||  stackSize  <  0  ||  stackSize  >  1)  {  popStack();  }  else  {  skipStack();  }  [CE]  illegal  start  of  type  [FE]                            ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {      [BUGGY]  StackTree  <  0  ||  stackSize  <  0  ||  stackSize  >  1)  {  popStack();  }  else  {  skipStack();  }  [BUGGY]      pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	261	261	2	replace	StackTree  <  0  ||  stackSize  <  0  ||  stackSize  >  1)  {  popStack();  }  else  {  skipStack();  }	  if(stackSize    <    0)    {    popStack();    }    else    {    skipStack();    }    	non-compiled	[CE]  illegal  start  of  type	110	None	replace
130	[BUG]  [BUGGY]  popStack();  }  else  {  skipStack();  }  [CE]  'else'  without  'if'  [FE]                              ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {      [BUGGY]  popStack();  }  else  {  skipStack();  }  [BUGGY]      pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	261	261	2	replace	popStack();  }  else  {  skipStack();  }	  if(stackSize    <    0)    {    popStack();    }    else    {    skipStack();    }    	non-compiled	[CE]  'else'  without  'if'	110	None	replace
131	[BUG]  [BUGGY]  pathNames[stackSize  -  1]  =  JsonToken.VALUE_NULL;  [CE]  cannot  find  symbol  VALUE_NULL  [FE]    AssertionFailedError    [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {      [BUGGY]  pathNames[stackSize  -  1]  =  JsonToken.VALUE_NULL;  [BUGGY]      pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	261	261	2	replace	pathNames[stackSize  -  1]  =  JsonToken.VALUE_NULL;	  pathNames[stackSize    -    1]    =       "null   ";    	non-compiled	[CE]  cannot  find  symbol  VALUE_NULL	35	None	replace
132	[BUG]  [BUGGY]  pathNames[stackSize  -  1]  =  JsonToken.VALUE_EMBEDDED_ARRAY;  [CE]  cannot  find  symbol  VALUE_EMBEDDED_ARRAY  [FE]      AssertionFailedError    [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {      [BUGGY]  pathNames[stackSize  -  1]  =  JsonToken.VALUE_EMBEDDED_ARRAY;  [BUGGY]      pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	261	261	2	replace	pathNames[stackSize  -  1]  =  JsonToken.VALUE_EMBEDDED_ARRAY;	  pathNames[stackSize    -    1]    =       "null   ";    	non-compiled	[CE]  cannot  find  symbol  VALUE_EMBEDDED_ARRAY	35	None	replace
133	[BUG]  [BUGGY]  pathNames[stackSize  -  1]  =  JsonToken.VALUE_EMBEDDED_OBJECT;  [CE]  cannot  find  symbol  VALUE_EMBEDDED_OBJECT  [FE]        AssertionFailedError    [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {      [BUGGY]  pathNames[stackSize  -  1]  =  JsonToken.VALUE_EMBEDDED_OBJECT;  [BUGGY]      pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	261	261	2	replace	pathNames[stackSize  -  1]  =  JsonToken.VALUE_EMBEDDED_OBJECT;	  pathNames[stackSize    -    1]    =       "null   ";    	non-compiled	[CE]  cannot  find  symbol  VALUE_EMBEDDED_OBJECT	35	None	replace
134	[BUG]  [BUGGY]  if(peek()  ==  JsonToken.VALUE_EMPTY)  {  if(stackSize  >  0)  {  popStack();  }  [CE]  ';'  expected  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {      [BUGGY]  if(peek()  ==  JsonToken.VALUE_EMPTY)  {  if(stackSize  >  0)  {  popStack();  }  [BUGGY]      pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	261	261	2	replace	if(peek()  ==  JsonToken.VALUE_EMPTY)  {  if(stackSize  >  0)  {  popStack();  }	  if(stackSize    >    0)    {    popStack();    }    if(stackSize    >    0)    {    popStack();    System.arraycopy(pathNames,    0,    pathNames,    0,    stackSize    -    1);    }    	non-compiled	[CE]  ';'  expected	159	None	replace
135	[BUG]  [BUGGY]  if(peek()  ==  JsonToken.VALUE_NULL)  {  if(stackSize  >  1)  {  popStack();  }  [CE]  ';'  expected  [FE]      ArrayIndexOutOfBoundsException    [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {      [BUGGY]  if(peek()  ==  JsonToken.VALUE_NULL)  {  if(stackSize  >  1)  {  popStack();  }  [BUGGY]      pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	261	261	2	replace	if(peek()  ==  JsonToken.VALUE_NULL)  {  if(stackSize  >  1)  {  popStack();  }	  if(stackSize    >    0)    {    popStack();    }    if(stackSize    >    0)    {    popStack();    System.arraycopy(pathNames,    0,    pathNames,    0,    stackSize    -    1);    }    	non-compiled	[CE]  ';'  expected	159	None	replace
136	[BUG]  [BUGGY]  if(peek()  ==  JsonToken.VALUE_STRING)  {  if(stackSize  >  1)  {  popStack();  }  [CE]  ';'  expected  [FE]        ArrayIndexOutOfBoundsException    [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {      [BUGGY]  if(peek()  ==  JsonToken.VALUE_STRING)  {  if(stackSize  >  1)  {  popStack();  }  [BUGGY]      pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	261	261	2	replace	if(peek()  ==  JsonToken.VALUE_STRING)  {  if(stackSize  >  1)  {  popStack();  }	  if(stackSize    >    0)    {    popStack();    }    if(stackSize    >    0)    {    popStack();    System.arraycopy(pathNames,    0,    pathNames,    0,    stackSize    -    1);    }    	non-compiled	[CE]  ';'  expected	159	None	replace
137	[BUG]  [BUGGY]  [FE]  ArrayIndexOutOfBoundsException  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {      [BUGGY]  pathNames[stackSize  -  2]  =     "null   ";  pathNames[stackSize  -  2]  =   "null   ";  [BUGGY]      pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	261	261	2	add	pathNames[stackSize    -    2]    =       "null   ";    pathNames[stackSize  -  2]  =   "null   ";	  	compilable	  [FE]  ArrayIndexOutOfBoundsException  	40	2	add
138	[BUG]  [BUGGY]  pathNames[stackSize  -  2]  =     "null   ";  pathNames[stackSize  -  2]  =   "null   ";  [FE]  ArrayIndexOutOfBoundsException  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {      [BUGGY]  pathNames[stackSize  -  2]  =     "null   ";  pathNames[stackSize  -  2]  =   "null   ";  [BUGGY]      pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	261	261	2	replace	pathNames[stackSize    -    2]    =       "null   ";    pathNames[stackSize  -  2]  =   "null   ";	  	compilable	  [FE]  ArrayIndexOutOfBoundsException  	40	2	add
139	[BUG]  [BUGGY]  pathNames[stackSize  -  2]  =     "null   ";  pathNames[stackSize  -  2]  =   "null ".;  [CE]  <identifier>  expected  [FE]      ArrayIndexOutOfBoundsException    [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {      [BUGGY]  pathNames[stackSize  -  2]  =     "null   ";  pathNames[stackSize  -  2]  =   "null ".;  [BUGGY]      pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	261	261	2	replace	pathNames[stackSize    -    2]    =       "null   ";    pathNames[stackSize  -  2]  =   "null ".;	  	non-compiled	[CE]  <identifier>  expected	40	None	add
140	[BUG]  [BUGGY]  pathNames[stackSize  -  2]  =     "null   ";  pathNames[stackSize  -  2]  =   "null ",  null;  [CE]  [FE]        ArrayIndexOutOfBoundsException    [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {      [BUGGY]  pathNames[stackSize  -  2]  =     "null   ";  pathNames[stackSize  -  2]  =   "null ",  null;  [BUGGY]      pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	261	261	2	replace	pathNames[stackSize    -    2]    =       "null   ";    pathNames[stackSize  -  2]  =   "null ",  null;	  	non-compiled	[CE]  	40	None	add
141	[BUG]  [BUGGY]  pathNames[stackSize  -  2]  =     "null   ";  pathNames[stackSize  -  2]  =  null   ";  [CE]  unclosed  string  literal  [FE]          ArrayIndexOutOfBoundsException    [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {      [BUGGY]  pathNames[stackSize  -  2]  =     "null   ";  pathNames[stackSize  -  2]  =  null   ";  [BUGGY]      pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	261	261	2	replace	pathNames[stackSize    -    2]    =       "null   ";    pathNames[stackSize  -  2]  =  null   ";	  	non-compiled	[CE]  unclosed  string  literal	40	None	add
142	[BUG]  [BUGGY]  connectToPossibleExceptionHandler(throwInternal(),  JsonToken.END_OBJECT,  pathNames);  [CE]  cannot  find  symbol  [FE]                          ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {      [BUGGY]  connectToPossibleExceptionHandler(throwInternal(),  JsonToken.END_OBJECT,  pathNames);  [BUGGY]      pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	261	261	2	replace	connectToPossibleExceptionHandler(throwInternal(),  JsonToken.END_OBJECT,  pathNames);	  connectToPossibleExceptionHandler(throwInternal(),    JsonToken.END_OBJECT);    	non-compiled	[CE]  cannot  find  symbol	54	None	replace
143	[BUG]  [BUGGY]  connectToPossibleExceptionHandler(jsonToken.END_OBJECT,  stackSize);  [CE]  cannot  find  symbol  jsonToken  [FE]                            ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {      [BUGGY]  connectToPossibleExceptionHandler(jsonToken.END_OBJECT,  stackSize);  [BUGGY]      pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	261	261	2	replace	connectToPossibleExceptionHandler(jsonToken.END_OBJECT,  stackSize);	  connectToPossibleExceptionHandler(throwInternal(),    JsonToken.END_OBJECT);    	non-compiled	[CE]  cannot  find  symbol  jsonToken	54	None	replace
144	[BUG]  [BUGGY]  connectToPossibleExceptionHandler(throwInternal(),  JsonToken.END_OBJECT,  nextName());  [CE]  cannot  find  symbol  [FE]                              ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {      [BUGGY]  connectToPossibleExceptionHandler(throwInternal(),  JsonToken.END_OBJECT,  nextName());  [BUGGY]      pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	261	261	2	replace	connectToPossibleExceptionHandler(throwInternal(),  JsonToken.END_OBJECT,  nextName());	  connectToPossibleExceptionHandler(throwInternal(),    JsonToken.END_OBJECT);    	non-compiled	[CE]  cannot  find  symbol	54	None	replace
145	[BUG]  [BUGGY]  connectToPossibleExceptionHandler(throwInternal(),  JsonToken.END_OBJECT,  stackSize);  [CE]  cannot  find  symbol  [FE]                                ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {      [BUGGY]  connectToPossibleExceptionHandler(throwInternal(),  JsonToken.END_OBJECT,  stackSize);  [BUGGY]      pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	261	261	2	replace	connectToPossibleExceptionHandler(throwInternal(),  JsonToken.END_OBJECT,  stackSize);	  connectToPossibleExceptionHandler(throwInternal(),    JsonToken.END_OBJECT);    	non-compiled	[CE]  cannot  find  symbol	54	None	replace
146	[BUG]  [BUGGY]  connectToPossibleExceptionHandler(throwInternal(),  JsonToken.END_OBJECT,  null);  [CE]  cannot  find  symbol  [FE]                                  ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {      [BUGGY]  connectToPossibleExceptionHandler(throwInternal(),  JsonToken.END_OBJECT,  null);  [BUGGY]      pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	261	261	2	replace	connectToPossibleExceptionHandler(throwInternal(),  JsonToken.END_OBJECT,  null);	  connectToPossibleExceptionHandler(throwInternal(),    JsonToken.END_OBJECT);    	non-compiled	[CE]  cannot  find  symbol	54	None	replace
147	[BUG]  [BUGGY]  connectToPossibleExceptionHandler(this.throwInternal(),  JsonToken.END_OBJECT);  [CE]  cannot  find  symbol  [FE]                                    ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {      [BUGGY]  connectToPossibleExceptionHandler(this.throwInternal(),  JsonToken.END_OBJECT);  [BUGGY]      pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	261	261	2	replace	connectToPossibleExceptionHandler(this.throwInternal(),  JsonToken.END_OBJECT);	  connectToPossibleExceptionHandler(throwInternal(),    JsonToken.END_OBJECT);    	non-compiled	[CE]  cannot  find  symbol	54	None	replace
148	[BUG]  [BUGGY]  connectToPossibleExceptionHandler(throwInternal(),  JsonToken.VALUE_EMPTY,  null);  [CE]  cannot  find  symbol  [FE]                            ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {      [BUGGY]  connectToPossibleExceptionHandler(throwInternal(),  JsonToken.VALUE_EMPTY,  null);  [BUGGY]      pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	261	261	2	replace	connectToPossibleExceptionHandler(throwInternal(),  JsonToken.VALUE_EMPTY,  null);	  connectToPossibleExceptionHandler(throwInternal(),    JsonToken.VALUE_EMPTY);    	non-compiled	[CE]  cannot  find  symbol	55	None	replace
149	[BUG]  [BUGGY]  connectToPossibleExceptionHandler(jsonToken.VALUE_EMPTY);  [CE]  cannot  find  symbol  jsonToken  [FE]                              ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {      [BUGGY]  connectToPossibleExceptionHandler(jsonToken.VALUE_EMPTY);  [BUGGY]      pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	261	261	2	replace	connectToPossibleExceptionHandler(jsonToken.VALUE_EMPTY);	  connectToPossibleExceptionHandler(throwInternal(),    JsonToken.VALUE_EMPTY);    	non-compiled	[CE]  cannot  find  symbol  jsonToken	55	None	replace
150	[BUG]  [BUGGY]  connectToPossibleExceptionHandler(throwInternal(),  JsonToken.VALUE_EMPTY,  pathNames);  [CE]  cannot  find  symbol  [FE]                                ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {      [BUGGY]  connectToPossibleExceptionHandler(throwInternal(),  JsonToken.VALUE_EMPTY,  pathNames);  [BUGGY]      pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	261	261	2	replace	connectToPossibleExceptionHandler(throwInternal(),  JsonToken.VALUE_EMPTY,  pathNames);	  connectToPossibleExceptionHandler(throwInternal(),    JsonToken.VALUE_EMPTY);    	non-compiled	[CE]  cannot  find  symbol	55	None	replace
151	[BUG]  [BUGGY]  connectToPossibleExceptionHandler(JsonToken.VALUE_EMPTY,  stackSize);  [CE]  cannot  find  symbol  VALUE_EMPTY  [FE]                                  ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {      [BUGGY]  connectToPossibleExceptionHandler(JsonToken.VALUE_EMPTY,  stackSize);  [BUGGY]      pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	261	261	2	replace	connectToPossibleExceptionHandler(JsonToken.VALUE_EMPTY,  stackSize);	  connectToPossibleExceptionHandler(throwInternal(),    JsonToken.VALUE_EMPTY);    	non-compiled	[CE]  cannot  find  symbol  VALUE_EMPTY	55	None	replace
152	[BUG]  [BUGGY]  connectToPossibleExceptionHandler(throwInternal(),  JsonToken.VALUE_EMPTY,  stackSize);  [CE]  cannot  find  symbol  [FE]                                    ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {      [BUGGY]  connectToPossibleExceptionHandler(throwInternal(),  JsonToken.VALUE_EMPTY,  stackSize);  [BUGGY]      pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	261	261	2	replace	connectToPossibleExceptionHandler(throwInternal(),  JsonToken.VALUE_EMPTY,  stackSize);	  connectToPossibleExceptionHandler(throwInternal(),    JsonToken.VALUE_EMPTY);    	non-compiled	[CE]  cannot  find  symbol	55	None	replace
153	[BUG]  [BUGGY]  connectToPossibleExceptionHandler(jsonToken.VALUE_EMPTY,  stackSize);  [CE]  cannot  find  symbol  jsonToken  [FE]                                      ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {      [BUGGY]  connectToPossibleExceptionHandler(jsonToken.VALUE_EMPTY,  stackSize);  [BUGGY]      pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	261	261	2	replace	connectToPossibleExceptionHandler(jsonToken.VALUE_EMPTY,  stackSize);	  connectToPossibleExceptionHandler(throwInternal(),    JsonToken.VALUE_EMPTY);    	non-compiled	[CE]  cannot  find  symbol  jsonToken	55	None	replace
154	[BUG]  [BUGGY]  connectToPossibleExceptionHandler(nextName(),  JsonToken.VALUE_EMPTY);  [CE]  cannot  find  symbol  VALUE_EMPTY  [FE]                                        ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {      [BUGGY]  connectToPossibleExceptionHandler(nextName(),  JsonToken.VALUE_EMPTY);  [BUGGY]      pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	261	261	2	replace	connectToPossibleExceptionHandler(nextName(),  JsonToken.VALUE_EMPTY);	  connectToPossibleExceptionHandler(throwInternal(),    JsonToken.VALUE_EMPTY);    	non-compiled	[CE]  cannot  find  symbol  VALUE_EMPTY	55	None	replace
155	[BUG]  [BUGGY]  _reportError( "Current  token( "+getClass().getName()  + ")not  a  value ",  JsonToken.VALUE_STRING);  [CE]  cannot  find  symbol  VALUE_STRING  [FE]              ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {      [BUGGY]  _reportError( "Current  token( "+getClass().getName()  + ")not  a  value ",  JsonToken.VALUE_STRING);  [BUGGY]      pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	261	261	2	replace	_reportError( "Current  token( "+getClass().getName()  + ")not  a  value ",  JsonToken.VALUE_STRING);	  _reportError(   "Current    token(   "+getClass().getName()    +   ")not    a    value   ",    JsonToken.VALUE_NUMBER_ERROR);    	non-compiled	[CE]  cannot  find  symbol  VALUE_STRING	155	None	replace
156	[BUG]  [BUGGY]  _reportError( "Current  token( "+getClass().getName()  + ")not  a  value ", "JsonToken.VALUE_NUMBER_ERROR ");  [CE]  cannot  find  symbol  [FE]                ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {      [BUGGY]  _reportError( "Current  token( "+getClass().getName()  + ")not  a  value ", "JsonToken.VALUE_NUMBER_ERROR ");  [BUGGY]      pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	261	261	2	replace	_reportError( "Current  token( "+getClass().getName()  + ")not  a  value ", "JsonToken.VALUE_NUMBER_ERROR ");	  _reportError(   "Current    token(   "+getClass().getName()    +   ")not    a    value   ",    JsonToken.VALUE_NUMBER_ERROR);    	non-compiled	[CE]  cannot  find  symbol	155	None	replace
157	[BUG]  [BUGGY]  _reportError( "Current  token( "+getClass().getName()  + ")not  a  value. ",  JsonToken.VALUE_NUMBER_ERROR);  [CE]  cannot  find  symbol  VALUE_NUMBER_ERROR  [FE]                  ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {      [BUGGY]  _reportError( "Current  token( "+getClass().getName()  + ")not  a  value. ",  JsonToken.VALUE_NUMBER_ERROR);  [BUGGY]      pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	261	261	2	replace	_reportError( "Current  token( "+getClass().getName()  + ")not  a  value. ",  JsonToken.VALUE_NUMBER_ERROR);	  _reportError(   "Current    token(   "+getClass().getName()    +   ")not    a    value   ",    JsonToken.VALUE_NUMBER_ERROR);    	non-compiled	[CE]  cannot  find  symbol  VALUE_NUMBER_ERROR	155	None	replace
158	[BUG]  [BUGGY]  _reportError( "Current  token( "+getClass().getName()  + ")not  a  value ",  JsonToken.FIELD_NAME);  [CE]  cannot  find  symbol  FIELD_NAME  [FE]                    ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {      [BUGGY]  _reportError( "Current  token( "+getClass().getName()  + ")not  a  value ",  JsonToken.FIELD_NAME);  [BUGGY]      pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	261	261	2	replace	_reportError( "Current  token( "+getClass().getName()  + ")not  a  value ",  JsonToken.FIELD_NAME);	  _reportError(   "Current    token(   "+getClass().getName()    +   ")not    a    value   ",    JsonToken.VALUE_NUMBER_ERROR);    	non-compiled	[CE]  cannot  find  symbol  FIELD_NAME	155	None	replace
159	[BUG]  [BUGGY]  _reportError( "Current  token( "+getMessage()  + ")not  a  value. ",  JsonToken.NAME);  [CE]  cannot  find  symbol  [FE]                ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {      [BUGGY]  _reportError( "Current  token( "+getMessage()  + ")not  a  value. ",  JsonToken.NAME);  [BUGGY]      pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	261	261	2	replace	_reportError( "Current  token( "+getMessage()  + ")not  a  value. ",  JsonToken.NAME);	  _reportError(   "Current    token(   "+getMessage()    +   ")not    a    value   ",    JsonToken.NAME);    	non-compiled	[CE]  cannot  find  symbol	143	None	replace
160	[BUG]  [BUGGY]  pathIndices[stackSize  -  1]  =  JsonToken.VALUE_NULL;  [CE]  cannot  find  symbol  VALUE_NULL  [FE]                      ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {      [BUGGY]  pathIndices[stackSize  -  1]  =  JsonToken.VALUE_NULL;  [BUGGY]      pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	261	261	2	replace	pathIndices[stackSize  -  1]  =  JsonToken.VALUE_NULL;	  pathIndices[stackSize    -    1]    =       "null   ";    	non-compiled	[CE]  cannot  find  symbol  VALUE_NULL	33	None	replace
161	[BUG]  [BUGGY]  pathIndices[stackSize  -  1]  =   "null ",  JsonToken.VALUE_NULL;  [CE]  [FE]                        ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {      [BUGGY]  pathIndices[stackSize  -  1]  =   "null ",  JsonToken.VALUE_NULL;  [BUGGY]      pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	261	261	2	replace	pathIndices[stackSize  -  1]  =   "null ",  JsonToken.VALUE_NULL;	  pathIndices[stackSize    -    1]    =       "null   ";    	non-compiled	[CE]  	33	None	replace
162	[BUG]  [BUGGY]  pathIndices[stackSize  -  1]  =   "null ",  JsonToken.VALUE_NULL);  [CE]  [FE]                          ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {      [BUGGY]  pathIndices[stackSize  -  1]  =   "null ",  JsonToken.VALUE_NULL);  [BUGGY]      pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	261	261	2	replace	pathIndices[stackSize  -  1]  =   "null ",  JsonToken.VALUE_NULL);	  pathIndices[stackSize    -    1]    =       "null   ";    	non-compiled	[CE]  	33	None	replace
163	[BUG]  [BUGGY]  Validate.notEmpty(stack);  [CE]  cannot  find  symbol  Validate  [FE]                            ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {      [BUGGY]  Validate.notEmpty(stack);  [BUGGY]      pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	261	261	2	replace	Validate.notEmpty(stack);	  Validate.notNull(stack);    	non-compiled	[CE]  cannot  find  symbol  Validate	106	None	replace
164	[BUG]  [BUGGY]  Validate.notEmpty(pathNames);  [CE]  cannot  find  symbol  Validate  [FE]                              ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {      [BUGGY]  Validate.notEmpty(pathNames);  [BUGGY]      pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	261	261	2	replace	Validate.notEmpty(pathNames);	  Validate.notNull(stack);    	non-compiled	[CE]  cannot  find  symbol  Validate	106	None	replace
165	[BUG]  [BUGGY]  Validate.notNull(pathIndices);  [CE]  cannot  find  symbol  Validate  [FE]                                ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {      [BUGGY]  Validate.notNull(pathIndices);  [BUGGY]      pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	261	261	2	replace	Validate.notNull(pathIndices);	  Validate.notNull(stack);    	non-compiled	[CE]  cannot  find  symbol  Validate	106	None	replace
166	[BUG]  [BUGGY]  Validate.notNull(null);  [CE]  cannot  find  symbol  Validate  [FE]                                  ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {      [BUGGY]  Validate.notNull(null);  [BUGGY]      pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	261	261	2	replace	Validate.notNull(null);	  Validate.notNull(stack);    	non-compiled	[CE]  cannot  find  symbol  Validate	106	None	replace
167	[BUG]  [BUGGY]  Validate.notEmpty(stackSize);  [CE]  cannot  find  symbol  Validate  [FE]                                    ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {      [BUGGY]  Validate.notEmpty(stackSize);  [BUGGY]      pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	261	261	2	replace	Validate.notEmpty(stackSize);	  Validate.notNull(stack);    	non-compiled	[CE]  cannot  find  symbol  Validate	106	None	replace
168	[BUG]  [BUGGY]  connectToPossibleExceptionHandler(null,  JsonToken.END_OBJECT,  null);  [CE]  cannot  find  symbol  [FE]                      ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {      [BUGGY]  connectToPossibleExceptionHandler(null,  JsonToken.END_OBJECT,  null);  [BUGGY]      pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	261	261	2	replace	connectToPossibleExceptionHandler(null,  JsonToken.END_OBJECT,  null);	  connectToPossibleExceptionHandler(null,    JsonToken.END_OBJECT);    	non-compiled	[CE]  cannot  find  symbol	9	None	replace
169	[BUG]  [BUGGY]  connectToPossibleExceptionHandler(null,  JsonToken.END_OBJECT,  SENTINEL_CLOSED);  [CE]  cannot  find  symbol  [FE]                        ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {      [BUGGY]  connectToPossibleExceptionHandler(null,  JsonToken.END_OBJECT,  SENTINEL_CLOSED);  [BUGGY]      pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	261	261	2	replace	connectToPossibleExceptionHandler(null,  JsonToken.END_OBJECT,  SENTINEL_CLOSED);	  connectToPossibleExceptionHandler(null,    JsonToken.END_OBJECT);    	non-compiled	[CE]  cannot  find  symbol	9	None	replace
170	[BUG]  [BUGGY]  connectToPossibleExceptionHandler(jsonToken.END_OBJECT,  JsonToken.END_OBJECT);  [CE]  cannot  find  symbol  jsonToken  [FE]                          ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {      [BUGGY]  connectToPossibleExceptionHandler(jsonToken.END_OBJECT,  JsonToken.END_OBJECT);  [BUGGY]      pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	261	261	2	replace	connectToPossibleExceptionHandler(jsonToken.END_OBJECT,  JsonToken.END_OBJECT);	  connectToPossibleExceptionHandler(null,    JsonToken.END_OBJECT);    	non-compiled	[CE]  cannot  find  symbol  jsonToken	9	None	replace
171	[BUG]  [BUGGY]  connectToPossibleExceptionHandler(null,  JsonToken.END_OBJECT,  pathIndices);  [CE]  cannot  find  symbol  [FE]                            ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {      [BUGGY]  connectToPossibleExceptionHandler(null,  JsonToken.END_OBJECT,  pathIndices);  [BUGGY]      pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	261	261	2	replace	connectToPossibleExceptionHandler(null,  JsonToken.END_OBJECT,  pathIndices);	  connectToPossibleExceptionHandler(null,    JsonToken.END_OBJECT);    	non-compiled	[CE]  cannot  find  symbol	9	None	replace
172	[BUG]  [BUGGY]  connectToPossibleExceptionHandler(null,  JsonToken.END_OBJECT,  stackSize);  [CE]  cannot  find  symbol  [FE]                              ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {      [BUGGY]  connectToPossibleExceptionHandler(null,  JsonToken.END_OBJECT,  stackSize);  [BUGGY]      pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	261	261	2	replace	connectToPossibleExceptionHandler(null,  JsonToken.END_OBJECT,  stackSize);	  connectToPossibleExceptionHandler(null,    JsonToken.END_OBJECT);    	non-compiled	[CE]  cannot  find  symbol	9	None	replace
173	[BUG]  [BUGGY]  connectToPossibleExceptionHandler(null,  JsonToken.END_OBJECT,  nextName());  [CE]  cannot  find  symbol  [FE]                                ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {      [BUGGY]  connectToPossibleExceptionHandler(null,  JsonToken.END_OBJECT,  nextName());  [BUGGY]      pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	261	261	2	replace	connectToPossibleExceptionHandler(null,  JsonToken.END_OBJECT,  nextName());	  connectToPossibleExceptionHandler(null,    JsonToken.END_OBJECT);    	non-compiled	[CE]  cannot  find  symbol	9	None	replace
174	[BUG]  [BUGGY]  connectToPossibleExceptionHandler(true);  [CE]  cannot  find  symbol  [FE]                ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {      [BUGGY]  connectToPossibleExceptionHandler(true);  [BUGGY]      pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	261	261	2	replace	connectToPossibleExceptionHandler(true);	  connectToPossibleExceptionHandler(false);    	non-compiled	[CE]  cannot  find  symbol	114	None	replace
175	[BUG]  [BUGGY]  connectToPossibleExceptionHandler(false,  null);  [CE]  cannot  find  symbol  [FE]                  ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {      [BUGGY]  connectToPossibleExceptionHandler(false,  null);  [BUGGY]      pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	261	261	2	replace	connectToPossibleExceptionHandler(false,  null);	  connectToPossibleExceptionHandler(false);    	non-compiled	[CE]  cannot  find  symbol	114	None	replace
176	[BUG]  [BUGGY]  connectToPossibleExceptionHandler(false,  SENTINEL_CLOSED);  [CE]  cannot  find  symbol  [FE]                    ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {      [BUGGY]  connectToPossibleExceptionHandler(false,  SENTINEL_CLOSED);  [BUGGY]      pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	261	261	2	replace	connectToPossibleExceptionHandler(false,  SENTINEL_CLOSED);	  connectToPossibleExceptionHandler(false);    	non-compiled	[CE]  cannot  find  symbol	114	None	replace
177	[BUG]  [BUGGY]  connectToPossibleExceptionHandler(false,  false);  [CE]  cannot  find  symbol  [FE]                      ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {      [BUGGY]  connectToPossibleExceptionHandler(false,  false);  [BUGGY]      pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	261	261	2	replace	connectToPossibleExceptionHandler(false,  false);	  connectToPossibleExceptionHandler(false);    	non-compiled	[CE]  cannot  find  symbol	114	None	replace
178	[BUG]  [BUGGY]  connectToPossibleExceptionHandler(false,  JsonToken.START_OBJECT);  [CE]  cannot  find  symbol  START_OBJECT  [FE]                        ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {      [BUGGY]  connectToPossibleExceptionHandler(false,  JsonToken.START_OBJECT);  [BUGGY]      pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	261	261	2	replace	connectToPossibleExceptionHandler(false,  JsonToken.START_OBJECT);	  connectToPossibleExceptionHandler(false);    	non-compiled	[CE]  cannot  find  symbol  START_OBJECT	114	None	replace
179	[BUG]  [BUGGY]  connectToPossibleExceptionHandler(false,  true);  [CE]  cannot  find  symbol  [FE]                          ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {      [BUGGY]  connectToPossibleExceptionHandler(false,  true);  [BUGGY]      pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	261	261	2	replace	connectToPossibleExceptionHandler(false,  true);	  connectToPossibleExceptionHandler(false);    	non-compiled	[CE]  cannot  find  symbol	114	None	replace
180	[BUG]  [BUGGY]  [FE]  java.lang.IllegalArgumentException:    [FE]    java.lang.IllegalArgumentException:      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {      [BUGGY]  if(stackSize    >    0)    {    popStack();    }    else    {    throw    new    IllegalArgumentException(     "     ");    }    if(stackSize  >  0)  {  popStack();  }  else  {  throw  new  IllegalArgumentException(   ",   ");  }  if(stackSize  >  0)  {  popStack();  }  else  {  throw  new  IllegalArgumentException( "   ");  }  [BUGGY]      pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	261	261	2	add	if(stackSize        >        0)        {        popStack();        }        else        {        throw        new        IllegalArgumentException(       "       ");        }        if(stackSize    >    0)    {    popStack();    }    else    {    throw    new    IllegalArgumentException(   ",   ");    }    if(stackSize  >  0)  {  popStack();  }  else  {  throw  new  IllegalArgumentException( "   ");  }	  	compilable	  [FE]  java.lang.IllegalArgumentException:    	17	2	add
181	[BUG]  [BUGGY]  if(stackSize    >    0)    {    popStack();    }    else    {    throw    new    IllegalArgumentException(     "     ");    }    if(stackSize  >  0)  {  popStack();  }  else  {  throw  new  IllegalArgumentException(   ",   ");  }  if(stackSize  >  0)  {  popStack();  }  else  {  throw  new  IllegalArgumentException( "   ");  }  [FE]  java.lang.IllegalArgumentException:    [FE]    java.lang.IllegalArgumentException:      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {      [BUGGY]  if(stackSize    >    0)    {    popStack();    }    else    {    throw    new    IllegalArgumentException(     "     ");    }    if(stackSize  >  0)  {  popStack();  }  else  {  throw  new  IllegalArgumentException(   ",   ");  }  if(stackSize  >  0)  {  popStack();  }  else  {  throw  new  IllegalArgumentException( "   ");  }  [BUGGY]      pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	261	261	2	replace	if(stackSize        >        0)        {        popStack();        }        else        {        throw        new        IllegalArgumentException(       "       ");        }        if(stackSize    >    0)    {    popStack();    }    else    {    throw    new    IllegalArgumentException(   ",   ");    }    if(stackSize  >  0)  {  popStack();  }  else  {  throw  new  IllegalArgumentException( "   ");  }	  	compilable	  [FE]  java.lang.IllegalArgumentException:    	17	2	add
182	[BUG]  [BUGGY]  [FE]  java.lang.IllegalArgumentException:    [FE]      java.lang.IllegalArgumentException:      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {      [BUGGY]  if(stackSize    >    0)    {    popStack();    }    else    {    throw    new    IllegalArgumentException(     "     ");    }    if(stackSize  >  0)  {  popStack();  }  else  {  throw  new  IllegalArgumentException(   ",   ");  }  if(stackSize  >  0)  {  popStack();  }  else  {  throw  new  IllegalArgumentException( ", ");  }  [BUGGY]      pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	261	261	2	add	if(stackSize        >        0)        {        popStack();        }        else        {        throw        new        IllegalArgumentException(       "       ");        }        if(stackSize    >    0)    {    popStack();    }    else    {    throw    new    IllegalArgumentException(   ",   ");    }    if(stackSize  >  0)  {  popStack();  }  else  {  throw  new  IllegalArgumentException( ", ");  }	  	compilable	  [FE]  java.lang.IllegalArgumentException:    	17	2	add
183	[BUG]  [BUGGY]  if(stackSize    >    0)    {    popStack();    }    else    {    throw    new    IllegalArgumentException(     "     ");    }    if(stackSize  >  0)  {  popStack();  }  else  {  throw  new  IllegalArgumentException(   ",   ");  }  if(stackSize  >  0)  {  popStack();  }  else  {  throw  new  IllegalArgumentException( ", ");  }  [FE]  java.lang.IllegalArgumentException:    [FE]      java.lang.IllegalArgumentException:      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {      [BUGGY]  if(stackSize    >    0)    {    popStack();    }    else    {    throw    new    IllegalArgumentException(     "     ");    }    if(stackSize  >  0)  {  popStack();  }  else  {  throw  new  IllegalArgumentException(   ",   ");  }  if(stackSize  >  0)  {  popStack();  }  else  {  throw  new  IllegalArgumentException( ", ");  }  [BUGGY]      pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	261	261	2	replace	if(stackSize        >        0)        {        popStack();        }        else        {        throw        new        IllegalArgumentException(       "       ");        }        if(stackSize    >    0)    {    popStack();    }    else    {    throw    new    IllegalArgumentException(   ",   ");    }    if(stackSize  >  0)  {  popStack();  }  else  {  throw  new  IllegalArgumentException( ", ");  }	  	compilable	  [FE]  java.lang.IllegalArgumentException:    	17	2	add
184	[BUG]  [BUGGY]  if(stackSize    >    0)    {    popStack();    }    else    {    throw    new    IllegalArgumentException(     "     ");    }    if(stackSize  >  0)  {  popStack();  }  else  {  throw  new  IllegalArgumentException(   ",   ");  }  if(stackSize  >  0)  {  popStack();  }  else  {  throw  new  IllegalArgumentException( " ",   ");  }  [CE]  unclosed  string  literal  [FE]        java.lang.IllegalArgumentException:      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {      [BUGGY]  if(stackSize    >    0)    {    popStack();    }    else    {    throw    new    IllegalArgumentException(     "     ");    }    if(stackSize  >  0)  {  popStack();  }  else  {  throw  new  IllegalArgumentException(   ",   ");  }  if(stackSize  >  0)  {  popStack();  }  else  {  throw  new  IllegalArgumentException( " ",   ");  }  [BUGGY]      pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	261	261	2	replace	if(stackSize        >        0)        {        popStack();        }        else        {        throw        new        IllegalArgumentException(       "       ");        }        if(stackSize    >    0)    {    popStack();    }    else    {    throw    new    IllegalArgumentException(   ",   ");    }    if(stackSize  >  0)  {  popStack();  }  else  {  throw  new  IllegalArgumentException( " ",   ");  }	  	non-compiled	[CE]  unclosed  string  literal	17	None	add
185	[BUG]  [BUGGY]  [FE]  java.lang.IllegalArgumentException:    [FE]          java.lang.IllegalArgumentException:      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {      [BUGGY]  if(stackSize    >    0)    {    popStack();    }    else    {    throw    new    IllegalArgumentException(     "     ");    }    if(stackSize  >  0)  {  popStack();  }  else  {  throw  new  IllegalArgumentException(   ",   ");  }  if(stackSize  >  0)  {  popStack();  }  else  {  throw  new  IllegalArgumentException( ". ");  }  [BUGGY]      pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	261	261	2	add	if(stackSize        >        0)        {        popStack();        }        else        {        throw        new        IllegalArgumentException(       "       ");        }        if(stackSize    >    0)    {    popStack();    }    else    {    throw    new    IllegalArgumentException(   ",   ");    }    if(stackSize  >  0)  {  popStack();  }  else  {  throw  new  IllegalArgumentException( ". ");  }	  	compilable	  [FE]  java.lang.IllegalArgumentException:    	17	2	add
186	[BUG]  [BUGGY]  if(stackSize    >    0)    {    popStack();    }    else    {    throw    new    IllegalArgumentException(     "     ");    }    if(stackSize  >  0)  {  popStack();  }  else  {  throw  new  IllegalArgumentException(   ",   ");  }  if(stackSize  >  0)  {  popStack();  }  else  {  throw  new  IllegalArgumentException( ". ");  }  [FE]  java.lang.IllegalArgumentException:    [FE]          java.lang.IllegalArgumentException:      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {      [BUGGY]  if(stackSize    >    0)    {    popStack();    }    else    {    throw    new    IllegalArgumentException(     "     ");    }    if(stackSize  >  0)  {  popStack();  }  else  {  throw  new  IllegalArgumentException(   ",   ");  }  if(stackSize  >  0)  {  popStack();  }  else  {  throw  new  IllegalArgumentException( ". ");  }  [BUGGY]      pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	261	261	2	replace	if(stackSize        >        0)        {        popStack();        }        else        {        throw        new        IllegalArgumentException(       "       ");        }        if(stackSize    >    0)    {    popStack();    }    else    {    throw    new    IllegalArgumentException(   ",   ");    }    if(stackSize  >  0)  {  popStack();  }  else  {  throw  new  IllegalArgumentException( ". ");  }	  	compilable	  [FE]  java.lang.IllegalArgumentException:    	17	2	add
187	[BUG]  [BUGGY]  [FE]  java.lang.IllegalArgumentException:    [FE]            java.lang.IllegalArgumentException:      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {      [BUGGY]  if(stackSize    >    0)    {    popStack();    }    else    {    throw    new    IllegalArgumentException(     "     ");    }    if(stackSize  >  0)  {  popStack();  }  else  {  throw  new  IllegalArgumentException(   ",   ");  }  if(stackSize  >  0)  {  popStack();  }  else  {  throw  new  IllegalArgumentException( "? ");  }  [BUGGY]      pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	261	261	2	add	if(stackSize        >        0)        {        popStack();        }        else        {        throw        new        IllegalArgumentException(       "       ");        }        if(stackSize    >    0)    {    popStack();    }    else    {    throw    new    IllegalArgumentException(   ",   ");    }    if(stackSize  >  0)  {  popStack();  }  else  {  throw  new  IllegalArgumentException( "? ");  }	  	compilable	  [FE]  java.lang.IllegalArgumentException:    	17	2	add
188	[BUG]  [BUGGY]  if(stackSize    >    0)    {    popStack();    }    else    {    throw    new    IllegalArgumentException(     "     ");    }    if(stackSize  >  0)  {  popStack();  }  else  {  throw  new  IllegalArgumentException(   ",   ");  }  if(stackSize  >  0)  {  popStack();  }  else  {  throw  new  IllegalArgumentException( "? ");  }  [FE]  java.lang.IllegalArgumentException:    [FE]            java.lang.IllegalArgumentException:      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {      [BUGGY]  if(stackSize    >    0)    {    popStack();    }    else    {    throw    new    IllegalArgumentException(     "     ");    }    if(stackSize  >  0)  {  popStack();  }  else  {  throw  new  IllegalArgumentException(   ",   ");  }  if(stackSize  >  0)  {  popStack();  }  else  {  throw  new  IllegalArgumentException( "? ");  }  [BUGGY]      pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	261	261	2	replace	if(stackSize        >        0)        {        popStack();        }        else        {        throw        new        IllegalArgumentException(       "       ");        }        if(stackSize    >    0)    {    popStack();    }    else    {    throw    new    IllegalArgumentException(   ",   ");    }    if(stackSize  >  0)  {  popStack();  }  else  {  throw  new  IllegalArgumentException( "? ");  }	  	compilable	  [FE]  java.lang.IllegalArgumentException:    	17	2	add
189	[BUG]  [BUGGY]  if(stackSize    >    0)    {    popStack();    }    else    {    throw    new    IllegalArgumentException(     "     ");    }    if(stackSize  >  0)  {  popStack();  }  else  {  throw  new  IllegalArgumentException(   ",   ");  }  if(stackSize  >  0)  {  popStack();  }  else  {  throw  new  IllegalArgumentException( " ",  null ");  }  [CE]  unclosed  string  literal  [FE]              java.lang.IllegalArgumentException:      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {      [BUGGY]  if(stackSize    >    0)    {    popStack();    }    else    {    throw    new    IllegalArgumentException(     "     ");    }    if(stackSize  >  0)  {  popStack();  }  else  {  throw  new  IllegalArgumentException(   ",   ");  }  if(stackSize  >  0)  {  popStack();  }  else  {  throw  new  IllegalArgumentException( " ",  null ");  }  [BUGGY]      pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	261	261	2	replace	if(stackSize        >        0)        {        popStack();        }        else        {        throw        new        IllegalArgumentException(       "       ");        }        if(stackSize    >    0)    {    popStack();    }    else    {    throw    new    IllegalArgumentException(   ",   ");    }    if(stackSize  >  0)  {  popStack();  }  else  {  throw  new  IllegalArgumentException( " ",  null ");  }	  	non-compiled	[CE]  unclosed  string  literal	17	None	add
190	[BUG]  [BUGGY]  [FE]  IllegalArgumentException  [FE]    IllegalArgumentException    [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {      [BUGGY]  if(stackSize    >    0)    {    popStack();    }    if(stackSize  >  0)  {  popStack();  }  else  {  throw  new  IllegalArgumentException(   "   ");  }  if(stackSize  >  0)  {  popStack();  }  if(stackSize  >  0)  {  popStack();  }  else  {  throw  new  IllegalArgumentException( "   ");  }  [BUGGY]      pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	261	261	2	add	if(stackSize        >        0)        {        popStack();        }        if(stackSize    >    0)    {    popStack();    }    else    {    throw    new    IllegalArgumentException(   "   ");    }    if(stackSize  >  0)  {  popStack();  }  if(stackSize  >  0)  {  popStack();  }  else  {  throw  new  IllegalArgumentException( "   ");  }	  	compilable	  [FE]  IllegalArgumentException  	94	2	add
191	[BUG]  [BUGGY]  if(stackSize    >    0)    {    popStack();    }    if(stackSize  >  0)  {  popStack();  }  else  {  throw  new  IllegalArgumentException(   "   ");  }  if(stackSize  >  0)  {  popStack();  }  if(stackSize  >  0)  {  popStack();  }  else  {  throw  new  IllegalArgumentException( "   ");  }  [FE]  IllegalArgumentException  [FE]    IllegalArgumentException    [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {      [BUGGY]  if(stackSize    >    0)    {    popStack();    }    if(stackSize  >  0)  {  popStack();  }  else  {  throw  new  IllegalArgumentException(   "   ");  }  if(stackSize  >  0)  {  popStack();  }  if(stackSize  >  0)  {  popStack();  }  else  {  throw  new  IllegalArgumentException( "   ");  }  [BUGGY]      pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	261	261	2	replace	if(stackSize        >        0)        {        popStack();        }        if(stackSize    >    0)    {    popStack();    }    else    {    throw    new    IllegalArgumentException(   "   ");    }    if(stackSize  >  0)  {  popStack();  }  if(stackSize  >  0)  {  popStack();  }  else  {  throw  new  IllegalArgumentException( "   ");  }	  	compilable	  [FE]  IllegalArgumentException  	94	2	add
192	[BUG]  [BUGGY]  [FE]  IllegalArgumentException  [FE]      IllegalArgumentException    [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {      [BUGGY]  if(stackSize    >    0)    {    popStack();    }    if(stackSize  >  0)  {  popStack();  }  else  {  throw  new  IllegalArgumentException(   "   ");  }  if(stackSize  >  0)  {  popStack();  }  if(stackSize  >  0)  {  popStack();  }  [BUGGY]      pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	261	261	2	add	if(stackSize        >        0)        {        popStack();        }        if(stackSize    >    0)    {    popStack();    }    else    {    throw    new    IllegalArgumentException(   "   ");    }    if(stackSize  >  0)  {  popStack();  }  if(stackSize  >  0)  {  popStack();  }	  	compilable	  [FE]  IllegalArgumentException  	94	2	add
193	[BUG]  [BUGGY]  if(stackSize    >    0)    {    popStack();    }    if(stackSize  >  0)  {  popStack();  }  else  {  throw  new  IllegalArgumentException(   "   ");  }  if(stackSize  >  0)  {  popStack();  }  if(stackSize  >  0)  {  popStack();  }  [FE]  IllegalArgumentException  [FE]      IllegalArgumentException    [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {      [BUGGY]  if(stackSize    >    0)    {    popStack();    }    if(stackSize  >  0)  {  popStack();  }  else  {  throw  new  IllegalArgumentException(   "   ");  }  if(stackSize  >  0)  {  popStack();  }  if(stackSize  >  0)  {  popStack();  }  [BUGGY]      pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	261	261	2	replace	if(stackSize        >        0)        {        popStack();        }        if(stackSize    >    0)    {    popStack();    }    else    {    throw    new    IllegalArgumentException(   "   ");    }    if(stackSize  >  0)  {  popStack();  }  if(stackSize  >  0)  {  popStack();  }	  	compilable	  [FE]  IllegalArgumentException  	94	2	add
194	[BUG]  [BUGGY]  [FE]  IllegalArgumentException  [FE]        IllegalArgumentException    [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {      [BUGGY]  if(stackSize    >    0)    {    popStack();    }    if(stackSize  >  0)  {  popStack();  }  else  {  throw  new  IllegalArgumentException(   "   ");  }  if(stackSize  >  0)  {  popStack();  }  else  {  throw  new  IllegalArgumentException( "   ");  }  [BUGGY]      pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	261	261	2	add	if(stackSize        >        0)        {        popStack();        }        if(stackSize    >    0)    {    popStack();    }    else    {    throw    new    IllegalArgumentException(   "   ");    }    if(stackSize  >  0)  {  popStack();  }  else  {  throw  new  IllegalArgumentException( "   ");  }	  	compilable	  [FE]  IllegalArgumentException  	94	2	add
195	[BUG]  [BUGGY]  if(stackSize    >    0)    {    popStack();    }    if(stackSize  >  0)  {  popStack();  }  else  {  throw  new  IllegalArgumentException(   "   ");  }  if(stackSize  >  0)  {  popStack();  }  else  {  throw  new  IllegalArgumentException( "   ");  }  [FE]  IllegalArgumentException  [FE]        IllegalArgumentException    [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {      [BUGGY]  if(stackSize    >    0)    {    popStack();    }    if(stackSize  >  0)  {  popStack();  }  else  {  throw  new  IllegalArgumentException(   "   ");  }  if(stackSize  >  0)  {  popStack();  }  else  {  throw  new  IllegalArgumentException( "   ");  }  [BUGGY]      pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	261	261	2	replace	if(stackSize        >        0)        {        popStack();        }        if(stackSize    >    0)    {    popStack();    }    else    {    throw    new    IllegalArgumentException(   "   ");    }    if(stackSize  >  0)  {  popStack();  }  else  {  throw  new  IllegalArgumentException( "   ");  }	  	compilable	  [FE]  IllegalArgumentException  	94	2	add
196	[BUG]  [BUGGY]  [FE]  IllegalArgumentException  [FE]          IllegalArgumentException    [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {      [BUGGY]  if(stackSize    >    0)    {    popStack();    }    if(stackSize  >  0)  {  popStack();  }  else  {  throw  new  IllegalArgumentException(   "   ");  }  if(stackSize  >  0)  {  popStack();  }  if(stackSize  >  0)  {  popStack();  }  if(stackSize  >  0)  {  popStack();  }  [BUGGY]      pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	261	261	2	add	if(stackSize        >        0)        {        popStack();        }        if(stackSize    >    0)    {    popStack();    }    else    {    throw    new    IllegalArgumentException(   "   ");    }    if(stackSize  >  0)  {  popStack();  }  if(stackSize  >  0)  {  popStack();  }  if(stackSize  >  0)  {  popStack();  }	  	compilable	  [FE]  IllegalArgumentException  	94	2	add
197	[BUG]  [BUGGY]  if(stackSize    >    0)    {    popStack();    }    if(stackSize  >  0)  {  popStack();  }  else  {  throw  new  IllegalArgumentException(   "   ");  }  if(stackSize  >  0)  {  popStack();  }  if(stackSize  >  0)  {  popStack();  }  if(stackSize  >  0)  {  popStack();  }  [FE]  IllegalArgumentException  [FE]          IllegalArgumentException    [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {      [BUGGY]  if(stackSize    >    0)    {    popStack();    }    if(stackSize  >  0)  {  popStack();  }  else  {  throw  new  IllegalArgumentException(   "   ");  }  if(stackSize  >  0)  {  popStack();  }  if(stackSize  >  0)  {  popStack();  }  if(stackSize  >  0)  {  popStack();  }  [BUGGY]      pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	261	261	2	replace	if(stackSize        >        0)        {        popStack();        }        if(stackSize    >    0)    {    popStack();    }    else    {    throw    new    IllegalArgumentException(   "   ");    }    if(stackSize  >  0)  {  popStack();  }  if(stackSize  >  0)  {  popStack();  }  if(stackSize  >  0)  {  popStack();  }	  	compilable	  [FE]  IllegalArgumentException  	94	2	add
198	[BUG]  [BUGGY]  [FE]  IllegalArgumentException  [FE]            IllegalArgumentException    [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {      [BUGGY]  if(stackSize    >    0)    {    popStack();    }    if(stackSize  >  0)  {  popStack();  }  else  {  throw  new  IllegalArgumentException(   "   ");  }  if(stackSize  >  0)  {  popStack();  }  if(stackSize  >  0)  {  popStack();  }  if(stackSize  >  0)  {  popStack();  }  else  {  throw  new  IllegalArgumentException( "   ");  }  [BUGGY]      pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	261	261	2	add	if(stackSize        >        0)        {        popStack();        }        if(stackSize    >    0)    {    popStack();    }    else    {    throw    new    IllegalArgumentException(   "   ");    }    if(stackSize  >  0)  {  popStack();  }  if(stackSize  >  0)  {  popStack();  }  if(stackSize  >  0)  {  popStack();  }  else  {  throw  new  IllegalArgumentException( "   ");  }	  	compilable	  [FE]  IllegalArgumentException  	94	2	add
199	[BUG]  [BUGGY]  if(stackSize    >    0)    {    popStack();    }    if(stackSize  >  0)  {  popStack();  }  else  {  throw  new  IllegalArgumentException(   "   ");  }  if(stackSize  >  0)  {  popStack();  }  if(stackSize  >  0)  {  popStack();  }  if(stackSize  >  0)  {  popStack();  }  else  {  throw  new  IllegalArgumentException( "   ");  }  [FE]  IllegalArgumentException  [FE]            IllegalArgumentException    [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {      [BUGGY]  if(stackSize    >    0)    {    popStack();    }    if(stackSize  >  0)  {  popStack();  }  else  {  throw  new  IllegalArgumentException(   "   ");  }  if(stackSize  >  0)  {  popStack();  }  if(stackSize  >  0)  {  popStack();  }  if(stackSize  >  0)  {  popStack();  }  else  {  throw  new  IllegalArgumentException( "   ");  }  [BUGGY]      pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	261	261	2	replace	if(stackSize        >        0)        {        popStack();        }        if(stackSize    >    0)    {    popStack();    }    else    {    throw    new    IllegalArgumentException(   "   ");    }    if(stackSize  >  0)  {  popStack();  }  if(stackSize  >  0)  {  popStack();  }  if(stackSize  >  0)  {  popStack();  }  else  {  throw  new  IllegalArgumentException( "   ");  }	  	compilable	  [FE]  IllegalArgumentException  	94	2	add
200	[BUG]  [BUGGY]  connectToPossibleExceptionHandler(null,  null,  pathNames,  JsonToken.VALUE_NULL);  [CE]  cannot  find  symbol  VALUE_NULL  [FE]                            ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {      [BUGGY]  connectToPossibleExceptionHandler(null,  null,  pathNames,  JsonToken.VALUE_NULL);  [BUGGY]      pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	261	261	2	replace	connectToPossibleExceptionHandler(null,  null,  pathNames,  JsonToken.VALUE_NULL);	  connectToPossibleExceptionHandler(null,    null,    pathNames);    	non-compiled	[CE]  cannot  find  symbol  VALUE_NULL	79	None	replace
201	[BUG]  [BUGGY]  connectToPossibleExceptionHandler(null,  null,  pathNames,  SENTINEL_CLOSED);  [CE]  cannot  find  symbol  [FE]                              ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {      [BUGGY]  connectToPossibleExceptionHandler(null,  null,  pathNames,  SENTINEL_CLOSED);  [BUGGY]      pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	261	261	2	replace	connectToPossibleExceptionHandler(null,  null,  pathNames,  SENTINEL_CLOSED);	  connectToPossibleExceptionHandler(null,    null,    pathNames);    	non-compiled	[CE]  cannot  find  symbol	79	None	replace
202	[BUG]  [BUGGY]  connectToPossibleExceptionHandler(null,  null,  pathNames,  JsonToken.START_OBJECT);  [CE]  cannot  find  symbol  START_OBJECT  [FE]                                ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {      [BUGGY]  connectToPossibleExceptionHandler(null,  null,  pathNames,  JsonToken.START_OBJECT);  [BUGGY]      pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	261	261	2	replace	connectToPossibleExceptionHandler(null,  null,  pathNames,  JsonToken.START_OBJECT);	  connectToPossibleExceptionHandler(null,    null,    pathNames);    	non-compiled	[CE]  cannot  find  symbol  START_OBJECT	79	None	replace
203	[BUG]  [BUGGY]  connectToPossibleExceptionHandler(null,  null,  pathNames,  JsonToken.END_OBJECT);  [CE]  cannot  find  symbol  [FE]                                  ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {      [BUGGY]  connectToPossibleExceptionHandler(null,  null,  pathNames,  JsonToken.END_OBJECT);  [BUGGY]      pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	261	261	2	replace	connectToPossibleExceptionHandler(null,  null,  pathNames,  JsonToken.END_OBJECT);	  connectToPossibleExceptionHandler(null,    null,    pathNames);    	non-compiled	[CE]  cannot  find  symbol	79	None	replace
204	[BUG]  [BUGGY]  connectToPossibleExceptionHandler(null,  null,  pathNames,  JsonToken.VALUE_EMPTY);  [CE]  cannot  find  symbol  VALUE_EMPTY  [FE]                                    ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {      [BUGGY]  connectToPossibleExceptionHandler(null,  null,  pathNames,  JsonToken.VALUE_EMPTY);  [BUGGY]      pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	261	261	2	replace	connectToPossibleExceptionHandler(null,  null,  pathNames,  JsonToken.VALUE_EMPTY);	  connectToPossibleExceptionHandler(null,    null,    pathNames);    	non-compiled	[CE]  cannot  find  symbol  VALUE_EMPTY	79	None	replace
205	[BUG]  [BUGGY]  connectToPossibleExceptionHandler(null,  null,  pathNames,  false);  [CE]  cannot  find  symbol  [FE]                                      ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {      [BUGGY]  connectToPossibleExceptionHandler(null,  null,  pathNames,  false);  [BUGGY]      pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	261	261	2	replace	connectToPossibleExceptionHandler(null,  null,  pathNames,  false);	  connectToPossibleExceptionHandler(null,    null,    pathNames);    	non-compiled	[CE]  cannot  find  symbol	79	None	replace
206	[BUG]  [BUGGY]  connectToPossibleExceptionHandler(pathNames,  null,  null);  [CE]  cannot  find  symbol  [FE]                                        ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {      [BUGGY]  connectToPossibleExceptionHandler(pathNames,  null,  null);  [BUGGY]      pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	261	261	2	replace	connectToPossibleExceptionHandler(pathNames,  null,  null);	  connectToPossibleExceptionHandler(null,    null,    pathNames);    	non-compiled	[CE]  cannot  find  symbol	79	None	replace
207	[BUG]  [BUGGY]  Validate.notEmpty(pathNames[stackSize  -  1]);  [CE]  cannot  find  symbol  Validate  [FE]                    ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {      [BUGGY]  Validate.notEmpty(pathNames[stackSize  -  1]);  [BUGGY]      pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	261	261	2	replace	Validate.notEmpty(pathNames[stackSize  -  1]);	  Validate.notNull(pathNames[stackSize    -    1]);    	non-compiled	[CE]  cannot  find  symbol  Validate	201	None	replace
208	[BUG]  [BUGGY]  Validate.notNull(pathNames,  stackSize  -  1]);  [CE]  ')'  expected  [FE]                      ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {      [BUGGY]  Validate.notNull(pathNames,  stackSize  -  1]);  [BUGGY]      pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	261	261	2	replace	Validate.notNull(pathNames,  stackSize  -  1]);	  Validate.notNull(pathNames[stackSize    -    1]);    	non-compiled	[CE]  ')'  expected	201	None	replace
209	[BUG]  [BUGGY]  Validate.notNull(pathIndices[stackSize  -  1]);  [CE]  cannot  find  symbol  Validate  [FE]                        ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {      [BUGGY]  Validate.notNull(pathIndices[stackSize  -  1]);  [BUGGY]      pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	261	261	2	replace	Validate.notNull(pathIndices[stackSize  -  1]);	  Validate.notNull(pathNames[stackSize    -    1]);    	non-compiled	[CE]  cannot  find  symbol  Validate	201	None	replace
210	[BUG]  [BUGGY]  Validate.notNull(pathNames,  pathIndices[stackSize  -  1]);  [CE]  cannot  find  symbol  Validate  [FE]                          ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {      [BUGGY]  Validate.notNull(pathNames,  pathIndices[stackSize  -  1]);  [BUGGY]      pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	261	261	2	replace	Validate.notNull(pathNames,  pathIndices[stackSize  -  1]);	  Validate.notNull(pathNames[stackSize    -    1]);    	non-compiled	[CE]  cannot  find  symbol  Validate	201	None	replace
211	[BUG]  [BUGGY]  Validate.notNull(pathNames[stackSize  -  2]);  [CE]  cannot  find  symbol  Validate  [FE]                            ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {      [BUGGY]  Validate.notNull(pathNames[stackSize  -  2]);  [BUGGY]      pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	261	261	2	replace	Validate.notNull(pathNames[stackSize  -  2]);	  Validate.notNull(pathNames[stackSize    -    1]);    	non-compiled	[CE]  cannot  find  symbol  Validate	201	None	replace
212	[BUG]  [BUGGY]  Validate.notNull(pathNames[stackSize  -  1]  + "  null ");  [CE]  cannot  find  symbol  Validate  [FE]                              ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {      [BUGGY]  Validate.notNull(pathNames[stackSize  -  1]  + "  null ");  [BUGGY]      pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	261	261	2	replace	Validate.notNull(pathNames[stackSize  -  1]  + "  null ");	  Validate.notNull(pathNames[stackSize    -    1]);    	non-compiled	[CE]  cannot  find  symbol  Validate	201	None	replace
213	[BUG]  [BUGGY]  _reportError( "Current  token( "+getClass().getName()  + ")not  null. ",  JsonToken.VALUE_NULL);  [CE]  cannot  find  symbol  VALUE_NULL  [FE]                    ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {      [BUGGY]  _reportError( "Current  token( "+getClass().getName()  + ")not  null. ",  JsonToken.VALUE_NULL);  [BUGGY]      pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	261	261	2	replace	_reportError( "Current  token( "+getClass().getName()  + ")not  null. ",  JsonToken.VALUE_NULL);	  _reportError(   "Current    token(   "+getClass().getName()    +   ")not    null   ",    JsonToken.VALUE_NULL);    	non-compiled	[CE]  cannot  find  symbol  VALUE_NULL	37	None	replace
214	[BUG]  [BUGGY]  _reportError( "Current  token( "+getClass().getName()  + ")not  null ",  JsonToken.VALUE_NUMBER_ERROR,  JsonToken.VALUE_NULL);  [CE]  cannot  find  symbol  VALUE_NUMBER_ERROR  [FE]                      ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {      [BUGGY]  _reportError( "Current  token( "+getClass().getName()  + ")not  null ",  JsonToken.VALUE_NUMBER_ERROR,  JsonToken.VALUE_NULL);  [BUGGY]      pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	261	261	2	replace	_reportError( "Current  token( "+getClass().getName()  + ")not  null ",  JsonToken.VALUE_NUMBER_ERROR,  JsonToken.VALUE_NULL);	  _reportError(   "Current    token(   "+getClass().getName()    +   ")not    null   ",    JsonToken.VALUE_NULL);    	non-compiled	[CE]  cannot  find  symbol  VALUE_NUMBER_ERROR	37	None	replace
215	[BUG]  [BUGGY]  pendSize(stackSize  -  1);  [CE]  cannot  find  symbol  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {      [BUGGY]  pendSize(stackSize  -  1);  [BUGGY]      pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	261	261	2	replace	pendSize(stackSize  -  1);	  if(stackSize    >=    0)    {    popStack();    }    else    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  cannot  find  symbol	180	None	replace
216	[BUG]  [BUGGY]  StackTraceElement(stackSize  -  1);  [CE]  cannot  find  symbol  [FE]      ArrayIndexOutOfBoundsException    [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {      [BUGGY]  StackTraceElement(stackSize  -  1);  [BUGGY]      pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	261	261	2	replace	StackTraceElement(stackSize  -  1);	  if(stackSize    >=    0)    {    popStack();    }    else    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  cannot  find  symbol	180	None	replace
217	[BUG]  [BUGGY]  StackTraceElement[stackSize  -  1]  =  new  TreeMap();  [CE]  cannot  find  symbol  StackTraceElement  [FE]        ArrayIndexOutOfBoundsException    [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {      [BUGGY]  StackTraceElement[stackSize  -  1]  =  new  TreeMap();  [BUGGY]      pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	261	261	2	replace	StackTraceElement[stackSize  -  1]  =  new  TreeMap();	  if(stackSize    >=    0)    {    popStack();    }    else    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  cannot  find  symbol  StackTraceElement	180	None	replace
218	[BUG]  [BUGGY]  [FE]  ArrayIndexOutOfBoundsException  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {      [BUGGY]  if(stackSize  >=  0)  {  popStack();  }  else  {  throw  new  IllegalArgumentException(   "   ");  }  if(stackSize  >=  0)  {  popStack();  }  else  {  throw  new  IllegalArgumentException( "   ");  }  [BUGGY]      pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	261	261	2	add	if(stackSize    >=    0)    {    popStack();    }    else    {    throw    new    IllegalArgumentException(   "   ");    }    if(stackSize  >=  0)  {  popStack();  }  else  {  throw  new  IllegalArgumentException( "   ");  }	  	compilable	  [FE]  ArrayIndexOutOfBoundsException  	179	2	add
219	[BUG]  [BUGGY]  if(stackSize  >=  0)  {  popStack();  }  else  {  throw  new  IllegalArgumentException(   "   ");  }  if(stackSize  >=  0)  {  popStack();  }  else  {  throw  new  IllegalArgumentException( "   ");  }  [FE]  ArrayIndexOutOfBoundsException  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {      [BUGGY]  if(stackSize  >=  0)  {  popStack();  }  else  {  throw  new  IllegalArgumentException(   "   ");  }  if(stackSize  >=  0)  {  popStack();  }  else  {  throw  new  IllegalArgumentException( "   ");  }  [BUGGY]      pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	261	261	2	replace	if(stackSize    >=    0)    {    popStack();    }    else    {    throw    new    IllegalArgumentException(   "   ");    }    if(stackSize  >=  0)  {  popStack();  }  else  {  throw  new  IllegalArgumentException( "   ");  }	  	compilable	  [FE]  ArrayIndexOutOfBoundsException  	179	2	add
220	[BUG]  [BUGGY]  [FE]  IllegalArgumentException  [FE]      ArrayIndexOutOfBoundsException    [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {      [BUGGY]  if(stackSize  >=  0)  {  popStack();  }  else  {  throw  new  IllegalArgumentException(   "   ");  }  if(stackSize!=  0)  {  popStack();  }  else  {  throw  new  IllegalArgumentException( "   ");  }  [BUGGY]      pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	261	261	2	add	if(stackSize    >=    0)    {    popStack();    }    else    {    throw    new    IllegalArgumentException(   "   ");    }    if(stackSize!=  0)  {  popStack();  }  else  {  throw  new  IllegalArgumentException( "   ");  }	  	compilable	  [FE]  IllegalArgumentException  	179	2	add
221	[BUG]  [BUGGY]  if(stackSize  >=  0)  {  popStack();  }  else  {  throw  new  IllegalArgumentException(   "   ");  }  if(stackSize!=  0)  {  popStack();  }  else  {  throw  new  IllegalArgumentException( "   ");  }  [FE]  IllegalArgumentException  [FE]      ArrayIndexOutOfBoundsException    [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {      [BUGGY]  if(stackSize  >=  0)  {  popStack();  }  else  {  throw  new  IllegalArgumentException(   "   ");  }  if(stackSize!=  0)  {  popStack();  }  else  {  throw  new  IllegalArgumentException( "   ");  }  [BUGGY]      pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	261	261	2	replace	if(stackSize    >=    0)    {    popStack();    }    else    {    throw    new    IllegalArgumentException(   "   ");    }    if(stackSize!=  0)  {  popStack();  }  else  {  throw  new  IllegalArgumentException( "   ");  }	  	compilable	  [FE]  IllegalArgumentException  	179	2	add
222	[BUG]  [BUGGY]  if(stackSize  >=  0)  {  popStack();  }  else  {  throw  new  IllegalArgumentException(   "   ");  }  if(stackSize  >=  0)  {  popStack();  }  else  {  throw  new  IllegalArgumentException( " ".);  }  [CE]  <identifier>  expected  [FE]        ArrayIndexOutOfBoundsException    [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {      [BUGGY]  if(stackSize  >=  0)  {  popStack();  }  else  {  throw  new  IllegalArgumentException(   "   ");  }  if(stackSize  >=  0)  {  popStack();  }  else  {  throw  new  IllegalArgumentException( " ".);  }  [BUGGY]      pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	261	261	2	replace	if(stackSize    >=    0)    {    popStack();    }    else    {    throw    new    IllegalArgumentException(   "   ");    }    if(stackSize  >=  0)  {  popStack();  }  else  {  throw  new  IllegalArgumentException( " ".);  }	  	non-compiled	[CE]  <identifier>  expected	179	None	add
223	[BUG]  [BUGGY]  if(stackSize  >=  0)  {  popStack();  }  else  {  throw  new  IllegalArgumentException(   "   ");  }  if(stackSize  >>  0)  {  popStack();  }  else  {  throw  new  IllegalArgumentException( "   ");  }  [CE]  incompatible  types  [FE]          ArrayIndexOutOfBoundsException    [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {      [BUGGY]  if(stackSize  >=  0)  {  popStack();  }  else  {  throw  new  IllegalArgumentException(   "   ");  }  if(stackSize  >>  0)  {  popStack();  }  else  {  throw  new  IllegalArgumentException( "   ");  }  [BUGGY]      pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	261	261	2	replace	if(stackSize    >=    0)    {    popStack();    }    else    {    throw    new    IllegalArgumentException(   "   ");    }    if(stackSize  >>  0)  {  popStack();  }  else  {  throw  new  IllegalArgumentException( "   ");  }	  	non-compiled	[CE]  incompatible  types	179	None	add
224	[BUG]  [BUGGY]  [FE]  ArrayIndexOutOfBoundsException  [FE]            ArrayIndexOutOfBoundsException    [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {      [BUGGY]  if(stackSize  >=  0)  {  popStack();  }  else  {  throw  new  IllegalArgumentException(   "   ");  }  if(stackSize  >=  0)  {  popStack();  }  else  {  throw  new  IllegalArgumentException( ". ");  }  [BUGGY]      pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	261	261	2	add	if(stackSize    >=    0)    {    popStack();    }    else    {    throw    new    IllegalArgumentException(   "   ");    }    if(stackSize  >=  0)  {  popStack();  }  else  {  throw  new  IllegalArgumentException( ". ");  }	  	compilable	  [FE]  ArrayIndexOutOfBoundsException  	179	2	add
225	[BUG]  [BUGGY]  if(stackSize  >=  0)  {  popStack();  }  else  {  throw  new  IllegalArgumentException(   "   ");  }  if(stackSize  >=  0)  {  popStack();  }  else  {  throw  new  IllegalArgumentException( ". ");  }  [FE]  ArrayIndexOutOfBoundsException  [FE]            ArrayIndexOutOfBoundsException    [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {      [BUGGY]  if(stackSize  >=  0)  {  popStack();  }  else  {  throw  new  IllegalArgumentException(   "   ");  }  if(stackSize  >=  0)  {  popStack();  }  else  {  throw  new  IllegalArgumentException( ". ");  }  [BUGGY]      pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	261	261	2	replace	if(stackSize    >=    0)    {    popStack();    }    else    {    throw    new    IllegalArgumentException(   "   ");    }    if(stackSize  >=  0)  {  popStack();  }  else  {  throw  new  IllegalArgumentException( ". ");  }	  	compilable	  [FE]  ArrayIndexOutOfBoundsException  	179	2	add
226	[BUG]  [BUGGY]  [FE]  ArrayIndexOutOfBoundsException  [FE]              ArrayIndexOutOfBoundsException    [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {      [BUGGY]  if(stackSize  >=  0)  {  popStack();  }  else  {  throw  new  IllegalArgumentException(   "   ");  }  if(stackSize  ==  0)  {  popStack();  }  else  {  throw  new  IllegalArgumentException( "   ");  }  [BUGGY]      pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	261	261	2	add	if(stackSize    >=    0)    {    popStack();    }    else    {    throw    new    IllegalArgumentException(   "   ");    }    if(stackSize  ==  0)  {  popStack();  }  else  {  throw  new  IllegalArgumentException( "   ");  }	  	compilable	  [FE]  ArrayIndexOutOfBoundsException  	179	2	add
227	[BUG]  [BUGGY]  if(stackSize  >=  0)  {  popStack();  }  else  {  throw  new  IllegalArgumentException(   "   ");  }  if(stackSize  ==  0)  {  popStack();  }  else  {  throw  new  IllegalArgumentException( "   ");  }  [FE]  ArrayIndexOutOfBoundsException  [FE]              ArrayIndexOutOfBoundsException    [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {      [BUGGY]  if(stackSize  >=  0)  {  popStack();  }  else  {  throw  new  IllegalArgumentException(   "   ");  }  if(stackSize  ==  0)  {  popStack();  }  else  {  throw  new  IllegalArgumentException( "   ");  }  [BUGGY]      pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	261	261	2	replace	if(stackSize    >=    0)    {    popStack();    }    else    {    throw    new    IllegalArgumentException(   "   ");    }    if(stackSize  ==  0)  {  popStack();  }  else  {  throw  new  IllegalArgumentException( "   ");  }	  	compilable	  [FE]  ArrayIndexOutOfBoundsException  	179	2	add
228	[BUG]  [BUGGY]  Validate.notEmpty(result);  [CE]  cannot  find  symbol  result  [FE]                        ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {      [BUGGY]  Validate.notEmpty(result);  [BUGGY]      pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	261	261	2	replace	Validate.notEmpty(result);	  Validate.notNull(stackSize);    	non-compiled	[CE]  cannot  find  symbol  result	104	None	replace
229	[BUG]  [BUGGY]  Validate.notNull(nextName());  [CE]  cannot  find  symbol  Validate  [FE]                          ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {      [BUGGY]  Validate.notNull(nextName());  [BUGGY]      pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	261	261	2	replace	Validate.notNull(nextName());	  Validate.notNull(stackSize);    	non-compiled	[CE]  cannot  find  symbol  Validate	104	None	replace
230	[BUG]  [BUGGY]  connectToPossibleExceptionHandler(pathNames,  SENTINEL_CLOSED);  [CE]  cannot  find  symbol  [FE]                  ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {      [BUGGY]  connectToPossibleExceptionHandler(pathNames,  SENTINEL_CLOSED);  [BUGGY]      pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	261	261	2	replace	connectToPossibleExceptionHandler(pathNames,  SENTINEL_CLOSED);	  connectToPossibleExceptionHandler(pathNames);    	non-compiled	[CE]  cannot  find  symbol	7	None	replace
231	[BUG]  [BUGGY]  connectToPossibleExceptionHandler(pathNames,  false);  [CE]  cannot  find  symbol  [FE]                    ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {      [BUGGY]  connectToPossibleExceptionHandler(pathNames,  false);  [BUGGY]      pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	261	261	2	replace	connectToPossibleExceptionHandler(pathNames,  false);	  connectToPossibleExceptionHandler(pathNames);    	non-compiled	[CE]  cannot  find  symbol	7	None	replace
232	[BUG]  [BUGGY]  connectToPossibleExceptionHandler(this.pathNames);  [CE]  cannot  find  symbol  [FE]                      ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {      [BUGGY]  connectToPossibleExceptionHandler(this.pathNames);  [BUGGY]      pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	261	261	2	replace	connectToPossibleExceptionHandler(this.pathNames);	  connectToPossibleExceptionHandler(pathNames);    	non-compiled	[CE]  cannot  find  symbol	7	None	replace
233	[BUG]  [BUGGY]  patterns[stackSize  -  1]  =  null;  [CE]  cannot  find  symbol  patterns  [FE]    IllegalArgumentException    [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {      [BUGGY]  patterns[stackSize  -  1]  =  null;  [BUGGY]      pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	261	261	2	replace	patterns[stackSize  -  1]  =  null;	  if(stackSize    >    0)    {    popStack();    }    else    {    throw    new    IllegalArgumentException(       "       ");    }    if(stackSize    >    0)    {    popStack();    }    else    {    throw    new    IllegalArgumentException(   "...   ");    }    	non-compiled	[CE]  cannot  find  symbol  patterns	16	None	replace
234	[BUG]  [BUGGY]  patterns[stackSize  -  1]  =   "null ";  [CE]  cannot  find  symbol  patterns  [FE]      IllegalArgumentException    [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {      [BUGGY]  patterns[stackSize  -  1]  =   "null ";  [BUGGY]      pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	261	261	2	replace	patterns[stackSize  -  1]  =   "null ";	  if(stackSize    >    0)    {    popStack();    }    else    {    throw    new    IllegalArgumentException(       "       ");    }    if(stackSize    >    0)    {    popStack();    }    else    {    throw    new    IllegalArgumentException(   "...   ");    }    	non-compiled	[CE]  cannot  find  symbol  patterns	16	None	replace
235	[BUG]  [BUGGY]  throwUnsupportedOperationException( " ");  [CE]  cannot  find  symbol  [FE]              ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {      [BUGGY]  throwUnsupportedOperationException( " ");  [BUGGY]      pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	261	261	2	replace	throwUnsupportedOperationException( " ");	  _throwUnsupportedOperation();    	non-compiled	[CE]  cannot  find  symbol	63	None	replace
236	[BUG]  [BUGGY]  scanUnsupportedOperation();  [CE]  cannot  find  symbol  [FE]                ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {      [BUGGY]  scanUnsupportedOperation();  [BUGGY]      pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	261	261	2	replace	scanUnsupportedOperation();	  _throwUnsupportedOperation();    	non-compiled	[CE]  cannot  find  symbol	63	None	replace
237	[BUG]  [BUGGY]  throwUnsupportedOperation();  [CE]  cannot  find  symbol  [FE]                  ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {      [BUGGY]  throwUnsupportedOperation();  [BUGGY]      pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	261	261	2	replace	throwUnsupportedOperation();	  _throwUnsupportedOperation();    	non-compiled	[CE]  cannot  find  symbol	63	None	replace
238	[BUG]  [BUGGY]  ignoreUnsupportedOperation();  [CE]  cannot  find  symbol  [FE]                    ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {      [BUGGY]  ignoreUnsupportedOperation();  [BUGGY]      pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	261	261	2	replace	ignoreUnsupportedOperation();	  _throwUnsupportedOperation();    	non-compiled	[CE]  cannot  find  symbol	63	None	replace
239	[BUG]  [BUGGY]  throwUnsupportedOperationException();  [CE]  cannot  find  symbol  [FE]                      ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {      [BUGGY]  throwUnsupportedOperationException();  [BUGGY]      pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	261	261	2	replace	throwUnsupportedOperationException();	  _throwUnsupportedOperation();    	non-compiled	[CE]  cannot  find  symbol	63	None	replace
240	[BUG]  [BUGGY]  JsonToken  t  =  _createJsonToken(JsonToken.END_ARRAY,  JsonToken.END_OBJECT);  [CE]  cannot  find  symbol  [FE]                  ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {      [BUGGY]  JsonToken  t  =  _createJsonToken(JsonToken.END_ARRAY,  JsonToken.END_OBJECT);  [BUGGY]      pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	261	261	2	replace	JsonToken  t  =  _createJsonToken(JsonToken.END_ARRAY,  JsonToken.END_OBJECT);	  JsonToken    t    =    _createJsonToken(JsonToken.END_ARRAY);    	non-compiled	[CE]  cannot  find  symbol	124	None	replace
241	[BUG]  [BUGGY]  JsonToken  t  =  _createJsonToken(JsonToken.END_OBJECT,  JsonToken.END_ARRAY);  [CE]  cannot  find  symbol  [FE]                    ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {      [BUGGY]  JsonToken  t  =  _createJsonToken(JsonToken.END_OBJECT,  JsonToken.END_ARRAY);  [BUGGY]      pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	261	261	2	replace	JsonToken  t  =  _createJsonToken(JsonToken.END_OBJECT,  JsonToken.END_ARRAY);	  JsonToken    t    =    _createJsonToken(JsonToken.END_ARRAY);    	non-compiled	[CE]  cannot  find  symbol	124	None	replace
242	[BUG]  [BUGGY]  JsonToken  t  =  _createJsonToken(JsonToken.END_OBJECT);  [CE]  cannot  find  symbol  [FE]                      ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {      [BUGGY]  JsonToken  t  =  _createJsonToken(JsonToken.END_OBJECT);  [BUGGY]      pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	261	261	2	replace	JsonToken  t  =  _createJsonToken(JsonToken.END_OBJECT);	  JsonToken    t    =    _createJsonToken(JsonToken.END_ARRAY);    	non-compiled	[CE]  cannot  find  symbol	124	None	replace
243	[BUG]  [BUGGY]  JsonToken  t  =  _createJsonToken(JsonToken.END_ARRAY,  pathNames);  [CE]  cannot  find  symbol  [FE]                        ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {      [BUGGY]  JsonToken  t  =  _createJsonToken(JsonToken.END_ARRAY,  pathNames);  [BUGGY]      pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	261	261	2	replace	JsonToken  t  =  _createJsonToken(JsonToken.END_ARRAY,  pathNames);	  JsonToken    t    =    _createJsonToken(JsonToken.END_ARRAY);    	non-compiled	[CE]  cannot  find  symbol	124	None	replace
244	[BUG]  [BUGGY]  JsonToken  t  =  _createJsonToken(JsonToken.END_ARRAY,  JsonToken.START_OBJECT);  [CE]  cannot  find  symbol  START_OBJECT  [FE]                          ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {      [BUGGY]  JsonToken  t  =  _createJsonToken(JsonToken.END_ARRAY,  JsonToken.START_OBJECT);  [BUGGY]      pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	261	261	2	replace	JsonToken  t  =  _createJsonToken(JsonToken.END_ARRAY,  JsonToken.START_OBJECT);	  JsonToken    t    =    _createJsonToken(JsonToken.END_ARRAY);    	non-compiled	[CE]  cannot  find  symbol  START_OBJECT	124	None	replace
245	[BUG]  [BUGGY]  JsonToken  t  =  _createJsonToken(JsonToken.END_ARRAY,  JsonToken.END_NAME);  [CE]  cannot  find  symbol  END_NAME  [FE]                            ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {      [BUGGY]  JsonToken  t  =  _createJsonToken(JsonToken.END_ARRAY,  JsonToken.END_NAME);  [BUGGY]      pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	261	261	2	replace	JsonToken  t  =  _createJsonToken(JsonToken.END_ARRAY,  JsonToken.END_NAME);	  JsonToken    t    =    _createJsonToken(JsonToken.END_ARRAY);    	non-compiled	[CE]  cannot  find  symbol  END_NAME	124	None	replace
246	[BUG]  [BUGGY]  JsonToken  t  =  _createJsonToken(JsonToken.START_ARRAY,  JsonToken.END_OBJECT);  [CE]  cannot  find  symbol  START_ARRAY  [FE]                              ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {      [BUGGY]  JsonToken  t  =  _createJsonToken(JsonToken.START_ARRAY,  JsonToken.END_OBJECT);  [BUGGY]      pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	261	261	2	replace	JsonToken  t  =  _createJsonToken(JsonToken.START_ARRAY,  JsonToken.END_OBJECT);	  JsonToken    t    =    _createJsonToken(JsonToken.END_ARRAY);    	non-compiled	[CE]  cannot  find  symbol  START_ARRAY	124	None	replace
247	[BUG]  [BUGGY]  connectToPeek(JsonToken.VALUE_STRING);  [CE]  cannot  find  symbol  VALUE_STRING  [FE]                        ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {      [BUGGY]  connectToPeek(JsonToken.VALUE_STRING);  [BUGGY]      pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	261	261	2	replace	connectToPeek(JsonToken.VALUE_STRING);	  connectToPeek(JsonToken.VALUE_NUMBER_EXPR_RESULT);    	non-compiled	[CE]  cannot  find  symbol  VALUE_STRING	45	None	replace
248	[BUG]  [BUGGY]  connectToPeek(JsonToken.VALUE_NUMBER_EXPR_RESULT,  SENTINEL_CLOSED);  [CE]  cannot  find  symbol  VALUE_NUMBER_EXPR_RESULT  [FE]                          ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {      [BUGGY]  connectToPeek(JsonToken.VALUE_NUMBER_EXPR_RESULT,  SENTINEL_CLOSED);  [BUGGY]      pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	261	261	2	replace	connectToPeek(JsonToken.VALUE_NUMBER_EXPR_RESULT,  SENTINEL_CLOSED);	  connectToPeek(JsonToken.VALUE_NUMBER_EXPR_RESULT);    	non-compiled	[CE]  cannot  find  symbol  VALUE_NUMBER_EXPR_RESULT	45	None	replace
249	[BUG]  [BUGGY]  connectToPeek(JsonToken.VALUE_NUMBER_EXPR_ARRAY);  [CE]  cannot  find  symbol  VALUE_NUMBER_EXPR_ARRAY  [FE]                            ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {      [BUGGY]  connectToPeek(JsonToken.VALUE_NUMBER_EXPR_ARRAY);  [BUGGY]      pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	261	261	2	replace	connectToPeek(JsonToken.VALUE_NUMBER_EXPR_ARRAY);	  connectToPeek(JsonToken.VALUE_NUMBER_EXPR_RESULT);    	non-compiled	[CE]  cannot  find  symbol  VALUE_NUMBER_EXPR_ARRAY	45	None	replace
250	[BUG]  [BUGGY]  connectToPeek(JsonToken.VALUE_NUMBER_EXPR_RESULT,  null);  [CE]  cannot  find  symbol  VALUE_NUMBER_EXPR_RESULT  [FE]                              ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {      [BUGGY]  connectToPeek(JsonToken.VALUE_NUMBER_EXPR_RESULT,  null);  [BUGGY]      pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	261	261	2	replace	connectToPeek(JsonToken.VALUE_NUMBER_EXPR_RESULT,  null);	  connectToPeek(JsonToken.VALUE_NUMBER_EXPR_RESULT);    	non-compiled	[CE]  cannot  find  symbol  VALUE_NUMBER_EXPR_RESULT	45	None	replace
251	[BUG]  [BUGGY]  connectToPeek(JsonToken.VALUE_NUMBER_EXPR_INT);  [CE]  cannot  find  symbol  VALUE_NUMBER_EXPR_INT  [FE]                                ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {      [BUGGY]  connectToPeek(JsonToken.VALUE_NUMBER_EXPR_INT);  [BUGGY]      pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	261	261	2	replace	connectToPeek(JsonToken.VALUE_NUMBER_EXPR_INT);	  connectToPeek(JsonToken.VALUE_NUMBER_EXPR_RESULT);    	non-compiled	[CE]  cannot  find  symbol  VALUE_NUMBER_EXPR_INT	45	None	replace
252	[BUG]  [BUGGY]  Validate.notNull(pathNames,  null);  [CE]  cannot  find  symbol  Validate  [FE]                              ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {      [BUGGY]  Validate.notNull(pathNames,  null);  [BUGGY]      pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	261	261	2	replace	Validate.notNull(pathNames,  null);	  Validate.notNull(pathNames);    	non-compiled	[CE]  cannot  find  symbol  Validate	101	None	replace
253	[BUG]  [BUGGY]  Validate.notNull(pathNames,  SENTINEL_CLOSED);  [CE]  cannot  find  symbol  Validate  [FE]                                ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {      [BUGGY]  Validate.notNull(pathNames,  SENTINEL_CLOSED);  [BUGGY]      pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	261	261	2	replace	Validate.notNull(pathNames,  SENTINEL_CLOSED);	  Validate.notNull(pathNames);    	non-compiled	[CE]  cannot  find  symbol  Validate	101	None	replace
254	[BUG]  [BUGGY]  Validate.notNull(pathNames,  JsonToken.VALUE_NULL);  [CE]  cannot  find  symbol  VALUE_NULL  [FE]                                  ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {      [BUGGY]  Validate.notNull(pathNames,  JsonToken.VALUE_NULL);  [BUGGY]      pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	261	261	2	replace	Validate.notNull(pathNames,  JsonToken.VALUE_NULL);	  Validate.notNull(pathNames);    	non-compiled	[CE]  cannot  find  symbol  VALUE_NULL	101	None	replace
255	[BUG]  [BUGGY]  Validate.notNull(pathNames,  JsonToken.START_OBJECT);  [CE]  cannot  find  symbol  START_OBJECT  [FE]                                    ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {      [BUGGY]  Validate.notNull(pathNames,  JsonToken.START_OBJECT);  [BUGGY]      pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	261	261	2	replace	Validate.notNull(pathNames,  JsonToken.START_OBJECT);	  Validate.notNull(pathNames);    	non-compiled	[CE]  cannot  find  symbol  START_OBJECT	101	None	replace
256	[BUG]  [BUGGY]  Validate.notNull(pathNames,  JsonToken.NAME);  [CE]  cannot  find  symbol  Validate  [FE]                                      ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {      [BUGGY]  Validate.notNull(pathNames,  JsonToken.NAME);  [BUGGY]      pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	261	261	2	replace	Validate.notNull(pathNames,  JsonToken.NAME);	  Validate.notNull(pathNames);    	non-compiled	[CE]  cannot  find  symbol  Validate	101	None	replace
257	[BUG]  [BUGGY]  JsonToken.VALUE_NULL  =  new  JsonToken(JsonToken.FIELD_NAME);  pathNames[stackSize  -  1]  =  null;  }  [CE]  ']'  expected  [FE]                ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {      [BUGGY]  JsonToken.VALUE_NULL  =  new  JsonToken(JsonToken.FIELD_NAME);  pathNames[stackSize  -  1]  =  null;  }  [BUGGY]      pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	261	261	2	replace	JsonToken.VALUE_NULL  =  new  JsonToken(JsonToken.FIELD_NAME);  pathNames[stackSize  -  1]  =  null;  }	  if(stackSize    >    1)    {    popStack();    }    else    {    JsonToken.VALUE_NULL    =    new    JsonToken(JsonToken.FIELD_NAME);    pathNames[stackSize    -    1]    =    null;    }    	non-compiled	[CE]  ']'  expected	149	None	replace
258	[BUG]  [BUGGY]  _reportError( "Current  token( "+getClass().getName()  + ")was  null,  expecting  a  value ");  [CE]  cannot  find  symbol  [FE]                      ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {      [BUGGY]  _reportError( "Current  token( "+getClass().getName()  + ")was  null,  expecting  a  value ");  [BUGGY]      pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	261	261	2	replace	_reportError( "Current  token( "+getClass().getName()  + ")was  null,  expecting  a  value ");	  _reportError(   "Current    token(   "+getClass().getName()    +   ")not    null,    expecting    a    value   ");    	non-compiled	[CE]  cannot  find  symbol	200	None	replace
259	[BUG]  [BUGGY]  _reportError( "Current  token( "+getClass().getName()  + ")not  null,  expecting  a  value ",  JsonToken.VALUE_NULL);  [CE]  cannot  find  symbol  VALUE_NULL  [FE]                        ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {      [BUGGY]  _reportError( "Current  token( "+getClass().getName()  + ")not  null,  expecting  a  value ",  JsonToken.VALUE_NULL);  [BUGGY]      pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	261	261	2	replace	_reportError( "Current  token( "+getClass().getName()  + ")not  null,  expecting  a  value ",  JsonToken.VALUE_NULL);	  _reportError(   "Current    token(   "+getClass().getName()    +   ")not    null,    expecting    a    value   ");    	non-compiled	[CE]  cannot  find  symbol  VALUE_NULL	200	None	replace
260	[BUG]  [BUGGY]  _reportError( "Current  token( "+getClass().getName()  + ")not  null,  expecting  a  value ",  JsonToken.END_OBJECT);  [CE]  cannot  find  symbol  [FE]                          ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {      [BUGGY]  _reportError( "Current  token( "+getClass().getName()  + ")not  null,  expecting  a  value ",  JsonToken.END_OBJECT);  [BUGGY]      pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	261	261	2	replace	_reportError( "Current  token( "+getClass().getName()  + ")not  null,  expecting  a  value ",  JsonToken.END_OBJECT);	  _reportError(   "Current    token(   "+getClass().getName()    +   ")not    null,    expecting    a    value   ");    	non-compiled	[CE]  cannot  find  symbol	200	None	replace
261	[BUG]  [BUGGY]  [FE]  ArrayIndexOutOfBoundsException  [FE]              ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {      [BUGGY]  if(stackSize  >  0)  {  popStack();  }  else  {  System.arraycopy(pathNames,  0,  pathNames,  1,  stackSize  -  1);  }  [BUGGY]      pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	261	261	2	add	if(stackSize  >  0)  {  popStack();  }  else  {  System.arraycopy(pathNames,  0,  pathNames,  1,  stackSize  -  1);  }	  if(stackSize    >    0)    {    popStack();    }    if(stackSize    >    0)    {    popStack();    System.arraycopy(stackNames,    0,    pathNames,    1,    stackSize    -    1);    }    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	162	2	replace
262	[BUG]  [BUGGY]  if(stackSize  >  0)  {  popStack();  }  else  {  System.arraycopy(pathNames,  0,  pathNames,  1,  stackSize  -  1);  }  [FE]  ArrayIndexOutOfBoundsException  [FE]              ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {      [BUGGY]  if(stackSize  >  0)  {  popStack();  }  else  {  System.arraycopy(pathNames,  0,  pathNames,  1,  stackSize  -  1);  }  [BUGGY]      pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	261	261	2	replace	if(stackSize  >  0)  {  popStack();  }  else  {  System.arraycopy(pathNames,  0,  pathNames,  1,  stackSize  -  1);  }	  if(stackSize    >    0)    {    popStack();    }    if(stackSize    >    0)    {    popStack();    System.arraycopy(stackNames,    0,    pathNames,    1,    stackSize    -    1);    }    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	162	2	replace
263	[BUG]  [BUGGY]  [FE]  ArrayIndexOutOfBoundsException  [FE]                ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {      [BUGGY]  if(stackSize  >  0)  {  popStack();  System.arraycopy(pathNames,  0,  pathNames,  1,  stackSize  -  1);  }  [BUGGY]      pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	261	261	2	add	if(stackSize  >  0)  {  popStack();  System.arraycopy(pathNames,  0,  pathNames,  1,  stackSize  -  1);  }	  if(stackSize    >    0)    {    popStack();    }    if(stackSize    >    0)    {    popStack();    System.arraycopy(stackNames,    0,    pathNames,    1,    stackSize    -    1);    }    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	162	2	replace
264	[BUG]  [BUGGY]  if(stackSize  >  0)  {  popStack();  System.arraycopy(pathNames,  0,  pathNames,  1,  stackSize  -  1);  }  [FE]  ArrayIndexOutOfBoundsException  [FE]                ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {      [BUGGY]  if(stackSize  >  0)  {  popStack();  System.arraycopy(pathNames,  0,  pathNames,  1,  stackSize  -  1);  }  [BUGGY]      pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	261	261	2	replace	if(stackSize  >  0)  {  popStack();  System.arraycopy(pathNames,  0,  pathNames,  1,  stackSize  -  1);  }	  if(stackSize    >    0)    {    popStack();    }    if(stackSize    >    0)    {    popStack();    System.arraycopy(stackNames,    0,    pathNames,    1,    stackSize    -    1);    }    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	162	2	replace
265	[BUG]  [BUGGY]  if(stackSize  >  0)  {  popStack();  }  else  {  System.arraycopy(stackNames,  0,  pathNames,  1,  stackSize  -  1);  }  [CE]  cannot  find  symbol  stackNames  [FE]                  ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {      [BUGGY]  if(stackSize  >  0)  {  popStack();  }  else  {  System.arraycopy(stackNames,  0,  pathNames,  1,  stackSize  -  1);  }  [BUGGY]      pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	261	261	2	replace	if(stackSize  >  0)  {  popStack();  }  else  {  System.arraycopy(stackNames,  0,  pathNames,  1,  stackSize  -  1);  }	  if(stackSize    >    0)    {    popStack();    }    if(stackSize    >    0)    {    popStack();    System.arraycopy(stackNames,    0,    pathNames,    1,    stackSize    -    1);    }    	non-compiled	[CE]  cannot  find  symbol  stackNames	162	None	replace
266	[BUG]  [BUGGY]  nextValue();  [CE]  cannot  find  symbol  [FE]              ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {      [BUGGY]  nextValue();  [BUGGY]      pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	261	261	2	replace	nextValue();	  if(stackSize    >    0)    {    nextValue();    }    	non-compiled	[CE]  cannot  find  symbol	195	None	replace
267	[BUG]  [BUGGY]  if(stackSize  >  1)  {  nextValue();  }  [CE]  cannot  find  symbol  [FE]                ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {      [BUGGY]  if(stackSize  >  1)  {  nextValue();  }  [BUGGY]      pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	261	261	2	replace	if(stackSize  >  1)  {  nextValue();  }	  if(stackSize    >    0)    {    nextValue();    }    	non-compiled	[CE]  cannot  find  symbol	195	None	replace
268	[BUG]  [BUGGY]  if(stackSize  >  1  ||  stackSize  >  0)  {  nextValue();  }  [CE]  cannot  find  symbol  [FE]                  ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {      [BUGGY]  if(stackSize  >  1  ||  stackSize  >  0)  {  nextValue();  }  [BUGGY]      pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	261	261	2	replace	if(stackSize  >  1  ||  stackSize  >  0)  {  nextValue();  }	  if(stackSize    >    0)    {    nextValue();    }    	non-compiled	[CE]  cannot  find  symbol	195	None	replace
269	[BUG]  [BUGGY]  StackSize  >  0)  {  nextValue();  }  [CE]  not  a  statement  [FE]                    ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {      [BUGGY]  StackSize  >  0)  {  nextValue();  }  [BUGGY]      pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	261	261	2	replace	StackSize  >  0)  {  nextValue();  }	  if(stackSize    >    0)    {    nextValue();    }    	non-compiled	[CE]  not  a  statement	195	None	replace
270	[BUG]  [BUGGY]  if(stackSize  <  0)  {  nextValue();  }  [CE]  cannot  find  symbol  [FE]                      ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {      [BUGGY]  if(stackSize  <  0)  {  nextValue();  }  [BUGGY]      pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	261	261	2	replace	if(stackSize  <  0)  {  nextValue();  }	  if(stackSize    >    0)    {    nextValue();    }    	non-compiled	[CE]  cannot  find  symbol	195	None	replace
271	[BUG]  [BUGGY]  if(stackSize  >=  0)  {  nextValue();  }  [CE]  cannot  find  symbol  [FE]                        ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {      [BUGGY]  if(stackSize  >=  0)  {  nextValue();  }  [BUGGY]      pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	261	261	2	replace	if(stackSize  >=  0)  {  nextValue();  }	  if(stackSize    >    0)    {    nextValue();    }    	non-compiled	[CE]  cannot  find  symbol	195	None	replace
272	[BUG]  [BUGGY]  patterns[stackSize  -  1]  =  null;  pathIndices[stackSize  -  1]  =  null;  [CE]  cannot  find  symbol  patterns  [FE]    IllegalArgumentException    [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {      [BUGGY]  patterns[stackSize  -  1]  =  null;  pathIndices[stackSize  -  1]  =  null;  [BUGGY]      pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	261	261	2	replace	patterns[stackSize  -  1]  =  null;  pathIndices[stackSize  -  1]  =  null;	  if(stackSize    >    1)    {    popStack();    }    else    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  cannot  find  symbol  patterns	176	None	replace
273	[BUG]  [BUGGY]  patterns[stackSize  -  1]  =  null;  pathNames[stackSize  -  1]  =  null;  [CE]  cannot  find  symbol  patterns  [FE]      IllegalArgumentException    [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {      [BUGGY]  patterns[stackSize  -  1]  =  null;  pathNames[stackSize  -  1]  =  null;  [BUGGY]      pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	261	261	2	replace	patterns[stackSize  -  1]  =  null;  pathNames[stackSize  -  1]  =  null;	  if(stackSize    >    1)    {    popStack();    }    else    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  cannot  find  symbol  patterns	176	None	replace
274	[BUG]  [BUGGY]  patterns[stackSize  -  1]  =  null;  pathNames[stackSize  -  1]  =   "null ";  [CE]  cannot  find  symbol  patterns  [FE]        IllegalArgumentException    [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {      [BUGGY]  patterns[stackSize  -  1]  =  null;  pathNames[stackSize  -  1]  =   "null ";  [BUGGY]      pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	261	261	2	replace	patterns[stackSize  -  1]  =  null;  pathNames[stackSize  -  1]  =   "null ";	  if(stackSize    >    1)    {    popStack();    }    else    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  cannot  find  symbol  patterns	176	None	replace
275	[BUG]  [BUGGY]  patterns[stackSize  -  1]  =  null;  pathIndices[stackSize  -  1]++;  [CE]  cannot  find  symbol  patterns  [FE]          IllegalArgumentException    [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {      [BUGGY]  patterns[stackSize  -  1]  =  null;  pathIndices[stackSize  -  1]++;  [BUGGY]      pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	261	261	2	replace	patterns[stackSize  -  1]  =  null;  pathIndices[stackSize  -  1]++;	  if(stackSize    >    1)    {    popStack();    }    else    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  cannot  find  symbol  patterns	176	None	replace
276	[BUG]  [BUGGY]  [FE]  IllegalStateException  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {      [BUGGY]  if(stackSize  >  0)  {  popStack();  }  else  {  JsonToken  START_OBJECT  =  null;  nextName();  pathNames[stackSize  -  1]  =  null;  }  if(stackSize  >  0)  {  popStack();  }  else  {  JsonToken  START_OBJECT  =  null;  nextName();  pathNames[stackSize  -  1]  =  null;  }  [BUGGY]      pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	261	261	2	add	if(stackSize    >    0)    {    popStack();    }    else    {    JsonToken    START_OBJECT    =    null;    nextName();    pathNames[stackSize    -    1]    =    null;    }    if(stackSize  >  0)  {  popStack();  }  else  {  JsonToken  START_OBJECT  =  null;  nextName();  pathNames[stackSize  -  1]  =  null;  }	  	compilable	  [FE]  IllegalStateException  	138	2	add
277	[BUG]  [BUGGY]  if(stackSize  >  0)  {  popStack();  }  else  {  JsonToken  START_OBJECT  =  null;  nextName();  pathNames[stackSize  -  1]  =  null;  }  if(stackSize  >  0)  {  popStack();  }  else  {  JsonToken  START_OBJECT  =  null;  nextName();  pathNames[stackSize  -  1]  =  null;  }  [FE]  IllegalStateException  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {      [BUGGY]  if(stackSize  >  0)  {  popStack();  }  else  {  JsonToken  START_OBJECT  =  null;  nextName();  pathNames[stackSize  -  1]  =  null;  }  if(stackSize  >  0)  {  popStack();  }  else  {  JsonToken  START_OBJECT  =  null;  nextName();  pathNames[stackSize  -  1]  =  null;  }  [BUGGY]      pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	261	261	2	replace	if(stackSize    >    0)    {    popStack();    }    else    {    JsonToken    START_OBJECT    =    null;    nextName();    pathNames[stackSize    -    1]    =    null;    }    if(stackSize  >  0)  {  popStack();  }  else  {  JsonToken  START_OBJECT  =  null;  nextName();  pathNames[stackSize  -  1]  =  null;  }	  	compilable	  [FE]  IllegalStateException  	138	2	add
278	[BUG]  [BUGGY]  [FE]  ArrayIndexOutOfBoundsException  [FE]      ArrayIndexOutOfBoundsException    [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {      [BUGGY]  if(stackSize  >  0)  {  popStack();  }  else  {  JsonToken  START_OBJECT  =  null;  nextName();  pathNames[stackSize  -  1]  =  null;  }  if(stackSize  >  0)  {  popStack();  }  else  {  JsonToken  START_OBJECT  =  null;  pathNames[stackSize  -  1]  =  null;  }  [BUGGY]      pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	261	261	2	add	if(stackSize    >    0)    {    popStack();    }    else    {    JsonToken    START_OBJECT    =    null;    nextName();    pathNames[stackSize    -    1]    =    null;    }    if(stackSize  >  0)  {  popStack();  }  else  {  JsonToken  START_OBJECT  =  null;  pathNames[stackSize  -  1]  =  null;  }	  	compilable	  [FE]  ArrayIndexOutOfBoundsException  	138	2	add
279	[BUG]  [BUGGY]  if(stackSize  >  0)  {  popStack();  }  else  {  JsonToken  START_OBJECT  =  null;  nextName();  pathNames[stackSize  -  1]  =  null;  }  if(stackSize  >  0)  {  popStack();  }  else  {  JsonToken  START_OBJECT  =  null;  pathNames[stackSize  -  1]  =  null;  }  [FE]  ArrayIndexOutOfBoundsException  [FE]      ArrayIndexOutOfBoundsException    [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {      [BUGGY]  if(stackSize  >  0)  {  popStack();  }  else  {  JsonToken  START_OBJECT  =  null;  nextName();  pathNames[stackSize  -  1]  =  null;  }  if(stackSize  >  0)  {  popStack();  }  else  {  JsonToken  START_OBJECT  =  null;  pathNames[stackSize  -  1]  =  null;  }  [BUGGY]      pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	261	261	2	replace	if(stackSize    >    0)    {    popStack();    }    else    {    JsonToken    START_OBJECT    =    null;    nextName();    pathNames[stackSize    -    1]    =    null;    }    if(stackSize  >  0)  {  popStack();  }  else  {  JsonToken  START_OBJECT  =  null;  pathNames[stackSize  -  1]  =  null;  }	  	compilable	  [FE]  ArrayIndexOutOfBoundsException  	138	2	add
280	[BUG]  [BUGGY]  if(stackSize  >  0)  {  popStack();  }  else  {  JsonToken  START_OBJECT  =  null;  nextName();  pathNames[stackSize  -  1]  =  null;  }  if(stackSize  >  0)  {  popStack();  }  else  {  JsonToken  START_OBJECT  =  null;  [CE]  ';'  expected  [FE]        ArrayIndexOutOfBoundsException    [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {      [BUGGY]  if(stackSize  >  0)  {  popStack();  }  else  {  JsonToken  START_OBJECT  =  null;  nextName();  pathNames[stackSize  -  1]  =  null;  }  if(stackSize  >  0)  {  popStack();  }  else  {  JsonToken  START_OBJECT  =  null;  [BUGGY]      pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	261	261	2	replace	if(stackSize    >    0)    {    popStack();    }    else    {    JsonToken    START_OBJECT    =    null;    nextName();    pathNames[stackSize    -    1]    =    null;    }    if(stackSize  >  0)  {  popStack();  }  else  {  JsonToken  START_OBJECT  =  null;	  	non-compiled	[CE]  ';'  expected	138	None	add
281	[BUG]  [BUGGY]  if(stackSize  >  0)  {  popStack();  }  else  {  JsonToken  START_OBJECT  =  null;  nextName();  pathNames[stackSize  -  1]  =  null;  }  if(stackSize  >  0)  {  popStack();  }  else  {  JsonToken  START_OBJECT  =  null;  lastName();  pathNames[stackSize  -  1]  =  null;  }  [CE]  cannot  find  symbol  [FE]          ArrayIndexOutOfBoundsException    [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {      [BUGGY]  if(stackSize  >  0)  {  popStack();  }  else  {  JsonToken  START_OBJECT  =  null;  nextName();  pathNames[stackSize  -  1]  =  null;  }  if(stackSize  >  0)  {  popStack();  }  else  {  JsonToken  START_OBJECT  =  null;  lastName();  pathNames[stackSize  -  1]  =  null;  }  [BUGGY]      pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	261	261	2	replace	if(stackSize    >    0)    {    popStack();    }    else    {    JsonToken    START_OBJECT    =    null;    nextName();    pathNames[stackSize    -    1]    =    null;    }    if(stackSize  >  0)  {  popStack();  }  else  {  JsonToken  START_OBJECT  =  null;  lastName();  pathNames[stackSize  -  1]  =  null;  }	  	non-compiled	[CE]  cannot  find  symbol	138	None	add
282	[BUG]  [BUGGY]  [FE]  IllegalStateException  [FE]            ArrayIndexOutOfBoundsException    [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {      [BUGGY]  if(stackSize  >  0)  {  popStack();  }  else  {  JsonToken  START_OBJECT  =  null;  nextName();  pathNames[stackSize  -  1]  =  null;  }  if(stackSize  >  0)  {  popStack();  }  else  {  JsonToken  START_OBJECT  =  null;  nextName();  pathNames[stackSize  -  1]  =   "null ";  }  [BUGGY]      pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	261	261	2	add	if(stackSize    >    0)    {    popStack();    }    else    {    JsonToken    START_OBJECT    =    null;    nextName();    pathNames[stackSize    -    1]    =    null;    }    if(stackSize  >  0)  {  popStack();  }  else  {  JsonToken  START_OBJECT  =  null;  nextName();  pathNames[stackSize  -  1]  =   "null ";  }	  	compilable	  [FE]  IllegalStateException  	138	2	add
283	[BUG]  [BUGGY]  if(stackSize  >  0)  {  popStack();  }  else  {  JsonToken  START_OBJECT  =  null;  nextName();  pathNames[stackSize  -  1]  =  null;  }  if(stackSize  >  0)  {  popStack();  }  else  {  JsonToken  START_OBJECT  =  null;  nextName();  pathNames[stackSize  -  1]  =   "null ";  }  [FE]  IllegalStateException  [FE]            ArrayIndexOutOfBoundsException    [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {      [BUGGY]  if(stackSize  >  0)  {  popStack();  }  else  {  JsonToken  START_OBJECT  =  null;  nextName();  pathNames[stackSize  -  1]  =  null;  }  if(stackSize  >  0)  {  popStack();  }  else  {  JsonToken  START_OBJECT  =  null;  nextName();  pathNames[stackSize  -  1]  =   "null ";  }  [BUGGY]      pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	261	261	2	replace	if(stackSize    >    0)    {    popStack();    }    else    {    JsonToken    START_OBJECT    =    null;    nextName();    pathNames[stackSize    -    1]    =    null;    }    if(stackSize  >  0)  {  popStack();  }  else  {  JsonToken  START_OBJECT  =  null;  nextName();  pathNames[stackSize  -  1]  =   "null ";  }	  	compilable	  [FE]  IllegalStateException  	138	2	add
284	[BUG]  [BUGGY]  if(stackSize  >  0)  {  popStack();  }  else  {  JsonToken  START_OBJECT  =  null;  nextName();  pathNames[stackSize  -  1]  =  null;  }  if(stackSize  >  0)  {  popStack();  }  else  {  JsonToken  START_OBJECT  =  null;  nextName();  paths[stackSize  -  1]  =  null;  }  [CE]  cannot  find  symbol  paths  [FE]              ArrayIndexOutOfBoundsException    [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {      [BUGGY]  if(stackSize  >  0)  {  popStack();  }  else  {  JsonToken  START_OBJECT  =  null;  nextName();  pathNames[stackSize  -  1]  =  null;  }  if(stackSize  >  0)  {  popStack();  }  else  {  JsonToken  START_OBJECT  =  null;  nextName();  paths[stackSize  -  1]  =  null;  }  [BUGGY]      pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	261	261	2	replace	if(stackSize    >    0)    {    popStack();    }    else    {    JsonToken    START_OBJECT    =    null;    nextName();    pathNames[stackSize    -    1]    =    null;    }    if(stackSize  >  0)  {  popStack();  }  else  {  JsonToken  START_OBJECT  =  null;  nextName();  paths[stackSize  -  1]  =  null;  }	  	non-compiled	[CE]  cannot  find  symbol  paths	138	None	add
285	[BUG]  [BUGGY]  if(stackSize  >  0)  {  popStack();  }  else  {  JsonToken  START_OBJECT  =  null;  nextName();  pathNames[stackSize  -  1]  =  null;  }  if(stackSize  >  0)  {  popStack();  }  else  {  JsonToken  START_OBJECT  =  null;  nextName();  pathIndices[stackSize  -  1]  =  null;  }  [CE]  incompatible  types  [FE]                ArrayIndexOutOfBoundsException    [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {      [BUGGY]  if(stackSize  >  0)  {  popStack();  }  else  {  JsonToken  START_OBJECT  =  null;  nextName();  pathNames[stackSize  -  1]  =  null;  }  if(stackSize  >  0)  {  popStack();  }  else  {  JsonToken  START_OBJECT  =  null;  nextName();  pathIndices[stackSize  -  1]  =  null;  }  [BUGGY]      pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	261	261	2	replace	if(stackSize    >    0)    {    popStack();    }    else    {    JsonToken    START_OBJECT    =    null;    nextName();    pathNames[stackSize    -    1]    =    null;    }    if(stackSize  >  0)  {  popStack();  }  else  {  JsonToken  START_OBJECT  =  null;  nextName();  pathIndices[stackSize  -  1]  =  null;  }	  	non-compiled	[CE]  incompatible  types	138	None	add
286	[BUG]  [BUGGY]  [FE]  ArrayIndexOutOfBoundsException  [FE]                  ArrayIndexOutOfBoundsException    [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {      [BUGGY]  if(stackSize  >  0)  {  popStack();  }  else  {  JsonToken  START_OBJECT  =  null;  nextName();  pathNames[stackSize  -  1]  =  null;  }  if(stackSize  >  0)  {  popStack();  }  else  {  JsonToken  START_OBJECT  =  null;  pathNames[stackSize  -  1]  =   "null ";  }  [BUGGY]      pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	261	261	2	add	if(stackSize    >    0)    {    popStack();    }    else    {    JsonToken    START_OBJECT    =    null;    nextName();    pathNames[stackSize    -    1]    =    null;    }    if(stackSize  >  0)  {  popStack();  }  else  {  JsonToken  START_OBJECT  =  null;  pathNames[stackSize  -  1]  =   "null ";  }	  	compilable	  [FE]  ArrayIndexOutOfBoundsException  	138	2	add
287	[BUG]  [BUGGY]  if(stackSize  >  0)  {  popStack();  }  else  {  JsonToken  START_OBJECT  =  null;  nextName();  pathNames[stackSize  -  1]  =  null;  }  if(stackSize  >  0)  {  popStack();  }  else  {  JsonToken  START_OBJECT  =  null;  pathNames[stackSize  -  1]  =   "null ";  }  [FE]  ArrayIndexOutOfBoundsException  [FE]                  ArrayIndexOutOfBoundsException    [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {      [BUGGY]  if(stackSize  >  0)  {  popStack();  }  else  {  JsonToken  START_OBJECT  =  null;  nextName();  pathNames[stackSize  -  1]  =  null;  }  if(stackSize  >  0)  {  popStack();  }  else  {  JsonToken  START_OBJECT  =  null;  pathNames[stackSize  -  1]  =   "null ";  }  [BUGGY]      pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	261	261	2	replace	if(stackSize    >    0)    {    popStack();    }    else    {    JsonToken    START_OBJECT    =    null;    nextName();    pathNames[stackSize    -    1]    =    null;    }    if(stackSize  >  0)  {  popStack();  }  else  {  JsonToken  START_OBJECT  =  null;  pathNames[stackSize  -  1]  =   "null ";  }	  	compilable	  [FE]  ArrayIndexOutOfBoundsException  	138	2	add
288	[BUG]  [BUGGY]  connectToPossibleExceptionHandler(null,  null,  throwInternal());  [CE]  cannot  find  symbol  [FE]                      ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {      [BUGGY]  connectToPossibleExceptionHandler(null,  null,  throwInternal());  [BUGGY]      pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	261	261	2	replace	connectToPossibleExceptionHandler(null,  null,  throwInternal());	  connectToPossibleExceptionHandler(null,    throwInternal());    	non-compiled	[CE]  cannot  find  symbol	136	None	replace
289	[BUG]  [BUGGY]  connectToPossibleExceptionHandler(null,  skipValue());  [CE]  'void'  type  not  allowed  here  [FE]                        ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {      [BUGGY]  connectToPossibleExceptionHandler(null,  skipValue());  [BUGGY]      pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	261	261	2	replace	connectToPossibleExceptionHandler(null,  skipValue());	  connectToPossibleExceptionHandler(null,    throwInternal());    	non-compiled	[CE]  'void'  type  not  allowed  here	136	None	replace
290	[BUG]  [BUGGY]  connectToPossibleExceptionHandler(null,  JsonToken.END_OBJECT,  throwInternal());  [CE]  cannot  find  symbol  [FE]                          ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {      [BUGGY]  connectToPossibleExceptionHandler(null,  JsonToken.END_OBJECT,  throwInternal());  [BUGGY]      pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	261	261	2	replace	connectToPossibleExceptionHandler(null,  JsonToken.END_OBJECT,  throwInternal());	  connectToPossibleExceptionHandler(null,    throwInternal());    	non-compiled	[CE]  cannot  find  symbol	136	None	replace
291	[BUG]  [BUGGY]  connectToPossibleExceptionHandler(null,  JsonToken.START_OBJECT,  throwInternal());  [CE]  cannot  find  symbol  START_OBJECT  [FE]                            ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {      [BUGGY]  connectToPossibleExceptionHandler(null,  JsonToken.START_OBJECT,  throwInternal());  [BUGGY]      pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	261	261	2	replace	connectToPossibleExceptionHandler(null,  JsonToken.START_OBJECT,  throwInternal());	  connectToPossibleExceptionHandler(null,    throwInternal());    	non-compiled	[CE]  cannot  find  symbol  START_OBJECT	136	None	replace
292	[BUG]  [BUGGY]  connectToPossibleExceptionHandler(null,  JsonToken.END_ARRAY,  throwInternal());  [CE]  cannot  find  symbol  [FE]                              ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {      [BUGGY]  connectToPossibleExceptionHandler(null,  JsonToken.END_ARRAY,  throwInternal());  [BUGGY]      pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	261	261	2	replace	connectToPossibleExceptionHandler(null,  JsonToken.END_ARRAY,  throwInternal());	  connectToPossibleExceptionHandler(null,    throwInternal());    	non-compiled	[CE]  cannot  find  symbol	136	None	replace
293	[BUG]  [BUGGY]  connectToPossibleExceptionHandler(null,  false,  throwInternal());  [CE]  cannot  find  symbol  [FE]                                ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {      [BUGGY]  connectToPossibleExceptionHandler(null,  false,  throwInternal());  [BUGGY]      pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	261	261	2	replace	connectToPossibleExceptionHandler(null,  false,  throwInternal());	  connectToPossibleExceptionHandler(null,    throwInternal());    	non-compiled	[CE]  cannot  find  symbol	136	None	replace
294	[BUG]  [BUGGY]  connectToPeek(JsonToken.VALUE_NUMBER_FLOAT,  JsonToken.VALUE_NUMBER_INT);  [CE]  cannot  find  symbol  VALUE_NUMBER_FLOAT  [FE]                      ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {      [BUGGY]  connectToPeek(JsonToken.VALUE_NUMBER_FLOAT,  JsonToken.VALUE_NUMBER_INT);  [BUGGY]      pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	261	261	2	replace	connectToPeek(JsonToken.VALUE_NUMBER_FLOAT,  JsonToken.VALUE_NUMBER_INT);	  connectToPeek(JsonToken.VALUE_NUMBER_INT,    JsonToken.VALUE_NUMBER_FLOAT);    	non-compiled	[CE]  cannot  find  symbol  VALUE_NUMBER_FLOAT	215	None	replace
295	[BUG]  [BUGGY]  connectToPeek(JsonToken.VALUE_NUMBER,  JsonToken.VALUE_NUMBER_FLOAT);  [CE]  cannot  find  symbol  VALUE_NUMBER  [FE]                        ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {      [BUGGY]  connectToPeek(JsonToken.VALUE_NUMBER,  JsonToken.VALUE_NUMBER_FLOAT);  [BUGGY]      pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	261	261	2	replace	connectToPeek(JsonToken.VALUE_NUMBER,  JsonToken.VALUE_NUMBER_FLOAT);	  connectToPeek(JsonToken.VALUE_NUMBER_INT,    JsonToken.VALUE_NUMBER_FLOAT);    	non-compiled	[CE]  cannot  find  symbol  VALUE_NUMBER	215	None	replace
296	[BUG]  [BUGGY]  connectToPeek(JsonToken.VALUE_NULL,  JsonToken.VALUE_NUMBER_FLOAT);  [CE]  cannot  find  symbol  VALUE_NULL  [FE]                          ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {      [BUGGY]  connectToPeek(JsonToken.VALUE_NULL,  JsonToken.VALUE_NUMBER_FLOAT);  [BUGGY]      pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	261	261	2	replace	connectToPeek(JsonToken.VALUE_NULL,  JsonToken.VALUE_NUMBER_FLOAT);	  connectToPeek(JsonToken.VALUE_NUMBER_INT,    JsonToken.VALUE_NUMBER_FLOAT);    	non-compiled	[CE]  cannot  find  symbol  VALUE_NULL	215	None	replace
297	[BUG]  [BUGGY]  connectToPeek(JsonToken.VALUE_NUMBER,  JsonToken.VALUE_NUMBER);  [CE]  cannot  find  symbol  VALUE_NUMBER  [FE]                            ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {      [BUGGY]  connectToPeek(JsonToken.VALUE_NUMBER,  JsonToken.VALUE_NUMBER);  [BUGGY]      pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	261	261	2	replace	connectToPeek(JsonToken.VALUE_NUMBER,  JsonToken.VALUE_NUMBER);	  connectToPeek(JsonToken.VALUE_NUMBER_INT,    JsonToken.VALUE_NUMBER_FLOAT);    	non-compiled	[CE]  cannot  find  symbol  VALUE_NUMBER	215	None	replace
298	[BUG]  [BUGGY]  connectToPeek(JsonToken.VALUE_NAME,  JsonToken.VALUE_NUMBER_FLOAT);  [CE]  cannot  find  symbol  VALUE_NAME  [FE]                              ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {      [BUGGY]  connectToPeek(JsonToken.VALUE_NAME,  JsonToken.VALUE_NUMBER_FLOAT);  [BUGGY]      pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	261	261	2	replace	connectToPeek(JsonToken.VALUE_NAME,  JsonToken.VALUE_NUMBER_FLOAT);	  connectToPeek(JsonToken.VALUE_NUMBER_INT,    JsonToken.VALUE_NUMBER_FLOAT);    	non-compiled	[CE]  cannot  find  symbol  VALUE_NAME	215	None	replace
299	[BUG]  [BUGGY]  connectToPeek(JsonToken.VALUE_STRING,  JsonToken.VALUE_NUMBER_FLOAT);  [CE]  cannot  find  symbol  VALUE_STRING  [FE]                                ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {      [BUGGY]  connectToPeek(JsonToken.VALUE_STRING,  JsonToken.VALUE_NUMBER_FLOAT);  [BUGGY]      pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	261	261	2	replace	connectToPeek(JsonToken.VALUE_STRING,  JsonToken.VALUE_NUMBER_FLOAT);	  connectToPeek(JsonToken.VALUE_NUMBER_INT,    JsonToken.VALUE_NUMBER_FLOAT);    	non-compiled	[CE]  cannot  find  symbol  VALUE_STRING	215	None	replace
300	[BUG]  [BUGGY]  connectToPossibleExceptionHandler(throwInternal(),  JsonToken.VALUE_NULL,  pathNames);  [CE]  cannot  find  symbol  [FE]                    ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {      [BUGGY]  connectToPossibleExceptionHandler(throwInternal(),  JsonToken.VALUE_NULL,  pathNames);  [BUGGY]      pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	261	261	2	replace	connectToPossibleExceptionHandler(throwInternal(),  JsonToken.VALUE_NULL,  pathNames);	  connectToPossibleExceptionHandler(throwInternal(),    JsonToken.VALUE_NULL);    	non-compiled	[CE]  cannot  find  symbol	51	None	replace
301	[BUG]  [BUGGY]  connectToPossibleExceptionHandler(jsonToken.VALUE_NULL);  [CE]  cannot  find  symbol  jsonToken  [FE]                      ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {      [BUGGY]  connectToPossibleExceptionHandler(jsonToken.VALUE_NULL);  [BUGGY]      pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	261	261	2	replace	connectToPossibleExceptionHandler(jsonToken.VALUE_NULL);	  connectToPossibleExceptionHandler(throwInternal(),    JsonToken.VALUE_NULL);    	non-compiled	[CE]  cannot  find  symbol  jsonToken	51	None	replace
302	[BUG]  [BUGGY]  connectToPossibleExceptionHandler(JsonToken.VALUE_NULL,  stackSize);  [CE]  cannot  find  symbol  VALUE_NULL  [FE]                        ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {      [BUGGY]  connectToPossibleExceptionHandler(JsonToken.VALUE_NULL,  stackSize);  [BUGGY]      pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	261	261	2	replace	connectToPossibleExceptionHandler(JsonToken.VALUE_NULL,  stackSize);	  connectToPossibleExceptionHandler(throwInternal(),    JsonToken.VALUE_NULL);    	non-compiled	[CE]  cannot  find  symbol  VALUE_NULL	51	None	replace
303	[BUG]  [BUGGY]  connectToPossibleExceptionHandler(throwInternal(),  JsonToken.VALUE_NULL,  null);  [CE]  cannot  find  symbol  [FE]                          ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {      [BUGGY]  connectToPossibleExceptionHandler(throwInternal(),  JsonToken.VALUE_NULL,  null);  [BUGGY]      pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	261	261	2	replace	connectToPossibleExceptionHandler(throwInternal(),  JsonToken.VALUE_NULL,  null);	  connectToPossibleExceptionHandler(throwInternal(),    JsonToken.VALUE_NULL);    	non-compiled	[CE]  cannot  find  symbol	51	None	replace
304	[BUG]  [BUGGY]  connectToPossibleExceptionHandler(jsonToken.VALUE_NULL,  stackSize);  [CE]  cannot  find  symbol  jsonToken  [FE]                            ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {      [BUGGY]  connectToPossibleExceptionHandler(jsonToken.VALUE_NULL,  stackSize);  [BUGGY]      pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	261	261	2	replace	connectToPossibleExceptionHandler(jsonToken.VALUE_NULL,  stackSize);	  connectToPossibleExceptionHandler(throwInternal(),    JsonToken.VALUE_NULL);    	non-compiled	[CE]  cannot  find  symbol  jsonToken	51	None	replace
305	[BUG]  [BUGGY]  connectToPossibleExceptionHandler(jsonToken.VALUE_NULL,  JsonToken.VALUE_NULL);  [CE]  cannot  find  symbol  jsonToken  [FE]                              ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {      [BUGGY]  connectToPossibleExceptionHandler(jsonToken.VALUE_NULL,  JsonToken.VALUE_NULL);  [BUGGY]      pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	261	261	2	replace	connectToPossibleExceptionHandler(jsonToken.VALUE_NULL,  JsonToken.VALUE_NULL);	  connectToPossibleExceptionHandler(throwInternal(),    JsonToken.VALUE_NULL);    	non-compiled	[CE]  cannot  find  symbol  jsonToken	51	None	replace
306	[BUG]  [BUGGY]  connectToPossibleExceptionHandler(nextName(),  JsonToken.VALUE_NULL);  [CE]  cannot  find  symbol  VALUE_NULL  [FE]                                ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {      [BUGGY]  connectToPossibleExceptionHandler(nextName(),  JsonToken.VALUE_NULL);  [BUGGY]      pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	261	261	2	replace	connectToPossibleExceptionHandler(nextName(),  JsonToken.VALUE_NULL);	  connectToPossibleExceptionHandler(throwInternal(),    JsonToken.VALUE_NULL);    	non-compiled	[CE]  cannot  find  symbol  VALUE_NULL	51	None	replace
307	[BUG]  [BUGGY]  _reportError( "Current  token( "+getClass().getName()  + ")not  a  value ",  JsonToken.VALUE_NUMBER_ERROR,  JsonToken.VALUE_NULL);  [CE]  cannot  find  symbol  VALUE_NUMBER_ERROR  [FE]              ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {      [BUGGY]  _reportError( "Current  token( "+getClass().getName()  + ")not  a  value ",  JsonToken.VALUE_NUMBER_ERROR,  JsonToken.VALUE_NULL);  [BUGGY]      pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	261	261	2	replace	_reportError( "Current  token( "+getClass().getName()  + ")not  a  value ",  JsonToken.VALUE_NUMBER_ERROR,  JsonToken.VALUE_NULL);	  _reportError(   "Current    token(   "+getClass().getName()    +   ")not    a    value   ",    JsonToken.VALUE_NULL);    	non-compiled	[CE]  cannot  find  symbol  VALUE_NUMBER_ERROR	25	None	replace
308	[BUG]  [BUGGY]  _reportError( "Current  token( "+getClass().getName()  + ")not  a  value ",  JsonToken.VALUE_NUMBER);  [CE]  cannot  find  symbol  VALUE_NUMBER  [FE]                ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {      [BUGGY]  _reportError( "Current  token( "+getClass().getName()  + ")not  a  value ",  JsonToken.VALUE_NUMBER);  [BUGGY]      pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	261	261	2	replace	_reportError( "Current  token( "+getClass().getName()  + ")not  a  value ",  JsonToken.VALUE_NUMBER);	  _reportError(   "Current    token(   "+getClass().getName()    +   ")not    a    value   ",    JsonToken.VALUE_NULL);    	non-compiled	[CE]  cannot  find  symbol  VALUE_NUMBER	25	None	replace
309	[BUG]  [BUGGY]  joinStack(stackSize  -  1);  [CE]  cannot  find  symbol  [FE]          ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {      [BUGGY]  joinStack(stackSize  -  1);  [BUGGY]      pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	261	261	2	replace	joinStack(stackSize  -  1);	  rowStack();    	non-compiled	[CE]  cannot  find  symbol	57	None	replace
310	[BUG]  [BUGGY]  handleMissingValue();  [CE]  cannot  find  symbol  [FE]            ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {      [BUGGY]  handleMissingValue();  [BUGGY]      pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	261	261	2	replace	handleMissingValue();	  rowStack();    	non-compiled	[CE]  cannot  find  symbol	57	None	replace
311	[BUG]  [BUGGY]  joinStack();  [CE]  cannot  find  symbol  [FE]              ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {      [BUGGY]  joinStack();  [BUGGY]      pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	261	261	2	replace	joinStack();	  rowStack();    	non-compiled	[CE]  cannot  find  symbol	57	None	replace
312	[BUG]  [BUGGY]  joinStack(stackSize  -  1,  stack);  [CE]  cannot  find  symbol  [FE]                ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {      [BUGGY]  joinStack(stackSize  -  1,  stack);  [BUGGY]      pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	261	261	2	replace	joinStack(stackSize  -  1,  stack);	  rowStack();    	non-compiled	[CE]  cannot  find  symbol	57	None	replace
313	[BUG]  [BUGGY]  joinStack(stackSize,  stackSize);  [CE]  cannot  find  symbol  [FE]                  ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {      [BUGGY]  joinStack(stackSize,  stackSize);  [BUGGY]      pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	261	261	2	replace	joinStack(stackSize,  stackSize);	  rowStack();    	non-compiled	[CE]  cannot  find  symbol	57	None	replace
314	[BUG]  [BUGGY]  StackTree  <  0  ||  stackSize  >=  0)  {  popStack();  }  else  {  skipStack();  }  [CE]  illegal  start  of  type  [FE]                ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {      [BUGGY]  StackTree  <  0  ||  stackSize  >=  0)  {  popStack();  }  else  {  skipStack();  }  [BUGGY]      pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	261	261	2	replace	StackTree  <  0  ||  stackSize  >=  0)  {  popStack();  }  else  {  skipStack();  }	  if(stackSize    >=    0)    {    popStack();    }    else    {    skipStack();    }    	non-compiled	[CE]  illegal  start  of  type	108	None	replace
315	[BUG]  [BUGGY]  StackTree  <  MISSING_READER  &&  stackSize  >=  0)  {  popStack();  }  else  {  skipStack();  }  [CE]  >  expected  [FE]                  ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {      [BUGGY]  StackTree  <  MISSING_READER  &&  stackSize  >=  0)  {  popStack();  }  else  {  skipStack();  }  [BUGGY]      pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	261	261	2	replace	StackTree  <  MISSING_READER  &&  stackSize  >=  0)  {  popStack();  }  else  {  skipStack();  }	  if(stackSize    >=    0)    {    popStack();    }    else    {    skipStack();    }    	non-compiled	[CE]  >  expected	108	None	replace
316	[BUG]  [BUGGY]  StackTree  <  MISSING_READER  ||  stackSize  >=  0)  {  popStack();  }  else  {  skipStack();  }  [CE]  >  expected  [FE]                    ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {      [BUGGY]  StackTree  <  MISSING_READER  ||  stackSize  >=  0)  {  popStack();  }  else  {  skipStack();  }  [BUGGY]      pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	261	261	2	replace	StackTree  <  MISSING_READER  ||  stackSize  >=  0)  {  popStack();  }  else  {  skipStack();  }	  if(stackSize    >=    0)    {    popStack();    }    else    {    skipStack();    }    	non-compiled	[CE]  >  expected	108	None	replace
317	[BUG]  [BUGGY]  StackTree  <  =  0)  {  popStack();  }  else  {  skipStack();  }  [CE]  illegal  start  of  type  [FE]                      ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {      [BUGGY]  StackTree  <  =  0)  {  popStack();  }  else  {  skipStack();  }  [BUGGY]      pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	261	261	2	replace	StackTree  <  =  0)  {  popStack();  }  else  {  skipStack();  }	  if(stackSize    >=    0)    {    popStack();    }    else    {    skipStack();    }    	non-compiled	[CE]  illegal  start  of  type	108	None	replace
318	[BUG]  [BUGGY]  String[]  pathIndices  =  getStandardValues();  [CE]  cannot  find  symbol  [FE]          AssertionFailedError      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {      [BUGGY]  String[]  pathIndices  =  getStandardValues();  [BUGGY]      pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	261	261	2	replace	String[]  pathIndices  =  getStandardValues();	          String[]    pathIndices    =    getValues();    	non-compiled	[CE]  cannot  find  symbol	119	None	replace
319	[BUG]  [BUGGY]  String[]  pathIndices  =  getValues().toArray(new  String[pathNames.size()  ]);  [CE]  cannot  find  symbol  [FE]            AssertionFailedError      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {      [BUGGY]  String[]  pathIndices  =  getValues().toArray(new  String[pathNames.size()  ]);  [BUGGY]      pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	261	261	2	replace	String[]  pathIndices  =  getValues().toArray(new  String[pathNames.size()  ]);	          String[]    pathIndices    =    getValues();    	non-compiled	[CE]  cannot  find  symbol	119	None	replace
320	[BUG]  [BUGGY]  String[]  pathIndices  =  getRawValues();  [CE]  cannot  find  symbol  [FE]              AssertionFailedError      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {      [BUGGY]  String[]  pathIndices  =  getRawValues();  [BUGGY]      pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	261	261	2	replace	String[]  pathIndices  =  getRawValues();	          String[]    pathIndices    =    getValues();    	non-compiled	[CE]  cannot  find  symbol	119	None	replace
321	[BUG]  [BUGGY]  String[]  pathIndices  =  getMutableValues();  [CE]  cannot  find  symbol  [FE]                AssertionFailedError      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {      [BUGGY]  String[]  pathIndices  =  getMutableValues();  [BUGGY]      pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	261	261	2	replace	String[]  pathIndices  =  getMutableValues();	          String[]    pathIndices    =    getValues();    	non-compiled	[CE]  cannot  find  symbol	119	None	replace
322	[BUG]  [BUGGY]  String[]  pathIndices  =  getValues().toArray(new  String[pathNames.length  ]);  [CE]  cannot  find  symbol  [FE]                  AssertionFailedError      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {      [BUGGY]  String[]  pathIndices  =  getValues().toArray(new  String[pathNames.length  ]);  [BUGGY]      pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	261	261	2	replace	String[]  pathIndices  =  getValues().toArray(new  String[pathNames.length  ]);	          String[]    pathIndices    =    getValues();    	non-compiled	[CE]  cannot  find  symbol	119	None	replace
323	[BUG]  [BUGGY]  connectToPossibleExceptionHandler(null,  null,  UNREADABLE_READER);  [CE]  cannot  find  symbol  [FE]                        ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {      [BUGGY]  connectToPossibleExceptionHandler(null,  null,  UNREADABLE_READER);  [BUGGY]      pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	261	261	2	replace	connectToPossibleExceptionHandler(null,  null,  UNREADABLE_READER);	  connectToPossibleExceptionHandler(null,    null,    SENTINEL_CLOSED);    	non-compiled	[CE]  cannot  find  symbol	77	None	replace
324	[BUG]  [BUGGY]  connectToPossibleExceptionHandler(null,  null,  result);  [CE]  cannot  find  symbol  result  [FE]                          ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {      [BUGGY]  connectToPossibleExceptionHandler(null,  null,  result);  [BUGGY]      pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	261	261	2	replace	connectToPossibleExceptionHandler(null,  null,  result);	  connectToPossibleExceptionHandler(null,    null,    SENTINEL_CLOSED);    	non-compiled	[CE]  cannot  find  symbol  result	77	None	replace
325	[BUG]  [BUGGY]  connectToPossibleExceptionHandler(null,  null,  SENTINEL_CLOSED,  pathNames);  [CE]  cannot  find  symbol  [FE]                            ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {      [BUGGY]  connectToPossibleExceptionHandler(null,  null,  SENTINEL_CLOSED,  pathNames);  [BUGGY]      pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	261	261	2	replace	connectToPossibleExceptionHandler(null,  null,  SENTINEL_CLOSED,  pathNames);	  connectToPossibleExceptionHandler(null,    null,    SENTINEL_CLOSED);    	non-compiled	[CE]  cannot  find  symbol	77	None	replace
326	[BUG]  [BUGGY]  connectToPossibleExceptionHandler(null,  null,  SENTINEL_CLOSED,  pathIndices);  [CE]  cannot  find  symbol  [FE]                              ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {      [BUGGY]  connectToPossibleExceptionHandler(null,  null,  SENTINEL_CLOSED,  pathIndices);  [BUGGY]      pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	261	261	2	replace	connectToPossibleExceptionHandler(null,  null,  SENTINEL_CLOSED,  pathIndices);	  connectToPossibleExceptionHandler(null,    null,    SENTINEL_CLOSED);    	non-compiled	[CE]  cannot  find  symbol	77	None	replace
327	[BUG]  [BUGGY]  connectToPossibleExceptionHandler(result,  null);  [CE]  cannot  find  symbol  result  [FE]                ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {      [BUGGY]  connectToPossibleExceptionHandler(result,  null);  [BUGGY]      pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	261	261	2	replace	connectToPossibleExceptionHandler(result,  null);	  connectToPossibleExceptionHandler(ch,    null);    	non-compiled	[CE]  cannot  find  symbol  result	169	None	replace
328	[BUG]  [BUGGY]  connectToPossibleExceptionHandler(jsonToken,  null);  [CE]  cannot  find  symbol  jsonToken  [FE]                  ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {      [BUGGY]  connectToPossibleExceptionHandler(jsonToken,  null);  [BUGGY]      pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	261	261	2	replace	connectToPossibleExceptionHandler(jsonToken,  null);	  connectToPossibleExceptionHandler(ch,    null);    	non-compiled	[CE]  cannot  find  symbol  jsonToken	169	None	replace
329	[BUG]  [BUGGY]  connectToPossibleExceptionHandler(last,  null);  [CE]  cannot  find  symbol  last  [FE]                    ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {      [BUGGY]  connectToPossibleExceptionHandler(last,  null);  [BUGGY]      pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	261	261	2	replace	connectToPossibleExceptionHandler(last,  null);	  connectToPossibleExceptionHandler(ch,    null);    	non-compiled	[CE]  cannot  find  symbol  last	169	None	replace
330	[BUG]  [BUGGY]  [FE]  IllegalStateException  [FE]    IllegalStateException    [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {      [BUGGY]  nextName();  [BUGGY]      pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	261	261	2	add	nextName();	  if(stackSize    >    0)    {    nextName();    }    	compilable	  [FE]  IllegalStateException  	191	2	replace
331	[BUG]  [BUGGY]  nextName();  [FE]  IllegalStateException  [FE]    IllegalStateException    [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {      [BUGGY]  nextName();  [BUGGY]      pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	261	261	2	replace	nextName();	  if(stackSize    >    0)    {    nextName();    }    	compilable	  [FE]  IllegalStateException  	191	2	replace
332	[BUG]  [BUGGY]  Names[stackSize  -  1]  =   "null ";  [CE]  cannot  find  symbol  Names  [FE]      IllegalStateException    [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {      [BUGGY]  Names[stackSize  -  1]  =   "null ";  [BUGGY]      pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	261	261	2	replace	Names[stackSize  -  1]  =   "null ";	  if(stackSize    >    0)    {    nextName();    }    	non-compiled	[CE]  cannot  find  symbol  Names	191	None	replace
333	[BUG]  [BUGGY]  Names[stackSize  -  1]  =  null;  [CE]  cannot  find  symbol  Names  [FE]        IllegalStateException    [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {      [BUGGY]  Names[stackSize  -  1]  =  null;  [BUGGY]      pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	261	261	2	replace	Names[stackSize  -  1]  =  null;	  if(stackSize    >    0)    {    nextName();    }    	non-compiled	[CE]  cannot  find  symbol  Names	191	None	replace
334	[BUG]  [BUGGY]  ||  stackSize  >  0)  {  nextName();  }  [CE]  illegal  start  of  expression  [FE]          IllegalStateException    [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {      [BUGGY]  ||  stackSize  >  0)  {  nextName();  }  [BUGGY]      pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	261	261	2	replace	||  stackSize  >  0)  {  nextName();  }	  if(stackSize    >    0)    {    nextName();    }    	non-compiled	[CE]  illegal  start  of  expression	191	None	replace
335	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]            IllegalStateException    [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {      [BUGGY]  if(stackSize  >  1)  {  nextName();  }  [BUGGY]      pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	261	261	2	add	if(stackSize  >  1)  {  nextName();  }	  if(stackSize    >    0)    {    nextName();    }    	compilable	  [FE]  AssertionFailedError  	191	2	replace
336	[BUG]  [BUGGY]  if(stackSize  >  1)  {  nextName();  }  [FE]  AssertionFailedError  [FE]            IllegalStateException    [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {      [BUGGY]  if(stackSize  >  1)  {  nextName();  }  [BUGGY]      pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	261	261	2	replace	if(stackSize  >  1)  {  nextName();  }	  if(stackSize    >    0)    {    nextName();    }    	compilable	  [FE]  AssertionFailedError  	191	2	replace
337	[BUG]  [BUGGY]  _reportError( "Current  token( "+getClass().getName()  + ")is  not  a  value. ");  [CE]  cannot  find  symbol  [FE]                    ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {      [BUGGY]  _reportError( "Current  token( "+getClass().getName()  + ")is  not  a  value. ");  [BUGGY]      pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	261	261	2	replace	_reportError( "Current  token( "+getClass().getName()  + ")is  not  a  value. ");	  _reportError(   "Current    token(   "+getClass().getName()    +   ")is    not    a    value   ");    	non-compiled	[CE]  cannot  find  symbol	28	None	replace
338	[BUG]  [BUGGY]  _reportError( "Current  token( "+getClass().getName()  + ")is  not  a  value ",  JsonToken.VALUE_NULL);  [CE]  cannot  find  symbol  VALUE_NULL  [FE]                      ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {      [BUGGY]  _reportError( "Current  token( "+getClass().getName()  + ")is  not  a  value ",  JsonToken.VALUE_NULL);  [BUGGY]      pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	261	261	2	replace	_reportError( "Current  token( "+getClass().getName()  + ")is  not  a  value ",  JsonToken.VALUE_NULL);	  _reportError(   "Current    token(   "+getClass().getName()    +   ")is    not    a    value   ");    	non-compiled	[CE]  cannot  find  symbol  VALUE_NULL	28	None	replace
339	[BUG]  [BUGGY]  _reportError( "Current  token( "+getClass().getName()  + ")is  not  a  value ",  JsonToken.END_OBJECT);  [CE]  cannot  find  symbol  [FE]                        ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {      [BUGGY]  _reportError( "Current  token( "+getClass().getName()  + ")is  not  a  value ",  JsonToken.END_OBJECT);  [BUGGY]      pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	261	261	2	replace	_reportError( "Current  token( "+getClass().getName()  + ")is  not  a  value ",  JsonToken.END_OBJECT);	  _reportError(   "Current    token(   "+getClass().getName()    +   ")is    not    a    value   ");    	non-compiled	[CE]  cannot  find  symbol	28	None	replace
340	[BUG]  [BUGGY]  _reportError( "Current  token( "+getClass().getName()  + ")is  not  a  value ",  JsonToken.FIELD_NAME);  [CE]  cannot  find  symbol  FIELD_NAME  [FE]                          ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {      [BUGGY]  _reportError( "Current  token( "+getClass().getName()  + ")is  not  a  value ",  JsonToken.FIELD_NAME);  [BUGGY]      pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	261	261	2	replace	_reportError( "Current  token( "+getClass().getName()  + ")is  not  a  value ",  JsonToken.FIELD_NAME);	  _reportError(   "Current    token(   "+getClass().getName()    +   ")is    not    a    value   ");    	non-compiled	[CE]  cannot  find  symbol  FIELD_NAME	28	None	replace
341	[BUG]  [BUGGY]  _reportError( "Current  token( "+getClass().getName()  + ")Not  null ",  JsonToken.END_OBJECT);  [CE]  cannot  find  symbol  [FE]                        ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {      [BUGGY]  _reportError( "Current  token( "+getClass().getName()  + ")Not  null ",  JsonToken.END_OBJECT);  [BUGGY]      pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	261	261	2	replace	_reportError( "Current  token( "+getClass().getName()  + ")Not  null ",  JsonToken.END_OBJECT);	  _reportError(   "Current    token(   "+getClass().getName()    +   ")Not    null.   ");    	non-compiled	[CE]  cannot  find  symbol	39	None	replace
342	[BUG]  [BUGGY]  _reportError( "Current  token( "+getClass().getName()  + ")Not  null! ");  [CE]  cannot  find  symbol  [FE]                          ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {      [BUGGY]  _reportError( "Current  token( "+getClass().getName()  + ")Not  null! ");  [BUGGY]      pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	261	261	2	replace	_reportError( "Current  token( "+getClass().getName()  + ")Not  null! ");	  _reportError(   "Current    token(   "+getClass().getName()    +   ")Not    null.   ");    	non-compiled	[CE]  cannot  find  symbol	39	None	replace
343	[BUG]  [BUGGY]  _reportError( "Current  token( "+getClass().getName()  + ")Not  null ",  JsonToken.VALUE_NULL);  [CE]  cannot  find  symbol  VALUE_NULL  [FE]                            ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {      [BUGGY]  _reportError( "Current  token( "+getClass().getName()  + ")Not  null ",  JsonToken.VALUE_NULL);  [BUGGY]      pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	261	261	2	replace	_reportError( "Current  token( "+getClass().getName()  + ")Not  null ",  JsonToken.VALUE_NULL);	  _reportError(   "Current    token(   "+getClass().getName()    +   ")Not    null.   ");    	non-compiled	[CE]  cannot  find  symbol  VALUE_NULL	39	None	replace
344	[BUG]  [BUGGY]  _reportError( "Current  token( "+getClass().getName()  + ")Not  null ",  JsonToken.FIELD_NAME);  [CE]  cannot  find  symbol  FIELD_NAME  [FE]                              ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {      [BUGGY]  _reportError( "Current  token( "+getClass().getName()  + ")Not  null ",  JsonToken.FIELD_NAME);  [BUGGY]      pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	261	261	2	replace	_reportError( "Current  token( "+getClass().getName()  + ")Not  null ",  JsonToken.FIELD_NAME);	  _reportError(   "Current    token(   "+getClass().getName()    +   ")Not    null.   ");    	non-compiled	[CE]  cannot  find  symbol  FIELD_NAME	39	None	replace
345	[BUG]  [BUGGY]  _reportError( "Current  token( "+getClass().getName()  + ")Not  null, ");  [CE]  cannot  find  symbol  [FE]                                ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {      [BUGGY]  _reportError( "Current  token( "+getClass().getName()  + ")Not  null, ");  [BUGGY]      pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	261	261	2	replace	_reportError( "Current  token( "+getClass().getName()  + ")Not  null, ");	  _reportError(   "Current    token(   "+getClass().getName()    +   ")Not    null.   ");    	non-compiled	[CE]  cannot  find  symbol	39	None	replace
346	[BUG]  [BUGGY]  [FE]  IllegalStateException  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {      [BUGGY]  if(stackSize  >  0)  {  popStack();  }  else  {  JsonToken  START_OBJECT  =  null;  nextName();  pathNames[stackSize  -  1]  =     "null   ";  }  if(stackSize  >  0)  {  popStack();  }  else  {  JsonToken  START_OBJECT  =  null;  nextName();  pathNames[stackSize  -  1]  =   "null ";  }  [BUGGY]      pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	261	261	2	add	if(stackSize    >    0)    {    popStack();    }    else    {    JsonToken    START_OBJECT    =    null;    nextName();    pathNames[stackSize    -    1]    =       "null   ";    }    if(stackSize  >  0)  {  popStack();  }  else  {  JsonToken  START_OBJECT  =  null;  nextName();  pathNames[stackSize  -  1]  =   "null ";  }	  	compilable	  [FE]  IllegalStateException  	132	2	add
347	[BUG]  [BUGGY]  if(stackSize  >  0)  {  popStack();  }  else  {  JsonToken  START_OBJECT  =  null;  nextName();  pathNames[stackSize  -  1]  =     "null   ";  }  if(stackSize  >  0)  {  popStack();  }  else  {  JsonToken  START_OBJECT  =  null;  nextName();  pathNames[stackSize  -  1]  =   "null ";  }  [FE]  IllegalStateException  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {      [BUGGY]  if(stackSize  >  0)  {  popStack();  }  else  {  JsonToken  START_OBJECT  =  null;  nextName();  pathNames[stackSize  -  1]  =     "null   ";  }  if(stackSize  >  0)  {  popStack();  }  else  {  JsonToken  START_OBJECT  =  null;  nextName();  pathNames[stackSize  -  1]  =   "null ";  }  [BUGGY]      pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	261	261	2	replace	if(stackSize    >    0)    {    popStack();    }    else    {    JsonToken    START_OBJECT    =    null;    nextName();    pathNames[stackSize    -    1]    =       "null   ";    }    if(stackSize  >  0)  {  popStack();  }  else  {  JsonToken  START_OBJECT  =  null;  nextName();  pathNames[stackSize  -  1]  =   "null ";  }	  	compilable	  [FE]  IllegalStateException  	132	2	add
348	[BUG]  [BUGGY]  if(stackSize  >  0)  {  popStack();  }  else  {  JsonToken  START_OBJECT  =  null;  nextName();  pathNames[stackSize  -  1]  =     "null   ";  }  if(stackSize  >  0)  {  popStack();  }  else  {  JsonToken  START_OBJECT  =  null;  [CE]  ';'  expected  [FE]      ArrayIndexOutOfBoundsException    [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {      [BUGGY]  if(stackSize  >  0)  {  popStack();  }  else  {  JsonToken  START_OBJECT  =  null;  nextName();  pathNames[stackSize  -  1]  =     "null   ";  }  if(stackSize  >  0)  {  popStack();  }  else  {  JsonToken  START_OBJECT  =  null;  [BUGGY]      pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	261	261	2	replace	if(stackSize    >    0)    {    popStack();    }    else    {    JsonToken    START_OBJECT    =    null;    nextName();    pathNames[stackSize    -    1]    =       "null   ";    }    if(stackSize  >  0)  {  popStack();  }  else  {  JsonToken  START_OBJECT  =  null;	  	non-compiled	[CE]  ';'  expected	132	None	add
349	[BUG]  [BUGGY]  [FE]  ArrayIndexOutOfBoundsException  [FE]        ArrayIndexOutOfBoundsException    [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {      [BUGGY]  if(stackSize  >  0)  {  popStack();  }  else  {  JsonToken  START_OBJECT  =  null;  nextName();  pathNames[stackSize  -  1]  =     "null   ";  }  if(stackSize  >  0)  {  popStack();  }  else  {  JsonToken  START_OBJECT  =  null;  pathNames[stackSize  -  1]  =   "null ";  }  [BUGGY]      pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	261	261	2	add	if(stackSize    >    0)    {    popStack();    }    else    {    JsonToken    START_OBJECT    =    null;    nextName();    pathNames[stackSize    -    1]    =       "null   ";    }    if(stackSize  >  0)  {  popStack();  }  else  {  JsonToken  START_OBJECT  =  null;  pathNames[stackSize  -  1]  =   "null ";  }	  	compilable	  [FE]  ArrayIndexOutOfBoundsException  	132	2	add
350	[BUG]  [BUGGY]  if(stackSize  >  0)  {  popStack();  }  else  {  JsonToken  START_OBJECT  =  null;  nextName();  pathNames[stackSize  -  1]  =     "null   ";  }  if(stackSize  >  0)  {  popStack();  }  else  {  JsonToken  START_OBJECT  =  null;  pathNames[stackSize  -  1]  =   "null ";  }  [FE]  ArrayIndexOutOfBoundsException  [FE]        ArrayIndexOutOfBoundsException    [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {      [BUGGY]  if(stackSize  >  0)  {  popStack();  }  else  {  JsonToken  START_OBJECT  =  null;  nextName();  pathNames[stackSize  -  1]  =     "null   ";  }  if(stackSize  >  0)  {  popStack();  }  else  {  JsonToken  START_OBJECT  =  null;  pathNames[stackSize  -  1]  =   "null ";  }  [BUGGY]      pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	261	261	2	replace	if(stackSize    >    0)    {    popStack();    }    else    {    JsonToken    START_OBJECT    =    null;    nextName();    pathNames[stackSize    -    1]    =       "null   ";    }    if(stackSize  >  0)  {  popStack();  }  else  {  JsonToken  START_OBJECT  =  null;  pathNames[stackSize  -  1]  =   "null ";  }	  	compilable	  [FE]  ArrayIndexOutOfBoundsException  	132	2	add
351	[BUG]  [BUGGY]  if(stackSize  >  0)  {  popStack();  }  else  {  JsonToken  START_OBJECT  =  null;  nextName();  pathNames[stackSize  -  1]  =     "null   ";  }  if(stackSize  >  0)  {  popStack();  }  else  {  JsonToken  START_OBJECT  =  null;  nextName();  pathNames[stackSize  -  1]  =  null   ";  }  [CE]  unclosed  string  literal  [FE]          ArrayIndexOutOfBoundsException    [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {      [BUGGY]  if(stackSize  >  0)  {  popStack();  }  else  {  JsonToken  START_OBJECT  =  null;  nextName();  pathNames[stackSize  -  1]  =     "null   ";  }  if(stackSize  >  0)  {  popStack();  }  else  {  JsonToken  START_OBJECT  =  null;  nextName();  pathNames[stackSize  -  1]  =  null   ";  }  [BUGGY]      pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	261	261	2	replace	if(stackSize    >    0)    {    popStack();    }    else    {    JsonToken    START_OBJECT    =    null;    nextName();    pathNames[stackSize    -    1]    =       "null   ";    }    if(stackSize  >  0)  {  popStack();  }  else  {  JsonToken  START_OBJECT  =  null;  nextName();  pathNames[stackSize  -  1]  =  null   ";  }	  	non-compiled	[CE]  unclosed  string  literal	132	None	add
352	[BUG]  [BUGGY]  validateValue(JsonToken.VALUE_EMBEDDED_FIELD_NAME,  SENTINEL_CLOSED);  [CE]  cannot  find  symbol  VALUE_EMBEDDED_FIELD_NAME  [FE]                          ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {      [BUGGY]  validateValue(JsonToken.VALUE_EMBEDDED_FIELD_NAME,  SENTINEL_CLOSED);  [BUGGY]      pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	261	261	2	replace	validateValue(JsonToken.VALUE_EMBEDDED_FIELD_NAME,  SENTINEL_CLOSED);	  validateValue(JsonToken.VALUE_EMBEDDED_FIELD_NAME);    	non-compiled	[CE]  cannot  find  symbol  VALUE_EMBEDDED_FIELD_NAME	99	None	replace
353	[BUG]  [BUGGY]  validateValue(JsonToken.VALUE_EMBEDDED_FIELD_NAME,  true);  [CE]  cannot  find  symbol  VALUE_EMBEDDED_FIELD_NAME  [FE]                            ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {      [BUGGY]  validateValue(JsonToken.VALUE_EMBEDDED_FIELD_NAME,  true);  [BUGGY]      pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	261	261	2	replace	validateValue(JsonToken.VALUE_EMBEDDED_FIELD_NAME,  true);	  validateValue(JsonToken.VALUE_EMBEDDED_FIELD_NAME);    	non-compiled	[CE]  cannot  find  symbol  VALUE_EMBEDDED_FIELD_NAME	99	None	replace
354	[BUG]  [BUGGY]  validateValue(JsonToken.VALUE_EMBEDDED_FIELD_NAME,  null);  [CE]  cannot  find  symbol  VALUE_EMBEDDED_FIELD_NAME  [FE]                              ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {      [BUGGY]  validateValue(JsonToken.VALUE_EMBEDDED_FIELD_NAME,  null);  [BUGGY]      pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	261	261	2	replace	validateValue(JsonToken.VALUE_EMBEDDED_FIELD_NAME,  null);	  validateValue(JsonToken.VALUE_EMBEDDED_FIELD_NAME);    	non-compiled	[CE]  cannot  find  symbol  VALUE_EMBEDDED_FIELD_NAME	99	None	replace
355	[BUG]  [BUGGY]  validateValue(JsonToken.VALUE_EMBEDDED_FIELD_NAME,  pathNames);  [CE]  cannot  find  symbol  VALUE_EMBEDDED_FIELD_NAME  [FE]                                ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {      [BUGGY]  validateValue(JsonToken.VALUE_EMBEDDED_FIELD_NAME,  pathNames);  [BUGGY]      pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	261	261	2	replace	validateValue(JsonToken.VALUE_EMBEDDED_FIELD_NAME,  pathNames);	  validateValue(JsonToken.VALUE_EMBEDDED_FIELD_NAME);    	non-compiled	[CE]  cannot  find  symbol  VALUE_EMBEDDED_FIELD_NAME	99	None	replace
356	[BUG]  [BUGGY]  pass(JsonToken.VALUE_NUMBER_EXPR_RESULT);  [CE]  cannot  find  symbol  VALUE_NUMBER_EXPR_RESULT  [FE]        ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {      [BUGGY]  pass(JsonToken.VALUE_NUMBER_EXPR_RESULT);  [BUGGY]      pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	261	261	2	replace	pass(JsonToken.VALUE_NUMBER_EXPR_RESULT);	  peech();    	non-compiled	[CE]  cannot  find  symbol  VALUE_NUMBER_EXPR_RESULT	147	None	replace
357	[BUG]  [BUGGY]  pass(JsonToken.VALUE_EMBEDDED_ARRAY);  [CE]  cannot  find  symbol  VALUE_EMBEDDED_ARRAY  [FE]          ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {      [BUGGY]  pass(JsonToken.VALUE_EMBEDDED_ARRAY);  [BUGGY]      pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	261	261	2	replace	pass(JsonToken.VALUE_EMBEDDED_ARRAY);	  peech();    	non-compiled	[CE]  cannot  find  symbol  VALUE_EMBEDDED_ARRAY	147	None	replace
358	[BUG]  [BUGGY]  pass(JsonToken.VALUE_NUMBER_INT);  [CE]  cannot  find  symbol  VALUE_NUMBER_INT  [FE]            ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {      [BUGGY]  pass(JsonToken.VALUE_NUMBER_INT);  [BUGGY]      pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	261	261	2	replace	pass(JsonToken.VALUE_NUMBER_INT);	  peech();    	non-compiled	[CE]  cannot  find  symbol  VALUE_NUMBER_INT	147	None	replace
359	[BUG]  [BUGGY]  pass(JsonToken.VALUE_NUMBER_FLOAT);  [CE]  cannot  find  symbol  VALUE_NUMBER_FLOAT  [FE]              ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {      [BUGGY]  pass(JsonToken.VALUE_NUMBER_FLOAT);  [BUGGY]      pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	261	261	2	replace	pass(JsonToken.VALUE_NUMBER_FLOAT);	  peech();    	non-compiled	[CE]  cannot  find  symbol  VALUE_NUMBER_FLOAT	147	None	replace
360	[BUG]  [BUGGY]  pass(JsonToken.VALUE_EMBEDDED_OBJECT);  [CE]  cannot  find  symbol  VALUE_EMBEDDED_OBJECT  [FE]                ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {      [BUGGY]  pass(JsonToken.VALUE_EMBEDDED_OBJECT);  [BUGGY]      pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	261	261	2	replace	pass(JsonToken.VALUE_EMBEDDED_OBJECT);	  peech();    	non-compiled	[CE]  cannot  find  symbol  VALUE_EMBEDDED_OBJECT	147	None	replace
361	[BUG]  [BUGGY]  pass(JsonToken.VALUE_NULL);  [CE]  cannot  find  symbol  VALUE_NULL  [FE]                  ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {      [BUGGY]  pass(JsonToken.VALUE_NULL);  [BUGGY]      pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	261	261	2	replace	pass(JsonToken.VALUE_NULL);	  peech();    	non-compiled	[CE]  cannot  find  symbol  VALUE_NULL	147	None	replace
362	[BUG]  [BUGGY]  pass(JsonToken.NAME);  [CE]  cannot  find  symbol  [FE]                    ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {      [BUGGY]  pass(JsonToken.NAME);  [BUGGY]      pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	261	261	2	replace	pass(JsonToken.NAME);	  peech();    	non-compiled	[CE]  cannot  find  symbol	147	None	replace
363	[BUG]  [BUGGY]  _reportError( "Current  token( "+JsonToken.END_OBJECT+ ")expected  a  value ");  [CE]  cannot  find  symbol  [FE]                          ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {      [BUGGY]  _reportError( "Current  token( "+JsonToken.END_OBJECT+ ")expected  a  value ");  [BUGGY]      pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	261	261	2	replace	_reportError( "Current  token( "+JsonToken.END_OBJECT+ ")expected  a  value ");	  _reportError(   "Current    token(   "+JsonToken.END_OBJECT+   ")not    a    value   ");    	non-compiled	[CE]  cannot  find  symbol	130	None	replace
364	[BUG]  [BUGGY]  _reportError( "Current  token( "+JsonToken.END_OBJECT+ ")not  a  value. ");  [CE]  cannot  find  symbol  [FE]                            ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {      [BUGGY]  _reportError( "Current  token( "+JsonToken.END_OBJECT+ ")not  a  value. ");  [BUGGY]      pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	261	261	2	replace	_reportError( "Current  token( "+JsonToken.END_OBJECT+ ")not  a  value. ");	  _reportError(   "Current    token(   "+JsonToken.END_OBJECT+   ")not    a    value   ");    	non-compiled	[CE]  cannot  find  symbol	130	None	replace
365	[BUG]  [BUGGY]  _reportError( "Current  token( "+JsonToken.END_OBJECT+ ")is  not  a  value ");  [CE]  cannot  find  symbol  [FE]                              ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {      [BUGGY]  _reportError( "Current  token( "+JsonToken.END_OBJECT+ ")is  not  a  value ");  [BUGGY]      pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	261	261	2	replace	_reportError( "Current  token( "+JsonToken.END_OBJECT+ ")is  not  a  value ");	  _reportError(   "Current    token(   "+JsonToken.END_OBJECT+   ")not    a    value   ");    	non-compiled	[CE]  cannot  find  symbol	130	None	replace
366	[BUG]  [BUGGY]  stack.pop();  [CE]  cannot  find  symbol  [FE]                    ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {      [BUGGY]  stack.pop();  [BUGGY]      pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	261	261	2	replace	stack.pop();	  if(stackSize    >    0)    {    stack.pop();    }    else    {    skipStack();    }    	non-compiled	[CE]  cannot  find  symbol	167	None	replace
367	[BUG]  [BUGGY]  stack.peek();  [CE]  cannot  find  symbol  [FE]                      ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {      [BUGGY]  stack.peek();  [BUGGY]      pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	261	261	2	replace	stack.peek();	  if(stackSize    >    0)    {    stack.pop();    }    else    {    skipStack();    }    	non-compiled	[CE]  cannot  find  symbol	167	None	replace
368	[BUG]  [BUGGY]  Stack.peek();  [CE]  cannot  find  symbol  Stack  [FE]                        ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {      [BUGGY]  Stack.peek();  [BUGGY]      pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	261	261	2	replace	Stack.peek();	  if(stackSize    >    0)    {    stack.pop();    }    else    {    skipStack();    }    	non-compiled	[CE]  cannot  find  symbol  Stack	167	None	replace
369	[BUG]  [BUGGY]  if(stackSize  >  1)  {  stack.pop();  }  else  {  skipStack();  }  [CE]  cannot  find  symbol  [FE]                          ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {      [BUGGY]  if(stackSize  >  1)  {  stack.pop();  }  else  {  skipStack();  }  [BUGGY]      pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	261	261	2	replace	if(stackSize  >  1)  {  stack.pop();  }  else  {  skipStack();  }	  if(stackSize    >    0)    {    stack.pop();    }    else    {    skipStack();    }    	non-compiled	[CE]  cannot  find  symbol	167	None	replace
370	[BUG]  [BUGGY]  StackTree.this.stack.peek();  [CE]  cannot  find  symbol  [FE]                            ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {      [BUGGY]  StackTree.this.stack.peek();  [BUGGY]      pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	261	261	2	replace	StackTree.this.stack.peek();	  if(stackSize    >    0)    {    stack.pop();    }    else    {    skipStack();    }    	non-compiled	[CE]  cannot  find  symbol	167	None	replace
371	[BUG]  [BUGGY]  StackTree  <  NUMBER_INDEX  ||  stackSize  >  1)  {  popStack();  [CE]  >  expected  [FE]                ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {      [BUGGY]  StackTree  <  NUMBER_INDEX  ||  stackSize  >  1)  {  popStack();  [BUGGY]      pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	261	261	2	replace	StackTree  <  NUMBER_INDEX  ||  stackSize  >  1)  {  popStack();	  StackTree    <    NUMBER_INDEX    ||    stackSize    >    0)    {    popStack();    }    else    {    skipStack();    }    	non-compiled	[CE]  >  expected	72	None	replace
372	[BUG]  [BUGGY]  StackTree  <  NUMBER_INDEX  ||  stackSize  >  1)  {  popStack();  }  [CE]  >  expected  [FE]                  ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {      [BUGGY]  StackTree  <  NUMBER_INDEX  ||  stackSize  >  1)  {  popStack();  }  [BUGGY]      pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	261	261	2	replace	StackTree  <  NUMBER_INDEX  ||  stackSize  >  1)  {  popStack();  }	  StackTree    <    NUMBER_INDEX    ||    stackSize    >    0)    {    popStack();    }    else    {    skipStack();    }    	non-compiled	[CE]  >  expected	72	None	replace
373	[BUG]  [BUGGY]  StackTree  <  NUMBER_INDEX  ||  stackSize  >  1)  {  popStack();  }  else  {  skipStack();  }  [CE]  >  expected  [FE]                    ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {      [BUGGY]  StackTree  <  NUMBER_INDEX  ||  stackSize  >  1)  {  popStack();  }  else  {  skipStack();  }  [BUGGY]      pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	261	261	2	replace	StackTree  <  NUMBER_INDEX  ||  stackSize  >  1)  {  popStack();  }  else  {  skipStack();  }	  StackTree    <    NUMBER_INDEX    ||    stackSize    >    0)    {    popStack();    }    else    {    skipStack();    }    	non-compiled	[CE]  >  expected	72	None	replace
374	[BUG]  [BUGGY]  StackTree  <  NUMBER_INDEX  &&  stackSize  >  0)  {  popStack();  }  else  {  skipStack();  }  [CE]  >  expected  [FE]                      ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {      [BUGGY]  StackTree  <  NUMBER_INDEX  &&  stackSize  >  0)  {  popStack();  }  else  {  skipStack();  }  [BUGGY]      pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	261	261	2	replace	StackTree  <  NUMBER_INDEX  &&  stackSize  >  0)  {  popStack();  }  else  {  skipStack();  }	  StackTree    <    NUMBER_INDEX    ||    stackSize    >    0)    {    popStack();    }    else    {    skipStack();    }    	non-compiled	[CE]  >  expected	72	None	replace
375	[BUG]  [BUGGY]  StackTree  <  NUMBER_INDEX  ||  stackSize  >=  0)  {  popStack();  }  else  {  skipStack();  }  [CE]  >  expected  [FE]                        ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {      [BUGGY]  StackTree  <  NUMBER_INDEX  ||  stackSize  >=  0)  {  popStack();  }  else  {  skipStack();  }  [BUGGY]      pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	261	261	2	replace	StackTree  <  NUMBER_INDEX  ||  stackSize  >=  0)  {  popStack();  }  else  {  skipStack();  }	  StackTree    <    NUMBER_INDEX    ||    stackSize    >    0)    {    popStack();    }    else    {    skipStack();    }    	non-compiled	[CE]  >  expected	72	None	replace
376	[BUG]  [BUGGY]  StackTree  <  NUMBER_INDEX  ||  stackSize  >=  0)  {  popStack();  [CE]  >  expected  [FE]                          ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {      [BUGGY]  StackTree  <  NUMBER_INDEX  ||  stackSize  >=  0)  {  popStack();  [BUGGY]      pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	261	261	2	replace	StackTree  <  NUMBER_INDEX  ||  stackSize  >=  0)  {  popStack();	  StackTree    <    NUMBER_INDEX    ||    stackSize    >    0)    {    popStack();    }    else    {    skipStack();    }    	non-compiled	[CE]  >  expected	72	None	replace
377	[BUG]  [BUGGY]  StackTree  <  NUMBER_INDEX  ||  stackSize  ==  0)  {  popStack();  }  else  {  skipStack();  }  [CE]  >  expected  [FE]                            ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {      [BUGGY]  StackTree  <  NUMBER_INDEX  ||  stackSize  ==  0)  {  popStack();  }  else  {  skipStack();  }  [BUGGY]      pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	261	261	2	replace	StackTree  <  NUMBER_INDEX  ||  stackSize  ==  0)  {  popStack();  }  else  {  skipStack();  }	  StackTree    <    NUMBER_INDEX    ||    stackSize    >    0)    {    popStack();    }    else    {    skipStack();    }    	non-compiled	[CE]  >  expected	72	None	replace
378	[BUG]  [BUGGY]  StackTree  <  NUMBER_INDEXES  ||  stackSize  ==  0)  {  popStack();  }  else  {  skipStack();  }  [CE]  >  expected  [FE]                  ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {      [BUGGY]  StackTree  <  NUMBER_INDEXES  ||  stackSize  ==  0)  {  popStack();  }  else  {  skipStack();  }  [BUGGY]      pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	261	261	2	replace	StackTree  <  NUMBER_INDEXES  ||  stackSize  ==  0)  {  popStack();  }  else  {  skipStack();  }	  if(stackSize    ==    0)    {    popStack();    }    else    {    skipStack();    }    	non-compiled	[CE]  >  expected	109	None	replace
379	[BUG]  [BUGGY]  StackTree  <  MISSING_READER  &&  stackSize  ==  0)  {  popStack();  }  else  {  skipStack();  }  [CE]  >  expected  [FE]                    ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {      [BUGGY]  StackTree  <  MISSING_READER  &&  stackSize  ==  0)  {  popStack();  }  else  {  skipStack();  }  [BUGGY]      pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	261	261	2	replace	StackTree  <  MISSING_READER  &&  stackSize  ==  0)  {  popStack();  }  else  {  skipStack();  }	  if(stackSize    ==    0)    {    popStack();    }    else    {    skipStack();    }    	non-compiled	[CE]  >  expected	109	None	replace
380	[BUG]  [BUGGY]  StackTree  <  NUMBER_OF_RANGE  |  stackSize  >  0)  {  popStack();  }  else  {  skipStack();  }  [CE]  >  expected  [FE]                      ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {      [BUGGY]  StackTree  <  NUMBER_OF_RANGE  |  stackSize  >  0)  {  popStack();  }  else  {  skipStack();  }  [BUGGY]      pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	261	261	2	replace	StackTree  <  NUMBER_OF_RANGE  |  stackSize  >  0)  {  popStack();  }  else  {  skipStack();  }	  if(stackSize    ==    0)    {    popStack();    }    else    {    skipStack();    }    	non-compiled	[CE]  >  expected	109	None	replace
381	[BUG]  [BUGGY]  StackTree  <  NUMBER_OF_RANGE  ||  stackSize  ==  0)  {  popStack();  }  else  {  skipStack();  }  [CE]  >  expected  [FE]                        ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {      [BUGGY]  StackTree  <  NUMBER_OF_RANGE  ||  stackSize  ==  0)  {  popStack();  }  else  {  skipStack();  }  [BUGGY]      pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	261	261	2	replace	StackTree  <  NUMBER_OF_RANGE  ||  stackSize  ==  0)  {  popStack();  }  else  {  skipStack();  }	  if(stackSize    ==    0)    {    popStack();    }    else    {    skipStack();    }    	non-compiled	[CE]  >  expected	109	None	replace
382	[BUG]  [BUGGY]  JsonToken  t  =  getCurrentName();  [CE]  cannot  find  symbol  [FE]        AssertionFailedError      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {      [BUGGY]  JsonToken  t  =  getCurrentName();  [BUGGY]      pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	261	261	2	replace	JsonToken  t  =  getCurrentName();	          JsonToken    t    =    getCurrentToken();    	non-compiled	[CE]  cannot  find  symbol	118	None	replace
383	[BUG]  [BUGGY]  JsonToken  t  =  getCurrentToken().name;  [CE]  cannot  find  symbol  [FE]          AssertionFailedError      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {      [BUGGY]  JsonToken  t  =  getCurrentToken().name;  [BUGGY]      pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	261	261	2	replace	JsonToken  t  =  getCurrentToken().name;	          JsonToken    t    =    getCurrentToken();    	non-compiled	[CE]  cannot  find  symbol	118	None	replace
384	[BUG]  [BUGGY]  JsonToken  t  =  getCurrentValue();  [CE]  cannot  find  symbol  [FE]            AssertionFailedError      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {      [BUGGY]  JsonToken  t  =  getCurrentValue();  [BUGGY]      pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	261	261	2	replace	JsonToken  t  =  getCurrentValue();	          JsonToken    t    =    getCurrentToken();    	non-compiled	[CE]  cannot  find  symbol	118	None	replace
385	[BUG]  [BUGGY]  JsonToken  t  =  getCurrentToken().nextToken();  [CE]  cannot  find  symbol  [FE]              AssertionFailedError      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {      [BUGGY]  JsonToken  t  =  getCurrentToken().nextToken();  [BUGGY]      pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	261	261	2	replace	JsonToken  t  =  getCurrentToken().nextToken();	          JsonToken    t    =    getCurrentToken();    	non-compiled	[CE]  cannot  find  symbol	118	None	replace
386	[BUG]  [BUGGY]  JsonToken  t  =  getCurrentToken().first;  [CE]  cannot  find  symbol  [FE]                AssertionFailedError      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {      [BUGGY]  JsonToken  t  =  getCurrentToken().first;  [BUGGY]      pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	261	261	2	replace	JsonToken  t  =  getCurrentToken().first;	          JsonToken    t    =    getCurrentToken();    	non-compiled	[CE]  cannot  find  symbol	118	None	replace
387	[BUG]  [BUGGY]  JsonToken  t  =  getCurrentToken().toString();  [CE]  cannot  find  symbol  [FE]                  AssertionFailedError      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {      [BUGGY]  JsonToken  t  =  getCurrentToken().toString();  [BUGGY]      pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	261	261	2	replace	JsonToken  t  =  getCurrentToken().toString();	          JsonToken    t    =    getCurrentToken();    	non-compiled	[CE]  cannot  find  symbol	118	None	replace
388	[BUG]  [BUGGY]  [FE]  IllegalArgumentException  [FE]    IllegalArgumentException    [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {      [BUGGY]  if(stackSize  ==  0)  {  popStack();  }  else  {  throw  new  IllegalArgumentException(   "   ");  }  if(stackSize  ==  0)  {  popStack();  }  else  {  throw  new  IllegalArgumentException( "   ");  }  [BUGGY]      pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	261	261	2	add	if(stackSize    ==    0)    {    popStack();    }    else    {    throw    new    IllegalArgumentException(   "   ");    }    if(stackSize  ==  0)  {  popStack();  }  else  {  throw  new  IllegalArgumentException( "   ");  }	  	compilable	  [FE]  IllegalArgumentException  	177	2	add
389	[BUG]  [BUGGY]  if(stackSize  ==  0)  {  popStack();  }  else  {  throw  new  IllegalArgumentException(   "   ");  }  if(stackSize  ==  0)  {  popStack();  }  else  {  throw  new  IllegalArgumentException( "   ");  }  [FE]  IllegalArgumentException  [FE]    IllegalArgumentException    [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {      [BUGGY]  if(stackSize  ==  0)  {  popStack();  }  else  {  throw  new  IllegalArgumentException(   "   ");  }  if(stackSize  ==  0)  {  popStack();  }  else  {  throw  new  IllegalArgumentException( "   ");  }  [BUGGY]      pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	261	261	2	replace	if(stackSize    ==    0)    {    popStack();    }    else    {    throw    new    IllegalArgumentException(   "   ");    }    if(stackSize  ==  0)  {  popStack();  }  else  {  throw  new  IllegalArgumentException( "   ");  }	  	compilable	  [FE]  IllegalArgumentException  	177	2	add
390	[BUG]  [BUGGY]  [FE]  IllegalArgumentException  [FE]      IllegalArgumentException    [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {      [BUGGY]  if(stackSize  ==  0)  {  popStack();  }  else  {  throw  new  IllegalArgumentException(   "   ");  }  if(stackSize  >=  0)  {  popStack();  }  else  {  throw  new  IllegalArgumentException( "   ");  }  [BUGGY]      pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	261	261	2	add	if(stackSize    ==    0)    {    popStack();    }    else    {    throw    new    IllegalArgumentException(   "   ");    }    if(stackSize  >=  0)  {  popStack();  }  else  {  throw  new  IllegalArgumentException( "   ");  }	  	compilable	  [FE]  IllegalArgumentException  	177	2	add
391	[BUG]  [BUGGY]  if(stackSize  ==  0)  {  popStack();  }  else  {  throw  new  IllegalArgumentException(   "   ");  }  if(stackSize  >=  0)  {  popStack();  }  else  {  throw  new  IllegalArgumentException( "   ");  }  [FE]  IllegalArgumentException  [FE]      IllegalArgumentException    [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {      [BUGGY]  if(stackSize  ==  0)  {  popStack();  }  else  {  throw  new  IllegalArgumentException(   "   ");  }  if(stackSize  >=  0)  {  popStack();  }  else  {  throw  new  IllegalArgumentException( "   ");  }  [BUGGY]      pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	261	261	2	replace	if(stackSize    ==    0)    {    popStack();    }    else    {    throw    new    IllegalArgumentException(   "   ");    }    if(stackSize  >=  0)  {  popStack();  }  else  {  throw  new  IllegalArgumentException( "   ");  }	  	compilable	  [FE]  IllegalArgumentException  	177	2	add
392	[BUG]  [BUGGY]  if(stackSize  ==  0)  {  popStack();  }  else  {  throw  new  IllegalArgumentException(   "   ");  }  if(stackSize  ==  0)  {  popStack();  }  else  {  throw  new  IllegalArgumentException( " ".);  }  [CE]  <identifier>  expected  [FE]        IllegalArgumentException    [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {      [BUGGY]  if(stackSize  ==  0)  {  popStack();  }  else  {  throw  new  IllegalArgumentException(   "   ");  }  if(stackSize  ==  0)  {  popStack();  }  else  {  throw  new  IllegalArgumentException( " ".);  }  [BUGGY]      pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	261	261	2	replace	if(stackSize    ==    0)    {    popStack();    }    else    {    throw    new    IllegalArgumentException(   "   ");    }    if(stackSize  ==  0)  {  popStack();  }  else  {  throw  new  IllegalArgumentException( " ".);  }	  	non-compiled	[CE]  <identifier>  expected	177	None	add
393	[BUG]  [BUGGY]  [FE]  IllegalArgumentException  [FE]          IllegalArgumentException    [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {      [BUGGY]  if(stackSize  ==  0)  {  popStack();  }  else  {  throw  new  IllegalArgumentException(   "   ");  }  if(stackSize  ==  0)  {  popStack();  }  else  {  throw  new  IllegalArgumentException( ". ");  }  [BUGGY]      pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	261	261	2	add	if(stackSize    ==    0)    {    popStack();    }    else    {    throw    new    IllegalArgumentException(   "   ");    }    if(stackSize  ==  0)  {  popStack();  }  else  {  throw  new  IllegalArgumentException( ". ");  }	  	compilable	  [FE]  IllegalArgumentException  	177	2	add
394	[BUG]  [BUGGY]  if(stackSize  ==  0)  {  popStack();  }  else  {  throw  new  IllegalArgumentException(   "   ");  }  if(stackSize  ==  0)  {  popStack();  }  else  {  throw  new  IllegalArgumentException( ". ");  }  [FE]  IllegalArgumentException  [FE]          IllegalArgumentException    [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {      [BUGGY]  if(stackSize  ==  0)  {  popStack();  }  else  {  throw  new  IllegalArgumentException(   "   ");  }  if(stackSize  ==  0)  {  popStack();  }  else  {  throw  new  IllegalArgumentException( ". ");  }  [BUGGY]      pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	261	261	2	replace	if(stackSize    ==    0)    {    popStack();    }    else    {    throw    new    IllegalArgumentException(   "   ");    }    if(stackSize  ==  0)  {  popStack();  }  else  {  throw  new  IllegalArgumentException( ". ");  }	  	compilable	  [FE]  IllegalArgumentException  	177	2	add
395	[BUG]  [BUGGY]  [FE]  IllegalArgumentException  [FE]            IllegalArgumentException    [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {      [BUGGY]  if(stackSize  ==  0)  {  popStack();  }  else  {  throw  new  IllegalArgumentException(   "   ");  }  if(stackSize  ==  0)  {  popStack();  }  else  {  throw  new  IllegalArgumentException( "... ");  }  [BUGGY]      pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	261	261	2	add	if(stackSize    ==    0)    {    popStack();    }    else    {    throw    new    IllegalArgumentException(   "   ");    }    if(stackSize  ==  0)  {  popStack();  }  else  {  throw  new  IllegalArgumentException( "... ");  }	  	compilable	  [FE]  IllegalArgumentException  	177	2	add
396	[BUG]  [BUGGY]  if(stackSize  ==  0)  {  popStack();  }  else  {  throw  new  IllegalArgumentException(   "   ");  }  if(stackSize  ==  0)  {  popStack();  }  else  {  throw  new  IllegalArgumentException( "... ");  }  [FE]  IllegalArgumentException  [FE]            IllegalArgumentException    [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {      [BUGGY]  if(stackSize  ==  0)  {  popStack();  }  else  {  throw  new  IllegalArgumentException(   "   ");  }  if(stackSize  ==  0)  {  popStack();  }  else  {  throw  new  IllegalArgumentException( "... ");  }  [BUGGY]      pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	261	261	2	replace	if(stackSize    ==    0)    {    popStack();    }    else    {    throw    new    IllegalArgumentException(   "   ");    }    if(stackSize  ==  0)  {  popStack();  }  else  {  throw  new  IllegalArgumentException( "... ");  }	  	compilable	  [FE]  IllegalArgumentException  	177	2	add
397	[BUG]  [BUGGY]  Validate.notNull(pathNames,  stackSize  -  1);  [CE]  cannot  find  symbol  Validate  [FE]                        ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {      [BUGGY]  Validate.notNull(pathNames,  stackSize  -  1);  [BUGGY]      pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	261	261	2	replace	Validate.notNull(pathNames,  stackSize  -  1);	  Validate.notNull(stackSize    -    1);    	non-compiled	[CE]  cannot  find  symbol  Validate	203	None	replace
398	[BUG]  [BUGGY]  Validate.notEmpty(stackSize  -  1);  [CE]  cannot  find  symbol  Validate  [FE]                          ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {      [BUGGY]  Validate.notEmpty(stackSize  -  1);  [BUGGY]      pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	261	261	2	replace	Validate.notEmpty(stackSize  -  1);	  Validate.notNull(stackSize    -    1);    	non-compiled	[CE]  cannot  find  symbol  Validate	203	None	replace
399	[BUG]  [BUGGY]  Validate.notNull(pathIndices,  stackSize  -  1);  [CE]  cannot  find  symbol  Validate  [FE]                            ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {      [BUGGY]  Validate.notNull(pathIndices,  stackSize  -  1);  [BUGGY]      pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	261	261	2	replace	Validate.notNull(pathIndices,  stackSize  -  1);	  Validate.notNull(stackSize    -    1);    	non-compiled	[CE]  cannot  find  symbol  Validate	203	None	replace
400	[BUG]  [BUGGY]  connectToPossibleExceptionHandler(JsonToken.NAME,  pathNames);  [CE]  cannot  find  symbol  [FE]              ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {      [BUGGY]  connectToPossibleExceptionHandler(JsonToken.NAME,  pathNames);  [BUGGY]      pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	261	261	2	replace	connectToPossibleExceptionHandler(JsonToken.NAME,  pathNames);	  connectToPossibleExceptionHandler(JsonToken.NAME);    	non-compiled	[CE]  cannot  find  symbol	113	None	replace
401	[BUG]  [BUGGY]  connectToPossibleExceptionHandler(JsonToken.NAME,  JsonToken.START_OBJECT);  [CE]  cannot  find  symbol  START_OBJECT  [FE]                ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {      [BUGGY]  connectToPossibleExceptionHandler(JsonToken.NAME,  JsonToken.START_OBJECT);  [BUGGY]      pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	261	261	2	replace	connectToPossibleExceptionHandler(JsonToken.NAME,  JsonToken.START_OBJECT);	  connectToPossibleExceptionHandler(JsonToken.NAME);    	non-compiled	[CE]  cannot  find  symbol  START_OBJECT	113	None	replace
402	[BUG]  [BUGGY]  connectToPossibleExceptionHandler(JsonToken.NAME,  SENTINEL_CLOSED);  [CE]  cannot  find  symbol  [FE]                  ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {      [BUGGY]  connectToPossibleExceptionHandler(JsonToken.NAME,  SENTINEL_CLOSED);  [BUGGY]      pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	261	261	2	replace	connectToPossibleExceptionHandler(JsonToken.NAME,  SENTINEL_CLOSED);	  connectToPossibleExceptionHandler(JsonToken.NAME);    	non-compiled	[CE]  cannot  find  symbol	113	None	replace
403	[BUG]  [BUGGY]  connectToPossibleExceptionHandler(JsonToken.NAME,  JsonToken.END_OBJECT);  [CE]  cannot  find  symbol  [FE]                    ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {      [BUGGY]  connectToPossibleExceptionHandler(JsonToken.NAME,  JsonToken.END_OBJECT);  [BUGGY]      pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	261	261	2	replace	connectToPossibleExceptionHandler(JsonToken.NAME,  JsonToken.END_OBJECT);	  connectToPossibleExceptionHandler(JsonToken.NAME);    	non-compiled	[CE]  cannot  find  symbol	113	None	replace
404	[BUG]  [BUGGY]  connectToPossibleExceptionHandler(JsonToken.NAME,  null);  [CE]  cannot  find  symbol  [FE]                      ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {      [BUGGY]  connectToPossibleExceptionHandler(JsonToken.NAME,  null);  [BUGGY]      pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	261	261	2	replace	connectToPossibleExceptionHandler(JsonToken.NAME,  null);	  connectToPossibleExceptionHandler(JsonToken.NAME);    	non-compiled	[CE]  cannot  find  symbol	113	None	replace
405	[BUG]  [BUGGY]  connectToPossibleExceptionHandler(JsonToken.NAME,  nextName());  [CE]  cannot  find  symbol  [FE]                        ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {      [BUGGY]  connectToPossibleExceptionHandler(JsonToken.NAME,  nextName());  [BUGGY]      pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	261	261	2	replace	connectToPossibleExceptionHandler(JsonToken.NAME,  nextName());	  connectToPossibleExceptionHandler(JsonToken.NAME);    	non-compiled	[CE]  cannot  find  symbol	113	None	replace
406	[BUG]  [BUGGY]  connectToPossibleExceptionHandler(JsonToken.NAME,  JsonToken.FUNCTION);  [CE]  cannot  find  symbol  FUNCTION  [FE]                          ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {      [BUGGY]  connectToPossibleExceptionHandler(JsonToken.NAME,  JsonToken.FUNCTION);  [BUGGY]      pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	261	261	2	replace	connectToPossibleExceptionHandler(JsonToken.NAME,  JsonToken.FUNCTION);	  connectToPossibleExceptionHandler(JsonToken.NAME);    	non-compiled	[CE]  cannot  find  symbol  FUNCTION	113	None	replace
407	[BUG]  [BUGGY]  _reportError( "Current  token( "+JsonToken.FIELD_NAME+ ")expected  a  value ");  [CE]  cannot  find  symbol  FIELD_NAME  [FE]                      ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {      [BUGGY]  _reportError( "Current  token( "+JsonToken.FIELD_NAME+ ")expected  a  value ");  [BUGGY]      pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	261	261	2	replace	_reportError( "Current  token( "+JsonToken.FIELD_NAME+ ")expected  a  value ");	  _reportError(   "Current    token(   "+JsonToken.FIELD_NAME+   ")not    a    value   ");    	non-compiled	[CE]  cannot  find  symbol  FIELD_NAME	82	None	replace
408	[BUG]  [BUGGY]  _reportError( "Current  token( "+JsonToken.FIELD_NAME+ ")is  not  a  value ");  [CE]  cannot  find  symbol  FIELD_NAME  [FE]                        ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {      [BUGGY]  _reportError( "Current  token( "+JsonToken.FIELD_NAME+ ")is  not  a  value ");  [BUGGY]      pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	261	261	2	replace	_reportError( "Current  token( "+JsonToken.FIELD_NAME+ ")is  not  a  value ");	  _reportError(   "Current    token(   "+JsonToken.FIELD_NAME+   ")not    a    value   ");    	non-compiled	[CE]  cannot  find  symbol  FIELD_NAME	82	None	replace
409	[BUG]  [BUGGY]  _reportError( "Current  token( "+JsonToken.FIELD_NAME+ ")was  expecting  a  value ");  [CE]  cannot  find  symbol  FIELD_NAME  [FE]                          ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {      [BUGGY]  _reportError( "Current  token( "+JsonToken.FIELD_NAME+ ")was  expecting  a  value ");  [BUGGY]      pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	261	261	2	replace	_reportError( "Current  token( "+JsonToken.FIELD_NAME+ ")was  expecting  a  value ");	  _reportError(   "Current    token(   "+JsonToken.FIELD_NAME+   ")not    a    value   ");    	non-compiled	[CE]  cannot  find  symbol  FIELD_NAME	82	None	replace
410	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {      [BUGGY]  pathIndices[stackSize  -  1]++;  [BUGGY]      pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	261	261	2	add	pathIndices[stackSize  -  1]++;	  if(stackSize    >    0)    {    popStack();    }    else    {    JsonToken    START_OBJECT    =    null;    nextName();    pathNames[stackSize    -    1]    =    null;    }    	compilable	  [FE]  AssertionFailedError  	139	2	replace
411	[BUG]  [BUGGY]  pathIndices[stackSize  -  1]++;  [FE]  AssertionFailedError  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {      [BUGGY]  pathIndices[stackSize  -  1]++;  [BUGGY]      pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	261	261	2	replace	pathIndices[stackSize  -  1]++;	  if(stackSize    >    0)    {    popStack();    }    else    {    JsonToken    START_OBJECT    =    null;    nextName();    pathNames[stackSize    -    1]    =    null;    }    	compilable	  [FE]  AssertionFailedError  	139	2	replace
412	[BUG]  [BUGGY]  connectToPossibleExceptionHandler(JsonToken.EMPTY);  [CE]  cannot  find  symbol  EMPTY  [FE]              ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {      [BUGGY]  connectToPossibleExceptionHandler(JsonToken.EMPTY);  [BUGGY]      pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	261	261	2	replace	connectToPossibleExceptionHandler(JsonToken.EMPTY);	  connectToPossibleExceptionHandler(jsonToken);    	non-compiled	[CE]  cannot  find  symbol  EMPTY	183	None	replace
413	[BUG]  [BUGGY]  connectToPossibleExceptionHandler(JsonToken.FUNCTION);  [CE]  cannot  find  symbol  FUNCTION  [FE]                ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {      [BUGGY]  connectToPossibleExceptionHandler(JsonToken.FUNCTION);  [BUGGY]      pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	261	261	2	replace	connectToPossibleExceptionHandler(JsonToken.FUNCTION);	  connectToPossibleExceptionHandler(jsonToken);    	non-compiled	[CE]  cannot  find  symbol  FUNCTION	183	None	replace
414	[BUG]  [BUGGY]  [FE]  StackOverflowError  [FE]                  ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {      [BUGGY]  skipValue();  [BUGGY]      pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	261	261	2	add	skipValue();	  hop();    	compilable	  [FE]  StackOverflowError  	62	2	replace
415	[BUG]  [BUGGY]  skipValue();  [FE]  StackOverflowError  [FE]                  ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {      [BUGGY]  skipValue();  [BUGGY]      pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	261	261	2	replace	skipValue();	  hop();    	compilable	  [FE]  StackOverflowError  	62	2	replace
416	[BUG]  [BUGGY]  hop(JsonToken.VALUE_NUMBER_EXPR_RESULT);  [CE]  cannot  find  symbol  VALUE_NUMBER_EXPR_RESULT  [FE]                    ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {      [BUGGY]  hop(JsonToken.VALUE_NUMBER_EXPR_RESULT);  [BUGGY]      pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	261	261	2	replace	hop(JsonToken.VALUE_NUMBER_EXPR_RESULT);	  hop();    	non-compiled	[CE]  cannot  find  symbol  VALUE_NUMBER_EXPR_RESULT	62	None	replace
417	[BUG]  [BUGGY]  hop(JsonToken.VALUE_NULL);  [CE]  cannot  find  symbol  VALUE_NULL  [FE]                      ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {      [BUGGY]  hop(JsonToken.VALUE_NULL);  [BUGGY]      pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	261	261	2	replace	hop(JsonToken.VALUE_NULL);	  hop();    	non-compiled	[CE]  cannot  find  symbol  VALUE_NULL	62	None	replace
418	[BUG]  [BUGGY]  execute(JsonToken.VALUE_NUMBER_INT,  stackSize  -  1);  [CE]  cannot  find  symbol  VALUE_NUMBER_INT  [FE]                        ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {      [BUGGY]  execute(JsonToken.VALUE_NUMBER_INT,  stackSize  -  1);  [BUGGY]      pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	261	261	2	replace	execute(JsonToken.VALUE_NUMBER_INT,  stackSize  -  1);	  hop();    	non-compiled	[CE]  cannot  find  symbol  VALUE_NUMBER_INT	62	None	replace
419	[BUG]  [BUGGY]  hop(JsonToken.VALUE_NUMBER_FLOAT);  [CE]  cannot  find  symbol  VALUE_NUMBER_FLOAT  [FE]                          ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {      [BUGGY]  hop(JsonToken.VALUE_NUMBER_FLOAT);  [BUGGY]      pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	261	261	2	replace	hop(JsonToken.VALUE_NUMBER_FLOAT);	  hop();    	non-compiled	[CE]  cannot  find  symbol  VALUE_NUMBER_FLOAT	62	None	replace
420	[BUG]  [BUGGY]  hop(JsonToken.VALUE_NUMBER_INT);  [CE]  cannot  find  symbol  VALUE_NUMBER_INT  [FE]                            ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {      [BUGGY]  hop(JsonToken.VALUE_NUMBER_INT);  [BUGGY]      pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	261	261	2	replace	hop(JsonToken.VALUE_NUMBER_INT);	  hop();    	non-compiled	[CE]  cannot  find  symbol  VALUE_NUMBER_INT	62	None	replace
421	[BUG]  [BUGGY]  connectToPeek(JsonToken.VALUE_NUMBER_FLOAT,  SENTINEL_CLOSED);  [CE]  cannot  find  symbol  VALUE_NUMBER_FLOAT  [FE]                          ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {      [BUGGY]  connectToPeek(JsonToken.VALUE_NUMBER_FLOAT,  SENTINEL_CLOSED);  [BUGGY]      pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	261	261	2	replace	connectToPeek(JsonToken.VALUE_NUMBER_FLOAT,  SENTINEL_CLOSED);	  connectToPeek(JsonToken.VALUE_NUMBER_FLOAT);    	non-compiled	[CE]  cannot  find  symbol  VALUE_NUMBER_FLOAT	46	None	replace
422	[BUG]  [BUGGY]  connectToPeek(JsonToken.VALUE_NUMBER_FLOAT,  JsonToken.START_OBJECT);  [CE]  cannot  find  symbol  VALUE_NUMBER_FLOAT  [FE]                            ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {      [BUGGY]  connectToPeek(JsonToken.VALUE_NUMBER_FLOAT,  JsonToken.START_OBJECT);  [BUGGY]      pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	261	261	2	replace	connectToPeek(JsonToken.VALUE_NUMBER_FLOAT,  JsonToken.START_OBJECT);	  connectToPeek(JsonToken.VALUE_NUMBER_FLOAT);    	non-compiled	[CE]  cannot  find  symbol  VALUE_NUMBER_FLOAT	46	None	replace
423	[BUG]  [BUGGY]  connectToPeek(JsonToken.VALUE_NUMBER_FLOAT,  null);  [CE]  cannot  find  symbol  VALUE_NUMBER_FLOAT  [FE]                              ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {      [BUGGY]  connectToPeek(JsonToken.VALUE_NUMBER_FLOAT,  null);  [BUGGY]      pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	261	261	2	replace	connectToPeek(JsonToken.VALUE_NUMBER_FLOAT,  null);	  connectToPeek(JsonToken.VALUE_NUMBER_FLOAT);    	non-compiled	[CE]  cannot  find  symbol  VALUE_NUMBER_FLOAT	46	None	replace
424	[BUG]  [BUGGY]  connectToPeek(JsonToken.NAME,  pathNames);  [CE]  cannot  find  symbol  [FE]                      ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {      [BUGGY]  connectToPeek(JsonToken.NAME,  pathNames);  [BUGGY]      pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	261	261	2	replace	connectToPeek(JsonToken.NAME,  pathNames);	  connectToPeek(JsonToken.NAME);    	non-compiled	[CE]  cannot  find  symbol	44	None	replace
425	[BUG]  [BUGGY]  connectToPeek(JsonToken.NAME,  SENTINEL_CLOSED);  [CE]  cannot  find  symbol  [FE]                        ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {      [BUGGY]  connectToPeek(JsonToken.NAME,  SENTINEL_CLOSED);  [BUGGY]      pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	261	261	2	replace	connectToPeek(JsonToken.NAME,  SENTINEL_CLOSED);	  connectToPeek(JsonToken.NAME);    	non-compiled	[CE]  cannot  find  symbol	44	None	replace
426	[BUG]  [BUGGY]  connectToPeek(JsonToken.NAME,  JsonToken.START_OBJECT);  [CE]  cannot  find  symbol  START_OBJECT  [FE]                          ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {      [BUGGY]  connectToPeek(JsonToken.NAME,  JsonToken.START_OBJECT);  [BUGGY]      pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	261	261	2	replace	connectToPeek(JsonToken.NAME,  JsonToken.START_OBJECT);	  connectToPeek(JsonToken.NAME);    	non-compiled	[CE]  cannot  find  symbol  START_OBJECT	44	None	replace
427	[BUG]  [BUGGY]  connectToPeek(JsonToken.NAME,  null);  [CE]  cannot  find  symbol  [FE]                            ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {      [BUGGY]  connectToPeek(JsonToken.NAME,  null);  [BUGGY]      pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	261	261	2	replace	connectToPeek(JsonToken.NAME,  null);	  connectToPeek(JsonToken.NAME);    	non-compiled	[CE]  cannot  find  symbol	44	None	replace
428	[BUG]  [BUGGY]  connectToPeek(JsonToken.NAME,  nextName());  [CE]  cannot  find  symbol  [FE]                              ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {      [BUGGY]  connectToPeek(JsonToken.NAME,  nextName());  [BUGGY]      pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	261	261	2	replace	connectToPeek(JsonToken.NAME,  nextName());	  connectToPeek(JsonToken.NAME);    	non-compiled	[CE]  cannot  find  symbol	44	None	replace
429	[BUG]  [BUGGY]  connectToPeek(JsonToken.NAME,  stackSize);  [CE]  cannot  find  symbol  [FE]                                ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {      [BUGGY]  connectToPeek(JsonToken.NAME,  stackSize);  [BUGGY]      pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	261	261	2	replace	connectToPeek(JsonToken.NAME,  stackSize);	  connectToPeek(JsonToken.NAME);    	non-compiled	[CE]  cannot  find  symbol	44	None	replace
430	[BUG]  [BUGGY]  connectToPeek(JsonToken.NAME,  STACK_SIZE);  [CE]  cannot  find  symbol  STACK_SIZE  [FE]                                  ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {      [BUGGY]  connectToPeek(JsonToken.NAME,  STACK_SIZE);  [BUGGY]      pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	261	261	2	replace	connectToPeek(JsonToken.NAME,  STACK_SIZE);	  connectToPeek(JsonToken.NAME);    	non-compiled	[CE]  cannot  find  symbol  STACK_SIZE	44	None	replace
431	[BUG]  [BUGGY]  pathIndices[stackSize  -  1]  =  JsonToken.VALUE_EMPTY;  [CE]  cannot  find  symbol  VALUE_EMPTY  [FE]                        ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {      [BUGGY]  pathIndices[stackSize  -  1]  =  JsonToken.VALUE_EMPTY;  [BUGGY]      pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	261	261	2	replace	pathIndices[stackSize  -  1]  =  JsonToken.VALUE_EMPTY;	  pathIndices[stackSize    -    1]    =    null;    	non-compiled	[CE]  cannot  find  symbol  VALUE_EMPTY	19	None	replace
432	[BUG]  [BUGGY]  pathIndices[stackSize  -  1]  =  JsonToken.VALUE_EMBEDDED_ARRAY;  [CE]  cannot  find  symbol  VALUE_EMBEDDED_ARRAY  [FE]                          ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {      [BUGGY]  pathIndices[stackSize  -  1]  =  JsonToken.VALUE_EMBEDDED_ARRAY;  [BUGGY]      pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	261	261	2	replace	pathIndices[stackSize  -  1]  =  JsonToken.VALUE_EMBEDDED_ARRAY;	  pathIndices[stackSize    -    1]    =    null;    	non-compiled	[CE]  cannot  find  symbol  VALUE_EMBEDDED_ARRAY	19	None	replace
433	[BUG]  [BUGGY]  pathIndices[stackSize  -  1]  =  JsonToken.VALUE_EMBEDDED_OBJECT;  [CE]  cannot  find  symbol  VALUE_EMBEDDED_OBJECT  [FE]                            ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {      [BUGGY]  pathIndices[stackSize  -  1]  =  JsonToken.VALUE_EMBEDDED_OBJECT;  [BUGGY]      pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	261	261	2	replace	pathIndices[stackSize  -  1]  =  JsonToken.VALUE_EMBEDDED_OBJECT;	  pathIndices[stackSize    -    1]    =    null;    	non-compiled	[CE]  cannot  find  symbol  VALUE_EMBEDDED_OBJECT	19	None	replace
434	[BUG]  [BUGGY]  pathIndices[stackSize  -  1]  =  JsonToken.VALUE_STRING;  [CE]  cannot  find  symbol  VALUE_STRING  [FE]                              ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {      [BUGGY]  pathIndices[stackSize  -  1]  =  JsonToken.VALUE_STRING;  [BUGGY]      pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	261	261	2	replace	pathIndices[stackSize  -  1]  =  JsonToken.VALUE_STRING;	  pathIndices[stackSize    -    1]    =    null;    	non-compiled	[CE]  cannot  find  symbol  VALUE_STRING	19	None	replace
435	[BUG]  [BUGGY]  pathNames[stackSize  -  2]  =  null   ";  [CE]  unclosed  string  literal  [FE]                      ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {      [BUGGY]  pathNames[stackSize  -  2]  =  null   ";  [BUGGY]      pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	261	261	2	replace	pathNames[stackSize  -  2]  =  null   ";	  pathNames[stackSize    -    1]    =    null       ";    	non-compiled	[CE]  unclosed  string  literal	221	None	replace
436	[BUG]  [BUGGY]  _reportError( "Current  token( "+getClass().getName()  + ")not  a  value. ",  JsonToken.NAME);  [CE]  cannot  find  symbol  [FE]            ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {      [BUGGY]  _reportError( "Current  token( "+getClass().getName()  + ")not  a  value. ",  JsonToken.NAME);  [BUGGY]      pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	261	261	2	replace	_reportError( "Current  token( "+getClass().getName()  + ")not  a  value. ",  JsonToken.NAME);	  _reportError(   "Current    token(   "+getClass().getName()    +   ")not    a    value   ",    JsonToken.NAME);    	non-compiled	[CE]  cannot  find  symbol	154	None	replace
437	[BUG]  [BUGGY]  _reportError( "Current  token( "+getClass().getName()  + ")is  not  a  value ",  JsonToken.NAME);  [CE]  cannot  find  symbol  [FE]              ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {      [BUGGY]  _reportError( "Current  token( "+getClass().getName()  + ")is  not  a  value ",  JsonToken.NAME);  [BUGGY]      pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	261	261	2	replace	_reportError( "Current  token( "+getClass().getName()  + ")is  not  a  value ",  JsonToken.NAME);	  _reportError(   "Current    token(   "+getClass().getName()    +   ")not    a    value   ",    JsonToken.NAME);    	non-compiled	[CE]  cannot  find  symbol	154	None	replace
438	[BUG]  [BUGGY]  JsonToken.START_OBJECT  =  _throwInternal();  [CE]  cannot  find  symbol  START_OBJECT  [FE]                ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {      [BUGGY]  JsonToken.START_OBJECT  =  _throwInternal();  [BUGGY]      pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	261	261	2	replace	JsonToken.START_OBJECT  =  _throwInternal();	  JsonToken.START_OBJECT    =    _reportUnsupportedOperation();    	non-compiled	[CE]  cannot  find  symbol  START_OBJECT	214	None	replace
439	[BUG]  [BUGGY]  JsonToken.START_OBJECT  =  reportUnsupportedOperation();  [CE]  cannot  find  symbol  START_OBJECT  [FE]                  ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {      [BUGGY]  JsonToken.START_OBJECT  =  reportUnsupportedOperation();  [BUGGY]      pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	261	261	2	replace	JsonToken.START_OBJECT  =  reportUnsupportedOperation();	  JsonToken.START_OBJECT    =    _reportUnsupportedOperation();    	non-compiled	[CE]  cannot  find  symbol  START_OBJECT	214	None	replace
440	[BUG]  [BUGGY]  JsonToken.START_OBJECT  =  _throwUnsupportedOperation();  [CE]  cannot  find  symbol  START_OBJECT  [FE]                    ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {      [BUGGY]  JsonToken.START_OBJECT  =  _throwUnsupportedOperation();  [BUGGY]      pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	261	261	2	replace	JsonToken.START_OBJECT  =  _throwUnsupportedOperation();	  JsonToken.START_OBJECT    =    _reportUnsupportedOperation();    	non-compiled	[CE]  cannot  find  symbol  START_OBJECT	214	None	replace
441	[BUG]  [BUGGY]  JsonToken.START_OBJECT  =  _throwAsIOException( " ");  [CE]  cannot  find  symbol  START_OBJECT  [FE]                      ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {      [BUGGY]  JsonToken.START_OBJECT  =  _throwAsIOException( " ");  [BUGGY]      pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	261	261	2	replace	JsonToken.START_OBJECT  =  _throwAsIOException( " ");	  JsonToken.START_OBJECT    =    _reportUnsupportedOperation();    	non-compiled	[CE]  cannot  find  symbol  START_OBJECT	214	None	replace
442	[BUG]  [BUGGY]  JsonToken.START_OBJECT  =  getCurrentToken();  [CE]  cannot  find  symbol  START_OBJECT  [FE]                        ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {      [BUGGY]  JsonToken.START_OBJECT  =  getCurrentToken();  [BUGGY]      pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	261	261	2	replace	JsonToken.START_OBJECT  =  getCurrentToken();	  JsonToken.START_OBJECT    =    _reportUnsupportedOperation();    	non-compiled	[CE]  cannot  find  symbol  START_OBJECT	214	None	replace
443	[BUG]  [BUGGY]  _reportError( "Current  token( "+getClass().getName()  + ")not  null. ",  JsonToken.NAME);  [CE]  cannot  find  symbol  [FE]                  ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {      [BUGGY]  _reportError( "Current  token( "+getClass().getName()  + ")not  null. ",  JsonToken.NAME);  [BUGGY]      pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	261	261	2	replace	_reportError( "Current  token( "+getClass().getName()  + ")not  null. ",  JsonToken.NAME);	  _reportError(   "Current    token(   "+getClass().getName()    +   ")not    null   ",    JsonToken.NAME);    	non-compiled	[CE]  cannot  find  symbol	115	None	replace
444	[BUG]  [BUGGY]  _reportError( "Current  token( "+getClass().getName()  + ")not  null,  JsonToken.NAME);  [CE]  unclosed  string  literal  [FE]                    ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {      [BUGGY]  _reportError( "Current  token( "+getClass().getName()  + ")not  null,  JsonToken.NAME);  [BUGGY]      pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	261	261	2	replace	_reportError( "Current  token( "+getClass().getName()  + ")not  null,  JsonToken.NAME);	  _reportError(   "Current    token(   "+getClass().getName()    +   ")not    null   ",    JsonToken.NAME);    	non-compiled	[CE]  unclosed  string  literal	115	None	replace
445	[BUG]  [BUGGY]  _reportError( "Current  token( "+getClass().getName()  + ")not  null, ",  JsonToken.NAME);  [CE]  cannot  find  symbol  [FE]                      ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {      [BUGGY]  _reportError( "Current  token( "+getClass().getName()  + ")not  null, ",  JsonToken.NAME);  [BUGGY]      pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	261	261	2	replace	_reportError( "Current  token( "+getClass().getName()  + ")not  null, ",  JsonToken.NAME);	  _reportError(   "Current    token(   "+getClass().getName()    +   ")not    null   ",    JsonToken.NAME);    	non-compiled	[CE]  cannot  find  symbol	115	None	replace
446	[BUG]  [BUGGY]  pathIndices[stackSize  -  1]  =  null  [CE]  ';'  expected  [FE]                  ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {      [BUGGY]  pathIndices[stackSize  -  1]  =  null  [BUGGY]      pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	261	261	2	replace	pathIndices[stackSize  -  1]  =  null	  if(stackSize    >    0)    {    popStack();    }    else    {    JsonToken.VALUE_NULL    =    new    JsonToken(JsonToken.FIELD_NAME);    pathNames[stackSize    -    1]    =    null    	non-compiled	[CE]  ';'  expected	150	None	replace
447	[BUG]  [BUGGY]  pathIndices[stackSize  -  1]  =  null  >>  ';'  [CE]  ';'  expected  [FE]                    ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {      [BUGGY]  pathIndices[stackSize  -  1]  =  null  >>  ';'  [BUGGY]      pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	261	261	2	replace	pathIndices[stackSize  -  1]  =  null  >>  ';'	  if(stackSize    >    0)    {    popStack();    }    else    {    JsonToken.VALUE_NULL    =    new    JsonToken(JsonToken.FIELD_NAME);    pathNames[stackSize    -    1]    =    null    	non-compiled	[CE]  ';'  expected	150	None	replace
448	[BUG]  [BUGGY]  pathIndices[stackSize  -  1]  =  null!=  ';'  [CE]  ';'  expected  [FE]                      ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {      [BUGGY]  pathIndices[stackSize  -  1]  =  null!=  ';'  [BUGGY]      pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	261	261	2	replace	pathIndices[stackSize  -  1]  =  null!=  ';'	  if(stackSize    >    0)    {    popStack();    }    else    {    JsonToken.VALUE_NULL    =    new    JsonToken(JsonToken.FIELD_NAME);    pathNames[stackSize    -    1]    =    null    	non-compiled	[CE]  ';'  expected	150	None	replace
449	[BUG]  [BUGGY]  connectToPossibleExceptionHandler(JsonToken.START_OBJECT,  pathNames);  [CE]  cannot  find  symbol  START_OBJECT  [FE]              ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {      [BUGGY]  connectToPossibleExceptionHandler(JsonToken.START_OBJECT,  pathNames);  [BUGGY]      pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	261	261	2	replace	connectToPossibleExceptionHandler(JsonToken.START_OBJECT,  pathNames);	  connectToPossibleExceptionHandler(JsonToken.START_OBJECT);    	non-compiled	[CE]  cannot  find  symbol  START_OBJECT	2	None	replace
450	[BUG]  [BUGGY]  connectToPossibleExceptionHandler(JsonToken.START_OBJECT,  null);  [CE]  cannot  find  symbol  START_OBJECT  [FE]                ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {      [BUGGY]  connectToPossibleExceptionHandler(JsonToken.START_OBJECT,  null);  [BUGGY]      pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	261	261	2	replace	connectToPossibleExceptionHandler(JsonToken.START_OBJECT,  null);	  connectToPossibleExceptionHandler(JsonToken.START_OBJECT);    	non-compiled	[CE]  cannot  find  symbol  START_OBJECT	2	None	replace
451	[BUG]  [BUGGY]  connectToPossibleExceptionHandler(JsonToken.START_OBJECT,  JsonToken.END_OBJECT);  [CE]  cannot  find  symbol  START_OBJECT  [FE]                  ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {      [BUGGY]  connectToPossibleExceptionHandler(JsonToken.START_OBJECT,  JsonToken.END_OBJECT);  [BUGGY]      pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	261	261	2	replace	connectToPossibleExceptionHandler(JsonToken.START_OBJECT,  JsonToken.END_OBJECT);	  connectToPossibleExceptionHandler(JsonToken.START_OBJECT);    	non-compiled	[CE]  cannot  find  symbol  START_OBJECT	2	None	replace
452	[BUG]  [BUGGY]  connectToPossibleExceptionHandler(JsonToken.START_OBJECT,  nextName());  [CE]  cannot  find  symbol  START_OBJECT  [FE]                    ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {      [BUGGY]  connectToPossibleExceptionHandler(JsonToken.START_OBJECT,  nextName());  [BUGGY]      pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	261	261	2	replace	connectToPossibleExceptionHandler(JsonToken.START_OBJECT,  nextName());	  connectToPossibleExceptionHandler(JsonToken.START_OBJECT);    	non-compiled	[CE]  cannot  find  symbol  START_OBJECT	2	None	replace
453	[BUG]  [BUGGY]  connectToPossibleExceptionHandler(JsonToken.START_OBJECT,  JsonToken.START_NAME);  [CE]  cannot  find  symbol  START_OBJECT  [FE]                      ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {      [BUGGY]  connectToPossibleExceptionHandler(JsonToken.START_OBJECT,  JsonToken.START_NAME);  [BUGGY]      pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	261	261	2	replace	connectToPossibleExceptionHandler(JsonToken.START_OBJECT,  JsonToken.START_NAME);	  connectToPossibleExceptionHandler(JsonToken.START_OBJECT);    	non-compiled	[CE]  cannot  find  symbol  START_OBJECT	2	None	replace
454	[BUG]  [BUGGY]  connectToPossibleExceptionHandler(JsonToken.START_OBJECT,  JsonToken.START_ARRAY);  [CE]  cannot  find  symbol  START_OBJECT  [FE]                        ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {      [BUGGY]  connectToPossibleExceptionHandler(JsonToken.START_OBJECT,  JsonToken.START_ARRAY);  [BUGGY]      pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	261	261	2	replace	connectToPossibleExceptionHandler(JsonToken.START_OBJECT,  JsonToken.START_ARRAY);	  connectToPossibleExceptionHandler(JsonToken.START_OBJECT);    	non-compiled	[CE]  cannot  find  symbol  START_OBJECT	2	None	replace
455	[BUG]  [BUGGY]  [FE]  ArrayIndexOutOfBoundsException  [FE]            ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {      [BUGGY]  if(stack.length  >  0)  {  popStack();  }  [BUGGY]      pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	261	261	2	add	if(stack.length  >  0)  {  popStack();  }	  if(stackSize    >    0)    {    popStack();    }    if(stackSsize    >    0)    {    popStack();    }    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	209	2	replace
456	[BUG]  [BUGGY]  if(stack.length  >  0)  {  popStack();  }  [FE]  ArrayIndexOutOfBoundsException  [FE]            ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {      [BUGGY]  if(stack.length  >  0)  {  popStack();  }  [BUGGY]      pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	261	261	2	replace	if(stack.length  >  0)  {  popStack();  }	  if(stackSize    >    0)    {    popStack();    }    if(stackSsize    >    0)    {    popStack();    }    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	209	2	replace
457	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]              ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {      [BUGGY]  if(stackSize  <  1)  {  popStack();  }  [BUGGY]      pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	261	261	2	add	if(stackSize  <  1)  {  popStack();  }	  if(stackSize    >    0)    {    popStack();    }    if(stackSsize    >    0)    {    popStack();    }    	compilable	  [FE]  AssertionFailedError  	209	2	replace
458	[BUG]  [BUGGY]  if(stackSize  <  1)  {  popStack();  }  [FE]  AssertionFailedError  [FE]              ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {      [BUGGY]  if(stackSize  <  1)  {  popStack();  }  [BUGGY]      pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	261	261	2	replace	if(stackSize  <  1)  {  popStack();  }	  if(stackSize    >    0)    {    popStack();    }    if(stackSsize    >    0)    {    popStack();    }    	compilable	  [FE]  AssertionFailedError  	209	2	replace
459	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]                ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {      [BUGGY]  if(stackSize  ==  0)  {  popStack();  }  [BUGGY]      pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	261	261	2	add	if(stackSize  ==  0)  {  popStack();  }	  if(stackSize    >    0)    {    popStack();    }    if(stackSsize    >    0)    {    popStack();    }    	compilable	  [FE]  AssertionFailedError  	209	2	replace
460	[BUG]  [BUGGY]  if(stackSize  ==  0)  {  popStack();  }  [FE]  AssertionFailedError  [FE]                ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {      [BUGGY]  if(stackSize  ==  0)  {  popStack();  }  [BUGGY]      pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	261	261	2	replace	if(stackSize  ==  0)  {  popStack();  }	  if(stackSize    >    0)    {    popStack();    }    if(stackSsize    >    0)    {    popStack();    }    	compilable	  [FE]  AssertionFailedError  	209	2	replace
461	[BUG]  [BUGGY]  if(count  >  0)  {  popStack();  }  [CE]  cannot  find  symbol  count  [FE]                  ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {      [BUGGY]  if(count  >  0)  {  popStack();  }  [BUGGY]      pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	261	261	2	replace	if(count  >  0)  {  popStack();  }	  if(stackSize    >    0)    {    popStack();    }    if(stackSsize    >    0)    {    popStack();    }    	non-compiled	[CE]  cannot  find  symbol  count	209	None	replace
462	[BUG]  [BUGGY]  [FE]  ArrayIndexOutOfBoundsException  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {      [BUGGY]          if(stackSize  >  0)  {  pathNames[stackSize  -  1]  =  null;  }  if(stackSize  >  0)  {  pathNames[stackSize  -  1]  =  null;  }  [BUGGY]      pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	261	261	2	add	                if(stackSize    >    0)    {    pathNames[stackSize    -    1]    =    null;    }    if(stackSize  >  0)  {  pathNames[stackSize  -  1]  =  null;  }	  	compilable	  [FE]  ArrayIndexOutOfBoundsException  	173	2	add
463	[BUG]  [BUGGY]          if(stackSize  >  0)  {  pathNames[stackSize  -  1]  =  null;  }  if(stackSize  >  0)  {  pathNames[stackSize  -  1]  =  null;  }  [FE]  ArrayIndexOutOfBoundsException  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {      [BUGGY]          if(stackSize  >  0)  {  pathNames[stackSize  -  1]  =  null;  }  if(stackSize  >  0)  {  pathNames[stackSize  -  1]  =  null;  }  [BUGGY]      pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	261	261	2	replace	                if(stackSize    >    0)    {    pathNames[stackSize    -    1]    =    null;    }    if(stackSize  >  0)  {  pathNames[stackSize  -  1]  =  null;  }	  	compilable	  [FE]  ArrayIndexOutOfBoundsException  	173	2	add
464	[BUG]  [BUGGY]          if(stackSize  >  0)  {  pathNames[stackSize  -  1]  =  null;  }  If(stackSize  >  0)  {  pathNames[stackSize  -  1]  =  null;  }  [CE]  ';'  expected  [FE]      ArrayIndexOutOfBoundsException    [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {      [BUGGY]          if(stackSize  >  0)  {  pathNames[stackSize  -  1]  =  null;  }  If(stackSize  >  0)  {  pathNames[stackSize  -  1]  =  null;  }  [BUGGY]      pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	261	261	2	replace	                if(stackSize    >    0)    {    pathNames[stackSize    -    1]    =    null;    }    If(stackSize  >  0)  {  pathNames[stackSize  -  1]  =  null;  }	  	non-compiled	[CE]  ';'  expected	173	None	add
465	[BUG]  [BUGGY]          if(stackSize  >  0)  {  pathNames[stackSize  -  1]  =  null;  }  if(stackSize  >  0)  {  pathNames[stackSize  -  1].  =  null;  }  [CE]  <identifier>  expected  [FE]        ArrayIndexOutOfBoundsException    [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {      [BUGGY]          if(stackSize  >  0)  {  pathNames[stackSize  -  1]  =  null;  }  if(stackSize  >  0)  {  pathNames[stackSize  -  1].  =  null;  }  [BUGGY]      pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	261	261	2	replace	                if(stackSize    >    0)    {    pathNames[stackSize    -    1]    =    null;    }    if(stackSize  >  0)  {  pathNames[stackSize  -  1].  =  null;  }	  	non-compiled	[CE]  <identifier>  expected	173	None	add
466	[BUG]  [BUGGY]  [FE]  ArrayIndexOutOfBoundsException  [FE]          ArrayIndexOutOfBoundsException    [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {      [BUGGY]          if(stackSize  >  0)  {  pathNames[stackSize  -  1]  =  null;  }  if(stackSize  >  0)  {  pathNames[stackSize  +  1]  =  null;  }  [BUGGY]      pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	261	261	2	add	                if(stackSize    >    0)    {    pathNames[stackSize    -    1]    =    null;    }    if(stackSize  >  0)  {  pathNames[stackSize  +  1]  =  null;  }	  	compilable	  [FE]  ArrayIndexOutOfBoundsException  	173	2	add
467	[BUG]  [BUGGY]          if(stackSize  >  0)  {  pathNames[stackSize  -  1]  =  null;  }  if(stackSize  >  0)  {  pathNames[stackSize  +  1]  =  null;  }  [FE]  ArrayIndexOutOfBoundsException  [FE]          ArrayIndexOutOfBoundsException    [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {      [BUGGY]          if(stackSize  >  0)  {  pathNames[stackSize  -  1]  =  null;  }  if(stackSize  >  0)  {  pathNames[stackSize  +  1]  =  null;  }  [BUGGY]      pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	261	261	2	replace	                if(stackSize    >    0)    {    pathNames[stackSize    -    1]    =    null;    }    if(stackSize  >  0)  {  pathNames[stackSize  +  1]  =  null;  }	  	compilable	  [FE]  ArrayIndexOutOfBoundsException  	173	2	add
468	[BUG]  [BUGGY]  [FE]  ArrayIndexOutOfBoundsException  [FE]            ArrayIndexOutOfBoundsException    [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {      [BUGGY]          if(stackSize  >  0)  {  pathNames[stackSize  -  1]  =  null;  }  if(stackSize  >  0)  {  pathNames[stackSize  -  2]  =  null;  }  [BUGGY]      pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	261	261	2	add	                if(stackSize    >    0)    {    pathNames[stackSize    -    1]    =    null;    }    if(stackSize  >  0)  {  pathNames[stackSize  -  2]  =  null;  }	  	compilable	  [FE]  ArrayIndexOutOfBoundsException  	173	2	add
469	[BUG]  [BUGGY]          if(stackSize  >  0)  {  pathNames[stackSize  -  1]  =  null;  }  if(stackSize  >  0)  {  pathNames[stackSize  -  2]  =  null;  }  [FE]  ArrayIndexOutOfBoundsException  [FE]            ArrayIndexOutOfBoundsException    [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {      [BUGGY]          if(stackSize  >  0)  {  pathNames[stackSize  -  1]  =  null;  }  if(stackSize  >  0)  {  pathNames[stackSize  -  2]  =  null;  }  [BUGGY]      pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	261	261	2	replace	                if(stackSize    >    0)    {    pathNames[stackSize    -    1]    =    null;    }    if(stackSize  >  0)  {  pathNames[stackSize  -  2]  =  null;  }	  	compilable	  [FE]  ArrayIndexOutOfBoundsException  	173	2	add
470	[BUG]  [BUGGY]          if(stackSize  >  0)  {  pathNames[stackSize  -  1]  =  null;  }  if(stackSize  >  0)  {  pathNames[stackSsize  -  1]  =  null;  }  [CE]  cannot  find  symbol  stackSsize  [FE]              ArrayIndexOutOfBoundsException    [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {      [BUGGY]          if(stackSize  >  0)  {  pathNames[stackSize  -  1]  =  null;  }  if(stackSize  >  0)  {  pathNames[stackSsize  -  1]  =  null;  }  [BUGGY]      pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	261	261	2	replace	                if(stackSize    >    0)    {    pathNames[stackSize    -    1]    =    null;    }    if(stackSize  >  0)  {  pathNames[stackSsize  -  1]  =  null;  }	  	non-compiled	[CE]  cannot  find  symbol  stackSsize	173	None	add
471	[BUG]  [BUGGY]  [FE]  ArrayIndexOutOfBoundsException  [FE]    AssertionFailedError    [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {      [BUGGY]  pathNames[stackSize  -  2]  =  null;  [BUGGY]      pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	261	261	2	add	pathNames[stackSize  -  2]  =  null;	  pathNames[stackSize    -    1]    =    null;    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	21	2	replace
472	[BUG]  [BUGGY]  pathNames[stackSize  -  2]  =  null;  [FE]  ArrayIndexOutOfBoundsException  [FE]    AssertionFailedError    [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {      [BUGGY]  pathNames[stackSize  -  2]  =  null;  [BUGGY]      pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	261	261	2	replace	pathNames[stackSize  -  2]  =  null;	  pathNames[stackSize    -    1]    =    null;    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	21	2	replace
473	[BUG]  [BUGGY]  hop(JsonToken.VALUE_STRING);  [CE]  cannot  find  symbol  VALUE_STRING  [FE]          ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {      [BUGGY]  hop(JsonToken.VALUE_STRING);  [BUGGY]      pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	261	261	2	replace	hop(JsonToken.VALUE_STRING);	  hopStack();    	non-compiled	[CE]  cannot  find  symbol  VALUE_STRING	70	None	replace
474	[BUG]  [BUGGY]  if(peek()  ==  JsonToken.VALUE_NULL)  {  if(stackSize  >  0)  {  popStack();  }  else  {  throw  new  IllegalArgumentException( " ");  }  [CE]  ';'  expected  [FE]    java.lang.IllegalArgumentException:      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {      [BUGGY]  if(peek()  ==  JsonToken.VALUE_NULL)  {  if(stackSize  >  0)  {  popStack();  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	261	261	2	replace	if(peek()  ==  JsonToken.VALUE_NULL)  {  if(stackSize  >  0)  {  popStack();  }  else  {  throw  new  IllegalArgumentException( " ");  }	  if(stackSize    >    0)    {    popStack();    }    else    {    throw    new    IllegalArgumentException(       "       ");    }    if(stackSize    >    0)    {    popStack();    }    else    {    throw    new    IllegalArgumentException(   ",   ");    }    	non-compiled	[CE]  ';'  expected	18	None	replace
475	[BUG]  [BUGGY]  if(peek()  ==  JsonToken.VALUE_STRING)  {  if(stackSize  >  0)  {  popStack();  }  else  {  throw  new  IllegalArgumentException( " ");  }  [CE]  ';'  expected  [FE]      java.lang.IllegalArgumentException:      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {      [BUGGY]  if(peek()  ==  JsonToken.VALUE_STRING)  {  if(stackSize  >  0)  {  popStack();  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	261	261	2	replace	if(peek()  ==  JsonToken.VALUE_STRING)  {  if(stackSize  >  0)  {  popStack();  }  else  {  throw  new  IllegalArgumentException( " ");  }	  if(stackSize    >    0)    {    popStack();    }    else    {    throw    new    IllegalArgumentException(       "       ");    }    if(stackSize    >    0)    {    popStack();    }    else    {    throw    new    IllegalArgumentException(   ",   ");    }    	non-compiled	[CE]  ';'  expected	18	None	replace
476	[BUG]  [BUGGY]  [FE]  ArrayIndexOutOfBoundsException  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {      [BUGGY]  if(stackSize  >=  0)  {  popStack();  }  if(stackSize  >=  0)  {  popStack();  }  [BUGGY]      pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	261	261	2	add	if(stackSize    >=    0)    {    popStack();    }    if(stackSize  >=  0)  {  popStack();  }	  	compilable	  [FE]  ArrayIndexOutOfBoundsException  	196	2	add
477	[BUG]  [BUGGY]  if(stackSize  >=  0)  {  popStack();  }  if(stackSize  >=  0)  {  popStack();  }  [FE]  ArrayIndexOutOfBoundsException  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {      [BUGGY]  if(stackSize  >=  0)  {  popStack();  }  if(stackSize  >=  0)  {  popStack();  }  [BUGGY]      pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	261	261	2	replace	if(stackSize    >=    0)    {    popStack();    }    if(stackSize  >=  0)  {  popStack();  }	  	compilable	  [FE]  ArrayIndexOutOfBoundsException  	196	2	add
478	[BUG]  [BUGGY]  [FE]  ArrayIndexOutOfBoundsException  [FE]      ArrayIndexOutOfBoundsException    [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {      [BUGGY]  if(stackSize  >=  0)  {  popStack();  }  if(stackSize!=  0)  {  popStack();  }  [BUGGY]      pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	261	261	2	add	if(stackSize    >=    0)    {    popStack();    }    if(stackSize!=  0)  {  popStack();  }	  	compilable	  [FE]  ArrayIndexOutOfBoundsException  	196	2	add
479	[BUG]  [BUGGY]  if(stackSize  >=  0)  {  popStack();  }  if(stackSize!=  0)  {  popStack();  }  [FE]  ArrayIndexOutOfBoundsException  [FE]      ArrayIndexOutOfBoundsException    [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {      [BUGGY]  if(stackSize  >=  0)  {  popStack();  }  if(stackSize!=  0)  {  popStack();  }  [BUGGY]      pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	261	261	2	replace	if(stackSize    >=    0)    {    popStack();    }    if(stackSize!=  0)  {  popStack();  }	  	compilable	  [FE]  ArrayIndexOutOfBoundsException  	196	2	add
480	[BUG]  [BUGGY]  if(stackSize  >=  0)  {  popStack();  }  if(stackSize  >>  0)  {  popStack();  }  [CE]  incompatible  types  [FE]        ArrayIndexOutOfBoundsException    [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {      [BUGGY]  if(stackSize  >=  0)  {  popStack();  }  if(stackSize  >>  0)  {  popStack();  }  [BUGGY]      pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	261	261	2	replace	if(stackSize    >=    0)    {    popStack();    }    if(stackSize  >>  0)  {  popStack();  }	  	non-compiled	[CE]  incompatible  types	196	None	add
481	[BUG]  [BUGGY]  [FE]  ArrayIndexOutOfBoundsException  [FE]          ArrayIndexOutOfBoundsException    [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {      [BUGGY]  if(stackSize  >=  0)  {  popStack();  }  if(stackSize  ==  0)  {  popStack();  }  [BUGGY]      pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	261	261	2	add	if(stackSize    >=    0)    {    popStack();    }    if(stackSize  ==  0)  {  popStack();  }	  	compilable	  [FE]  ArrayIndexOutOfBoundsException  	196	2	add
482	[BUG]  [BUGGY]  if(stackSize  >=  0)  {  popStack();  }  if(stackSize  ==  0)  {  popStack();  }  [FE]  ArrayIndexOutOfBoundsException  [FE]          ArrayIndexOutOfBoundsException    [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {      [BUGGY]  if(stackSize  >=  0)  {  popStack();  }  if(stackSize  ==  0)  {  popStack();  }  [BUGGY]      pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	261	261	2	replace	if(stackSize    >=    0)    {    popStack();    }    if(stackSize  ==  0)  {  popStack();  }	  	compilable	  [FE]  ArrayIndexOutOfBoundsException  	196	2	add
483	[BUG]  [BUGGY]  if(stackSize  >=  0)  {  popStack();  }  if(stackSize  [Delete]  0)  {  popStack();  }  [CE]  ')'  expected  [FE]            ArrayIndexOutOfBoundsException    [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {      [BUGGY]  if(stackSize  >=  0)  {  popStack();  }  if(stackSize  [Delete]  0)  {  popStack();  }  [BUGGY]      pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	261	261	2	replace	if(stackSize    >=    0)    {    popStack();    }    if(stackSize  [Delete]  0)  {  popStack();  }	  	non-compiled	[CE]  ')'  expected	196	None	add
484	[BUG]  [BUGGY]  if(stackSize  >=  0)  {  popStack();  }  if(stackSize  [BUGGY]  0)  {  popStack();  }  [CE]  ')'  expected  [FE]              ArrayIndexOutOfBoundsException    [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {      [BUGGY]  if(stackSize  >=  0)  {  popStack();  }  if(stackSize  [BUGGY]  0)  {  popStack();  }  [BUGGY]      pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	261	261	2	replace	if(stackSize    >=    0)    {    popStack();    }    if(stackSize  [BUGGY]  0)  {  popStack();  }	  	non-compiled	[CE]  ')'  expected	196	None	add
485	[BUG]  [BUGGY]  [FE]  ArrayIndexOutOfBoundsException  [FE]                ArrayIndexOutOfBoundsException    [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {      [BUGGY]  if(stackSize  >=  0)  {  popStack();  }  if(stackSize  <  0)  {  popStack();  }  [BUGGY]      pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	261	261	2	add	if(stackSize    >=    0)    {    popStack();    }    if(stackSize  <  0)  {  popStack();  }	  	compilable	  [FE]  ArrayIndexOutOfBoundsException  	196	2	add
486	[BUG]  [BUGGY]  if(stackSize  >=  0)  {  popStack();  }  if(stackSize  <  0)  {  popStack();  }  [FE]  ArrayIndexOutOfBoundsException  [FE]                ArrayIndexOutOfBoundsException    [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {      [BUGGY]  if(stackSize  >=  0)  {  popStack();  }  if(stackSize  <  0)  {  popStack();  }  [BUGGY]      pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	261	261	2	replace	if(stackSize    >=    0)    {    popStack();    }    if(stackSize  <  0)  {  popStack();  }	  	compilable	  [FE]  ArrayIndexOutOfBoundsException  	196	2	add
487	[BUG]  [BUGGY]  connectToPossibleExceptionHandler(null,  null,  pathIndices,  false);  [CE]  cannot  find  symbol  [FE]                        ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {      [BUGGY]  connectToPossibleExceptionHandler(null,  null,  pathIndices,  false);  [BUGGY]      pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	261	261	2	replace	connectToPossibleExceptionHandler(null,  null,  pathIndices,  false);	  connectToPossibleExceptionHandler(null,    null,    pathIndices);    	non-compiled	[CE]  cannot  find  symbol	187	None	replace
488	[BUG]  [BUGGY]  connectToPossibleExceptionHandler(null,  null,  pathIndices,  JsonToken.VALUE_EMPTY);  [CE]  cannot  find  symbol  VALUE_EMPTY  [FE]                          ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {      [BUGGY]  connectToPossibleExceptionHandler(null,  null,  pathIndices,  JsonToken.VALUE_EMPTY);  [BUGGY]      pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	261	261	2	replace	connectToPossibleExceptionHandler(null,  null,  pathIndices,  JsonToken.VALUE_EMPTY);	  connectToPossibleExceptionHandler(null,    null,    pathIndices);    	non-compiled	[CE]  cannot  find  symbol  VALUE_EMPTY	187	None	replace
489	[BUG]  [BUGGY]  connectToPossibleExceptionHandler(null,  null,  pathIndices,  JsonToken.START_OBJECT);  [CE]  cannot  find  symbol  START_OBJECT  [FE]                            ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {      [BUGGY]  connectToPossibleExceptionHandler(null,  null,  pathIndices,  JsonToken.START_OBJECT);  [BUGGY]      pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	261	261	2	replace	connectToPossibleExceptionHandler(null,  null,  pathIndices,  JsonToken.START_OBJECT);	  connectToPossibleExceptionHandler(null,    null,    pathIndices);    	non-compiled	[CE]  cannot  find  symbol  START_OBJECT	187	None	replace
490	[BUG]  [BUGGY]  connectToPossibleExceptionHandler(null,  null,  pathIndices,  SENTINEL_CLOSED);  [CE]  cannot  find  symbol  [FE]                              ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {      [BUGGY]  connectToPossibleExceptionHandler(null,  null,  pathIndices,  SENTINEL_CLOSED);  [BUGGY]      pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	261	261	2	replace	connectToPossibleExceptionHandler(null,  null,  pathIndices,  SENTINEL_CLOSED);	  connectToPossibleExceptionHandler(null,    null,    pathIndices);    	non-compiled	[CE]  cannot  find  symbol	187	None	replace
491	[BUG]  [BUGGY]  connectToPossibleExceptionHandler(pathIndices,  null,  null);  [CE]  cannot  find  symbol  [FE]                                ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {      [BUGGY]  connectToPossibleExceptionHandler(pathIndices,  null,  null);  [BUGGY]      pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	261	261	2	replace	connectToPossibleExceptionHandler(pathIndices,  null,  null);	  connectToPossibleExceptionHandler(null,    null,    pathIndices);    	non-compiled	[CE]  cannot  find  symbol	187	None	replace
492	[BUG]  [BUGGY]  connectToPossibleExceptionHandler(null,  null,  pathIndices,  JsonToken.VALUE_NULL);  [CE]  cannot  find  symbol  VALUE_NULL  [FE]                                  ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {      [BUGGY]  connectToPossibleExceptionHandler(null,  null,  pathIndices,  JsonToken.VALUE_NULL);  [BUGGY]      pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	261	261	2	replace	connectToPossibleExceptionHandler(null,  null,  pathIndices,  JsonToken.VALUE_NULL);	  connectToPossibleExceptionHandler(null,    null,    pathIndices);    	non-compiled	[CE]  cannot  find  symbol  VALUE_NULL	187	None	replace
493	[BUG]  [BUGGY]  pendSize  =  Math.min(pathNames.length,  stackSize  -  1);  [CE]  cannot  find  symbol  pendSize  [FE]    IllegalArgumentException    [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {      [BUGGY]  pendSize  =  Math.min(pathNames.length,  stackSize  -  1);  [BUGGY]      pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	261	261	2	replace	pendSize  =  Math.min(pathNames.length,  stackSize  -  1);	  if(stackSize    ==    0)    {    popStack();    }    else    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  cannot  find  symbol  pendSize	178	None	replace
494	[BUG]  [BUGGY]  StackTraceElement[stackSize  -  1]  =  new  Object[size()  ];  [CE]  cannot  find  symbol  StackTraceElement  [FE]      IllegalArgumentException    [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {      [BUGGY]  StackTraceElement[stackSize  -  1]  =  new  Object[size()  ];  [BUGGY]      pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	261	261	2	replace	StackTraceElement[stackSize  -  1]  =  new  Object[size()  ];	  if(stackSize    ==    0)    {    popStack();    }    else    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  cannot  find  symbol  StackTraceElement	178	None	replace
495	[BUG]  [BUGGY]  pendSize  =  Math.min(stackSize  -  1,  stack.length  -  1);  [CE]  cannot  find  symbol  pendSize  [FE]        IllegalArgumentException    [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {      [BUGGY]  pendSize  =  Math.min(stackSize  -  1,  stack.length  -  1);  [BUGGY]      pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	261	261	2	replace	pendSize  =  Math.min(stackSize  -  1,  stack.length  -  1);	  if(stackSize    ==    0)    {    popStack();    }    else    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  cannot  find  symbol  pendSize	178	None	replace
496	[BUG]  [BUGGY]  [FE]  ArrayIndexOutOfBoundsException  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {      [BUGGY]  if(stackSize    >    0)    {    popStack();    }    if(stackSize  >  0)  {  popStack();  System.arraycopy(stack,  0,  pathNames,  0,  stackSize);  }  if(stackSize  >  0)  {  popStack();  }  if(stackSize  >  0)  {  popStack();  System.arraycopy(stack,  0,  pathNames,  0,  stackSize);  }  [BUGGY]      pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	261	261	2	add	if(stackSize        >        0)        {        popStack();        }        if(stackSize    >    0)    {    popStack();    System.arraycopy(stack,    0,    pathNames,    0,    stackSize);    }    if(stackSize  >  0)  {  popStack();  }  if(stackSize  >  0)  {  popStack();  System.arraycopy(stack,  0,  pathNames,  0,  stackSize);  }	  	compilable	  [FE]  ArrayIndexOutOfBoundsException  	92	2	add
497	[BUG]  [BUGGY]  if(stackSize    >    0)    {    popStack();    }    if(stackSize  >  0)  {  popStack();  System.arraycopy(stack,  0,  pathNames,  0,  stackSize);  }  if(stackSize  >  0)  {  popStack();  }  if(stackSize  >  0)  {  popStack();  System.arraycopy(stack,  0,  pathNames,  0,  stackSize);  }  [FE]  ArrayIndexOutOfBoundsException  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {      [BUGGY]  if(stackSize    >    0)    {    popStack();    }    if(stackSize  >  0)  {  popStack();  System.arraycopy(stack,  0,  pathNames,  0,  stackSize);  }  if(stackSize  >  0)  {  popStack();  }  if(stackSize  >  0)  {  popStack();  System.arraycopy(stack,  0,  pathNames,  0,  stackSize);  }  [BUGGY]      pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	261	261	2	replace	if(stackSize        >        0)        {        popStack();        }        if(stackSize    >    0)    {    popStack();    System.arraycopy(stack,    0,    pathNames,    0,    stackSize);    }    if(stackSize  >  0)  {  popStack();  }  if(stackSize  >  0)  {  popStack();  System.arraycopy(stack,  0,  pathNames,  0,  stackSize);  }	  	compilable	  [FE]  ArrayIndexOutOfBoundsException  	92	2	add
498	[BUG]  [BUGGY]  [FE]  ArrayIndexOutOfBoundsException  [FE]      ArrayIndexOutOfBoundsException    [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {      [BUGGY]  if(stackSize    >    0)    {    popStack();    }    if(stackSize  >  0)  {  popStack();  System.arraycopy(stack,  0,  pathNames,  0,  stackSize);  }  if(stackSize  >  0)  {  popStack();  System.arraycopy(stack,  0,  pathNames,  0,  stackSize);  }  [BUGGY]      pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	261	261	2	add	if(stackSize        >        0)        {        popStack();        }        if(stackSize    >    0)    {    popStack();    System.arraycopy(stack,    0,    pathNames,    0,    stackSize);    }    if(stackSize  >  0)  {  popStack();  System.arraycopy(stack,  0,  pathNames,  0,  stackSize);  }	  	compilable	  [FE]  ArrayIndexOutOfBoundsException  	92	2	add
499	[BUG]  [BUGGY]  if(stackSize    >    0)    {    popStack();    }    if(stackSize  >  0)  {  popStack();  System.arraycopy(stack,  0,  pathNames,  0,  stackSize);  }  if(stackSize  >  0)  {  popStack();  System.arraycopy(stack,  0,  pathNames,  0,  stackSize);  }  [FE]  ArrayIndexOutOfBoundsException  [FE]      ArrayIndexOutOfBoundsException    [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {      [BUGGY]  if(stackSize    >    0)    {    popStack();    }    if(stackSize  >  0)  {  popStack();  System.arraycopy(stack,  0,  pathNames,  0,  stackSize);  }  if(stackSize  >  0)  {  popStack();  System.arraycopy(stack,  0,  pathNames,  0,  stackSize);  }  [BUGGY]      pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	261	261	2	replace	if(stackSize        >        0)        {        popStack();        }        if(stackSize    >    0)    {    popStack();    System.arraycopy(stack,    0,    pathNames,    0,    stackSize);    }    if(stackSize  >  0)  {  popStack();  System.arraycopy(stack,  0,  pathNames,  0,  stackSize);  }	  	compilable	  [FE]  ArrayIndexOutOfBoundsException  	92	2	add
500	[BUG]  [BUGGY]  [FE]  ArrayIndexOutOfBoundsException  [FE]        ArrayIndexOutOfBoundsException    [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {      [BUGGY]  if(stackSize    >    0)    {    popStack();    }    if(stackSize  >  0)  {  popStack();  System.arraycopy(stack,  0,  pathNames,  0,  stackSize);  }  if(stackSize  >  0)  {  popStack();  }  if(stackSize  >  0)  {  popStack();  System.arraycopy(pathNames,  0,  pathNames,  0,  stackSize);  }  [BUGGY]      pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	261	261	2	add	if(stackSize        >        0)        {        popStack();        }        if(stackSize    >    0)    {    popStack();    System.arraycopy(stack,    0,    pathNames,    0,    stackSize);    }    if(stackSize  >  0)  {  popStack();  }  if(stackSize  >  0)  {  popStack();  System.arraycopy(pathNames,  0,  pathNames,  0,  stackSize);  }	  	compilable	  [FE]  ArrayIndexOutOfBoundsException  	92	2	add
501	[BUG]  [BUGGY]  if(stackSize    >    0)    {    popStack();    }    if(stackSize  >  0)  {  popStack();  System.arraycopy(stack,  0,  pathNames,  0,  stackSize);  }  if(stackSize  >  0)  {  popStack();  }  if(stackSize  >  0)  {  popStack();  System.arraycopy(pathNames,  0,  pathNames,  0,  stackSize);  }  [FE]  ArrayIndexOutOfBoundsException  [FE]        ArrayIndexOutOfBoundsException    [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {      [BUGGY]  if(stackSize    >    0)    {    popStack();    }    if(stackSize  >  0)  {  popStack();  System.arraycopy(stack,  0,  pathNames,  0,  stackSize);  }  if(stackSize  >  0)  {  popStack();  }  if(stackSize  >  0)  {  popStack();  System.arraycopy(pathNames,  0,  pathNames,  0,  stackSize);  }  [BUGGY]      pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	261	261	2	replace	if(stackSize        >        0)        {        popStack();        }        if(stackSize    >    0)    {    popStack();    System.arraycopy(stack,    0,    pathNames,    0,    stackSize);    }    if(stackSize  >  0)  {  popStack();  }  if(stackSize  >  0)  {  popStack();  System.arraycopy(pathNames,  0,  pathNames,  0,  stackSize);  }	  	compilable	  [FE]  ArrayIndexOutOfBoundsException  	92	2	add
502	[BUG]  [BUGGY]  [FE]  ArrayIndexOutOfBoundsException  [FE]          ArrayIndexOutOfBoundsException    [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {      [BUGGY]  if(stackSize    >    0)    {    popStack();    }    if(stackSize  >  0)  {  popStack();  System.arraycopy(stack,  0,  pathNames,  0,  stackSize);  }  if(stackSize  >  0)  {  popStack();  }  if(stackSize  >  0)  {  popStack();  System.arraycopy(stack,  0,  pathNames,  1,  stackSize);  }  [BUGGY]      pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	261	261	2	add	if(stackSize        >        0)        {        popStack();        }        if(stackSize    >    0)    {    popStack();    System.arraycopy(stack,    0,    pathNames,    0,    stackSize);    }    if(stackSize  >  0)  {  popStack();  }  if(stackSize  >  0)  {  popStack();  System.arraycopy(stack,  0,  pathNames,  1,  stackSize);  }	  	compilable	  [FE]  ArrayIndexOutOfBoundsException  	92	2	add
503	[BUG]  [BUGGY]  if(stackSize    >    0)    {    popStack();    }    if(stackSize  >  0)  {  popStack();  System.arraycopy(stack,  0,  pathNames,  0,  stackSize);  }  if(stackSize  >  0)  {  popStack();  }  if(stackSize  >  0)  {  popStack();  System.arraycopy(stack,  0,  pathNames,  1,  stackSize);  }  [FE]  ArrayIndexOutOfBoundsException  [FE]          ArrayIndexOutOfBoundsException    [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {      [BUGGY]  if(stackSize    >    0)    {    popStack();    }    if(stackSize  >  0)  {  popStack();  System.arraycopy(stack,  0,  pathNames,  0,  stackSize);  }  if(stackSize  >  0)  {  popStack();  }  if(stackSize  >  0)  {  popStack();  System.arraycopy(stack,  0,  pathNames,  1,  stackSize);  }  [BUGGY]      pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	261	261	2	replace	if(stackSize        >        0)        {        popStack();        }        if(stackSize    >    0)    {    popStack();    System.arraycopy(stack,    0,    pathNames,    0,    stackSize);    }    if(stackSize  >  0)  {  popStack();  }  if(stackSize  >  0)  {  popStack();  System.arraycopy(stack,  0,  pathNames,  1,  stackSize);  }	  	compilable	  [FE]  ArrayIndexOutOfBoundsException  	92	2	add
504	[BUG]  [BUGGY]  if(stackSize    >    0)    {    popStack();    }    if(stackSize  >  0)  {  popStack();  System.arraycopy(stack,  0,  pathNames,  0,  stackSize);  }  if(stackSize  >  0)  {  popStack();  }  if(stackSize  >  0)  {  getStack();  System.arraycopy(stack,  0,  pathNames,  0,  stackSize);  }  [CE]  cannot  find  symbol  [FE]            ArrayIndexOutOfBoundsException    [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {      [BUGGY]  if(stackSize    >    0)    {    popStack();    }    if(stackSize  >  0)  {  popStack();  System.arraycopy(stack,  0,  pathNames,  0,  stackSize);  }  if(stackSize  >  0)  {  popStack();  }  if(stackSize  >  0)  {  getStack();  System.arraycopy(stack,  0,  pathNames,  0,  stackSize);  }  [BUGGY]      pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	261	261	2	replace	if(stackSize        >        0)        {        popStack();        }        if(stackSize    >    0)    {    popStack();    System.arraycopy(stack,    0,    pathNames,    0,    stackSize);    }    if(stackSize  >  0)  {  popStack();  }  if(stackSize  >  0)  {  getStack();  System.arraycopy(stack,  0,  pathNames,  0,  stackSize);  }	  	non-compiled	[CE]  cannot  find  symbol	92	None	add
505	[BUG]  [BUGGY]  if(stackSize    >    0)    {    popStack();    }    if(stackSize  >  0)  {  popStack();  System.arraycopy(stack,  0,  pathNames,  0,  stackSize);  }  if(stackSize  >  0)  {  popStack();  }  if(stackSize  >  0)  {  popStack();  System.arraycopy(stackNames,  0,  pathNames,  0,  stackSize);  }  [CE]  cannot  find  symbol  stackNames  [FE]              ArrayIndexOutOfBoundsException    [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {      [BUGGY]  if(stackSize    >    0)    {    popStack();    }    if(stackSize  >  0)  {  popStack();  System.arraycopy(stack,  0,  pathNames,  0,  stackSize);  }  if(stackSize  >  0)  {  popStack();  }  if(stackSize  >  0)  {  popStack();  System.arraycopy(stackNames,  0,  pathNames,  0,  stackSize);  }  [BUGGY]      pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	261	261	2	replace	if(stackSize        >        0)        {        popStack();        }        if(stackSize    >    0)    {    popStack();    System.arraycopy(stack,    0,    pathNames,    0,    stackSize);    }    if(stackSize  >  0)  {  popStack();  }  if(stackSize  >  0)  {  popStack();  System.arraycopy(stackNames,  0,  pathNames,  0,  stackSize);  }	  	non-compiled	[CE]  cannot  find  symbol  stackNames	92	None	add
506	[BUG]  [BUGGY]  [FE]  ArrayIndexOutOfBoundsException  [FE]                ArrayIndexOutOfBoundsException    [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {      [BUGGY]  if(stackSize    >    0)    {    popStack();    }    if(stackSize  >  0)  {  popStack();  System.arraycopy(stack,  0,  pathNames,  0,  stackSize);  }  if(stackSize  >  0)  {  popStack();  }  if(stackSize  >  0)  {  popStack();  System.arraycopy(stack,  1,  pathNames,  0,  stackSize);  }  [BUGGY]      pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	261	261	2	add	if(stackSize        >        0)        {        popStack();        }        if(stackSize    >    0)    {    popStack();    System.arraycopy(stack,    0,    pathNames,    0,    stackSize);    }    if(stackSize  >  0)  {  popStack();  }  if(stackSize  >  0)  {  popStack();  System.arraycopy(stack,  1,  pathNames,  0,  stackSize);  }	  	compilable	  [FE]  ArrayIndexOutOfBoundsException  	92	2	add
507	[BUG]  [BUGGY]  if(stackSize    >    0)    {    popStack();    }    if(stackSize  >  0)  {  popStack();  System.arraycopy(stack,  0,  pathNames,  0,  stackSize);  }  if(stackSize  >  0)  {  popStack();  }  if(stackSize  >  0)  {  popStack();  System.arraycopy(stack,  1,  pathNames,  0,  stackSize);  }  [FE]  ArrayIndexOutOfBoundsException  [FE]                ArrayIndexOutOfBoundsException    [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {      [BUGGY]  if(stackSize    >    0)    {    popStack();    }    if(stackSize  >  0)  {  popStack();  System.arraycopy(stack,  0,  pathNames,  0,  stackSize);  }  if(stackSize  >  0)  {  popStack();  }  if(stackSize  >  0)  {  popStack();  System.arraycopy(stack,  1,  pathNames,  0,  stackSize);  }  [BUGGY]      pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	261	261	2	replace	if(stackSize        >        0)        {        popStack();        }        if(stackSize    >    0)    {    popStack();    System.arraycopy(stack,    0,    pathNames,    0,    stackSize);    }    if(stackSize  >  0)  {  popStack();  }  if(stackSize  >  0)  {  popStack();  System.arraycopy(stack,  1,  pathNames,  0,  stackSize);  }	  	compilable	  [FE]  ArrayIndexOutOfBoundsException  	92	2	add
508	[BUG]  [BUGGY]  _reportError( "Current  token( "+JsonToken.VALUE_STRING+ ")not  a  value ");  [CE]  cannot  find  symbol  VALUE_STRING  [FE]                    ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {      [BUGGY]  _reportError( "Current  token( "+JsonToken.VALUE_STRING+ ")not  a  value ");  [BUGGY]      pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	261	261	2	replace	_reportError( "Current  token( "+JsonToken.VALUE_STRING+ ")not  a  value ");	  _reportError(   "Current    token(   "+JsonToken.VALUE_NUMBER+   ")not    a    value   ");    	non-compiled	[CE]  cannot  find  symbol  VALUE_STRING	81	None	replace
509	[BUG]  [BUGGY]  _reportError( "Current  token( "+getClass().getName()  + ")not  null,  expecting  a  value: ");  [CE]  cannot  find  symbol  [FE]                  ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {      [BUGGY]  _reportError( "Current  token( "+getClass().getName()  + ")not  null,  expecting  a  value: ");  [BUGGY]      pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	261	261	2	replace	_reportError( "Current  token( "+getClass().getName()  + ")not  null,  expecting  a  value: ");	  _reportError(   "Current    token(   "+getClass().getName()    +   ")not    null,    expecting    a    value.   ");    	non-compiled	[CE]  cannot  find  symbol	198	None	replace
510	[BUG]  [BUGGY]  _reportError( "Current  token( "+getClass().getName()  + ")was  null,  expecting  a  value. ");  [CE]  cannot  find  symbol  [FE]                    ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {      [BUGGY]  _reportError( "Current  token( "+getClass().getName()  + ")was  null,  expecting  a  value. ");  [BUGGY]      pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	261	261	2	replace	_reportError( "Current  token( "+getClass().getName()  + ")was  null,  expecting  a  value. ");	  _reportError(   "Current    token(   "+getClass().getName()    +   ")not    null,    expecting    a    value.   ");    	non-compiled	[CE]  cannot  find  symbol	198	None	replace
511	[BUG]  [BUGGY]  connectToPossibleExceptionHandler(null,  result);  [CE]  cannot  find  symbol  result  [FE]                  ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {      [BUGGY]  connectToPossibleExceptionHandler(null,  result);  [BUGGY]      pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	261	261	2	replace	connectToPossibleExceptionHandler(null,  result);	  connectToPossibleExceptionHandler(null,    stackSize);    	non-compiled	[CE]  cannot  find  symbol  result	134	None	replace
512	[BUG]  [BUGGY]  connectToPossibleExceptionHandler(result,  stackSize);  [CE]  cannot  find  symbol  result  [FE]                    ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {      [BUGGY]  connectToPossibleExceptionHandler(result,  stackSize);  [BUGGY]      pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	261	261	2	replace	connectToPossibleExceptionHandler(result,  stackSize);	  connectToPossibleExceptionHandler(null,    stackSize);    	non-compiled	[CE]  cannot  find  symbol  result	134	None	replace
513	[BUG]  [BUGGY]  [FE]  ArrayIndexOutOfBoundsException  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {      [BUGGY]  if(stackSize    >    0)    {    popStack();    }    if(stackSize  >  0)  {  popStack();  System.arraycopy(pathNames,  0,  pathNames,  0,  stackSize  -  1);  }  if(stackSize  >  0)  {  popStack();  }  if(stackSize  >  0)  {  popStack();  System.arraycopy(pathNames,  0,  pathNames,  0,  stackSize  -  1);  }  [BUGGY]      pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	261	261	2	add	if(stackSize        >        0)        {        popStack();        }        if(stackSize    >    0)    {    popStack();    System.arraycopy(pathNames,    0,    pathNames,    0,    stackSize    -    1);    }    if(stackSize  >  0)  {  popStack();  }  if(stackSize  >  0)  {  popStack();  System.arraycopy(pathNames,  0,  pathNames,  0,  stackSize  -  1);  }	  	compilable	  [FE]  ArrayIndexOutOfBoundsException  	158	2	add
514	[BUG]  [BUGGY]  if(stackSize    >    0)    {    popStack();    }    if(stackSize  >  0)  {  popStack();  System.arraycopy(pathNames,  0,  pathNames,  0,  stackSize  -  1);  }  if(stackSize  >  0)  {  popStack();  }  if(stackSize  >  0)  {  popStack();  System.arraycopy(pathNames,  0,  pathNames,  0,  stackSize  -  1);  }  [FE]  ArrayIndexOutOfBoundsException  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {      [BUGGY]  if(stackSize    >    0)    {    popStack();    }    if(stackSize  >  0)  {  popStack();  System.arraycopy(pathNames,  0,  pathNames,  0,  stackSize  -  1);  }  if(stackSize  >  0)  {  popStack();  }  if(stackSize  >  0)  {  popStack();  System.arraycopy(pathNames,  0,  pathNames,  0,  stackSize  -  1);  }  [BUGGY]      pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	261	261	2	replace	if(stackSize        >        0)        {        popStack();        }        if(stackSize    >    0)    {    popStack();    System.arraycopy(pathNames,    0,    pathNames,    0,    stackSize    -    1);    }    if(stackSize  >  0)  {  popStack();  }  if(stackSize  >  0)  {  popStack();  System.arraycopy(pathNames,  0,  pathNames,  0,  stackSize  -  1);  }	  	compilable	  [FE]  ArrayIndexOutOfBoundsException  	158	2	add
515	[BUG]  [BUGGY]  [FE]  ArrayIndexOutOfBoundsException  [FE]      ArrayIndexOutOfBoundsException    [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {      [BUGGY]  if(stackSize    >    0)    {    popStack();    }    if(stackSize  >  0)  {  popStack();  System.arraycopy(pathNames,  0,  pathNames,  0,  stackSize  -  1);  }  if(stackSize  >  0)  {  popStack();  System.arraycopy(pathNames,  0,  pathNames,  0,  stackSize  -  1);  }  [BUGGY]      pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	261	261	2	add	if(stackSize        >        0)        {        popStack();        }        if(stackSize    >    0)    {    popStack();    System.arraycopy(pathNames,    0,    pathNames,    0,    stackSize    -    1);    }    if(stackSize  >  0)  {  popStack();  System.arraycopy(pathNames,  0,  pathNames,  0,  stackSize  -  1);  }	  	compilable	  [FE]  ArrayIndexOutOfBoundsException  	158	2	add
516	[BUG]  [BUGGY]  if(stackSize    >    0)    {    popStack();    }    if(stackSize  >  0)  {  popStack();  System.arraycopy(pathNames,  0,  pathNames,  0,  stackSize  -  1);  }  if(stackSize  >  0)  {  popStack();  System.arraycopy(pathNames,  0,  pathNames,  0,  stackSize  -  1);  }  [FE]  ArrayIndexOutOfBoundsException  [FE]      ArrayIndexOutOfBoundsException    [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {      [BUGGY]  if(stackSize    >    0)    {    popStack();    }    if(stackSize  >  0)  {  popStack();  System.arraycopy(pathNames,  0,  pathNames,  0,  stackSize  -  1);  }  if(stackSize  >  0)  {  popStack();  System.arraycopy(pathNames,  0,  pathNames,  0,  stackSize  -  1);  }  [BUGGY]      pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	261	261	2	replace	if(stackSize        >        0)        {        popStack();        }        if(stackSize    >    0)    {    popStack();    System.arraycopy(pathNames,    0,    pathNames,    0,    stackSize    -    1);    }    if(stackSize  >  0)  {  popStack();  System.arraycopy(pathNames,  0,  pathNames,  0,  stackSize  -  1);  }	  	compilable	  [FE]  ArrayIndexOutOfBoundsException  	158	2	add
517	[BUG]  [BUGGY]  if(stackSize    >    0)    {    popStack();    }    if(stackSize  >  0)  {  popStack();  System.arraycopy(pathNames,  0,  pathNames,  0,  stackSize  -  1);  }  if(stackSize  >  0)  {  popStack();  }  if(stackSize  >  0)  {  getStack();  System.arraycopy(pathNames,  0,  pathNames,  0,  stackSize  -  1);  }  [CE]  cannot  find  symbol  [FE]        ArrayIndexOutOfBoundsException    [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {      [BUGGY]  if(stackSize    >    0)    {    popStack();    }    if(stackSize  >  0)  {  popStack();  System.arraycopy(pathNames,  0,  pathNames,  0,  stackSize  -  1);  }  if(stackSize  >  0)  {  popStack();  }  if(stackSize  >  0)  {  getStack();  System.arraycopy(pathNames,  0,  pathNames,  0,  stackSize  -  1);  }  [BUGGY]      pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	261	261	2	replace	if(stackSize        >        0)        {        popStack();        }        if(stackSize    >    0)    {    popStack();    System.arraycopy(pathNames,    0,    pathNames,    0,    stackSize    -    1);    }    if(stackSize  >  0)  {  popStack();  }  if(stackSize  >  0)  {  getStack();  System.arraycopy(pathNames,  0,  pathNames,  0,  stackSize  -  1);  }	  	non-compiled	[CE]  cannot  find  symbol	158	None	add
518	[BUG]  [BUGGY]  [FE]  ArrayIndexOutOfBoundsException  [FE]          ArrayIndexOutOfBoundsException    [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {      [BUGGY]  if(stackSize    >    0)    {    popStack();    }    if(stackSize  >  0)  {  popStack();  System.arraycopy(pathNames,  0,  pathNames,  0,  stackSize  -  1);  }  if(stackSize  >  0)  {  popStack();  }  if(stackSize  >  0)  {  popStack();  System.arraycopy(pathNames,  0,  pathNames,  1,  stackSize  -  1);  }  [BUGGY]      pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	261	261	2	add	if(stackSize        >        0)        {        popStack();        }        if(stackSize    >    0)    {    popStack();    System.arraycopy(pathNames,    0,    pathNames,    0,    stackSize    -    1);    }    if(stackSize  >  0)  {  popStack();  }  if(stackSize  >  0)  {  popStack();  System.arraycopy(pathNames,  0,  pathNames,  1,  stackSize  -  1);  }	  	compilable	  [FE]  ArrayIndexOutOfBoundsException  	158	2	add
519	[BUG]  [BUGGY]  if(stackSize    >    0)    {    popStack();    }    if(stackSize  >  0)  {  popStack();  System.arraycopy(pathNames,  0,  pathNames,  0,  stackSize  -  1);  }  if(stackSize  >  0)  {  popStack();  }  if(stackSize  >  0)  {  popStack();  System.arraycopy(pathNames,  0,  pathNames,  1,  stackSize  -  1);  }  [FE]  ArrayIndexOutOfBoundsException  [FE]          ArrayIndexOutOfBoundsException    [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {      [BUGGY]  if(stackSize    >    0)    {    popStack();    }    if(stackSize  >  0)  {  popStack();  System.arraycopy(pathNames,  0,  pathNames,  0,  stackSize  -  1);  }  if(stackSize  >  0)  {  popStack();  }  if(stackSize  >  0)  {  popStack();  System.arraycopy(pathNames,  0,  pathNames,  1,  stackSize  -  1);  }  [BUGGY]      pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	261	261	2	replace	if(stackSize        >        0)        {        popStack();        }        if(stackSize    >    0)    {    popStack();    System.arraycopy(pathNames,    0,    pathNames,    0,    stackSize    -    1);    }    if(stackSize  >  0)  {  popStack();  }  if(stackSize  >  0)  {  popStack();  System.arraycopy(pathNames,  0,  pathNames,  1,  stackSize  -  1);  }	  	compilable	  [FE]  ArrayIndexOutOfBoundsException  	158	2	add
520	[BUG]  [BUGGY]  if(stackSize    >    0)    {    popStack();    }    if(stackSize  >  0)  {  popStack();  System.arraycopy(pathNames,  0,  pathNames,  0,  stackSize  -  1);  }  if(stackSize  >  0)  {  popStack();  }  if(stackSize  >  0)  {  popStack();  System.arraycopy(pathNames,  0,  pathNames,  0,  stackSize  -  1]);  }  [CE]  ')'  expected  [FE]            ArrayIndexOutOfBoundsException    [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {      [BUGGY]  if(stackSize    >    0)    {    popStack();    }    if(stackSize  >  0)  {  popStack();  System.arraycopy(pathNames,  0,  pathNames,  0,  stackSize  -  1);  }  if(stackSize  >  0)  {  popStack();  }  if(stackSize  >  0)  {  popStack();  System.arraycopy(pathNames,  0,  pathNames,  0,  stackSize  -  1]);  }  [BUGGY]      pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	261	261	2	replace	if(stackSize        >        0)        {        popStack();        }        if(stackSize    >    0)    {    popStack();    System.arraycopy(pathNames,    0,    pathNames,    0,    stackSize    -    1);    }    if(stackSize  >  0)  {  popStack();  }  if(stackSize  >  0)  {  popStack();  System.arraycopy(pathNames,  0,  pathNames,  0,  stackSize  -  1]);  }	  	non-compiled	[CE]  ')'  expected	158	None	add
521	[BUG]  [BUGGY]  if(stackSize    >    0)    {    popStack();    }    if(stackSize  >  0)  {  popStack();  System.arraycopy(pathNames,  0,  pathNames,  0,  stackSize  -  1);  }  if(stackSize  >  0)  {  popStack();  }  if(stackSize  >  0)  {  skipStack();  System.arraycopy(pathNames,  0,  pathNames,  0,  stackSize  -  1);  }  [CE]  cannot  find  symbol  [FE]              ArrayIndexOutOfBoundsException    [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {      [BUGGY]  if(stackSize    >    0)    {    popStack();    }    if(stackSize  >  0)  {  popStack();  System.arraycopy(pathNames,  0,  pathNames,  0,  stackSize  -  1);  }  if(stackSize  >  0)  {  popStack();  }  if(stackSize  >  0)  {  skipStack();  System.arraycopy(pathNames,  0,  pathNames,  0,  stackSize  -  1);  }  [BUGGY]      pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	261	261	2	replace	if(stackSize        >        0)        {        popStack();        }        if(stackSize    >    0)    {    popStack();    System.arraycopy(pathNames,    0,    pathNames,    0,    stackSize    -    1);    }    if(stackSize  >  0)  {  popStack();  }  if(stackSize  >  0)  {  skipStack();  System.arraycopy(pathNames,  0,  pathNames,  0,  stackSize  -  1);  }	  	non-compiled	[CE]  cannot  find  symbol	158	None	add
522	[BUG]  [BUGGY]  [FE]  IllegalArgumentException  [FE]    IllegalArgumentException    [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {      [BUGGY]  if(stackSize    >    0)    {    popStack();    }    else    {    throw    new    IllegalArgumentException(     "     ");    }    if(stackSize  >  0)  {  popStack();  }  else  {  throw  new  IllegalArgumentException(   "     ");  }  if(stackSize  >  0)  {  popStack();  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	261	261	2	add	if(stackSize        >        0)        {        popStack();        }        else        {        throw        new        IllegalArgumentException(       "       ");        }        if(stackSize    >    0)    {    popStack();    }    else    {    throw    new    IllegalArgumentException(   "       ");    }    if(stackSize  >  0)  {  popStack();  }  else  {  throw  new  IllegalArgumentException( " ");  }	  	compilable	  [FE]  IllegalArgumentException  	10	2	add
523	[BUG]  [BUGGY]  if(stackSize    >    0)    {    popStack();    }    else    {    throw    new    IllegalArgumentException(     "     ");    }    if(stackSize  >  0)  {  popStack();  }  else  {  throw  new  IllegalArgumentException(   "     ");  }  if(stackSize  >  0)  {  popStack();  }  else  {  throw  new  IllegalArgumentException( " ");  }  [FE]  IllegalArgumentException  [FE]    IllegalArgumentException    [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {      [BUGGY]  if(stackSize    >    0)    {    popStack();    }    else    {    throw    new    IllegalArgumentException(     "     ");    }    if(stackSize  >  0)  {  popStack();  }  else  {  throw  new  IllegalArgumentException(   "     ");  }  if(stackSize  >  0)  {  popStack();  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	261	261	2	replace	if(stackSize        >        0)        {        popStack();        }        else        {        throw        new        IllegalArgumentException(       "       ");        }        if(stackSize    >    0)    {    popStack();    }    else    {    throw    new    IllegalArgumentException(   "       ");    }    if(stackSize  >  0)  {  popStack();  }  else  {  throw  new  IllegalArgumentException( " ");  }	  	compilable	  [FE]  IllegalArgumentException  	10	2	add
524	[BUG]  [BUGGY]  if(stackSize    >    0)    {    popStack();    }    else    {    throw    new    IllegalArgumentException(     "     ");    }    if(stackSize  >  0)  {  popStack();  }  else  {  throw  new  IllegalArgumentException(   "     ");  }  if(stackSize  >  0)  {  popStack();  }  else  {  throw  new  IllegalArgumentException( " ".);  }  [CE]  <identifier>  expected  [FE]      IllegalArgumentException    [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {      [BUGGY]  if(stackSize    >    0)    {    popStack();    }    else    {    throw    new    IllegalArgumentException(     "     ");    }    if(stackSize  >  0)  {  popStack();  }  else  {  throw  new  IllegalArgumentException(   "     ");  }  if(stackSize  >  0)  {  popStack();  }  else  {  throw  new  IllegalArgumentException( " ".);  }  [BUGGY]      pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	261	261	2	replace	if(stackSize        >        0)        {        popStack();        }        else        {        throw        new        IllegalArgumentException(       "       ");        }        if(stackSize    >    0)    {    popStack();    }    else    {    throw    new    IllegalArgumentException(   "       ");    }    if(stackSize  >  0)  {  popStack();  }  else  {  throw  new  IllegalArgumentException( " ".);  }	  	non-compiled	[CE]  <identifier>  expected	10	None	add
525	[BUG]  [BUGGY]  [FE]  IllegalArgumentException  [FE]        IllegalArgumentException    [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {      [BUGGY]  if(stackSize    >    0)    {    popStack();    }    else    {    throw    new    IllegalArgumentException(     "     ");    }    if(stackSize  >  0)  {  popStack();  }  else  {  throw  new  IllegalArgumentException(   "     ");  }  if(stackSize  >  0)  {  popStack();  }  else  {  throw  new  IllegalArgumentException( ". ");  }  [BUGGY]      pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	261	261	2	add	if(stackSize        >        0)        {        popStack();        }        else        {        throw        new        IllegalArgumentException(       "       ");        }        if(stackSize    >    0)    {    popStack();    }    else    {    throw    new    IllegalArgumentException(   "       ");    }    if(stackSize  >  0)  {  popStack();  }  else  {  throw  new  IllegalArgumentException( ". ");  }	  	compilable	  [FE]  IllegalArgumentException  	10	2	add
526	[BUG]  [BUGGY]  if(stackSize    >    0)    {    popStack();    }    else    {    throw    new    IllegalArgumentException(     "     ");    }    if(stackSize  >  0)  {  popStack();  }  else  {  throw  new  IllegalArgumentException(   "     ");  }  if(stackSize  >  0)  {  popStack();  }  else  {  throw  new  IllegalArgumentException( ". ");  }  [FE]  IllegalArgumentException  [FE]        IllegalArgumentException    [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {      [BUGGY]  if(stackSize    >    0)    {    popStack();    }    else    {    throw    new    IllegalArgumentException(     "     ");    }    if(stackSize  >  0)  {  popStack();  }  else  {  throw  new  IllegalArgumentException(   "     ");  }  if(stackSize  >  0)  {  popStack();  }  else  {  throw  new  IllegalArgumentException( ". ");  }  [BUGGY]      pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	261	261	2	replace	if(stackSize        >        0)        {        popStack();        }        else        {        throw        new        IllegalArgumentException(       "       ");        }        if(stackSize    >    0)    {    popStack();    }    else    {    throw    new    IllegalArgumentException(   "       ");    }    if(stackSize  >  0)  {  popStack();  }  else  {  throw  new  IllegalArgumentException( ". ");  }	  	compilable	  [FE]  IllegalArgumentException  	10	2	add
527	[BUG]  [BUGGY]  if(stackSize    >    0)    {    popStack();    }    else    {    throw    new    IllegalArgumentException(     "     ");    }    if(stackSize  >  0)  {  popStack();  }  else  {  throw  new  IllegalArgumentException(   "     ");  }  if(stackSize  >  0)  {  popStack();  }  else  {  throw  new  IllegalArgumentException( " ");  }  pathNames[stackSize  -  1]  =   "null ";  }  [CE]  ']'  expected  [FE]          IllegalArgumentException    [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {      [BUGGY]  if(stackSize    >    0)    {    popStack();    }    else    {    throw    new    IllegalArgumentException(     "     ");    }    if(stackSize  >  0)  {  popStack();  }  else  {  throw  new  IllegalArgumentException(   "     ");  }  if(stackSize  >  0)  {  popStack();  }  else  {  throw  new  IllegalArgumentException( " ");  }  pathNames[stackSize  -  1]  =   "null ";  }  [BUGGY]      pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	261	261	2	replace	if(stackSize        >        0)        {        popStack();        }        else        {        throw        new        IllegalArgumentException(       "       ");        }        if(stackSize    >    0)    {    popStack();    }    else    {    throw    new    IllegalArgumentException(   "       ");    }    if(stackSize  >  0)  {  popStack();  }  else  {  throw  new  IllegalArgumentException( " ");  }  pathNames[stackSize  -  1]  =   "null ";  }	  	non-compiled	[CE]  ']'  expected	10	None	add
528	[BUG]  [BUGGY]  [FE]  IllegalArgumentException  [FE]            IllegalArgumentException    [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {      [BUGGY]  if(stackSize    >    0)    {    popStack();    }    else    {    throw    new    IllegalArgumentException(     "     ");    }    if(stackSize  >  0)  {  popStack();  }  else  {  throw  new  IllegalArgumentException(   "     ");  }  if(stackSize  >  0)  {  popStack();  }  else  {  throw  new  IllegalArgumentException( ", ");  }  [BUGGY]      pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	261	261	2	add	if(stackSize        >        0)        {        popStack();        }        else        {        throw        new        IllegalArgumentException(       "       ");        }        if(stackSize    >    0)    {    popStack();    }    else    {    throw    new    IllegalArgumentException(   "       ");    }    if(stackSize  >  0)  {  popStack();  }  else  {  throw  new  IllegalArgumentException( ", ");  }	  	compilable	  [FE]  IllegalArgumentException  	10	2	add
529	[BUG]  [BUGGY]  if(stackSize    >    0)    {    popStack();    }    else    {    throw    new    IllegalArgumentException(     "     ");    }    if(stackSize  >  0)  {  popStack();  }  else  {  throw  new  IllegalArgumentException(   "     ");  }  if(stackSize  >  0)  {  popStack();  }  else  {  throw  new  IllegalArgumentException( ", ");  }  [FE]  IllegalArgumentException  [FE]            IllegalArgumentException    [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {      [BUGGY]  if(stackSize    >    0)    {    popStack();    }    else    {    throw    new    IllegalArgumentException(     "     ");    }    if(stackSize  >  0)  {  popStack();  }  else  {  throw  new  IllegalArgumentException(   "     ");  }  if(stackSize  >  0)  {  popStack();  }  else  {  throw  new  IllegalArgumentException( ", ");  }  [BUGGY]      pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	261	261	2	replace	if(stackSize        >        0)        {        popStack();        }        else        {        throw        new        IllegalArgumentException(       "       ");        }        if(stackSize    >    0)    {    popStack();    }    else    {    throw    new    IllegalArgumentException(   "       ");    }    if(stackSize  >  0)  {  popStack();  }  else  {  throw  new  IllegalArgumentException( ", ");  }	  	compilable	  [FE]  IllegalArgumentException  	10	2	add
530	[BUG]  [BUGGY]  [FE]  IllegalArgumentException  [FE]              IllegalArgumentException    [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {      [BUGGY]  if(stackSize    >    0)    {    popStack();    }    else    {    throw    new    IllegalArgumentException(     "     ");    }    if(stackSize  >  0)  {  popStack();  }  else  {  throw  new  IllegalArgumentException(   "     ");  }  if(stackSize  <  0)  {  popStack();  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	261	261	2	add	if(stackSize        >        0)        {        popStack();        }        else        {        throw        new        IllegalArgumentException(       "       ");        }        if(stackSize    >    0)    {    popStack();    }    else    {    throw    new    IllegalArgumentException(   "       ");    }    if(stackSize  <  0)  {  popStack();  }  else  {  throw  new  IllegalArgumentException( " ");  }	  	compilable	  [FE]  IllegalArgumentException  	10	2	add
531	[BUG]  [BUGGY]  if(stackSize    >    0)    {    popStack();    }    else    {    throw    new    IllegalArgumentException(     "     ");    }    if(stackSize  >  0)  {  popStack();  }  else  {  throw  new  IllegalArgumentException(   "     ");  }  if(stackSize  <  0)  {  popStack();  }  else  {  throw  new  IllegalArgumentException( " ");  }  [FE]  IllegalArgumentException  [FE]              IllegalArgumentException    [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {      [BUGGY]  if(stackSize    >    0)    {    popStack();    }    else    {    throw    new    IllegalArgumentException(     "     ");    }    if(stackSize  >  0)  {  popStack();  }  else  {  throw  new  IllegalArgumentException(   "     ");  }  if(stackSize  <  0)  {  popStack();  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	261	261	2	replace	if(stackSize        >        0)        {        popStack();        }        else        {        throw        new        IllegalArgumentException(       "       ");        }        if(stackSize    >    0)    {    popStack();    }    else    {    throw    new    IllegalArgumentException(   "       ");    }    if(stackSize  <  0)  {  popStack();  }  else  {  throw  new  IllegalArgumentException( " ");  }	  	compilable	  [FE]  IllegalArgumentException  	10	2	add
532	[BUG]  [BUGGY]  JsonToken.START_OBJECT  =  _nextToken();  [CE]  cannot  find  symbol  START_OBJECT  [FE]              ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {      [BUGGY]  JsonToken.START_OBJECT  =  _nextToken();  [BUGGY]      pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	261	261	2	replace	JsonToken.START_OBJECT  =  _nextToken();	  JsonToken.START_OBJECT    =    _getCurrentToken();    	non-compiled	[CE]  cannot  find  symbol  START_OBJECT	213	None	replace
533	[BUG]  [BUGGY]  JsonToken.START_OBJECT  =  _getCurrentName();  [CE]  cannot  find  symbol  START_OBJECT  [FE]                ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {      [BUGGY]  JsonToken.START_OBJECT  =  _getCurrentName();  [BUGGY]      pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	261	261	2	replace	JsonToken.START_OBJECT  =  _getCurrentName();	  JsonToken.START_OBJECT    =    _getCurrentToken();    	non-compiled	[CE]  cannot  find  symbol  START_OBJECT	213	None	replace
534	[BUG]  [BUGGY]  JsonToken.START_OBJECT  =  this.getCurrentToken();  [CE]  cannot  find  symbol  START_OBJECT  [FE]                  ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {      [BUGGY]  JsonToken.START_OBJECT  =  this.getCurrentToken();  [BUGGY]      pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	261	261	2	replace	JsonToken.START_OBJECT  =  this.getCurrentToken();	  JsonToken.START_OBJECT    =    _getCurrentToken();    	non-compiled	[CE]  cannot  find  symbol  START_OBJECT	213	None	replace
535	[BUG]  [BUGGY]  JsonToken.START_OBJECT  =  _finishCurrentToken();  [CE]  cannot  find  symbol  START_OBJECT  [FE]                    ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {      [BUGGY]  JsonToken.START_OBJECT  =  _finishCurrentToken();  [BUGGY]      pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	261	261	2	replace	JsonToken.START_OBJECT  =  _finishCurrentToken();	  JsonToken.START_OBJECT    =    _getCurrentToken();    	non-compiled	[CE]  cannot  find  symbol  START_OBJECT	213	None	replace
536	[BUG]  [BUGGY]  JsonToken.START_OBJECT  =  _currentToken();  [CE]  cannot  find  symbol  START_OBJECT  [FE]                      ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {      [BUGGY]  JsonToken.START_OBJECT  =  _currentToken();  [BUGGY]      pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	261	261	2	replace	JsonToken.START_OBJECT  =  _currentToken();	  JsonToken.START_OBJECT    =    _getCurrentToken();    	non-compiled	[CE]  cannot  find  symbol  START_OBJECT	213	None	replace
537	[BUG]  [BUGGY]  [FE]  IllegalArgumentException  [FE]          ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {      [BUGGY]  if(stackSize  >  0)  {  throw  new  IllegalArgumentException( " ");  }  else  {  nextName();  pathNames[stackSize  -  1]  =  null;  }  [BUGGY]      pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	261	261	2	add	if(stackSize  >  0)  {  throw  new  IllegalArgumentException( " ");  }  else  {  nextName();  pathNames[stackSize  -  1]  =  null;  }	  ack();    	compilable	  [FE]  IllegalArgumentException  	148	2	replace
538	[BUG]  [BUGGY]  if(stackSize  >  0)  {  throw  new  IllegalArgumentException( " ");  }  else  {  nextName();  pathNames[stackSize  -  1]  =  null;  }  [FE]  IllegalArgumentException  [FE]          ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {      [BUGGY]  if(stackSize  >  0)  {  throw  new  IllegalArgumentException( " ");  }  else  {  nextName();  pathNames[stackSize  -  1]  =  null;  }  [BUGGY]      pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	261	261	2	replace	if(stackSize  >  0)  {  throw  new  IllegalArgumentException( " ");  }  else  {  nextName();  pathNames[stackSize  -  1]  =  null;  }	  ack();    	compilable	  [FE]  IllegalArgumentException  	148	2	replace
539	[BUG]  [BUGGY]  [FE]  IllegalArgumentException  [FE]            ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {      [BUGGY]  if(stackSize  >  0)  {  throw  new  IllegalArgumentException( " ");  }  else  {  nextName();  pathNames[stackSize  -  1]  =   "null ";  }  [BUGGY]      pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	261	261	2	add	if(stackSize  >  0)  {  throw  new  IllegalArgumentException( " ");  }  else  {  nextName();  pathNames[stackSize  -  1]  =   "null ";  }	  ack();    	compilable	  [FE]  IllegalArgumentException  	148	2	replace
540	[BUG]  [BUGGY]  if(stackSize  >  0)  {  throw  new  IllegalArgumentException( " ");  }  else  {  nextName();  pathNames[stackSize  -  1]  =   "null ";  }  [FE]  IllegalArgumentException  [FE]            ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {      [BUGGY]  if(stackSize  >  0)  {  throw  new  IllegalArgumentException( " ");  }  else  {  nextName();  pathNames[stackSize  -  1]  =   "null ";  }  [BUGGY]      pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	261	261	2	replace	if(stackSize  >  0)  {  throw  new  IllegalArgumentException( " ");  }  else  {  nextName();  pathNames[stackSize  -  1]  =   "null ";  }	  ack();    	compilable	  [FE]  IllegalArgumentException  	148	2	replace
541	[BUG]  [BUGGY]  [FE]  StackOverflowError  [FE]              ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {      [BUGGY]  if(stackSize  >  0)  {  skipValue();  }  else  {  nextName();  pathNames[stackSize  -  1]  =  null;  }  [BUGGY]      pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	261	261	2	add	if(stackSize  >  0)  {  skipValue();  }  else  {  nextName();  pathNames[stackSize  -  1]  =  null;  }	  ack();    	compilable	  [FE]  StackOverflowError  	148	2	replace
542	[BUG]  [BUGGY]  if(stackSize  >  0)  {  skipValue();  }  else  {  nextName();  pathNames[stackSize  -  1]  =  null;  }  [FE]  StackOverflowError  [FE]              ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {      [BUGGY]  if(stackSize  >  0)  {  skipValue();  }  else  {  nextName();  pathNames[stackSize  -  1]  =  null;  }  [BUGGY]      pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	261	261	2	replace	if(stackSize  >  0)  {  skipValue();  }  else  {  nextName();  pathNames[stackSize  -  1]  =  null;  }	  ack();    	compilable	  [FE]  StackOverflowError  	148	2	replace
543	[BUG]  [BUGGY]  [FE]  IllegalStateException  [FE]                ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {      [BUGGY]  if(stackSize  >  stackSize)  {  throw  new  IllegalArgumentException( " ");  }  else  {  nextName();  pathNames[stackSize  -  1]  =  null;  }  [BUGGY]      pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	261	261	2	add	if(stackSize  >  stackSize)  {  throw  new  IllegalArgumentException( " ");  }  else  {  nextName();  pathNames[stackSize  -  1]  =  null;  }	  ack();    	compilable	  [FE]  IllegalStateException  	148	2	replace
544	[BUG]  [BUGGY]  if(stackSize  >  stackSize)  {  throw  new  IllegalArgumentException( " ");  }  else  {  nextName();  pathNames[stackSize  -  1]  =  null;  }  [FE]  IllegalStateException  [FE]                ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {      [BUGGY]  if(stackSize  >  stackSize)  {  throw  new  IllegalArgumentException( " ");  }  else  {  nextName();  pathNames[stackSize  -  1]  =  null;  }  [BUGGY]      pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	261	261	2	replace	if(stackSize  >  stackSize)  {  throw  new  IllegalArgumentException( " ");  }  else  {  nextName();  pathNames[stackSize  -  1]  =  null;  }	  ack();    	compilable	  [FE]  IllegalStateException  	148	2	replace
545	[BUG]  [BUGGY]  [FE]  StackOverflowError  [FE]                  ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {      [BUGGY]  if(stackSize  >  0)  {  skipValue();  }  else  {  nextName();  pathNames[stackSize  -  1]  =   "null ";  }  [BUGGY]      pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	261	261	2	add	if(stackSize  >  0)  {  skipValue();  }  else  {  nextName();  pathNames[stackSize  -  1]  =   "null ";  }	  ack();    	compilable	  [FE]  StackOverflowError  	148	2	replace
546	[BUG]  [BUGGY]  if(stackSize  >  0)  {  skipValue();  }  else  {  nextName();  pathNames[stackSize  -  1]  =   "null ";  }  [FE]  StackOverflowError  [FE]                  ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {      [BUGGY]  if(stackSize  >  0)  {  skipValue();  }  else  {  nextName();  pathNames[stackSize  -  1]  =   "null ";  }  [BUGGY]      pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	261	261	2	replace	if(stackSize  >  0)  {  skipValue();  }  else  {  nextName();  pathNames[stackSize  -  1]  =   "null ";  }	  ack();    	compilable	  [FE]  StackOverflowError  	148	2	replace
547	[BUG]  [BUGGY]  [FE]  IllegalArgumentException  [FE]                    ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {      [BUGGY]  if(stackSize  >  0)  {  throw  new  IllegalArgumentException( " ");  }  else  {  pathNames[stackSize  -  1]  =  null;  }  [BUGGY]      pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	261	261	2	add	if(stackSize  >  0)  {  throw  new  IllegalArgumentException( " ");  }  else  {  pathNames[stackSize  -  1]  =  null;  }	  ack();    	compilable	  [FE]  IllegalArgumentException  	148	2	replace
548	[BUG]  [BUGGY]  if(stackSize  >  0)  {  throw  new  IllegalArgumentException( " ");  }  else  {  pathNames[stackSize  -  1]  =  null;  }  [FE]  IllegalArgumentException  [FE]                    ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {      [BUGGY]  if(stackSize  >  0)  {  throw  new  IllegalArgumentException( " ");  }  else  {  pathNames[stackSize  -  1]  =  null;  }  [BUGGY]      pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	261	261	2	replace	if(stackSize  >  0)  {  throw  new  IllegalArgumentException( " ");  }  else  {  pathNames[stackSize  -  1]  =  null;  }	  ack();    	compilable	  [FE]  IllegalArgumentException  	148	2	replace
549	[BUG]  [BUGGY]  [FE]  IllegalStateException  [FE]                      ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {      [BUGGY]  if(stackSize  >  stackSize)  {  throw  new  IllegalArgumentException( " ");  }  else  {  nextName();  pathNames[stackSize  -  1]  =   "null ";  }  [BUGGY]      pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	261	261	2	add	if(stackSize  >  stackSize)  {  throw  new  IllegalArgumentException( " ");  }  else  {  nextName();  pathNames[stackSize  -  1]  =   "null ";  }	  ack();    	compilable	  [FE]  IllegalStateException  	148	2	replace
550	[BUG]  [BUGGY]  if(stackSize  >  stackSize)  {  throw  new  IllegalArgumentException( " ");  }  else  {  nextName();  pathNames[stackSize  -  1]  =   "null ";  }  [FE]  IllegalStateException  [FE]                      ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {      [BUGGY]  if(stackSize  >  stackSize)  {  throw  new  IllegalArgumentException( " ");  }  else  {  nextName();  pathNames[stackSize  -  1]  =   "null ";  }  [BUGGY]      pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	261	261	2	replace	if(stackSize  >  stackSize)  {  throw  new  IllegalArgumentException( " ");  }  else  {  nextName();  pathNames[stackSize  -  1]  =   "null ";  }	  ack();    	compilable	  [FE]  IllegalStateException  	148	2	replace
551	[BUG]  [BUGGY]  connectToPeek(JsonToken.VALUE_NUMBER_FOR,  JsonToken.VALUE_NUMBER_INT);  [CE]  cannot  find  symbol  VALUE_NUMBER_FOR  [FE]                          ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {      [BUGGY]  connectToPeek(JsonToken.VALUE_NUMBER_FOR,  JsonToken.VALUE_NUMBER_INT);  [BUGGY]      pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	261	261	2	replace	connectToPeek(JsonToken.VALUE_NUMBER_FOR,  JsonToken.VALUE_NUMBER_INT);	  connectToPeek(JsonToken.VALUE_NUMBER_INT,    JsonToken.VALUE_NUMBER_FOR);    	non-compiled	[CE]  cannot  find  symbol  VALUE_NUMBER_FOR	217	None	replace
552	[BUG]  [BUGGY]  connectToPeek(JsonToken.VALUE_NUMBER_INT,  JsonToken.VALUE_NUMBER_FOR,  SENTINEL_CLOSED);  [CE]  cannot  find  symbol  VALUE_NUMBER_INT  [FE]                            ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {      [BUGGY]  connectToPeek(JsonToken.VALUE_NUMBER_INT,  JsonToken.VALUE_NUMBER_FOR,  SENTINEL_CLOSED);  [BUGGY]      pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	261	261	2	replace	connectToPeek(JsonToken.VALUE_NUMBER_INT,  JsonToken.VALUE_NUMBER_FOR,  SENTINEL_CLOSED);	  connectToPeek(JsonToken.VALUE_NUMBER_INT,    JsonToken.VALUE_NUMBER_FOR);    	non-compiled	[CE]  cannot  find  symbol  VALUE_NUMBER_INT	217	None	replace
553	[BUG]  [BUGGY]  connectToPeek(JsonToken.VALUE_NUMBER_INT,  JsonToken.VALUE_NUMBER_FOR,  pathNames);  [CE]  cannot  find  symbol  VALUE_NUMBER_INT  [FE]                              ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {      [BUGGY]  connectToPeek(JsonToken.VALUE_NUMBER_INT,  JsonToken.VALUE_NUMBER_FOR,  pathNames);  [BUGGY]      pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	261	261	2	replace	connectToPeek(JsonToken.VALUE_NUMBER_INT,  JsonToken.VALUE_NUMBER_FOR,  pathNames);	  connectToPeek(JsonToken.VALUE_NUMBER_INT,    JsonToken.VALUE_NUMBER_FOR);    	non-compiled	[CE]  cannot  find  symbol  VALUE_NUMBER_INT	217	None	replace
554	[BUG]  [BUGGY]  connectToPeek(JsonToken.VALUE_NULL,  JsonToken.VALUE_NUMBER_FOR);  [CE]  cannot  find  symbol  VALUE_NULL  [FE]                                ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {      [BUGGY]  connectToPeek(JsonToken.VALUE_NULL,  JsonToken.VALUE_NUMBER_FOR);  [BUGGY]      pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	261	261	2	replace	connectToPeek(JsonToken.VALUE_NULL,  JsonToken.VALUE_NUMBER_FOR);	  connectToPeek(JsonToken.VALUE_NUMBER_INT,    JsonToken.VALUE_NUMBER_FOR);    	non-compiled	[CE]  cannot  find  symbol  VALUE_NULL	217	None	replace
555	[BUG]  [BUGGY]  connectToPeek(JsonToken.VALUE_NUMBER_INT,  JsonToken.VALUE_NUMBER_FOR,  null);  [CE]  cannot  find  symbol  VALUE_NUMBER_INT  [FE]                                  ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {      [BUGGY]  connectToPeek(JsonToken.VALUE_NUMBER_INT,  JsonToken.VALUE_NUMBER_FOR,  null);  [BUGGY]      pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	261	261	2	replace	connectToPeek(JsonToken.VALUE_NUMBER_INT,  JsonToken.VALUE_NUMBER_FOR,  null);	  connectToPeek(JsonToken.VALUE_NUMBER_INT,    JsonToken.VALUE_NUMBER_FOR);    	non-compiled	[CE]  cannot  find  symbol  VALUE_NUMBER_INT	217	None	replace
556	[BUG]  [BUGGY]  connectToPeek(JsonToken.VALUE_NUMBER,  JsonToken.VALUE_NUMBER_FOR);  [CE]  cannot  find  symbol  VALUE_NUMBER  [FE]                                    ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {      [BUGGY]  connectToPeek(JsonToken.VALUE_NUMBER,  JsonToken.VALUE_NUMBER_FOR);  [BUGGY]      pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	261	261	2	replace	connectToPeek(JsonToken.VALUE_NUMBER,  JsonToken.VALUE_NUMBER_FOR);	  connectToPeek(JsonToken.VALUE_NUMBER_INT,    JsonToken.VALUE_NUMBER_FOR);    	non-compiled	[CE]  cannot  find  symbol  VALUE_NUMBER	217	None	replace
557	[BUG]  [BUGGY]  throw  new  IllegalArgumentException( " ");  [CE]  unreachable  statement  [FE]                ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {      [BUGGY]  throw  new  IllegalArgumentException( " ");  [BUGGY]      pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	261	261	2	replace	throw  new  IllegalArgumentException( " ");	  _throwInternal();    	non-compiled	[CE]  unreachable  statement	64	None	replace
558	[BUG]  [BUGGY]  throw  new  IllegalStateException( " ");  [CE]  unreachable  statement  [FE]                  ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {      [BUGGY]  throw  new  IllegalStateException( " ");  [BUGGY]      pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	261	261	2	replace	throw  new  IllegalStateException( " ");	  _throwInternal();    	non-compiled	[CE]  unreachable  statement	64	None	replace
559	[BUG]  [BUGGY]  throw  _throwInternalException( " ");  [CE]  cannot  find  symbol  [FE]                    ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {      [BUGGY]  throw  _throwInternalException( " ");  [BUGGY]      pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	261	261	2	replace	throw  _throwInternalException( " ");	  _throwInternal();    	non-compiled	[CE]  cannot  find  symbol	64	None	replace
560	[BUG]  [BUGGY]  throw  _throwInternal();  [CE]  cannot  find  symbol  [FE]                      ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {      [BUGGY]  throw  _throwInternal();  [BUGGY]      pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	261	261	2	replace	throw  _throwInternal();	  _throwInternal();    	non-compiled	[CE]  cannot  find  symbol	64	None	replace
561	[BUG]  [BUGGY]  throwInternal();  [CE]  cannot  find  symbol  [FE]                        ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {      [BUGGY]  throwInternal();  [BUGGY]      pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	261	261	2	replace	throwInternal();	  _throwInternal();    	non-compiled	[CE]  cannot  find  symbol	64	None	replace
562	[BUG]  [BUGGY]  if(isEnabled(Feature.QUOTE_FIELD_NAMES)||  isEnabled(Feature.QUOTE_FIELD_NAMES))  {  if(stackSize  >  0)  {  popStack();  return;  }  [CE]  ';'  expected  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {      [BUGGY]  if(isEnabled(Feature.QUOTE_FIELD_NAMES)||  isEnabled(Feature.QUOTE_FIELD_NAMES))  {  if(stackSize  >  0)  {  popStack();  return;  }  [BUGGY]      pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	261	261	2	replace	if(isEnabled(Feature.QUOTE_FIELD_NAMES)||  isEnabled(Feature.QUOTE_FIELD_NAMES))  {  if(stackSize  >  0)  {  popStack();  return;  }	  if(stackSize    >    0)    {    popStack();    }    if(stackSize    >    0)    {    popStack();    return;    }    	non-compiled	[CE]  ';'  expected	212	None	replace
563	[BUG]  [BUGGY]  connectToPossibleExceptionHandler(null,  JsonToken.VALUE_STRING);  [CE]  cannot  find  symbol  VALUE_STRING  [FE]                  ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {      [BUGGY]  connectToPossibleExceptionHandler(null,  JsonToken.VALUE_STRING);  [BUGGY]      pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	261	261	2	replace	connectToPossibleExceptionHandler(null,  JsonToken.VALUE_STRING);	  connectToPossibleExceptionHandler(null,    JsonToken.VALUE_NULL);    	non-compiled	[CE]  cannot  find  symbol  VALUE_STRING	170	None	replace
564	[BUG]  [BUGGY]  connectToPossibleExceptionHandler(null,  JsonToken.VALUE_NUMBER);  [CE]  cannot  find  symbol  VALUE_NUMBER  [FE]                    ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {      [BUGGY]  connectToPossibleExceptionHandler(null,  JsonToken.VALUE_NUMBER);  [BUGGY]      pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	261	261	2	replace	connectToPossibleExceptionHandler(null,  JsonToken.VALUE_NUMBER);	  connectToPossibleExceptionHandler(null,    JsonToken.VALUE_NULL);    	non-compiled	[CE]  cannot  find  symbol  VALUE_NUMBER	170	None	replace
565	[BUG]  [BUGGY]  connectToPossibleExceptionHandler(null,  JsonToken.VALUE_EMBEDDED_OBJECT);  [CE]  cannot  find  symbol  VALUE_EMBEDDED_OBJECT  [FE]                      ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {      [BUGGY]  connectToPossibleExceptionHandler(null,  JsonToken.VALUE_EMBEDDED_OBJECT);  [BUGGY]      pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	261	261	2	replace	connectToPossibleExceptionHandler(null,  JsonToken.VALUE_EMBEDDED_OBJECT);	  connectToPossibleExceptionHandler(null,    JsonToken.VALUE_NULL);    	non-compiled	[CE]  cannot  find  symbol  VALUE_EMBEDDED_OBJECT	170	None	replace
566	[BUG]  [BUGGY]  connectToPossibleExceptionHandler(null,  JsonToken.FIELD_NAME);  [CE]  cannot  find  symbol  FIELD_NAME  [FE]                        ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {      [BUGGY]  connectToPossibleExceptionHandler(null,  JsonToken.FIELD_NAME);  [BUGGY]      pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	261	261	2	replace	connectToPossibleExceptionHandler(null,  JsonToken.FIELD_NAME);	  connectToPossibleExceptionHandler(null,    JsonToken.VALUE_NULL);    	non-compiled	[CE]  cannot  find  symbol  FIELD_NAME	170	None	replace
567	[BUG]  [BUGGY]  JsonToken  t  =  _getCurrentToken().name;  [CE]  cannot  find  symbol  [FE]              ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {      [BUGGY]  JsonToken  t  =  _getCurrentToken().name;  [BUGGY]      pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	261	261	2	replace	JsonToken  t  =  _getCurrentToken().name;	  JsonToken    t    =    _getCurrentToken();    	non-compiled	[CE]  cannot  find  symbol	122	None	replace
568	[BUG]  [BUGGY]  JsonToken  t  =  _getCurrentToken().first;  [CE]  cannot  find  symbol  [FE]                ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {      [BUGGY]  JsonToken  t  =  _getCurrentToken().first;  [BUGGY]      pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	261	261	2	replace	JsonToken  t  =  _getCurrentToken().first;	  JsonToken    t    =    _getCurrentToken();    	non-compiled	[CE]  cannot  find  symbol	122	None	replace
569	[BUG]  [BUGGY]  JsonToken  t  =  this._getCurrentToken();  [CE]  cannot  find  symbol  [FE]                  ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {      [BUGGY]  JsonToken  t  =  this._getCurrentToken();  [BUGGY]      pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	261	261	2	replace	JsonToken  t  =  this._getCurrentToken();	  JsonToken    t    =    _getCurrentToken();    	non-compiled	[CE]  cannot  find  symbol	122	None	replace
570	[BUG]  [BUGGY]  JsonToken  t  =  _getCurrentToken().nextToken();  [CE]  cannot  find  symbol  [FE]                    ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {      [BUGGY]  JsonToken  t  =  _getCurrentToken().nextToken();  [BUGGY]      pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	261	261	2	replace	JsonToken  t  =  _getCurrentToken().nextToken();	  JsonToken    t    =    _getCurrentToken();    	non-compiled	[CE]  cannot  find  symbol	122	None	replace
571	[BUG]  [BUGGY]  JsonToken  t  =  _currentToken();  [CE]  cannot  find  symbol  [FE]                      ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {      [BUGGY]  JsonToken  t  =  _currentToken();  [BUGGY]      pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	261	261	2	replace	JsonToken  t  =  _currentToken();	  JsonToken    t    =    _getCurrentToken();    	non-compiled	[CE]  cannot  find  symbol	122	None	replace
572	[BUG]  [BUGGY]  connectToPossibleExceptionHandler(null,  null,  null,  null);  [CE]  cannot  find  symbol  [FE]                          ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {      [BUGGY]  connectToPossibleExceptionHandler(null,  null,  null,  null);  [BUGGY]      pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	261	261	2	replace	connectToPossibleExceptionHandler(null,  null,  null,  null);	  connectToPossibleExceptionHandler(null,    null,    null);    	non-compiled	[CE]  cannot  find  symbol	78	None	replace
573	[BUG]  [BUGGY]  connectToPossibleExceptionHandler(null,  null,  null,  SENTINEL_CLOSED);  [CE]  cannot  find  symbol  [FE]                            ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {      [BUGGY]  connectToPossibleExceptionHandler(null,  null,  null,  SENTINEL_CLOSED);  [BUGGY]      pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	261	261	2	replace	connectToPossibleExceptionHandler(null,  null,  null,  SENTINEL_CLOSED);	  connectToPossibleExceptionHandler(null,    null,    null);    	non-compiled	[CE]  cannot  find  symbol	78	None	replace
574	[BUG]  [BUGGY]  connectToPossibleExceptionHandler(null,  null,  null,  false);  [CE]  cannot  find  symbol  [FE]                              ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {      [BUGGY]  connectToPossibleExceptionHandler(null,  null,  null,  false);  [BUGGY]      pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	261	261	2	replace	connectToPossibleExceptionHandler(null,  null,  null,  false);	  connectToPossibleExceptionHandler(null,    null,    null);    	non-compiled	[CE]  cannot  find  symbol	78	None	replace
575	[BUG]  [BUGGY]  connectToPossibleExceptionHandler(null,  null,  null,  pathNames);  [CE]  cannot  find  symbol  [FE]                                ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {      [BUGGY]  connectToPossibleExceptionHandler(null,  null,  null,  pathNames);  [BUGGY]      pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	261	261	2	replace	connectToPossibleExceptionHandler(null,  null,  null,  pathNames);	  connectToPossibleExceptionHandler(null,    null,    null);    	non-compiled	[CE]  cannot  find  symbol	78	None	replace
576	[BUG]  [BUGGY]  pathIndices[stackSize  -  1]  =  null  [Delete]  ';'  expected  [CE]  [FE]                ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {      [BUGGY]  pathIndices[stackSize  -  1]  =  null  [Delete]  ';'  expected  [BUGGY]      pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	261	261	2	replace	pathIndices[stackSize  -  1]  =  null  [Delete]  ';'  expected	  if(stackSize    >    0)    {    popStack();    }    else    {    JsonToken.VALUE_NULL    =    new    JsonToken(JsonToken.NAME);    pathNames[stackSize    -    1]    =    null    	non-compiled	[CE]  	153	None	replace
577	[BUG]  [BUGGY]  _reportError( "Current  token( "+getClass().getName()  + ")not  null. ",  JsonToken.FIELD_NAME);  [CE]  cannot  find  symbol  FIELD_NAME  [FE]                      ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {      [BUGGY]  _reportError( "Current  token( "+getClass().getName()  + ")not  null. ",  JsonToken.FIELD_NAME);  [BUGGY]      pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	261	261	2	replace	_reportError( "Current  token( "+getClass().getName()  + ")not  null. ",  JsonToken.FIELD_NAME);	  _reportError(   "Current    token(   "+getClass().getName()    +   ")not    null   ",    JsonToken.FIELD_NAME);    	non-compiled	[CE]  cannot  find  symbol  FIELD_NAME	38	None	replace
578	[BUG]  [BUGGY]  _reportError( "Current  token( "+getClass().getName()  + ")not  null,  JsonToken.FIELD_NAME);  [CE]  unclosed  string  literal  [FE]                        ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {      [BUGGY]  _reportError( "Current  token( "+getClass().getName()  + ")not  null,  JsonToken.FIELD_NAME);  [BUGGY]      pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	261	261	2	replace	_reportError( "Current  token( "+getClass().getName()  + ")not  null,  JsonToken.FIELD_NAME);	  _reportError(   "Current    token(   "+getClass().getName()    +   ")not    null   ",    JsonToken.FIELD_NAME);    	non-compiled	[CE]  unclosed  string  literal	38	None	replace
579	[BUG]  [BUGGY]  _reportError( "Current  token( "+getClass().getName()  + ")not  null ",  JsonToken.VALUE_NUMBER_ERROR,  JsonToken.FIELD_NAME);  [CE]  cannot  find  symbol  VALUE_NUMBER_ERROR  [FE]                          ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {      [BUGGY]  _reportError( "Current  token( "+getClass().getName()  + ")not  null ",  JsonToken.VALUE_NUMBER_ERROR,  JsonToken.FIELD_NAME);  [BUGGY]      pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	261	261	2	replace	_reportError( "Current  token( "+getClass().getName()  + ")not  null ",  JsonToken.VALUE_NUMBER_ERROR,  JsonToken.FIELD_NAME);	  _reportError(   "Current    token(   "+getClass().getName()    +   ")not    null   ",    JsonToken.FIELD_NAME);    	non-compiled	[CE]  cannot  find  symbol  VALUE_NUMBER_ERROR	38	None	replace
580	[BUG]  [BUGGY]  [FE]  ArrayIndexOutOfBoundsException  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {      [BUGGY]  if(stackSize    >    0)    {    popStack();    }    if(stackSize  >  0)  {  popStack();  }  pathNames[stackSize  -  1]  =     "null   ";  if(stackSize  >  0)  {  popStack();  }  if(stackSize  >  0)  {  popStack();  }  [BUGGY]      pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	261	261	2	add	if(stackSize        >        0)        {        popStack();        }        if(stackSize    >    0)    {    popStack();    }    pathNames[stackSize    -    1]    =       "null   ";    if(stackSize  >  0)  {  popStack();  }  if(stackSize  >  0)  {  popStack();  }	  	compilable	  [FE]  ArrayIndexOutOfBoundsException  	86	2	add
581	[BUG]  [BUGGY]  if(stackSize    >    0)    {    popStack();    }    if(stackSize  >  0)  {  popStack();  }  pathNames[stackSize  -  1]  =     "null   ";  if(stackSize  >  0)  {  popStack();  }  if(stackSize  >  0)  {  popStack();  }  [FE]  ArrayIndexOutOfBoundsException  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {      [BUGGY]  if(stackSize    >    0)    {    popStack();    }    if(stackSize  >  0)  {  popStack();  }  pathNames[stackSize  -  1]  =     "null   ";  if(stackSize  >  0)  {  popStack();  }  if(stackSize  >  0)  {  popStack();  }  [BUGGY]      pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	261	261	2	replace	if(stackSize        >        0)        {        popStack();        }        if(stackSize    >    0)    {    popStack();    }    pathNames[stackSize    -    1]    =       "null   ";    if(stackSize  >  0)  {  popStack();  }  if(stackSize  >  0)  {  popStack();  }	  	compilable	  [FE]  ArrayIndexOutOfBoundsException  	86	2	add
582	[BUG]  [BUGGY]  if(stackSize    >    0)    {    popStack();    }    if(stackSize  >  0)  {  popStack();  }  pathNames[stackSize  -  1]  =     "null   ";  if(stackSize  >  0)  {  popStack();  }  if(stackSize  >  0)  {  popStack();  }  pathNames[stackSize  -  1]  =   "null ";  }  [CE]  ']'  expected  [FE]      ArrayIndexOutOfBoundsException    [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {      [BUGGY]  if(stackSize    >    0)    {    popStack();    }    if(stackSize  >  0)  {  popStack();  }  pathNames[stackSize  -  1]  =     "null   ";  if(stackSize  >  0)  {  popStack();  }  if(stackSize  >  0)  {  popStack();  }  pathNames[stackSize  -  1]  =   "null ";  }  [BUGGY]      pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	261	261	2	replace	if(stackSize        >        0)        {        popStack();        }        if(stackSize    >    0)    {    popStack();    }    pathNames[stackSize    -    1]    =       "null   ";    if(stackSize  >  0)  {  popStack();  }  if(stackSize  >  0)  {  popStack();  }  pathNames[stackSize  -  1]  =   "null ";  }	  	non-compiled	[CE]  ']'  expected	86	None	add
583	[BUG]  [BUGGY]  [FE]  ArrayIndexOutOfBoundsException  [FE]        ArrayIndexOutOfBoundsException    [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {      [BUGGY]  if(stackSize    >    0)    {    popStack();    }    if(stackSize  >  0)  {  popStack();  }  pathNames[stackSize  -  1]  =     "null   ";  if(stackSize  >  0)  {  popStack();  }  if(stackSize  >  0)  {  popStack();  }  pathNames[stackSize  -  1]  =   "null ";  [BUGGY]      pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	261	261	2	add	if(stackSize        >        0)        {        popStack();        }        if(stackSize    >    0)    {    popStack();    }    pathNames[stackSize    -    1]    =       "null   ";    if(stackSize  >  0)  {  popStack();  }  if(stackSize  >  0)  {  popStack();  }  pathNames[stackSize  -  1]  =   "null ";	  	compilable	  [FE]  ArrayIndexOutOfBoundsException  	86	2	add
584	[BUG]  [BUGGY]  if(stackSize    >    0)    {    popStack();    }    if(stackSize  >  0)  {  popStack();  }  pathNames[stackSize  -  1]  =     "null   ";  if(stackSize  >  0)  {  popStack();  }  if(stackSize  >  0)  {  popStack();  }  pathNames[stackSize  -  1]  =   "null ";  [FE]  ArrayIndexOutOfBoundsException  [FE]        ArrayIndexOutOfBoundsException    [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {      [BUGGY]  if(stackSize    >    0)    {    popStack();    }    if(stackSize  >  0)  {  popStack();  }  pathNames[stackSize  -  1]  =     "null   ";  if(stackSize  >  0)  {  popStack();  }  if(stackSize  >  0)  {  popStack();  }  pathNames[stackSize  -  1]  =   "null ";  [BUGGY]      pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	261	261	2	replace	if(stackSize        >        0)        {        popStack();        }        if(stackSize    >    0)    {    popStack();    }    pathNames[stackSize    -    1]    =       "null   ";    if(stackSize  >  0)  {  popStack();  }  if(stackSize  >  0)  {  popStack();  }  pathNames[stackSize  -  1]  =   "null ";	  	compilable	  [FE]  ArrayIndexOutOfBoundsException  	86	2	add
585	[BUG]  [BUGGY]  [FE]  ArrayIndexOutOfBoundsException  [FE]          ArrayIndexOutOfBoundsException    [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {      [BUGGY]  if(stackSize    >    0)    {    popStack();    }    if(stackSize  >  0)  {  popStack();  }  pathNames[stackSize  -  1]  =     "null   ";  if(stackSize  >  0)  {  popStack();  }  if(stackSize  >  0)  {  popStack();  }  if(stackSize  >  0)  {  popStack();  }  [BUGGY]      pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	261	261	2	add	if(stackSize        >        0)        {        popStack();        }        if(stackSize    >    0)    {    popStack();    }    pathNames[stackSize    -    1]    =       "null   ";    if(stackSize  >  0)  {  popStack();  }  if(stackSize  >  0)  {  popStack();  }  if(stackSize  >  0)  {  popStack();  }	  	compilable	  [FE]  ArrayIndexOutOfBoundsException  	86	2	add
586	[BUG]  [BUGGY]  if(stackSize    >    0)    {    popStack();    }    if(stackSize  >  0)  {  popStack();  }  pathNames[stackSize  -  1]  =     "null   ";  if(stackSize  >  0)  {  popStack();  }  if(stackSize  >  0)  {  popStack();  }  if(stackSize  >  0)  {  popStack();  }  [FE]  ArrayIndexOutOfBoundsException  [FE]          ArrayIndexOutOfBoundsException    [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {      [BUGGY]  if(stackSize    >    0)    {    popStack();    }    if(stackSize  >  0)  {  popStack();  }  pathNames[stackSize  -  1]  =     "null   ";  if(stackSize  >  0)  {  popStack();  }  if(stackSize  >  0)  {  popStack();  }  if(stackSize  >  0)  {  popStack();  }  [BUGGY]      pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	261	261	2	replace	if(stackSize        >        0)        {        popStack();        }        if(stackSize    >    0)    {    popStack();    }    pathNames[stackSize    -    1]    =       "null   ";    if(stackSize  >  0)  {  popStack();  }  if(stackSize  >  0)  {  popStack();  }  if(stackSize  >  0)  {  popStack();  }	  	compilable	  [FE]  ArrayIndexOutOfBoundsException  	86	2	add
587	[BUG]  [BUGGY]  if(stackSize    >    0)    {    popStack();    }    if(stackSize  >  0)  {  popStack();  }  pathNames[stackSize  -  1]  =     "null   ";  if(stackSize  >  0)  {  popStack();  }  if(stackSize  >  0)  {  popStack();  }  if(stackSize  >  0)  {  popStack();  }  pathNames[stackSize  -  1]  =   "null  [CE]  unclosed  string  literal  [FE]            ArrayIndexOutOfBoundsException    [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {      [BUGGY]  if(stackSize    >    0)    {    popStack();    }    if(stackSize  >  0)  {  popStack();  }  pathNames[stackSize  -  1]  =     "null   ";  if(stackSize  >  0)  {  popStack();  }  if(stackSize  >  0)  {  popStack();  }  if(stackSize  >  0)  {  popStack();  }  pathNames[stackSize  -  1]  =   "null  [BUGGY]      pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	261	261	2	replace	if(stackSize        >        0)        {        popStack();        }        if(stackSize    >    0)    {    popStack();    }    pathNames[stackSize    -    1]    =       "null   ";    if(stackSize  >  0)  {  popStack();  }  if(stackSize  >  0)  {  popStack();  }  if(stackSize  >  0)  {  popStack();  }  pathNames[stackSize  -  1]  =   "null	  	non-compiled	[CE]  unclosed  string  literal	86	None	add
588	[BUG]  [BUGGY]  StackTraceElement  <  =  0)  {  popStack();  }  else  {  skipStack();  }  [CE]  illegal  start  of  type  [FE]                      ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {      [BUGGY]  StackTraceElement  <  =  0)  {  popStack();  }  else  {  skipStack();  }  [BUGGY]      pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	261	261	2	replace	StackTraceElement  <  =  0)  {  popStack();  }  else  {  skipStack();  }	  if(stackSize    <    =    0)    {    popStack();    }    else    {    skipStack();    }    	non-compiled	[CE]  illegal  start  of  type	111	None	replace
589	[BUG]  [BUGGY]  pendSize(stackSize  -  1))  {  popStack();  }  else  {  skipStack();  }  [CE]  ';'  expected  [FE]                        ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {      [BUGGY]  pendSize(stackSize  -  1))  {  popStack();  }  else  {  skipStack();  }  [BUGGY]      pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	261	261	2	replace	pendSize(stackSize  -  1))  {  popStack();  }  else  {  skipStack();  }	  if(stackSize    <    =    0)    {    popStack();    }    else    {    skipStack();    }    	non-compiled	[CE]  ';'  expected	111	None	replace
590	[BUG]  [BUGGY]  pendSize(stackSize  -  1))  {  popStack();  }  [CE]  ';'  expected  [FE]                          ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {      [BUGGY]  pendSize(stackSize  -  1))  {  popStack();  }  [BUGGY]      pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	261	261	2	replace	pendSize(stackSize  -  1))  {  popStack();  }	  if(stackSize    <    =    0)    {    popStack();    }    else    {    skipStack();    }    	non-compiled	[CE]  ';'  expected	111	None	replace
591	[BUG]  [BUGGY]  if(isUnsupportedOperation())  {  handleUnsupportedOperation();  }  else  {  nextName();  pathNames[stackSize  -  1]  =  null;  }  [CE]  cannot  find  symbol  [FE]                  ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {      [BUGGY]  if(isUnsupportedOperation())  {  handleUnsupportedOperation();  }  else  {  nextName();  pathNames[stackSize  -  1]  =  null;  }  [BUGGY]      pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	261	261	2	replace	if(isUnsupportedOperation())  {  handleUnsupportedOperation();  }  else  {  nextName();  pathNames[stackSize  -  1]  =  null;  }	  handleUnsupportedOperation();    	non-compiled	[CE]  cannot  find  symbol	65	None	replace
592	[BUG]  [BUGGY]  if(isUnsupportedOperation())  {  handleUnsupportedOperation();  }  else  {  nextName();  pathNames[stackSize  -  1]  =   "null ";  }  [CE]  cannot  find  symbol  [FE]                    ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {      [BUGGY]  if(isUnsupportedOperation())  {  handleUnsupportedOperation();  }  else  {  nextName();  pathNames[stackSize  -  1]  =   "null ";  }  [BUGGY]      pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	261	261	2	replace	if(isUnsupportedOperation())  {  handleUnsupportedOperation();  }  else  {  nextName();  pathNames[stackSize  -  1]  =   "null ";  }	  handleUnsupportedOperation();    	non-compiled	[CE]  cannot  find  symbol	65	None	replace
593	[BUG]  [BUGGY]  if(isUnsupportedOperation())  {  handleUnsupportedOperation();  }  [CE]  cannot  find  symbol  [FE]                      ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {      [BUGGY]  if(isUnsupportedOperation())  {  handleUnsupportedOperation();  }  [BUGGY]      pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	261	261	2	replace	if(isUnsupportedOperation())  {  handleUnsupportedOperation();  }	  handleUnsupportedOperation();    	non-compiled	[CE]  cannot  find  symbol	65	None	replace
594	[BUG]  [BUGGY]  if(isUnsupportedOperation())  {  handleUnsupportedOperation();  }  else  {  nextName();  pathIndices[stackSize  -  1]  =  null;  }  [CE]  cannot  find  symbol  [FE]                        ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {      [BUGGY]  if(isUnsupportedOperation())  {  handleUnsupportedOperation();  }  else  {  nextName();  pathIndices[stackSize  -  1]  =  null;  }  [BUGGY]      pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	261	261	2	replace	if(isUnsupportedOperation())  {  handleUnsupportedOperation();  }  else  {  nextName();  pathIndices[stackSize  -  1]  =  null;  }	  handleUnsupportedOperation();    	non-compiled	[CE]  cannot  find  symbol	65	None	replace
595	[BUG]  [BUGGY]  if(isUnsupportedOperation())  {  handleUnsupportedOperation();  }  else  {  throw  new  IllegalArgumentException( " ");  }  [CE]  cannot  find  symbol  [FE]                          ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {      [BUGGY]  if(isUnsupportedOperation())  {  handleUnsupportedOperation();  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	261	261	2	replace	if(isUnsupportedOperation())  {  handleUnsupportedOperation();  }  else  {  throw  new  IllegalArgumentException( " ");  }	  handleUnsupportedOperation();    	non-compiled	[CE]  cannot  find  symbol	65	None	replace
596	[BUG]  [BUGGY]  _reportError( "Current  token( "+getClass().getName()  + ")not  null! ",  JsonToken.VALUE_NULL);  [CE]  cannot  find  symbol  VALUE_NULL  [FE]                      ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {      [BUGGY]  _reportError( "Current  token( "+getClass().getName()  + ")not  null! ",  JsonToken.VALUE_NULL);  [BUGGY]      pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	261	261	2	replace	_reportError( "Current  token( "+getClass().getName()  + ")not  null! ",  JsonToken.VALUE_NULL);	  _reportError(   "Current    token(   "+getClass().getName()    +   ")not    null!   ");    	non-compiled	[CE]  cannot  find  symbol  VALUE_NULL	117	None	replace
597	[BUG]  [BUGGY]  _reportError( "Current  token( "+getClass().getName()  + ")not  null! ",  JsonToken.END_OBJECT);  [CE]  cannot  find  symbol  [FE]                        ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {      [BUGGY]  _reportError( "Current  token( "+getClass().getName()  + ")not  null! ",  JsonToken.END_OBJECT);  [BUGGY]      pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	261	261	2	replace	_reportError( "Current  token( "+getClass().getName()  + ")not  null! ",  JsonToken.END_OBJECT);	  _reportError(   "Current    token(   "+getClass().getName()    +   ")not    null!   ");    	non-compiled	[CE]  cannot  find  symbol	117	None	replace
598	[BUG]  [BUGGY]  _reportError( "Current  token( "+getClass().getName()  + ")not  null! ",  JsonToken.FIELD_NAME);  [CE]  cannot  find  symbol  FIELD_NAME  [FE]                          ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {      [BUGGY]  _reportError( "Current  token( "+getClass().getName()  + ")not  null! ",  JsonToken.FIELD_NAME);  [BUGGY]      pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	261	261	2	replace	_reportError( "Current  token( "+getClass().getName()  + ")not  null! ",  JsonToken.FIELD_NAME);	  _reportError(   "Current    token(   "+getClass().getName()    +   ")not    null!   ");    	non-compiled	[CE]  cannot  find  symbol  FIELD_NAME	117	None	replace
599	[BUG]  [BUGGY]  validateValue(JsonToken.VALUE_NULL,  SENTINEL_CLOSED);  [CE]  cannot  find  symbol  VALUE_NULL  [FE]                    ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {      [BUGGY]  validateValue(JsonToken.VALUE_NULL,  SENTINEL_CLOSED);  [BUGGY]      pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	261	261	2	replace	validateValue(JsonToken.VALUE_NULL,  SENTINEL_CLOSED);	  validateValue(JsonToken.VALUE_NULL);    	non-compiled	[CE]  cannot  find  symbol  VALUE_NULL	96	None	replace
600	[BUG]  [BUGGY]  validateValue(JsonToken.VALUE_NULL,  null);  [CE]  cannot  find  symbol  VALUE_NULL  [FE]                      ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {      [BUGGY]  validateValue(JsonToken.VALUE_NULL,  null);  [BUGGY]      pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	261	261	2	replace	validateValue(JsonToken.VALUE_NULL,  null);	  validateValue(JsonToken.VALUE_NULL);    	non-compiled	[CE]  cannot  find  symbol  VALUE_NULL	96	None	replace
601	[BUG]  [BUGGY]  validateValue(JsonToken.VALUE_NULL,  JsonToken.START_OBJECT);  [CE]  cannot  find  symbol  VALUE_NULL  [FE]                        ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {      [BUGGY]  validateValue(JsonToken.VALUE_NULL,  JsonToken.START_OBJECT);  [BUGGY]      pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	261	261	2	replace	validateValue(JsonToken.VALUE_NULL,  JsonToken.START_OBJECT);	  validateValue(JsonToken.VALUE_NULL);    	non-compiled	[CE]  cannot  find  symbol  VALUE_NULL	96	None	replace
602	[BUG]  [BUGGY]  validateValue(JsonToken.VALUE_NULL,  true);  [CE]  cannot  find  symbol  VALUE_NULL  [FE]                          ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {      [BUGGY]  validateValue(JsonToken.VALUE_NULL,  true);  [BUGGY]      pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	261	261	2	replace	validateValue(JsonToken.VALUE_NULL,  true);	  validateValue(JsonToken.VALUE_NULL);    	non-compiled	[CE]  cannot  find  symbol  VALUE_NULL	96	None	replace
603	[BUG]  [BUGGY]  validateValue(JsonToken.VALUE_NULL,  pathNames);  [CE]  cannot  find  symbol  VALUE_NULL  [FE]                            ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {      [BUGGY]  validateValue(JsonToken.VALUE_NULL,  pathNames);  [BUGGY]      pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	261	261	2	replace	validateValue(JsonToken.VALUE_NULL,  pathNames);	  validateValue(JsonToken.VALUE_NULL);    	non-compiled	[CE]  cannot  find  symbol  VALUE_NULL	96	None	replace
604	[BUG]  [BUGGY]  connectToPossibleExceptionHandler(null,  JsonToken.END_ARRAY,  pathNames);  [CE]  cannot  find  symbol  [FE]                              ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {      [BUGGY]  connectToPossibleExceptionHandler(null,  JsonToken.END_ARRAY,  pathNames);  [BUGGY]      pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	261	261	2	replace	connectToPossibleExceptionHandler(null,  JsonToken.END_ARRAY,  pathNames);	  connectToPossibleExceptionHandler(null,    JsonToken.END_ARRAY);    	non-compiled	[CE]  cannot  find  symbol	80	None	replace
605	[BUG]  [BUGGY]  connectToPossibleExceptionHandler(null,  JsonToken.END_ARRAY,  SENTINEL_CLOSED);  [CE]  cannot  find  symbol  [FE]                                ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {      [BUGGY]  connectToPossibleExceptionHandler(null,  JsonToken.END_ARRAY,  SENTINEL_CLOSED);  [BUGGY]      pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	261	261	2	replace	connectToPossibleExceptionHandler(null,  JsonToken.END_ARRAY,  SENTINEL_CLOSED);	  connectToPossibleExceptionHandler(null,    JsonToken.END_ARRAY);    	non-compiled	[CE]  cannot  find  symbol	80	None	replace
606	[BUG]  [BUGGY]  connectToPossibleExceptionHandler(null,  JsonToken.END_ARRAY,  stackSize);  [CE]  cannot  find  symbol  [FE]                                  ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {      [BUGGY]  connectToPossibleExceptionHandler(null,  JsonToken.END_ARRAY,  stackSize);  [BUGGY]      pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	261	261	2	replace	connectToPossibleExceptionHandler(null,  JsonToken.END_ARRAY,  stackSize);	  connectToPossibleExceptionHandler(null,    JsonToken.END_ARRAY);    	non-compiled	[CE]  cannot  find  symbol	80	None	replace
607	[BUG]  [BUGGY]  connectToPossibleExceptionHandler(jsonToken.END_ARRAY,  JsonToken.END_OBJECT);  [CE]  cannot  find  symbol  jsonToken  [FE]                                    ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {      [BUGGY]  connectToPossibleExceptionHandler(jsonToken.END_ARRAY,  JsonToken.END_OBJECT);  [BUGGY]      pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	261	261	2	replace	connectToPossibleExceptionHandler(jsonToken.END_ARRAY,  JsonToken.END_OBJECT);	  connectToPossibleExceptionHandler(null,    JsonToken.END_ARRAY);    	non-compiled	[CE]  cannot  find  symbol  jsonToken	80	None	replace
608	[BUG]  [BUGGY]  connectToPossibleExceptionHandler(null,  JsonToken.END_ARRAY,  null);  [CE]  cannot  find  symbol  [FE]                                      ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {      [BUGGY]  connectToPossibleExceptionHandler(null,  JsonToken.END_ARRAY,  null);  [BUGGY]      pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	261	261	2	replace	connectToPossibleExceptionHandler(null,  JsonToken.END_ARRAY,  null);	  connectToPossibleExceptionHandler(null,    JsonToken.END_ARRAY);    	non-compiled	[CE]  cannot  find  symbol	80	None	replace
609	[BUG]  [BUGGY]  connectToPossibleExceptionHandler(null,  JsonToken.END_ARRAY,  pathIndices);  [CE]  cannot  find  symbol  [FE]                                        ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {      [BUGGY]  connectToPossibleExceptionHandler(null,  JsonToken.END_ARRAY,  pathIndices);  [BUGGY]      pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	261	261	2	replace	connectToPossibleExceptionHandler(null,  JsonToken.END_ARRAY,  pathIndices);	  connectToPossibleExceptionHandler(null,    JsonToken.END_ARRAY);    	non-compiled	[CE]  cannot  find  symbol	80	None	replace
610	[BUG]  [BUGGY]  pathIndices[stackSize  -  1]  =  null. ";  [CE]  unclosed  string  literal  [FE]                  ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {      [BUGGY]  pathIndices[stackSize  -  1]  =  null. ";  [BUGGY]      pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	261	261	2	replace	pathIndices[stackSize  -  1]  =  null. ";	  if(stackSize    >    0)    {    popStack();    }    else    {    JsonToken.VALUE_NULL    =    new    JsonToken(JsonToken.NAME);    pathNames[stackSize    -    1]    =    null       ";    }    	non-compiled	[CE]  unclosed  string  literal	146	None	replace
611	[BUG]  [BUGGY]  connectToPeek(JsonToken.VALUE_NUMBER_FLOAT,  JsonToken.VALUE_NUMBER_FLOAT);  [CE]  cannot  find  symbol  VALUE_NUMBER_FLOAT  [FE]                        ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {      [BUGGY]  connectToPeek(JsonToken.VALUE_NUMBER_FLOAT,  JsonToken.VALUE_NUMBER_FLOAT);  [BUGGY]      pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	261	261	2	replace	connectToPeek(JsonToken.VALUE_NUMBER_FLOAT,  JsonToken.VALUE_NUMBER_FLOAT);	  connectToPeek(JsonToken.VALUE_NUMBER_INT,    JsonToken.VALUE_NUMBER_INT);    	non-compiled	[CE]  cannot  find  symbol  VALUE_NUMBER_FLOAT	216	None	replace
612	[BUG]  [BUGGY]  connectToPeek(JsonToken.VALUE_NUMBER_INT,  JsonToken.VALUE_NUMBER_FALSE);  [CE]  cannot  find  symbol  VALUE_NUMBER_INT  [FE]                          ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {      [BUGGY]  connectToPeek(JsonToken.VALUE_NUMBER_INT,  JsonToken.VALUE_NUMBER_FALSE);  [BUGGY]      pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	261	261	2	replace	connectToPeek(JsonToken.VALUE_NUMBER_INT,  JsonToken.VALUE_NUMBER_FALSE);	  connectToPeek(JsonToken.VALUE_NUMBER_INT,    JsonToken.VALUE_NUMBER_INT);    	non-compiled	[CE]  cannot  find  symbol  VALUE_NUMBER_INT	216	None	replace
613	[BUG]  [BUGGY]  connectToPeek(JsonToken.VALUE_NUMBER_INT,  JsonToken.VALUE_NUMBER_CLOSED);  [CE]  cannot  find  symbol  VALUE_NUMBER_INT  [FE]                            ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {      [BUGGY]  connectToPeek(JsonToken.VALUE_NUMBER_INT,  JsonToken.VALUE_NUMBER_CLOSED);  [BUGGY]      pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	261	261	2	replace	connectToPeek(JsonToken.VALUE_NUMBER_INT,  JsonToken.VALUE_NUMBER_CLOSED);	  connectToPeek(JsonToken.VALUE_NUMBER_INT,    JsonToken.VALUE_NUMBER_INT);    	non-compiled	[CE]  cannot  find  symbol  VALUE_NUMBER_INT	216	None	replace
614	[BUG]  [BUGGY]  connectToPeek(JsonToken.VALUE_NUMBER_INT,  JsonToken.VALUE_NUMBER_LONG);  [CE]  cannot  find  symbol  VALUE_NUMBER_INT  [FE]                              ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {      [BUGGY]  connectToPeek(JsonToken.VALUE_NUMBER_INT,  JsonToken.VALUE_NUMBER_LONG);  [BUGGY]      pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	261	261	2	replace	connectToPeek(JsonToken.VALUE_NUMBER_INT,  JsonToken.VALUE_NUMBER_LONG);	  connectToPeek(JsonToken.VALUE_NUMBER_INT,    JsonToken.VALUE_NUMBER_INT);    	non-compiled	[CE]  cannot  find  symbol  VALUE_NUMBER_INT	216	None	replace
615	[BUG]  [BUGGY]  connectToPeek(JsonToken.VALUE_NUMBER_INT,  JsonToken.VALUE_NUMBER_FIELD);  [CE]  cannot  find  symbol  VALUE_NUMBER_INT  [FE]                                ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {      [BUGGY]  connectToPeek(JsonToken.VALUE_NUMBER_INT,  JsonToken.VALUE_NUMBER_FIELD);  [BUGGY]      pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	261	261	2	replace	connectToPeek(JsonToken.VALUE_NUMBER_INT,  JsonToken.VALUE_NUMBER_FIELD);	  connectToPeek(JsonToken.VALUE_NUMBER_INT,    JsonToken.VALUE_NUMBER_INT);    	non-compiled	[CE]  cannot  find  symbol  VALUE_NUMBER_INT	216	None	replace
616	[BUG]  [BUGGY]  [FE]  ArrayIndexOutOfBoundsException  [FE]    AssertionFailedError    [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {      [BUGGY]  pathNames[stackSize  -  1]  =     "null   ";  pathNames[stackSize  -  1]  =   "null   ";  [BUGGY]      pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	261	261	2	add	pathNames[stackSize    -    1]    =       "null   ";    pathNames[stackSize  -  1]  =   "null   ";	  	compilable	  [FE]  ArrayIndexOutOfBoundsException  	34	2	add
617	[BUG]  [BUGGY]  pathNames[stackSize  -  1]  =     "null   ";  pathNames[stackSize  -  1]  =   "null   ";  [FE]  ArrayIndexOutOfBoundsException  [FE]    AssertionFailedError    [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {      [BUGGY]  pathNames[stackSize  -  1]  =     "null   ";  pathNames[stackSize  -  1]  =   "null   ";  [BUGGY]      pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	261	261	2	replace	pathNames[stackSize    -    1]    =       "null   ";    pathNames[stackSize  -  1]  =   "null   ";	  	compilable	  [FE]  ArrayIndexOutOfBoundsException  	34	2	add
618	[BUG]  [BUGGY]  pathNames[stackSize  -  1]  =     "null   ";  pathNames[stackSize  -  1]  =   "null ".;  [CE]  <identifier>  expected  [FE]      AssertionFailedError    [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {      [BUGGY]  pathNames[stackSize  -  1]  =     "null   ";  pathNames[stackSize  -  1]  =   "null ".;  [BUGGY]      pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	261	261	2	replace	pathNames[stackSize    -    1]    =       "null   ";    pathNames[stackSize  -  1]  =   "null ".;	  	non-compiled	[CE]  <identifier>  expected	34	None	add
619	[BUG]  [BUGGY]  pathNames[stackSize  -  1]  =     "null   ";  pathNames[stackSize  -  1]  =   "null ",  null;  [CE]  [FE]        AssertionFailedError    [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {      [BUGGY]  pathNames[stackSize  -  1]  =     "null   ";  pathNames[stackSize  -  1]  =   "null ",  null;  [BUGGY]      pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	261	261	2	replace	pathNames[stackSize    -    1]    =       "null   ";    pathNames[stackSize  -  1]  =   "null ",  null;	  	non-compiled	[CE]  	34	None	add
620	[BUG]  [BUGGY]  pathNames[stackSize  -  1]  =     "null   ";  pathNames[stackSize  -  1]  =  null   ";  [CE]  unclosed  string  literal  [FE]          AssertionFailedError    [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {      [BUGGY]  pathNames[stackSize  -  1]  =     "null   ";  pathNames[stackSize  -  1]  =  null   ";  [BUGGY]      pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	261	261	2	replace	pathNames[stackSize    -    1]    =       "null   ";    pathNames[stackSize  -  1]  =  null   ";	  	non-compiled	[CE]  unclosed  string  literal	34	None	add
621	[BUG]  [BUGGY]  [FE]  ArrayIndexOutOfBoundsException  [FE]            AssertionFailedError    [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {      [BUGGY]  pathNames[stackSize  -  1]  =     "null   ";  pathNames[stackSize  -  1]  =   "null. ";  [BUGGY]      pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	261	261	2	add	pathNames[stackSize    -    1]    =       "null   ";    pathNames[stackSize  -  1]  =   "null. ";	  	compilable	  [FE]  ArrayIndexOutOfBoundsException  	34	2	add
622	[BUG]  [BUGGY]  pathNames[stackSize  -  1]  =     "null   ";  pathNames[stackSize  -  1]  =   "null. ";  [FE]  ArrayIndexOutOfBoundsException  [FE]            AssertionFailedError    [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {      [BUGGY]  pathNames[stackSize  -  1]  =     "null   ";  pathNames[stackSize  -  1]  =   "null. ";  [BUGGY]      pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	261	261	2	replace	pathNames[stackSize    -    1]    =       "null   ";    pathNames[stackSize  -  1]  =   "null. ";	  	compilable	  [FE]  ArrayIndexOutOfBoundsException  	34	2	add
623	[BUG]  [BUGGY]  connectToPossibleExceptionHandler(JsonToken.VALUE_STRING);  [CE]  cannot  find  symbol  VALUE_STRING  [FE]                  ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {      [BUGGY]  connectToPossibleExceptionHandler(JsonToken.VALUE_STRING);  [BUGGY]      pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	261	261	2	replace	connectToPossibleExceptionHandler(JsonToken.VALUE_STRING);	  connectToPossibleExceptionHandler(JsonToken.VALUE_EMPTY);    	non-compiled	[CE]  cannot  find  symbol  VALUE_STRING	4	None	replace
624	[BUG]  [BUGGY]  connectToPossibleExceptionHandler(JsonToken.VALUE_NUMBER);  [CE]  cannot  find  symbol  VALUE_NUMBER  [FE]                    ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {      [BUGGY]  connectToPossibleExceptionHandler(JsonToken.VALUE_NUMBER);  [BUGGY]      pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	261	261	2	replace	connectToPossibleExceptionHandler(JsonToken.VALUE_NUMBER);	  connectToPossibleExceptionHandler(JsonToken.VALUE_EMPTY);    	non-compiled	[CE]  cannot  find  symbol  VALUE_NUMBER	4	None	replace
625	[BUG]  [BUGGY]  connectToPossibleExceptionHandler(JsonToken.FIELD_NAME);  [CE]  cannot  find  symbol  FIELD_NAME  [FE]                      ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {      [BUGGY]  connectToPossibleExceptionHandler(JsonToken.FIELD_NAME);  [BUGGY]      pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	261	261	2	replace	connectToPossibleExceptionHandler(JsonToken.FIELD_NAME);	  connectToPossibleExceptionHandler(JsonToken.VALUE_EMPTY);    	non-compiled	[CE]  cannot  find  symbol  FIELD_NAME	4	None	replace
626	[BUG]  [BUGGY]  StackTree  <  NUMBER_INDEXES  ||  stackSize  >  1)  {  popStack();  }  else  {  skipStack();  }  [CE]  >  expected  [FE]              ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {      [BUGGY]  StackTree  <  NUMBER_INDEXES  ||  stackSize  >  1)  {  popStack();  }  else  {  skipStack();  }  [BUGGY]      pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	261	261	2	replace	StackTree  <  NUMBER_INDEXES  ||  stackSize  >  1)  {  popStack();  }  else  {  skipStack();  }	  if(stackSize    >    1)    {    popStack();    }    else    {    skipStack();    }    	non-compiled	[CE]  >  expected	107	None	replace
627	[BUG]  [BUGGY]  StackTree  <  NUMBER_OF_RANGE  |  stackSize  >  1)  {  popStack();  }  else  {  skipStack();  }  [CE]  >  expected  [FE]                ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {      [BUGGY]  StackTree  <  NUMBER_OF_RANGE  |  stackSize  >  1)  {  popStack();  }  else  {  skipStack();  }  [BUGGY]      pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	261	261	2	replace	StackTree  <  NUMBER_OF_RANGE  |  stackSize  >  1)  {  popStack();  }  else  {  skipStack();  }	  if(stackSize    >    1)    {    popStack();    }    else    {    skipStack();    }    	non-compiled	[CE]  >  expected	107	None	replace
628	[BUG]  [BUGGY]  StackTree  <  NUMBER_INDEXED?  skipStack()  :  null;  [CE]  >  expected  [FE]                  ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {      [BUGGY]  StackTree  <  NUMBER_INDEXED?  skipStack()  :  null;  [BUGGY]      pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	261	261	2	replace	StackTree  <  NUMBER_INDEXED?  skipStack()  :  null;	  if(stackSize    >    1)    {    popStack();    }    else    {    skipStack();    }    	non-compiled	[CE]  >  expected	107	None	replace
629	[BUG]  [BUGGY]  StackTree  <  NUMBER_INDEXES  ||  stackSize  >  1)  {  popStack();  }  [CE]  >  expected  [FE]                    ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {      [BUGGY]  StackTree  <  NUMBER_INDEXES  ||  stackSize  >  1)  {  popStack();  }  [BUGGY]      pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	261	261	2	replace	StackTree  <  NUMBER_INDEXES  ||  stackSize  >  1)  {  popStack();  }	  if(stackSize    >    1)    {    popStack();    }    else    {    skipStack();    }    	non-compiled	[CE]  >  expected	107	None	replace
630	[BUG]  [BUGGY]  _reportError( "Current  token( "+getMessage()  + ")not  a  value. ",  JsonToken.END_ARRAY);  [CE]  cannot  find  symbol  [FE]                ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {      [BUGGY]  _reportError( "Current  token( "+getMessage()  + ")not  a  value. ",  JsonToken.END_ARRAY);  [BUGGY]      pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	261	261	2	replace	_reportError( "Current  token( "+getMessage()  + ")not  a  value. ",  JsonToken.END_ARRAY);	  _reportError(   "Current    token(   "+getMessage()    +   ")not    a    value   ",    JsonToken.END_ARRAY);    	non-compiled	[CE]  cannot  find  symbol	205	None	replace
631	[BUG]  [BUGGY]  validateValue(SETINEL_CLOSED);  [CE]  cannot  find  symbol  SETINEL_CLOSED  [FE]                          ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {      [BUGGY]  validateValue(SETINEL_CLOSED);  [BUGGY]      pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	261	261	2	replace	validateValue(SETINEL_CLOSED);	  validateValue(result);    	non-compiled	[CE]  cannot  find  symbol  SETINEL_CLOSED	105	None	replace
632	[BUG]  [BUGGY]  validateValue(stack);  [CE]  cannot  find  symbol  [FE]                            ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {      [BUGGY]  validateValue(stack);  [BUGGY]      pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	261	261	2	replace	validateValue(stack);	  validateValue(result);    	non-compiled	[CE]  cannot  find  symbol	105	None	replace
633	[BUG]  [BUGGY]  validateValue(stackSize);  [CE]  cannot  find  symbol  [FE]                              ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {      [BUGGY]  validateValue(stackSize);  [BUGGY]      pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	261	261	2	replace	validateValue(stackSize);	  validateValue(result);    	non-compiled	[CE]  cannot  find  symbol	105	None	replace
634	[BUG]  [BUGGY]  validateValue(new  String[]  {  }  );  [CE]  cannot  find  symbol  [FE]                                ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {      [BUGGY]  validateValue(new  String[]  {  }  );  [BUGGY]      pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	261	261	2	replace	validateValue(new  String[]  {  }  );	  validateValue(result);    	non-compiled	[CE]  cannot  find  symbol	105	None	replace
635	[BUG]  [BUGGY]  validateValue(stack,  offset);  [CE]  cannot  find  symbol  offset  [FE]                                  ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {      [BUGGY]  validateValue(stack,  offset);  [BUGGY]      pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	261	261	2	replace	validateValue(stack,  offset);	  validateValue(result);    	non-compiled	[CE]  cannot  find  symbol  offset	105	None	replace
636	[BUG]  [BUGGY]  validateValue(stack.length);  [CE]  cannot  find  symbol  [FE]                                    ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {      [BUGGY]  validateValue(stack.length);  [BUGGY]      pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	261	261	2	replace	validateValue(stack.length);	  validateValue(result);    	non-compiled	[CE]  cannot  find  symbol	105	None	replace
637	[BUG]  [BUGGY]  connectToPossibleExceptionHandler(JsonToken.VALUE_NULL,  null);  [CE]  cannot  find  symbol  VALUE_NULL  [FE]                    ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {      [BUGGY]  connectToPossibleExceptionHandler(JsonToken.VALUE_NULL,  null);  [BUGGY]      pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	261	261	2	replace	connectToPossibleExceptionHandler(JsonToken.VALUE_NULL,  null);	  connectToPossibleExceptionHandler(JsonToken.VALUE_NULL);    	non-compiled	[CE]  cannot  find  symbol  VALUE_NULL	5	None	replace
638	[BUG]  [BUGGY]  connectToPossibleExceptionHandler(JsonToken.VALUE_EMBEDDED_TYPE);  [CE]  cannot  find  symbol  VALUE_EMBEDDED_TYPE  [FE]                      ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {      [BUGGY]  connectToPossibleExceptionHandler(JsonToken.VALUE_EMBEDDED_TYPE);  [BUGGY]      pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	261	261	2	replace	connectToPossibleExceptionHandler(JsonToken.VALUE_EMBEDDED_TYPE);	  connectToPossibleExceptionHandler(JsonToken.VALUE_NULL);    	non-compiled	[CE]  cannot  find  symbol  VALUE_EMBEDDED_TYPE	5	None	replace
639	[BUG]  [BUGGY]  connectToPossibleExceptionHandler(throwInternal(),  JsonToken.START_OBJECT,  pathNames);  [CE]  cannot  find  symbol  [FE]                      ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {      [BUGGY]  connectToPossibleExceptionHandler(throwInternal(),  JsonToken.START_OBJECT,  pathNames);  [BUGGY]      pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	261	261	2	replace	connectToPossibleExceptionHandler(throwInternal(),  JsonToken.START_OBJECT,  pathNames);	  connectToPossibleExceptionHandler(throwInternal(),    JsonToken.START_OBJECT);    	non-compiled	[CE]  cannot  find  symbol	52	None	replace
640	[BUG]  [BUGGY]  connectToPossibleExceptionHandler(jsonToken.START_OBJECT,  stackSize);  [CE]  cannot  find  symbol  jsonToken  [FE]                        ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {      [BUGGY]  connectToPossibleExceptionHandler(jsonToken.START_OBJECT,  stackSize);  [BUGGY]      pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	261	261	2	replace	connectToPossibleExceptionHandler(jsonToken.START_OBJECT,  stackSize);	  connectToPossibleExceptionHandler(throwInternal(),    JsonToken.START_OBJECT);    	non-compiled	[CE]  cannot  find  symbol  jsonToken	52	None	replace
641	[BUG]  [BUGGY]  connectToPossibleExceptionHandler(startInternal(),  JsonToken.START_OBJECT);  [CE]  cannot  find  symbol  [FE]                          ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {      [BUGGY]  connectToPossibleExceptionHandler(startInternal(),  JsonToken.START_OBJECT);  [BUGGY]      pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	261	261	2	replace	connectToPossibleExceptionHandler(startInternal(),  JsonToken.START_OBJECT);	  connectToPossibleExceptionHandler(throwInternal(),    JsonToken.START_OBJECT);    	non-compiled	[CE]  cannot  find  symbol	52	None	replace
642	[BUG]  [BUGGY]  connectToPossibleExceptionHandler(JsonToken.START_OBJECT,  stackSize);  [CE]  cannot  find  symbol  START_OBJECT  [FE]                            ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {      [BUGGY]  connectToPossibleExceptionHandler(JsonToken.START_OBJECT,  stackSize);  [BUGGY]      pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	261	261	2	replace	connectToPossibleExceptionHandler(JsonToken.START_OBJECT,  stackSize);	  connectToPossibleExceptionHandler(throwInternal(),    JsonToken.START_OBJECT);    	non-compiled	[CE]  cannot  find  symbol  START_OBJECT	52	None	replace
643	[BUG]  [BUGGY]  connectToPossibleExceptionHandler(throwInternal(),  JsonToken.START_OBJECT,  stackSize);  [CE]  cannot  find  symbol  [FE]                              ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {      [BUGGY]  connectToPossibleExceptionHandler(throwInternal(),  JsonToken.START_OBJECT,  stackSize);  [BUGGY]      pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	261	261	2	replace	connectToPossibleExceptionHandler(throwInternal(),  JsonToken.START_OBJECT,  stackSize);	  connectToPossibleExceptionHandler(throwInternal(),    JsonToken.START_OBJECT);    	non-compiled	[CE]  cannot  find  symbol	52	None	replace
644	[BUG]  [BUGGY]  connectToPossibleExceptionHandler(throwInternal(),  JsonToken.START_OBJECT,  nextName());  [CE]  cannot  find  symbol  [FE]                                ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {      [BUGGY]  connectToPossibleExceptionHandler(throwInternal(),  JsonToken.START_OBJECT,  nextName());  [BUGGY]      pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	261	261	2	replace	connectToPossibleExceptionHandler(throwInternal(),  JsonToken.START_OBJECT,  nextName());	  connectToPossibleExceptionHandler(throwInternal(),    JsonToken.START_OBJECT);    	non-compiled	[CE]  cannot  find  symbol	52	None	replace
645	[BUG]  [BUGGY]  connectToPossibleExceptionHandler(this.throwInternal(),  JsonToken.START_OBJECT);  [CE]  cannot  find  symbol  [FE]                                  ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {      [BUGGY]  connectToPossibleExceptionHandler(this.throwInternal(),  JsonToken.START_OBJECT);  [BUGGY]      pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	261	261	2	replace	connectToPossibleExceptionHandler(this.throwInternal(),  JsonToken.START_OBJECT);	  connectToPossibleExceptionHandler(throwInternal(),    JsonToken.START_OBJECT);    	non-compiled	[CE]  cannot  find  symbol	52	None	replace
646	[BUG]  [BUGGY]  [FE]  IllegalArgumentException  [FE]    IllegalArgumentException    [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {      [BUGGY]  if(stackSize    >    0)    {    popStack();    }    else    {    throw    new    IllegalArgumentException(     "     ");    }    if(stackSize  >  0)  {  popStack();  }  else  {  throw  new  IllegalArgumentException(   "...   ");  }  if(stackSize  >  0)  {  popStack();  }  else  {  throw  new  IllegalArgumentException( "...   ");  }  [BUGGY]      pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	261	261	2	add	if(stackSize        >        0)        {        popStack();        }        else        {        throw        new        IllegalArgumentException(       "       ");        }        if(stackSize    >    0)    {    popStack();    }    else    {    throw    new    IllegalArgumentException(   "...   ");    }    if(stackSize  >  0)  {  popStack();  }  else  {  throw  new  IllegalArgumentException( "...   ");  }	  	compilable	  [FE]  IllegalArgumentException  	15	2	add
647	[BUG]  [BUGGY]  if(stackSize    >    0)    {    popStack();    }    else    {    throw    new    IllegalArgumentException(     "     ");    }    if(stackSize  >  0)  {  popStack();  }  else  {  throw  new  IllegalArgumentException(   "...   ");  }  if(stackSize  >  0)  {  popStack();  }  else  {  throw  new  IllegalArgumentException( "...   ");  }  [FE]  IllegalArgumentException  [FE]    IllegalArgumentException    [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {      [BUGGY]  if(stackSize    >    0)    {    popStack();    }    else    {    throw    new    IllegalArgumentException(     "     ");    }    if(stackSize  >  0)  {  popStack();  }  else  {  throw  new  IllegalArgumentException(   "...   ");  }  if(stackSize  >  0)  {  popStack();  }  else  {  throw  new  IllegalArgumentException( "...   ");  }  [BUGGY]      pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	261	261	2	replace	if(stackSize        >        0)        {        popStack();        }        else        {        throw        new        IllegalArgumentException(       "       ");        }        if(stackSize    >    0)    {    popStack();    }    else    {    throw    new    IllegalArgumentException(   "...   ");    }    if(stackSize  >  0)  {  popStack();  }  else  {  throw  new  IllegalArgumentException( "...   ");  }	  	compilable	  [FE]  IllegalArgumentException  	15	2	add
648	[BUG]  [BUGGY]  [FE]  IllegalArgumentException  [FE]      IllegalArgumentException    [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {      [BUGGY]  if(stackSize    >    0)    {    popStack();    }    else    {    throw    new    IllegalArgumentException(     "     ");    }    if(stackSize  >  0)  {  popStack();  }  else  {  throw  new  IllegalArgumentException(   "...   ");  }  if(stackSize  >  0)  {  popStack();  }  else  {  throw  new  IllegalArgumentException( "   ");  }  [BUGGY]      pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	261	261	2	add	if(stackSize        >        0)        {        popStack();        }        else        {        throw        new        IllegalArgumentException(       "       ");        }        if(stackSize    >    0)    {    popStack();    }    else    {    throw    new    IllegalArgumentException(   "...   ");    }    if(stackSize  >  0)  {  popStack();  }  else  {  throw  new  IllegalArgumentException( "   ");  }	  	compilable	  [FE]  IllegalArgumentException  	15	2	add
649	[BUG]  [BUGGY]  if(stackSize    >    0)    {    popStack();    }    else    {    throw    new    IllegalArgumentException(     "     ");    }    if(stackSize  >  0)  {  popStack();  }  else  {  throw  new  IllegalArgumentException(   "...   ");  }  if(stackSize  >  0)  {  popStack();  }  else  {  throw  new  IllegalArgumentException( "   ");  }  [FE]  IllegalArgumentException  [FE]      IllegalArgumentException    [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {      [BUGGY]  if(stackSize    >    0)    {    popStack();    }    else    {    throw    new    IllegalArgumentException(     "     ");    }    if(stackSize  >  0)  {  popStack();  }  else  {  throw  new  IllegalArgumentException(   "...   ");  }  if(stackSize  >  0)  {  popStack();  }  else  {  throw  new  IllegalArgumentException( "   ");  }  [BUGGY]      pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	261	261	2	replace	if(stackSize        >        0)        {        popStack();        }        else        {        throw        new        IllegalArgumentException(       "       ");        }        if(stackSize    >    0)    {    popStack();    }    else    {    throw    new    IllegalArgumentException(   "...   ");    }    if(stackSize  >  0)  {  popStack();  }  else  {  throw  new  IllegalArgumentException( "   ");  }	  	compilable	  [FE]  IllegalArgumentException  	15	2	add
650	[BUG]  [BUGGY]  [FE]  IllegalArgumentException  [FE]        IllegalArgumentException    [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {      [BUGGY]  if(stackSize    >    0)    {    popStack();    }    else    {    throw    new    IllegalArgumentException(     "     ");    }    if(stackSize  >  0)  {  popStack();  }  else  {  throw  new  IllegalArgumentException(   "...   ");  }  if(stackSize  >  0)  {  popStack();  }  else  {  throw  new  IllegalArgumentException( ". ");  }  [BUGGY]      pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	261	261	2	add	if(stackSize        >        0)        {        popStack();        }        else        {        throw        new        IllegalArgumentException(       "       ");        }        if(stackSize    >    0)    {    popStack();    }    else    {    throw    new    IllegalArgumentException(   "...   ");    }    if(stackSize  >  0)  {  popStack();  }  else  {  throw  new  IllegalArgumentException( ". ");  }	  	compilable	  [FE]  IllegalArgumentException  	15	2	add
651	[BUG]  [BUGGY]  if(stackSize    >    0)    {    popStack();    }    else    {    throw    new    IllegalArgumentException(     "     ");    }    if(stackSize  >  0)  {  popStack();  }  else  {  throw  new  IllegalArgumentException(   "...   ");  }  if(stackSize  >  0)  {  popStack();  }  else  {  throw  new  IllegalArgumentException( ". ");  }  [FE]  IllegalArgumentException  [FE]        IllegalArgumentException    [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {      [BUGGY]  if(stackSize    >    0)    {    popStack();    }    else    {    throw    new    IllegalArgumentException(     "     ");    }    if(stackSize  >  0)  {  popStack();  }  else  {  throw  new  IllegalArgumentException(   "...   ");  }  if(stackSize  >  0)  {  popStack();  }  else  {  throw  new  IllegalArgumentException( ". ");  }  [BUGGY]      pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	261	261	2	replace	if(stackSize        >        0)        {        popStack();        }        else        {        throw        new        IllegalArgumentException(       "       ");        }        if(stackSize    >    0)    {    popStack();    }    else    {    throw    new    IllegalArgumentException(   "...   ");    }    if(stackSize  >  0)  {  popStack();  }  else  {  throw  new  IllegalArgumentException( ". ");  }	  	compilable	  [FE]  IllegalArgumentException  	15	2	add
652	[BUG]  [BUGGY]  if(stackSize    >    0)    {    popStack();    }    else    {    throw    new    IllegalArgumentException(     "     ");    }    if(stackSize  >  0)  {  popStack();  }  else  {  throw  new  IllegalArgumentException(   "...   ");  }  if(stackSize  >  0)  {  popStack();  }  else  {  throw  new  IllegalArgumentException( "...”);  }  [CE]  unclosed  string  literal  [FE]          IllegalArgumentException    [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {      [BUGGY]  if(stackSize    >    0)    {    popStack();    }    else    {    throw    new    IllegalArgumentException(     "     ");    }    if(stackSize  >  0)  {  popStack();  }  else  {  throw  new  IllegalArgumentException(   "...   ");  }  if(stackSize  >  0)  {  popStack();  }  else  {  throw  new  IllegalArgumentException( "...”);  }  [BUGGY]      pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	261	261	2	replace	if(stackSize        >        0)        {        popStack();        }        else        {        throw        new        IllegalArgumentException(       "       ");        }        if(stackSize    >    0)    {    popStack();    }    else    {    throw    new    IllegalArgumentException(   "...   ");    }    if(stackSize  >  0)  {  popStack();  }  else  {  throw  new  IllegalArgumentException( "...”);  }	  	non-compiled	[CE]  unclosed  string  literal	15	None	add
653	[BUG]  [BUGGY]  [FE]  IllegalArgumentException  [FE]            IllegalArgumentException    [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {      [BUGGY]  if(stackSize    >    0)    {    popStack();    }    else    {    throw    new    IllegalArgumentException(     "     ");    }    if(stackSize  >  0)  {  popStack();  }  else  {  throw  new  IllegalArgumentException(   "...   ");  }  if(stackSize  >  0)  {  popStack();  }  else  {  throw  new  IllegalArgumentException( "? ");  }  [BUGGY]      pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	261	261	2	add	if(stackSize        >        0)        {        popStack();        }        else        {        throw        new        IllegalArgumentException(       "       ");        }        if(stackSize    >    0)    {    popStack();    }    else    {    throw    new    IllegalArgumentException(   "...   ");    }    if(stackSize  >  0)  {  popStack();  }  else  {  throw  new  IllegalArgumentException( "? ");  }	  	compilable	  [FE]  IllegalArgumentException  	15	2	add
654	[BUG]  [BUGGY]  if(stackSize    >    0)    {    popStack();    }    else    {    throw    new    IllegalArgumentException(     "     ");    }    if(stackSize  >  0)  {  popStack();  }  else  {  throw  new  IllegalArgumentException(   "...   ");  }  if(stackSize  >  0)  {  popStack();  }  else  {  throw  new  IllegalArgumentException( "? ");  }  [FE]  IllegalArgumentException  [FE]            IllegalArgumentException    [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {      [BUGGY]  if(stackSize    >    0)    {    popStack();    }    else    {    throw    new    IllegalArgumentException(     "     ");    }    if(stackSize  >  0)  {  popStack();  }  else  {  throw  new  IllegalArgumentException(   "...   ");  }  if(stackSize  >  0)  {  popStack();  }  else  {  throw  new  IllegalArgumentException( "? ");  }  [BUGGY]      pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	261	261	2	replace	if(stackSize        >        0)        {        popStack();        }        else        {        throw        new        IllegalArgumentException(       "       ");        }        if(stackSize    >    0)    {    popStack();    }    else    {    throw    new    IllegalArgumentException(   "...   ");    }    if(stackSize  >  0)  {  popStack();  }  else  {  throw  new  IllegalArgumentException( "? ");  }	  	compilable	  [FE]  IllegalArgumentException  	15	2	add
655	[BUG]  [BUGGY]  _reportError( "Current  token( "+getMessage()  + ")not  a  value. ",  JsonToken.END_OBJECT);  [CE]  cannot  find  symbol  [FE]                    ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {      [BUGGY]  _reportError( "Current  token( "+getMessage()  + ")not  a  value. ",  JsonToken.END_OBJECT);  [BUGGY]      pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	261	261	2	replace	_reportError( "Current  token( "+getMessage()  + ")not  a  value. ",  JsonToken.END_OBJECT);	  _reportError(   "Current    token(   "+getMessage()    +   ")not    a    value   ",    JsonToken.END_OBJECT);    	non-compiled	[CE]  cannot  find  symbol	31	None	replace
656	[BUG]  [BUGGY]  _reportError( "Current  token( "+getMessage()  + ")not  a  value ", "JsonToken.END_OBJECT);  [CE]  unclosed  string  literal  [FE]                      ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {      [BUGGY]  _reportError( "Current  token( "+getMessage()  + ")not  a  value ", "JsonToken.END_OBJECT);  [BUGGY]      pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	261	261	2	replace	_reportError( "Current  token( "+getMessage()  + ")not  a  value ", "JsonToken.END_OBJECT);	  _reportError(   "Current    token(   "+getMessage()    +   ")not    a    value   ",    JsonToken.END_OBJECT);    	non-compiled	[CE]  unclosed  string  literal	31	None	replace
657	[BUG]  [BUGGY]  PathIndices  pathIndices[stackSize  -  2]  =  null;  [CE]  ']'  expected  [FE]          AssertionFailedError      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {      [BUGGY]  PathIndices  pathIndices[stackSize  -  2]  =  null;  [BUGGY]      pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	261	261	2	replace	PathIndices  pathIndices[stackSize  -  2]  =  null;	  PathIndices    pathIndices[stackSize    -    1]    =    null;    	non-compiled	[CE]  ']'  expected	42	None	replace
658	[BUG]  [BUGGY]  PathIndices  pathIndices[stackSize  -  1]  =  JsonToken.VALUE_EMBEDDED_ARRAY;  [CE]  ']'  expected  [FE]            AssertionFailedError      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {      [BUGGY]  PathIndices  pathIndices[stackSize  -  1]  =  JsonToken.VALUE_EMBEDDED_ARRAY;  [BUGGY]      pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	261	261	2	replace	PathIndices  pathIndices[stackSize  -  1]  =  JsonToken.VALUE_EMBEDDED_ARRAY;	  PathIndices    pathIndices[stackSize    -    1]    =    null;    	non-compiled	[CE]  ']'  expected	42	None	replace
659	[BUG]  [BUGGY]  PathIndices  pathIndices[stackSize  -  1]  =  JsonToken.VALUE_NULL;  [CE]  ']'  expected  [FE]              AssertionFailedError      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {      [BUGGY]  PathIndices  pathIndices[stackSize  -  1]  =  JsonToken.VALUE_NULL;  [BUGGY]      pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	261	261	2	replace	PathIndices  pathIndices[stackSize  -  1]  =  JsonToken.VALUE_NULL;	  PathIndices    pathIndices[stackSize    -    1]    =    null;    	non-compiled	[CE]  ']'  expected	42	None	replace
660	[BUG]  [BUGGY]  PathIndices  pathIndices[stackSize  -  1]  =  JsonToken.VALUE_EMPTY;  [CE]  ']'  expected  [FE]                AssertionFailedError      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {      [BUGGY]  PathIndices  pathIndices[stackSize  -  1]  =  JsonToken.VALUE_EMPTY;  [BUGGY]      pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	261	261	2	replace	PathIndices  pathIndices[stackSize  -  1]  =  JsonToken.VALUE_EMPTY;	  PathIndices    pathIndices[stackSize    -    1]    =    null;    	non-compiled	[CE]  ']'  expected	42	None	replace
661	[BUG]  [BUGGY]  PathIndices  pathIndices[stackSize  -  1]  =  JsonToken.VALUE_EMBEDDED_OBJECT;  [CE]  ']'  expected  [FE]                  AssertionFailedError      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {      [BUGGY]  PathIndices  pathIndices[stackSize  -  1]  =  JsonToken.VALUE_EMBEDDED_OBJECT;  [BUGGY]      pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	261	261	2	replace	PathIndices  pathIndices[stackSize  -  1]  =  JsonToken.VALUE_EMBEDDED_OBJECT;	  PathIndices    pathIndices[stackSize    -    1]    =    null;    	non-compiled	[CE]  ']'  expected	42	None	replace
662	[BUG]  [BUGGY]  _reportError( "Current  token( "+getClass().getName()  + ")not  a  value.n ");  [CE]  cannot  find  symbol  [FE]            ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {      [BUGGY]  _reportError( "Current  token( "+getClass().getName()  + ")not  a  value.n ");  [BUGGY]      pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	261	261	2	replace	_reportError( "Current  token( "+getClass().getName()  + ")not  a  value.n ");	  _reportError(   "Current    token(   "+getClass().getName()    +   ")not    a    value.   ");    	non-compiled	[CE]  cannot  find  symbol	24	None	replace
663	[BUG]  [BUGGY]  _reportError( "Current  token( "+getClass().getName()  + ")not  a  value. ",  JsonToken.VALUE_NULL);  [CE]  cannot  find  symbol  VALUE_NULL  [FE]              ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {      [BUGGY]  _reportError( "Current  token( "+getClass().getName()  + ")not  a  value. ",  JsonToken.VALUE_NULL);  [BUGGY]      pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	261	261	2	replace	_reportError( "Current  token( "+getClass().getName()  + ")not  a  value. ",  JsonToken.VALUE_NULL);	  _reportError(   "Current    token(   "+getClass().getName()    +   ")not    a    value.   ");    	non-compiled	[CE]  cannot  find  symbol  VALUE_NULL	24	None	replace
664	[BUG]  [BUGGY]  _reportError( "Current  token( "+getClass().getName()  + ")not  a  value. ",  JsonToken.END_OBJECT);  [CE]  cannot  find  symbol  [FE]                ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {      [BUGGY]  _reportError( "Current  token( "+getClass().getName()  + ")not  a  value. ",  JsonToken.END_OBJECT);  [BUGGY]      pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	261	261	2	replace	_reportError( "Current  token( "+getClass().getName()  + ")not  a  value. ",  JsonToken.END_OBJECT);	  _reportError(   "Current    token(   "+getClass().getName()    +   ")not    a    value.   ");    	non-compiled	[CE]  cannot  find  symbol	24	None	replace
665	[BUG]  [BUGGY]  StackTree  <  NUMBER_OF_RANGE)  {  skipStack();  }  else  {  skipStack();  }  [CE]  >  expected  [FE]                        ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {      [BUGGY]  StackTree  <  NUMBER_OF_RANGE)  {  skipStack();  }  else  {  skipStack();  }  [BUGGY]      pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	261	261	2	replace	StackTree  <  NUMBER_OF_RANGE)  {  skipStack();  }  else  {  skipStack();  }	  StackTree    <    NUMBER_OF_RANGE)    {    popStack();    }    else    {    skipStack();    }    	non-compiled	[CE]  >  expected	76	None	replace
666	[BUG]  [BUGGY]  StackTree  <  NUMBER_OF_RANGE)  {  skipStack();  }  [CE]  >  expected  [FE]                          ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {      [BUGGY]  StackTree  <  NUMBER_OF_RANGE)  {  skipStack();  }  [BUGGY]      pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	261	261	2	replace	StackTree  <  NUMBER_OF_RANGE)  {  skipStack();  }	  StackTree    <    NUMBER_OF_RANGE)    {    popStack();    }    else    {    skipStack();    }    	non-compiled	[CE]  >  expected	76	None	replace
667	[BUG]  [BUGGY]  StackTree  <  NUMBER_OF_RANGE)  {  nextName();  [CE]  >  expected  [FE]                            ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {      [BUGGY]  StackTree  <  NUMBER_OF_RANGE)  {  nextName();  [BUGGY]      pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	261	261	2	replace	StackTree  <  NUMBER_OF_RANGE)  {  nextName();	  StackTree    <    NUMBER_OF_RANGE)    {    popStack();    }    else    {    skipStack();    }    	non-compiled	[CE]  >  expected	76	None	replace
668	[BUG]  [BUGGY]  StackTree  <  NUMBER_OF_RANGE)  {  popStack();  }  [CE]  >  expected  [FE]                              ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {      [BUGGY]  StackTree  <  NUMBER_OF_RANGE)  {  popStack();  }  [BUGGY]      pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	261	261	2	replace	StackTree  <  NUMBER_OF_RANGE)  {  popStack();  }	  StackTree    <    NUMBER_OF_RANGE)    {    popStack();    }    else    {    skipStack();    }    	non-compiled	[CE]  >  expected	76	None	replace
669	[BUG]  [BUGGY]  StackTree  <  NUMBER_OF_RANGE)  {  popStack();  [CE]  >  expected  [FE]                                ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {      [BUGGY]  StackTree  <  NUMBER_OF_RANGE)  {  popStack();  [BUGGY]      pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	261	261	2	replace	StackTree  <  NUMBER_OF_RANGE)  {  popStack();	  StackTree    <    NUMBER_OF_RANGE)    {    popStack();    }    else    {    skipStack();    }    	non-compiled	[CE]  >  expected	76	None	replace
670	[BUG]  [BUGGY]  PopStack().push(JsonToken.VALUE_STRING);  [CE]  cannot  find  symbol  VALUE_STRING  [FE]              ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {      [BUGGY]  PopStack().push(JsonToken.VALUE_STRING);  [BUGGY]      pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	261	261	2	replace	PopStack().push(JsonToken.VALUE_STRING);	  PopStack();    	non-compiled	[CE]  cannot  find  symbol  VALUE_STRING	60	None	replace
671	[BUG]  [BUGGY]  PopStack().push(JsonToken.START_OBJECT);  [CE]  cannot  find  symbol  START_OBJECT  [FE]                ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {      [BUGGY]  PopStack().push(JsonToken.START_OBJECT);  [BUGGY]      pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	261	261	2	replace	PopStack().push(JsonToken.START_OBJECT);	  PopStack();    	non-compiled	[CE]  cannot  find  symbol  START_OBJECT	60	None	replace
672	[BUG]  [BUGGY]  PopStack().push(nextName());  [CE]  cannot  find  symbol  [FE]                  ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {      [BUGGY]  PopStack().push(nextName());  [BUGGY]      pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	261	261	2	replace	PopStack().push(nextName());	  PopStack();    	non-compiled	[CE]  cannot  find  symbol	60	None	replace
673	[BUG]  [BUGGY]  PopStack().push(JsonToken.VALUE_NULL);  [CE]  cannot  find  symbol  VALUE_NULL  [FE]                    ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {      [BUGGY]  PopStack().push(JsonToken.VALUE_NULL);  [BUGGY]      pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	261	261	2	replace	PopStack().push(JsonToken.VALUE_NULL);	  PopStack();    	non-compiled	[CE]  cannot  find  symbol  VALUE_NULL	60	None	replace
674	[BUG]  [BUGGY]  PopStack().push(JsonToken.FIELD_NAME);  [CE]  cannot  find  symbol  FIELD_NAME  [FE]                      ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {      [BUGGY]  PopStack().push(JsonToken.FIELD_NAME);  [BUGGY]      pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	261	261	2	replace	PopStack().push(JsonToken.FIELD_NAME);	  PopStack();    	non-compiled	[CE]  cannot  find  symbol  FIELD_NAME	60	None	replace
675	[BUG]  [BUGGY]  _reportError( "Current  token( "+JsonToken.START+ ")not  a  value. ");  [CE]  cannot  find  symbol  START  [FE]                        ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {      [BUGGY]  _reportError( "Current  token( "+JsonToken.START+ ")not  a  value. ");  [BUGGY]      pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	261	261	2	replace	_reportError( "Current  token( "+JsonToken.START+ ")not  a  value. ");	  _reportError(   "Current    token(   "+JsonToken.START+   ")not    a    value   ");    	non-compiled	[CE]  cannot  find  symbol  START	129	None	replace
676	[BUG]  [BUGGY]  _reportError( "Current  token( "+JsonToken.START+ ")expected  a  value ");  [CE]  cannot  find  symbol  START  [FE]                          ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {      [BUGGY]  _reportError( "Current  token( "+JsonToken.START+ ")expected  a  value ");  [BUGGY]      pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	261	261	2	replace	_reportError( "Current  token( "+JsonToken.START+ ")expected  a  value ");	  _reportError(   "Current    token(   "+JsonToken.START+   ")not    a    value   ");    	non-compiled	[CE]  cannot  find  symbol  START	129	None	replace
677	[BUG]  [BUGGY]  _reportError( "Current  token( "+JsonToken.START+ ")is  not  a  value ");  [CE]  cannot  find  symbol  START  [FE]                            ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {      [BUGGY]  _reportError( "Current  token( "+JsonToken.START+ ")is  not  a  value ");  [BUGGY]      pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	261	261	2	replace	_reportError( "Current  token( "+JsonToken.START+ ")is  not  a  value ");	  _reportError(   "Current    token(   "+JsonToken.START+   ")not    a    value   ");    	non-compiled	[CE]  cannot  find  symbol  START	129	None	replace
678	[BUG]  [BUGGY]  _reportError( "Current  token( "+JsonToken.START+ ")was  expecting  a  value ");  [CE]  cannot  find  symbol  START  [FE]                              ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {      [BUGGY]  _reportError( "Current  token( "+JsonToken.START+ ")was  expecting  a  value ");  [BUGGY]      pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	261	261	2	replace	_reportError( "Current  token( "+JsonToken.START+ ")was  expecting  a  value ");	  _reportError(   "Current    token(   "+JsonToken.START+   ")not    a    value   ");    	non-compiled	[CE]  cannot  find  symbol  START	129	None	replace
679	[BUG]  [BUGGY]  JsonToken.VALUE_NULL  =  new  JsonToken(JsonToken.FIELD_NAME,  stackSize  -  1);  pathNames[stackSize  -  1]  =  null;  [CE]  cannot  find  symbol  VALUE_NULL  [FE]                ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {      [BUGGY]  JsonToken.VALUE_NULL  =  new  JsonToken(JsonToken.FIELD_NAME,  stackSize  -  1);  pathNames[stackSize  -  1]  =  null;  [BUGGY]      pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	261	261	2	replace	JsonToken.VALUE_NULL  =  new  JsonToken(JsonToken.FIELD_NAME,  stackSize  -  1);  pathNames[stackSize  -  1]  =  null;	  JsonToken.VALUE_NULL    =    new    JsonToken(JsonToken.FIELD_NAME);    pathNames[stackSize    -    1]    =    null;    	non-compiled	[CE]  cannot  find  symbol  VALUE_NULL	188	None	replace
680	[BUG]  [BUGGY]  JsonToken.VALUE_NULL  =  new  JsonToken(JsonToken.START_OBJECT);  pathNames[stackSize  -  1]  =  null;  [CE]  cannot  find  symbol  VALUE_NULL  [FE]                  ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {      [BUGGY]  JsonToken.VALUE_NULL  =  new  JsonToken(JsonToken.START_OBJECT);  pathNames[stackSize  -  1]  =  null;  [BUGGY]      pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	261	261	2	replace	JsonToken.VALUE_NULL  =  new  JsonToken(JsonToken.START_OBJECT);  pathNames[stackSize  -  1]  =  null;	  JsonToken.VALUE_NULL    =    new    JsonToken(JsonToken.FIELD_NAME);    pathNames[stackSize    -    1]    =    null;    	non-compiled	[CE]  cannot  find  symbol  VALUE_NULL	188	None	replace
681	[BUG]  [BUGGY]  JsonToken.VALUE_NULL  =  new  JsonToken(JsonToken.FIELD_NAME,  pathNames[stackSize  -  1]  =  null;  [CE]  ')'  expected  [FE]                    ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {      [BUGGY]  JsonToken.VALUE_NULL  =  new  JsonToken(JsonToken.FIELD_NAME,  pathNames[stackSize  -  1]  =  null;  [BUGGY]      pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	261	261	2	replace	JsonToken.VALUE_NULL  =  new  JsonToken(JsonToken.FIELD_NAME,  pathNames[stackSize  -  1]  =  null;	  JsonToken.VALUE_NULL    =    new    JsonToken(JsonToken.FIELD_NAME);    pathNames[stackSize    -    1]    =    null;    	non-compiled	[CE]  ')'  expected	188	None	replace
682	[BUG]  [BUGGY]  JsonToken.VALUE_NULL  =  new  JsonToken(JsonToken.FIELD_NAME);  pathNames[stackSize  -  2]  =  null;  [CE]  cannot  find  symbol  VALUE_NULL  [FE]                      ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {      [BUGGY]  JsonToken.VALUE_NULL  =  new  JsonToken(JsonToken.FIELD_NAME);  pathNames[stackSize  -  2]  =  null;  [BUGGY]      pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	261	261	2	replace	JsonToken.VALUE_NULL  =  new  JsonToken(JsonToken.FIELD_NAME);  pathNames[stackSize  -  2]  =  null;	  JsonToken.VALUE_NULL    =    new    JsonToken(JsonToken.FIELD_NAME);    pathNames[stackSize    -    1]    =    null;    	non-compiled	[CE]  cannot  find  symbol  VALUE_NULL	188	None	replace
683	[BUG]  [BUGGY]  JsonToken.VALUE_NULL  =  new  JsonToken(JsonToken.FIELD_NAME,  stackNames[stackSize  -  1]);  [CE]  cannot  find  symbol  VALUE_NULL  [FE]                        ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {      [BUGGY]  JsonToken.VALUE_NULL  =  new  JsonToken(JsonToken.FIELD_NAME,  stackNames[stackSize  -  1]);  [BUGGY]      pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	261	261	2	replace	JsonToken.VALUE_NULL  =  new  JsonToken(JsonToken.FIELD_NAME,  stackNames[stackSize  -  1]);	  JsonToken.VALUE_NULL    =    new    JsonToken(JsonToken.FIELD_NAME);    pathNames[stackSize    -    1]    =    null;    	non-compiled	[CE]  cannot  find  symbol  VALUE_NULL	188	None	replace
684	[BUG]  [BUGGY]  JsonToken.VALUE_NULL  =  new  JsonToken(JsonToken.FIELD_NAME,  pathNames[stackSize  -  1]);  [CE]  cannot  find  symbol  VALUE_NULL  [FE]                          ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {      [BUGGY]  JsonToken.VALUE_NULL  =  new  JsonToken(JsonToken.FIELD_NAME,  pathNames[stackSize  -  1]);  [BUGGY]      pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	261	261	2	replace	JsonToken.VALUE_NULL  =  new  JsonToken(JsonToken.FIELD_NAME,  pathNames[stackSize  -  1]);	  JsonToken.VALUE_NULL    =    new    JsonToken(JsonToken.FIELD_NAME);    pathNames[stackSize    -    1]    =    null;    	non-compiled	[CE]  cannot  find  symbol  VALUE_NULL	188	None	replace
685	[BUG]  [BUGGY]  JsonToken  t  =  _createJsonToken(JsonToken.START_OBJECT,  JsonToken.END_OBJECT);  [CE]  cannot  find  symbol  START_OBJECT  [FE]                ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {      [BUGGY]  JsonToken  t  =  _createJsonToken(JsonToken.START_OBJECT,  JsonToken.END_OBJECT);  [BUGGY]      pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	261	261	2	replace	JsonToken  t  =  _createJsonToken(JsonToken.START_OBJECT,  JsonToken.END_OBJECT);	  JsonToken    t    =    _createJsonToken(JsonToken.START_OBJECT);    	non-compiled	[CE]  cannot  find  symbol  START_OBJECT	123	None	replace
686	[BUG]  [BUGGY]  JsonToken  t  =  _createJsonToken(JsonToken.START_OBJECT,  JsonToken.START_ARRAY);  [CE]  cannot  find  symbol  START_OBJECT  [FE]                  ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {      [BUGGY]  JsonToken  t  =  _createJsonToken(JsonToken.START_OBJECT,  JsonToken.START_ARRAY);  [BUGGY]      pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	261	261	2	replace	JsonToken  t  =  _createJsonToken(JsonToken.START_OBJECT,  JsonToken.START_ARRAY);	  JsonToken    t    =    _createJsonToken(JsonToken.START_OBJECT);    	non-compiled	[CE]  cannot  find  symbol  START_OBJECT	123	None	replace
687	[BUG]  [BUGGY]  JsonToken  t  =  _createJsonToken(JsonToken.START_OBJECT,  pathNames);  [CE]  cannot  find  symbol  START_OBJECT  [FE]                    ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {      [BUGGY]  JsonToken  t  =  _createJsonToken(JsonToken.START_OBJECT,  pathNames);  [BUGGY]      pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	261	261	2	replace	JsonToken  t  =  _createJsonToken(JsonToken.START_OBJECT,  pathNames);	  JsonToken    t    =    _createJsonToken(JsonToken.START_OBJECT);    	non-compiled	[CE]  cannot  find  symbol  START_OBJECT	123	None	replace
688	[BUG]  [BUGGY]  JsonToken  t  =  _createJsonToken(JsonToken.START_OBJECT,  JsonToken.FIELD_NAME);  [CE]  cannot  find  symbol  START_OBJECT  [FE]                      ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {      [BUGGY]  JsonToken  t  =  _createJsonToken(JsonToken.START_OBJECT,  JsonToken.FIELD_NAME);  [BUGGY]      pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	261	261	2	replace	JsonToken  t  =  _createJsonToken(JsonToken.START_OBJECT,  JsonToken.FIELD_NAME);	  JsonToken    t    =    _createJsonToken(JsonToken.START_OBJECT);    	non-compiled	[CE]  cannot  find  symbol  START_OBJECT	123	None	replace
689	[BUG]  [BUGGY]  JsonToken  t  =  _createJsonToken(JsonToken.START_OBJECT,  JsonToken.START_NAME);  [CE]  cannot  find  symbol  START_OBJECT  [FE]                        ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {      [BUGGY]  JsonToken  t  =  _createJsonToken(JsonToken.START_OBJECT,  JsonToken.START_NAME);  [BUGGY]      pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	261	261	2	replace	JsonToken  t  =  _createJsonToken(JsonToken.START_OBJECT,  JsonToken.START_NAME);	  JsonToken    t    =    _createJsonToken(JsonToken.START_OBJECT);    	non-compiled	[CE]  cannot  find  symbol  START_OBJECT	123	None	replace
690	[BUG]  [BUGGY]  JsonToken  t  =  _createJsonToken(JsonToken.START_OBJECT,  nextName());  [CE]  cannot  find  symbol  START_OBJECT  [FE]                          ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {      [BUGGY]  JsonToken  t  =  _createJsonToken(JsonToken.START_OBJECT,  nextName());  [BUGGY]      pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	261	261	2	replace	JsonToken  t  =  _createJsonToken(JsonToken.START_OBJECT,  nextName());	  JsonToken    t    =    _createJsonToken(JsonToken.START_OBJECT);    	non-compiled	[CE]  cannot  find  symbol  START_OBJECT	123	None	replace
691	[BUG]  [BUGGY]  _reportError( "Current  token( "+getClass().getName()  + ")not  a  value ", "JsonToken.END_OBJECT);  [CE]  unclosed  string  literal  [FE]                ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {      [BUGGY]  _reportError( "Current  token( "+getClass().getName()  + ")not  a  value ", "JsonToken.END_OBJECT);  [BUGGY]      pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	261	261	2	replace	_reportError( "Current  token( "+getClass().getName()  + ")not  a  value ", "JsonToken.END_OBJECT);	  _reportError(   "Current    token(   "+getClass().getName()    +   ")not    a    value   ",    JsonToken.END_OBJECT);    	non-compiled	[CE]  unclosed  string  literal	26	None	replace
692	[BUG]  [BUGGY]  _reportError( "Current  token( "+getClass().getName()  + ")Not  a  value. ");  [CE]  cannot  find  symbol  [FE]                  ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {      [BUGGY]  _reportError( "Current  token( "+getClass().getName()  + ")Not  a  value. ");  [BUGGY]      pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	261	261	2	replace	_reportError( "Current  token( "+getClass().getName()  + ")Not  a  value. ");	  _reportError(   "Current    token(   "+getClass().getName()    +   ")Not    a    value   ");    	non-compiled	[CE]  cannot  find  symbol	27	None	replace
693	[BUG]  [BUGGY]  _reportError( "Current  token( "+getClass().getName()  + ")Not  a  value ",  JsonToken.VALUE_NULL);  [CE]  cannot  find  symbol  VALUE_NULL  [FE]                    ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {      [BUGGY]  _reportError( "Current  token( "+getClass().getName()  + ")Not  a  value ",  JsonToken.VALUE_NULL);  [BUGGY]      pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	261	261	2	replace	_reportError( "Current  token( "+getClass().getName()  + ")Not  a  value ",  JsonToken.VALUE_NULL);	  _reportError(   "Current    token(   "+getClass().getName()    +   ")Not    a    value   ");    	non-compiled	[CE]  cannot  find  symbol  VALUE_NULL	27	None	replace
694	[BUG]  [BUGGY]  _reportError( "Current  token( "+getClass().getName()  + ")Not  a  value ",  JsonToken.END_OBJECT);  [CE]  cannot  find  symbol  [FE]                      ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {      [BUGGY]  _reportError( "Current  token( "+getClass().getName()  + ")Not  a  value ",  JsonToken.END_OBJECT);  [BUGGY]      pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	261	261	2	replace	_reportError( "Current  token( "+getClass().getName()  + ")Not  a  value ",  JsonToken.END_OBJECT);	  _reportError(   "Current    token(   "+getClass().getName()    +   ")Not    a    value   ");    	non-compiled	[CE]  cannot  find  symbol	27	None	replace
695	[BUG]  [BUGGY]  _reportError( "Current  token( "+getClass().getName()  + ")Not  a  value ",  JsonToken.FIELD_NAME);  [CE]  cannot  find  symbol  FIELD_NAME  [FE]                        ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {      [BUGGY]  _reportError( "Current  token( "+getClass().getName()  + ")Not  a  value ",  JsonToken.FIELD_NAME);  [BUGGY]      pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	261	261	2	replace	_reportError( "Current  token( "+getClass().getName()  + ")Not  a  value ",  JsonToken.FIELD_NAME);	  _reportError(   "Current    token(   "+getClass().getName()    +   ")Not    a    value   ");    	non-compiled	[CE]  cannot  find  symbol  FIELD_NAME	27	None	replace
696	[BUG]  [BUGGY]  lastName();  pathNames[stackSize  -  1]  =  null;  [CE]  cannot  find  symbol  [FE]                              ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {      [BUGGY]  lastName();  pathNames[stackSize  -  1]  =  null;  [BUGGY]      pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	261	261	2	replace	lastName();  pathNames[stackSize  -  1]  =  null;	  if(stackSize    >    0)    {    popStack();    }    else    {    JsonToken.START_OBJECT    =    null;    lastName();    pathNames[stackSize    -    1]    =    null;    }    	non-compiled	[CE]  cannot  find  symbol	142	None	replace
697	[BUG]  [BUGGY]  if(stackSize  >  0)  {  popStack();  }  else  {  JsonToken  START_OBJECT  =  null;  lastName();  pathNames[stackSize  -  1]  =  null;  }  [CE]  cannot  find  symbol  [FE]                                ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {      [BUGGY]  if(stackSize  >  0)  {  popStack();  }  else  {  JsonToken  START_OBJECT  =  null;  lastName();  pathNames[stackSize  -  1]  =  null;  }  [BUGGY]      pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	261	261	2	replace	if(stackSize  >  0)  {  popStack();  }  else  {  JsonToken  START_OBJECT  =  null;  lastName();  pathNames[stackSize  -  1]  =  null;  }	  if(stackSize    >    0)    {    popStack();    }    else    {    JsonToken.START_OBJECT    =    null;    lastName();    pathNames[stackSize    -    1]    =    null;    }    	non-compiled	[CE]  cannot  find  symbol	142	None	replace
698	[BUG]  [BUGGY]  Arrays.sort(pathNames);  [CE]  cannot  find  symbol  Arrays  [FE]        ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {      [BUGGY]  Arrays.sort(pathNames);  [BUGGY]      pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	261	261	2	replace	Arrays.sort(pathNames);	  StackTrace();    	non-compiled	[CE]  cannot  find  symbol  Arrays	56	None	replace
699	[BUG]  [BUGGY]  StackTrace(this);  [CE]  cannot  find  symbol  [FE]          ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {      [BUGGY]  StackTrace(this);  [BUGGY]      pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	261	261	2	replace	StackTrace(this);	  StackTrace();    	non-compiled	[CE]  cannot  find  symbol	56	None	replace
700	[BUG]  [BUGGY]  StackTrace(this.nextName());  [CE]  cannot  find  symbol  [FE]            ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {      [BUGGY]  StackTrace(this.nextName());  [BUGGY]      pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	261	261	2	replace	StackTrace(this.nextName());	  StackTrace();    	non-compiled	[CE]  cannot  find  symbol	56	None	replace
701	[BUG]  [BUGGY]  StackTrace(this.result);  [CE]  cannot  find  symbol  result  [FE]              ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {      [BUGGY]  StackTrace(this.result);  [BUGGY]      pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	261	261	2	replace	StackTrace(this.result);	  StackTrace();    	non-compiled	[CE]  cannot  find  symbol  result	56	None	replace
702	[BUG]  [BUGGY]  StackTrace(this.stack);  [CE]  cannot  find  symbol  [FE]                ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {      [BUGGY]  StackTrace(this.stack);  [BUGGY]      pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	261	261	2	replace	StackTrace(this.stack);	  StackTrace();    	non-compiled	[CE]  cannot  find  symbol	56	None	replace
703	[BUG]  [BUGGY]  StackTrace(this.pathNames);  [CE]  cannot  find  symbol  [FE]                  ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {      [BUGGY]  StackTrace(this.pathNames);  [BUGGY]      pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	261	261	2	replace	StackTrace(this.pathNames);	  StackTrace();    	non-compiled	[CE]  cannot  find  symbol	56	None	replace
704	[BUG]  [BUGGY]  connectToPeek(JsonToken.VALUE_NUMBER_INT,  JsonToken.VALUE_NUMBER_FLOAT));  [CE]  ';'  expected  [FE]                              ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {      [BUGGY]  connectToPeek(JsonToken.VALUE_NUMBER_INT,  JsonToken.VALUE_NUMBER_FLOAT));  [BUGGY]      pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	261	261	2	replace	connectToPeek(JsonToken.VALUE_NUMBER_INT,  JsonToken.VALUE_NUMBER_FLOAT));	  connectToPeek(JsonToken.VALUE_NUMBER_INT,    JsonToken.VALUE_NUMBER_INT));    	non-compiled	[CE]  ';'  expected	219	None	replace
705	[BUG]  [BUGGY]  connectToPeek(JsonToken.VALUE_NUMBER_INT,  JsonToken.VALUE_NUMBER_FIELD_NAME));  [CE]  ';'  expected  [FE]                                ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {      [BUGGY]  connectToPeek(JsonToken.VALUE_NUMBER_INT,  JsonToken.VALUE_NUMBER_FIELD_NAME));  [BUGGY]      pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	261	261	2	replace	connectToPeek(JsonToken.VALUE_NUMBER_INT,  JsonToken.VALUE_NUMBER_FIELD_NAME));	  connectToPeek(JsonToken.VALUE_NUMBER_INT,    JsonToken.VALUE_NUMBER_INT));    	non-compiled	[CE]  ';'  expected	219	None	replace
706	[BUG]  [BUGGY]  connectToPeek(JsonToken.VALUE_NUMBER_INT,  JsonToken.START_OBJECT));  [CE]  ';'  expected  [FE]                                  ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {      [BUGGY]  connectToPeek(JsonToken.VALUE_NUMBER_INT,  JsonToken.START_OBJECT));  [BUGGY]      pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	261	261	2	replace	connectToPeek(JsonToken.VALUE_NUMBER_INT,  JsonToken.START_OBJECT));	  connectToPeek(JsonToken.VALUE_NUMBER_INT,    JsonToken.VALUE_NUMBER_INT));    	non-compiled	[CE]  ';'  expected	219	None	replace
707	[BUG]  [BUGGY]  connectToPeek(JsonToken.VALUE_NUMBER_INT,  JsonToken.VALUE_NUMBER_LONG));  [CE]  ';'  expected  [FE]                                    ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {      [BUGGY]  connectToPeek(JsonToken.VALUE_NUMBER_INT,  JsonToken.VALUE_NUMBER_LONG));  [BUGGY]      pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	261	261	2	replace	connectToPeek(JsonToken.VALUE_NUMBER_INT,  JsonToken.VALUE_NUMBER_LONG));	  connectToPeek(JsonToken.VALUE_NUMBER_INT,    JsonToken.VALUE_NUMBER_INT));    	non-compiled	[CE]  ';'  expected	219	None	replace
708	[BUG]  [BUGGY]  connectToPeek(JsonToken.VALUE_NUMBER_INT,  JsonToken.END_OBJECT));  [CE]  ';'  expected  [FE]                                      ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {      [BUGGY]  connectToPeek(JsonToken.VALUE_NUMBER_INT,  JsonToken.END_OBJECT));  [BUGGY]      pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	261	261	2	replace	connectToPeek(JsonToken.VALUE_NUMBER_INT,  JsonToken.END_OBJECT));	  connectToPeek(JsonToken.VALUE_NUMBER_INT,    JsonToken.VALUE_NUMBER_INT));    	non-compiled	[CE]  ';'  expected	219	None	replace
709	[BUG]  [BUGGY]  connectToPeek(JsonToken.VALUE_NUMBER_INT,  JsonToken.VALUE_NUMBER_LENGTH));  [CE]  ';'  expected  [FE]                                        ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {      [BUGGY]  connectToPeek(JsonToken.VALUE_NUMBER_INT,  JsonToken.VALUE_NUMBER_LENGTH));  [BUGGY]      pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	261	261	2	replace	connectToPeek(JsonToken.VALUE_NUMBER_INT,  JsonToken.VALUE_NUMBER_LENGTH));	  connectToPeek(JsonToken.VALUE_NUMBER_INT,    JsonToken.VALUE_NUMBER_INT));    	non-compiled	[CE]  ';'  expected	219	None	replace
710	[BUG]  [BUGGY]  connectToPeek(JsonToken.VALUE_NUMBER_INT,  JsonToken.VALUE_NUMBER_CLOSED));  [CE]  ';'  expected  [FE]                                          ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {      [BUGGY]  connectToPeek(JsonToken.VALUE_NUMBER_INT,  JsonToken.VALUE_NUMBER_CLOSED));  [BUGGY]      pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	261	261	2	replace	connectToPeek(JsonToken.VALUE_NUMBER_INT,  JsonToken.VALUE_NUMBER_CLOSED));	  connectToPeek(JsonToken.VALUE_NUMBER_INT,    JsonToken.VALUE_NUMBER_INT));    	non-compiled	[CE]  ';'  expected	219	None	replace
711	[BUG]  [BUGGY]  connectToPossibleExceptionHandler(nextName(),  JsonToken.NAME);  [CE]  cannot  find  symbol  [FE]                        ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {      [BUGGY]  connectToPossibleExceptionHandler(nextName(),  JsonToken.NAME);  [BUGGY]      pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	261	261	2	replace	connectToPossibleExceptionHandler(nextName(),  JsonToken.NAME);	  connectToPossibleExceptionHandler(nextName());    	non-compiled	[CE]  cannot  find  symbol	53	None	replace
712	[BUG]  [BUGGY]  connectToPossibleExceptionHandler(nextName(),  JsonToken.END_OBJECT);  [CE]  cannot  find  symbol  [FE]                          ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {      [BUGGY]  connectToPossibleExceptionHandler(nextName(),  JsonToken.END_OBJECT);  [BUGGY]      pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	261	261	2	replace	connectToPossibleExceptionHandler(nextName(),  JsonToken.END_OBJECT);	  connectToPossibleExceptionHandler(nextName());    	non-compiled	[CE]  cannot  find  symbol	53	None	replace
713	[BUG]  [BUGGY]  connectToPossibleExceptionHandler(nextName(),  nextValue());  [CE]  cannot  find  symbol  [FE]                            ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {      [BUGGY]  connectToPossibleExceptionHandler(nextName(),  nextValue());  [BUGGY]      pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	261	261	2	replace	connectToPossibleExceptionHandler(nextName(),  nextValue());	  connectToPossibleExceptionHandler(nextName());    	non-compiled	[CE]  cannot  find  symbol	53	None	replace
714	[BUG]  [BUGGY]  connectToPossibleExceptionHandler(nextName(),  JsonToken.START_OBJECT);  [CE]  cannot  find  symbol  START_OBJECT  [FE]                              ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {      [BUGGY]  connectToPossibleExceptionHandler(nextName(),  JsonToken.START_OBJECT);  [BUGGY]      pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	261	261	2	replace	connectToPossibleExceptionHandler(nextName(),  JsonToken.START_OBJECT);	  connectToPossibleExceptionHandler(nextName());    	non-compiled	[CE]  cannot  find  symbol  START_OBJECT	53	None	replace
715	[BUG]  [BUGGY]  connectToPossibleExceptionHandler(nextName()  +  1);  [CE]  cannot  find  symbol  [FE]                                ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {      [BUGGY]  connectToPossibleExceptionHandler(nextName()  +  1);  [BUGGY]      pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	261	261	2	replace	connectToPossibleExceptionHandler(nextName()  +  1);	  connectToPossibleExceptionHandler(nextName());    	non-compiled	[CE]  cannot  find  symbol	53	None	replace
716	[BUG]  [BUGGY]  _reportError( "Current  token( "+JsonToken.NAME+ ")not  a  value. ");  [CE]  cannot  find  symbol  [FE]                      ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {      [BUGGY]  _reportError( "Current  token( "+JsonToken.NAME+ ")not  a  value. ");  [BUGGY]      pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	261	261	2	replace	_reportError( "Current  token( "+JsonToken.NAME+ ")not  a  value. ");	  _reportError(   "Current    token(   "+JsonToken.NAME+   ")not    a    value   ");    	non-compiled	[CE]  cannot  find  symbol	128	None	replace
717	[BUG]  [BUGGY]  _reportError( "Current  token( "+JsonToken.NAME+ ")expected  a  value ");  [CE]  cannot  find  symbol  [FE]                        ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {      [BUGGY]  _reportError( "Current  token( "+JsonToken.NAME+ ")expected  a  value ");  [BUGGY]      pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	261	261	2	replace	_reportError( "Current  token( "+JsonToken.NAME+ ")expected  a  value ");	  _reportError(   "Current    token(   "+JsonToken.NAME+   ")not    a    value   ");    	non-compiled	[CE]  cannot  find  symbol	128	None	replace
718	[BUG]  [BUGGY]  _reportError( "Current  token( "+JsonToken.NAME+ ")is  not  a  value ");  [CE]  cannot  find  symbol  [FE]                          ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {      [BUGGY]  _reportError( "Current  token( "+JsonToken.NAME+ ")is  not  a  value ");  [BUGGY]      pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	261	261	2	replace	_reportError( "Current  token( "+JsonToken.NAME+ ")is  not  a  value ");	  _reportError(   "Current    token(   "+JsonToken.NAME+   ")not    a    value   ");    	non-compiled	[CE]  cannot  find  symbol	128	None	replace
719	[BUG]  [BUGGY]  _reportError( "Current  token( "+JsonToken.NAME+ ")Not  a  value ");  [CE]  cannot  find  symbol  [FE]                            ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {      [BUGGY]  _reportError( "Current  token( "+JsonToken.NAME+ ")Not  a  value ");  [BUGGY]      pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	261	261	2	replace	_reportError( "Current  token( "+JsonToken.NAME+ ")Not  a  value ");	  _reportError(   "Current    token(   "+JsonToken.NAME+   ")not    a    value   ");    	non-compiled	[CE]  cannot  find  symbol	128	None	replace
720	[BUG]  [BUGGY]  _reportError( "Current  token( "+JsonToken.NAME+ ")not  a  value ",  JsonToken.END_OBJECT);  [CE]  cannot  find  symbol  [FE]                              ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {      [BUGGY]  _reportError( "Current  token( "+JsonToken.NAME+ ")not  a  value ",  JsonToken.END_OBJECT);  [BUGGY]      pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	261	261	2	replace	_reportError( "Current  token( "+JsonToken.NAME+ ")not  a  value ",  JsonToken.END_OBJECT);	  _reportError(   "Current    token(   "+JsonToken.NAME+   ")not    a    value   ");    	non-compiled	[CE]  cannot  find  symbol	128	None	replace
721	[BUG]  [BUGGY]  _reportError( "Current  token( "+getMessage()  + ")not  a  value. ",  JsonToken.VALUE_NULL);  [CE]  cannot  find  symbol  [FE]                  ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {      [BUGGY]  _reportError( "Current  token( "+getMessage()  + ")not  a  value. ",  JsonToken.VALUE_NULL);  [BUGGY]      pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	261	261	2	replace	_reportError( "Current  token( "+getMessage()  + ")not  a  value. ",  JsonToken.VALUE_NULL);	  _reportError(   "Current    token(   "+getMessage()    +   ")not    a    value   ",    JsonToken.VALUE_NULL);    	non-compiled	[CE]  cannot  find  symbol	30	None	replace
722	[BUG]  [BUGGY]  handleMissingName(JsonToken.NAME);  [CE]  cannot  find  symbol  [FE]                      ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {      [BUGGY]  handleMissingName(JsonToken.NAME);  [BUGGY]      pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	261	261	2	replace	handleMissingName(JsonToken.NAME);	  handleMissingName();    	non-compiled	[CE]  cannot  find  symbol	67	None	replace
723	[BUG]  [BUGGY]  handleMissingName(),  JsonToken.VALUE_NULL);  [CE]  ';'  expected  [FE]                        ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {      [BUGGY]  handleMissingName(),  JsonToken.VALUE_NULL);  [BUGGY]      pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	261	261	2	replace	handleMissingName(),  JsonToken.VALUE_NULL);	  handleMissingName();    	non-compiled	[CE]  ';'  expected	67	None	replace
724	[BUG]  [BUGGY]  handleMissingName(),  JsonToken.START_OBJECT);  [CE]  ';'  expected  [FE]                          ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {      [BUGGY]  handleMissingName(),  JsonToken.START_OBJECT);  [BUGGY]      pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	261	261	2	replace	handleMissingName(),  JsonToken.START_OBJECT);	  handleMissingName();    	non-compiled	[CE]  ';'  expected	67	None	replace
725	[BUG]  [BUGGY]  handleMissingName(JsonToken.VALUE_NUMBER_INT);  [CE]  cannot  find  symbol  VALUE_NUMBER_INT  [FE]                            ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {      [BUGGY]  handleMissingName(JsonToken.VALUE_NUMBER_INT);  [BUGGY]      pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	261	261	2	replace	handleMissingName(JsonToken.VALUE_NUMBER_INT);	  handleMissingName();    	non-compiled	[CE]  cannot  find  symbol  VALUE_NUMBER_INT	67	None	replace
726	[BUG]  [BUGGY]  handleMissingName(JsonToken.VALUE_NULL);  [CE]  cannot  find  symbol  VALUE_NULL  [FE]                              ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {      [BUGGY]  handleMissingName(JsonToken.VALUE_NULL);  [BUGGY]      pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	261	261	2	replace	handleMissingName(JsonToken.VALUE_NULL);	  handleMissingName();    	non-compiled	[CE]  cannot  find  symbol  VALUE_NULL	67	None	replace
727	[BUG]  [BUGGY]  connectToPossibleExceptionHandler(JsonToken.VALUE_EMBEDDED_ARRAY);  [CE]  cannot  find  symbol  VALUE_EMBEDDED_ARRAY  [FE]            ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {      [BUGGY]  connectToPossibleExceptionHandler(JsonToken.VALUE_EMBEDDED_ARRAY);  [BUGGY]      pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	261	261	2	replace	connectToPossibleExceptionHandler(JsonToken.VALUE_EMBEDDED_ARRAY);	  connectToPossibleExceptionHandler(JsonToken.VALUE_EMBEDDED_OBJECT);    	non-compiled	[CE]  cannot  find  symbol  VALUE_EMBEDDED_ARRAY	182	None	replace
728	[BUG]  [BUGGY]  connectToPossibleExceptionHandler(JsonToken.VALUE_EMBEDDED_OBJECT,  null);  [CE]  cannot  find  symbol  VALUE_EMBEDDED_OBJECT  [FE]              ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {      [BUGGY]  connectToPossibleExceptionHandler(JsonToken.VALUE_EMBEDDED_OBJECT,  null);  [BUGGY]      pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	261	261	2	replace	connectToPossibleExceptionHandler(JsonToken.VALUE_EMBEDDED_OBJECT,  null);	  connectToPossibleExceptionHandler(JsonToken.VALUE_EMBEDDED_OBJECT);    	non-compiled	[CE]  cannot  find  symbol  VALUE_EMBEDDED_OBJECT	182	None	replace
729	[BUG]  [BUGGY]  connectToPossibleExceptionHandler(JsonToken.VALUE_EMBEDDED_OBJECT,  pathNames);  [CE]  cannot  find  symbol  VALUE_EMBEDDED_OBJECT  [FE]                ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {      [BUGGY]  connectToPossibleExceptionHandler(JsonToken.VALUE_EMBEDDED_OBJECT,  pathNames);  [BUGGY]      pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	261	261	2	replace	connectToPossibleExceptionHandler(JsonToken.VALUE_EMBEDDED_OBJECT,  pathNames);	  connectToPossibleExceptionHandler(JsonToken.VALUE_EMBEDDED_OBJECT);    	non-compiled	[CE]  cannot  find  symbol  VALUE_EMBEDDED_OBJECT	182	None	replace
730	[BUG]  [BUGGY]  connectToPossibleExceptionHandler(JsonToken.VALUE_EMBEDDED_ERROR);  [CE]  cannot  find  symbol  VALUE_EMBEDDED_ERROR  [FE]                  ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {      [BUGGY]  connectToPossibleExceptionHandler(JsonToken.VALUE_EMBEDDED_ERROR);  [BUGGY]      pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	261	261	2	replace	connectToPossibleExceptionHandler(JsonToken.VALUE_EMBEDDED_ERROR);	  connectToPossibleExceptionHandler(JsonToken.VALUE_EMBEDDED_OBJECT);    	non-compiled	[CE]  cannot  find  symbol  VALUE_EMBEDDED_ERROR	182	None	replace
731	[BUG]  [BUGGY]  [FE]  IllegalArgumentException  [FE]    IllegalArgumentException    [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {      [BUGGY]  if(stackSize    >    0)    {    popStack();    }    else    {    throw    new    IllegalArgumentException(     "     ");    }    if(stackSize  >  0)  {  popStack();  }  else  {  throw  new  IllegalArgumentException(   ".   ");  }  if(stackSize  >  0)  {  popStack();  }  else  {  throw  new  IllegalArgumentException( ".   ");  }  [BUGGY]      pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	261	261	2	add	if(stackSize        >        0)        {        popStack();        }        else        {        throw        new        IllegalArgumentException(       "       ");        }        if(stackSize    >    0)    {    popStack();    }    else    {    throw    new    IllegalArgumentException(   ".   ");    }    if(stackSize  >  0)  {  popStack();  }  else  {  throw  new  IllegalArgumentException( ".   ");  }	  	compilable	  [FE]  IllegalArgumentException  	13	2	add
732	[BUG]  [BUGGY]  if(stackSize    >    0)    {    popStack();    }    else    {    throw    new    IllegalArgumentException(     "     ");    }    if(stackSize  >  0)  {  popStack();  }  else  {  throw  new  IllegalArgumentException(   ".   ");  }  if(stackSize  >  0)  {  popStack();  }  else  {  throw  new  IllegalArgumentException( ".   ");  }  [FE]  IllegalArgumentException  [FE]    IllegalArgumentException    [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {      [BUGGY]  if(stackSize    >    0)    {    popStack();    }    else    {    throw    new    IllegalArgumentException(     "     ");    }    if(stackSize  >  0)  {  popStack();  }  else  {  throw  new  IllegalArgumentException(   ".   ");  }  if(stackSize  >  0)  {  popStack();  }  else  {  throw  new  IllegalArgumentException( ".   ");  }  [BUGGY]      pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	261	261	2	replace	if(stackSize        >        0)        {        popStack();        }        else        {        throw        new        IllegalArgumentException(       "       ");        }        if(stackSize    >    0)    {    popStack();    }    else    {    throw    new    IllegalArgumentException(   ".   ");    }    if(stackSize  >  0)  {  popStack();  }  else  {  throw  new  IllegalArgumentException( ".   ");  }	  	compilable	  [FE]  IllegalArgumentException  	13	2	add
733	[BUG]  [BUGGY]  [FE]  IllegalArgumentException  [FE]      IllegalArgumentException    [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {      [BUGGY]  if(stackSize    >    0)    {    popStack();    }    else    {    throw    new    IllegalArgumentException(     "     ");    }    if(stackSize  >  0)  {  popStack();  }  else  {  throw  new  IllegalArgumentException(   ".   ");  }  if(stackSize  >  0)  {  popStack();  }  else  {  throw  new  IllegalArgumentException( "   ");  }  [BUGGY]      pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	261	261	2	add	if(stackSize        >        0)        {        popStack();        }        else        {        throw        new        IllegalArgumentException(       "       ");        }        if(stackSize    >    0)    {    popStack();    }    else    {    throw    new    IllegalArgumentException(   ".   ");    }    if(stackSize  >  0)  {  popStack();  }  else  {  throw  new  IllegalArgumentException( "   ");  }	  	compilable	  [FE]  IllegalArgumentException  	13	2	add
734	[BUG]  [BUGGY]  if(stackSize    >    0)    {    popStack();    }    else    {    throw    new    IllegalArgumentException(     "     ");    }    if(stackSize  >  0)  {  popStack();  }  else  {  throw  new  IllegalArgumentException(   ".   ");  }  if(stackSize  >  0)  {  popStack();  }  else  {  throw  new  IllegalArgumentException( "   ");  }  [FE]  IllegalArgumentException  [FE]      IllegalArgumentException    [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {      [BUGGY]  if(stackSize    >    0)    {    popStack();    }    else    {    throw    new    IllegalArgumentException(     "     ");    }    if(stackSize  >  0)  {  popStack();  }  else  {  throw  new  IllegalArgumentException(   ".   ");  }  if(stackSize  >  0)  {  popStack();  }  else  {  throw  new  IllegalArgumentException( "   ");  }  [BUGGY]      pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	261	261	2	replace	if(stackSize        >        0)        {        popStack();        }        else        {        throw        new        IllegalArgumentException(       "       ");        }        if(stackSize    >    0)    {    popStack();    }    else    {    throw    new    IllegalArgumentException(   ".   ");    }    if(stackSize  >  0)  {  popStack();  }  else  {  throw  new  IllegalArgumentException( "   ");  }	  	compilable	  [FE]  IllegalArgumentException  	13	2	add
735	[BUG]  [BUGGY]  if(stackSize    >    0)    {    popStack();    }    else    {    throw    new    IllegalArgumentException(     "     ");    }    if(stackSize  >  0)  {  popStack();  }  else  {  throw  new  IllegalArgumentException(   ".   ");  }  if(stackSize  >  0)  {  popStack();  }  else  {  throw  new  IllegalArgumentException( " ".   ");  }  [CE]  unclosed  string  literal  [FE]        IllegalArgumentException    [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {      [BUGGY]  if(stackSize    >    0)    {    popStack();    }    else    {    throw    new    IllegalArgumentException(     "     ");    }    if(stackSize  >  0)  {  popStack();  }  else  {  throw  new  IllegalArgumentException(   ".   ");  }  if(stackSize  >  0)  {  popStack();  }  else  {  throw  new  IllegalArgumentException( " ".   ");  }  [BUGGY]      pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	261	261	2	replace	if(stackSize        >        0)        {        popStack();        }        else        {        throw        new        IllegalArgumentException(       "       ");        }        if(stackSize    >    0)    {    popStack();    }    else    {    throw    new    IllegalArgumentException(   ".   ");    }    if(stackSize  >  0)  {  popStack();  }  else  {  throw  new  IllegalArgumentException( " ".   ");  }	  	non-compiled	[CE]  unclosed  string  literal	13	None	add
736	[BUG]  [BUGGY]  [FE]  IllegalArgumentException  [FE]          IllegalArgumentException    [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {      [BUGGY]  if(stackSize    >    0)    {    popStack();    }    else    {    throw    new    IllegalArgumentException(     "     ");    }    if(stackSize  >  0)  {  popStack();  }  else  {  throw  new  IllegalArgumentException(   ".   ");  }  if(stackSize  >  0)  {  popStack();  }  else  {  throw  new  IllegalArgumentException( "... ");  }  [BUGGY]      pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	261	261	2	add	if(stackSize        >        0)        {        popStack();        }        else        {        throw        new        IllegalArgumentException(       "       ");        }        if(stackSize    >    0)    {    popStack();    }    else    {    throw    new    IllegalArgumentException(   ".   ");    }    if(stackSize  >  0)  {  popStack();  }  else  {  throw  new  IllegalArgumentException( "... ");  }	  	compilable	  [FE]  IllegalArgumentException  	13	2	add
737	[BUG]  [BUGGY]  if(stackSize    >    0)    {    popStack();    }    else    {    throw    new    IllegalArgumentException(     "     ");    }    if(stackSize  >  0)  {  popStack();  }  else  {  throw  new  IllegalArgumentException(   ".   ");  }  if(stackSize  >  0)  {  popStack();  }  else  {  throw  new  IllegalArgumentException( "... ");  }  [FE]  IllegalArgumentException  [FE]          IllegalArgumentException    [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {      [BUGGY]  if(stackSize    >    0)    {    popStack();    }    else    {    throw    new    IllegalArgumentException(     "     ");    }    if(stackSize  >  0)  {  popStack();  }  else  {  throw  new  IllegalArgumentException(   ".   ");  }  if(stackSize  >  0)  {  popStack();  }  else  {  throw  new  IllegalArgumentException( "... ");  }  [BUGGY]      pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	261	261	2	replace	if(stackSize        >        0)        {        popStack();        }        else        {        throw        new        IllegalArgumentException(       "       ");        }        if(stackSize    >    0)    {    popStack();    }    else    {    throw    new    IllegalArgumentException(   ".   ");    }    if(stackSize  >  0)  {  popStack();  }  else  {  throw  new  IllegalArgumentException( "... ");  }	  	compilable	  [FE]  IllegalArgumentException  	13	2	add
738	[BUG]  [BUGGY]  [FE]  IllegalArgumentException  [FE]            IllegalArgumentException    [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {      [BUGGY]  if(stackSize    >    0)    {    popStack();    }    else    {    throw    new    IllegalArgumentException(     "     ");    }    if(stackSize  >  0)  {  popStack();  }  else  {  throw  new  IllegalArgumentException(   ".   ");  }  if(stackSize  >  0)  {  popStack();  }  else  {  throw  new  IllegalArgumentException( "null ");  }  [BUGGY]      pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	261	261	2	add	if(stackSize        >        0)        {        popStack();        }        else        {        throw        new        IllegalArgumentException(       "       ");        }        if(stackSize    >    0)    {    popStack();    }    else    {    throw    new    IllegalArgumentException(   ".   ");    }    if(stackSize  >  0)  {  popStack();  }  else  {  throw  new  IllegalArgumentException( "null ");  }	  	compilable	  [FE]  IllegalArgumentException  	13	2	add
739	[BUG]  [BUGGY]  if(stackSize    >    0)    {    popStack();    }    else    {    throw    new    IllegalArgumentException(     "     ");    }    if(stackSize  >  0)  {  popStack();  }  else  {  throw  new  IllegalArgumentException(   ".   ");  }  if(stackSize  >  0)  {  popStack();  }  else  {  throw  new  IllegalArgumentException( "null ");  }  [FE]  IllegalArgumentException  [FE]            IllegalArgumentException    [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {      [BUGGY]  if(stackSize    >    0)    {    popStack();    }    else    {    throw    new    IllegalArgumentException(     "     ");    }    if(stackSize  >  0)  {  popStack();  }  else  {  throw  new  IllegalArgumentException(   ".   ");  }  if(stackSize  >  0)  {  popStack();  }  else  {  throw  new  IllegalArgumentException( "null ");  }  [BUGGY]      pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	261	261	2	replace	if(stackSize        >        0)        {        popStack();        }        else        {        throw        new        IllegalArgumentException(       "       ");        }        if(stackSize    >    0)    {    popStack();    }    else    {    throw    new    IllegalArgumentException(   ".   ");    }    if(stackSize  >  0)  {  popStack();  }  else  {  throw  new  IllegalArgumentException( "null ");  }	  	compilable	  [FE]  IllegalArgumentException  	13	2	add
740	[BUG]  [BUGGY]  connectToPossibleExceptionHandler(JsonToken.EXPR_RESULT,  pathNames);  [CE]  cannot  find  symbol  EXPR_RESULT  [FE]            ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {      [BUGGY]  connectToPossibleExceptionHandler(JsonToken.EXPR_RESULT,  pathNames);  [BUGGY]      pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	261	261	2	replace	connectToPossibleExceptionHandler(JsonToken.EXPR_RESULT,  pathNames);	  connectToPossibleExceptionHandler(JsonToken.EXPR_RESULT);    	non-compiled	[CE]  cannot  find  symbol  EXPR_RESULT	1	None	replace
741	[BUG]  [BUGGY]  connectToPossibleExceptionHandler(JsonToken.EXPR_RESULT,  SENTINEL_CLOSED);  [CE]  cannot  find  symbol  EXPR_RESULT  [FE]              ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {      [BUGGY]  connectToPossibleExceptionHandler(JsonToken.EXPR_RESULT,  SENTINEL_CLOSED);  [BUGGY]      pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	261	261	2	replace	connectToPossibleExceptionHandler(JsonToken.EXPR_RESULT,  SENTINEL_CLOSED);	  connectToPossibleExceptionHandler(JsonToken.EXPR_RESULT);    	non-compiled	[CE]  cannot  find  symbol  EXPR_RESULT	1	None	replace
742	[BUG]  [BUGGY]  connectToPossibleExceptionHandler(JsonToken.EXPR_RESULT,  JsonToken.NAME);  [CE]  cannot  find  symbol  EXPR_RESULT  [FE]                ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {      [BUGGY]  connectToPossibleExceptionHandler(JsonToken.EXPR_RESULT,  JsonToken.NAME);  [BUGGY]      pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	261	261	2	replace	connectToPossibleExceptionHandler(JsonToken.EXPR_RESULT,  JsonToken.NAME);	  connectToPossibleExceptionHandler(JsonToken.EXPR_RESULT);    	non-compiled	[CE]  cannot  find  symbol  EXPR_RESULT	1	None	replace
743	[BUG]  [BUGGY]  connectToPossibleExceptionHandler(JsonToken.EXPR_RESULT,  null);  [CE]  cannot  find  symbol  EXPR_RESULT  [FE]                  ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {      [BUGGY]  connectToPossibleExceptionHandler(JsonToken.EXPR_RESULT,  null);  [BUGGY]      pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	261	261	2	replace	connectToPossibleExceptionHandler(JsonToken.EXPR_RESULT,  null);	  connectToPossibleExceptionHandler(JsonToken.EXPR_RESULT);    	non-compiled	[CE]  cannot  find  symbol  EXPR_RESULT	1	None	replace
744	[BUG]  [BUGGY]  connectToPossibleExceptionHandler(JsonToken.EXPR_RESULT,  JsonToken.START_OBJECT);  [CE]  cannot  find  symbol  EXPR_RESULT  [FE]                    ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {      [BUGGY]  connectToPossibleExceptionHandler(JsonToken.EXPR_RESULT,  JsonToken.START_OBJECT);  [BUGGY]      pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	261	261	2	replace	connectToPossibleExceptionHandler(JsonToken.EXPR_RESULT,  JsonToken.START_OBJECT);	  connectToPossibleExceptionHandler(JsonToken.EXPR_RESULT);    	non-compiled	[CE]  cannot  find  symbol  EXPR_RESULT	1	None	replace
745	[BUG]  [BUGGY]  connectToPossibleExceptionHandler(this,  result);  [CE]  cannot  find  symbol  result  [FE]                        ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {      [BUGGY]  connectToPossibleExceptionHandler(this,  result);  [BUGGY]      pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	261	261	2	replace	connectToPossibleExceptionHandler(this,  result);	  connectToPossibleExceptionHandler(this,    stackSize);    	non-compiled	[CE]  cannot  find  symbol  result	137	None	replace
746	[BUG]  [BUGGY]  connectToPossibleExceptionHandler(this,  count);  [CE]  cannot  find  symbol  count  [FE]                          ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {      [BUGGY]  connectToPossibleExceptionHandler(this,  count);  [BUGGY]      pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	261	261	2	replace	connectToPossibleExceptionHandler(this,  count);	  connectToPossibleExceptionHandler(this,    stackSize);    	non-compiled	[CE]  cannot  find  symbol  count	137	None	replace
747	[BUG]  [BUGGY]  connectToPossibleExceptionHandler(this,  offset,  stackSize);  [CE]  cannot  find  symbol  offset  [FE]                            ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {      [BUGGY]  connectToPossibleExceptionHandler(this,  offset,  stackSize);  [BUGGY]      pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	261	261	2	replace	connectToPossibleExceptionHandler(this,  offset,  stackSize);	  connectToPossibleExceptionHandler(this,    stackSize);    	non-compiled	[CE]  cannot  find  symbol  offset	137	None	replace
748	[BUG]  [BUGGY]  connectToPossibleExceptionHandler(this,  stackSize  -  1);  [CE]  cannot  find  symbol  [FE]                              ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {      [BUGGY]  connectToPossibleExceptionHandler(this,  stackSize  -  1);  [BUGGY]      pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	261	261	2	replace	connectToPossibleExceptionHandler(this,  stackSize  -  1);	  connectToPossibleExceptionHandler(this,    stackSize);    	non-compiled	[CE]  cannot  find  symbol	137	None	replace
749	[BUG]  [BUGGY]  connectToPossibleExceptionHandler(this,  skipValue);  [CE]  cannot  find  symbol  skipValue  [FE]                                ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {      [BUGGY]  connectToPossibleExceptionHandler(this,  skipValue);  [BUGGY]      pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	261	261	2	replace	connectToPossibleExceptionHandler(this,  skipValue);	  connectToPossibleExceptionHandler(this,    stackSize);    	non-compiled	[CE]  cannot  find  symbol  skipValue	137	None	replace
750	[BUG]  [BUGGY]  connectToPossibleExceptionHandler(this,  JsonToken.VALUE_NULL);  [CE]  cannot  find  symbol  VALUE_NULL  [FE]                                  ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {      [BUGGY]  connectToPossibleExceptionHandler(this,  JsonToken.VALUE_NULL);  [BUGGY]      pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	261	261	2	replace	connectToPossibleExceptionHandler(this,  JsonToken.VALUE_NULL);	  connectToPossibleExceptionHandler(this,    stackSize);    	non-compiled	[CE]  cannot  find  symbol  VALUE_NULL	137	None	replace
751	[BUG]  [BUGGY]  connectToPossibleExceptionHandler(this,  JsonToken.START_OBJECT);  [CE]  cannot  find  symbol  START_OBJECT  [FE]                                    ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {      [BUGGY]  connectToPossibleExceptionHandler(this,  JsonToken.START_OBJECT);  [BUGGY]      pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	261	261	2	replace	connectToPossibleExceptionHandler(this,  JsonToken.START_OBJECT);	  connectToPossibleExceptionHandler(this,    stackSize);    	non-compiled	[CE]  cannot  find  symbol  START_OBJECT	137	None	replace
752	[BUG]  [BUGGY]  [FE]  ArrayIndexOutOfBoundsException  [FE]    AssertionFailedError    [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {      [BUGGY]  pathNames[stackSize  -  1]  =  null;  pathNames[stackSize  -  1]  =  null;  [BUGGY]      pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	261	261	2	add	pathNames[stackSize    -    1]    =    null;    pathNames[stackSize  -  1]  =  null;	  	compilable	  [FE]  ArrayIndexOutOfBoundsException  	20	2	add
753	[BUG]  [BUGGY]  pathNames[stackSize  -  1]  =  null;  pathNames[stackSize  -  1]  =  null;  [FE]  ArrayIndexOutOfBoundsException  [FE]    AssertionFailedError    [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {      [BUGGY]  pathNames[stackSize  -  1]  =  null;  pathNames[stackSize  -  1]  =  null;  [BUGGY]      pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	261	261	2	replace	pathNames[stackSize    -    1]    =    null;    pathNames[stackSize  -  1]  =  null;	  	compilable	  [FE]  ArrayIndexOutOfBoundsException  	20	2	add
754	[BUG]  [BUGGY]  pathNames[stackSize  -  1]  =  null;  Path[]  pathNames[stackSize  -  1]  =  null;  [CE]  ']'  expected  [FE]      AssertionFailedError    [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {      [BUGGY]  pathNames[stackSize  -  1]  =  null;  Path[]  pathNames[stackSize  -  1]  =  null;  [BUGGY]      pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	261	261	2	replace	pathNames[stackSize    -    1]    =    null;    Path[]  pathNames[stackSize  -  1]  =  null;	  	non-compiled	[CE]  ']'  expected	20	None	add
755	[BUG]  [BUGGY]  pathNames[stackSize  -  1]  =  null;  PathIndices  pathNames[stackSize  -  1]  =  null;  [CE]  ']'  expected  [FE]        AssertionFailedError    [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {      [BUGGY]  pathNames[stackSize  -  1]  =  null;  PathIndices  pathNames[stackSize  -  1]  =  null;  [BUGGY]      pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	261	261	2	replace	pathNames[stackSize    -    1]    =    null;    PathIndices  pathNames[stackSize  -  1]  =  null;	  	non-compiled	[CE]  ']'  expected	20	None	add
756	[BUG]  [BUGGY]  pathNames[stackSize  -  1]  =  null;  Path  pathNames[stackSize  -  1]  =  null;  [CE]  ']'  expected  [FE]          AssertionFailedError    [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {      [BUGGY]  pathNames[stackSize  -  1]  =  null;  Path  pathNames[stackSize  -  1]  =  null;  [BUGGY]      pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	261	261	2	replace	pathNames[stackSize    -    1]    =    null;    Path  pathNames[stackSize  -  1]  =  null;	  	non-compiled	[CE]  ']'  expected	20	None	add
757	[BUG]  [BUGGY]  pathNames[stackSize  -  1]  =  null;  PathNames[stackSize  -  1]  =  null;  [CE]  cannot  find  symbol  PathNames  [FE]            AssertionFailedError    [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {      [BUGGY]  pathNames[stackSize  -  1]  =  null;  PathNames[stackSize  -  1]  =  null;  [BUGGY]      pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	261	261	2	replace	pathNames[stackSize    -    1]    =    null;    PathNames[stackSize  -  1]  =  null;	  	non-compiled	[CE]  cannot  find  symbol  PathNames	20	None	add
758	[BUG]  [BUGGY]  pathNames[stackSize  -  1]  =  null;  Path[stackSize  -  1]  =  null;  [CE]  cannot  find  symbol  Path  [FE]              AssertionFailedError    [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {      [BUGGY]  pathNames[stackSize  -  1]  =  null;  Path[stackSize  -  1]  =  null;  [BUGGY]      pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	261	261	2	replace	pathNames[stackSize    -    1]    =    null;    Path[stackSize  -  1]  =  null;	  	non-compiled	[CE]  cannot  find  symbol  Path	20	None	add
759	[BUG]  [BUGGY]  pathNames[stackSize  -  1]  =  null;  paths[stackSize  -  1]  =  null;  [CE]  cannot  find  symbol  paths  [FE]                AssertionFailedError    [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {      [BUGGY]  pathNames[stackSize  -  1]  =  null;  paths[stackSize  -  1]  =  null;  [BUGGY]      pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	261	261	2	replace	pathNames[stackSize    -    1]    =    null;    paths[stackSize  -  1]  =  null;	  	non-compiled	[CE]  cannot  find  symbol  paths	20	None	add
760	[BUG]  [BUGGY]  [FE]  ArrayIndexOutOfBoundsException  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {      [BUGGY]  if(stackSize    >    0)    {    popStack();    }    if(stackSize  >  0)  {  popStack();  System.arraycopy(pathNames,  0,  pathNames,  0,  stackSize);  }  if(stackSize  >  0)  {  popStack();  }  if(stackSize  >  0)  {  popStack();  System.arraycopy(pathNames,  0,  pathNames,  0,  stackSize);  }  [BUGGY]      pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	261	261	2	add	if(stackSize        >        0)        {        popStack();        }        if(stackSize    >    0)    {    popStack();    System.arraycopy(pathNames,    0,    pathNames,    0,    stackSize);    }    if(stackSize  >  0)  {  popStack();  }  if(stackSize  >  0)  {  popStack();  System.arraycopy(pathNames,  0,  pathNames,  0,  stackSize);  }	  	compilable	  [FE]  ArrayIndexOutOfBoundsException  	88	2	add
761	[BUG]  [BUGGY]  if(stackSize    >    0)    {    popStack();    }    if(stackSize  >  0)  {  popStack();  System.arraycopy(pathNames,  0,  pathNames,  0,  stackSize);  }  if(stackSize  >  0)  {  popStack();  }  if(stackSize  >  0)  {  popStack();  System.arraycopy(pathNames,  0,  pathNames,  0,  stackSize);  }  [FE]  ArrayIndexOutOfBoundsException  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {      [BUGGY]  if(stackSize    >    0)    {    popStack();    }    if(stackSize  >  0)  {  popStack();  System.arraycopy(pathNames,  0,  pathNames,  0,  stackSize);  }  if(stackSize  >  0)  {  popStack();  }  if(stackSize  >  0)  {  popStack();  System.arraycopy(pathNames,  0,  pathNames,  0,  stackSize);  }  [BUGGY]      pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	261	261	2	replace	if(stackSize        >        0)        {        popStack();        }        if(stackSize    >    0)    {    popStack();    System.arraycopy(pathNames,    0,    pathNames,    0,    stackSize);    }    if(stackSize  >  0)  {  popStack();  }  if(stackSize  >  0)  {  popStack();  System.arraycopy(pathNames,  0,  pathNames,  0,  stackSize);  }	  	compilable	  [FE]  ArrayIndexOutOfBoundsException  	88	2	add
762	[BUG]  [BUGGY]  [FE]  ArrayIndexOutOfBoundsException  [FE]      ArrayIndexOutOfBoundsException    [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {      [BUGGY]  if(stackSize    >    0)    {    popStack();    }    if(stackSize  >  0)  {  popStack();  System.arraycopy(pathNames,  0,  pathNames,  0,  stackSize);  }  if(stackSize  >  0)  {  popStack();  System.arraycopy(pathNames,  0,  pathNames,  0,  stackSize);  }  [BUGGY]      pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	261	261	2	add	if(stackSize        >        0)        {        popStack();        }        if(stackSize    >    0)    {    popStack();    System.arraycopy(pathNames,    0,    pathNames,    0,    stackSize);    }    if(stackSize  >  0)  {  popStack();  System.arraycopy(pathNames,  0,  pathNames,  0,  stackSize);  }	  	compilable	  [FE]  ArrayIndexOutOfBoundsException  	88	2	add
763	[BUG]  [BUGGY]  if(stackSize    >    0)    {    popStack();    }    if(stackSize  >  0)  {  popStack();  System.arraycopy(pathNames,  0,  pathNames,  0,  stackSize);  }  if(stackSize  >  0)  {  popStack();  System.arraycopy(pathNames,  0,  pathNames,  0,  stackSize);  }  [FE]  ArrayIndexOutOfBoundsException  [FE]      ArrayIndexOutOfBoundsException    [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {      [BUGGY]  if(stackSize    >    0)    {    popStack();    }    if(stackSize  >  0)  {  popStack();  System.arraycopy(pathNames,  0,  pathNames,  0,  stackSize);  }  if(stackSize  >  0)  {  popStack();  System.arraycopy(pathNames,  0,  pathNames,  0,  stackSize);  }  [BUGGY]      pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	261	261	2	replace	if(stackSize        >        0)        {        popStack();        }        if(stackSize    >    0)    {    popStack();    System.arraycopy(pathNames,    0,    pathNames,    0,    stackSize);    }    if(stackSize  >  0)  {  popStack();  System.arraycopy(pathNames,  0,  pathNames,  0,  stackSize);  }	  	compilable	  [FE]  ArrayIndexOutOfBoundsException  	88	2	add
764	[BUG]  [BUGGY]  if(stackSize    >    0)    {    popStack();    }    if(stackSize  >  0)  {  popStack();  System.arraycopy(pathNames,  0,  pathNames,  0,  stackSize);  }  if(stackSize  >  0)  {  popStack();  }  if(stackSize  >  0)  {  getStack();  System.arraycopy(pathNames,  0,  pathNames,  0,  stackSize);  }  [CE]  cannot  find  symbol  [FE]        ArrayIndexOutOfBoundsException    [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {      [BUGGY]  if(stackSize    >    0)    {    popStack();    }    if(stackSize  >  0)  {  popStack();  System.arraycopy(pathNames,  0,  pathNames,  0,  stackSize);  }  if(stackSize  >  0)  {  popStack();  }  if(stackSize  >  0)  {  getStack();  System.arraycopy(pathNames,  0,  pathNames,  0,  stackSize);  }  [BUGGY]      pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	261	261	2	replace	if(stackSize        >        0)        {        popStack();        }        if(stackSize    >    0)    {    popStack();    System.arraycopy(pathNames,    0,    pathNames,    0,    stackSize);    }    if(stackSize  >  0)  {  popStack();  }  if(stackSize  >  0)  {  getStack();  System.arraycopy(pathNames,  0,  pathNames,  0,  stackSize);  }	  	non-compiled	[CE]  cannot  find  symbol	88	None	add
765	[BUG]  [BUGGY]  [FE]  ArrayIndexOutOfBoundsException  [FE]          ArrayIndexOutOfBoundsException    [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {      [BUGGY]  if(stackSize    >    0)    {    popStack();    }    if(stackSize  >  0)  {  popStack();  System.arraycopy(pathNames,  0,  pathNames,  0,  stackSize);  }  if(stackSize  >  0)  {  popStack();  }  if(stackSize  >  0)  {  popStack();  System.arraycopy(pathNames,  0,  pathNames,  1,  stackSize);  }  [BUGGY]      pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	261	261	2	add	if(stackSize        >        0)        {        popStack();        }        if(stackSize    >    0)    {    popStack();    System.arraycopy(pathNames,    0,    pathNames,    0,    stackSize);    }    if(stackSize  >  0)  {  popStack();  }  if(stackSize  >  0)  {  popStack();  System.arraycopy(pathNames,  0,  pathNames,  1,  stackSize);  }	  	compilable	  [FE]  ArrayIndexOutOfBoundsException  	88	2	add
766	[BUG]  [BUGGY]  if(stackSize    >    0)    {    popStack();    }    if(stackSize  >  0)  {  popStack();  System.arraycopy(pathNames,  0,  pathNames,  0,  stackSize);  }  if(stackSize  >  0)  {  popStack();  }  if(stackSize  >  0)  {  popStack();  System.arraycopy(pathNames,  0,  pathNames,  1,  stackSize);  }  [FE]  ArrayIndexOutOfBoundsException  [FE]          ArrayIndexOutOfBoundsException    [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {      [BUGGY]  if(stackSize    >    0)    {    popStack();    }    if(stackSize  >  0)  {  popStack();  System.arraycopy(pathNames,  0,  pathNames,  0,  stackSize);  }  if(stackSize  >  0)  {  popStack();  }  if(stackSize  >  0)  {  popStack();  System.arraycopy(pathNames,  0,  pathNames,  1,  stackSize);  }  [BUGGY]      pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	261	261	2	replace	if(stackSize        >        0)        {        popStack();        }        if(stackSize    >    0)    {    popStack();    System.arraycopy(pathNames,    0,    pathNames,    0,    stackSize);    }    if(stackSize  >  0)  {  popStack();  }  if(stackSize  >  0)  {  popStack();  System.arraycopy(pathNames,  0,  pathNames,  1,  stackSize);  }	  	compilable	  [FE]  ArrayIndexOutOfBoundsException  	88	2	add
767	[BUG]  [BUGGY]  if(stackSize    >    0)    {    popStack();    }    if(stackSize  >  0)  {  popStack();  System.arraycopy(pathNames,  0,  pathNames,  0,  stackSize);  }  if(stackSize  >  0)  {  popStack();  }  if(stackSize  >  0)  {  skipStack();  System.arraycopy(pathNames,  0,  pathNames,  0,  stackSize);  }  [CE]  cannot  find  symbol  [FE]            ArrayIndexOutOfBoundsException    [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {      [BUGGY]  if(stackSize    >    0)    {    popStack();    }    if(stackSize  >  0)  {  popStack();  System.arraycopy(pathNames,  0,  pathNames,  0,  stackSize);  }  if(stackSize  >  0)  {  popStack();  }  if(stackSize  >  0)  {  skipStack();  System.arraycopy(pathNames,  0,  pathNames,  0,  stackSize);  }  [BUGGY]      pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	261	261	2	replace	if(stackSize        >        0)        {        popStack();        }        if(stackSize    >    0)    {    popStack();    System.arraycopy(pathNames,    0,    pathNames,    0,    stackSize);    }    if(stackSize  >  0)  {  popStack();  }  if(stackSize  >  0)  {  skipStack();  System.arraycopy(pathNames,  0,  pathNames,  0,  stackSize);  }	  	non-compiled	[CE]  cannot  find  symbol	88	None	add
768	[BUG]  [BUGGY]  if(stackSize    >    0)    {    popStack();    }    if(stackSize  >  0)  {  popStack();  System.arraycopy(pathNames,  0,  pathNames,  0,  stackSize);  }  if(stackSize  >  0)  {  popStack();  }  if(stackSize  >  0)  {  [CE]  ';'  expected  [FE]              ArrayIndexOutOfBoundsException    [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {      [BUGGY]  if(stackSize    >    0)    {    popStack();    }    if(stackSize  >  0)  {  popStack();  System.arraycopy(pathNames,  0,  pathNames,  0,  stackSize);  }  if(stackSize  >  0)  {  popStack();  }  if(stackSize  >  0)  {  [BUGGY]      pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	261	261	2	replace	if(stackSize        >        0)        {        popStack();        }        if(stackSize    >    0)    {    popStack();    System.arraycopy(pathNames,    0,    pathNames,    0,    stackSize);    }    if(stackSize  >  0)  {  popStack();  }  if(stackSize  >  0)  {	  	non-compiled	[CE]  ';'  expected	88	None	add
769	[BUG]  [BUGGY]  _reportError( "Current  token( "+getMessage()  + ")not  a  value.  If(stackSize()  ==  0)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  unclosed  string  literal  [FE]                ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {      [BUGGY]  _reportError( "Current  token( "+getMessage()  + ")not  a  value.  If(stackSize()  ==  0)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	261	261	2	replace	_reportError( "Current  token( "+getMessage()  + ")not  a  value.  If(stackSize()  ==  0)  {  throw  new  IllegalArgumentException( " ");  }	  _reportError(   "Current    token(   "+getMessage()    +   ")not    a    value.   ");    	non-compiled	[CE]  unclosed  string  literal	29	None	replace
770	[BUG]  [BUGGY]  JsonToken.START_OBJECT  =  JsonToken.END_OBJECT;  [CE]  cannot  find  symbol  START_OBJECT  [FE]                    ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {      [BUGGY]  JsonToken.START_OBJECT  =  JsonToken.END_OBJECT;  [BUGGY]      pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	261	261	2	replace	JsonToken.START_OBJECT  =  JsonToken.END_OBJECT;	  JsonToken.START_OBJECT;    	non-compiled	[CE]  cannot  find  symbol  START_OBJECT	66	None	replace
771	[BUG]  [BUGGY]  JsonToken.START_OBJECT  =  JsonToken.FIELD_NAME;  [CE]  cannot  find  symbol  START_OBJECT  [FE]                      ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {      [BUGGY]  JsonToken.START_OBJECT  =  JsonToken.FIELD_NAME;  [BUGGY]      pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	261	261	2	replace	JsonToken.START_OBJECT  =  JsonToken.FIELD_NAME;	  JsonToken.START_OBJECT;    	non-compiled	[CE]  cannot  find  symbol  START_OBJECT	66	None	replace
772	[BUG]  [BUGGY]  JsonToken.START_OBJECT  =  null;  [CE]  cannot  find  symbol  START_OBJECT  [FE]                        ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {      [BUGGY]  JsonToken.START_OBJECT  =  null;  [BUGGY]      pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	261	261	2	replace	JsonToken.START_OBJECT  =  null;	  JsonToken.START_OBJECT;    	non-compiled	[CE]  cannot  find  symbol  START_OBJECT	66	None	replace
773	[BUG]  [BUGGY]  JsonToken.START_OBJECT  =  JsonToken.START_OBJECT;  [CE]  cannot  find  symbol  START_OBJECT  [FE]                          ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {      [BUGGY]  JsonToken.START_OBJECT  =  JsonToken.START_OBJECT;  [BUGGY]      pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	261	261	2	replace	JsonToken.START_OBJECT  =  JsonToken.START_OBJECT;	  JsonToken.START_OBJECT;    	non-compiled	[CE]  cannot  find  symbol  START_OBJECT	66	None	replace
774	[BUG]  [BUGGY]  JsonToken.START_OBJECT  =  nextName();  [CE]  cannot  find  symbol  START_OBJECT  [FE]                            ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {      [BUGGY]  JsonToken.START_OBJECT  =  nextName();  [BUGGY]      pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	261	261	2	replace	JsonToken.START_OBJECT  =  nextName();	  JsonToken.START_OBJECT;    	non-compiled	[CE]  cannot  find  symbol  START_OBJECT	66	None	replace
775	[BUG]  [BUGGY]  JsonToken.START_OBJECT  ||  JsonToken.START_NAME;  [CE]  not  a  statement  [FE]                              ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {      [BUGGY]  JsonToken.START_OBJECT  ||  JsonToken.START_NAME;  [BUGGY]      pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	261	261	2	replace	JsonToken.START_OBJECT  ||  JsonToken.START_NAME;	  JsonToken.START_OBJECT;    	non-compiled	[CE]  not  a  statement	66	None	replace
776	[BUG]  [BUGGY]  connectToPossibleExceptionHandler(throwInternal(),  JsonToken.VALUE_EMBEDDED,  pathNames);  [CE]  cannot  find  symbol  [FE]                      ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {      [BUGGY]  connectToPossibleExceptionHandler(throwInternal(),  JsonToken.VALUE_EMBEDDED,  pathNames);  [BUGGY]      pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	261	261	2	replace	connectToPossibleExceptionHandler(throwInternal(),  JsonToken.VALUE_EMBEDDED,  pathNames);	  connectToPossibleExceptionHandler(throwInternal(),    JsonToken.VALUE_EMBEDDED);    	non-compiled	[CE]  cannot  find  symbol	186	None	replace
777	[BUG]  [BUGGY]  connectToPossibleExceptionHandler(jsonToken.VALUE_EMBEDDED);  [CE]  cannot  find  symbol  jsonToken  [FE]                        ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {      [BUGGY]  connectToPossibleExceptionHandler(jsonToken.VALUE_EMBEDDED);  [BUGGY]      pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	261	261	2	replace	connectToPossibleExceptionHandler(jsonToken.VALUE_EMBEDDED);	  connectToPossibleExceptionHandler(throwInternal(),    JsonToken.VALUE_EMBEDDED);    	non-compiled	[CE]  cannot  find  symbol  jsonToken	186	None	replace
778	[BUG]  [BUGGY]  connectToPossibleExceptionHandler(throwInternal(),  JsonToken.VALUE_EMBEDDED,  stackSize);  [CE]  cannot  find  symbol  [FE]                          ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {      [BUGGY]  connectToPossibleExceptionHandler(throwInternal(),  JsonToken.VALUE_EMBEDDED,  stackSize);  [BUGGY]      pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	261	261	2	replace	connectToPossibleExceptionHandler(throwInternal(),  JsonToken.VALUE_EMBEDDED,  stackSize);	  connectToPossibleExceptionHandler(throwInternal(),    JsonToken.VALUE_EMBEDDED);    	non-compiled	[CE]  cannot  find  symbol	186	None	replace
779	[BUG]  [BUGGY]  connectToPossibleExceptionHandler(throwInternal(),  JsonToken.VALUE_EMBEDDED,  nextName());  [CE]  cannot  find  symbol  [FE]                            ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {      [BUGGY]  connectToPossibleExceptionHandler(throwInternal(),  JsonToken.VALUE_EMBEDDED,  nextName());  [BUGGY]      pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	261	261	2	replace	connectToPossibleExceptionHandler(throwInternal(),  JsonToken.VALUE_EMBEDDED,  nextName());	  connectToPossibleExceptionHandler(throwInternal(),    JsonToken.VALUE_EMBEDDED);    	non-compiled	[CE]  cannot  find  symbol	186	None	replace
780	[BUG]  [BUGGY]  connectToPossibleExceptionHandler(JsonToken.VALUE_EMBEDDED,  stackSize);  [CE]  cannot  find  symbol  VALUE_EMBEDDED  [FE]                              ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {      [BUGGY]  connectToPossibleExceptionHandler(JsonToken.VALUE_EMBEDDED,  stackSize);  [BUGGY]      pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	261	261	2	replace	connectToPossibleExceptionHandler(JsonToken.VALUE_EMBEDDED,  stackSize);	  connectToPossibleExceptionHandler(throwInternal(),    JsonToken.VALUE_EMBEDDED);    	non-compiled	[CE]  cannot  find  symbol  VALUE_EMBEDDED	186	None	replace
781	[BUG]  [BUGGY]  connectToPossibleExceptionHandler(nextName(),  JsonToken.VALUE_EMBEDDED);  [CE]  cannot  find  symbol  VALUE_EMBEDDED  [FE]                                ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {      [BUGGY]  connectToPossibleExceptionHandler(nextName(),  JsonToken.VALUE_EMBEDDED);  [BUGGY]      pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	261	261	2	replace	connectToPossibleExceptionHandler(nextName(),  JsonToken.VALUE_EMBEDDED);	  connectToPossibleExceptionHandler(throwInternal(),    JsonToken.VALUE_EMBEDDED);    	non-compiled	[CE]  cannot  find  symbol  VALUE_EMBEDDED	186	None	replace
782	[BUG]  [BUGGY]  connectToPossibleExceptionHandler(throwInternal(),  JsonToken.VALUE_EMBEDDED,  null);  [CE]  cannot  find  symbol  [FE]                                  ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {      [BUGGY]  connectToPossibleExceptionHandler(throwInternal(),  JsonToken.VALUE_EMBEDDED,  null);  [BUGGY]      pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	261	261	2	replace	connectToPossibleExceptionHandler(throwInternal(),  JsonToken.VALUE_EMBEDDED,  null);	  connectToPossibleExceptionHandler(throwInternal(),    JsonToken.VALUE_EMBEDDED);    	non-compiled	[CE]  cannot  find  symbol	186	None	replace
783	[BUG]  [BUGGY]  Path[]  pathIndices  =  getPaths();  [CE]  cannot  find  symbol  [FE]            AssertionFailedError      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {      [BUGGY]  Path[]  pathIndices  =  getPaths();  [BUGGY]      pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	261	261	2	replace	Path[]  pathIndices  =  getPaths();	          Path[]    pathIndices    =    getValues();    	non-compiled	[CE]  cannot  find  symbol	120	None	replace
784	[BUG]  [BUGGY]  Path[]  pathIndices  =  getStandardValues();  [CE]  cannot  find  symbol  [FE]              AssertionFailedError      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {      [BUGGY]  Path[]  pathIndices  =  getStandardValues();  [BUGGY]      pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	261	261	2	replace	Path[]  pathIndices  =  getStandardValues();	          Path[]    pathIndices    =    getValues();    	non-compiled	[CE]  cannot  find  symbol	120	None	replace
785	[BUG]  [BUGGY]  Path[]  pathIndices  =  getKeys();  [CE]  cannot  find  symbol  [FE]                AssertionFailedError      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {      [BUGGY]  Path[]  pathIndices  =  getKeys();  [BUGGY]      pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	261	261	2	replace	Path[]  pathIndices  =  getKeys();	          Path[]    pathIndices    =    getValues();    	non-compiled	[CE]  cannot  find  symbol	120	None	replace
786	[BUG]  [BUGGY]  Path[]  pathIndices  =  getMutableValues();  [CE]  cannot  find  symbol  [FE]                  AssertionFailedError      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {      [BUGGY]  Path[]  pathIndices  =  getMutableValues();  [BUGGY]      pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	261	261	2	replace	Path[]  pathIndices  =  getMutableValues();	          Path[]    pathIndices    =    getValues();    	non-compiled	[CE]  cannot  find  symbol	120	None	replace
787	[BUG]  [BUGGY]  Path[]  pathIndices  =  getRawValues();  [CE]  cannot  find  symbol  [FE]                    AssertionFailedError      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {      [BUGGY]  Path[]  pathIndices  =  getRawValues();  [BUGGY]      pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	261	261	2	replace	Path[]  pathIndices  =  getRawValues();	          Path[]    pathIndices    =    getValues();    	non-compiled	[CE]  cannot  find  symbol	120	None	replace
788	[BUG]  [BUGGY]  Path[]  pathIndices  =  getValues(null);  [CE]  cannot  find  symbol  [FE]                      AssertionFailedError      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {      [BUGGY]  Path[]  pathIndices  =  getValues(null);  [BUGGY]      pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	261	261	2	replace	Path[]  pathIndices  =  getValues(null);	          Path[]    pathIndices    =    getValues();    	non-compiled	[CE]  cannot  find  symbol	120	None	replace
789	[BUG]  [BUGGY]  Validate.notEmpty(stackNames);  [CE]  cannot  find  symbol  stackNames  [FE]                    ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {      [BUGGY]  Validate.notEmpty(stackNames);  [BUGGY]      pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	261	261	2	replace	Validate.notEmpty(stackNames);	  Validate.notNull(stackNames);    	non-compiled	[CE]  cannot  find  symbol  stackNames	102	None	replace
790	[BUG]  [BUGGY]  Validate.notEmpty(nextName());  [CE]  cannot  find  symbol  Validate  [FE]                      ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {      [BUGGY]  Validate.notEmpty(nextName());  [BUGGY]      pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	261	261	2	replace	Validate.notEmpty(nextName());	  Validate.notNull(stackNames);    	non-compiled	[CE]  cannot  find  symbol  Validate	102	None	replace
791	[BUG]  [BUGGY]  connectToPeek(JsonToken.VALUE_NUMBER_FLOAT,  JsonToken.VALUE_NUMBER_ERROR);  [CE]  cannot  find  symbol  VALUE_NUMBER_FLOAT  [FE]                            ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {      [BUGGY]  connectToPeek(JsonToken.VALUE_NUMBER_FLOAT,  JsonToken.VALUE_NUMBER_ERROR);  [BUGGY]      pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	261	261	2	replace	connectToPeek(JsonToken.VALUE_NUMBER_FLOAT,  JsonToken.VALUE_NUMBER_ERROR);	  connectToPeek(JsonToken.VALUE_NUMBER_INT,    JsonToken.VALUE_NUMBER_ERROR);    	non-compiled	[CE]  cannot  find  symbol  VALUE_NUMBER_FLOAT	218	None	replace
792	[BUG]  [BUGGY]  connectToPeek(JsonToken.VALUE_NUMBER_ERROR,  JsonToken.VALUE_NUMBER_INT);  [CE]  cannot  find  symbol  VALUE_NUMBER_ERROR  [FE]                              ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {      [BUGGY]  connectToPeek(JsonToken.VALUE_NUMBER_ERROR,  JsonToken.VALUE_NUMBER_INT);  [BUGGY]      pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	261	261	2	replace	connectToPeek(JsonToken.VALUE_NUMBER_ERROR,  JsonToken.VALUE_NUMBER_INT);	  connectToPeek(JsonToken.VALUE_NUMBER_INT,    JsonToken.VALUE_NUMBER_ERROR);    	non-compiled	[CE]  cannot  find  symbol  VALUE_NUMBER_ERROR	218	None	replace
793	[BUG]  [BUGGY]  connectToPeek(JsonToken.VALUE_NUMBER_EXPR_RESULT,  JsonToken.VALUE_NUMBER_ERROR);  [CE]  cannot  find  symbol  VALUE_NUMBER_EXPR_RESULT  [FE]                                ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {      [BUGGY]  connectToPeek(JsonToken.VALUE_NUMBER_EXPR_RESULT,  JsonToken.VALUE_NUMBER_ERROR);  [BUGGY]      pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	261	261	2	replace	connectToPeek(JsonToken.VALUE_NUMBER_EXPR_RESULT,  JsonToken.VALUE_NUMBER_ERROR);	  connectToPeek(JsonToken.VALUE_NUMBER_INT,    JsonToken.VALUE_NUMBER_ERROR);    	non-compiled	[CE]  cannot  find  symbol  VALUE_NUMBER_EXPR_RESULT	218	None	replace
794	[BUG]  [BUGGY]  connectToPeek(JsonToken.VALUE_NULL,  JsonToken.VALUE_NUMBER_ERROR);  [CE]  cannot  find  symbol  VALUE_NULL  [FE]                                  ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {      [BUGGY]  connectToPeek(JsonToken.VALUE_NULL,  JsonToken.VALUE_NUMBER_ERROR);  [BUGGY]      pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	261	261	2	replace	connectToPeek(JsonToken.VALUE_NULL,  JsonToken.VALUE_NUMBER_ERROR);	  connectToPeek(JsonToken.VALUE_NUMBER_INT,    JsonToken.VALUE_NUMBER_ERROR);    	non-compiled	[CE]  cannot  find  symbol  VALUE_NULL	218	None	replace
795	[BUG]  [BUGGY]  connectToPeek(JsonToken.VALUE_NUMBER_WARNING,  JsonToken.VALUE_NUMBER_ERROR);  [CE]  cannot  find  symbol  VALUE_NUMBER_WARNING  [FE]                                    ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {      [BUGGY]  connectToPeek(JsonToken.VALUE_NUMBER_WARNING,  JsonToken.VALUE_NUMBER_ERROR);  [BUGGY]      pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	261	261	2	replace	connectToPeek(JsonToken.VALUE_NUMBER_WARNING,  JsonToken.VALUE_NUMBER_ERROR);	  connectToPeek(JsonToken.VALUE_NUMBER_INT,    JsonToken.VALUE_NUMBER_ERROR);    	non-compiled	[CE]  cannot  find  symbol  VALUE_NUMBER_WARNING	218	None	replace
796	[BUG]  [BUGGY]  connectToPeek(JsonToken.VALUE_NUMBER_ERROR,  JsonToken.VALUE_NUMBER_FLOAT);  [CE]  cannot  find  symbol  VALUE_NUMBER_ERROR  [FE]                                      ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {      [BUGGY]  connectToPeek(JsonToken.VALUE_NUMBER_ERROR,  JsonToken.VALUE_NUMBER_FLOAT);  [BUGGY]      pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	261	261	2	replace	connectToPeek(JsonToken.VALUE_NUMBER_ERROR,  JsonToken.VALUE_NUMBER_FLOAT);	  connectToPeek(JsonToken.VALUE_NUMBER_INT,    JsonToken.VALUE_NUMBER_ERROR);    	non-compiled	[CE]  cannot  find  symbol  VALUE_NUMBER_ERROR	218	None	replace
797	[BUG]  [BUGGY]  connectToPeek(JsonToken.VALUE_NUMBER_INT,  JsonToken.VALUE_NUMBER_ERROR,  SENTINEL_CLOSED);  [CE]  cannot  find  symbol  VALUE_NUMBER_INT  [FE]                                        ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {      [BUGGY]  connectToPeek(JsonToken.VALUE_NUMBER_INT,  JsonToken.VALUE_NUMBER_ERROR,  SENTINEL_CLOSED);  [BUGGY]      pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	261	261	2	replace	connectToPeek(JsonToken.VALUE_NUMBER_INT,  JsonToken.VALUE_NUMBER_ERROR,  SENTINEL_CLOSED);	  connectToPeek(JsonToken.VALUE_NUMBER_INT,    JsonToken.VALUE_NUMBER_ERROR);    	non-compiled	[CE]  cannot  find  symbol  VALUE_NUMBER_INT	218	None	replace
798	[BUG]  [BUGGY]  StackTree  <  NUMBER_INDEX  ||  stackSize  >  0)  {  nextName();  }  else  {  skipStack();  }  [CE]  >  expected  [FE]                ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {      [BUGGY]  StackTree  <  NUMBER_INDEX  ||  stackSize  >  0)  {  nextName();  }  else  {  skipStack();  }  [BUGGY]      pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	261	261	2	replace	StackTree  <  NUMBER_INDEX  ||  stackSize  >  0)  {  nextName();  }  else  {  skipStack();  }	  if(stackSize    >    0)    {    nextName();    }    else    {    skipStack();    }    	non-compiled	[CE]  >  expected	165	None	replace
799	[BUG]  [BUGGY]  Names[stackSize  -  1]  =   "null ".equals(pathNames[stackSize  -  1])?  null  :  pathNames[stackSize  -  1];  [CE]  cannot  find  symbol  Names  [FE]                  ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {      [BUGGY]  Names[stackSize  -  1]  =   "null ".equals(pathNames[stackSize  -  1])?  null  :  pathNames[stackSize  -  1];  [BUGGY]      pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	261	261	2	replace	Names[stackSize  -  1]  =   "null ".equals(pathNames[stackSize  -  1])?  null  :  pathNames[stackSize  -  1];	  if(stackSize    >    0)    {    nextName();    }    else    {    skipStack();    }    	non-compiled	[CE]  cannot  find  symbol  Names	165	None	replace
800	[BUG]  [BUGGY]  Names[stackSize  -  1]  =   "null ".equals(pathNames[stackSize  -  1])?  null  :  stackSize();  [CE]  cannot  find  symbol  Names  [FE]                    ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {      [BUGGY]  Names[stackSize  -  1]  =   "null ".equals(pathNames[stackSize  -  1])?  null  :  stackSize();  [BUGGY]      pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	261	261	2	replace	Names[stackSize  -  1]  =   "null ".equals(pathNames[stackSize  -  1])?  null  :  stackSize();	  if(stackSize    >    0)    {    nextName();    }    else    {    skipStack();    }    	non-compiled	[CE]  cannot  find  symbol  Names	165	None	replace
801	[BUG]  [BUGGY]  connectToPeek(JsonToken.END_ARRAY,  stackSize);  [CE]  cannot  find  symbol  [FE]                      ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {      [BUGGY]  connectToPeek(JsonToken.END_ARRAY,  stackSize);  [BUGGY]      pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	261	261	2	replace	connectToPeek(JsonToken.END_ARRAY,  stackSize);	  connectToPeek(JsonToken.END_ARRAY);    	non-compiled	[CE]  cannot  find  symbol	163	None	replace
802	[BUG]  [BUGGY]  connectToPeek(JsonToken.END_ARRAY,  pathNames);  [CE]  cannot  find  symbol  [FE]                        ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {      [BUGGY]  connectToPeek(JsonToken.END_ARRAY,  pathNames);  [BUGGY]      pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	261	261	2	replace	connectToPeek(JsonToken.END_ARRAY,  pathNames);	  connectToPeek(JsonToken.END_ARRAY);    	non-compiled	[CE]  cannot  find  symbol	163	None	replace
803	[BUG]  [BUGGY]  connectToPeek(JsonToken.END_ARRAY,  stack);  [CE]  cannot  find  symbol  [FE]                          ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {      [BUGGY]  connectToPeek(JsonToken.END_ARRAY,  stack);  [BUGGY]      pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	261	261	2	replace	connectToPeek(JsonToken.END_ARRAY,  stack);	  connectToPeek(JsonToken.END_ARRAY);    	non-compiled	[CE]  cannot  find  symbol	163	None	replace
804	[BUG]  [BUGGY]  connectToPeek(JsonToken.END_ARRAY,  JsonToken.END_NAME);  [CE]  cannot  find  symbol  END_NAME  [FE]                            ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {      [BUGGY]  connectToPeek(JsonToken.END_ARRAY,  JsonToken.END_NAME);  [BUGGY]      pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	261	261	2	replace	connectToPeek(JsonToken.END_ARRAY,  JsonToken.END_NAME);	  connectToPeek(JsonToken.END_ARRAY);    	non-compiled	[CE]  cannot  find  symbol  END_NAME	163	None	replace
805	[BUG]  [BUGGY]  connectToPeek(JsonToken.END_ARRAY,  null);  [CE]  cannot  find  symbol  [FE]                              ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {      [BUGGY]  connectToPeek(JsonToken.END_ARRAY,  null);  [BUGGY]      pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	261	261	2	replace	connectToPeek(JsonToken.END_ARRAY,  null);	  connectToPeek(JsonToken.END_ARRAY);    	non-compiled	[CE]  cannot  find  symbol	163	None	replace
806	[BUG]  [BUGGY]  connectToPeek(JsonToken.END_ARRAY,  JsonToken.START_OBJECT);  [CE]  cannot  find  symbol  START_OBJECT  [FE]                                ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {      [BUGGY]  connectToPeek(JsonToken.END_ARRAY,  JsonToken.START_OBJECT);  [BUGGY]      pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	261	261	2	replace	connectToPeek(JsonToken.END_ARRAY,  JsonToken.START_OBJECT);	  connectToPeek(JsonToken.END_ARRAY);    	non-compiled	[CE]  cannot  find  symbol  START_OBJECT	163	None	replace
807	[BUG]  [BUGGY]  [FE]  ArrayIndexOutOfBoundsException  [FE]    AssertionFailedError    [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {      [BUGGY]  if(stackSize  >  1)  {  popStack();  }  if(stackSize  >  1)  {  popStack();  }  [BUGGY]      pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	261	261	2	add	if(stackSize    >    1)    {    popStack();    }    if(stackSize  >  1)  {  popStack();  }	  	compilable	  [FE]  ArrayIndexOutOfBoundsException  	192	2	add
808	[BUG]  [BUGGY]  if(stackSize  >  1)  {  popStack();  }  if(stackSize  >  1)  {  popStack();  }  [FE]  ArrayIndexOutOfBoundsException  [FE]    AssertionFailedError    [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {      [BUGGY]  if(stackSize  >  1)  {  popStack();  }  if(stackSize  >  1)  {  popStack();  }  [BUGGY]      pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	261	261	2	replace	if(stackSize    >    1)    {    popStack();    }    if(stackSize  >  1)  {  popStack();  }	  	compilable	  [FE]  ArrayIndexOutOfBoundsException  	192	2	add
809	[BUG]  [BUGGY]  if(stackSize  >  1)  {  popStack();  }  If(stackSize  >  1)  {  popStack();  }  [CE]  ';'  expected  [FE]      AssertionFailedError    [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {      [BUGGY]  if(stackSize  >  1)  {  popStack();  }  If(stackSize  >  1)  {  popStack();  }  [BUGGY]      pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	261	261	2	replace	if(stackSize    >    1)    {    popStack();    }    If(stackSize  >  1)  {  popStack();  }	  	non-compiled	[CE]  ';'  expected	192	None	add
810	[BUG]  [BUGGY]  if(stackSize  >  1)  {  popStack();  }  if(stackSize  >  1)  {  popStack();  }  else  {  [CE]  ';'  expected  [FE]        AssertionFailedError    [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {      [BUGGY]  if(stackSize  >  1)  {  popStack();  }  if(stackSize  >  1)  {  popStack();  }  else  {  [BUGGY]      pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	261	261	2	replace	if(stackSize    >    1)    {    popStack();    }    if(stackSize  >  1)  {  popStack();  }  else  {	  	non-compiled	[CE]  ';'  expected	192	None	add
811	[BUG]  [BUGGY]  [FE]  ArrayIndexOutOfBoundsException  [FE]          AssertionFailedError    [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {      [BUGGY]  if(stackSize  >  1)  {  popStack();  }  if(stackSize  >  2)  {  popStack();  }  [BUGGY]      pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	261	261	2	add	if(stackSize    >    1)    {    popStack();    }    if(stackSize  >  2)  {  popStack();  }	  	compilable	  [FE]  ArrayIndexOutOfBoundsException  	192	2	add
812	[BUG]  [BUGGY]  if(stackSize  >  1)  {  popStack();  }  if(stackSize  >  2)  {  popStack();  }  [FE]  ArrayIndexOutOfBoundsException  [FE]          AssertionFailedError    [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {      [BUGGY]  if(stackSize  >  1)  {  popStack();  }  if(stackSize  >  2)  {  popStack();  }  [BUGGY]      pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	261	261	2	replace	if(stackSize    >    1)    {    popStack();    }    if(stackSize  >  2)  {  popStack();  }	  	compilable	  [FE]  ArrayIndexOutOfBoundsException  	192	2	add
813	[BUG]  [BUGGY]  if(stackSize  >  1)  {  popStack();  }  if(stackSize  >  1)  ==  popStack();  }  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError    [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {      [BUGGY]  if(stackSize  >  1)  {  popStack();  }  if(stackSize  >  1)  ==  popStack();  }  [BUGGY]      pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	261	261	2	replace	if(stackSize    >    1)    {    popStack();    }    if(stackSize  >  1)  ==  popStack();  }	  	non-compiled	[CE]  illegal  start  of  expression	192	None	add
814	[BUG]  [BUGGY]  PathIndices  pathIndices[stackSize  -  2]  =   "null ";  [CE]  [FE]            AssertionFailedError      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {      [BUGGY]  PathIndices  pathIndices[stackSize  -  2]  =   "null ";  [BUGGY]      pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	261	261	2	replace	PathIndices  pathIndices[stackSize  -  2]  =   "null ";	  PathIndices    pathIndices[stackSize    -    1]    =       "null   ";    	non-compiled	[CE]  	43	None	replace
815	[BUG]  [BUGGY]  connectToPeek(JsonToken.START_OBJECT,  pathNames);  [CE]  cannot  find  symbol  START_OBJECT  [FE]                              ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {      [BUGGY]  connectToPeek(JsonToken.START_OBJECT,  pathNames);  [BUGGY]      pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	261	261	2	replace	connectToPeek(JsonToken.START_OBJECT,  pathNames);	  connectToPeek(JsonToken.START_OBJECT);    	non-compiled	[CE]  cannot  find  symbol  START_OBJECT	48	None	replace
816	[BUG]  [BUGGY]  connectToPeek(JsonToken.START_OBJECT,  null);  [CE]  cannot  find  symbol  START_OBJECT  [FE]                                ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {      [BUGGY]  connectToPeek(JsonToken.START_OBJECT,  null);  [BUGGY]      pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	261	261	2	replace	connectToPeek(JsonToken.START_OBJECT,  null);	  connectToPeek(JsonToken.START_OBJECT);    	non-compiled	[CE]  cannot  find  symbol  START_OBJECT	48	None	replace
817	[BUG]  [BUGGY]  connectToPeek(JsonToken.START_OBJECT,  stackSize);  [CE]  cannot  find  symbol  START_OBJECT  [FE]                                  ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {      [BUGGY]  connectToPeek(JsonToken.START_OBJECT,  stackSize);  [BUGGY]      pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	261	261	2	replace	connectToPeek(JsonToken.START_OBJECT,  stackSize);	  connectToPeek(JsonToken.START_OBJECT);    	non-compiled	[CE]  cannot  find  symbol  START_OBJECT	48	None	replace
818	[BUG]  [BUGGY]  connectToPeek(JsonToken.START_OBJECT,  1);  [CE]  cannot  find  symbol  START_OBJECT  [FE]                                    ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {      [BUGGY]  connectToPeek(JsonToken.START_OBJECT,  1);  [BUGGY]      pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	261	261	2	replace	connectToPeek(JsonToken.START_OBJECT,  1);	  connectToPeek(JsonToken.START_OBJECT);    	non-compiled	[CE]  cannot  find  symbol  START_OBJECT	48	None	replace
819	[BUG]  [BUGGY]  connectToPeek(JsonToken.START_OBJECT,  JsonToken.START_NAME);  [CE]  cannot  find  symbol  START_OBJECT  [FE]                                      ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {      [BUGGY]  connectToPeek(JsonToken.START_OBJECT,  JsonToken.START_NAME);  [BUGGY]      pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	261	261	2	replace	connectToPeek(JsonToken.START_OBJECT,  JsonToken.START_NAME);	  connectToPeek(JsonToken.START_OBJECT);    	non-compiled	[CE]  cannot  find  symbol  START_OBJECT	48	None	replace
820	[BUG]  [BUGGY]  connectToPeek(JsonToken.START_OBJECT,  true);  [CE]  cannot  find  symbol  START_OBJECT  [FE]                                        ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {      [BUGGY]  connectToPeek(JsonToken.START_OBJECT,  true);  [BUGGY]      pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	261	261	2	replace	connectToPeek(JsonToken.START_OBJECT,  true);	  connectToPeek(JsonToken.START_OBJECT);    	non-compiled	[CE]  cannot  find  symbol  START_OBJECT	48	None	replace
821	[BUG]  [BUGGY]  _reportError( "Current  token( "+getClass().getName()  + ")not  a  valid  value ");  [CE]  cannot  find  symbol  [FE]        ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {      [BUGGY]  _reportError( "Current  token( "+getClass().getName()  + ")not  a  valid  value ");  [BUGGY]      pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	261	261	2	replace	_reportError( "Current  token( "+getClass().getName()  + ")not  a  valid  value ");	  pullStack();    	non-compiled	[CE]  cannot  find  symbol	69	None	replace
822	[BUG]  [BUGGY]  sb.append(JsonToken.VALUE_STRING);  [CE]  cannot  find  symbol  VALUE_STRING  [FE]          ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {      [BUGGY]  sb.append(JsonToken.VALUE_STRING);  [BUGGY]      pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	261	261	2	replace	sb.append(JsonToken.VALUE_STRING);	  pullStack();    	non-compiled	[CE]  cannot  find  symbol  VALUE_STRING	69	None	replace
823	[BUG]  [BUGGY]  _reportError( "Current  token( "+JsonToken.VALUE_STRING+ ")not  a  string  value ");  [CE]  cannot  find  symbol  VALUE_STRING  [FE]            ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {      [BUGGY]  _reportError( "Current  token( "+JsonToken.VALUE_STRING+ ")not  a  string  value ");  [BUGGY]      pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	261	261	2	replace	_reportError( "Current  token( "+JsonToken.VALUE_STRING+ ")not  a  string  value ");	  pullStack();    	non-compiled	[CE]  cannot  find  symbol  VALUE_STRING	69	None	replace
824	[BUG]  [BUGGY]  _reportError( "Current  token( "+getClass().getName()  + ")not  a  valid  index ");  [CE]  cannot  find  symbol  [FE]              ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {      [BUGGY]  _reportError( "Current  token( "+getClass().getName()  + ")not  a  valid  index ");  [BUGGY]      pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	261	261	2	replace	_reportError( "Current  token( "+getClass().getName()  + ")not  a  valid  index ");	  pullStack();    	non-compiled	[CE]  cannot  find  symbol	69	None	replace
825	[BUG]  [BUGGY]  _reportError( "Current  token( "+JsonToken.VALUE_NAME+ ")not  a  valid  value ");  [CE]  cannot  find  symbol  VALUE_NAME  [FE]                ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {      [BUGGY]  _reportError( "Current  token( "+JsonToken.VALUE_NAME+ ")not  a  valid  value ");  [BUGGY]      pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	261	261	2	replace	_reportError( "Current  token( "+JsonToken.VALUE_NAME+ ")not  a  valid  value ");	  pullStack();    	non-compiled	[CE]  cannot  find  symbol  VALUE_NAME	69	None	replace
826	[BUG]  [BUGGY]  Path  pathIndices[stackSize  -  1]  =(pathNames[stackSize  -  1]  ==  null)?  null  :  pathNames[stackSize  -  1];  [CE]  ']'  expected  [FE]                            ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {      [BUGGY]  Path  pathIndices[stackSize  -  1]  =(pathNames[stackSize  -  1]  ==  null)?  null  :  pathNames[stackSize  -  1];  [BUGGY]      pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	261	261	2	replace	Path  pathIndices[stackSize  -  1]  =(pathNames[stackSize  -  1]  ==  null)?  null  :  pathNames[stackSize  -  1];	  Path    pathIndices[stackSize    -    1]    =    null;    	non-compiled	[CE]  ']'  expected	22	None	replace
827	[BUG]  [BUGGY]  Path  pathIndices[stackSize  -  2]  =  null;  [CE]  ']'  expected  [FE]                              ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {      [BUGGY]  Path  pathIndices[stackSize  -  2]  =  null;  [BUGGY]      pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	261	261	2	replace	Path  pathIndices[stackSize  -  2]  =  null;	  Path    pathIndices[stackSize    -    1]    =    null;    	non-compiled	[CE]  ']'  expected	22	None	replace
828	[BUG]  [BUGGY]  Path  pathIndices[stackSize  -  1]  =(pathNames[stackSize  -  1]!=  null)?  null  :  pathNames[stackSize  -  1];  [CE]  ']'  expected  [FE]                                ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {      [BUGGY]  Path  pathIndices[stackSize  -  1]  =(pathNames[stackSize  -  1]!=  null)?  null  :  pathNames[stackSize  -  1];  [BUGGY]      pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	261	261	2	replace	Path  pathIndices[stackSize  -  1]  =(pathNames[stackSize  -  1]!=  null)?  null  :  pathNames[stackSize  -  1];	  Path    pathIndices[stackSize    -    1]    =    null;    	non-compiled	[CE]  ']'  expected	22	None	replace
829	[BUG]  [BUGGY]  Path  pathIndices[stackSize  -  1]  =(pathNames[stackSize  -  1]  >=  null)?  null  :  pathNames[stackSize  -  1];  [CE]  ']'  expected  [FE]                                  ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {      [BUGGY]  Path  pathIndices[stackSize  -  1]  =(pathNames[stackSize  -  1]  >=  null)?  null  :  pathNames[stackSize  -  1];  [BUGGY]      pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	261	261	2	replace	Path  pathIndices[stackSize  -  1]  =(pathNames[stackSize  -  1]  >=  null)?  null  :  pathNames[stackSize  -  1];	  Path    pathIndices[stackSize    -    1]    =    null;    	non-compiled	[CE]  ']'  expected	22	None	replace
830	[BUG]  [BUGGY]  Path  pathIndices[stackSize  -  1]  =  new  Path(pathNames.length);  [CE]  ']'  expected  [FE]                                    ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {      [BUGGY]  Path  pathIndices[stackSize  -  1]  =  new  Path(pathNames.length);  [BUGGY]      pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	261	261	2	replace	Path  pathIndices[stackSize  -  1]  =  new  Path(pathNames.length);	  Path    pathIndices[stackSize    -    1]    =    null;    	non-compiled	[CE]  ']'  expected	22	None	replace
831	[BUG]  [BUGGY]  Path  pathIndices[stackSize  -  1]  =(pathNames[stackSize  -  1]  <  <  1)?  null  :  pathNames[stackSize  -  1];  [CE]  ']'  expected  [FE]                                      ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {      [BUGGY]  Path  pathIndices[stackSize  -  1]  =(pathNames[stackSize  -  1]  <  <  1)?  null  :  pathNames[stackSize  -  1];  [BUGGY]      pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	261	261	2	replace	Path  pathIndices[stackSize  -  1]  =(pathNames[stackSize  -  1]  <  <  1)?  null  :  pathNames[stackSize  -  1];	  Path    pathIndices[stackSize    -    1]    =    null;    	non-compiled	[CE]  ']'  expected	22	None	replace
832	[BUG]  [BUGGY]  _reportError( "Current  token( "+getClass().getName()  + ")not  a  value. ",  stackSize);  [CE]  cannot  find  symbol  [FE]            ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {      [BUGGY]  _reportError( "Current  token( "+getClass().getName()  + ")not  a  value. ",  stackSize);  [BUGGY]      pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	261	261	2	replace	_reportError( "Current  token( "+getClass().getName()  + ")not  a  value. ",  stackSize);	  _reportError(   "Current    token(   "+getClass().getName()    +   ")not    a    value   ",    stackSize);    	non-compiled	[CE]  cannot  find  symbol	204	None	replace
833	[BUG]  [BUGGY]  _reportError( "Current  token( "+getClass().getName()  + ")not  a  value, ",  stackSize);  [CE]  cannot  find  symbol  [FE]              ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {      [BUGGY]  _reportError( "Current  token( "+getClass().getName()  + ")not  a  value, ",  stackSize);  [BUGGY]      pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	261	261	2	replace	_reportError( "Current  token( "+getClass().getName()  + ")not  a  value, ",  stackSize);	  _reportError(   "Current    token(   "+getClass().getName()    +   ")not    a    value   ",    stackSize);    	non-compiled	[CE]  cannot  find  symbol	204	None	replace
834	[BUG]  [BUGGY]  [FE]  IllegalArgumentException  [FE]    IllegalArgumentException    [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {      [BUGGY]  if(stackSize  >  1)  {  popStack();  }  else  {  throw  new  IllegalArgumentException(   "   ");  }  if(stackSize  >  1)  {  popStack();  }  else  {  throw  new  IllegalArgumentException( "   ");  }  [BUGGY]      pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	261	261	2	add	if(stackSize    >    1)    {    popStack();    }    else    {    throw    new    IllegalArgumentException(   "   ");    }    if(stackSize  >  1)  {  popStack();  }  else  {  throw  new  IllegalArgumentException( "   ");  }	  	compilable	  [FE]  IllegalArgumentException  	175	2	add
835	[BUG]  [BUGGY]  if(stackSize  >  1)  {  popStack();  }  else  {  throw  new  IllegalArgumentException(   "   ");  }  if(stackSize  >  1)  {  popStack();  }  else  {  throw  new  IllegalArgumentException( "   ");  }  [FE]  IllegalArgumentException  [FE]    IllegalArgumentException    [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {      [BUGGY]  if(stackSize  >  1)  {  popStack();  }  else  {  throw  new  IllegalArgumentException(   "   ");  }  if(stackSize  >  1)  {  popStack();  }  else  {  throw  new  IllegalArgumentException( "   ");  }  [BUGGY]      pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	261	261	2	replace	if(stackSize    >    1)    {    popStack();    }    else    {    throw    new    IllegalArgumentException(   "   ");    }    if(stackSize  >  1)  {  popStack();  }  else  {  throw  new  IllegalArgumentException( "   ");  }	  	compilable	  [FE]  IllegalArgumentException  	175	2	add
836	[BUG]  [BUGGY]  if(stackSize  >  1)  {  popStack();  }  else  {  throw  new  IllegalArgumentException(   "   ");  }  if(stackSize  >  1)  {  popStack();  }  else  {  throw  new  IllegalArgumentException( " ".);  }  [CE]  <identifier>  expected  [FE]      IllegalArgumentException    [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {      [BUGGY]  if(stackSize  >  1)  {  popStack();  }  else  {  throw  new  IllegalArgumentException(   "   ");  }  if(stackSize  >  1)  {  popStack();  }  else  {  throw  new  IllegalArgumentException( " ".);  }  [BUGGY]      pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	261	261	2	replace	if(stackSize    >    1)    {    popStack();    }    else    {    throw    new    IllegalArgumentException(   "   ");    }    if(stackSize  >  1)  {  popStack();  }  else  {  throw  new  IllegalArgumentException( " ".);  }	  	non-compiled	[CE]  <identifier>  expected	175	None	add
837	[BUG]  [BUGGY]  [FE]  IllegalArgumentException  [FE]        IllegalArgumentException    [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {      [BUGGY]  if(stackSize  >  1)  {  popStack();  }  else  {  throw  new  IllegalArgumentException(   "   ");  }  if(stackSize  >  1)  {  popStack();  }  else  {  throw  new  IllegalArgumentException( ". ");  }  [BUGGY]      pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	261	261	2	add	if(stackSize    >    1)    {    popStack();    }    else    {    throw    new    IllegalArgumentException(   "   ");    }    if(stackSize  >  1)  {  popStack();  }  else  {  throw  new  IllegalArgumentException( ". ");  }	  	compilable	  [FE]  IllegalArgumentException  	175	2	add
838	[BUG]  [BUGGY]  if(stackSize  >  1)  {  popStack();  }  else  {  throw  new  IllegalArgumentException(   "   ");  }  if(stackSize  >  1)  {  popStack();  }  else  {  throw  new  IllegalArgumentException( ". ");  }  [FE]  IllegalArgumentException  [FE]        IllegalArgumentException    [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {      [BUGGY]  if(stackSize  >  1)  {  popStack();  }  else  {  throw  new  IllegalArgumentException(   "   ");  }  if(stackSize  >  1)  {  popStack();  }  else  {  throw  new  IllegalArgumentException( ". ");  }  [BUGGY]      pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	261	261	2	replace	if(stackSize    >    1)    {    popStack();    }    else    {    throw    new    IllegalArgumentException(   "   ");    }    if(stackSize  >  1)  {  popStack();  }  else  {  throw  new  IllegalArgumentException( ". ");  }	  	compilable	  [FE]  IllegalArgumentException  	175	2	add
839	[BUG]  [BUGGY]  [FE]  IllegalArgumentException  [FE]          IllegalArgumentException    [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {      [BUGGY]  if(stackSize  >  1)  {  popStack();  }  else  {  throw  new  IllegalArgumentException(   "   ");  }  if(stackSize  >  1)  {  popStack();  }  else  {  throw  new  IllegalArgumentException( "... ");  }  [BUGGY]      pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	261	261	2	add	if(stackSize    >    1)    {    popStack();    }    else    {    throw    new    IllegalArgumentException(   "   ");    }    if(stackSize  >  1)  {  popStack();  }  else  {  throw  new  IllegalArgumentException( "... ");  }	  	compilable	  [FE]  IllegalArgumentException  	175	2	add
840	[BUG]  [BUGGY]  if(stackSize  >  1)  {  popStack();  }  else  {  throw  new  IllegalArgumentException(   "   ");  }  if(stackSize  >  1)  {  popStack();  }  else  {  throw  new  IllegalArgumentException( "... ");  }  [FE]  IllegalArgumentException  [FE]          IllegalArgumentException    [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {      [BUGGY]  if(stackSize  >  1)  {  popStack();  }  else  {  throw  new  IllegalArgumentException(   "   ");  }  if(stackSize  >  1)  {  popStack();  }  else  {  throw  new  IllegalArgumentException( "... ");  }  [BUGGY]      pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	261	261	2	replace	if(stackSize    >    1)    {    popStack();    }    else    {    throw    new    IllegalArgumentException(   "   ");    }    if(stackSize  >  1)  {  popStack();  }  else  {  throw  new  IllegalArgumentException( "... ");  }	  	compilable	  [FE]  IllegalArgumentException  	175	2	add
841	[BUG]  [BUGGY]  StackSize  >  0)  {  skipStack();  }  else  {  skipStack();  }  [CE]  not  a  statement  [FE]              ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {      [BUGGY]  StackSize  >  0)  {  skipStack();  }  else  {  skipStack();  }  [BUGGY]      pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	261	261	2	replace	StackSize  >  0)  {  skipStack();  }  else  {  skipStack();  }	  if(stackSize    >    0)    {    skipStack();    }    else    {    skipStack();    }    	non-compiled	[CE]  not  a  statement	164	None	replace
842	[BUG]  [BUGGY]  if(stackSize  >  1)  {  skipStack();  }  else  {  skipStack();  }  [CE]  cannot  find  symbol  [FE]                ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {      [BUGGY]  if(stackSize  >  1)  {  skipStack();  }  else  {  skipStack();  }  [BUGGY]      pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	261	261	2	replace	if(stackSize  >  1)  {  skipStack();  }  else  {  skipStack();  }	  if(stackSize    >    0)    {    skipStack();    }    else    {    skipStack();    }    	non-compiled	[CE]  cannot  find  symbol	164	None	replace
843	[BUG]  [BUGGY]  ackSize  >  0)  {  skipStack();  }  else  {  skipStack();  }  [CE]  not  a  statement  [FE]                  ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {      [BUGGY]  ackSize  >  0)  {  skipStack();  }  else  {  skipStack();  }  [BUGGY]      pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	261	261	2	replace	ackSize  >  0)  {  skipStack();  }  else  {  skipStack();  }	  if(stackSize    >    0)    {    skipStack();    }    else    {    skipStack();    }    	non-compiled	[CE]  not  a  statement	164	None	replace
844	[BUG]  [BUGGY]  if(stackSize  <  =  0)  {  skipStack();  }  else  {  skipStack();  }  [CE]  illegal  start  of  expression  [FE]                    ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {      [BUGGY]  if(stackSize  <  =  0)  {  skipStack();  }  else  {  skipStack();  }  [BUGGY]      pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	261	261	2	replace	if(stackSize  <  =  0)  {  skipStack();  }  else  {  skipStack();  }	  if(stackSize    >    0)    {    skipStack();    }    else    {    skipStack();    }    	non-compiled	[CE]  illegal  start  of  expression	164	None	replace
845	[BUG]  [BUGGY]  if(stackSize  <  0)  {  skipStack();  }  else  {  skipStack();  }  [CE]  cannot  find  symbol  [FE]                      ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {      [BUGGY]  if(stackSize  <  0)  {  skipStack();  }  else  {  skipStack();  }  [BUGGY]      pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	261	261	2	replace	if(stackSize  <  0)  {  skipStack();  }  else  {  skipStack();  }	  if(stackSize    >    0)    {    skipStack();    }    else    {    skipStack();    }    	non-compiled	[CE]  cannot  find  symbol	164	None	replace
846	[BUG]  [BUGGY]  if(stackSize  >  1)  {  skipStack();  }  [CE]  cannot  find  symbol  [FE]                        ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {      [BUGGY]  if(stackSize  >  1)  {  skipStack();  }  [BUGGY]      pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	261	261	2	replace	if(stackSize  >  1)  {  skipStack();  }	  if(stackSize    >    0)    {    skipStack();    }    else    {    skipStack();    }    	non-compiled	[CE]  cannot  find  symbol	164	None	replace
847	[BUG]  [BUGGY]  PathToken.VALUE_NULL  =  new  PathToken(JsonToken.FIELD_NAME);  pathNames[stackSize  -  1]  =  null;  [CE]  cannot  find  symbol  PathToken  [FE]                  ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {      [BUGGY]  PathToken.VALUE_NULL  =  new  PathToken(JsonToken.FIELD_NAME);  pathNames[stackSize  -  1]  =  null;  [BUGGY]      pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	261	261	2	replace	PathToken.VALUE_NULL  =  new  PathToken(JsonToken.FIELD_NAME);  pathNames[stackSize  -  1]  =  null;	  if(stackSize    >    0)    {    nextName();    }    else    {    JsonToken.VALUE_NULL    =    new    JsonToken(JsonToken.FIELD_NAME);    pathNames[stackSize    -    1]    =    null;    }    	non-compiled	[CE]  cannot  find  symbol  PathToken	189	None	replace
848	[BUG]  [BUGGY]  PathToken.VALUE_NULL  =  new  PathToken(JsonToken.FIELD_NAME);  pathNames[stackSize  -  1]  =  null;  }  [CE]  ']'  expected  [FE]                    ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {      [BUGGY]  PathToken.VALUE_NULL  =  new  PathToken(JsonToken.FIELD_NAME);  pathNames[stackSize  -  1]  =  null;  }  [BUGGY]      pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	261	261	2	replace	PathToken.VALUE_NULL  =  new  PathToken(JsonToken.FIELD_NAME);  pathNames[stackSize  -  1]  =  null;  }	  if(stackSize    >    0)    {    nextName();    }    else    {    JsonToken.VALUE_NULL    =    new    JsonToken(JsonToken.FIELD_NAME);    pathNames[stackSize    -    1]    =    null;    }    	non-compiled	[CE]  ']'  expected	189	None	replace
849	[BUG]  [BUGGY]  validateValue(null,  null);  [CE]  cannot  find  symbol  [FE]                      ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {      [BUGGY]  validateValue(null,  null);  [BUGGY]      pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	261	261	2	replace	validateValue(null,  null);	  validateValue(null);    	non-compiled	[CE]  cannot  find  symbol	103	None	replace
850	[BUG]  [BUGGY]  validateValue(null,  SENTINEL_CLOSED);  [CE]  cannot  find  symbol  [FE]                        ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {      [BUGGY]  validateValue(null,  SENTINEL_CLOSED);  [BUGGY]      pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	261	261	2	replace	validateValue(null,  SENTINEL_CLOSED);	  validateValue(null);    	non-compiled	[CE]  cannot  find  symbol	103	None	replace
851	[BUG]  [BUGGY]  validateValue(null,  JsonToken.VALUE_NULL);  [CE]  cannot  find  symbol  VALUE_NULL  [FE]                          ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {      [BUGGY]  validateValue(null,  JsonToken.VALUE_NULL);  [BUGGY]      pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	261	261	2	replace	validateValue(null,  JsonToken.VALUE_NULL);	  validateValue(null);    	non-compiled	[CE]  cannot  find  symbol  VALUE_NULL	103	None	replace
852	[BUG]  [BUGGY]  validateValue(null,  SENTINEL_READER);  [CE]  cannot  find  symbol  SENTINEL_READER  [FE]                            ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {      [BUGGY]  validateValue(null,  SENTINEL_READER);  [BUGGY]      pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	261	261	2	replace	validateValue(null,  SENTINEL_READER);	  validateValue(null);    	non-compiled	[CE]  cannot  find  symbol  SENTINEL_READER	103	None	replace
853	[BUG]  [BUGGY]  [FE]  ArrayIndexOutOfBoundsException  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {      [BUGGY]  if(stackSize    >    0)    {    popStack();    }    if(stackSize  >  0)  {  popStack();  }  if(stackSize  >  0)  {  popStack();  }  if(stackSize  >  0)  {  popStack();  }  [BUGGY]      pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	261	261	2	add	if(stackSize        >        0)        {        popStack();        }        if(stackSize    >    0)    {    popStack();    }    if(stackSize  >  0)  {  popStack();  }  if(stackSize  >  0)  {  popStack();  }	  	compilable	  [FE]  ArrayIndexOutOfBoundsException  	84	2	add
854	[BUG]  [BUGGY]  if(stackSize    >    0)    {    popStack();    }    if(stackSize  >  0)  {  popStack();  }  if(stackSize  >  0)  {  popStack();  }  if(stackSize  >  0)  {  popStack();  }  [FE]  ArrayIndexOutOfBoundsException  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {      [BUGGY]  if(stackSize    >    0)    {    popStack();    }    if(stackSize  >  0)  {  popStack();  }  if(stackSize  >  0)  {  popStack();  }  if(stackSize  >  0)  {  popStack();  }  [BUGGY]      pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	261	261	2	replace	if(stackSize        >        0)        {        popStack();        }        if(stackSize    >    0)    {    popStack();    }    if(stackSize  >  0)  {  popStack();  }  if(stackSize  >  0)  {  popStack();  }	  	compilable	  [FE]  ArrayIndexOutOfBoundsException  	84	2	add
855	[BUG]  [BUGGY]  [FE]  ArrayIndexOutOfBoundsException  [FE]      ArrayIndexOutOfBoundsException    [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {      [BUGGY]  if(stackSize    >    0)    {    popStack();    }    if(stackSize  >  0)  {  popStack();  }  if(stackSize  >  0)  {  popStack();  }  if(stackSize  >  0)  {  popStack();  }  if(stackSize  >  0)  {  popStack();  }  [BUGGY]      pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	261	261	2	add	if(stackSize        >        0)        {        popStack();        }        if(stackSize    >    0)    {    popStack();    }    if(stackSize  >  0)  {  popStack();  }  if(stackSize  >  0)  {  popStack();  }  if(stackSize  >  0)  {  popStack();  }	  	compilable	  [FE]  ArrayIndexOutOfBoundsException  	84	2	add
856	[BUG]  [BUGGY]  if(stackSize    >    0)    {    popStack();    }    if(stackSize  >  0)  {  popStack();  }  if(stackSize  >  0)  {  popStack();  }  if(stackSize  >  0)  {  popStack();  }  if(stackSize  >  0)  {  popStack();  }  [FE]  ArrayIndexOutOfBoundsException  [FE]      ArrayIndexOutOfBoundsException    [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {      [BUGGY]  if(stackSize    >    0)    {    popStack();    }    if(stackSize  >  0)  {  popStack();  }  if(stackSize  >  0)  {  popStack();  }  if(stackSize  >  0)  {  popStack();  }  if(stackSize  >  0)  {  popStack();  }  [BUGGY]      pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	261	261	2	replace	if(stackSize        >        0)        {        popStack();        }        if(stackSize    >    0)    {    popStack();    }    if(stackSize  >  0)  {  popStack();  }  if(stackSize  >  0)  {  popStack();  }  if(stackSize  >  0)  {  popStack();  }	  	compilable	  [FE]  ArrayIndexOutOfBoundsException  	84	2	add
857	[BUG]  [BUGGY]  if(stackSize    >    0)    {    popStack();    }    if(stackSize  >  0)  {  popStack();  }  if(stackSize  >  0)  {  popStack();  }  if(stackSize  >  0)  {  [CE]  ';'  expected  [FE]        ArrayIndexOutOfBoundsException    [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {      [BUGGY]  if(stackSize    >    0)    {    popStack();    }    if(stackSize  >  0)  {  popStack();  }  if(stackSize  >  0)  {  popStack();  }  if(stackSize  >  0)  {  [BUGGY]      pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	261	261	2	replace	if(stackSize        >        0)        {        popStack();        }        if(stackSize    >    0)    {    popStack();    }    if(stackSize  >  0)  {  popStack();  }  if(stackSize  >  0)  {	  	non-compiled	[CE]  ';'  expected	84	None	add
858	[BUG]  [BUGGY]  [FE]  ArrayIndexOutOfBoundsException  [FE]          ArrayIndexOutOfBoundsException    [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {      [BUGGY]  if(stackSize    >    0)    {    popStack();    }    if(stackSize  >  0)  {  popStack();  }  if(stackSize  >  0)  {  popStack();  }  if(stackSize  >  0)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	261	261	2	add	if(stackSize        >        0)        {        popStack();        }        if(stackSize    >    0)    {    popStack();    }    if(stackSize  >  0)  {  popStack();  }  if(stackSize  >  0)  {  throw  new  IllegalArgumentException( " ");  }	  	compilable	  [FE]  ArrayIndexOutOfBoundsException  	84	2	add
859	[BUG]  [BUGGY]  if(stackSize    >    0)    {    popStack();    }    if(stackSize  >  0)  {  popStack();  }  if(stackSize  >  0)  {  popStack();  }  if(stackSize  >  0)  {  throw  new  IllegalArgumentException( " ");  }  [FE]  ArrayIndexOutOfBoundsException  [FE]          ArrayIndexOutOfBoundsException    [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {      [BUGGY]  if(stackSize    >    0)    {    popStack();    }    if(stackSize  >  0)  {  popStack();  }  if(stackSize  >  0)  {  popStack();  }  if(stackSize  >  0)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	261	261	2	replace	if(stackSize        >        0)        {        popStack();        }        if(stackSize    >    0)    {    popStack();    }    if(stackSize  >  0)  {  popStack();  }  if(stackSize  >  0)  {  throw  new  IllegalArgumentException( " ");  }	  	compilable	  [FE]  ArrayIndexOutOfBoundsException  	84	2	add
860	[BUG]  [BUGGY]  if(stackSize    >    0)    {    popStack();    }    if(stackSize  >  0)  {  popStack();  }  if(stackSize  >  0)  {  popStack();  }  if(stackSize  >  0)  {  popStack();  }  else  {  [CE]  ';'  expected  [FE]            ArrayIndexOutOfBoundsException    [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {      [BUGGY]  if(stackSize    >    0)    {    popStack();    }    if(stackSize  >  0)  {  popStack();  }  if(stackSize  >  0)  {  popStack();  }  if(stackSize  >  0)  {  popStack();  }  else  {  [BUGGY]      pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	261	261	2	replace	if(stackSize        >        0)        {        popStack();        }        if(stackSize    >    0)    {    popStack();    }    if(stackSize  >  0)  {  popStack();  }  if(stackSize  >  0)  {  popStack();  }  else  {	  	non-compiled	[CE]  ';'  expected	84	None	add
861	[BUG]  [BUGGY]  [FE]  IllegalArgumentException  [FE]              ArrayIndexOutOfBoundsException    [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {      [BUGGY]  if(stackSize    >    0)    {    popStack();    }    if(stackSize  >  0)  {  popStack();  }  if(stackSize  >  0)  {  popStack();  }  if(stackSize  >  0)  {  popStack();  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	261	261	2	add	if(stackSize        >        0)        {        popStack();        }        if(stackSize    >    0)    {    popStack();    }    if(stackSize  >  0)  {  popStack();  }  if(stackSize  >  0)  {  popStack();  }  else  {  throw  new  IllegalArgumentException( " ");  }	  	compilable	  [FE]  IllegalArgumentException  	84	2	add
862	[BUG]  [BUGGY]  if(stackSize    >    0)    {    popStack();    }    if(stackSize  >  0)  {  popStack();  }  if(stackSize  >  0)  {  popStack();  }  if(stackSize  >  0)  {  popStack();  }  else  {  throw  new  IllegalArgumentException( " ");  }  [FE]  IllegalArgumentException  [FE]              ArrayIndexOutOfBoundsException    [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {      [BUGGY]  if(stackSize    >    0)    {    popStack();    }    if(stackSize  >  0)  {  popStack();  }  if(stackSize  >  0)  {  popStack();  }  if(stackSize  >  0)  {  popStack();  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	261	261	2	replace	if(stackSize        >        0)        {        popStack();        }        if(stackSize    >    0)    {    popStack();    }    if(stackSize  >  0)  {  popStack();  }  if(stackSize  >  0)  {  popStack();  }  else  {  throw  new  IllegalArgumentException( " ");  }	  	compilable	  [FE]  IllegalArgumentException  	84	2	add
863	[BUG]  [BUGGY]  if(stackSize    >    0)    {    popStack();    }    if(stackSize  >  0)  {  popStack();  }  if(stackSize  >  0)  {  popStack();  }  if(stackSize  >  0)  {  getStack();  }  [CE]  cannot  find  symbol  [FE]                ArrayIndexOutOfBoundsException    [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {      [BUGGY]  if(stackSize    >    0)    {    popStack();    }    if(stackSize  >  0)  {  popStack();  }  if(stackSize  >  0)  {  popStack();  }  if(stackSize  >  0)  {  getStack();  }  [BUGGY]      pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	261	261	2	replace	if(stackSize        >        0)        {        popStack();        }        if(stackSize    >    0)    {    popStack();    }    if(stackSize  >  0)  {  popStack();  }  if(stackSize  >  0)  {  getStack();  }	  	non-compiled	[CE]  cannot  find  symbol	84	None	add
864	[BUG]  [BUGGY]  _reportError( "Current  token( "+JsonToken.VALUE_NUMBER_ERROR+ ")expected  a  value ");  [CE]  cannot  find  symbol  VALUE_NUMBER_ERROR  [FE]                    ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {      [BUGGY]  _reportError( "Current  token( "+JsonToken.VALUE_NUMBER_ERROR+ ")expected  a  value ");  [BUGGY]      pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	261	261	2	replace	_reportError( "Current  token( "+JsonToken.VALUE_NUMBER_ERROR+ ")expected  a  value ");	  _reportError(   "Current    token(   "+JsonToken.VALUE_NUMBER_ERROR+   ")not    a    value   ");    	non-compiled	[CE]  cannot  find  symbol  VALUE_NUMBER_ERROR	127	None	replace
865	[BUG]  [BUGGY]  _reportError( "Current  token( "+JsonToken.VALUE_NUMBER_ERROR+ ")not  a  value. ");  [CE]  cannot  find  symbol  VALUE_NUMBER_ERROR  [FE]                      ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {      [BUGGY]  _reportError( "Current  token( "+JsonToken.VALUE_NUMBER_ERROR+ ")not  a  value. ");  [BUGGY]      pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	261	261	2	replace	_reportError( "Current  token( "+JsonToken.VALUE_NUMBER_ERROR+ ")not  a  value. ");	  _reportError(   "Current    token(   "+JsonToken.VALUE_NUMBER_ERROR+   ")not    a    value   ");    	non-compiled	[CE]  cannot  find  symbol  VALUE_NUMBER_ERROR	127	None	replace
866	[BUG]  [BUGGY]  _reportError( "Current  token( "+JsonToken.STRING+ ")not  a  value. ");  [CE]  cannot  find  symbol  [FE]                    ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {      [BUGGY]  _reportError( "Current  token( "+JsonToken.STRING+ ")not  a  value. ");  [BUGGY]      pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	261	261	2	replace	_reportError( "Current  token( "+JsonToken.STRING+ ")not  a  value. ");	  _reportError(   "Current    token(   "+JsonToken.STRING+   ")not    a    value   ");    	non-compiled	[CE]  cannot  find  symbol	220	None	replace
867	[BUG]  [BUGGY]  _reportError( "Current  token( "+JsonToken.STRING+ ")expected  a  value ");  [CE]  cannot  find  symbol  [FE]                      ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {      [BUGGY]  _reportError( "Current  token( "+JsonToken.STRING+ ")expected  a  value ");  [BUGGY]      pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	261	261	2	replace	_reportError( "Current  token( "+JsonToken.STRING+ ")expected  a  value ");	  _reportError(   "Current    token(   "+JsonToken.STRING+   ")not    a    value   ");    	non-compiled	[CE]  cannot  find  symbol	220	None	replace
868	[BUG]  [BUGGY]  _reportError( "Current  token( "+JsonToken.STRING+ ")Not  a  value ");  [CE]  cannot  find  symbol  [FE]                        ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {      [BUGGY]  _reportError( "Current  token( "+JsonToken.STRING+ ")Not  a  value ");  [BUGGY]      pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	261	261	2	replace	_reportError( "Current  token( "+JsonToken.STRING+ ")Not  a  value ");	  _reportError(   "Current    token(   "+JsonToken.STRING+   ")not    a    value   ");    	non-compiled	[CE]  cannot  find  symbol	220	None	replace
869	[BUG]  [BUGGY]  _reportError( "Current  token( "+JsonToken.STRING+ ")is  not  a  value ");  [CE]  cannot  find  symbol  [FE]                          ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {      [BUGGY]  _reportError( "Current  token( "+JsonToken.STRING+ ")is  not  a  value ");  [BUGGY]      pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	261	261	2	replace	_reportError( "Current  token( "+JsonToken.STRING+ ")is  not  a  value ");	  _reportError(   "Current    token(   "+JsonToken.STRING+   ")not    a    value   ");    	non-compiled	[CE]  cannot  find  symbol	220	None	replace
870	[BUG]  [BUGGY]  append(stackSize  -  1)  {  skipStack();  }  else  {  skipStack();  }  [CE]  ';'  expected  [FE]                  ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {      [BUGGY]  append(stackSize  -  1)  {  skipStack();  }  else  {  skipStack();  }  [BUGGY]      pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	261	261	2	replace	append(stackSize  -  1)  {  skipStack();  }  else  {  skipStack();  }	  append(stackSize    -    1)    {    popStack();    }    else    {    skipStack();    }    	non-compiled	[CE]  ';'  expected	166	None	replace
871	[BUG]  [BUGGY]  append(stackSize  -  1])  {  popStack();  }  else  {  skipStack();  }  [CE]  ')'  expected  [FE]                    ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {      [BUGGY]  append(stackSize  -  1])  {  popStack();  }  else  {  skipStack();  }  [BUGGY]      pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	261	261	2	replace	append(stackSize  -  1])  {  popStack();  }  else  {  skipStack();  }	  append(stackSize    -    1)    {    popStack();    }    else    {    skipStack();    }    	non-compiled	[CE]  ')'  expected	166	None	replace
872	[BUG]  [BUGGY]  append(stackSize  -  1)  {  nextName();  }  else  {  skipStack();  }  [CE]  ';'  expected  [FE]                      ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {      [BUGGY]  append(stackSize  -  1)  {  nextName();  }  else  {  skipStack();  }  [BUGGY]      pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	261	261	2	replace	append(stackSize  -  1)  {  nextName();  }  else  {  skipStack();  }	  append(stackSize    -    1)    {    popStack();    }    else    {    skipStack();    }    	non-compiled	[CE]  ';'  expected	166	None	replace
873	[BUG]  [BUGGY]  append(stackSize  -  1);  [CE]  cannot  find  symbol  [FE]                        ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {      [BUGGY]  append(stackSize  -  1);  [BUGGY]      pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	261	261	2	replace	append(stackSize  -  1);	  append(stackSize    -    1)    {    popStack();    }    else    {    skipStack();    }    	non-compiled	[CE]  cannot  find  symbol	166	None	replace
874	[BUG]  [BUGGY]  [FE]  ArrayIndexOutOfBoundsException  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {      [BUGGY]  if(stackSize    >    0)    {    popStack();    }    if(stackSize  >  0)  {  popStack();  System.arraycopy(pathNames,  0,  pathNames,  1,  stackSize);  }  if(stackSize  >  0)  {  popStack();  }  if(stackSize  >  0)  {  popStack();  System.arraycopy(pathNames,  0,  pathNames,  1,  stackSize);  }  [BUGGY]      pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	261	261	2	add	if(stackSize        >        0)        {        popStack();        }        if(stackSize    >    0)    {    popStack();    System.arraycopy(pathNames,    0,    pathNames,    1,    stackSize);    }    if(stackSize  >  0)  {  popStack();  }  if(stackSize  >  0)  {  popStack();  System.arraycopy(pathNames,  0,  pathNames,  1,  stackSize);  }	  	compilable	  [FE]  ArrayIndexOutOfBoundsException  	160	2	add
875	[BUG]  [BUGGY]  if(stackSize    >    0)    {    popStack();    }    if(stackSize  >  0)  {  popStack();  System.arraycopy(pathNames,  0,  pathNames,  1,  stackSize);  }  if(stackSize  >  0)  {  popStack();  }  if(stackSize  >  0)  {  popStack();  System.arraycopy(pathNames,  0,  pathNames,  1,  stackSize);  }  [FE]  ArrayIndexOutOfBoundsException  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {      [BUGGY]  if(stackSize    >    0)    {    popStack();    }    if(stackSize  >  0)  {  popStack();  System.arraycopy(pathNames,  0,  pathNames,  1,  stackSize);  }  if(stackSize  >  0)  {  popStack();  }  if(stackSize  >  0)  {  popStack();  System.arraycopy(pathNames,  0,  pathNames,  1,  stackSize);  }  [BUGGY]      pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	261	261	2	replace	if(stackSize        >        0)        {        popStack();        }        if(stackSize    >    0)    {    popStack();    System.arraycopy(pathNames,    0,    pathNames,    1,    stackSize);    }    if(stackSize  >  0)  {  popStack();  }  if(stackSize  >  0)  {  popStack();  System.arraycopy(pathNames,  0,  pathNames,  1,  stackSize);  }	  	compilable	  [FE]  ArrayIndexOutOfBoundsException  	160	2	add
876	[BUG]  [BUGGY]  [FE]  ArrayIndexOutOfBoundsException  [FE]      ArrayIndexOutOfBoundsException    [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {      [BUGGY]  if(stackSize    >    0)    {    popStack();    }    if(stackSize  >  0)  {  popStack();  System.arraycopy(pathNames,  0,  pathNames,  1,  stackSize);  }  if(stackSize  >  0)  {  popStack();  System.arraycopy(pathNames,  0,  pathNames,  1,  stackSize);  }  [BUGGY]      pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	261	261	2	add	if(stackSize        >        0)        {        popStack();        }        if(stackSize    >    0)    {    popStack();    System.arraycopy(pathNames,    0,    pathNames,    1,    stackSize);    }    if(stackSize  >  0)  {  popStack();  System.arraycopy(pathNames,  0,  pathNames,  1,  stackSize);  }	  	compilable	  [FE]  ArrayIndexOutOfBoundsException  	160	2	add
877	[BUG]  [BUGGY]  if(stackSize    >    0)    {    popStack();    }    if(stackSize  >  0)  {  popStack();  System.arraycopy(pathNames,  0,  pathNames,  1,  stackSize);  }  if(stackSize  >  0)  {  popStack();  System.arraycopy(pathNames,  0,  pathNames,  1,  stackSize);  }  [FE]  ArrayIndexOutOfBoundsException  [FE]      ArrayIndexOutOfBoundsException    [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {      [BUGGY]  if(stackSize    >    0)    {    popStack();    }    if(stackSize  >  0)  {  popStack();  System.arraycopy(pathNames,  0,  pathNames,  1,  stackSize);  }  if(stackSize  >  0)  {  popStack();  System.arraycopy(pathNames,  0,  pathNames,  1,  stackSize);  }  [BUGGY]      pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	261	261	2	replace	if(stackSize        >        0)        {        popStack();        }        if(stackSize    >    0)    {    popStack();    System.arraycopy(pathNames,    0,    pathNames,    1,    stackSize);    }    if(stackSize  >  0)  {  popStack();  System.arraycopy(pathNames,  0,  pathNames,  1,  stackSize);  }	  	compilable	  [FE]  ArrayIndexOutOfBoundsException  	160	2	add
878	[BUG]  [BUGGY]  if(stackSize    >    0)    {    popStack();    }    if(stackSize  >  0)  {  popStack();  System.arraycopy(pathNames,  0,  pathNames,  1,  stackSize);  }  if(stackSize  >  0)  {  popStack();  }  if(stackSize  >  0)  {  getStack();  System.arraycopy(pathNames,  0,  pathNames,  1,  stackSize);  }  [CE]  cannot  find  symbol  [FE]        ArrayIndexOutOfBoundsException    [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {      [BUGGY]  if(stackSize    >    0)    {    popStack();    }    if(stackSize  >  0)  {  popStack();  System.arraycopy(pathNames,  0,  pathNames,  1,  stackSize);  }  if(stackSize  >  0)  {  popStack();  }  if(stackSize  >  0)  {  getStack();  System.arraycopy(pathNames,  0,  pathNames,  1,  stackSize);  }  [BUGGY]      pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	261	261	2	replace	if(stackSize        >        0)        {        popStack();        }        if(stackSize    >    0)    {    popStack();    System.arraycopy(pathNames,    0,    pathNames,    1,    stackSize);    }    if(stackSize  >  0)  {  popStack();  }  if(stackSize  >  0)  {  getStack();  System.arraycopy(pathNames,  0,  pathNames,  1,  stackSize);  }	  	non-compiled	[CE]  cannot  find  symbol	160	None	add
879	[BUG]  [BUGGY]  [FE]  ArrayIndexOutOfBoundsException  [FE]          ArrayIndexOutOfBoundsException    [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {      [BUGGY]  if(stackSize    >    0)    {    popStack();    }    if(stackSize  >  0)  {  popStack();  System.arraycopy(pathNames,  0,  pathNames,  1,  stackSize);  }  if(stackSize  >  0)  {  popStack();  }  if(stackSize  >  0)  {  popStack();  System.arraycopy(pathNames,  1,  pathNames,  1,  stackSize);  }  [BUGGY]      pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	261	261	2	add	if(stackSize        >        0)        {        popStack();        }        if(stackSize    >    0)    {    popStack();    System.arraycopy(pathNames,    0,    pathNames,    1,    stackSize);    }    if(stackSize  >  0)  {  popStack();  }  if(stackSize  >  0)  {  popStack();  System.arraycopy(pathNames,  1,  pathNames,  1,  stackSize);  }	  	compilable	  [FE]  ArrayIndexOutOfBoundsException  	160	2	add
880	[BUG]  [BUGGY]  if(stackSize    >    0)    {    popStack();    }    if(stackSize  >  0)  {  popStack();  System.arraycopy(pathNames,  0,  pathNames,  1,  stackSize);  }  if(stackSize  >  0)  {  popStack();  }  if(stackSize  >  0)  {  popStack();  System.arraycopy(pathNames,  1,  pathNames,  1,  stackSize);  }  [FE]  ArrayIndexOutOfBoundsException  [FE]          ArrayIndexOutOfBoundsException    [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {      [BUGGY]  if(stackSize    >    0)    {    popStack();    }    if(stackSize  >  0)  {  popStack();  System.arraycopy(pathNames,  0,  pathNames,  1,  stackSize);  }  if(stackSize  >  0)  {  popStack();  }  if(stackSize  >  0)  {  popStack();  System.arraycopy(pathNames,  1,  pathNames,  1,  stackSize);  }  [BUGGY]      pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	261	261	2	replace	if(stackSize        >        0)        {        popStack();        }        if(stackSize    >    0)    {    popStack();    System.arraycopy(pathNames,    0,    pathNames,    1,    stackSize);    }    if(stackSize  >  0)  {  popStack();  }  if(stackSize  >  0)  {  popStack();  System.arraycopy(pathNames,  1,  pathNames,  1,  stackSize);  }	  	compilable	  [FE]  ArrayIndexOutOfBoundsException  	160	2	add
881	[BUG]  [BUGGY]  if(stackSize    >    0)    {    popStack();    }    if(stackSize  >  0)  {  popStack();  System.arraycopy(pathNames,  0,  pathNames,  1,  stackSize);  }  if(stackSize  >  0)  {  popStack();  }  if(stackSize  >  0)  {  skipStack();  System.arraycopy(pathNames,  0,  pathNames,  1,  stackSize);  }  [CE]  cannot  find  symbol  [FE]            ArrayIndexOutOfBoundsException    [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {      [BUGGY]  if(stackSize    >    0)    {    popStack();    }    if(stackSize  >  0)  {  popStack();  System.arraycopy(pathNames,  0,  pathNames,  1,  stackSize);  }  if(stackSize  >  0)  {  popStack();  }  if(stackSize  >  0)  {  skipStack();  System.arraycopy(pathNames,  0,  pathNames,  1,  stackSize);  }  [BUGGY]      pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	261	261	2	replace	if(stackSize        >        0)        {        popStack();        }        if(stackSize    >    0)    {    popStack();    System.arraycopy(pathNames,    0,    pathNames,    1,    stackSize);    }    if(stackSize  >  0)  {  popStack();  }  if(stackSize  >  0)  {  skipStack();  System.arraycopy(pathNames,  0,  pathNames,  1,  stackSize);  }	  	non-compiled	[CE]  cannot  find  symbol	160	None	add
882	[BUG]  [BUGGY]  validateValue(JsonToken.VALUE_EMBEDDED_ARRAY,  SENTINEL_CLOSED);  [CE]  cannot  find  symbol  VALUE_EMBEDDED_ARRAY  [FE]                      ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {      [BUGGY]  validateValue(JsonToken.VALUE_EMBEDDED_ARRAY,  SENTINEL_CLOSED);  [BUGGY]      pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	261	261	2	replace	validateValue(JsonToken.VALUE_EMBEDDED_ARRAY,  SENTINEL_CLOSED);	  validateValue(JsonToken.VALUE_EMBEDDED_ARRAY);    	non-compiled	[CE]  cannot  find  symbol  VALUE_EMBEDDED_ARRAY	97	None	replace
883	[BUG]  [BUGGY]  validateValue(JsonToken.VALUE_EMBEDDED_ARRAY,  JsonToken.END_OBJECT);  [CE]  cannot  find  symbol  VALUE_EMBEDDED_ARRAY  [FE]                        ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {      [BUGGY]  validateValue(JsonToken.VALUE_EMBEDDED_ARRAY,  JsonToken.END_OBJECT);  [BUGGY]      pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	261	261	2	replace	validateValue(JsonToken.VALUE_EMBEDDED_ARRAY,  JsonToken.END_OBJECT);	  validateValue(JsonToken.VALUE_EMBEDDED_ARRAY);    	non-compiled	[CE]  cannot  find  symbol  VALUE_EMBEDDED_ARRAY	97	None	replace
884	[BUG]  [BUGGY]  [FE]  ArrayIndexOutOfBoundsException  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {      [BUGGY]  if(stackSize    >    0)    {    popStack();    }    if(stackSize  >  0)  {  popStack();  return;  }  if(stackSize  >  0)  {  popStack();  }  if(stackSize  >  0)  {  popStack();  return;  }  [BUGGY]      pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	261	261	2	add	if(stackSize        >        0)        {        popStack();        }        if(stackSize    >    0)    {    popStack();    return;    }    if(stackSize  >  0)  {  popStack();  }  if(stackSize  >  0)  {  popStack();  return;  }	  	compilable	  [FE]  ArrayIndexOutOfBoundsException  	211	2	add
885	[BUG]  [BUGGY]  if(stackSize    >    0)    {    popStack();    }    if(stackSize  >  0)  {  popStack();  return;  }  if(stackSize  >  0)  {  popStack();  }  if(stackSize  >  0)  {  popStack();  return;  }  [FE]  ArrayIndexOutOfBoundsException  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {      [BUGGY]  if(stackSize    >    0)    {    popStack();    }    if(stackSize  >  0)  {  popStack();  return;  }  if(stackSize  >  0)  {  popStack();  }  if(stackSize  >  0)  {  popStack();  return;  }  [BUGGY]      pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	261	261	2	replace	if(stackSize        >        0)        {        popStack();        }        if(stackSize    >    0)    {    popStack();    return;    }    if(stackSize  >  0)  {  popStack();  }  if(stackSize  >  0)  {  popStack();  return;  }	  	compilable	  [FE]  ArrayIndexOutOfBoundsException  	211	2	add
886	[BUG]  [BUGGY]  [FE]  ArrayIndexOutOfBoundsException  [FE]      ArrayIndexOutOfBoundsException    [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {      [BUGGY]  if(stackSize    >    0)    {    popStack();    }    if(stackSize  >  0)  {  popStack();  return;  }  if(stackSize  >  0)  {  popStack();  return;  }  [BUGGY]      pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	261	261	2	add	if(stackSize        >        0)        {        popStack();        }        if(stackSize    >    0)    {    popStack();    return;    }    if(stackSize  >  0)  {  popStack();  return;  }	  	compilable	  [FE]  ArrayIndexOutOfBoundsException  	211	2	add
887	[BUG]  [BUGGY]  if(stackSize    >    0)    {    popStack();    }    if(stackSize  >  0)  {  popStack();  return;  }  if(stackSize  >  0)  {  popStack();  return;  }  [FE]  ArrayIndexOutOfBoundsException  [FE]      ArrayIndexOutOfBoundsException    [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {      [BUGGY]  if(stackSize    >    0)    {    popStack();    }    if(stackSize  >  0)  {  popStack();  return;  }  if(stackSize  >  0)  {  popStack();  return;  }  [BUGGY]      pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	261	261	2	replace	if(stackSize        >        0)        {        popStack();        }        if(stackSize    >    0)    {    popStack();    return;    }    if(stackSize  >  0)  {  popStack();  return;  }	  	compilable	  [FE]  ArrayIndexOutOfBoundsException  	211	2	add
888	[BUG]  [BUGGY]  if(stackSize    >    0)    {    popStack();    }    if(stackSize  >  0)  {  popStack();  return;  }  if(stackSize  >  0)  {  popStack();  }  if(stackSize  >  0)  {  [CE]  ';'  expected  [FE]        ArrayIndexOutOfBoundsException    [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {      [BUGGY]  if(stackSize    >    0)    {    popStack();    }    if(stackSize  >  0)  {  popStack();  return;  }  if(stackSize  >  0)  {  popStack();  }  if(stackSize  >  0)  {  [BUGGY]      pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	261	261	2	replace	if(stackSize        >        0)        {        popStack();        }        if(stackSize    >    0)    {    popStack();    return;    }    if(stackSize  >  0)  {  popStack();  }  if(stackSize  >  0)  {	  	non-compiled	[CE]  ';'  expected	211	None	add
889	[BUG]  [BUGGY]  [FE]  ArrayIndexOutOfBoundsException  [FE]          ArrayIndexOutOfBoundsException    [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {      [BUGGY]  if(stackSize    >    0)    {    popStack();    }    if(stackSize  >  0)  {  popStack();  return;  }  if(stackSize  >  0)  {  popStack();  }  if(stackSize  >  0)  {  return;  }  [BUGGY]      pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	261	261	2	add	if(stackSize        >        0)        {        popStack();        }        if(stackSize    >    0)    {    popStack();    return;    }    if(stackSize  >  0)  {  popStack();  }  if(stackSize  >  0)  {  return;  }	  	compilable	  [FE]  ArrayIndexOutOfBoundsException  	211	2	add
890	[BUG]  [BUGGY]  if(stackSize    >    0)    {    popStack();    }    if(stackSize  >  0)  {  popStack();  return;  }  if(stackSize  >  0)  {  popStack();  }  if(stackSize  >  0)  {  return;  }  [FE]  ArrayIndexOutOfBoundsException  [FE]          ArrayIndexOutOfBoundsException    [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {      [BUGGY]  if(stackSize    >    0)    {    popStack();    }    if(stackSize  >  0)  {  popStack();  return;  }  if(stackSize  >  0)  {  popStack();  }  if(stackSize  >  0)  {  return;  }  [BUGGY]      pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	261	261	2	replace	if(stackSize        >        0)        {        popStack();        }        if(stackSize    >    0)    {    popStack();    return;    }    if(stackSize  >  0)  {  popStack();  }  if(stackSize  >  0)  {  return;  }	  	compilable	  [FE]  ArrayIndexOutOfBoundsException  	211	2	add
891	[BUG]  [BUGGY]  [FE]  ArrayIndexOutOfBoundsException  [FE]            ArrayIndexOutOfBoundsException    [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {      [BUGGY]  if(stackSize    >    0)    {    popStack();    }    if(stackSize  >  0)  {  popStack();  return;  }  if(stackSize  >  0)  {  popStack();  }  if(stackSize  >  0)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	261	261	2	add	if(stackSize        >        0)        {        popStack();        }        if(stackSize    >    0)    {    popStack();    return;    }    if(stackSize  >  0)  {  popStack();  }  if(stackSize  >  0)  {  throw  new  IllegalArgumentException( " ");  }	  	compilable	  [FE]  ArrayIndexOutOfBoundsException  	211	2	add
892	[BUG]  [BUGGY]  if(stackSize    >    0)    {    popStack();    }    if(stackSize  >  0)  {  popStack();  return;  }  if(stackSize  >  0)  {  popStack();  }  if(stackSize  >  0)  {  throw  new  IllegalArgumentException( " ");  }  [FE]  ArrayIndexOutOfBoundsException  [FE]            ArrayIndexOutOfBoundsException    [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {      [BUGGY]  if(stackSize    >    0)    {    popStack();    }    if(stackSize  >  0)  {  popStack();  return;  }  if(stackSize  >  0)  {  popStack();  }  if(stackSize  >  0)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	261	261	2	replace	if(stackSize        >        0)        {        popStack();        }        if(stackSize    >    0)    {    popStack();    return;    }    if(stackSize  >  0)  {  popStack();  }  if(stackSize  >  0)  {  throw  new  IllegalArgumentException( " ");  }	  	compilable	  [FE]  ArrayIndexOutOfBoundsException  	211	2	add
893	[BUG]  [BUGGY]  if(stackSize    >    0)    {    popStack();    }    if(stackSize  >  0)  {  popStack();  return;  }  if(stackSize  >  0)  {  popStack();  }  if(stackSize  >  0)  {  getStack();  return;  }  [CE]  cannot  find  symbol  [FE]              ArrayIndexOutOfBoundsException    [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {      [BUGGY]  if(stackSize    >    0)    {    popStack();    }    if(stackSize  >  0)  {  popStack();  return;  }  if(stackSize  >  0)  {  popStack();  }  if(stackSize  >  0)  {  getStack();  return;  }  [BUGGY]      pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	261	261	2	replace	if(stackSize        >        0)        {        popStack();        }        if(stackSize    >    0)    {    popStack();    return;    }    if(stackSize  >  0)  {  popStack();  }  if(stackSize  >  0)  {  getStack();  return;  }	  	non-compiled	[CE]  cannot  find  symbol	211	None	add
894	[BUG]  [BUGGY]  [FE]  ArrayIndexOutOfBoundsException  [FE]                ArrayIndexOutOfBoundsException    [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {      [BUGGY]  if(stackSize    >    0)    {    popStack();    }    if(stackSize  >  0)  {  popStack();  return;  }  if(stackSize  <  0)  {  popStack();  }  if(stackSize  >  0)  {  popStack();  return;  }  [BUGGY]      pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	261	261	2	add	if(stackSize        >        0)        {        popStack();        }        if(stackSize    >    0)    {    popStack();    return;    }    if(stackSize  <  0)  {  popStack();  }  if(stackSize  >  0)  {  popStack();  return;  }	  	compilable	  [FE]  ArrayIndexOutOfBoundsException  	211	2	add
895	[BUG]  [BUGGY]  if(stackSize    >    0)    {    popStack();    }    if(stackSize  >  0)  {  popStack();  return;  }  if(stackSize  <  0)  {  popStack();  }  if(stackSize  >  0)  {  popStack();  return;  }  [FE]  ArrayIndexOutOfBoundsException  [FE]                ArrayIndexOutOfBoundsException    [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {      [BUGGY]  if(stackSize    >    0)    {    popStack();    }    if(stackSize  >  0)  {  popStack();  return;  }  if(stackSize  <  0)  {  popStack();  }  if(stackSize  >  0)  {  popStack();  return;  }  [BUGGY]      pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	261	261	2	replace	if(stackSize        >        0)        {        popStack();        }        if(stackSize    >    0)    {    popStack();    return;    }    if(stackSize  <  0)  {  popStack();  }  if(stackSize  >  0)  {  popStack();  return;  }	  	compilable	  [FE]  ArrayIndexOutOfBoundsException  	211	2	add
896	[BUG]  [BUGGY]  connectToPossibleExceptionHandler(this.throwInternal(),  JsonToken.VALUE_NULL);  [CE]  cannot  find  symbol  [FE]                  ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {      [BUGGY]  connectToPossibleExceptionHandler(this.throwInternal(),  JsonToken.VALUE_NULL);  [BUGGY]      pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	261	261	2	replace	connectToPossibleExceptionHandler(this.throwInternal(),  JsonToken.VALUE_NULL);	  connectToPossibleExceptionHandler(this.throwInternal());    	non-compiled	[CE]  cannot  find  symbol	50	None	replace
897	[BUG]  [BUGGY]  connectToPossibleExceptionHandler(this.throwInternal(),  JsonToken.VALUE_STRING);  [CE]  cannot  find  symbol  [FE]                    ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {      [BUGGY]  connectToPossibleExceptionHandler(this.throwInternal(),  JsonToken.VALUE_STRING);  [BUGGY]      pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	261	261	2	replace	connectToPossibleExceptionHandler(this.throwInternal(),  JsonToken.VALUE_STRING);	  connectToPossibleExceptionHandler(this.throwInternal());    	non-compiled	[CE]  cannot  find  symbol	50	None	replace
898	[BUG]  [BUGGY]  connectToPossibleExceptionHandler(this.throwInternal(),  JsonToken.FUNCTION);  [CE]  cannot  find  symbol  [FE]                      ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {      [BUGGY]  connectToPossibleExceptionHandler(this.throwInternal(),  JsonToken.FUNCTION);  [BUGGY]      pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	261	261	2	replace	connectToPossibleExceptionHandler(this.throwInternal(),  JsonToken.FUNCTION);	  connectToPossibleExceptionHandler(this.throwInternal());    	non-compiled	[CE]  cannot  find  symbol	50	None	replace
899	[BUG]  [BUGGY]  connectToPossibleExceptionHandler(this.throwInternal(),  JsonToken.END_ARRAY);  [CE]  cannot  find  symbol  [FE]                        ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {      [BUGGY]  connectToPossibleExceptionHandler(this.throwInternal(),  JsonToken.END_ARRAY);  [BUGGY]      pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	261	261	2	replace	connectToPossibleExceptionHandler(this.throwInternal(),  JsonToken.END_ARRAY);	  connectToPossibleExceptionHandler(this.throwInternal());    	non-compiled	[CE]  cannot  find  symbol	50	None	replace
900	[BUG]  [BUGGY]  connectToPeek(JsonToken.VALUE_NUMBER);  [CE]  cannot  find  symbol  VALUE_NUMBER  [FE]                                ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {      [BUGGY]  connectToPeek(JsonToken.VALUE_NUMBER);  [BUGGY]      pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	261	261	2	replace	connectToPeek(JsonToken.VALUE_NUMBER);	  connectToPeek(JsonToken.VALUE_NUMBER_INT);    	non-compiled	[CE]  cannot  find  symbol  VALUE_NUMBER	49	None	replace
901	[BUG]  [BUGGY]  connectToPeek(JsonToken.VALUE_NUMBER_INT,  SENTINEL_CLOSED);  [CE]  cannot  find  symbol  VALUE_NUMBER_INT  [FE]                                  ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {      [BUGGY]  connectToPeek(JsonToken.VALUE_NUMBER_INT,  SENTINEL_CLOSED);  [BUGGY]      pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	261	261	2	replace	connectToPeek(JsonToken.VALUE_NUMBER_INT,  SENTINEL_CLOSED);	  connectToPeek(JsonToken.VALUE_NUMBER_INT);    	non-compiled	[CE]  cannot  find  symbol  VALUE_NUMBER_INT	49	None	replace
902	[BUG]  [BUGGY]  connectToPeek(JsonToken.VALUE_NUMBER_INT,  pathNames);  [CE]  cannot  find  symbol  VALUE_NUMBER_INT  [FE]                                    ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {      [BUGGY]  connectToPeek(JsonToken.VALUE_NUMBER_INT,  pathNames);  [BUGGY]      pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	261	261	2	replace	connectToPeek(JsonToken.VALUE_NUMBER_INT,  pathNames);	  connectToPeek(JsonToken.VALUE_NUMBER_INT);    	non-compiled	[CE]  cannot  find  symbol  VALUE_NUMBER_INT	49	None	replace
903	[BUG]  [BUGGY]  connectToPeek(JsonToken.VALUE_NUMBER_INT,  null);  [CE]  cannot  find  symbol  VALUE_NUMBER_INT  [FE]                                      ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {      [BUGGY]  connectToPeek(JsonToken.VALUE_NUMBER_INT,  null);  [BUGGY]      pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	261	261	2	replace	connectToPeek(JsonToken.VALUE_NUMBER_INT,  null);	  connectToPeek(JsonToken.VALUE_NUMBER_INT);    	non-compiled	[CE]  cannot  find  symbol  VALUE_NUMBER_INT	49	None	replace
904	[BUG]  [BUGGY]  connectToPeek(JsonToken.VALUE_NUMBER_INT,  JsonToken.START_OBJECT);  [CE]  cannot  find  symbol  VALUE_NUMBER_INT  [FE]                                        ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {      [BUGGY]  connectToPeek(JsonToken.VALUE_NUMBER_INT,  JsonToken.START_OBJECT);  [BUGGY]      pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	261	261	2	replace	connectToPeek(JsonToken.VALUE_NUMBER_INT,  JsonToken.START_OBJECT);	  connectToPeek(JsonToken.VALUE_NUMBER_INT);    	non-compiled	[CE]  cannot  find  symbol  VALUE_NUMBER_INT	49	None	replace
905	[BUG]  [BUGGY]  _reportError( "Current  token( "+getClass().getName()  + ")not  null, ",  JsonToken.VALUE_NULL);  [CE]  cannot  find  symbol  VALUE_NULL  [FE]                    ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {      [BUGGY]  _reportError( "Current  token( "+getClass().getName()  + ")not  null, ",  JsonToken.VALUE_NULL);  [BUGGY]      pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	261	261	2	replace	_reportError( "Current  token( "+getClass().getName()  + ")not  null, ",  JsonToken.VALUE_NULL);	  _reportError(   "Current    token(   "+getClass().getName()    +   ")not    null,   ");    	non-compiled	[CE]  cannot  find  symbol  VALUE_NULL	116	None	replace
906	[BUG]  [BUGGY]  _reportError( "Current  token( "+getClass().getName()  + ")not  null, ",  JsonToken.FIELD_NAME);  [CE]  cannot  find  symbol  FIELD_NAME  [FE]                      ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {      [BUGGY]  _reportError( "Current  token( "+getClass().getName()  + ")not  null, ",  JsonToken.FIELD_NAME);  [BUGGY]      pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	261	261	2	replace	_reportError( "Current  token( "+getClass().getName()  + ")not  null, ",  JsonToken.FIELD_NAME);	  _reportError(   "Current    token(   "+getClass().getName()    +   ")not    null,   ");    	non-compiled	[CE]  cannot  find  symbol  FIELD_NAME	116	None	replace
907	[BUG]  [BUGGY]  _reportError( "Current  token( "+getClass().getName()  + ")not  null, ",);  [CE]  illegal  start  of  expression  [FE]                        ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {      [BUGGY]  _reportError( "Current  token( "+getClass().getName()  + ")not  null, ",);  [BUGGY]      pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	261	261	2	replace	_reportError( "Current  token( "+getClass().getName()  + ")not  null, ",);	  _reportError(   "Current    token(   "+getClass().getName()    +   ")not    null,   ");    	non-compiled	[CE]  illegal  start  of  expression	116	None	replace
908	[BUG]  [BUGGY]  _reportError( "Current  token( "+getClass().getName()  + ")not  a  valid  name ");  [CE]  cannot  find  symbol  [FE]    AssertionFailedError    [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {      [BUGGY]  _reportError( "Current  token( "+getClass().getName()  + ")not  a  valid  name ");  [BUGGY]      pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	261	261	2	replace	_reportError( "Current  token( "+getClass().getName()  + ")not  a  valid  name ");	  peek();    	non-compiled	[CE]  cannot  find  symbol	59	None	replace
909	[BUG]  [BUGGY]  _reportError( "Current  token( "+JsonToken.VALUE_NULL+ ")not  a  valid  value ");  [CE]  cannot  find  symbol  VALUE_NULL  [FE]      AssertionFailedError    [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {      [BUGGY]  _reportError( "Current  token( "+JsonToken.VALUE_NULL+ ")not  a  valid  value ");  [BUGGY]      pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	261	261	2	replace	_reportError( "Current  token( "+JsonToken.VALUE_NULL+ ")not  a  valid  value ");	  peek();    	non-compiled	[CE]  cannot  find  symbol  VALUE_NULL	59	None	replace
910	[BUG]  [BUGGY]  _reportError( "Current  token( "+JsonToken.VALUE_NULL+ ")not  a  valid  index ");  [CE]  cannot  find  symbol  VALUE_NULL  [FE]        AssertionFailedError    [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {      [BUGGY]  _reportError( "Current  token( "+JsonToken.VALUE_NULL+ ")not  a  valid  index ");  [BUGGY]      pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	261	261	2	replace	_reportError( "Current  token( "+JsonToken.VALUE_NULL+ ")not  a  valid  index ");	  peek();    	non-compiled	[CE]  cannot  find  symbol  VALUE_NULL	59	None	replace
911	[BUG]  [BUGGY]  _reportError( "Current  token( "+JsonToken.VALUE_NULL+ ")not  a  valid  name ");  [CE]  cannot  find  symbol  VALUE_NULL  [FE]          AssertionFailedError    [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {      [BUGGY]  _reportError( "Current  token( "+JsonToken.VALUE_NULL+ ")not  a  valid  name ");  [BUGGY]      pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	261	261	2	replace	_reportError( "Current  token( "+JsonToken.VALUE_NULL+ ")not  a  valid  name ");	  peek();    	non-compiled	[CE]  cannot  find  symbol  VALUE_NULL	59	None	replace
912	[BUG]  [BUGGY]  connectToPossibleExceptionHandler(null,  result,  stackSize());  [CE]  cannot  find  symbol  result  [FE]                    ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {      [BUGGY]  connectToPossibleExceptionHandler(null,  result,  stackSize());  [BUGGY]      pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	261	261	2	replace	connectToPossibleExceptionHandler(null,  result,  stackSize());	  connectToPossibleExceptionHandler(null,    stackSize());    	non-compiled	[CE]  cannot  find  symbol  result	135	None	replace
913	[BUG]  [BUGGY]  connectToPossibleExceptionHandler(null,  count,  stackSize());  [CE]  cannot  find  symbol  count  [FE]                      ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {      [BUGGY]  connectToPossibleExceptionHandler(null,  count,  stackSize());  [BUGGY]      pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	261	261	2	replace	connectToPossibleExceptionHandler(null,  count,  stackSize());	  connectToPossibleExceptionHandler(null,    stackSize());    	non-compiled	[CE]  cannot  find  symbol  count	135	None	replace
914	[BUG]  [BUGGY]  connectToPossibleExceptionHandler(null,  stackSize()  -  1);  [CE]  cannot  find  symbol  [FE]                        ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {      [BUGGY]  connectToPossibleExceptionHandler(null,  stackSize()  -  1);  [BUGGY]      pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	261	261	2	replace	connectToPossibleExceptionHandler(null,  stackSize()  -  1);	  connectToPossibleExceptionHandler(null,    stackSize());    	non-compiled	[CE]  cannot  find  symbol	135	None	replace
915	[BUG]  [BUGGY]  connectToPossibleExceptionHandler(result,  stackSize());  [CE]  cannot  find  symbol  result  [FE]                          ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {      [BUGGY]  connectToPossibleExceptionHandler(result,  stackSize());  [BUGGY]      pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	261	261	2	replace	connectToPossibleExceptionHandler(result,  stackSize());	  connectToPossibleExceptionHandler(null,    stackSize());    	non-compiled	[CE]  cannot  find  symbol  result	135	None	replace
916	[BUG]  [BUGGY]  connectToPossibleExceptionHandler(null,  stackSize  -  1);  [CE]  cannot  find  symbol  [FE]                            ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {      [BUGGY]  connectToPossibleExceptionHandler(null,  stackSize  -  1);  [BUGGY]      pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	261	261	2	replace	connectToPossibleExceptionHandler(null,  stackSize  -  1);	  connectToPossibleExceptionHandler(null,    stackSize());    	non-compiled	[CE]  cannot  find  symbol	135	None	replace
917	[BUG]  [BUGGY]  connectToPossibleExceptionHandler(null,  null,  stackSize());  [CE]  cannot  find  symbol  [FE]                              ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {      [BUGGY]  connectToPossibleExceptionHandler(null,  null,  stackSize());  [BUGGY]      pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	261	261	2	replace	connectToPossibleExceptionHandler(null,  null,  stackSize());	  connectToPossibleExceptionHandler(null,    stackSize());    	non-compiled	[CE]  cannot  find  symbol	135	None	replace
918	[BUG]  [BUGGY]  StackTree  <  NUMBER_INDEXES  ||  stackSize  >  1)  {  popStack();  [CE]  >  expected  [FE]              ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {      [BUGGY]  StackTree  <  NUMBER_INDEXES  ||  stackSize  >  1)  {  popStack();  [BUGGY]      pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	261	261	2	replace	StackTree  <  NUMBER_INDEXES  ||  stackSize  >  1)  {  popStack();	  StackTree    <    NUMBER_INDEXES    ||    stackSize    >    0)    {    popStack();    }    else    {    skipStack();    }    	non-compiled	[CE]  >  expected	71	None	replace
919	[BUG]  [BUGGY]  StackTree  <  NUMBER_INDEXES  &&  stackSize  >  0)  {  popStack();  }  else  {  skipStack();  }  [CE]  >  expected  [FE]                ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {      [BUGGY]  StackTree  <  NUMBER_INDEXES  &&  stackSize  >  0)  {  popStack();  }  else  {  skipStack();  }  [BUGGY]      pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	261	261	2	replace	StackTree  <  NUMBER_INDEXES  &&  stackSize  >  0)  {  popStack();  }  else  {  skipStack();  }	  StackTree    <    NUMBER_INDEXES    ||    stackSize    >    0)    {    popStack();    }    else    {    skipStack();    }    	non-compiled	[CE]  >  expected	71	None	replace
920	[BUG]  [BUGGY]  StackTree  <  NUMBER_INDEXES  ||  stackSize  >=  0)  {  popStack();  }  else  {  skipStack();  }  [CE]  >  expected  [FE]                  ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {      [BUGGY]  StackTree  <  NUMBER_INDEXES  ||  stackSize  >=  0)  {  popStack();  }  else  {  skipStack();  }  [BUGGY]      pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	261	261	2	replace	StackTree  <  NUMBER_INDEXES  ||  stackSize  >=  0)  {  popStack();  }  else  {  skipStack();  }	  StackTree    <    NUMBER_INDEXES    ||    stackSize    >    0)    {    popStack();    }    else    {    skipStack();    }    	non-compiled	[CE]  >  expected	71	None	replace
921	[BUG]  [BUGGY]  StackTree  <  NUMBER_INDEXES  &&  stackSize  >  0)  {  popStack();  }  [CE]  >  expected  [FE]                    ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {      [BUGGY]  StackTree  <  NUMBER_INDEXES  &&  stackSize  >  0)  {  popStack();  }  [BUGGY]      pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	261	261	2	replace	StackTree  <  NUMBER_INDEXES  &&  stackSize  >  0)  {  popStack();  }	  StackTree    <    NUMBER_INDEXES    ||    stackSize    >    0)    {    popStack();    }    else    {    skipStack();    }    	non-compiled	[CE]  >  expected	71	None	replace
922	[BUG]  [BUGGY]  StackTree  <  NUMBER_INDEXES  ||  stackSize  >=  0)  {  popStack();  [CE]  >  expected  [FE]                      ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {      [BUGGY]  StackTree  <  NUMBER_INDEXES  ||  stackSize  >=  0)  {  popStack();  [BUGGY]      pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	261	261	2	replace	StackTree  <  NUMBER_INDEXES  ||  stackSize  >=  0)  {  popStack();	  StackTree    <    NUMBER_INDEXES    ||    stackSize    >    0)    {    popStack();    }    else    {    skipStack();    }    	non-compiled	[CE]  >  expected	71	None	replace
923	[BUG]  [BUGGY]  _reportError( "Current  token( "+getMessage()  + ")not  a  value. ",  JsonToken.FIELD_NAME);  [CE]  cannot  find  symbol  [FE]                      ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {      [BUGGY]  _reportError( "Current  token( "+getMessage()  + ")not  a  value. ",  JsonToken.FIELD_NAME);  [BUGGY]      pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	261	261	2	replace	_reportError( "Current  token( "+getMessage()  + ")not  a  value. ",  JsonToken.FIELD_NAME);	  _reportError(   "Current    token(   "+getMessage()    +   ")not    a    value   ",    JsonToken.FIELD_NAME);    	non-compiled	[CE]  cannot  find  symbol	32	None	replace
924	[BUG]  [BUGGY]  _reportError( "Current  token( "+getMessage()  + ")not  a  value ", "JsonToken.FIELD_NAME);  [CE]  unclosed  string  literal  [FE]                        ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {      [BUGGY]  _reportError( "Current  token( "+getMessage()  + ")not  a  value ", "JsonToken.FIELD_NAME);  [BUGGY]      pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	261	261	2	replace	_reportError( "Current  token( "+getMessage()  + ")not  a  value ", "JsonToken.FIELD_NAME);	  _reportError(   "Current    token(   "+getMessage()    +   ")not    a    value   ",    JsonToken.FIELD_NAME);    	non-compiled	[CE]  unclosed  string  literal	32	None	replace
925	[BUG]  [BUGGY]  connectToPossibleExceptionHandler(this,  SENTINEL_CLOSED);  [CE]  cannot  find  symbol  [FE]                ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {      [BUGGY]  connectToPossibleExceptionHandler(this,  SENTINEL_CLOSED);  [BUGGY]      pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	261	261	2	replace	connectToPossibleExceptionHandler(this,  SENTINEL_CLOSED);	  connectToPossibleExceptionHandler(this);    	non-compiled	[CE]  cannot  find  symbol	3	None	replace
926	[BUG]  [BUGGY]  connectToPossibleExceptionHandler(this,  JsonToken.VALUE_EMPTY);  [CE]  cannot  find  symbol  VALUE_EMPTY  [FE]                  ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {      [BUGGY]  connectToPossibleExceptionHandler(this,  JsonToken.VALUE_EMPTY);  [BUGGY]      pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	261	261	2	replace	connectToPossibleExceptionHandler(this,  JsonToken.VALUE_EMPTY);	  connectToPossibleExceptionHandler(this);    	non-compiled	[CE]  cannot  find  symbol  VALUE_EMPTY	3	None	replace
927	[BUG]  [BUGGY]  connectToPossibleExceptionHandler(this,  JsonToken.END_OBJECT);  [CE]  cannot  find  symbol  [FE]                    ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {      [BUGGY]  connectToPossibleExceptionHandler(this,  JsonToken.END_OBJECT);  [BUGGY]      pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	261	261	2	replace	connectToPossibleExceptionHandler(this,  JsonToken.END_OBJECT);	  connectToPossibleExceptionHandler(this);    	non-compiled	[CE]  cannot  find  symbol	3	None	replace
928	[BUG]  [BUGGY]  connectToPossibleExceptionHandler(null,  UNREADABLE_READER);  [CE]  cannot  find  symbol  [FE]                ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {      [BUGGY]  connectToPossibleExceptionHandler(null,  UNREADABLE_READER);  [BUGGY]      pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	261	261	2	replace	connectToPossibleExceptionHandler(null,  UNREADABLE_READER);	  connectToPossibleExceptionHandler(null,    SENTINEL_CLOSED);    	non-compiled	[CE]  cannot  find  symbol	6	None	replace
929	[BUG]  [BUGGY]  connectToPossibleExceptionHandler(null,  SENTINEL_CLOSED,  pathNames);  [CE]  cannot  find  symbol  [FE]                  ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {      [BUGGY]  connectToPossibleExceptionHandler(null,  SENTINEL_CLOSED,  pathNames);  [BUGGY]      pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	261	261	2	replace	connectToPossibleExceptionHandler(null,  SENTINEL_CLOSED,  pathNames);	  connectToPossibleExceptionHandler(null,    SENTINEL_CLOSED);    	non-compiled	[CE]  cannot  find  symbol	6	None	replace
930	[BUG]  [BUGGY]  connectToPossibleExceptionHandler(null,  SENTINEL_CLOSED,  pathIndices);  [CE]  cannot  find  symbol  [FE]                    ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {      [BUGGY]  connectToPossibleExceptionHandler(null,  SENTINEL_CLOSED,  pathIndices);  [BUGGY]      pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	261	261	2	replace	connectToPossibleExceptionHandler(null,  SENTINEL_CLOSED,  pathIndices);	  connectToPossibleExceptionHandler(null,    SENTINEL_CLOSED);    	non-compiled	[CE]  cannot  find  symbol	6	None	replace
931	[BUG]  [BUGGY]  lookupValue();  [CE]  cannot  find  symbol  [FE]                ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {      [BUGGY]  lookupValue();  [BUGGY]      pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	261	261	2	replace	lookupValue();	  peer();    	non-compiled	[CE]  cannot  find  symbol	61	None	replace
932	[BUG]  [BUGGY]  scanValue();  [CE]  cannot  find  symbol  [FE]                  ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {      [BUGGY]  scanValue();  [BUGGY]      pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	261	261	2	replace	scanValue();	  peer();    	non-compiled	[CE]  cannot  find  symbol	61	None	replace
933	[BUG]  [BUGGY]  [FE]  IllegalStateException  [FE]                    ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {      [BUGGY]  close();  [BUGGY]      pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	261	261	2	add	close();	  peer();    	compilable	  [FE]  IllegalStateException  	61	2	replace
934	[BUG]  [BUGGY]  close();  [FE]  IllegalStateException  [FE]                    ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {      [BUGGY]  close();  [BUGGY]      pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	261	261	2	replace	close();	  peer();    	compilable	  [FE]  IllegalStateException  	61	2	replace
935	[BUG]  [BUGGY]  open();  [CE]  cannot  find  symbol  [FE]                      ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {      [BUGGY]  open();  [BUGGY]      pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	261	261	2	replace	open();	  peer();    	non-compiled	[CE]  cannot  find  symbol	61	None	replace
936	[BUG]  [BUGGY]  connectToPeek(JsonToken.VALUE_NUMBER_OF_RANGE,  stackSize);  [CE]  cannot  find  symbol  VALUE_NUMBER_OF_RANGE  [FE]                            ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {      [BUGGY]  connectToPeek(JsonToken.VALUE_NUMBER_OF_RANGE,  stackSize);  [BUGGY]      pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	261	261	2	replace	connectToPeek(JsonToken.VALUE_NUMBER_OF_RANGE,  stackSize);	  connectToPeek(JsonToken.VALUE_NUMBER_OF_RANGE);    	non-compiled	[CE]  cannot  find  symbol  VALUE_NUMBER_OF_RANGE	47	None	replace
937	[BUG]  [BUGGY]  connectToPeek(JsonToken.VALUE_NULL);  [CE]  cannot  find  symbol  VALUE_NULL  [FE]                              ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {      [BUGGY]  connectToPeek(JsonToken.VALUE_NULL);  [BUGGY]      pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	261	261	2	replace	connectToPeek(JsonToken.VALUE_NULL);	  connectToPeek(JsonToken.VALUE_NUMBER_OF_RANGE);    	non-compiled	[CE]  cannot  find  symbol  VALUE_NULL	47	None	replace
938	[BUG]  [BUGGY]  Validate.notNull(stack,  offset);  [CE]  cannot  find  symbol  offset  [FE]                      ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {      [BUGGY]  Validate.notNull(stack,  offset);  [BUGGY]      pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	261	261	2	replace	Validate.notNull(stack,  offset);	  Validate.notNull(result);    	non-compiled	[CE]  cannot  find  symbol  offset	202	None	replace
939	[BUG]  [BUGGY]  if(peek()  ==  JsonToken.VALUE_NUMBER_FLOAT)  {  if(stackSize  >  0)  {  popStack();  }  [CE]  ';'  expected  [FE]              ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {      [BUGGY]  if(peek()  ==  JsonToken.VALUE_NUMBER_FLOAT)  {  if(stackSize  >  0)  {  popStack();  }  [BUGGY]      pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	261	261	2	replace	if(peek()  ==  JsonToken.VALUE_NUMBER_FLOAT)  {  if(stackSize  >  0)  {  popStack();  }	  if(stackSize    >    0)    {    popStack();    }    if(stackSize    >    0)    {    popStack();    System.arraycopy(stackNames,    0,    pathNames,    0,    stackSize);    }    	non-compiled	[CE]  ';'  expected	90	None	replace
940	[BUG]  [BUGGY]  [FE]  ArrayIndexOutOfBoundsException  [FE]                ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {      [BUGGY]  if(stackSize  >  0)  {  popStack();  }  else  {  System.arraycopy(pathNames,  0,  pathNames,  0,  stackSize);  }  [BUGGY]      pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	261	261	2	add	if(stackSize  >  0)  {  popStack();  }  else  {  System.arraycopy(pathNames,  0,  pathNames,  0,  stackSize);  }	  if(stackSize    >    0)    {    popStack();    }    if(stackSize    >    0)    {    popStack();    System.arraycopy(stackNames,    0,    pathNames,    0,    stackSize);    }    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	90	2	replace
941	[BUG]  [BUGGY]  if(stackSize  >  0)  {  popStack();  }  else  {  System.arraycopy(pathNames,  0,  pathNames,  0,  stackSize);  }  [FE]  ArrayIndexOutOfBoundsException  [FE]                ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {      [BUGGY]  if(stackSize  >  0)  {  popStack();  }  else  {  System.arraycopy(pathNames,  0,  pathNames,  0,  stackSize);  }  [BUGGY]      pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	261	261	2	replace	if(stackSize  >  0)  {  popStack();  }  else  {  System.arraycopy(pathNames,  0,  pathNames,  0,  stackSize);  }	  if(stackSize    >    0)    {    popStack();    }    if(stackSize    >    0)    {    popStack();    System.arraycopy(stackNames,    0,    pathNames,    0,    stackSize);    }    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	90	2	replace
942	[BUG]  [BUGGY]  Path[]  result  =  pathIndices.toArray(new  Path[result.size()  ]);  [CE]  cannot  find  symbol  [FE]                            ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {      [BUGGY]  Path[]  result  =  pathIndices.toArray(new  Path[result.size()  ]);  [BUGGY]      pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	261	261	2	replace	Path[]  result  =  pathIndices.toArray(new  Path[result.size()  ]);	  if(stackSize    >    0)    {    popStack();    }    else    {    JsonToken.END_OBJECT    =    null;    nextName();    pathNames[stackSize    -    1]    =    null;    }    	non-compiled	[CE]  cannot  find  symbol	141	None	replace
943	[BUG]  [BUGGY]  [FE]  IllegalStateException  [FE]    IllegalStateException    [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {      [BUGGY]  if(stackSize  >  0)  {  nextName();  }  if(stackSize  >  0)  {  nextName();  }  [BUGGY]      pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	261	261	2	add	if(stackSize    >    0)    {    nextName();    }    if(stackSize  >  0)  {  nextName();  }	  	compilable	  [FE]  IllegalStateException  	190	2	add
944	[BUG]  [BUGGY]  if(stackSize  >  0)  {  nextName();  }  if(stackSize  >  0)  {  nextName();  }  [FE]  IllegalStateException  [FE]    IllegalStateException    [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {      [BUGGY]  if(stackSize  >  0)  {  nextName();  }  if(stackSize  >  0)  {  nextName();  }  [BUGGY]      pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	261	261	2	replace	if(stackSize    >    0)    {    nextName();    }    if(stackSize  >  0)  {  nextName();  }	  	compilable	  [FE]  IllegalStateException  	190	2	add
945	[BUG]  [BUGGY]  if(stackSize  >  0)  {  nextName();  }  if(stackSize  >  0)  {  nextName();  }  pathIndices[stackSize  -  1]  =   "null ";  }  [CE]  ']'  expected  [FE]      IllegalStateException    [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {      [BUGGY]  if(stackSize  >  0)  {  nextName();  }  if(stackSize  >  0)  {  nextName();  }  pathIndices[stackSize  -  1]  =   "null ";  }  [BUGGY]      pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	261	261	2	replace	if(stackSize    >    0)    {    nextName();    }    if(stackSize  >  0)  {  nextName();  }  pathIndices[stackSize  -  1]  =   "null ";  }	  	non-compiled	[CE]  ']'  expected	190	None	add
946	[BUG]  [BUGGY]  if(stackSize  >  0)  {  nextName();  }  if(stackSize  >  0)  {  nextName();  }  pathNames[stackSize  -  1]  =   "null ";  }  [CE]  ']'  expected  [FE]        IllegalStateException    [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {      [BUGGY]  if(stackSize  >  0)  {  nextName();  }  if(stackSize  >  0)  {  nextName();  }  pathNames[stackSize  -  1]  =   "null ";  }  [BUGGY]      pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	261	261	2	replace	if(stackSize    >    0)    {    nextName();    }    if(stackSize  >  0)  {  nextName();  }  pathNames[stackSize  -  1]  =   "null ";  }	  	non-compiled	[CE]  ']'  expected	190	None	add
947	[BUG]  [BUGGY]  [FE]  IllegalStateException  [FE]          IllegalStateException    [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {      [BUGGY]  if(stackSize  >  0)  {  nextName();  }  if(stackSize  >  0)  {  nextName();  }  pathNames[stackSize  -  1]  =   "null ";  [BUGGY]      pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	261	261	2	add	if(stackSize    >    0)    {    nextName();    }    if(stackSize  >  0)  {  nextName();  }  pathNames[stackSize  -  1]  =   "null ";	  	compilable	  [FE]  IllegalStateException  	190	2	add
948	[BUG]  [BUGGY]  if(stackSize  >  0)  {  nextName();  }  if(stackSize  >  0)  {  nextName();  }  pathNames[stackSize  -  1]  =   "null ";  [FE]  IllegalStateException  [FE]          IllegalStateException    [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {      [BUGGY]  if(stackSize  >  0)  {  nextName();  }  if(stackSize  >  0)  {  nextName();  }  pathNames[stackSize  -  1]  =   "null ";  [BUGGY]      pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	261	261	2	replace	if(stackSize    >    0)    {    nextName();    }    if(stackSize  >  0)  {  nextName();  }  pathNames[stackSize  -  1]  =   "null ";	  	compilable	  [FE]  IllegalStateException  	190	2	add
949	[BUG]  [BUGGY]  if(stackSize  >  0)  {  nextName();  }  if(stackSize  >  0)  {  nextName();  }  pathIndices[stackSize  -  1]  =   "null ";  [CE]  incompatible  types  [FE]            IllegalStateException    [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {      [BUGGY]  if(stackSize  >  0)  {  nextName();  }  if(stackSize  >  0)  {  nextName();  }  pathIndices[stackSize  -  1]  =   "null ";  [BUGGY]      pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	261	261	2	replace	if(stackSize    >    0)    {    nextName();    }    if(stackSize  >  0)  {  nextName();  }  pathIndices[stackSize  -  1]  =   "null ";	  	non-compiled	[CE]  incompatible  types	190	None	add
950	[BUG]  [BUGGY]  if(stackSize  >  0)  {  nextName();  }  if(stackSize  >  0)  {  nextName();  }  pathIndices[stackSize  -  1]  =  null   ";  }  [CE]  unclosed  string  literal  [FE]              IllegalStateException    [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {      [BUGGY]  if(stackSize  >  0)  {  nextName();  }  if(stackSize  >  0)  {  nextName();  }  pathIndices[stackSize  -  1]  =  null   ";  }  [BUGGY]      pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	261	261	2	replace	if(stackSize    >    0)    {    nextName();    }    if(stackSize  >  0)  {  nextName();  }  pathIndices[stackSize  -  1]  =  null   ";  }	  	non-compiled	[CE]  unclosed  string  literal	190	None	add
951	[BUG]  [BUGGY]  [FE]  IllegalStateException  [FE]                IllegalStateException    [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {      [BUGGY]  if(stackSize  >  0)  {  nextName();  }  if(stackSize  >  0)  {  nextName();  System.arraycopy(pathNames,  0,  pathNames,  0,  stackSize  -  1);  }  [BUGGY]      pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	261	261	2	add	if(stackSize    >    0)    {    nextName();    }    if(stackSize  >  0)  {  nextName();  System.arraycopy(pathNames,  0,  pathNames,  0,  stackSize  -  1);  }	  	compilable	  [FE]  IllegalStateException  	190	2	add
952	[BUG]  [BUGGY]  if(stackSize  >  0)  {  nextName();  }  if(stackSize  >  0)  {  nextName();  System.arraycopy(pathNames,  0,  pathNames,  0,  stackSize  -  1);  }  [FE]  IllegalStateException  [FE]                IllegalStateException    [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {      [BUGGY]  if(stackSize  >  0)  {  nextName();  }  if(stackSize  >  0)  {  nextName();  System.arraycopy(pathNames,  0,  pathNames,  0,  stackSize  -  1);  }  [BUGGY]      pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	261	261	2	replace	if(stackSize    >    0)    {    nextName();    }    if(stackSize  >  0)  {  nextName();  System.arraycopy(pathNames,  0,  pathNames,  0,  stackSize  -  1);  }	  	compilable	  [FE]  IllegalStateException  	190	2	add
953	[BUG]  [BUGGY]  JsonToken  t  =  _throwUnsupportedOperation();  [CE]  cannot  find  symbol  [FE]                    ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {      [BUGGY]  JsonToken  t  =  _throwUnsupportedOperation();  [BUGGY]      pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	261	261	2	replace	JsonToken  t  =  _throwUnsupportedOperation();	  JsonToken    t    =    _reportUnsupportedOperation();    	non-compiled	[CE]  cannot  find  symbol	125	None	replace
954	[BUG]  [BUGGY]  JsonToken  t  =  reportUnsupportedOperation();  [CE]  cannot  find  symbol  [FE]                      ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {      [BUGGY]  JsonToken  t  =  reportUnsupportedOperation();  [BUGGY]      pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	261	261	2	replace	JsonToken  t  =  reportUnsupportedOperation();	  JsonToken    t    =    _reportUnsupportedOperation();    	non-compiled	[CE]  cannot  find  symbol	125	None	replace
955	[BUG]  [BUGGY]  JsonToken  t  =  this._reportUnsupportedOperation();  [CE]  cannot  find  symbol  [FE]                        ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {      [BUGGY]  JsonToken  t  =  this._reportUnsupportedOperation();  [BUGGY]      pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	261	261	2	replace	JsonToken  t  =  this._reportUnsupportedOperation();	  JsonToken    t    =    _reportUnsupportedOperation();    	non-compiled	[CE]  cannot  find  symbol	125	None	replace
956	[BUG]  [BUGGY]  JsonToken  t  =  _throwInternal();  [CE]  cannot  find  symbol  [FE]                          ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {      [BUGGY]  JsonToken  t  =  _throwInternal();  [BUGGY]      pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	261	261	2	replace	JsonToken  t  =  _throwInternal();	  JsonToken    t    =    _reportUnsupportedOperation();    	non-compiled	[CE]  cannot  find  symbol	125	None	replace
957	[BUG]  [BUGGY]  JsonToken  t  =  _writeUnsupportedOperation();  [CE]  cannot  find  symbol  [FE]                            ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {      [BUGGY]  JsonToken  t  =  _writeUnsupportedOperation();  [BUGGY]      pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	261	261	2	replace	JsonToken  t  =  _writeUnsupportedOperation();	  JsonToken    t    =    _reportUnsupportedOperation();    	non-compiled	[CE]  cannot  find  symbol	125	None	replace
958	[BUG]  [BUGGY]  JsonToken  t  =  _parseJsonToken(JsonToken.START_OBJECT);  [CE]  cannot  find  symbol  START_OBJECT  [FE]                              ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {      [BUGGY]  JsonToken  t  =  _parseJsonToken(JsonToken.START_OBJECT);  [BUGGY]      pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	261	261	2	replace	JsonToken  t  =  _parseJsonToken(JsonToken.START_OBJECT);	  JsonToken    t    =    _reportUnsupportedOperation();    	non-compiled	[CE]  cannot  find  symbol  START_OBJECT	125	None	replace
959	[BUG]  [BUGGY]  [FE]  ArrayIndexOutOfBoundsException  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {      [BUGGY]  if(stackSize    >    0)    {    popStack();    }    if(stackSize  >  0)  {  popStack();  System.arraycopy(pathNames,  0,  pathNames,  1,  stackSize  -  1);  }  if(stackSize  >  0)  {  popStack();  }  if(stackSize  >  0)  {  popStack();  System.arraycopy(pathNames,  0,  pathNames,  1,  stackSize  -  1);  }  [BUGGY]      pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	261	261	2	add	if(stackSize        >        0)        {        popStack();        }        if(stackSize    >    0)    {    popStack();    System.arraycopy(pathNames,    0,    pathNames,    1,    stackSize    -    1);    }    if(stackSize  >  0)  {  popStack();  }  if(stackSize  >  0)  {  popStack();  System.arraycopy(pathNames,  0,  pathNames,  1,  stackSize  -  1);  }	  	compilable	  [FE]  ArrayIndexOutOfBoundsException  	156	2	add
960	[BUG]  [BUGGY]  if(stackSize    >    0)    {    popStack();    }    if(stackSize  >  0)  {  popStack();  System.arraycopy(pathNames,  0,  pathNames,  1,  stackSize  -  1);  }  if(stackSize  >  0)  {  popStack();  }  if(stackSize  >  0)  {  popStack();  System.arraycopy(pathNames,  0,  pathNames,  1,  stackSize  -  1);  }  [FE]  ArrayIndexOutOfBoundsException  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {      [BUGGY]  if(stackSize    >    0)    {    popStack();    }    if(stackSize  >  0)  {  popStack();  System.arraycopy(pathNames,  0,  pathNames,  1,  stackSize  -  1);  }  if(stackSize  >  0)  {  popStack();  }  if(stackSize  >  0)  {  popStack();  System.arraycopy(pathNames,  0,  pathNames,  1,  stackSize  -  1);  }  [BUGGY]      pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	261	261	2	replace	if(stackSize        >        0)        {        popStack();        }        if(stackSize    >    0)    {    popStack();    System.arraycopy(pathNames,    0,    pathNames,    1,    stackSize    -    1);    }    if(stackSize  >  0)  {  popStack();  }  if(stackSize  >  0)  {  popStack();  System.arraycopy(pathNames,  0,  pathNames,  1,  stackSize  -  1);  }	  	compilable	  [FE]  ArrayIndexOutOfBoundsException  	156	2	add
961	[BUG]  [BUGGY]  [FE]  ArrayIndexOutOfBoundsException  [FE]      ArrayIndexOutOfBoundsException    [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {      [BUGGY]  if(stackSize    >    0)    {    popStack();    }    if(stackSize  >  0)  {  popStack();  System.arraycopy(pathNames,  0,  pathNames,  1,  stackSize  -  1);  }  if(stackSize  >  0)  {  popStack();  System.arraycopy(pathNames,  0,  pathNames,  1,  stackSize  -  1);  }  [BUGGY]      pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	261	261	2	add	if(stackSize        >        0)        {        popStack();        }        if(stackSize    >    0)    {    popStack();    System.arraycopy(pathNames,    0,    pathNames,    1,    stackSize    -    1);    }    if(stackSize  >  0)  {  popStack();  System.arraycopy(pathNames,  0,  pathNames,  1,  stackSize  -  1);  }	  	compilable	  [FE]  ArrayIndexOutOfBoundsException  	156	2	add
962	[BUG]  [BUGGY]  if(stackSize    >    0)    {    popStack();    }    if(stackSize  >  0)  {  popStack();  System.arraycopy(pathNames,  0,  pathNames,  1,  stackSize  -  1);  }  if(stackSize  >  0)  {  popStack();  System.arraycopy(pathNames,  0,  pathNames,  1,  stackSize  -  1);  }  [FE]  ArrayIndexOutOfBoundsException  [FE]      ArrayIndexOutOfBoundsException    [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {      [BUGGY]  if(stackSize    >    0)    {    popStack();    }    if(stackSize  >  0)  {  popStack();  System.arraycopy(pathNames,  0,  pathNames,  1,  stackSize  -  1);  }  if(stackSize  >  0)  {  popStack();  System.arraycopy(pathNames,  0,  pathNames,  1,  stackSize  -  1);  }  [BUGGY]      pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	261	261	2	replace	if(stackSize        >        0)        {        popStack();        }        if(stackSize    >    0)    {    popStack();    System.arraycopy(pathNames,    0,    pathNames,    1,    stackSize    -    1);    }    if(stackSize  >  0)  {  popStack();  System.arraycopy(pathNames,  0,  pathNames,  1,  stackSize  -  1);  }	  	compilable	  [FE]  ArrayIndexOutOfBoundsException  	156	2	add
963	[BUG]  [BUGGY]  if(stackSize    >    0)    {    popStack();    }    if(stackSize  >  0)  {  popStack();  System.arraycopy(pathNames,  0,  pathNames,  1,  stackSize  -  1);  }  if(stackSize  >  0)  {  popStack();  }  if(stackSize  >  0)  {  popStack();  System.arraycopy(pathNames,  0,  pathNames,  1,  stackSize  -  1  [CE]  ')'  expected  [FE]        ArrayIndexOutOfBoundsException    [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {      [BUGGY]  if(stackSize    >    0)    {    popStack();    }    if(stackSize  >  0)  {  popStack();  System.arraycopy(pathNames,  0,  pathNames,  1,  stackSize  -  1);  }  if(stackSize  >  0)  {  popStack();  }  if(stackSize  >  0)  {  popStack();  System.arraycopy(pathNames,  0,  pathNames,  1,  stackSize  -  1  [BUGGY]      pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	261	261	2	replace	if(stackSize        >        0)        {        popStack();        }        if(stackSize    >    0)    {    popStack();    System.arraycopy(pathNames,    0,    pathNames,    1,    stackSize    -    1);    }    if(stackSize  >  0)  {  popStack();  }  if(stackSize  >  0)  {  popStack();  System.arraycopy(pathNames,  0,  pathNames,  1,  stackSize  -  1	  	non-compiled	[CE]  ')'  expected	156	None	add
964	[BUG]  [BUGGY]  [FE]  ArrayIndexOutOfBoundsException  [FE]          ArrayIndexOutOfBoundsException    [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {      [BUGGY]  if(stackSize    >    0)    {    popStack();    }    if(stackSize  >  0)  {  popStack();  System.arraycopy(pathNames,  0,  pathNames,  1,  stackSize  -  1);  }  if(stackSize  >  0)  {  popStack();  }  if(stackSize  >  0)  {  popStack();  System.arraycopy(pathNames,  1,  pathNames,  1,  stackSize  -  1);  }  [BUGGY]      pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	261	261	2	add	if(stackSize        >        0)        {        popStack();        }        if(stackSize    >    0)    {    popStack();    System.arraycopy(pathNames,    0,    pathNames,    1,    stackSize    -    1);    }    if(stackSize  >  0)  {  popStack();  }  if(stackSize  >  0)  {  popStack();  System.arraycopy(pathNames,  1,  pathNames,  1,  stackSize  -  1);  }	  	compilable	  [FE]  ArrayIndexOutOfBoundsException  	156	2	add
965	[BUG]  [BUGGY]  if(stackSize    >    0)    {    popStack();    }    if(stackSize  >  0)  {  popStack();  System.arraycopy(pathNames,  0,  pathNames,  1,  stackSize  -  1);  }  if(stackSize  >  0)  {  popStack();  }  if(stackSize  >  0)  {  popStack();  System.arraycopy(pathNames,  1,  pathNames,  1,  stackSize  -  1);  }  [FE]  ArrayIndexOutOfBoundsException  [FE]          ArrayIndexOutOfBoundsException    [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {      [BUGGY]  if(stackSize    >    0)    {    popStack();    }    if(stackSize  >  0)  {  popStack();  System.arraycopy(pathNames,  0,  pathNames,  1,  stackSize  -  1);  }  if(stackSize  >  0)  {  popStack();  }  if(stackSize  >  0)  {  popStack();  System.arraycopy(pathNames,  1,  pathNames,  1,  stackSize  -  1);  }  [BUGGY]      pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	261	261	2	replace	if(stackSize        >        0)        {        popStack();        }        if(stackSize    >    0)    {    popStack();    System.arraycopy(pathNames,    0,    pathNames,    1,    stackSize    -    1);    }    if(stackSize  >  0)  {  popStack();  }  if(stackSize  >  0)  {  popStack();  System.arraycopy(pathNames,  1,  pathNames,  1,  stackSize  -  1);  }	  	compilable	  [FE]  ArrayIndexOutOfBoundsException  	156	2	add
966	[BUG]  [BUGGY]  if(stackSize    >    0)    {    popStack();    }    if(stackSize  >  0)  {  popStack();  System.arraycopy(pathNames,  0,  pathNames,  1,  stackSize  -  1);  }  if(stackSize  >  0)  {  popStack();  }  if(stackSize  >  0)  {  popStack();  System.arraycopy(pathNames,  0,  pathNames,  1,  stackSize  -  1]);  }  [CE]  ')'  expected  [FE]            ArrayIndexOutOfBoundsException    [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {      [BUGGY]  if(stackSize    >    0)    {    popStack();    }    if(stackSize  >  0)  {  popStack();  System.arraycopy(pathNames,  0,  pathNames,  1,  stackSize  -  1);  }  if(stackSize  >  0)  {  popStack();  }  if(stackSize  >  0)  {  popStack();  System.arraycopy(pathNames,  0,  pathNames,  1,  stackSize  -  1]);  }  [BUGGY]      pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	261	261	2	replace	if(stackSize        >        0)        {        popStack();        }        if(stackSize    >    0)    {    popStack();    System.arraycopy(pathNames,    0,    pathNames,    1,    stackSize    -    1);    }    if(stackSize  >  0)  {  popStack();  }  if(stackSize  >  0)  {  popStack();  System.arraycopy(pathNames,  0,  pathNames,  1,  stackSize  -  1]);  }	  	non-compiled	[CE]  ')'  expected	156	None	add
967	[BUG]  [BUGGY]  if(stackSize    >    0)    {    popStack();    }    if(stackSize  >  0)  {  popStack();  System.arraycopy(pathNames,  0,  pathNames,  1,  stackSize  -  1);  }  if(stackSize  >  0)  {  popStack();  }  if(stackSize  >  0)  {  getStack();  System.arraycopy(pathNames,  0,  pathNames,  1,  stackSize  -  1);  }  [CE]  cannot  find  symbol  [FE]              ArrayIndexOutOfBoundsException    [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {      [BUGGY]  if(stackSize    >    0)    {    popStack();    }    if(stackSize  >  0)  {  popStack();  System.arraycopy(pathNames,  0,  pathNames,  1,  stackSize  -  1);  }  if(stackSize  >  0)  {  popStack();  }  if(stackSize  >  0)  {  getStack();  System.arraycopy(pathNames,  0,  pathNames,  1,  stackSize  -  1);  }  [BUGGY]      pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	261	261	2	replace	if(stackSize        >        0)        {        popStack();        }        if(stackSize    >    0)    {    popStack();    System.arraycopy(pathNames,    0,    pathNames,    1,    stackSize    -    1);    }    if(stackSize  >  0)  {  popStack();  }  if(stackSize  >  0)  {  getStack();  System.arraycopy(pathNames,  0,  pathNames,  1,  stackSize  -  1);  }	  	non-compiled	[CE]  cannot  find  symbol	156	None	add
968	[BUG]  [BUGGY]  nextIndex();  [CE]  cannot  find  symbol  [FE]            ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {      [BUGGY]  nextIndex();  [BUGGY]      pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	261	261	2	replace	nextIndex();	  if(stackSize    >    0)    {    nextIndex();    }    	non-compiled	[CE]  cannot  find  symbol	194	None	replace
969	[BUG]  [BUGGY]  if(stackSize  >  1)  {  nextIndex();  }  [CE]  cannot  find  symbol  [FE]              ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {      [BUGGY]  if(stackSize  >  1)  {  nextIndex();  }  [BUGGY]      pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	261	261	2	replace	if(stackSize  >  1)  {  nextIndex();  }	  if(stackSize    >    0)    {    nextIndex();    }    	non-compiled	[CE]  cannot  find  symbol	194	None	replace
970	[BUG]  [BUGGY]  NonArray(stackSize))  {  nextIndex();  }  [CE]  ';'  expected  [FE]                ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {      [BUGGY]  NonArray(stackSize))  {  nextIndex();  }  [BUGGY]      pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	261	261	2	replace	NonArray(stackSize))  {  nextIndex();  }	  if(stackSize    >    0)    {    nextIndex();    }    	non-compiled	[CE]  ';'  expected	194	None	replace
971	[BUG]  [BUGGY]  append(stackSize  -  0)  {  nextIndex();  }  [CE]  ';'  expected  [FE]                  ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {      [BUGGY]  append(stackSize  -  0)  {  nextIndex();  }  [BUGGY]      pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	261	261	2	replace	append(stackSize  -  0)  {  nextIndex();  }	  if(stackSize    >    0)    {    nextIndex();    }    	non-compiled	[CE]  ';'  expected	194	None	replace
972	[BUG]  [BUGGY]  append(stackSize  >  0)  {  nextIndex();  }  [CE]  ';'  expected  [FE]                    ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {      [BUGGY]  append(stackSize  >  0)  {  nextIndex();  }  [BUGGY]      pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	261	261	2	replace	append(stackSize  >  0)  {  nextIndex();  }	  if(stackSize    >    0)    {    nextIndex();    }    	non-compiled	[CE]  ';'  expected	194	None	replace
973	[BUG]  [BUGGY]  [FE]  ArrayIndexOutOfBoundsException  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {      [BUGGY]  if(stackSize    >    0)    {    popStack();    }    if(stackSize  >  0)  {  popStack();  }  if(stackSize  <  0)  {  popStack();  }  if(stackSize  >  0)  {  popStack();  }  [BUGGY]      pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	261	261	2	add	if(stackSize        >        0)        {        popStack();        }        if(stackSize    >    0)    {    popStack();    }    if(stackSize  <  0)  {  popStack();  }  if(stackSize  >  0)  {  popStack();  }	  	compilable	  [FE]  ArrayIndexOutOfBoundsException  	84	2	add
974	[BUG]  [BUGGY]  if(stackSize    >    0)    {    popStack();    }    if(stackSize  >  0)  {  popStack();  }  if(stackSize  <  0)  {  popStack();  }  if(stackSize  >  0)  {  popStack();  }  [FE]  ArrayIndexOutOfBoundsException  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {      [BUGGY]  if(stackSize    >    0)    {    popStack();    }    if(stackSize  >  0)  {  popStack();  }  if(stackSize  <  0)  {  popStack();  }  if(stackSize  >  0)  {  popStack();  }  [BUGGY]      pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	261	261	2	replace	if(stackSize        >        0)        {        popStack();        }        if(stackSize    >    0)    {    popStack();    }    if(stackSize  <  0)  {  popStack();  }  if(stackSize  >  0)  {  popStack();  }	  	compilable	  [FE]  ArrayIndexOutOfBoundsException  	84	2	add
975	[BUG]  [BUGGY]  [FE]  ArrayIndexOutOfBoundsException  [FE]      ArrayIndexOutOfBoundsException    [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {      [BUGGY]  if(stackSize    >    0)    {    popStack();    }    if(stackSize  >  0)  {  popStack();  }  if(stackSize  >  1)  {  popStack();  }  if(stackSize  >  0)  {  popStack();  }  [BUGGY]      pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	261	261	2	add	if(stackSize        >        0)        {        popStack();        }        if(stackSize    >    0)    {    popStack();    }    if(stackSize  >  1)  {  popStack();  }  if(stackSize  >  0)  {  popStack();  }	  	compilable	  [FE]  ArrayIndexOutOfBoundsException  	84	2	add
976	[BUG]  [BUGGY]  if(stackSize    >    0)    {    popStack();    }    if(stackSize  >  0)  {  popStack();  }  if(stackSize  >  1)  {  popStack();  }  if(stackSize  >  0)  {  popStack();  }  [FE]  ArrayIndexOutOfBoundsException  [FE]      ArrayIndexOutOfBoundsException    [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {      [BUGGY]  if(stackSize    >    0)    {    popStack();    }    if(stackSize  >  0)  {  popStack();  }  if(stackSize  >  1)  {  popStack();  }  if(stackSize  >  0)  {  popStack();  }  [BUGGY]      pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	261	261	2	replace	if(stackSize        >        0)        {        popStack();        }        if(stackSize    >    0)    {    popStack();    }    if(stackSize  >  1)  {  popStack();  }  if(stackSize  >  0)  {  popStack();  }	  	compilable	  [FE]  ArrayIndexOutOfBoundsException  	84	2	add
977	[BUG]  [BUGGY]  if(stackSize    >    0)    {    popStack();    }    if(stackSize  >  0)  {  popStack();  }  if(stackSize  >  0)  {  popStack();  }  if(stackSize  >  0)  {  popStack();  [CE]  ';'  expected  [FE]        ArrayIndexOutOfBoundsException    [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {      [BUGGY]  if(stackSize    >    0)    {    popStack();    }    if(stackSize  >  0)  {  popStack();  }  if(stackSize  >  0)  {  popStack();  }  if(stackSize  >  0)  {  popStack();  [BUGGY]      pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	261	261	2	replace	if(stackSize        >        0)        {        popStack();        }        if(stackSize    >    0)    {    popStack();    }    if(stackSize  >  0)  {  popStack();  }  if(stackSize  >  0)  {  popStack();	  	non-compiled	[CE]  ';'  expected	84	None	add
978	[BUG]  [BUGGY]  [FE]  ArrayIndexOutOfBoundsException  [FE]          ArrayIndexOutOfBoundsException    [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {      [BUGGY]  if(stackSize    >    0)    {    popStack();    }    if(stackSize  >  0)  {  popStack();  }  if(stackSize  >  0)  {  popStack();  }  if(stackSize  >  1)  {  popStack();  }  [BUGGY]      pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	261	261	2	add	if(stackSize        >        0)        {        popStack();        }        if(stackSize    >    0)    {    popStack();    }    if(stackSize  >  0)  {  popStack();  }  if(stackSize  >  1)  {  popStack();  }	  	compilable	  [FE]  ArrayIndexOutOfBoundsException  	84	2	add
979	[BUG]  [BUGGY]  if(stackSize    >    0)    {    popStack();    }    if(stackSize  >  0)  {  popStack();  }  if(stackSize  >  0)  {  popStack();  }  if(stackSize  >  1)  {  popStack();  }  [FE]  ArrayIndexOutOfBoundsException  [FE]          ArrayIndexOutOfBoundsException    [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {      [BUGGY]  if(stackSize    >    0)    {    popStack();    }    if(stackSize  >  0)  {  popStack();  }  if(stackSize  >  0)  {  popStack();  }  if(stackSize  >  1)  {  popStack();  }  [BUGGY]      pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	261	261	2	replace	if(stackSize        >        0)        {        popStack();        }        if(stackSize    >    0)    {    popStack();    }    if(stackSize  >  0)  {  popStack();  }  if(stackSize  >  1)  {  popStack();  }	  	compilable	  [FE]  ArrayIndexOutOfBoundsException  	84	2	add
980	[BUG]  [BUGGY]  [FE]  ArrayIndexOutOfBoundsException  [FE]    IllegalArgumentException    [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {      [BUGGY]  if(stackSize  ==  1)  {  popStack();  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	261	261	2	add	if(stackSize  ==  1)  {  popStack();  }  else  {  throw  new  IllegalArgumentException( " ");  }	  if(stackSize    ==    0)    {    popStack();    }    else    {    throw    new    IllegalArgumentException(   "   ");    }    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	178	2	replace
981	[BUG]  [BUGGY]  if(stackSize  ==  1)  {  popStack();  }  else  {  throw  new  IllegalArgumentException( " ");  }  [FE]  ArrayIndexOutOfBoundsException  [FE]    IllegalArgumentException    [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {      [BUGGY]  if(stackSize  ==  1)  {  popStack();  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	261	261	2	replace	if(stackSize  ==  1)  {  popStack();  }  else  {  throw  new  IllegalArgumentException( " ");  }	  if(stackSize    ==    0)    {    popStack();    }    else    {    throw    new    IllegalArgumentException(   "   ");    }    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	178	2	replace
982	[BUG]  [BUGGY]  if(stackSize  <  =  0)  {  popStack();  }  else  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  expression  [FE]      IllegalArgumentException    [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {      [BUGGY]  if(stackSize  <  =  0)  {  popStack();  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	261	261	2	replace	if(stackSize  <  =  0)  {  popStack();  }  else  {  throw  new  IllegalArgumentException( " ");  }	  if(stackSize    ==    0)    {    popStack();    }    else    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	178	None	replace
983	[BUG]  [BUGGY]  [FE]  IllegalArgumentException  [FE]        IllegalArgumentException    [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {      [BUGGY]  if(stackSize!=  1)  {  popStack();  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	261	261	2	add	if(stackSize!=  1)  {  popStack();  }  else  {  throw  new  IllegalArgumentException( " ");  }	  if(stackSize    ==    0)    {    popStack();    }    else    {    throw    new    IllegalArgumentException(   "   ");    }    	compilable	  [FE]  IllegalArgumentException  	178	2	replace
984	[BUG]  [BUGGY]  if(stackSize!=  1)  {  popStack();  }  else  {  throw  new  IllegalArgumentException( " ");  }  [FE]  IllegalArgumentException  [FE]        IllegalArgumentException    [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {      [BUGGY]  if(stackSize!=  1)  {  popStack();  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	261	261	2	replace	if(stackSize!=  1)  {  popStack();  }  else  {  throw  new  IllegalArgumentException( " ");  }	  if(stackSize    ==    0)    {    popStack();    }    else    {    throw    new    IllegalArgumentException(   "   ");    }    	compilable	  [FE]  IllegalArgumentException  	178	2	replace
985	[BUG]  [BUGGY]  [FE]  ArrayIndexOutOfBoundsException  [FE]          IllegalArgumentException    [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {      [BUGGY]  if(stackSize  >=  1)  {  popStack();  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	261	261	2	add	if(stackSize  >=  1)  {  popStack();  }  else  {  throw  new  IllegalArgumentException( " ");  }	  if(stackSize    ==    0)    {    popStack();    }    else    {    throw    new    IllegalArgumentException(   "   ");    }    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	178	2	replace
986	[BUG]  [BUGGY]  if(stackSize  >=  1)  {  popStack();  }  else  {  throw  new  IllegalArgumentException( " ");  }  [FE]  ArrayIndexOutOfBoundsException  [FE]          IllegalArgumentException    [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {      [BUGGY]  if(stackSize  >=  1)  {  popStack();  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	261	261	2	replace	if(stackSize  >=  1)  {  popStack();  }  else  {  throw  new  IllegalArgumentException( " ");  }	  if(stackSize    ==    0)    {    popStack();    }    else    {    throw    new    IllegalArgumentException(   "   ");    }    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	178	2	replace
987	[BUG]  [BUGGY]  _reportError( "Current  token( "+getMessage()  + ")not  a  value ", "JsonToken.NAME);  [CE]  unclosed  string  literal  [FE]                ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {      [BUGGY]  _reportError( "Current  token( "+getMessage()  + ")not  a  value ", "JsonToken.NAME);  [BUGGY]      pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	261	261	2	replace	_reportError( "Current  token( "+getMessage()  + ")not  a  value ", "JsonToken.NAME);	  _reportError(   "Current    token(   "+getMessage()    +   ")not    a    value   ",    JsonToken.NAME);    	non-compiled	[CE]  unclosed  string  literal	143	None	replace
988	[BUG]  [BUGGY]  StackTree  <  NUMBER_OF_RANGE  ||  stackSize  >  1)  {  [CE]  >  expected  [FE]                      ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {      [BUGGY]  StackTree  <  NUMBER_OF_RANGE  ||  stackSize  >  1)  {  [BUGGY]      pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	261	261	2	replace	StackTree  <  NUMBER_OF_RANGE  ||  stackSize  >  1)  {	  StackTree    <    NUMBER_OF_RANGE    ||    stackSize    >    0)    {    popStack();    }    else    {    skipStack();    }    	non-compiled	[CE]  >  expected	75	None	replace
989	[BUG]  [BUGGY]  connectToPossibleExceptionHandler(null,  pathNames,  null,  null);  [CE]  cannot  find  symbol  [FE]                          ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {      [BUGGY]  connectToPossibleExceptionHandler(null,  pathNames,  null,  null);  [BUGGY]      pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	261	261	2	replace	connectToPossibleExceptionHandler(null,  pathNames,  null,  null);	  connectToPossibleExceptionHandler(null,    null,    null);    	non-compiled	[CE]  cannot  find  symbol	78	None	replace
990	[BUG]  [BUGGY]  connectToPossibleExceptionHandler(null,  pathNames,  null);  [CE]  cannot  find  symbol  [FE]                            ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {      [BUGGY]  connectToPossibleExceptionHandler(null,  pathNames,  null);  [BUGGY]      pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	261	261	2	replace	connectToPossibleExceptionHandler(null,  pathNames,  null);	  connectToPossibleExceptionHandler(null,    null,    null);    	non-compiled	[CE]  cannot  find  symbol	78	None	replace
991	[BUG]  [BUGGY]  if(nextToken()  ==  JsonToken.VALUE_STRING)  {  if(stackSize  >  0)  {  popStack();  }  [CE]  ';'  expected  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {      [BUGGY]  if(nextToken()  ==  JsonToken.VALUE_STRING)  {  if(stackSize  >  0)  {  popStack();  }  [BUGGY]      pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	261	261	2	replace	if(nextToken()  ==  JsonToken.VALUE_STRING)  {  if(stackSize  >  0)  {  popStack();  }	  if(stackSize    >    0)    {    popStack();    }    if(stackSize    >    0)    {    popStack();    System.arraycopy(stack,    0,    pathNames,    0,    stackSize);    }    	non-compiled	[CE]  ';'  expected	93	None	replace
992	[BUG]  [BUGGY]  if(next()  ==  JsonToken.VALUE_NULL)  {  if(stackSize  >  0)  {  popStack();  }  [CE]  ';'  expected  [FE]      ArrayIndexOutOfBoundsException    [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {      [BUGGY]  if(next()  ==  JsonToken.VALUE_NULL)  {  if(stackSize  >  0)  {  popStack();  }  [BUGGY]      pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	261	261	2	replace	if(next()  ==  JsonToken.VALUE_NULL)  {  if(stackSize  >  0)  {  popStack();  }	  if(stackSize    >    0)    {    popStack();    }    if(stackSize    >    0)    {    popStack();    System.arraycopy(stack,    0,    pathNames,    0,    stackSize);    }    	non-compiled	[CE]  ';'  expected	93	None	replace
993	[BUG]  [BUGGY]  if(nextToken()  ==  JsonToken.VALUE_NULL)  {  if(stackSize  >  0)  {  popStack();  }  [CE]  ';'  expected  [FE]        ArrayIndexOutOfBoundsException    [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {      [BUGGY]  if(nextToken()  ==  JsonToken.VALUE_NULL)  {  if(stackSize  >  0)  {  popStack();  }  [BUGGY]      pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	261	261	2	replace	if(nextToken()  ==  JsonToken.VALUE_NULL)  {  if(stackSize  >  0)  {  popStack();  }	  if(stackSize    >    0)    {    popStack();    }    if(stackSize    >    0)    {    popStack();    System.arraycopy(stack,    0,    pathNames,    0,    stackSize);    }    	non-compiled	[CE]  ';'  expected	93	None	replace
994	[BUG]  [BUGGY]  Validate.notNull(pathNames  -  1);  [CE]  bad  operand  types  for  binary  operator  '-'  [FE]                        ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {      [BUGGY]  Validate.notNull(pathNames  -  1);  [BUGGY]      pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	261	261	2	replace	Validate.notNull(pathNames  -  1);	  Validate.notNull(stackSize    -    1);    	non-compiled	[CE]  bad  operand  types  for  binary  operator  '-'	203	None	replace
995	[BUG]  [BUGGY]  Validate.notEmpty(pathNames  -  1);  [CE]  bad  operand  types  for  binary  operator  '-'  [FE]                          ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {      [BUGGY]  Validate.notEmpty(pathNames  -  1);  [BUGGY]      pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	261	261	2	replace	Validate.notEmpty(pathNames  -  1);	  Validate.notNull(stackSize    -    1);    	non-compiled	[CE]  bad  operand  types  for  binary  operator  '-'	203	None	replace
996	[BUG]  [BUGGY]  if(stackSize  >  1)  {  nextName();  }  else  {  skipStack();  }  [CE]  cannot  find  symbol  [FE]                ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {      [BUGGY]  if(stackSize  >  1)  {  nextName();  }  else  {  skipStack();  }  [BUGGY]      pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	261	261	2	replace	if(stackSize  >  1)  {  nextName();  }  else  {  skipStack();  }	  if(stackSize    >    0)    {    nextName();    }    else    {    skipStack();    }    	non-compiled	[CE]  cannot  find  symbol	165	None	replace
997	[BUG]  [BUGGY]  luate(stackSize  -  1))  {  nextName();  }  else  {  skipStack();  }  [CE]  ';'  expected  [FE]                  ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {      [BUGGY]  luate(stackSize  -  1))  {  nextName();  }  else  {  skipStack();  }  [BUGGY]      pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	261	261	2	replace	luate(stackSize  -  1))  {  nextName();  }  else  {  skipStack();  }	  if(stackSize    >    0)    {    nextName();    }    else    {    skipStack();    }    	non-compiled	[CE]  ';'  expected	165	None	replace
998	[BUG]  [BUGGY]  luate(stack,  count  -  1))  {  nextName();  }  else  {  skipStack();  }  [CE]  ';'  expected  [FE]                    ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {      [BUGGY]  luate(stack,  count  -  1))  {  nextName();  }  else  {  skipStack();  }  [BUGGY]      pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	261	261	2	replace	luate(stack,  count  -  1))  {  nextName();  }  else  {  skipStack();  }	  if(stackSize    >    0)    {    nextName();    }    else    {    skipStack();    }    	non-compiled	[CE]  ';'  expected	165	None	replace
999	[BUG]  [BUGGY]  if(stackSize  >=  0)  {  nextName();  }  else  {  skipStack();  }  [CE]  cannot  find  symbol  [FE]                      ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {      [BUGGY]  if(stackSize  >=  0)  {  nextName();  }  else  {  skipStack();  }  [BUGGY]      pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	261	261	2	replace	if(stackSize  >=  0)  {  nextName();  }  else  {  skipStack();  }	  if(stackSize    >    0)    {    nextName();    }    else    {    skipStack();    }    	non-compiled	[CE]  cannot  find  symbol	165	None	replace
1000	[BUG]  [BUGGY]  if(stackSize  ==  0)  {  nextName();  }  else  {  skipStack();  }  [CE]  cannot  find  symbol  [FE]                        ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {      [BUGGY]  if(stackSize  ==  0)  {  nextName();  }  else  {  skipStack();  }  [BUGGY]      pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	261	261	2	replace	if(stackSize  ==  0)  {  nextName();  }  else  {  skipStack();  }	  if(stackSize    >    0)    {    nextName();    }    else    {    skipStack();    }    	non-compiled	[CE]  cannot  find  symbol	165	None	replace
1001	[BUG]  [BUGGY]  sb.append(JsonToken.VALUE_NUMBER_INT);  [CE]  cannot  find  symbol  VALUE_NUMBER_INT  [FE]        ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {      [BUGGY]  sb.append(JsonToken.VALUE_NUMBER_INT);  [BUGGY]      pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	261	261	2	replace	sb.append(JsonToken.VALUE_NUMBER_INT);	  pullStack();    	non-compiled	[CE]  cannot  find  symbol  VALUE_NUMBER_INT	69	None	replace
1002	[BUG]  [BUGGY]  sb.append(JsonToken.VALUE_STRING).append( "n ");  [CE]  cannot  find  symbol  VALUE_STRING  [FE]          ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {      [BUGGY]  sb.append(JsonToken.VALUE_STRING).append( "n ");  [BUGGY]      pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	261	261	2	replace	sb.append(JsonToken.VALUE_STRING).append( "n ");	  pullStack();    	non-compiled	[CE]  cannot  find  symbol  VALUE_STRING	69	None	replace
1003	[BUG]  [BUGGY]  sb.append(JsonToken.VALUE_NULL);  [CE]  cannot  find  symbol  VALUE_NULL  [FE]            ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {      [BUGGY]  sb.append(JsonToken.VALUE_NULL);  [BUGGY]      pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	261	261	2	replace	sb.append(JsonToken.VALUE_NULL);	  pullStack();    	non-compiled	[CE]  cannot  find  symbol  VALUE_NULL	69	None	replace
1004	[BUG]  [BUGGY]  sb.append(JsonToken.VALUE_STRING).append('n');  [CE]  cannot  find  symbol  VALUE_STRING  [FE]              ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {      [BUGGY]  sb.append(JsonToken.VALUE_STRING).append('n');  [BUGGY]      pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	261	261	2	replace	sb.append(JsonToken.VALUE_STRING).append('n');	  pullStack();    	non-compiled	[CE]  cannot  find  symbol  VALUE_STRING	69	None	replace
1005	[BUG]  [BUGGY]  sb.append(JsonToken.VALUE_NUMBER_FLOAT);  [CE]  cannot  find  symbol  VALUE_NUMBER_FLOAT  [FE]                ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {      [BUGGY]  sb.append(JsonToken.VALUE_NUMBER_FLOAT);  [BUGGY]      pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	261	261	2	replace	sb.append(JsonToken.VALUE_NUMBER_FLOAT);	  pullStack();    	non-compiled	[CE]  cannot  find  symbol  VALUE_NUMBER_FLOAT	69	None	replace
1006	[BUG]  [BUGGY]  _reportError( "Current  token( "+getClass().getName()  + ")not  a  value.  If(stackSize  ==  0)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  unclosed  string  literal  [FE]            ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {      [BUGGY]  _reportError( "Current  token( "+getClass().getName()  + ")not  a  value.  If(stackSize  ==  0)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	261	261	2	replace	_reportError( "Current  token( "+getClass().getName()  + ")not  a  value.  If(stackSize  ==  0)  {  throw  new  IllegalArgumentException( " ");  }	  _reportError(   "Current    token(   "+getClass().getName()    +   ")not    a    value.   ");    	non-compiled	[CE]  unclosed  string  literal	24	None	replace
1007	[BUG]  [BUGGY]  _reportError( "Current  token( "+getClass().getName()  + ")not  a  value.  If(stackSize  ==  stackSize)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  unclosed  string  literal  [FE]              ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {      [BUGGY]  _reportError( "Current  token( "+getClass().getName()  + ")not  a  value.  If(stackSize  ==  stackSize)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	261	261	2	replace	_reportError( "Current  token( "+getClass().getName()  + ")not  a  value.  If(stackSize  ==  stackSize)  {  throw  new  IllegalArgumentException( " ");  }	  _reportError(   "Current    token(   "+getClass().getName()    +   ")not    a    value.   ");    	non-compiled	[CE]  unclosed  string  literal	24	None	replace
1008	[BUG]  [BUGGY]  Validate.notEmpty(null);  [CE]  cannot  find  symbol  Validate  [FE]                    ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {      [BUGGY]  Validate.notEmpty(null);  [BUGGY]      pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	261	261	2	replace	Validate.notEmpty(null);	  Validate.notNull(stackNames);    	non-compiled	[CE]  cannot  find  symbol  Validate	102	None	replace
1009	[BUG]  [BUGGY]  _reportError( "Current  token( "+getClass().getName()  + ")not  a  value ",  count);  [CE]  cannot  find  symbol  count  [FE]            ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {      [BUGGY]  _reportError( "Current  token( "+getClass().getName()  + ")not  a  value ",  count);  [BUGGY]      pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	261	261	2	replace	_reportError( "Current  token( "+getClass().getName()  + ")not  a  value ",  count);	  _reportError(   "Current    token(   "+getClass().getName()    +   ")not    a    value   ",    stackSize);    	non-compiled	[CE]  cannot  find  symbol  count	204	None	replace
1010	[BUG]  [BUGGY]  _reportError( "Current  token( "+getClass().getName()  + ")not  a  value ",  offset);  [CE]  cannot  find  symbol  offset  [FE]              ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {      [BUGGY]  _reportError( "Current  token( "+getClass().getName()  + ")not  a  value ",  offset);  [BUGGY]      pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	261	261	2	replace	_reportError( "Current  token( "+getClass().getName()  + ")not  a  value ",  offset);	  _reportError(   "Current    token(   "+getClass().getName()    +   ")not    a    value   ",    stackSize);    	non-compiled	[CE]  cannot  find  symbol  offset	204	None	replace
1011	[BUG]  [BUGGY]  JsonToken  t  =  getCurrentToken();  _reportError( "Current  token( "+getMessage()  + ")not  a  value ",  JsonToken.END_ARRAY);  [CE]  cannot  find  symbol  [FE]                ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {      [BUGGY]  JsonToken  t  =  getCurrentToken();  _reportError( "Current  token( "+getMessage()  + ")not  a  value ",  JsonToken.END_ARRAY);  [BUGGY]      pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	261	261	2	replace	JsonToken  t  =  getCurrentToken();  _reportError( "Current  token( "+getMessage()  + ")not  a  value ",  JsonToken.END_ARRAY);	  _reportError(   "Current    token(   "+getMessage()    +   ")not    a    value   ",    JsonToken.END_ARRAY);    	non-compiled	[CE]  cannot  find  symbol	205	None	replace
1012	[BUG]  [BUGGY]  _reportError( "Current  token( "+getMessage()  + ")not  a  value ", "JsonToken.END_ARRAY ");  [CE]  cannot  find  symbol  [FE]                  ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {      [BUGGY]  _reportError( "Current  token( "+getMessage()  + ")not  a  value ", "JsonToken.END_ARRAY ");  [BUGGY]      pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	261	261	2	replace	_reportError( "Current  token( "+getMessage()  + ")not  a  value ", "JsonToken.END_ARRAY ");	  _reportError(   "Current    token(   "+getMessage()    +   ")not    a    value   ",    JsonToken.END_ARRAY);    	non-compiled	[CE]  cannot  find  symbol	205	None	replace
1013	[BUG]  [BUGGY]  [FE]  ArrayIndexOutOfBoundsException  [FE]                          ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {      [BUGGY]  if(stackSize  >  0)  {  popStack();  }  else  {  JsonToken  START_OBJECT  =  null;  pathNames[stackSize  -  1]  =  null;  }  [BUGGY]      pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	261	261	2	add	if(stackSize  >  0)  {  popStack();  }  else  {  JsonToken  START_OBJECT  =  null;  pathNames[stackSize  -  1]  =  null;  }	  if(stackSize    >    0)    {    popStack();    }    else    {    JsonToken.START_OBJECT    =    null;    pathNames[stackSize    -    1]    =    null;    }    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	140	2	replace
1014	[BUG]  [BUGGY]  if(stackSize  >  0)  {  popStack();  }  else  {  JsonToken  START_OBJECT  =  null;  pathNames[stackSize  -  1]  =  null;  }  [FE]  ArrayIndexOutOfBoundsException  [FE]                          ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {      [BUGGY]  if(stackSize  >  0)  {  popStack();  }  else  {  JsonToken  START_OBJECT  =  null;  pathNames[stackSize  -  1]  =  null;  }  [BUGGY]      pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	261	261	2	replace	if(stackSize  >  0)  {  popStack();  }  else  {  JsonToken  START_OBJECT  =  null;  pathNames[stackSize  -  1]  =  null;  }	  if(stackSize    >    0)    {    popStack();    }    else    {    JsonToken.START_OBJECT    =    null;    pathNames[stackSize    -    1]    =    null;    }    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	140	2	replace
1015	[BUG]  [BUGGY]  if(stackSize  >  0)  {  popStack();  }  else  {  JsonToken.END_OBJECT  =  null;  pathNames[stackSize  -  1]  =  null;  }  [CE]  cannot  assign  a  value  to  final  variable  END_OBJECT  [FE]                            ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {      [BUGGY]  if(stackSize  >  0)  {  popStack();  }  else  {  JsonToken.END_OBJECT  =  null;  pathNames[stackSize  -  1]  =  null;  }  [BUGGY]      pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	261	261	2	replace	if(stackSize  >  0)  {  popStack();  }  else  {  JsonToken.END_OBJECT  =  null;  pathNames[stackSize  -  1]  =  null;  }	  if(stackSize    >    0)    {    popStack();    }    else    {    JsonToken.START_OBJECT    =    null;    pathNames[stackSize    -    1]    =    null;    }    	non-compiled	[CE]  cannot  assign  a  value  to  final  variable  END_OBJECT	140	None	replace
1016	[BUG]  [BUGGY]  [FE]  ArrayIndexOutOfBoundsException  [FE]                              ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {      [BUGGY]  if(stackSize  >  0)  {  popStack();  }  else  {  JsonToken  token  =  null;  pathNames[stackSize  -  1]  =  null;  }  [BUGGY]      pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	261	261	2	add	if(stackSize  >  0)  {  popStack();  }  else  {  JsonToken  token  =  null;  pathNames[stackSize  -  1]  =  null;  }	  if(stackSize    >    0)    {    popStack();    }    else    {    JsonToken.START_OBJECT    =    null;    pathNames[stackSize    -    1]    =    null;    }    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	140	2	replace
1017	[BUG]  [BUGGY]  if(stackSize  >  0)  {  popStack();  }  else  {  JsonToken  token  =  null;  pathNames[stackSize  -  1]  =  null;  }  [FE]  ArrayIndexOutOfBoundsException  [FE]                              ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {      [BUGGY]  if(stackSize  >  0)  {  popStack();  }  else  {  JsonToken  token  =  null;  pathNames[stackSize  -  1]  =  null;  }  [BUGGY]      pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	261	261	2	replace	if(stackSize  >  0)  {  popStack();  }  else  {  JsonToken  token  =  null;  pathNames[stackSize  -  1]  =  null;  }	  if(stackSize    >    0)    {    popStack();    }    else    {    JsonToken.START_OBJECT    =    null;    pathNames[stackSize    -    1]    =    null;    }    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	140	2	replace
1018	[BUG]  [BUGGY]  if(stackSize  ==  1)  {  popStack();  }  else  {  skipStack();  }  [CE]  cannot  find  symbol  [FE]                  ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {      [BUGGY]  if(stackSize  ==  1)  {  popStack();  }  else  {  skipStack();  }  [BUGGY]      pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	261	261	2	replace	if(stackSize  ==  1)  {  popStack();  }  else  {  skipStack();  }	  if(stackSize    ==    0)    {    popStack();    }    else    {    skipStack();    }    	non-compiled	[CE]  cannot  find  symbol	109	None	replace
1019	[BUG]  [BUGGY]  append(stack.charAt(0))  {  popStack();  }  else  {  skipStack();  }  [CE]  ';'  expected  [FE]                    ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {      [BUGGY]  append(stack.charAt(0))  {  popStack();  }  else  {  skipStack();  }  [BUGGY]      pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	261	261	2	replace	append(stack.charAt(0))  {  popStack();  }  else  {  skipStack();  }	  if(stackSize    ==    0)    {    popStack();    }    else    {    skipStack();    }    	non-compiled	[CE]  ';'  expected	109	None	replace
1020	[BUG]  [BUGGY]  if(stackSize!=  0)  {  popStack();  }  else  {  skipStack();  }  [CE]  cannot  find  symbol  [FE]                      ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {      [BUGGY]  if(stackSize!=  0)  {  popStack();  }  else  {  skipStack();  }  [BUGGY]      pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	261	261	2	replace	if(stackSize!=  0)  {  popStack();  }  else  {  skipStack();  }	  if(stackSize    ==    0)    {    popStack();    }    else    {    skipStack();    }    	non-compiled	[CE]  cannot  find  symbol	109	None	replace
1021	[BUG]  [BUGGY]  if(stackSize  ==  2)  {  popStack();  }  else  {  skipStack();  }  [CE]  cannot  find  symbol  [FE]                        ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {      [BUGGY]  if(stackSize  ==  2)  {  popStack();  }  else  {  skipStack();  }  [BUGGY]      pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	261	261	2	replace	if(stackSize  ==  2)  {  popStack();  }  else  {  skipStack();  }	  if(stackSize    ==    0)    {    popStack();    }    else    {    skipStack();    }    	non-compiled	[CE]  cannot  find  symbol	109	None	replace
1022	[BUG]  [BUGGY]  String[]  pathIndices  =  getPathIndices();  [CE]  cannot  find  symbol  [FE]          AssertionFailedError      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {      [BUGGY]  String[]  pathIndices  =  getPathIndices();  [BUGGY]      pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	261	261	2	replace	String[]  pathIndices  =  getPathIndices();	          String[]    pathIndices    =    getValues();    	non-compiled	[CE]  cannot  find  symbol	119	None	replace
1023	[BUG]  [BUGGY]  String[]  pathIndices  =  getKey();  [CE]  cannot  find  symbol  [FE]            AssertionFailedError      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {      [BUGGY]  String[]  pathIndices  =  getKey();  [BUGGY]      pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	261	261	2	replace	String[]  pathIndices  =  getKey();	          String[]    pathIndices    =    getValues();    	non-compiled	[CE]  cannot  find  symbol	119	None	replace
1024	[BUG]  [BUGGY]  String[]  pathIndices  =  getPathInfo();  [CE]  cannot  find  symbol  [FE]              AssertionFailedError      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {      [BUGGY]  String[]  pathIndices  =  getPathInfo();  [BUGGY]      pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	261	261	2	replace	String[]  pathIndices  =  getPathInfo();	          String[]    pathIndices    =    getValues();    	non-compiled	[CE]  cannot  find  symbol	119	None	replace
1025	[BUG]  [BUGGY]  if(stackSize  <  1)  {  popStack();  }  else  {  skipStack();  }  [CE]  cannot  find  symbol  [FE]                    ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {      [BUGGY]  if(stackSize  <  1)  {  popStack();  }  else  {  skipStack();  }  [BUGGY]      pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	261	261	2	replace	if(stackSize  <  1)  {  popStack();  }  else  {  skipStack();  }	  if(stackSize    <    0)    {    popStack();    }    else    {    skipStack();    }    	non-compiled	[CE]  cannot  find  symbol	110	None	replace
1026	[BUG]  [BUGGY]  connectToPeek(JsonToken.START_OBJECT,  stack);  [CE]  cannot  find  symbol  START_OBJECT  [FE]                              ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {      [BUGGY]  connectToPeek(JsonToken.START_OBJECT,  stack);  [BUGGY]      pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	261	261	2	replace	connectToPeek(JsonToken.START_OBJECT,  stack);	  connectToPeek(JsonToken.START_OBJECT);    	non-compiled	[CE]  cannot  find  symbol  START_OBJECT	48	None	replace
1027	[BUG]  [BUGGY]  connectToPeek(JsonToken.START_OBJECT,  result);  [CE]  cannot  find  symbol  START_OBJECT  [FE]                                ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {      [BUGGY]  connectToPeek(JsonToken.START_OBJECT,  result);  [BUGGY]      pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	261	261	2	replace	connectToPeek(JsonToken.START_OBJECT,  result);	  connectToPeek(JsonToken.START_OBJECT);    	non-compiled	[CE]  cannot  find  symbol  START_OBJECT	48	None	replace
1028	[BUG]  [BUGGY]  if(isEnabled(Feature.QUOTE_FIELD_NAMES))  {  if(stackSize  >  1)  {  popStack();  }  [CE]  ';'  expected  [FE]    java.lang.IllegalArgumentException:      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {      [BUGGY]  if(isEnabled(Feature.QUOTE_FIELD_NAMES))  {  if(stackSize  >  1)  {  popStack();  }  [BUGGY]      pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	261	261	2	replace	if(isEnabled(Feature.QUOTE_FIELD_NAMES))  {  if(stackSize  >  1)  {  popStack();  }	  if(stackSize    >    0)    {    popStack();    }    else    {    throw    new    IllegalArgumentException(       "       ");    }    if(stackSize    >    0)    {    popStack();    }    else    {    throw    new    IllegalArgumentException(   ",   ");    }    	non-compiled	[CE]  ';'  expected	18	None	replace
1029	[BUG]  [BUGGY]  if(pathIndices!=  null)  {  if(stackSize  >  0)  {  popStack();  }  [CE]  ';'  expected  [FE]              ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {      [BUGGY]  if(pathIndices!=  null)  {  if(stackSize  >  0)  {  popStack();  }  [BUGGY]      pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	261	261	2	replace	if(pathIndices!=  null)  {  if(stackSize  >  0)  {  popStack();  }	  if(stackSize    >    0)    {    popStack();    }    if(stackSize    >    0)    {    popStack();    System.arraycopy(stackNames,    0,    pathNames,    1,    stackSize    -    1);    }    	non-compiled	[CE]  ';'  expected	162	None	replace
1030	[BUG]  [BUGGY]  if(peek()  ==  JsonToken.NAME)  {  if(stackSize  >  0)  {  popStack();  }  [CE]  ';'  expected  [FE]                ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {      [BUGGY]  if(peek()  ==  JsonToken.NAME)  {  if(stackSize  >  0)  {  popStack();  }  [BUGGY]      pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	261	261	2	replace	if(peek()  ==  JsonToken.NAME)  {  if(stackSize  >  0)  {  popStack();  }	  if(stackSize    >    0)    {    popStack();    }    if(stackSize    >    0)    {    popStack();    System.arraycopy(stackNames,    0,    pathNames,    1,    stackSize    -    1);    }    	non-compiled	[CE]  ';'  expected	162	None	replace
1031	[BUG]  [BUGGY]  if(stackSize  >  1)  {  popStack();  }  else  {  System.arraycopy(stackNames,  0,  pathNames,  1,  stackSize  -  1);  }  [CE]  cannot  find  symbol  stackNames  [FE]                  ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {      [BUGGY]  if(stackSize  >  1)  {  popStack();  }  else  {  System.arraycopy(stackNames,  0,  pathNames,  1,  stackSize  -  1);  }  [BUGGY]      pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	261	261	2	replace	if(stackSize  >  1)  {  popStack();  }  else  {  System.arraycopy(stackNames,  0,  pathNames,  1,  stackSize  -  1);  }	  if(stackSize    >    0)    {    popStack();    }    if(stackSize    >    0)    {    popStack();    System.arraycopy(stackNames,    0,    pathNames,    1,    stackSize    -    1);    }    	non-compiled	[CE]  cannot  find  symbol  stackNames	162	None	replace
1032	[BUG]  [BUGGY]  connectToPossibleExceptionHandler(jsonToken.VALUE_EMBEDDED,  stackSize);  [CE]  cannot  find  symbol  jsonToken  [FE]                      ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {      [BUGGY]  connectToPossibleExceptionHandler(jsonToken.VALUE_EMBEDDED,  stackSize);  [BUGGY]      pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	261	261	2	replace	connectToPossibleExceptionHandler(jsonToken.VALUE_EMBEDDED,  stackSize);	  connectToPossibleExceptionHandler(throwInternal(),    JsonToken.VALUE_EMBEDDED);    	non-compiled	[CE]  cannot  find  symbol  jsonToken	186	None	replace
1033	[BUG]  [BUGGY]  connectToPossibleExceptionHandler(nextInternal(),  JsonToken.VALUE_EMBEDDED);  [CE]  cannot  find  symbol  [FE]                        ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {      [BUGGY]  connectToPossibleExceptionHandler(nextInternal(),  JsonToken.VALUE_EMBEDDED);  [BUGGY]      pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	261	261	2	replace	connectToPossibleExceptionHandler(nextInternal(),  JsonToken.VALUE_EMBEDDED);	  connectToPossibleExceptionHandler(throwInternal(),    JsonToken.VALUE_EMBEDDED);    	non-compiled	[CE]  cannot  find  symbol	186	None	replace
1034	[BUG]  [BUGGY]  connectToPossibleExceptionHandler(jsonToken.value(),  JsonToken.VALUE_EMBEDDED);  [CE]  cannot  find  symbol  jsonToken  [FE]                          ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {      [BUGGY]  connectToPossibleExceptionHandler(jsonToken.value(),  JsonToken.VALUE_EMBEDDED);  [BUGGY]      pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	261	261	2	replace	connectToPossibleExceptionHandler(jsonToken.value(),  JsonToken.VALUE_EMBEDDED);	  connectToPossibleExceptionHandler(throwInternal(),    JsonToken.VALUE_EMBEDDED);    	non-compiled	[CE]  cannot  find  symbol  jsonToken	186	None	replace
1035	[BUG]  [BUGGY]  if(stackSize  >  0)  {  popStack();  }  else  {  JsonToken.VALUE_NULL  =  new  JsonToken(JsonToken.END_OBJECT);  pathNames[stackSize  -  1]  =  null;  }  [CE]  cannot  find  symbol  VALUE_NULL  [FE]                    ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {      [BUGGY]  if(stackSize  >  0)  {  popStack();  }  else  {  JsonToken.VALUE_NULL  =  new  JsonToken(JsonToken.END_OBJECT);  pathNames[stackSize  -  1]  =  null;  }  [BUGGY]      pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	261	261	2	replace	if(stackSize  >  0)  {  popStack();  }  else  {  JsonToken.VALUE_NULL  =  new  JsonToken(JsonToken.END_OBJECT);  pathNames[stackSize  -  1]  =  null;  }	  if(stackSize    >    0)    {    popStack();    }    else    {    JsonToken.VALUE_NULL    =    new    JsonToken(JsonToken.START_OBJECT);    pathNames[stackSize    -    1]    =    null;    }    	non-compiled	[CE]  cannot  find  symbol  VALUE_NULL	151	None	replace
1036	[BUG]  [BUGGY]  if(stackSize  >  0)  {  popStack();  }  else  {  JsonToken.VALUE_NULL  =  new  JsonToken(JsonToken.START_OBJECT);  pathNames[stackSize  -  1]  =  null  [CE]  ';'  expected  [FE]                      ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {      [BUGGY]  if(stackSize  >  0)  {  popStack();  }  else  {  JsonToken.VALUE_NULL  =  new  JsonToken(JsonToken.START_OBJECT);  pathNames[stackSize  -  1]  =  null  [BUGGY]      pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	261	261	2	replace	if(stackSize  >  0)  {  popStack();  }  else  {  JsonToken.VALUE_NULL  =  new  JsonToken(JsonToken.START_OBJECT);  pathNames[stackSize  -  1]  =  null	  if(stackSize    >    0)    {    popStack();    }    else    {    JsonToken.VALUE_NULL    =    new    JsonToken(JsonToken.START_OBJECT);    pathNames[stackSize    -    1]    =    null;    }    	non-compiled	[CE]  ';'  expected	151	None	replace
1037	[BUG]  [BUGGY]  connectToPossibleExceptionHandler(this,  offset);  [CE]  cannot  find  symbol  offset  [FE]                        ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {      [BUGGY]  connectToPossibleExceptionHandler(this,  offset);  [BUGGY]      pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	261	261	2	replace	connectToPossibleExceptionHandler(this,  offset);	  connectToPossibleExceptionHandler(this,    stackSize);    	non-compiled	[CE]  cannot  find  symbol  offset	137	None	replace
1038	[BUG]  [BUGGY]  connectToPossibleExceptionHandler(this,  stackSize,  SENTINEL_CLOSED);  [CE]  cannot  find  symbol  [FE]                          ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {      [BUGGY]  connectToPossibleExceptionHandler(this,  stackSize,  SENTINEL_CLOSED);  [BUGGY]      pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	261	261	2	replace	connectToPossibleExceptionHandler(this,  stackSize,  SENTINEL_CLOSED);	  connectToPossibleExceptionHandler(this,    stackSize);    	non-compiled	[CE]  cannot  find  symbol	137	None	replace
1039	[BUG]  [BUGGY]  connectToPeek(JsonToken.START_OBJECT,  JsonToken.VALUE_NUMBER_INT);  [CE]  cannot  find  symbol  START_OBJECT  [FE]                        ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {      [BUGGY]  connectToPeek(JsonToken.START_OBJECT,  JsonToken.VALUE_NUMBER_INT);  [BUGGY]      pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	261	261	2	replace	connectToPeek(JsonToken.START_OBJECT,  JsonToken.VALUE_NUMBER_INT);	  connectToPeek(JsonToken.VALUE_NUMBER_INT,    JsonToken.VALUE_NUMBER_INT);    	non-compiled	[CE]  cannot  find  symbol  START_OBJECT	216	None	replace
1040	[BUG]  [BUGGY]  connectToPeek(JsonToken.VALUE_NUMBER_INT,  JsonToken.END_OBJECT);  [CE]  cannot  find  symbol  VALUE_NUMBER_INT  [FE]                          ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {      [BUGGY]  connectToPeek(JsonToken.VALUE_NUMBER_INT,  JsonToken.END_OBJECT);  [BUGGY]      pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	261	261	2	replace	connectToPeek(JsonToken.VALUE_NUMBER_INT,  JsonToken.END_OBJECT);	  connectToPeek(JsonToken.VALUE_NUMBER_INT,    JsonToken.VALUE_NUMBER_INT);    	non-compiled	[CE]  cannot  find  symbol  VALUE_NUMBER_INT	216	None	replace
1041	[BUG]  [BUGGY]  connectToPeek(JsonToken.VALUE_NUMBER_INT,  JsonToken.VALUE_NUMBER_FACTOR);  [CE]  cannot  find  symbol  VALUE_NUMBER_INT  [FE]                            ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {      [BUGGY]  connectToPeek(JsonToken.VALUE_NUMBER_INT,  JsonToken.VALUE_NUMBER_FACTOR);  [BUGGY]      pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	261	261	2	replace	connectToPeek(JsonToken.VALUE_NUMBER_INT,  JsonToken.VALUE_NUMBER_FACTOR);	  connectToPeek(JsonToken.VALUE_NUMBER_INT,    JsonToken.VALUE_NUMBER_INT);    	non-compiled	[CE]  cannot  find  symbol  VALUE_NUMBER_INT	216	None	replace
1042	[BUG]  [BUGGY]  if(stackSize  >  0)  {  popStack();  }  else  {  JsonToken  START_OBJECT  =  null;  nextName();  pathNames[stackSize  -  1]  =  null;  }  if(stackSize  >  0)  {  popStack();  }  else  {  JsonToken  START_OBJECT  =  null;  stack();  pathNames[stackSize  -  1]  =  null;  }  [CE]  cannot  find  symbol  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {      [BUGGY]  if(stackSize  >  0)  {  popStack();  }  else  {  JsonToken  START_OBJECT  =  null;  nextName();  pathNames[stackSize  -  1]  =  null;  }  if(stackSize  >  0)  {  popStack();  }  else  {  JsonToken  START_OBJECT  =  null;  stack();  pathNames[stackSize  -  1]  =  null;  }  [BUGGY]      pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	261	261	2	replace	if(stackSize    >    0)    {    popStack();    }    else    {    JsonToken    START_OBJECT    =    null;    nextName();    pathNames[stackSize    -    1]    =    null;    }    if(stackSize  >  0)  {  popStack();  }  else  {  JsonToken  START_OBJECT  =  null;  stack();  pathNames[stackSize  -  1]  =  null;  }	  	non-compiled	[CE]  cannot  find  symbol	138	None	add
1043	[BUG]  [BUGGY]  [FE]  ArrayIndexOutOfBoundsException  [FE]      ArrayIndexOutOfBoundsException    [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {      [BUGGY]  if(stackSize  >  0)  {  popStack();  }  else  {  JsonToken  START_OBJECT  =  null;  nextName();  pathNames[stackSize  -  1]  =  null;  }  if(stackSize  >  0)  {  popStack();  }  [BUGGY]      pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	261	261	2	add	if(stackSize    >    0)    {    popStack();    }    else    {    JsonToken    START_OBJECT    =    null;    nextName();    pathNames[stackSize    -    1]    =    null;    }    if(stackSize  >  0)  {  popStack();  }	  	compilable	  [FE]  ArrayIndexOutOfBoundsException  	138	2	add
1044	[BUG]  [BUGGY]  if(stackSize  >  0)  {  popStack();  }  else  {  JsonToken  START_OBJECT  =  null;  nextName();  pathNames[stackSize  -  1]  =  null;  }  if(stackSize  >  0)  {  popStack();  }  [FE]  ArrayIndexOutOfBoundsException  [FE]      ArrayIndexOutOfBoundsException    [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {      [BUGGY]  if(stackSize  >  0)  {  popStack();  }  else  {  JsonToken  START_OBJECT  =  null;  nextName();  pathNames[stackSize  -  1]  =  null;  }  if(stackSize  >  0)  {  popStack();  }  [BUGGY]      pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	261	261	2	replace	if(stackSize    >    0)    {    popStack();    }    else    {    JsonToken    START_OBJECT    =    null;    nextName();    pathNames[stackSize    -    1]    =    null;    }    if(stackSize  >  0)  {  popStack();  }	  	compilable	  [FE]  ArrayIndexOutOfBoundsException  	138	2	add
1045	[BUG]  [BUGGY]  if(stackSize  >  0)  {  popStack();  }  else  {  JsonToken  START_OBJECT  =  null;  nextName();  pathNames[stackSize  -  1]  =  null;  }  if(stackSize  >  0)  {  popStack();  }  else  {  JsonToken  START_OBJECT  =   "null ";  pathNames[stackSize  -  1]  =  null;  }  [CE]  incompatible  types  [FE]        ArrayIndexOutOfBoundsException    [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {      [BUGGY]  if(stackSize  >  0)  {  popStack();  }  else  {  JsonToken  START_OBJECT  =  null;  nextName();  pathNames[stackSize  -  1]  =  null;  }  if(stackSize  >  0)  {  popStack();  }  else  {  JsonToken  START_OBJECT  =   "null ";  pathNames[stackSize  -  1]  =  null;  }  [BUGGY]      pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	261	261	2	replace	if(stackSize    >    0)    {    popStack();    }    else    {    JsonToken    START_OBJECT    =    null;    nextName();    pathNames[stackSize    -    1]    =    null;    }    if(stackSize  >  0)  {  popStack();  }  else  {  JsonToken  START_OBJECT  =   "null ";  pathNames[stackSize  -  1]  =  null;  }	  	non-compiled	[CE]  incompatible  types	138	None	add
1046	[BUG]  [BUGGY]  _reportError( "Current  token( "+getClass().getName()  + ")not  a  value ", "JsonToken.NAME);  [CE]  unclosed  string  literal  [FE]            ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {      [BUGGY]  _reportError( "Current  token( "+getClass().getName()  + ")not  a  value ", "JsonToken.NAME);  [BUGGY]      pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	261	261	2	replace	_reportError( "Current  token( "+getClass().getName()  + ")not  a  value ", "JsonToken.NAME);	  _reportError(   "Current    token(   "+getClass().getName()    +   ")not    a    value   ",    JsonToken.NAME);    	non-compiled	[CE]  unclosed  string  literal	154	None	replace
1047	[BUG]  [BUGGY]  PathIndices  pathIndices[stackSize  -  1]  =  System.identityHashCode(pathNames);  [CE]  ']'  expected  [FE]          AssertionFailedError      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {      [BUGGY]  PathIndices  pathIndices[stackSize  -  1]  =  System.identityHashCode(pathNames);  [BUGGY]      pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	261	261	2	replace	PathIndices  pathIndices[stackSize  -  1]  =  System.identityHashCode(pathNames);	  PathIndices    pathIndices[stackSize    -    1]    =    null;    	non-compiled	[CE]  ']'  expected	42	None	replace
1048	[BUG]  [BUGGY]  PathIndices  pathIndices[stackSize  -  1]  =  new  PathIndices();  [CE]  ']'  expected  [FE]            AssertionFailedError      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {      [BUGGY]  PathIndices  pathIndices[stackSize  -  1]  =  new  PathIndices();  [BUGGY]      pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	261	261	2	replace	PathIndices  pathIndices[stackSize  -  1]  =  new  PathIndices();	  PathIndices    pathIndices[stackSize    -    1]    =    null;    	non-compiled	[CE]  ']'  expected	42	None	replace
1049	[BUG]  [BUGGY]  PathIndices  pathIndices[stackSize  -  1]  =  this;  [CE]  ']'  expected  [FE]              AssertionFailedError      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {      [BUGGY]  PathIndices  pathIndices[stackSize  -  1]  =  this;  [BUGGY]      pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	261	261	2	replace	PathIndices  pathIndices[stackSize  -  1]  =  this;	  PathIndices    pathIndices[stackSize    -    1]    =    null;    	non-compiled	[CE]  ']'  expected	42	None	replace
1050	[BUG]  [BUGGY]  [FE]  java.lang.IllegalArgumentException:    [FE]    java.lang.IllegalArgumentException:      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {      [BUGGY]  if(stackSize    >    0)    {    popStack();    }    else    {    throw    new    IllegalArgumentException(     "     ");    }    if(stackSize  >  0)  {  popStack();  }  else  {  throw  new  IllegalArgumentException(   ",   ");  }  if(stackSize  >  0)  {  popStack();  }  else  {  throw  new  IllegalArgumentException( "null ");  }  [BUGGY]      pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	261	261	2	add	if(stackSize        >        0)        {        popStack();        }        else        {        throw        new        IllegalArgumentException(       "       ");        }        if(stackSize    >    0)    {    popStack();    }    else    {    throw    new    IllegalArgumentException(   ",   ");    }    if(stackSize  >  0)  {  popStack();  }  else  {  throw  new  IllegalArgumentException( "null ");  }	  	compilable	  [FE]  java.lang.IllegalArgumentException:    	17	2	add
1051	[BUG]  [BUGGY]  if(stackSize    >    0)    {    popStack();    }    else    {    throw    new    IllegalArgumentException(     "     ");    }    if(stackSize  >  0)  {  popStack();  }  else  {  throw  new  IllegalArgumentException(   ",   ");  }  if(stackSize  >  0)  {  popStack();  }  else  {  throw  new  IllegalArgumentException( "null ");  }  [FE]  java.lang.IllegalArgumentException:    [FE]    java.lang.IllegalArgumentException:      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {      [BUGGY]  if(stackSize    >    0)    {    popStack();    }    else    {    throw    new    IllegalArgumentException(     "     ");    }    if(stackSize  >  0)  {  popStack();  }  else  {  throw  new  IllegalArgumentException(   ",   ");  }  if(stackSize  >  0)  {  popStack();  }  else  {  throw  new  IllegalArgumentException( "null ");  }  [BUGGY]      pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	261	261	2	replace	if(stackSize        >        0)        {        popStack();        }        else        {        throw        new        IllegalArgumentException(       "       ");        }        if(stackSize    >    0)    {    popStack();    }    else    {    throw    new    IllegalArgumentException(   ",   ");    }    if(stackSize  >  0)  {  popStack();  }  else  {  throw  new  IllegalArgumentException( "null ");  }	  	compilable	  [FE]  java.lang.IllegalArgumentException:    	17	2	add
1052	[BUG]  [BUGGY]  validateValue(JsonToken.VALUE_NUMBER_INT);  [CE]  cannot  find  symbol  VALUE_NUMBER_INT  [FE]                      ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {      [BUGGY]  validateValue(JsonToken.VALUE_NUMBER_INT);  [BUGGY]      pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	261	261	2	replace	validateValue(JsonToken.VALUE_NUMBER_INT);	  validateValue(JsonToken.VALUE_EMBEDDED_ARRAY);    	non-compiled	[CE]  cannot  find  symbol  VALUE_NUMBER_INT	97	None	replace
1053	[BUG]  [BUGGY]  validateValue(JsonToken.VALUE_EMBEDDED_ARRAY,  UNREADABLE_READER);  [CE]  cannot  find  symbol  VALUE_EMBEDDED_ARRAY  [FE]                        ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {      [BUGGY]  validateValue(JsonToken.VALUE_EMBEDDED_ARRAY,  UNREADABLE_READER);  [BUGGY]      pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	261	261	2	replace	validateValue(JsonToken.VALUE_EMBEDDED_ARRAY,  UNREADABLE_READER);	  validateValue(JsonToken.VALUE_EMBEDDED_ARRAY);    	non-compiled	[CE]  cannot  find  symbol  VALUE_EMBEDDED_ARRAY	97	None	replace
1054	[BUG]  [BUGGY]  int  stackSize  =  pathIndices.size();  [CE]  cannot  find  symbol  [FE]              AssertionFailedError      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {      [BUGGY]  int  stackSize  =  pathIndices.size();  [BUGGY]      pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	261	261	2	replace	int  stackSize  =  pathIndices.size();	          int    stackSize    =    stack.size();    	non-compiled	[CE]  cannot  find  symbol	121	None	replace
1055	[BUG]  [BUGGY]  int  stackSize  =  array.size();  [CE]  cannot  find  symbol  array  [FE]                AssertionFailedError      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {      [BUGGY]  int  stackSize  =  array.size();  [BUGGY]      pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	261	261	2	replace	int  stackSize  =  array.size();	          int    stackSize    =    stack.size();    	non-compiled	[CE]  cannot  find  symbol  array	121	None	replace
1056	[BUG]  [BUGGY]  connectToPossibleExceptionHandler(jsonToken,  JsonToken.END_OBJECT);  [CE]  cannot  find  symbol  jsonToken  [FE]                      ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {      [BUGGY]  connectToPossibleExceptionHandler(jsonToken,  JsonToken.END_OBJECT);  [BUGGY]      pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	261	261	2	replace	connectToPossibleExceptionHandler(jsonToken,  JsonToken.END_OBJECT);	  connectToPossibleExceptionHandler(null,    JsonToken.END_OBJECT);    	non-compiled	[CE]  cannot  find  symbol  jsonToken	9	None	replace
1057	[BUG]  [BUGGY]          if(stackSize  >  0)  {  pathNames[stackSize  -  1]  =     "null   ";  }  if(stackSize  >  0)  {  pathNames[stackSize  -  1]  =  null   ";  }  [CE]  unclosed  string  literal  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {      [BUGGY]          if(stackSize  >  0)  {  pathNames[stackSize  -  1]  =     "null   ";  }  if(stackSize  >  0)  {  pathNames[stackSize  -  1]  =  null   ";  }  [BUGGY]      pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	261	261	2	replace	                if(stackSize    >    0)    {    pathNames[stackSize    -    1]    =       "null   ";    }    if(stackSize  >  0)  {  pathNames[stackSize  -  1]  =  null   ";  }	  	non-compiled	[CE]  unclosed  string  literal	171	None	add
1058	[BUG]  [BUGGY]  JsonToken.VALUE_NULL  =  new  JsonToken(JsonToken.NAME);  pathNames[stackSize  -  1]  =  null  [CE]  ';'  expected  [FE]                ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {      [BUGGY]  JsonToken.VALUE_NULL  =  new  JsonToken(JsonToken.NAME);  pathNames[stackSize  -  1]  =  null  [BUGGY]      pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	261	261	2	replace	JsonToken.VALUE_NULL  =  new  JsonToken(JsonToken.NAME);  pathNames[stackSize  -  1]  =  null	  if(stackSize    >    0)    {    popStack();    }    else    {    JsonToken.VALUE_NULL    =    new    JsonToken(JsonToken.NAME);    pathNames[stackSize    -    1]    =    null    	non-compiled	[CE]  ';'  expected	153	None	replace
1059	[BUG]  [BUGGY]  if(stackSize  ==  0)  {  popStack();  }  else  {  JsonToken.VALUE_NULL  =  new  JsonToken(JsonToken.NAME);  pathNames[stackSize  -  1]  =  null  [CE]  ';'  expected  [FE]                  ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {      [BUGGY]  if(stackSize  ==  0)  {  popStack();  }  else  {  JsonToken.VALUE_NULL  =  new  JsonToken(JsonToken.NAME);  pathNames[stackSize  -  1]  =  null  [BUGGY]      pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	261	261	2	replace	if(stackSize  ==  0)  {  popStack();  }  else  {  JsonToken.VALUE_NULL  =  new  JsonToken(JsonToken.NAME);  pathNames[stackSize  -  1]  =  null	  if(stackSize    >    0)    {    popStack();    }    else    {    JsonToken.VALUE_NULL    =    new    JsonToken(JsonToken.NAME);    pathNames[stackSize    -    1]    =    null    	non-compiled	[CE]  ';'  expected	153	None	replace
1060	[BUG]  [BUGGY]  if(stackSize  >  1)  {  popStack();  }  else  {  JsonToken.VALUE_NULL  =  new  JsonToken(JsonToken.NAME);  pathNames[stackSize  -  1]  =  null  [CE]  ';'  expected  [FE]                    ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {      [BUGGY]  if(stackSize  >  1)  {  popStack();  }  else  {  JsonToken.VALUE_NULL  =  new  JsonToken(JsonToken.NAME);  pathNames[stackSize  -  1]  =  null  [BUGGY]      pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	261	261	2	replace	if(stackSize  >  1)  {  popStack();  }  else  {  JsonToken.VALUE_NULL  =  new  JsonToken(JsonToken.NAME);  pathNames[stackSize  -  1]  =  null	  if(stackSize    >    0)    {    popStack();    }    else    {    JsonToken.VALUE_NULL    =    new    JsonToken(JsonToken.NAME);    pathNames[stackSize    -    1]    =    null    	non-compiled	[CE]  ';'  expected	153	None	replace
1061	[BUG]  [BUGGY]  if(stackSize  >  0)  {  popStack();  }  else  {  JsonToken.VALUE_NULL  =  new  JsonToken(JsonToken.NAME);  pathNames[stackSize  -  1]  =  null!=  pathNames[  [CE]  [FE]                      ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {      [BUGGY]  if(stackSize  >  0)  {  popStack();  }  else  {  JsonToken.VALUE_NULL  =  new  JsonToken(JsonToken.NAME);  pathNames[stackSize  -  1]  =  null!=  pathNames[  [BUGGY]      pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	261	261	2	replace	if(stackSize  >  0)  {  popStack();  }  else  {  JsonToken.VALUE_NULL  =  new  JsonToken(JsonToken.NAME);  pathNames[stackSize  -  1]  =  null!=  pathNames[	  if(stackSize    >    0)    {    popStack();    }    else    {    JsonToken.VALUE_NULL    =    new    JsonToken(JsonToken.NAME);    pathNames[stackSize    -    1]    =    null    	non-compiled	[CE]  	153	None	replace
1062	[BUG]  [BUGGY]  if(stackSize  >  0)  {  popStack();  }  else  {  JsonToken.VALUE_NULL  =  new  JsonToken(JsonToken.NAME);  pathNames[stackSize  -  1]  =  null  >>  pathNames[  [CE]  [FE]                        ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {      [BUGGY]  if(stackSize  >  0)  {  popStack();  }  else  {  JsonToken.VALUE_NULL  =  new  JsonToken(JsonToken.NAME);  pathNames[stackSize  -  1]  =  null  >>  pathNames[  [BUGGY]      pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	261	261	2	replace	if(stackSize  >  0)  {  popStack();  }  else  {  JsonToken.VALUE_NULL  =  new  JsonToken(JsonToken.NAME);  pathNames[stackSize  -  1]  =  null  >>  pathNames[	  if(stackSize    >    0)    {    popStack();    }    else    {    JsonToken.VALUE_NULL    =    new    JsonToken(JsonToken.NAME);    pathNames[stackSize    -    1]    =    null    	non-compiled	[CE]  	153	None	replace
1063	[BUG]  [BUGGY]  if(isEnabled(Feature.QUOTE_FIELD_NAMES)||  isEnabled(Feature.QUOTE_NULL_NAME))  {  if(stackSize  >  0)  {  popStack();  }  [CE]  ';'  expected  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {      [BUGGY]  if(isEnabled(Feature.QUOTE_FIELD_NAMES)||  isEnabled(Feature.QUOTE_NULL_NAME))  {  if(stackSize  >  0)  {  popStack();  }  [BUGGY]      pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	261	261	2	replace	if(isEnabled(Feature.QUOTE_FIELD_NAMES)||  isEnabled(Feature.QUOTE_NULL_NAME))  {  if(stackSize  >  0)  {  popStack();  }	  if(stackSize    >    0)    {    popStack();    }    if(stackSize    >    0)    {    popStack();    return;    }    	non-compiled	[CE]  ';'  expected	212	None	replace
1064	[BUG]  [BUGGY]  if(isEnabled(Feature.QUOTE_FIELD_NAMES)||  isEnabled(Feature.QUOTE_NON_NULL_OBJECT))  {  if(stackSize  >  0)  {  popStack();  }  [CE]  ';'  expected  [FE]      ArrayIndexOutOfBoundsException    [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {      [BUGGY]  if(isEnabled(Feature.QUOTE_FIELD_NAMES)||  isEnabled(Feature.QUOTE_NON_NULL_OBJECT))  {  if(stackSize  >  0)  {  popStack();  }  [BUGGY]      pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	261	261	2	replace	if(isEnabled(Feature.QUOTE_FIELD_NAMES)||  isEnabled(Feature.QUOTE_NON_NULL_OBJECT))  {  if(stackSize  >  0)  {  popStack();  }	  if(stackSize    >    0)    {    popStack();    }    if(stackSize    >    0)    {    popStack();    return;    }    	non-compiled	[CE]  ';'  expected	212	None	replace
1065	[BUG]  [BUGGY]  if(isEnabled(Feature.QUOTE_FIELD_NAMES)||  isEnabled(Feature.QUOTE_NON_NULL_NUMBERS))  {  if(stackSize  >  0)  {  popStack();  }  [CE]  ';'  expected  [FE]        ArrayIndexOutOfBoundsException    [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {      [BUGGY]  if(isEnabled(Feature.QUOTE_FIELD_NAMES)||  isEnabled(Feature.QUOTE_NON_NULL_NUMBERS))  {  if(stackSize  >  0)  {  popStack();  }  [BUGGY]      pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	261	261	2	replace	if(isEnabled(Feature.QUOTE_FIELD_NAMES)||  isEnabled(Feature.QUOTE_NON_NULL_NUMBERS))  {  if(stackSize  >  0)  {  popStack();  }	  if(stackSize    >    0)    {    popStack();    }    if(stackSize    >    0)    {    popStack();    return;    }    	non-compiled	[CE]  ';'  expected	212	None	replace
1066	[BUG]  [BUGGY]  quickPeek();  [CE]  cannot  find  symbol  [FE]    AssertionFailedError    [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {      [BUGGY]  quickPeek();  [BUGGY]      pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	261	261	2	replace	quickPeek();	  peek();    	non-compiled	[CE]  cannot  find  symbol	59	None	replace
1067	[BUG]  [BUGGY]  recvPeek();  [CE]  cannot  find  symbol  [FE]      AssertionFailedError    [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {      [BUGGY]  recvPeek();  [BUGGY]      pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	261	261	2	replace	recvPeek();	  peek();    	non-compiled	[CE]  cannot  find  symbol	59	None	replace
1068	[BUG]  [BUGGY]  recvNumber();  [CE]  cannot  find  symbol  [FE]        AssertionFailedError    [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {      [BUGGY]  recvNumber();  [BUGGY]      pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	261	261	2	replace	recvNumber();	  peek();    	non-compiled	[CE]  cannot  find  symbol	59	None	replace
1069	[BUG]  [BUGGY]  recvPosition();  [CE]  cannot  find  symbol  [FE]          AssertionFailedError    [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {      [BUGGY]  recvPosition();  [BUGGY]      pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	261	261	2	replace	recvPosition();	  peek();    	non-compiled	[CE]  cannot  find  symbol	59	None	replace
1070	[BUG]  [BUGGY]  flip();  [CE]  cannot  find  symbol  [FE]            AssertionFailedError    [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {      [BUGGY]  flip();  [BUGGY]      pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	261	261	2	replace	flip();	  peek();    	non-compiled	[CE]  cannot  find  symbol	59	None	replace
1071	[BUG]  [BUGGY]  if(stackSize  ==  0)  {  popStack();  }  else  {  JsonToken.START_OBJECT  =  null;  lastName();  pathNames[stackSize  -  1]  =  null;  }  [CE]  cannot  find  symbol  START_OBJECT  [FE]                              ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {      [BUGGY]  if(stackSize  ==  0)  {  popStack();  }  else  {  JsonToken.START_OBJECT  =  null;  lastName();  pathNames[stackSize  -  1]  =  null;  }  [BUGGY]      pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	261	261	2	replace	if(stackSize  ==  0)  {  popStack();  }  else  {  JsonToken.START_OBJECT  =  null;  lastName();  pathNames[stackSize  -  1]  =  null;  }	  if(stackSize    >    0)    {    popStack();    }    else    {    JsonToken.START_OBJECT    =    null;    lastName();    pathNames[stackSize    -    1]    =    null;    }    	non-compiled	[CE]  cannot  find  symbol  START_OBJECT	142	None	replace
1072	[BUG]  [BUGGY]  if(stackSize  >=  0)  {  popStack();  }  else  {  JsonToken.START_OBJECT  =  null;  lastName();  pathNames[stackSize  -  1]  =  null;  }  [CE]  cannot  find  symbol  START_OBJECT  [FE]                                ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {      [BUGGY]  if(stackSize  >=  0)  {  popStack();  }  else  {  JsonToken.START_OBJECT  =  null;  lastName();  pathNames[stackSize  -  1]  =  null;  }  [BUGGY]      pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	261	261	2	replace	if(stackSize  >=  0)  {  popStack();  }  else  {  JsonToken.START_OBJECT  =  null;  lastName();  pathNames[stackSize  -  1]  =  null;  }	  if(stackSize    >    0)    {    popStack();    }    else    {    JsonToken.START_OBJECT    =    null;    lastName();    pathNames[stackSize    -    1]    =    null;    }    	non-compiled	[CE]  cannot  find  symbol  START_OBJECT	142	None	replace
1073	[BUG]  [BUGGY]  if(stackSize  >  1)  {  popStack();  }  else  {  JsonToken.START_OBJECT  =  null;  lastName();  pathNames[stackSize  -  1]  =  null;  }  [CE]  cannot  find  symbol  START_OBJECT  [FE]                                  ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {      [BUGGY]  if(stackSize  >  1)  {  popStack();  }  else  {  JsonToken.START_OBJECT  =  null;  lastName();  pathNames[stackSize  -  1]  =  null;  }  [BUGGY]      pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	261	261	2	replace	if(stackSize  >  1)  {  popStack();  }  else  {  JsonToken.START_OBJECT  =  null;  lastName();  pathNames[stackSize  -  1]  =  null;  }	  if(stackSize    >    0)    {    popStack();    }    else    {    JsonToken.START_OBJECT    =    null;    lastName();    pathNames[stackSize    -    1]    =    null;    }    	non-compiled	[CE]  cannot  find  symbol  START_OBJECT	142	None	replace
1074	[BUG]  [BUGGY]  pathNames[stackSize  -  1]  =     "null   ";  pathNames[stackSize  -  1]  =   "null ",;  [CE]  [FE]    AssertionFailedError    [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {      [BUGGY]  pathNames[stackSize  -  1]  =     "null   ";  pathNames[stackSize  -  1]  =   "null ",;  [BUGGY]      pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	261	261	2	replace	pathNames[stackSize    -    1]    =       "null   ";    pathNames[stackSize  -  1]  =   "null ",;	  	non-compiled	[CE]  	34	None	add
1075	[BUG]  [BUGGY]  stackSize  >  0)  {  skipStack();  }  else  {  skipStack();  }  [CE]  not  a  statement  [FE]              ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {      [BUGGY]  stackSize  >  0)  {  skipStack();  }  else  {  skipStack();  }  [BUGGY]      pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	261	261	2	replace	stackSize  >  0)  {  skipStack();  }  else  {  skipStack();  }	  if(stackSize    >    0)    {    skipStack();    }    else    {    skipStack();    }    	non-compiled	[CE]  not  a  statement	164	None	replace
1076	[BUG]  [BUGGY]  if(stackSize  >=  0)  {  skipStack();  }  else  {  skipStack();  }  [CE]  cannot  find  symbol  [FE]                ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {      [BUGGY]  if(stackSize  >=  0)  {  skipStack();  }  else  {  skipStack();  }  [BUGGY]      pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	261	261	2	replace	if(stackSize  >=  0)  {  skipStack();  }  else  {  skipStack();  }	  if(stackSize    >    0)    {    skipStack();    }    else    {    skipStack();    }    	non-compiled	[CE]  cannot  find  symbol	164	None	replace
1077	[BUG]  [BUGGY]  luate(stackSize  -  1))  {  skipStack();  }  else  {  skipStack();  }  [CE]  ';'  expected  [FE]                  ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {      [BUGGY]  luate(stackSize  -  1))  {  skipStack();  }  else  {  skipStack();  }  [BUGGY]      pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	261	261	2	replace	luate(stackSize  -  1))  {  skipStack();  }  else  {  skipStack();  }	  if(stackSize    >    0)    {    skipStack();    }    else    {    skipStack();    }    	non-compiled	[CE]  ';'  expected	164	None	replace
1078	[BUG]  [BUGGY]  connectToPossibleExceptionHandler(jsonToken.VALUE_EMPTY,  JsonToken.VALUE_EMPTY);  [CE]  cannot  find  symbol  jsonToken  [FE]                            ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {      [BUGGY]  connectToPossibleExceptionHandler(jsonToken.VALUE_EMPTY,  JsonToken.VALUE_EMPTY);  [BUGGY]      pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	261	261	2	replace	connectToPossibleExceptionHandler(jsonToken.VALUE_EMPTY,  JsonToken.VALUE_EMPTY);	  connectToPossibleExceptionHandler(throwInternal(),    JsonToken.VALUE_EMPTY);    	non-compiled	[CE]  cannot  find  symbol  jsonToken	55	None	replace
1079	[BUG]  [BUGGY]  connectToPossibleExceptionHandler(JsonToken.VALUE_EMPTY,  stack);  [CE]  cannot  find  symbol  VALUE_EMPTY  [FE]                              ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {      [BUGGY]  connectToPossibleExceptionHandler(JsonToken.VALUE_EMPTY,  stack);  [BUGGY]      pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	261	261	2	replace	connectToPossibleExceptionHandler(JsonToken.VALUE_EMPTY,  stack);	  connectToPossibleExceptionHandler(throwInternal(),    JsonToken.VALUE_EMPTY);    	non-compiled	[CE]  cannot  find  symbol  VALUE_EMPTY	55	None	replace
1080	[BUG]  [BUGGY]  connectToPossibleExceptionHandler(jsonToken.value(),  JsonToken.VALUE_EMPTY);  [CE]  cannot  find  symbol  jsonToken  [FE]                                ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {      [BUGGY]  connectToPossibleExceptionHandler(jsonToken.value(),  JsonToken.VALUE_EMPTY);  [BUGGY]      pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	261	261	2	replace	connectToPossibleExceptionHandler(jsonToken.value(),  JsonToken.VALUE_EMPTY);	  connectToPossibleExceptionHandler(throwInternal(),    JsonToken.VALUE_EMPTY);    	non-compiled	[CE]  cannot  find  symbol  jsonToken	55	None	replace
1081	[BUG]  [BUGGY]  connectToPossibleExceptionHandler(nextInternal(),  JsonToken.VALUE_EMPTY);  [CE]  cannot  find  symbol  [FE]                                  ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {      [BUGGY]  connectToPossibleExceptionHandler(nextInternal(),  JsonToken.VALUE_EMPTY);  [BUGGY]      pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	261	261	2	replace	connectToPossibleExceptionHandler(nextInternal(),  JsonToken.VALUE_EMPTY);	  connectToPossibleExceptionHandler(throwInternal(),    JsonToken.VALUE_EMPTY);    	non-compiled	[CE]  cannot  find  symbol	55	None	replace
1082	[BUG]  [BUGGY]  StackTree  <  NUMBER_INDEXES  &&  stackSize  >  0)  {  popStack();  [CE]  >  expected  [FE]              ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {      [BUGGY]  StackTree  <  NUMBER_INDEXES  &&  stackSize  >  0)  {  popStack();  [BUGGY]      pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	261	261	2	replace	StackTree  <  NUMBER_INDEXES  &&  stackSize  >  0)  {  popStack();	  StackTree    <    NUMBER_INDEXES    ||    stackSize    >    0)    {    popStack();    }    else    {    skipStack();    }    	non-compiled	[CE]  >  expected	71	None	replace
1083	[BUG]  [BUGGY]  connectToPossibleExceptionHandler(startInternal(),  JsonToken.END_OBJECT);  [CE]  cannot  find  symbol  [FE]                          ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {      [BUGGY]  connectToPossibleExceptionHandler(startInternal(),  JsonToken.END_OBJECT);  [BUGGY]      pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	261	261	2	replace	connectToPossibleExceptionHandler(startInternal(),  JsonToken.END_OBJECT);	  connectToPossibleExceptionHandler(throwInternal(),    JsonToken.END_OBJECT);    	non-compiled	[CE]  cannot  find  symbol	54	None	replace
1084	[BUG]  [BUGGY]  connectToPossibleExceptionHandler(jsonToken.END_OBJECT,  stack);  [CE]  cannot  find  symbol  jsonToken  [FE]                            ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {      [BUGGY]  connectToPossibleExceptionHandler(jsonToken.END_OBJECT,  stack);  [BUGGY]      pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	261	261	2	replace	connectToPossibleExceptionHandler(jsonToken.END_OBJECT,  stack);	  connectToPossibleExceptionHandler(throwInternal(),    JsonToken.END_OBJECT);    	non-compiled	[CE]  cannot  find  symbol  jsonToken	54	None	replace
1085	[BUG]  [BUGGY]  connectToPossibleExceptionHandler(nextInternal(),  JsonToken.END_OBJECT);  [CE]  cannot  find  symbol  [FE]                              ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {      [BUGGY]  connectToPossibleExceptionHandler(nextInternal(),  JsonToken.END_OBJECT);  [BUGGY]      pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	261	261	2	replace	connectToPossibleExceptionHandler(nextInternal(),  JsonToken.END_OBJECT);	  connectToPossibleExceptionHandler(throwInternal(),    JsonToken.END_OBJECT);    	non-compiled	[CE]  cannot  find  symbol	54	None	replace
1086	[BUG]  [BUGGY]  JsonToken.END_ARRAY  =  _throwInternal();  [CE]  cannot  assign  a  value  to  final  variable  END_ARRAY  [FE]                ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {      [BUGGY]  JsonToken.END_ARRAY  =  _throwInternal();  [BUGGY]      pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	261	261	2	replace	JsonToken.END_ARRAY  =  _throwInternal();	  _throwInternal();    	non-compiled	[CE]  cannot  assign  a  value  to  final  variable  END_ARRAY	64	None	replace
1087	[BUG]  [BUGGY]  JsonToken.VALUE_STRING  =  _throwInternal();  [CE]  cannot  find  symbol  VALUE_STRING  [FE]                  ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {      [BUGGY]  JsonToken.VALUE_STRING  =  _throwInternal();  [BUGGY]      pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	261	261	2	replace	JsonToken.VALUE_STRING  =  _throwInternal();	  _throwInternal();    	non-compiled	[CE]  cannot  find  symbol  VALUE_STRING	64	None	replace
1088	[BUG]  [BUGGY]  JsonToken.NAME  :  _throwInternal();  [CE]  not  a  statement  [FE]                    ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {      [BUGGY]  JsonToken.NAME  :  _throwInternal();  [BUGGY]      pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	261	261	2	replace	JsonToken.NAME  :  _throwInternal();	  _throwInternal();    	non-compiled	[CE]  not  a  statement	64	None	replace
1089	[BUG]  [BUGGY]  StaxUtil.throwInternal();  [CE]  cannot  find  symbol  StaxUtil  [FE]                      ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {      [BUGGY]  StaxUtil.throwInternal();  [BUGGY]      pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	261	261	2	replace	StaxUtil.throwInternal();	  _throwInternal();    	non-compiled	[CE]  cannot  find  symbol  StaxUtil	64	None	replace
1090	[BUG]  [BUGGY]  connectToPossibleExceptionHandler(this.null,  null);  [CE]  <identifier>  expected  [FE]                ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {      [BUGGY]  connectToPossibleExceptionHandler(this.null,  null);  [BUGGY]      pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	261	261	2	replace	connectToPossibleExceptionHandler(this.null,  null);	  connectToPossibleExceptionHandler(ch,    null);    	non-compiled	[CE]  <identifier>  expected	169	None	replace
1091	[BUG]  [BUGGY]  _reportError( "Current  token( "+getClass().getName()  + ")not  null! ",  JsonToken.NAME);  [CE]  cannot  find  symbol  [FE]                      ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {      [BUGGY]  _reportError( "Current  token( "+getClass().getName()  + ")not  null! ",  JsonToken.NAME);  [BUGGY]      pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	261	261	2	replace	_reportError( "Current  token( "+getClass().getName()  + ")not  null! ",  JsonToken.NAME);	  _reportError(   "Current    token(   "+getClass().getName()    +   ")not    null!   ");    	non-compiled	[CE]  cannot  find  symbol	117	None	replace
1092	[BUG]  [BUGGY]  Arrays.fill(pathNames,  stackSize);  [CE]  cannot  find  symbol  Arrays  [FE]              ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {      [BUGGY]  Arrays.fill(pathNames,  stackSize);  [BUGGY]      pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	261	261	2	replace	Arrays.fill(pathNames,  stackSize);	  PopStack();    	non-compiled	[CE]  cannot  find  symbol  Arrays	60	None	replace
1093	[BUG]  [BUGGY]  PopIndices();  [CE]  cannot  find  symbol  [FE]                ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {      [BUGGY]  PopIndices();  [BUGGY]      pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	261	261	2	replace	PopIndices();	  PopStack();    	non-compiled	[CE]  cannot  find  symbol	60	None	replace
1094	[BUG]  [BUGGY]  Arrays.sort(pathIndices);  [CE]  cannot  find  symbol  Arrays  [FE]                  ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {      [BUGGY]  Arrays.sort(pathIndices);  [BUGGY]      pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	261	261	2	replace	Arrays.sort(pathIndices);	  PopStack();    	non-compiled	[CE]  cannot  find  symbol  Arrays	60	None	replace
1095	[BUG]  [BUGGY]  Arrays.sort(pathNames,  stackSize);  [CE]  cannot  find  symbol  Arrays  [FE]                    ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {      [BUGGY]  Arrays.sort(pathNames,  stackSize);  [BUGGY]      pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	261	261	2	replace	Arrays.sort(pathNames,  stackSize);	  PopStack();    	non-compiled	[CE]  cannot  find  symbol  Arrays	60	None	replace
1096	[BUG]  [BUGGY]  rehash();  [CE]  cannot  find  symbol  [FE]        ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {      [BUGGY]  rehash();  [BUGGY]      pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	261	261	2	replace	rehash();	  peech();    	non-compiled	[CE]  cannot  find  symbol	147	None	replace
1097	[BUG]  [BUGGY]  repaint();  [CE]  cannot  find  symbol  [FE]          ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {      [BUGGY]  repaint();  [BUGGY]      pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	261	261	2	replace	repaint();	  peech();    	non-compiled	[CE]  cannot  find  symbol	147	None	replace
1098	[BUG]  [BUGGY]  scan(stackSize  -  1);  [CE]  cannot  find  symbol  [FE]            ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {      [BUGGY]  scan(stackSize  -  1);  [BUGGY]      pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	261	261	2	replace	scan(stackSize  -  1);	  peech();    	non-compiled	[CE]  cannot  find  symbol	147	None	replace
1099	[BUG]  [BUGGY]  scan(stackNames,  stackSize  -  1);  [CE]  cannot  find  symbol  stackNames  [FE]              ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {      [BUGGY]  scan(stackNames,  stackSize  -  1);  [BUGGY]      pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	261	261	2	replace	scan(stackNames,  stackSize  -  1);	  peech();    	non-compiled	[CE]  cannot  find  symbol  stackNames	147	None	replace
1100	[BUG]  [BUGGY]  scan(stackSize);  [CE]  cannot  find  symbol  [FE]                ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {      [BUGGY]  scan(stackSize);  [BUGGY]      pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	261	261	2	replace	scan(stackSize);	  peech();    	non-compiled	[CE]  cannot  find  symbol	147	None	replace
1101	[BUG]  [BUGGY]  scan(stackNames,  0,  stackSize  -  1);  [CE]  cannot  find  symbol  stackNames  [FE]                  ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {      [BUGGY]  scan(stackNames,  0,  stackSize  -  1);  [BUGGY]      pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	261	261	2	replace	scan(stackNames,  0,  stackSize  -  1);	  peech();    	non-compiled	[CE]  cannot  find  symbol  stackNames	147	None	replace
1102	[BUG]  [BUGGY]  [FE]  ArrayIndexOutOfBoundsException  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {      [BUGGY]  if(stackSize    >    0)    {    popStack();    }    if(stackSize  >  0)  {  popStack();  return;  }  if(stackSize  >  1)  {  popStack();  }  if(stackSize  >  0)  {  popStack();  return;  }  [BUGGY]      pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	261	261	2	add	if(stackSize        >        0)        {        popStack();        }        if(stackSize    >    0)    {    popStack();    return;    }    if(stackSize  >  1)  {  popStack();  }  if(stackSize  >  0)  {  popStack();  return;  }	  	compilable	  [FE]  ArrayIndexOutOfBoundsException  	211	2	add
1103	[BUG]  [BUGGY]  if(stackSize    >    0)    {    popStack();    }    if(stackSize  >  0)  {  popStack();  return;  }  if(stackSize  >  1)  {  popStack();  }  if(stackSize  >  0)  {  popStack();  return;  }  [FE]  ArrayIndexOutOfBoundsException  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {      [BUGGY]  if(stackSize    >    0)    {    popStack();    }    if(stackSize  >  0)  {  popStack();  return;  }  if(stackSize  >  1)  {  popStack();  }  if(stackSize  >  0)  {  popStack();  return;  }  [BUGGY]      pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	261	261	2	replace	if(stackSize        >        0)        {        popStack();        }        if(stackSize    >    0)    {    popStack();    return;    }    if(stackSize  >  1)  {  popStack();  }  if(stackSize  >  0)  {  popStack();  return;  }	  	compilable	  [FE]  ArrayIndexOutOfBoundsException  	211	2	add
1104	[BUG]  [BUGGY]  [FE]  ArrayIndexOutOfBoundsException  [FE]              ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {      [BUGGY]  if(stackSize  >  0)  {  pathNames  =  new  String[stackSize  -  1];  }  [BUGGY]      pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	261	261	2	add	if(stackSize  >  0)  {  pathNames  =  new  String[stackSize  -  1];  }	  if(stackSize    >    0)    {    stack();    }    else    {    throw    new    IllegalArgumentException(   "   ");    }    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	181	2	replace
1105	[BUG]  [BUGGY]  if(stackSize  >  0)  {  pathNames  =  new  String[stackSize  -  1];  }  [FE]  ArrayIndexOutOfBoundsException  [FE]              ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {      [BUGGY]  if(stackSize  >  0)  {  pathNames  =  new  String[stackSize  -  1];  }  [BUGGY]      pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	261	261	2	replace	if(stackSize  >  0)  {  pathNames  =  new  String[stackSize  -  1];  }	  if(stackSize    >    0)    {    stack();    }    else    {    throw    new    IllegalArgumentException(   "   ");    }    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	181	2	replace
1106	[BUG]  [BUGGY]  [FE]  ArrayIndexOutOfBoundsException  [FE]                ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {      [BUGGY]  if(stackSize  >  0)  {  pathIndices  =  new  int[stackSize  -  1];  }  [BUGGY]      pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	261	261	2	add	if(stackSize  >  0)  {  pathIndices  =  new  int[stackSize  -  1];  }	  if(stackSize    >    0)    {    stack();    }    else    {    throw    new    IllegalArgumentException(   "   ");    }    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	181	2	replace
1107	[BUG]  [BUGGY]  if(stackSize  >  0)  {  pathIndices  =  new  int[stackSize  -  1];  }  [FE]  ArrayIndexOutOfBoundsException  [FE]                ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {      [BUGGY]  if(stackSize  >  0)  {  pathIndices  =  new  int[stackSize  -  1];  }  [BUGGY]      pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	261	261	2	replace	if(stackSize  >  0)  {  pathIndices  =  new  int[stackSize  -  1];  }	  if(stackSize    >    0)    {    stack();    }    else    {    throw    new    IllegalArgumentException(   "   ");    }    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	181	2	replace
1108	[BUG]  [BUGGY]  if(stackSize  >  0)  {  pathNames  =  new  int[stackSize  -  1];  }  [CE]  incompatible  types  [FE]                  ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {      [BUGGY]  if(stackSize  >  0)  {  pathNames  =  new  int[stackSize  -  1];  }  [BUGGY]      pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	261	261	2	replace	if(stackSize  >  0)  {  pathNames  =  new  int[stackSize  -  1];  }	  if(stackSize    >    0)    {    stack();    }    else    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  incompatible  types	181	None	replace
1109	[BUG]  [BUGGY]  _reportError( "Current  token( "+getClass().getName()  + ")Not  a  value ",  JsonToken.NAME);  [CE]  cannot  find  symbol  [FE]                  ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {      [BUGGY]  _reportError( "Current  token( "+getClass().getName()  + ")Not  a  value ",  JsonToken.NAME);  [BUGGY]      pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	261	261	2	replace	_reportError( "Current  token( "+getClass().getName()  + ")Not  a  value ",  JsonToken.NAME);	  _reportError(   "Current    token(   "+getClass().getName()    +   ")Not    a    value   ");    	non-compiled	[CE]  cannot  find  symbol	27	None	replace
1110	[BUG]  [BUGGY]  _reportError( "Current  token( "+getClass().getName()  + ")Not  a  value ",  UNREADABLE_READER);  [CE]  cannot  find  symbol  [FE]                    ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {      [BUGGY]  _reportError( "Current  token( "+getClass().getName()  + ")Not  a  value ",  UNREADABLE_READER);  [BUGGY]      pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	261	261	2	replace	_reportError( "Current  token( "+getClass().getName()  + ")Not  a  value ",  UNREADABLE_READER);	  _reportError(   "Current    token(   "+getClass().getName()    +   ")Not    a    value   ");    	non-compiled	[CE]  cannot  find  symbol	27	None	replace
1111	[BUG]  [BUGGY]          if(stackSize  >  0)  {  pathNames[stackSize  -  1]  =  null;  }  if(stackSize  >  0)  {  pathNames[stackSize  -  1)  =  null;  }  [CE]  ']'  expected  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {      [BUGGY]          if(stackSize  >  0)  {  pathNames[stackSize  -  1]  =  null;  }  if(stackSize  >  0)  {  pathNames[stackSize  -  1)  =  null;  }  [BUGGY]      pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	261	261	2	replace	                if(stackSize    >    0)    {    pathNames[stackSize    -    1]    =    null;    }    if(stackSize  >  0)  {  pathNames[stackSize  -  1)  =  null;  }	  	non-compiled	[CE]  ']'  expected	173	None	add
1112	[BUG]  [BUGGY]          if(stackSize  >  0)  {  pathNames[stackSize  -  1]  =  null;  }  int  stackSize  >  0)  {  pathNames[stackSize  -  1]  =  null;  }  [CE]  ';'  expected  [FE]      ArrayIndexOutOfBoundsException    [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {      [BUGGY]          if(stackSize  >  0)  {  pathNames[stackSize  -  1]  =  null;  }  int  stackSize  >  0)  {  pathNames[stackSize  -  1]  =  null;  }  [BUGGY]      pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	261	261	2	replace	                if(stackSize    >    0)    {    pathNames[stackSize    -    1]    =    null;    }    int  stackSize  >  0)  {  pathNames[stackSize  -  1]  =  null;  }	  	non-compiled	[CE]  ';'  expected	173	None	add
1113	[BUG]  [BUGGY]  connectToPeek(JsonToken.END_ARRAY,  JsonToken.END_OBJECT);  [CE]  cannot  find  symbol  [FE]                      ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {      [BUGGY]  connectToPeek(JsonToken.END_ARRAY,  JsonToken.END_OBJECT);  [BUGGY]      pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	261	261	2	replace	connectToPeek(JsonToken.END_ARRAY,  JsonToken.END_OBJECT);	  connectToPeek(JsonToken.END_ARRAY);    	non-compiled	[CE]  cannot  find  symbol	163	None	replace
1114	[BUG]  [BUGGY]  peek();  if(nextToken()  ==  JsonToken.VALUE_NULL)  {  nextName();  pathNames[stackSize  -  1]  =  null;  }  [CE]  cannot  find  symbol  [FE]    AssertionFailedError    [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {      [BUGGY]  peek();  if(nextToken()  ==  JsonToken.VALUE_NULL)  {  nextName();  pathNames[stackSize  -  1]  =  null;  }  [BUGGY]      pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	261	261	2	replace	peek();    if(nextToken()  ==  JsonToken.VALUE_NULL)  {  nextName();  pathNames[stackSize  -  1]  =  null;  }	  	non-compiled	[CE]  cannot  find  symbol	58	None	add
1115	[BUG]  [BUGGY]  peek();  if(nextToken()  ==  JsonToken.VALUE_NULL)  {  nextName();  pathNames[stackSize  -  1]  =   "null ";  }  [CE]  cannot  find  symbol  [FE]      AssertionFailedError    [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {      [BUGGY]  peek();  if(nextToken()  ==  JsonToken.VALUE_NULL)  {  nextName();  pathNames[stackSize  -  1]  =   "null ";  }  [BUGGY]      pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	261	261	2	replace	peek();    if(nextToken()  ==  JsonToken.VALUE_NULL)  {  nextName();  pathNames[stackSize  -  1]  =   "null ";  }	  	non-compiled	[CE]  cannot  find  symbol	58	None	add
1116	[BUG]  [BUGGY]  peek();  if(result  ==  JsonToken.VALUE_NULL)  {  nextName();  pathNames[stackSize  -  1]  =  null;  }  [CE]  cannot  find  symbol  result  [FE]        AssertionFailedError    [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {      [BUGGY]  peek();  if(result  ==  JsonToken.VALUE_NULL)  {  nextName();  pathNames[stackSize  -  1]  =  null;  }  [BUGGY]      pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	261	261	2	replace	peek();    if(result  ==  JsonToken.VALUE_NULL)  {  nextName();  pathNames[stackSize  -  1]  =  null;  }	  	non-compiled	[CE]  cannot  find  symbol  result	58	None	add
1117	[BUG]  [BUGGY]  peek();  if(result  ==  JsonToken.VALUE_NULL)  {  nextName();  pathNames[stackSize  -  1]  =   "null ";  }  [CE]  cannot  find  symbol  result  [FE]          AssertionFailedError    [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {      [BUGGY]  peek();  if(result  ==  JsonToken.VALUE_NULL)  {  nextName();  pathNames[stackSize  -  1]  =   "null ";  }  [BUGGY]      pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	261	261	2	replace	peek();    if(result  ==  JsonToken.VALUE_NULL)  {  nextName();  pathNames[stackSize  -  1]  =   "null ";  }	  	non-compiled	[CE]  cannot  find  symbol  result	58	None	add
1118	[BUG]  [BUGGY]  peek();  if(nextToken()  ==  JsonToken.VALUE_STRING)  {  nextName();  pathNames[stackSize  -  1]  =  null;  }  [CE]  cannot  find  symbol  [FE]            AssertionFailedError    [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {      [BUGGY]  peek();  if(nextToken()  ==  JsonToken.VALUE_STRING)  {  nextName();  pathNames[stackSize  -  1]  =  null;  }  [BUGGY]      pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	261	261	2	replace	peek();    if(nextToken()  ==  JsonToken.VALUE_STRING)  {  nextName();  pathNames[stackSize  -  1]  =  null;  }	  	non-compiled	[CE]  cannot  find  symbol	58	None	add
1119	[BUG]  [BUGGY]  if(stackSize    >    0)    {    popStack();    }    if(stackSize  >  0)  {  popStack();  }  pathNames[stackSize  -  1]  =     "null   ";  if(stackSize  >  0)  {  popStack();  }  if(stackSize  >  0)  {  popStack();  }  pathNames[stackSize  -  1]  =  null   ";  }  [CE]  unclosed  string  literal  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {      [BUGGY]  if(stackSize    >    0)    {    popStack();    }    if(stackSize  >  0)  {  popStack();  }  pathNames[stackSize  -  1]  =     "null   ";  if(stackSize  >  0)  {  popStack();  }  if(stackSize  >  0)  {  popStack();  }  pathNames[stackSize  -  1]  =  null   ";  }  [BUGGY]      pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	261	261	2	replace	if(stackSize        >        0)        {        popStack();        }        if(stackSize    >    0)    {    popStack();    }    pathNames[stackSize    -    1]    =       "null   ";    if(stackSize  >  0)  {  popStack();  }  if(stackSize  >  0)  {  popStack();  }  pathNames[stackSize  -  1]  =  null   ";  }	  	non-compiled	[CE]  unclosed  string  literal	86	None	add
1120	[BUG]  [BUGGY]  if(stackSize  >  0)  {  popStack();  }  else  {  JsonToken.START_OBJECT  =  null;  pathNames[stackSize  -  1]  =  null ";  }  [CE]  unclosed  string  literal  [FE]                      ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {      [BUGGY]  if(stackSize  >  0)  {  popStack();  }  else  {  JsonToken.START_OBJECT  =  null;  pathNames[stackSize  -  1]  =  null ";  }  [BUGGY]      pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	261	261	2	replace	if(stackSize  >  0)  {  popStack();  }  else  {  JsonToken.START_OBJECT  =  null;  pathNames[stackSize  -  1]  =  null ";  }	  if(stackSize    >    0)    {    popStack();    }    else    {    JsonToken.START_OBJECT    =    null;    nextName();    pathNames[stackSize    -    1]    =    null       ";    }    	non-compiled	[CE]  unclosed  string  literal	131	None	replace
1121	[BUG]  [BUGGY]  _reportError( "Current  token( "+JsonToken.VALUE_NAME+ ")not  a  value ");  [CE]  cannot  find  symbol  VALUE_NAME  [FE]                      ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {      [BUGGY]  _reportError( "Current  token( "+JsonToken.VALUE_NAME+ ")not  a  value ");  [BUGGY]      pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	261	261	2	replace	_reportError( "Current  token( "+JsonToken.VALUE_NAME+ ")not  a  value ");	  _reportError(   "Current    token(   "+JsonToken.FIELD_NAME+   ")not    a    value   ");    	non-compiled	[CE]  cannot  find  symbol  VALUE_NAME	82	None	replace
1122	[BUG]  [BUGGY]  _reportError( "Current  token( "+JsonToken.START_OBJECT+ ")not  a  value ");  [CE]  cannot  find  symbol  START_OBJECT  [FE]                        ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {      [BUGGY]  _reportError( "Current  token( "+JsonToken.START_OBJECT+ ")not  a  value ");  [BUGGY]      pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	261	261	2	replace	_reportError( "Current  token( "+JsonToken.START_OBJECT+ ")not  a  value ");	  _reportError(   "Current    token(   "+JsonToken.FIELD_NAME+   ")not    a    value   ");    	non-compiled	[CE]  cannot  find  symbol  START_OBJECT	82	None	replace
1123	[BUG]  [BUGGY]  _reportError( "Current  token( "+JsonToken.START_NAME+ ")not  a  value ");  [CE]  cannot  find  symbol  START_NAME  [FE]                          ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {      [BUGGY]  _reportError( "Current  token( "+JsonToken.START_NAME+ ")not  a  value ");  [BUGGY]      pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	261	261	2	replace	_reportError( "Current  token( "+JsonToken.START_NAME+ ")not  a  value ");	  _reportError(   "Current    token(   "+JsonToken.FIELD_NAME+   ")not    a    value   ");    	non-compiled	[CE]  cannot  find  symbol  START_NAME	82	None	replace
1124	[BUG]  [BUGGY]  if(stackSize    >    0)    {    popStack();    }    if(stackSize  >  0)  {  popStack();  }  else  {  throw  new  IllegalArgumentException(   "   ");  }  if(stackSize  >  0)  {  popStack();  }  if(stackSize  >  0)  {  popStack();  }  if(stackSize  >  0)  {  popStack();  }  if(stackSize  >  0)  {  [CE]  ';'  expected  [FE]    IllegalArgumentException    [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {      [BUGGY]  if(stackSize    >    0)    {    popStack();    }    if(stackSize  >  0)  {  popStack();  }  else  {  throw  new  IllegalArgumentException(   "   ");  }  if(stackSize  >  0)  {  popStack();  }  if(stackSize  >  0)  {  popStack();  }  if(stackSize  >  0)  {  popStack();  }  if(stackSize  >  0)  {  [BUGGY]      pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	261	261	2	replace	if(stackSize        >        0)        {        popStack();        }        if(stackSize    >    0)    {    popStack();    }    else    {    throw    new    IllegalArgumentException(   "   ");    }    if(stackSize  >  0)  {  popStack();  }  if(stackSize  >  0)  {  popStack();  }  if(stackSize  >  0)  {  popStack();  }  if(stackSize  >  0)  {	  	non-compiled	[CE]  ';'  expected	94	None	add
1125	[BUG]  [BUGGY]  if(stackSize    >    0)    {    popStack();    }    if(stackSize  >  0)  {  popStack();  }  else  {  throw  new  IllegalArgumentException(   "   ");  }  if(stackSize  >  0)  {  popStack();  }  if(stackSize  >  0)  {  popStack();  }  if(stackSize  >  0)  {  [CE]  ';'  expected  [FE]      IllegalArgumentException    [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {      [BUGGY]  if(stackSize    >    0)    {    popStack();    }    if(stackSize  >  0)  {  popStack();  }  else  {  throw  new  IllegalArgumentException(   "   ");  }  if(stackSize  >  0)  {  popStack();  }  if(stackSize  >  0)  {  popStack();  }  if(stackSize  >  0)  {  [BUGGY]      pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	261	261	2	replace	if(stackSize        >        0)        {        popStack();        }        if(stackSize    >    0)    {    popStack();    }    else    {    throw    new    IllegalArgumentException(   "   ");    }    if(stackSize  >  0)  {  popStack();  }  if(stackSize  >  0)  {  popStack();  }  if(stackSize  >  0)  {	  	non-compiled	[CE]  ';'  expected	94	None	add
1126	[BUG]  [BUGGY]  [FE]  IllegalArgumentException  [FE]        IllegalArgumentException    [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {      [BUGGY]  if(stackSize    >    0)    {    popStack();    }    if(stackSize  >  0)  {  popStack();  }  else  {  throw  new  IllegalArgumentException(   "   ");  }  if(stackSize  >  0)  {  popStack();  }  if(stackSize  >  0)  {  popStack();  }  if(stackSize  >  0)  {  popStack();  }  if(stackSize  >  0)  {  popStack();  }  [BUGGY]      pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	261	261	2	add	if(stackSize        >        0)        {        popStack();        }        if(stackSize    >    0)    {    popStack();    }    else    {    throw    new    IllegalArgumentException(   "   ");    }    if(stackSize  >  0)  {  popStack();  }  if(stackSize  >  0)  {  popStack();  }  if(stackSize  >  0)  {  popStack();  }  if(stackSize  >  0)  {  popStack();  }	  	compilable	  [FE]  IllegalArgumentException  	94	2	add
1127	[BUG]  [BUGGY]  if(stackSize    >    0)    {    popStack();    }    if(stackSize  >  0)  {  popStack();  }  else  {  throw  new  IllegalArgumentException(   "   ");  }  if(stackSize  >  0)  {  popStack();  }  if(stackSize  >  0)  {  popStack();  }  if(stackSize  >  0)  {  popStack();  }  if(stackSize  >  0)  {  popStack();  }  [FE]  IllegalArgumentException  [FE]        IllegalArgumentException    [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {      [BUGGY]  if(stackSize    >    0)    {    popStack();    }    if(stackSize  >  0)  {  popStack();  }  else  {  throw  new  IllegalArgumentException(   "   ");  }  if(stackSize  >  0)  {  popStack();  }  if(stackSize  >  0)  {  popStack();  }  if(stackSize  >  0)  {  popStack();  }  if(stackSize  >  0)  {  popStack();  }  [BUGGY]      pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	261	261	2	replace	if(stackSize        >        0)        {        popStack();        }        if(stackSize    >    0)    {    popStack();    }    else    {    throw    new    IllegalArgumentException(   "   ");    }    if(stackSize  >  0)  {  popStack();  }  if(stackSize  >  0)  {  popStack();  }  if(stackSize  >  0)  {  popStack();  }  if(stackSize  >  0)  {  popStack();  }	  	compilable	  [FE]  IllegalArgumentException  	94	2	add
1128	[BUG]  [BUGGY]  if(stackSize    >    0)    {    popStack();    }    if(stackSize  >  0)  {  popStack();  }  else  {  throw  new  IllegalArgumentException(   "   ");  }  if(stackSize  >  0)  {  popStack();  }  if(stackSize  >  0)  {  popStack();  }  if(stackSize  >  0)  {  popStack();  }  if(stackSize  >  0)  {  popStack();  [CE]  ';'  expected  [FE]          IllegalArgumentException    [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {      [BUGGY]  if(stackSize    >    0)    {    popStack();    }    if(stackSize  >  0)  {  popStack();  }  else  {  throw  new  IllegalArgumentException(   "   ");  }  if(stackSize  >  0)  {  popStack();  }  if(stackSize  >  0)  {  popStack();  }  if(stackSize  >  0)  {  popStack();  }  if(stackSize  >  0)  {  popStack();  [BUGGY]      pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	261	261	2	replace	if(stackSize        >        0)        {        popStack();        }        if(stackSize    >    0)    {    popStack();    }    else    {    throw    new    IllegalArgumentException(   "   ");    }    if(stackSize  >  0)  {  popStack();  }  if(stackSize  >  0)  {  popStack();  }  if(stackSize  >  0)  {  popStack();  }  if(stackSize  >  0)  {  popStack();	  	non-compiled	[CE]  ';'  expected	94	None	add
1129	[BUG]  [BUGGY]  if(stackIndices!=  null)  {  if(stackSize  >  0)  {  popStack();  }  [CE]  ';'  expected  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {      [BUGGY]  if(stackIndices!=  null)  {  if(stackSize  >  0)  {  popStack();  }  [BUGGY]      pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	261	261	2	replace	if(stackIndices!=  null)  {  if(stackSize  >  0)  {  popStack();  }	  if(stackSize    >    0)    {    popStack();    }    if(stackSize    >    0)    {    popStack();    System.arraycopy(pathNames,    0,    pathNames,    0,    stackSize);    }    	non-compiled	[CE]  ';'  expected	89	None	replace
1130	[BUG]  [BUGGY]  JsonToken  t  =  getCurrentToken();  _reportError( "Current  token( "+getMessage()  + ")not  a  value ",  JsonToken.FIELD_NAME);  [CE]  cannot  find  symbol  [FE]                      ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {      [BUGGY]  JsonToken  t  =  getCurrentToken();  _reportError( "Current  token( "+getMessage()  + ")not  a  value ",  JsonToken.FIELD_NAME);  [BUGGY]      pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	261	261	2	replace	JsonToken  t  =  getCurrentToken();  _reportError( "Current  token( "+getMessage()  + ")not  a  value ",  JsonToken.FIELD_NAME);	  _reportError(   "Current    token(   "+getMessage()    +   ")not    a    value   ",    JsonToken.FIELD_NAME);    	non-compiled	[CE]  cannot  find  symbol	32	None	replace
1131	[BUG]  [BUGGY]  JsonToken  token  =  getCurrentToken();  [CE]  cannot  find  symbol  [FE]          ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {      [BUGGY]  JsonToken  token  =  getCurrentToken();  [BUGGY]      pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	261	261	2	replace	JsonToken  token  =  getCurrentToken();	  ack();    	non-compiled	[CE]  cannot  find  symbol	148	None	replace
1132	[BUG]  [BUGGY]  cv.nextName();  [CE]  cannot  find  symbol  cv  [FE]            ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {      [BUGGY]  cv.nextName();  [BUGGY]      pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	261	261	2	replace	cv.nextName();	  ack();    	non-compiled	[CE]  cannot  find  symbol  cv	148	None	replace
1133	[BUG]  [BUGGY]  cv.skipValue();  [CE]  cannot  find  symbol  cv  [FE]              ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {      [BUGGY]  cv.skipValue();  [BUGGY]      pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	261	261	2	replace	cv.skipValue();	  ack();    	non-compiled	[CE]  cannot  find  symbol  cv	148	None	replace
1134	[BUG]  [BUGGY]  JsonToken  t  =  next();  [CE]  cannot  find  symbol  [FE]                ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {      [BUGGY]  JsonToken  t  =  next();  [BUGGY]      pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	261	261	2	replace	JsonToken  t  =  next();	  ack();    	non-compiled	[CE]  cannot  find  symbol	148	None	replace
1135	[BUG]  [BUGGY]  if(stackSize  >  0)  {  popStack();  }  else  {  JsonToken.VALUE_NULL  =  new  JsonToken(JsonToken.NAME);  pathNames[stackSize  -  2]  =  null;  }  [CE]  cannot  find  symbol  VALUE_NULL  [FE]              ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {      [BUGGY]  if(stackSize  >  0)  {  popStack();  }  else  {  JsonToken.VALUE_NULL  =  new  JsonToken(JsonToken.NAME);  pathNames[stackSize  -  2]  =  null;  }  [BUGGY]      pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	261	261	2	replace	if(stackSize  >  0)  {  popStack();  }  else  {  JsonToken.VALUE_NULL  =  new  JsonToken(JsonToken.NAME);  pathNames[stackSize  -  2]  =  null;  }	  if(stackSize    >    1)    {    popStack();    }    else    {    JsonToken.VALUE_NULL    =    new    JsonToken(JsonToken.NAME);    pathNames[stackSize    -    1]    =    null;    }    	non-compiled	[CE]  cannot  find  symbol  VALUE_NULL	152	None	replace
1136	[BUG]  [BUGGY]  if(stackSize  >  0)  {  popStack();  }  else  {  JsonToken.VALUE_NULL  =  new  JsonToken(JsonToken.NAME);  pathNames[stackSsize  -  1]  =  null;  }  [CE]  cannot  find  symbol  VALUE_NULL  [FE]                ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {      [BUGGY]  if(stackSize  >  0)  {  popStack();  }  else  {  JsonToken.VALUE_NULL  =  new  JsonToken(JsonToken.NAME);  pathNames[stackSsize  -  1]  =  null;  }  [BUGGY]      pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	261	261	2	replace	if(stackSize  >  0)  {  popStack();  }  else  {  JsonToken.VALUE_NULL  =  new  JsonToken(JsonToken.NAME);  pathNames[stackSsize  -  1]  =  null;  }	  if(stackSize    >    1)    {    popStack();    }    else    {    JsonToken.VALUE_NULL    =    new    JsonToken(JsonToken.NAME);    pathNames[stackSize    -    1]    =    null;    }    	non-compiled	[CE]  cannot  find  symbol  VALUE_NULL	152	None	replace
1137	[BUG]  [BUGGY]  if(stackSize    >    0)    {    popStack();    }    if(stackSize  >  0)  {  popStack();  System.arraycopy(pathNames,  0,  pathNames,  0,  stackSize  -  1);  }  if(stackSize  >  0)  {  popStack();  }  if(stackSize  >  0)  {  popStack();  System.arraycopy(pathNames,  0,  pathNames,  0,  stackSize  -  1);  [CE]  ';'  expected  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {      [BUGGY]  if(stackSize    >    0)    {    popStack();    }    if(stackSize  >  0)  {  popStack();  System.arraycopy(pathNames,  0,  pathNames,  0,  stackSize  -  1);  }  if(stackSize  >  0)  {  popStack();  }  if(stackSize  >  0)  {  popStack();  System.arraycopy(pathNames,  0,  pathNames,  0,  stackSize  -  1);  [BUGGY]      pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	261	261	2	replace	if(stackSize        >        0)        {        popStack();        }        if(stackSize    >    0)    {    popStack();    System.arraycopy(pathNames,    0,    pathNames,    0,    stackSize    -    1);    }    if(stackSize  >  0)  {  popStack();  }  if(stackSize  >  0)  {  popStack();  System.arraycopy(pathNames,  0,  pathNames,  0,  stackSize  -  1);	  	non-compiled	[CE]  ';'  expected	158	None	add
1138	[BUG]  [BUGGY]  if(stackSize    >    0)    {    popStack();    }    if(stackSize  >  0)  {  popStack();  System.arraycopy(pathNames,  0,  pathNames,  0,  stackSize  -  1);  }  if(stackSize  >  0)  {  popStack();  }  if(stackSize  >  0)  {  popStack();  System.arraycopy(pathNames,  0,  pathNames,  0,  stackSize  -  1  [CE]  ')'  expected  [FE]      ArrayIndexOutOfBoundsException    [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {      [BUGGY]  if(stackSize    >    0)    {    popStack();    }    if(stackSize  >  0)  {  popStack();  System.arraycopy(pathNames,  0,  pathNames,  0,  stackSize  -  1);  }  if(stackSize  >  0)  {  popStack();  }  if(stackSize  >  0)  {  popStack();  System.arraycopy(pathNames,  0,  pathNames,  0,  stackSize  -  1  [BUGGY]      pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	261	261	2	replace	if(stackSize        >        0)        {        popStack();        }        if(stackSize    >    0)    {    popStack();    System.arraycopy(pathNames,    0,    pathNames,    0,    stackSize    -    1);    }    if(stackSize  >  0)  {  popStack();  }  if(stackSize  >  0)  {  popStack();  System.arraycopy(pathNames,  0,  pathNames,  0,  stackSize  -  1	  	non-compiled	[CE]  ')'  expected	158	None	add
1139	[BUG]  [BUGGY]  pathIndices  =  new  String[pathIndices.length  -  1];  [CE]  incompatible  types  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {      [BUGGY]  pathIndices  =  new  String[pathIndices.length  -  1];  [BUGGY]      pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	261	261	2	replace	pathIndices  =  new  String[pathIndices.length  -  1];	  if(stackSize    >    0)    {    popStack();    }    if(stackSize    >    0)    {    popStack();    }    pathNames[stackSize    -    1]    =       "null   ";    	non-compiled	[CE]  incompatible  types	87	None	replace
1140	[BUG]  [BUGGY]  if(stackSize  >  1  &&  stack[stackSize  -  1]!=  null)  {  popStack();  }  else  {  skipStack();  }  [CE]  cannot  find  symbol  [FE]              ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {      [BUGGY]  if(stackSize  >  1  &&  stack[stackSize  -  1]!=  null)  {  popStack();  }  else  {  skipStack();  }  [BUGGY]      pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	261	261	2	replace	if(stackSize  >  1  &&  stack[stackSize  -  1]!=  null)  {  popStack();  }  else  {  skipStack();  }	  if(stackSize    >    1)    {    popStack();    }    else    {    skipStack();    }    	non-compiled	[CE]  cannot  find  symbol	107	None	replace
1141	[BUG]  [BUGGY]  if(stackSize  >  1  &&  stack[stackSize  -  1]!=  JsonToken.VALUE_NULL)  {  popStack();  }  else  {  skipStack();  }  [CE]  cannot  find  symbol  VALUE_NULL  [FE]                ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {      [BUGGY]  if(stackSize  >  1  &&  stack[stackSize  -  1]!=  JsonToken.VALUE_NULL)  {  popStack();  }  else  {  skipStack();  }  [BUGGY]      pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	261	261	2	replace	if(stackSize  >  1  &&  stack[stackSize  -  1]!=  JsonToken.VALUE_NULL)  {  popStack();  }  else  {  skipStack();  }	  if(stackSize    >    1)    {    popStack();    }    else    {    skipStack();    }    	non-compiled	[CE]  cannot  find  symbol  VALUE_NULL	107	None	replace
1142	[BUG]  [BUGGY]  if(stackSize  >  1  &&  stack[stackSize  -  1]  ==  null)  {  popStack();  }  else  {  skipStack();  }  [CE]  cannot  find  symbol  [FE]                  ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {      [BUGGY]  if(stackSize  >  1  &&  stack[stackSize  -  1]  ==  null)  {  popStack();  }  else  {  skipStack();  }  [BUGGY]      pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	261	261	2	replace	if(stackSize  >  1  &&  stack[stackSize  -  1]  ==  null)  {  popStack();  }  else  {  skipStack();  }	  if(stackSize    >    1)    {    popStack();    }    else    {    skipStack();    }    	non-compiled	[CE]  cannot  find  symbol	107	None	replace
1143	[BUG]  [BUGGY]  if(stackSize  >  1  &&  stack[stackSize  -  1]  ==  JsonToken.VALUE_NULL)  {  popStack();  }  else  {  skipStack();  }  [CE]  cannot  find  symbol  VALUE_NULL  [FE]                    ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {      [BUGGY]  if(stackSize  >  1  &&  stack[stackSize  -  1]  ==  JsonToken.VALUE_NULL)  {  popStack();  }  else  {  skipStack();  }  [BUGGY]      pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	261	261	2	replace	if(stackSize  >  1  &&  stack[stackSize  -  1]  ==  JsonToken.VALUE_NULL)  {  popStack();  }  else  {  skipStack();  }	  if(stackSize    >    1)    {    popStack();    }    else    {    skipStack();    }    	non-compiled	[CE]  cannot  find  symbol  VALUE_NULL	107	None	replace
1144	[BUG]  [BUGGY]  if(stackSize    >    0)    {    popStack();    }    if(stackSize  >  0)  {  popStack();  System.arraycopy(pathNames,  0,  pathNames,  1,  stackSize  -  1);  }  if(stackSize  >  0)  {  popStack();  }  if(stackSize  >  0)  {  popStack();  System.arraycopy(pathNames,  0,  pathNames,  1,  stackSize  -  1);  [CE]  ';'  expected  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {      [BUGGY]  if(stackSize    >    0)    {    popStack();    }    if(stackSize  >  0)  {  popStack();  System.arraycopy(pathNames,  0,  pathNames,  1,  stackSize  -  1);  }  if(stackSize  >  0)  {  popStack();  }  if(stackSize  >  0)  {  popStack();  System.arraycopy(pathNames,  0,  pathNames,  1,  stackSize  -  1);  [BUGGY]      pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	261	261	2	replace	if(stackSize        >        0)        {        popStack();        }        if(stackSize    >    0)    {    popStack();    System.arraycopy(pathNames,    0,    pathNames,    1,    stackSize    -    1);    }    if(stackSize  >  0)  {  popStack();  }  if(stackSize  >  0)  {  popStack();  System.arraycopy(pathNames,  0,  pathNames,  1,  stackSize  -  1);	  	non-compiled	[CE]  ';'  expected	156	None	add
1145	[BUG]  [BUGGY]  if(stackSize    >    0)    {    popStack();    }    if(stackSize  >  0)  {  popStack();  System.arraycopy(pathNames,  0,  pathNames,  1,  stackSize  -  1);  }  if(stackSize  >  0)  {  popStack();  }  if(stackSize  >  0)  {  popStack();  }  if(stackSize  >  0)  {  popStack();  System.arraycopy(pathNames,  0,  pathNames,  1,  stackSize  -  1  [CE]  ')'  expected  [FE]      ArrayIndexOutOfBoundsException    [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {      [BUGGY]  if(stackSize    >    0)    {    popStack();    }    if(stackSize  >  0)  {  popStack();  System.arraycopy(pathNames,  0,  pathNames,  1,  stackSize  -  1);  }  if(stackSize  >  0)  {  popStack();  }  if(stackSize  >  0)  {  popStack();  }  if(stackSize  >  0)  {  popStack();  System.arraycopy(pathNames,  0,  pathNames,  1,  stackSize  -  1  [BUGGY]      pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	261	261	2	replace	if(stackSize        >        0)        {        popStack();        }        if(stackSize    >    0)    {    popStack();    System.arraycopy(pathNames,    0,    pathNames,    1,    stackSize    -    1);    }    if(stackSize  >  0)  {  popStack();  }  if(stackSize  >  0)  {  popStack();  }  if(stackSize  >  0)  {  popStack();  System.arraycopy(pathNames,  0,  pathNames,  1,  stackSize  -  1	  	non-compiled	[CE]  ')'  expected	156	None	add
1146	[BUG]  [BUGGY]  [FE]  ArrayIndexOutOfBoundsException  [FE]        ArrayIndexOutOfBoundsException    [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {      [BUGGY]  if(stackSize    >    0)    {    popStack();    }    if(stackSize  >  0)  {  popStack();  System.arraycopy(pathNames,  0,  pathNames,  1,  stackSize  -  1);  }  if(stackSize  >  0)  {  popStack();  }  if(stackSize  >  0)  {  popStack();  }  if(stackSize  >  0)  {  popStack();  System.arraycopy(pathNames,  0,  pathNames,  1,  stackSize  -  1);  }  [BUGGY]      pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	261	261	2	add	if(stackSize        >        0)        {        popStack();        }        if(stackSize    >    0)    {    popStack();    System.arraycopy(pathNames,    0,    pathNames,    1,    stackSize    -    1);    }    if(stackSize  >  0)  {  popStack();  }  if(stackSize  >  0)  {  popStack();  }  if(stackSize  >  0)  {  popStack();  System.arraycopy(pathNames,  0,  pathNames,  1,  stackSize  -  1);  }	  	compilable	  [FE]  ArrayIndexOutOfBoundsException  	156	2	add
1147	[BUG]  [BUGGY]  if(stackSize    >    0)    {    popStack();    }    if(stackSize  >  0)  {  popStack();  System.arraycopy(pathNames,  0,  pathNames,  1,  stackSize  -  1);  }  if(stackSize  >  0)  {  popStack();  }  if(stackSize  >  0)  {  popStack();  }  if(stackSize  >  0)  {  popStack();  System.arraycopy(pathNames,  0,  pathNames,  1,  stackSize  -  1);  }  [FE]  ArrayIndexOutOfBoundsException  [FE]        ArrayIndexOutOfBoundsException    [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {      [BUGGY]  if(stackSize    >    0)    {    popStack();    }    if(stackSize  >  0)  {  popStack();  System.arraycopy(pathNames,  0,  pathNames,  1,  stackSize  -  1);  }  if(stackSize  >  0)  {  popStack();  }  if(stackSize  >  0)  {  popStack();  }  if(stackSize  >  0)  {  popStack();  System.arraycopy(pathNames,  0,  pathNames,  1,  stackSize  -  1);  }  [BUGGY]      pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	261	261	2	replace	if(stackSize        >        0)        {        popStack();        }        if(stackSize    >    0)    {    popStack();    System.arraycopy(pathNames,    0,    pathNames,    1,    stackSize    -    1);    }    if(stackSize  >  0)  {  popStack();  }  if(stackSize  >  0)  {  popStack();  }  if(stackSize  >  0)  {  popStack();  System.arraycopy(pathNames,  0,  pathNames,  1,  stackSize  -  1);  }	  	compilable	  [FE]  ArrayIndexOutOfBoundsException  	156	2	add
1148	[BUG]  [BUGGY]  connectToPeek(JsonToken.VALUE_NUMBER_INT,  JsonToken.FIELD_NAME));  [CE]  ';'  expected  [FE]                              ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {      [BUGGY]  connectToPeek(JsonToken.VALUE_NUMBER_INT,  JsonToken.FIELD_NAME));  [BUGGY]      pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	261	261	2	replace	connectToPeek(JsonToken.VALUE_NUMBER_INT,  JsonToken.FIELD_NAME));	  connectToPeek(JsonToken.VALUE_NUMBER_INT,    JsonToken.VALUE_NUMBER_INT));    	non-compiled	[CE]  ';'  expected	219	None	replace
1149	[BUG]  [BUGGY]  connectToPeek(JsonToken.VALUE_NUMBER_INT,  JsonToken.END_ARRAY));  [CE]  ';'  expected  [FE]                                ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {      [BUGGY]  connectToPeek(JsonToken.VALUE_NUMBER_INT,  JsonToken.END_ARRAY));  [BUGGY]      pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	261	261	2	replace	connectToPeek(JsonToken.VALUE_NUMBER_INT,  JsonToken.END_ARRAY));	  connectToPeek(JsonToken.VALUE_NUMBER_INT,    JsonToken.VALUE_NUMBER_INT));    	non-compiled	[CE]  ';'  expected	219	None	replace
1150	[BUG]  [BUGGY]  validateValue(JsonToken.VALUE_NUMBER_INT,  JsonToken.VALUE_NUMBER_INT));  [CE]  ';'  expected  [FE]                                  ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {      [BUGGY]  validateValue(JsonToken.VALUE_NUMBER_INT,  JsonToken.VALUE_NUMBER_INT));  [BUGGY]      pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	261	261	2	replace	validateValue(JsonToken.VALUE_NUMBER_INT,  JsonToken.VALUE_NUMBER_INT));	  connectToPeek(JsonToken.VALUE_NUMBER_INT,    JsonToken.VALUE_NUMBER_INT));    	non-compiled	[CE]  ';'  expected	219	None	replace
1151	[BUG]  [BUGGY]  connectToPossibleExceptionHandler(this,  JsonToken.END_ARRAY);  [CE]  cannot  find  symbol  [FE]                  ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {      [BUGGY]  connectToPossibleExceptionHandler(this,  JsonToken.END_ARRAY);  [BUGGY]      pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	261	261	2	replace	connectToPossibleExceptionHandler(this,  JsonToken.END_ARRAY);	  connectToPossibleExceptionHandler(this.throwInternal());    	non-compiled	[CE]  cannot  find  symbol	50	None	replace
1152	[BUG]  [BUGGY]  connectToPossibleExceptionHandler(this.throwInternal(),  this);  [CE]  cannot  find  symbol  [FE]                    ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {      [BUGGY]  connectToPossibleExceptionHandler(this.throwInternal(),  this);  [BUGGY]      pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	261	261	2	replace	connectToPossibleExceptionHandler(this.throwInternal(),  this);	  connectToPossibleExceptionHandler(this.throwInternal());    	non-compiled	[CE]  cannot  find  symbol	50	None	replace
1153	[BUG]  [BUGGY]  _reportError( "Current  token( "+getClass().getName()  + ")not  a  value ",  JsonToken.START_OBJECT);  [CE]  cannot  find  symbol  START_OBJECT  [FE]              ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {      [BUGGY]  _reportError( "Current  token( "+getClass().getName()  + ")not  a  value ",  JsonToken.START_OBJECT);  [BUGGY]      pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	261	261	2	replace	_reportError( "Current  token( "+getClass().getName()  + ")not  a  value ",  JsonToken.START_OBJECT);	  _reportError(   "Current    token(   "+getClass().getName()    +   ")not    a    value   ",    JsonToken.VALUE_NULL);    	non-compiled	[CE]  cannot  find  symbol  START_OBJECT	25	None	replace
1154	[BUG]  [BUGGY]  Path[]  pathIndices  =  getPathIndices();  [CE]  cannot  find  symbol  [FE]            AssertionFailedError      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {      [BUGGY]  Path[]  pathIndices  =  getPathIndices();  [BUGGY]      pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	261	261	2	replace	Path[]  pathIndices  =  getPathIndices();	          Path[]    pathIndices    =    getValues();    	non-compiled	[CE]  cannot  find  symbol	120	None	replace
1155	[BUG]  [BUGGY]  Path[]  pathIndices  =  getPathInfo();  [CE]  cannot  find  symbol  [FE]              AssertionFailedError      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {      [BUGGY]  Path[]  pathIndices  =  getPathInfo();  [BUGGY]      pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	261	261	2	replace	Path[]  pathIndices  =  getPathInfo();	          Path[]    pathIndices    =    getValues();    	non-compiled	[CE]  cannot  find  symbol	120	None	replace
1156	[BUG]  [BUGGY]  if(stackSize  >  0)  {  popStack();  }  else  {  JsonToken.VALUE_NULL  =  new  JsonToken(JsonToken.FIELD_NAME);  pathNames[stackSize  -  2]  =  null;  }  [CE]  cannot  find  symbol  VALUE_NULL  [FE]                ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {      [BUGGY]  if(stackSize  >  0)  {  popStack();  }  else  {  JsonToken.VALUE_NULL  =  new  JsonToken(JsonToken.FIELD_NAME);  pathNames[stackSize  -  2]  =  null;  }  [BUGGY]      pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	261	261	2	replace	if(stackSize  >  0)  {  popStack();  }  else  {  JsonToken.VALUE_NULL  =  new  JsonToken(JsonToken.FIELD_NAME);  pathNames[stackSize  -  2]  =  null;  }	  if(stackSize    >    1)    {    popStack();    }    else    {    JsonToken.VALUE_NULL    =    new    JsonToken(JsonToken.FIELD_NAME);    pathNames[stackSize    -    1]    =    null;    }    	non-compiled	[CE]  cannot  find  symbol  VALUE_NULL	149	None	replace
1157	[BUG]  [BUGGY]  if(stackSize  >=  1)  {  popStack();  }  else  {  skipStack();  }  [CE]  cannot  find  symbol  [FE]                ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {      [BUGGY]  if(stackSize  >=  1)  {  popStack();  }  else  {  skipStack();  }  [BUGGY]      pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	261	261	2	replace	if(stackSize  >=  1)  {  popStack();  }  else  {  skipStack();  }	  if(stackSize    >=    0)    {    popStack();    }    else    {    skipStack();    }    	non-compiled	[CE]  cannot  find  symbol	108	None	replace
1158	[BUG]  [BUGGY]  _reportError( "Current  token( "+getMessage()  + ")not  a  value.n ");  [CE]  cannot  find  symbol  [FE]                ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {      [BUGGY]  _reportError( "Current  token( "+getMessage()  + ")not  a  value.n ");  [BUGGY]      pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	261	261	2	replace	_reportError( "Current  token( "+getMessage()  + ")not  a  value.n ");	  _reportError(   "Current    token(   "+getMessage()    +   ")not    a    value.   ");    	non-compiled	[CE]  cannot  find  symbol	29	None	replace
1159	[BUG]  [BUGGY]  _reportError( "Current  token( "+getMessage()  + ")not  a  value.  If(stackSize  ==  0)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  unclosed  string  literal  [FE]                  ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {      [BUGGY]  _reportError( "Current  token( "+getMessage()  + ")not  a  value.  If(stackSize  ==  0)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	261	261	2	replace	_reportError( "Current  token( "+getMessage()  + ")not  a  value.  If(stackSize  ==  0)  {  throw  new  IllegalArgumentException( " ");  }	  _reportError(   "Current    token(   "+getMessage()    +   ")not    a    value.   ");    	non-compiled	[CE]  unclosed  string  literal	29	None	replace
1160	[BUG]  [BUGGY]  _reportError( "Current  token( "+getMessage()  + ")not  a  value.  If(stackSize  ==  stackSize)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  unclosed  string  literal  [FE]                    ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {      [BUGGY]  _reportError( "Current  token( "+getMessage()  + ")not  a  value.  If(stackSize  ==  stackSize)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	261	261	2	replace	_reportError( "Current  token( "+getMessage()  + ")not  a  value.  If(stackSize  ==  stackSize)  {  throw  new  IllegalArgumentException( " ");  }	  _reportError(   "Current    token(   "+getMessage()    +   ")not    a    value.   ");    	non-compiled	[CE]  unclosed  string  literal	29	None	replace
1161	[BUG]  [BUGGY]  _reportError( "Current  token( "+getMessage()  + ")not  a  value.  If(stackSize  ==  0)  {  throw  new  JsonTokenException( " ");  }  [CE]  unclosed  string  literal  [FE]                      ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {      [BUGGY]  _reportError( "Current  token( "+getMessage()  + ")not  a  value.  If(stackSize  ==  0)  {  throw  new  JsonTokenException( " ");  }  [BUGGY]      pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	261	261	2	replace	_reportError( "Current  token( "+getMessage()  + ")not  a  value.  If(stackSize  ==  0)  {  throw  new  JsonTokenException( " ");  }	  _reportError(   "Current    token(   "+getMessage()    +   ")not    a    value.   ");    	non-compiled	[CE]  unclosed  string  literal	29	None	replace
1162	[BUG]  [BUGGY]  _reportError( "Current  token( "+getMessage()  + ")not  a  value.  If(stackSize  ==  1  ||  stackSize  ==  0)? ");  [CE]  cannot  find  symbol  [FE]                        ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {      [BUGGY]  _reportError( "Current  token( "+getMessage()  + ")not  a  value.  If(stackSize  ==  1  ||  stackSize  ==  0)? ");  [BUGGY]      pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	261	261	2	replace	_reportError( "Current  token( "+getMessage()  + ")not  a  value.  If(stackSize  ==  1  ||  stackSize  ==  0)? ");	  _reportError(   "Current    token(   "+getMessage()    +   ")not    a    value.   ");    	non-compiled	[CE]  cannot  find  symbol	29	None	replace
1163	[BUG]  [BUGGY]  pathIndices[stackSize  -  2]  =  new  String(pathNames);  [CE]  no  suitable  constructor  found  for  String(String[])  [FE]                              ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {      [BUGGY]  pathIndices[stackSize  -  2]  =  new  String(pathNames);  [BUGGY]      pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	261	261	2	replace	pathIndices[stackSize  -  2]  =  new  String(pathNames);	  pathIndices[stackSize    -    2]    =    null;    	non-compiled	[CE]  no  suitable  constructor  found  for  String(String[])	23	None	replace
1164	[BUG]  [BUGGY]  pathIndices[stackSize  -  2]  =  JsonToken.VALUE_NUMBER_INT;  [CE]  cannot  find  symbol  VALUE_NUMBER_INT  [FE]                                ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {      [BUGGY]  pathIndices[stackSize  -  2]  =  JsonToken.VALUE_NUMBER_INT;  [BUGGY]      pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	261	261	2	replace	pathIndices[stackSize  -  2]  =  JsonToken.VALUE_NUMBER_INT;	  pathIndices[stackSize    -    2]    =    null;    	non-compiled	[CE]  cannot  find  symbol  VALUE_NUMBER_INT	23	None	replace
1165	[BUG]  [BUGGY]  [FE]  IllegalArgumentException  [FE]    IllegalArgumentException    [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {      [BUGGY]  if(stackSize  <  1)  {  popStack();  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	261	261	2	add	if(stackSize  <  1)  {  popStack();  }  else  {  throw  new  IllegalArgumentException( " ");  }	  if(stackSize    >    0)    {    popStack();    }    else    {    throw    new    IllegalArgumentException(       "       ");    }    if(stackSize    >    0)    {    popStack();    }    else    {    throw    new    IllegalArgumentException(   ".   ");    }    	compilable	  [FE]  IllegalArgumentException  	14	2	replace
1166	[BUG]  [BUGGY]  if(stackSize  <  1)  {  popStack();  }  else  {  throw  new  IllegalArgumentException( " ");  }  [FE]  IllegalArgumentException  [FE]    IllegalArgumentException    [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {      [BUGGY]  if(stackSize  <  1)  {  popStack();  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	261	261	2	replace	if(stackSize  <  1)  {  popStack();  }  else  {  throw  new  IllegalArgumentException( " ");  }	  if(stackSize    >    0)    {    popStack();    }    else    {    throw    new    IllegalArgumentException(       "       ");    }    if(stackSize    >    0)    {    popStack();    }    else    {    throw    new    IllegalArgumentException(   ".   ");    }    	compilable	  [FE]  IllegalArgumentException  	14	2	replace
1167	[BUG]  [BUGGY]  pathIndices[stackSize  -  1]  =  null;  pathIndices[stackSize  -  1]  =  null;  [CE]  incompatible  types  [FE]      IllegalArgumentException    [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {      [BUGGY]  pathIndices[stackSize  -  1]  =  null;  pathIndices[stackSize  -  1]  =  null;  [BUGGY]      pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	261	261	2	replace	pathIndices[stackSize  -  1]  =  null;  pathIndices[stackSize  -  1]  =  null;	  if(stackSize    >    0)    {    popStack();    }    else    {    throw    new    IllegalArgumentException(       "       ");    }    if(stackSize    >    0)    {    popStack();    }    else    {    throw    new    IllegalArgumentException(   ".   ");    }    	non-compiled	[CE]  incompatible  types	14	None	replace
1168	[BUG]  [BUGGY]  [FE]  IllegalArgumentException  [FE]        IllegalArgumentException    [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {      [BUGGY]  if(stackSize  >  1)  {  popStack();  }  else  {  throw  new  IllegalArgumentException( ". ");  }  [BUGGY]      pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	261	261	2	add	if(stackSize  >  1)  {  popStack();  }  else  {  throw  new  IllegalArgumentException( ". ");  }	  if(stackSize    >    0)    {    popStack();    }    else    {    throw    new    IllegalArgumentException(       "       ");    }    if(stackSize    >    0)    {    popStack();    }    else    {    throw    new    IllegalArgumentException(   ".   ");    }    	compilable	  [FE]  IllegalArgumentException  	14	2	replace
1169	[BUG]  [BUGGY]  if(stackSize  >  1)  {  popStack();  }  else  {  throw  new  IllegalArgumentException( ". ");  }  [FE]  IllegalArgumentException  [FE]        IllegalArgumentException    [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {      [BUGGY]  if(stackSize  >  1)  {  popStack();  }  else  {  throw  new  IllegalArgumentException( ". ");  }  [BUGGY]      pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	261	261	2	replace	if(stackSize  >  1)  {  popStack();  }  else  {  throw  new  IllegalArgumentException( ". ");  }	  if(stackSize    >    0)    {    popStack();    }    else    {    throw    new    IllegalArgumentException(       "       ");    }    if(stackSize    >    0)    {    popStack();    }    else    {    throw    new    IllegalArgumentException(   ".   ");    }    	compilable	  [FE]  IllegalArgumentException  	14	2	replace
1170	[BUG]  [BUGGY]  if(stackSize  >  1)  {  popStack();  }  else  {  throw  new  IllegalArgumentException( " ".   ");  }  [CE]  unclosed  string  literal  [FE]          IllegalArgumentException    [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {      [BUGGY]  if(stackSize  >  1)  {  popStack();  }  else  {  throw  new  IllegalArgumentException( " ".   ");  }  [BUGGY]      pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	261	261	2	replace	if(stackSize  >  1)  {  popStack();  }  else  {  throw  new  IllegalArgumentException( " ".   ");  }	  if(stackSize    >    0)    {    popStack();    }    else    {    throw    new    IllegalArgumentException(       "       ");    }    if(stackSize    >    0)    {    popStack();    }    else    {    throw    new    IllegalArgumentException(   ".   ");    }    	non-compiled	[CE]  unclosed  string  literal	14	None	replace
1171	[BUG]  [BUGGY]  _reportError( "Current  token( "+JsonToken.STRING+ ")not  a  value ",  JsonToken.END_OBJECT);  [CE]  cannot  find  symbol  [FE]                    ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {      [BUGGY]  _reportError( "Current  token( "+JsonToken.STRING+ ")not  a  value ",  JsonToken.END_OBJECT);  [BUGGY]      pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	261	261	2	replace	_reportError( "Current  token( "+JsonToken.STRING+ ")not  a  value ",  JsonToken.END_OBJECT);	  _reportError(   "Current    token(   "+JsonToken.STRING+   ")not    a    value   ");    	non-compiled	[CE]  cannot  find  symbol	220	None	replace
1172	[BUG]  [BUGGY]  _reportError( "Current  token( "+JsonToken.STRING+ ")expected  value ");  [CE]  cannot  find  symbol  [FE]                      ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {      [BUGGY]  _reportError( "Current  token( "+JsonToken.STRING+ ")expected  value ");  [BUGGY]      pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	261	261	2	replace	_reportError( "Current  token( "+JsonToken.STRING+ ")expected  value ");	  _reportError(   "Current    token(   "+JsonToken.STRING+   ")not    a    value   ");    	non-compiled	[CE]  cannot  find  symbol	220	None	replace
1173	[BUG]  [BUGGY]  JsonToken.START_OBJECT  =  _findCurrentToken();  [CE]  cannot  find  symbol  START_OBJECT  [FE]              ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {      [BUGGY]  JsonToken.START_OBJECT  =  _findCurrentToken();  [BUGGY]      pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	261	261	2	replace	JsonToken.START_OBJECT  =  _findCurrentToken();	  JsonToken.START_OBJECT    =    _getCurrentToken();    	non-compiled	[CE]  cannot  find  symbol  START_OBJECT	213	None	replace
1174	[BUG]  [BUGGY]  JsonToken.START_OBJECT  =  getCurrentName();  [CE]  cannot  find  symbol  START_OBJECT  [FE]                ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {      [BUGGY]  JsonToken.START_OBJECT  =  getCurrentName();  [BUGGY]      pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	261	261	2	replace	JsonToken.START_OBJECT  =  getCurrentName();	  JsonToken.START_OBJECT    =    _getCurrentToken();    	non-compiled	[CE]  cannot  find  symbol  START_OBJECT	213	None	replace
1175	[BUG]  [BUGGY]  append(stack.length  -  1)  {  popStack();  }  else  {  skipStack();  }  [CE]  ';'  expected  [FE]                  ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {      [BUGGY]  append(stack.length  -  1)  {  popStack();  }  else  {  skipStack();  }  [BUGGY]      pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	261	261	2	replace	append(stack.length  -  1)  {  popStack();  }  else  {  skipStack();  }	  append(stackSize    -    1)    {    popStack();    }    else    {    skipStack();    }    	non-compiled	[CE]  ';'  expected	166	None	replace
1176	[BUG]  [BUGGY]  append(stackSize  -  2)  {  popStack();  }  else  {  skipStack();  }  [CE]  ';'  expected  [FE]                    ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {      [BUGGY]  append(stackSize  -  2)  {  popStack();  }  else  {  skipStack();  }  [BUGGY]      pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	261	261	2	replace	append(stackSize  -  2)  {  popStack();  }  else  {  skipStack();  }	  append(stackSize    -    1)    {    popStack();    }    else    {    skipStack();    }    	non-compiled	[CE]  ';'  expected	166	None	replace
1177	[BUG]  [BUGGY]  handleMissingName(JsonToken.NAME,  stackSize  -  1);  [CE]  cannot  find  symbol  [FE]                      ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {      [BUGGY]  handleMissingName(JsonToken.NAME,  stackSize  -  1);  [BUGGY]      pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	261	261	2	replace	handleMissingName(JsonToken.NAME,  stackSize  -  1);	  handleMissingName();    	non-compiled	[CE]  cannot  find  symbol	67	None	replace
1178	[BUG]  [BUGGY]  handleUnreachableMissingName();  [CE]  cannot  find  symbol  [FE]                        ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {      [BUGGY]  handleUnreachableMissingName();  [BUGGY]      pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	261	261	2	replace	handleUnreachableMissingName();	  handleMissingName();    	non-compiled	[CE]  cannot  find  symbol	67	None	replace
1179	[BUG]  [BUGGY]  handleMissingName(JsonToken.END_OBJECT);  [CE]  cannot  find  symbol  [FE]                          ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {      [BUGGY]  handleMissingName(JsonToken.END_OBJECT);  [BUGGY]      pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	261	261	2	replace	handleMissingName(JsonToken.END_OBJECT);	  handleMissingName();    	non-compiled	[CE]  cannot  find  symbol	67	None	replace
1180	[BUG]  [BUGGY]  if(stackSize  <  =  0)  {  popStack();  }  [CE]  illegal  start  of  expression  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {      [BUGGY]  if(stackSize  <  =  0)  {  popStack();  }  [BUGGY]      pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	261	261	2	replace	if(stackSize  <  =  0)  {  popStack();  }	  if(stackSize    >=    0)    {    popStack();    }    	non-compiled	[CE]  illegal  start  of  expression	197	None	replace
1181	[BUG]  [BUGGY]  [FE]  ArrayIndexOutOfBoundsException  [FE]      ArrayIndexOutOfBoundsException    [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {      [BUGGY]  if(stackSize!=  0)  {  popStack();  }  [BUGGY]      pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	261	261	2	add	if(stackSize!=  0)  {  popStack();  }	  if(stackSize    >=    0)    {    popStack();    }    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	197	2	replace
1182	[BUG]  [BUGGY]  if(stackSize!=  0)  {  popStack();  }  [FE]  ArrayIndexOutOfBoundsException  [FE]      ArrayIndexOutOfBoundsException    [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {      [BUGGY]  if(stackSize!=  0)  {  popStack();  }  [BUGGY]      pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	261	261	2	replace	if(stackSize!=  0)  {  popStack();  }	  if(stackSize    >=    0)    {    popStack();    }    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	197	2	replace
1183	[BUG]  [BUGGY]  [FE]  ArrayIndexOutOfBoundsException  [FE]        ArrayIndexOutOfBoundsException    [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {      [BUGGY]  if(stackSize  >=  1)  {  popStack();  }  [BUGGY]      pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	261	261	2	add	if(stackSize  >=  1)  {  popStack();  }	  if(stackSize    >=    0)    {    popStack();    }    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	197	2	replace
1184	[BUG]  [BUGGY]  if(stackSize  >=  1)  {  popStack();  }  [FE]  ArrayIndexOutOfBoundsException  [FE]        ArrayIndexOutOfBoundsException    [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {      [BUGGY]  if(stackSize  >=  1)  {  popStack();  }  [BUGGY]      pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	261	261	2	replace	if(stackSize  >=  1)  {  popStack();  }	  if(stackSize    >=    0)    {    popStack();    }    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	197	2	replace
1185	[BUG]  [BUGGY]  connectToPossibleExceptionHandler(JsonToken.END_ARRAY);  [CE]  cannot  find  symbol  [FE]              ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {      [BUGGY]  connectToPossibleExceptionHandler(JsonToken.END_ARRAY);  [BUGGY]      pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	261	261	2	replace	connectToPossibleExceptionHandler(JsonToken.END_ARRAY);	  connectToPossibleExceptionHandler(jsonToken);    	non-compiled	[CE]  cannot  find  symbol	183	None	replace
1186	[BUG]  [BUGGY]  connectToPossibleExceptionHandler(JsonToken.ERROR);  [CE]  cannot  find  symbol  ERROR  [FE]                ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {      [BUGGY]  connectToPossibleExceptionHandler(JsonToken.ERROR);  [BUGGY]      pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	261	261	2	replace	connectToPossibleExceptionHandler(JsonToken.ERROR);	  connectToPossibleExceptionHandler(jsonToken);    	non-compiled	[CE]  cannot  find  symbol  ERROR	183	None	replace
1187	[BUG]  [BUGGY]  hop(JsonToken.VALUE_NUMBER_OF_RANGE);  [CE]  cannot  find  symbol  VALUE_NUMBER_OF_RANGE  [FE]          ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {      [BUGGY]  hop(JsonToken.VALUE_NUMBER_OF_RANGE);  [BUGGY]      pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	261	261	2	replace	hop(JsonToken.VALUE_NUMBER_OF_RANGE);	  hopStack();    	non-compiled	[CE]  cannot  find  symbol  VALUE_NUMBER_OF_RANGE	70	None	replace
1188	[BUG]  [BUGGY]  hop(JsonToken.NAME);  [CE]  cannot  find  symbol  [FE]            ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {      [BUGGY]  hop(JsonToken.NAME);  [BUGGY]      pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	261	261	2	replace	hop(JsonToken.NAME);	  hopStack();    	non-compiled	[CE]  cannot  find  symbol	70	None	replace
1189	[BUG]  [BUGGY]  validateValue(JsonToken.VALUE_NULL,  JsonToken.END_OBJECT);  [CE]  cannot  find  symbol  VALUE_NULL  [FE]                    ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {      [BUGGY]  validateValue(JsonToken.VALUE_NULL,  JsonToken.END_OBJECT);  [BUGGY]      pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	261	261	2	replace	validateValue(JsonToken.VALUE_NULL,  JsonToken.END_OBJECT);	  validateValue(JsonToken.VALUE_NULL);    	non-compiled	[CE]  cannot  find  symbol  VALUE_NULL	96	None	replace
1190	[BUG]  [BUGGY]  if(result.length  >  0)  {  popStack();  }  if(stackSize  >  0)  {  popStack();  }  [CE]  cannot  find  symbol  result  [FE]            ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {      [BUGGY]  if(result.length  >  0)  {  popStack();  }  if(stackSize  >  0)  {  popStack();  }  [BUGGY]      pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	261	261	2	replace	if(result.length  >  0)  {  popStack();  }  if(stackSize  >  0)  {  popStack();  }	  if(stackSize    >    0)    {    popStack();    }    if(stackSsize    >    0)    {    popStack();    }    	non-compiled	[CE]  cannot  find  symbol  result	209	None	replace
1191	[BUG]  [BUGGY]  [FE]  ArrayIndexOutOfBoundsException  [FE]              ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {      [BUGGY]  if(stackSize  >  0)  {  popStack();  }  else  if(stackSize  >  0)  {  popStack();  }  [BUGGY]      pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	261	261	2	add	if(stackSize  >  0)  {  popStack();  }  else  if(stackSize  >  0)  {  popStack();  }	  if(stackSize    >    0)    {    popStack();    }    if(stackSsize    >    0)    {    popStack();    }    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	209	2	replace
1192	[BUG]  [BUGGY]  if(stackSize  >  0)  {  popStack();  }  else  if(stackSize  >  0)  {  popStack();  }  [FE]  ArrayIndexOutOfBoundsException  [FE]              ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {      [BUGGY]  if(stackSize  >  0)  {  popStack();  }  else  if(stackSize  >  0)  {  popStack();  }  [BUGGY]      pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	261	261	2	replace	if(stackSize  >  0)  {  popStack();  }  else  if(stackSize  >  0)  {  popStack();  }	  if(stackSize    >    0)    {    popStack();    }    if(stackSsize    >    0)    {    popStack();    }    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	209	2	replace
1193	[BUG]  [BUGGY]  [FE]  ArrayIndexOutOfBoundsException  [FE]                ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {      [BUGGY]  if(stack.length  >  0)  {  popStack();  }  if(stackSize  >  0)  {  popStack();  }  [BUGGY]      pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	261	261	2	add	if(stack.length  >  0)  {  popStack();  }  if(stackSize  >  0)  {  popStack();  }	  if(stackSize    >    0)    {    popStack();    }    if(stackSsize    >    0)    {    popStack();    }    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	209	2	replace
1194	[BUG]  [BUGGY]  if(stack.length  >  0)  {  popStack();  }  if(stackSize  >  0)  {  popStack();  }  [FE]  ArrayIndexOutOfBoundsException  [FE]                ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {      [BUGGY]  if(stack.length  >  0)  {  popStack();  }  if(stackSize  >  0)  {  popStack();  }  [BUGGY]      pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	261	261	2	replace	if(stack.length  >  0)  {  popStack();  }  if(stackSize  >  0)  {  popStack();  }	  if(stackSize    >    0)    {    popStack();    }    if(stackSsize    >    0)    {    popStack();    }    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	209	2	replace
1195	[BUG]  [BUGGY]  connectToPossibleExceptionHandler(this,  pathIndices);  [CE]  cannot  find  symbol  [FE]                ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {      [BUGGY]  connectToPossibleExceptionHandler(this,  pathIndices);  [BUGGY]      pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	261	261	2	replace	connectToPossibleExceptionHandler(this,  pathIndices);	  connectToPossibleExceptionHandler(this);    	non-compiled	[CE]  cannot  find  symbol	3	None	replace
1196	[BUG]  [BUGGY]  [FE]  IllegalStateException  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {      [BUGGY]  if(stackSize  ==  0)  {  popStack();  }  else  {  JsonToken  START_OBJECT  =  null;  nextName();  pathNames[stackSize  -  1]  =  null;  }  [BUGGY]      pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	261	261	2	add	if(stackSize  ==  0)  {  popStack();  }  else  {  JsonToken  START_OBJECT  =  null;  nextName();  pathNames[stackSize  -  1]  =  null;  }	  if(stackSize    >    0)    {    popStack();    }    else    {    JsonToken    START_OBJECT    =    null;    nextName();    pathNames[stackSize    -    1]    =    null;    }    	compilable	  [FE]  IllegalStateException  	139	2	replace
1197	[BUG]  [BUGGY]  if(stackSize  ==  0)  {  popStack();  }  else  {  JsonToken  START_OBJECT  =  null;  nextName();  pathNames[stackSize  -  1]  =  null;  }  [FE]  IllegalStateException  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {      [BUGGY]  if(stackSize  ==  0)  {  popStack();  }  else  {  JsonToken  START_OBJECT  =  null;  nextName();  pathNames[stackSize  -  1]  =  null;  }  [BUGGY]      pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	261	261	2	replace	if(stackSize  ==  0)  {  popStack();  }  else  {  JsonToken  START_OBJECT  =  null;  nextName();  pathNames[stackSize  -  1]  =  null;  }	  if(stackSize    >    0)    {    popStack();    }    else    {    JsonToken    START_OBJECT    =    null;    nextName();    pathNames[stackSize    -    1]    =    null;    }    	compilable	  [FE]  IllegalStateException  	139	2	replace
1198	[BUG]  [BUGGY]  [FE]  ArrayIndexOutOfBoundsException  [FE]      ArrayIndexOutOfBoundsException    [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {      [BUGGY]  if(stackSize  >=  0)  {  popStack();  }  else  {  JsonToken  START_OBJECT  =  null;  nextName();  pathNames[stackSize  -  1]  =  null;  }  [BUGGY]      pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	261	261	2	add	if(stackSize  >=  0)  {  popStack();  }  else  {  JsonToken  START_OBJECT  =  null;  nextName();  pathNames[stackSize  -  1]  =  null;  }	  if(stackSize    >    0)    {    popStack();    }    else    {    JsonToken    START_OBJECT    =    null;    nextName();    pathNames[stackSize    -    1]    =    null;    }    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	139	2	replace
1199	[BUG]  [BUGGY]  if(stackSize  >=  0)  {  popStack();  }  else  {  JsonToken  START_OBJECT  =  null;  nextName();  pathNames[stackSize  -  1]  =  null;  }  [FE]  ArrayIndexOutOfBoundsException  [FE]      ArrayIndexOutOfBoundsException    [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {      [BUGGY]  if(stackSize  >=  0)  {  popStack();  }  else  {  JsonToken  START_OBJECT  =  null;  nextName();  pathNames[stackSize  -  1]  =  null;  }  [BUGGY]      pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	261	261	2	replace	if(stackSize  >=  0)  {  popStack();  }  else  {  JsonToken  START_OBJECT  =  null;  nextName();  pathNames[stackSize  -  1]  =  null;  }	  if(stackSize    >    0)    {    popStack();    }    else    {    JsonToken    START_OBJECT    =    null;    nextName();    pathNames[stackSize    -    1]    =    null;    }    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	139	2	replace
1200	[BUG]  [BUGGY]  if(stackSize  >  0)  {  popStack();  }  else  {  JsonToken  START_OBJECT  =  null;  pathName();  pathNames[stackSize  -  1]  =  null;  }  [CE]  cannot  find  symbol  [FE]        ArrayIndexOutOfBoundsException    [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {      [BUGGY]  if(stackSize  >  0)  {  popStack();  }  else  {  JsonToken  START_OBJECT  =  null;  pathName();  pathNames[stackSize  -  1]  =  null;  }  [BUGGY]      pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	261	261	2	replace	if(stackSize  >  0)  {  popStack();  }  else  {  JsonToken  START_OBJECT  =  null;  pathName();  pathNames[stackSize  -  1]  =  null;  }	  if(stackSize    >    0)    {    popStack();    }    else    {    JsonToken    START_OBJECT    =    null;    nextName();    pathNames[stackSize    -    1]    =    null;    }    	non-compiled	[CE]  cannot  find  symbol	139	None	replace
1201	[BUG]  [BUGGY]  if(stackSize  >  0)  {  popStack();  }  else  {  JsonToken  START_OBJECT  =  new  String[stackSize  -  1];  pathNames[stackSize  -  1]  =  null;  }  [CE]  incompatible  types  [FE]          ArrayIndexOutOfBoundsException    [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {      [BUGGY]  if(stackSize  >  0)  {  popStack();  }  else  {  JsonToken  START_OBJECT  =  new  String[stackSize  -  1];  pathNames[stackSize  -  1]  =  null;  }  [BUGGY]      pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	261	261	2	replace	if(stackSize  >  0)  {  popStack();  }  else  {  JsonToken  START_OBJECT  =  new  String[stackSize  -  1];  pathNames[stackSize  -  1]  =  null;  }	  if(stackSize    >    0)    {    popStack();    }    else    {    JsonToken    START_OBJECT    =    null;    nextName();    pathNames[stackSize    -    1]    =    null;    }    	non-compiled	[CE]  incompatible  types	139	None	replace
1202	[BUG]  [BUGGY]  connectToPossibleExceptionHandler(JsonToken.END_OBJECT,  stack);  [CE]  cannot  find  symbol  [FE]            ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {      [BUGGY]  connectToPossibleExceptionHandler(JsonToken.END_OBJECT,  stack);  [BUGGY]      pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	261	261	2	replace	connectToPossibleExceptionHandler(JsonToken.END_OBJECT,  stack);	  connectToPossibleExceptionHandler(JsonToken.END_OBJECT);    	non-compiled	[CE]  cannot  find  symbol	112	None	replace
1203	[BUG]  [BUGGY]  [FE]  ArrayIndexOutOfBoundsException  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {      [BUGGY]  if(stackSize    >    0)    {    popStack();    }    if(stackSize  >  0)  {  popStack();  System.arraycopy(pathNames,  0,  pathNames,  1,  stackSize);  }  if(stackSize  >  0)  {  popStack();  }  if(stackSize  >  0)  {  popStack();  }  if(stackSize  >  0)  {  popStack();  System.arraycopy(pathNames,  0,  pathNames,  1,  stackSize);  }  [BUGGY]      pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	261	261	2	add	if(stackSize        >        0)        {        popStack();        }        if(stackSize    >    0)    {    popStack();    System.arraycopy(pathNames,    0,    pathNames,    1,    stackSize);    }    if(stackSize  >  0)  {  popStack();  }  if(stackSize  >  0)  {  popStack();  }  if(stackSize  >  0)  {  popStack();  System.arraycopy(pathNames,  0,  pathNames,  1,  stackSize);  }	  	compilable	  [FE]  ArrayIndexOutOfBoundsException  	160	2	add
1204	[BUG]  [BUGGY]  if(stackSize    >    0)    {    popStack();    }    if(stackSize  >  0)  {  popStack();  System.arraycopy(pathNames,  0,  pathNames,  1,  stackSize);  }  if(stackSize  >  0)  {  popStack();  }  if(stackSize  >  0)  {  popStack();  }  if(stackSize  >  0)  {  popStack();  System.arraycopy(pathNames,  0,  pathNames,  1,  stackSize);  }  [FE]  ArrayIndexOutOfBoundsException  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {      [BUGGY]  if(stackSize    >    0)    {    popStack();    }    if(stackSize  >  0)  {  popStack();  System.arraycopy(pathNames,  0,  pathNames,  1,  stackSize);  }  if(stackSize  >  0)  {  popStack();  }  if(stackSize  >  0)  {  popStack();  }  if(stackSize  >  0)  {  popStack();  System.arraycopy(pathNames,  0,  pathNames,  1,  stackSize);  }  [BUGGY]      pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	261	261	2	replace	if(stackSize        >        0)        {        popStack();        }        if(stackSize    >    0)    {    popStack();    System.arraycopy(pathNames,    0,    pathNames,    1,    stackSize);    }    if(stackSize  >  0)  {  popStack();  }  if(stackSize  >  0)  {  popStack();  }  if(stackSize  >  0)  {  popStack();  System.arraycopy(pathNames,  0,  pathNames,  1,  stackSize);  }	  	compilable	  [FE]  ArrayIndexOutOfBoundsException  	160	2	add
1205	[BUG]  [BUGGY]  [FE]  ArrayIndexOutOfBoundsException  [FE]      ArrayIndexOutOfBoundsException    [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {      [BUGGY]  if(stackSize    >    0)    {    popStack();    }    if(stackSize  >  0)  {  popStack();  System.arraycopy(pathNames,  0,  pathNames,  1,  stackSize);  }  if(stackSize  <  0)  {  popStack();  }  if(stackSize  >  0)  {  popStack();  System.arraycopy(pathNames,  0,  pathNames,  1,  stackSize);  }  [BUGGY]      pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	261	261	2	add	if(stackSize        >        0)        {        popStack();        }        if(stackSize    >    0)    {    popStack();    System.arraycopy(pathNames,    0,    pathNames,    1,    stackSize);    }    if(stackSize  <  0)  {  popStack();  }  if(stackSize  >  0)  {  popStack();  System.arraycopy(pathNames,  0,  pathNames,  1,  stackSize);  }	  	compilable	  [FE]  ArrayIndexOutOfBoundsException  	160	2	add
1206	[BUG]  [BUGGY]  if(stackSize    >    0)    {    popStack();    }    if(stackSize  >  0)  {  popStack();  System.arraycopy(pathNames,  0,  pathNames,  1,  stackSize);  }  if(stackSize  <  0)  {  popStack();  }  if(stackSize  >  0)  {  popStack();  System.arraycopy(pathNames,  0,  pathNames,  1,  stackSize);  }  [FE]  ArrayIndexOutOfBoundsException  [FE]      ArrayIndexOutOfBoundsException    [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {      [BUGGY]  if(stackSize    >    0)    {    popStack();    }    if(stackSize  >  0)  {  popStack();  System.arraycopy(pathNames,  0,  pathNames,  1,  stackSize);  }  if(stackSize  <  0)  {  popStack();  }  if(stackSize  >  0)  {  popStack();  System.arraycopy(pathNames,  0,  pathNames,  1,  stackSize);  }  [BUGGY]      pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	261	261	2	replace	if(stackSize        >        0)        {        popStack();        }        if(stackSize    >    0)    {    popStack();    System.arraycopy(pathNames,    0,    pathNames,    1,    stackSize);    }    if(stackSize  <  0)  {  popStack();  }  if(stackSize  >  0)  {  popStack();  System.arraycopy(pathNames,  0,  pathNames,  1,  stackSize);  }	  	compilable	  [FE]  ArrayIndexOutOfBoundsException  	160	2	add
1207	[BUG]  [BUGGY]  [FE]  ArrayIndexOutOfBoundsException  [FE]        ArrayIndexOutOfBoundsException    [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {      [BUGGY]  if(stackSize    >    0)    {    popStack();    }    if(stackSize  >  0)  {  popStack();  System.arraycopy(pathNames,  0,  pathNames,  1,  stackSize);  }  if(stackSize  >  0)  {  popStack();  }  if(stackSize  >  1)  {  popStack();  System.arraycopy(pathNames,  0,  pathNames,  1,  stackSize);  }  [BUGGY]      pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	261	261	2	add	if(stackSize        >        0)        {        popStack();        }        if(stackSize    >    0)    {    popStack();    System.arraycopy(pathNames,    0,    pathNames,    1,    stackSize);    }    if(stackSize  >  0)  {  popStack();  }  if(stackSize  >  1)  {  popStack();  System.arraycopy(pathNames,  0,  pathNames,  1,  stackSize);  }	  	compilable	  [FE]  ArrayIndexOutOfBoundsException  	160	2	add
1208	[BUG]  [BUGGY]  if(stackSize    >    0)    {    popStack();    }    if(stackSize  >  0)  {  popStack();  System.arraycopy(pathNames,  0,  pathNames,  1,  stackSize);  }  if(stackSize  >  0)  {  popStack();  }  if(stackSize  >  1)  {  popStack();  System.arraycopy(pathNames,  0,  pathNames,  1,  stackSize);  }  [FE]  ArrayIndexOutOfBoundsException  [FE]        ArrayIndexOutOfBoundsException    [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {      [BUGGY]  if(stackSize    >    0)    {    popStack();    }    if(stackSize  >  0)  {  popStack();  System.arraycopy(pathNames,  0,  pathNames,  1,  stackSize);  }  if(stackSize  >  0)  {  popStack();  }  if(stackSize  >  1)  {  popStack();  System.arraycopy(pathNames,  0,  pathNames,  1,  stackSize);  }  [BUGGY]      pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	261	261	2	replace	if(stackSize        >        0)        {        popStack();        }        if(stackSize    >    0)    {    popStack();    System.arraycopy(pathNames,    0,    pathNames,    1,    stackSize);    }    if(stackSize  >  0)  {  popStack();  }  if(stackSize  >  1)  {  popStack();  System.arraycopy(pathNames,  0,  pathNames,  1,  stackSize);  }	  	compilable	  [FE]  ArrayIndexOutOfBoundsException  	160	2	add
1209	[BUG]  [BUGGY]  [FE]  ArrayIndexOutOfBoundsException  [FE]          ArrayIndexOutOfBoundsException    [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {      [BUGGY]  if(stackSize    >    0)    {    popStack();    }    if(stackSize  >  0)  {  popStack();  System.arraycopy(pathNames,  0,  pathNames,  1,  stackSize);  }  if(stackSize  >  0)  {  popStack();  }  [BUGGY]      pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	261	261	2	add	if(stackSize        >        0)        {        popStack();        }        if(stackSize    >    0)    {    popStack();    System.arraycopy(pathNames,    0,    pathNames,    1,    stackSize);    }    if(stackSize  >  0)  {  popStack();  }	  	compilable	  [FE]  ArrayIndexOutOfBoundsException  	160	2	add
1210	[BUG]  [BUGGY]  if(stackSize    >    0)    {    popStack();    }    if(stackSize  >  0)  {  popStack();  System.arraycopy(pathNames,  0,  pathNames,  1,  stackSize);  }  if(stackSize  >  0)  {  popStack();  }  [FE]  ArrayIndexOutOfBoundsException  [FE]          ArrayIndexOutOfBoundsException    [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {      [BUGGY]  if(stackSize    >    0)    {    popStack();    }    if(stackSize  >  0)  {  popStack();  System.arraycopy(pathNames,  0,  pathNames,  1,  stackSize);  }  if(stackSize  >  0)  {  popStack();  }  [BUGGY]      pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	261	261	2	replace	if(stackSize        >        0)        {        popStack();        }        if(stackSize    >    0)    {    popStack();    System.arraycopy(pathNames,    0,    pathNames,    1,    stackSize);    }    if(stackSize  >  0)  {  popStack();  }	  	compilable	  [FE]  ArrayIndexOutOfBoundsException  	160	2	add
1211	[BUG]  [BUGGY]  _reportError( "Current  token( "+getClass().getName()  + ")not  null  and  JsonToken.END_OBJECT);  [CE]  unclosed  string  literal  [FE]                  ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {      [BUGGY]  _reportError( "Current  token( "+getClass().getName()  + ")not  null  and  JsonToken.END_OBJECT);  [BUGGY]      pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	261	261	2	replace	_reportError( "Current  token( "+getClass().getName()  + ")not  null  and  JsonToken.END_OBJECT);	  _reportError(   "Current    token(   "+getClass().getName()    +   ")not    null   ",    JsonToken.END_OBJECT);    	non-compiled	[CE]  unclosed  string  literal	36	None	replace
1212	[BUG]  [BUGGY]  connectToPeek(JsonToken.FIELD_NAME);  [CE]  cannot  find  symbol  FIELD_NAME  [FE]                                ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {      [BUGGY]  connectToPeek(JsonToken.FIELD_NAME);  [BUGGY]      pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	261	261	2	replace	connectToPeek(JsonToken.FIELD_NAME);	  connectToPeek(JsonToken.VALUE_NUMBER_INT);    	non-compiled	[CE]  cannot  find  symbol  FIELD_NAME	49	None	replace
1213	[BUG]  [BUGGY]  connectToPossibleExceptionHandler(this,  this.nextInternal());  [CE]  cannot  find  symbol  [FE]                  ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {      [BUGGY]  connectToPossibleExceptionHandler(this,  this.nextInternal());  [BUGGY]      pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	261	261	2	replace	connectToPossibleExceptionHandler(this,  this.nextInternal());	  connectToPossibleExceptionHandler(this.nextInternal());    	non-compiled	[CE]  cannot  find  symbol	184	None	replace
1214	[BUG]  [BUGGY]  connectToPossibleExceptionHandler(this.nextInternal(),  null);  [CE]  cannot  find  symbol  [FE]                    ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {      [BUGGY]  connectToPossibleExceptionHandler(this.nextInternal(),  null);  [BUGGY]      pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	261	261	2	replace	connectToPossibleExceptionHandler(this.nextInternal(),  null);	  connectToPossibleExceptionHandler(this.nextInternal());    	non-compiled	[CE]  cannot  find  symbol	184	None	replace
1215	[BUG]  [BUGGY]  connectToPossibleExceptionHandler(this.nextInternal(),  this);  [CE]  cannot  find  symbol  [FE]                      ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {      [BUGGY]  connectToPossibleExceptionHandler(this.nextInternal(),  this);  [BUGGY]      pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	261	261	2	replace	connectToPossibleExceptionHandler(this.nextInternal(),  this);	  connectToPossibleExceptionHandler(this.nextInternal());    	non-compiled	[CE]  cannot  find  symbol	184	None	replace
1216	[BUG]  [BUGGY]  _reportError( "Current  token( "+getClass().getName()  + ")Not  null ",  JsonToken.NAME);  [CE]  cannot  find  symbol  [FE]                        ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {      [BUGGY]  _reportError( "Current  token( "+getClass().getName()  + ")Not  null ",  JsonToken.NAME);  [BUGGY]      pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	261	261	2	replace	_reportError( "Current  token( "+getClass().getName()  + ")Not  null ",  JsonToken.NAME);	  _reportError(   "Current    token(   "+getClass().getName()    +   ")Not    null.   ");    	non-compiled	[CE]  cannot  find  symbol	39	None	replace
1217	[BUG]  [BUGGY]  _reportError( "Current  token( "+getClass().getName()  + ")Not  null,  cannot  be  null. ");  [CE]  cannot  find  symbol  [FE]                          ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {      [BUGGY]  _reportError( "Current  token( "+getClass().getName()  + ")Not  null,  cannot  be  null. ");  [BUGGY]      pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	261	261	2	replace	_reportError( "Current  token( "+getClass().getName()  + ")Not  null,  cannot  be  null. ");	  _reportError(   "Current    token(   "+getClass().getName()    +   ")Not    null.   ");    	non-compiled	[CE]  cannot  find  symbol	39	None	replace
1218	[BUG]  [BUGGY]  _reportError( "Current  token( "+getClass().getName()  + ")not  null ",  JsonToken.START_OBJECT);  [CE]  cannot  find  symbol  START_OBJECT  [FE]                      ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {      [BUGGY]  _reportError( "Current  token( "+getClass().getName()  + ")not  null ",  JsonToken.START_OBJECT);  [BUGGY]      pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	261	261	2	replace	_reportError( "Current  token( "+getClass().getName()  + ")not  null ",  JsonToken.START_OBJECT);	  _reportError(   "Current    token(   "+getClass().getName()    +   ")not    null   ",    JsonToken.FIELD_NAME);    	non-compiled	[CE]  cannot  find  symbol  START_OBJECT	38	None	replace
1219	[BUG]  [BUGGY]  pathNames[stackSize  -  1]  =  JsonToken.VALUE_STRING;  [CE]  cannot  find  symbol  VALUE_STRING  [FE]    AssertionFailedError    [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {      [BUGGY]  pathNames[stackSize  -  1]  =  JsonToken.VALUE_STRING;  [BUGGY]      pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	261	261	2	replace	pathNames[stackSize  -  1]  =  JsonToken.VALUE_STRING;	  pathNames[stackSize    -    1]    =    null;    	non-compiled	[CE]  cannot  find  symbol  VALUE_STRING	21	None	replace
1220	[BUG]  [BUGGY]  [FE]  ArrayIndexOutOfBoundsException  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {      [BUGGY]  if(stackSize    >    0)    {    popStack();    }    if(stackSize  >  0)  {  popStack();  System.arraycopy(stack,  0,  pathNames,  0,  stackSize);  }  if(stackSize  >  0)  {  popStack();  System.arraycopy(pathNames,  0,  pathNames,  0,  stackSize);  }  [BUGGY]      pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	261	261	2	add	if(stackSize        >        0)        {        popStack();        }        if(stackSize    >    0)    {    popStack();    System.arraycopy(stack,    0,    pathNames,    0,    stackSize);    }    if(stackSize  >  0)  {  popStack();  System.arraycopy(pathNames,  0,  pathNames,  0,  stackSize);  }	  	compilable	  [FE]  ArrayIndexOutOfBoundsException  	92	2	add
1221	[BUG]  [BUGGY]  if(stackSize    >    0)    {    popStack();    }    if(stackSize  >  0)  {  popStack();  System.arraycopy(stack,  0,  pathNames,  0,  stackSize);  }  if(stackSize  >  0)  {  popStack();  System.arraycopy(pathNames,  0,  pathNames,  0,  stackSize);  }  [FE]  ArrayIndexOutOfBoundsException  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {      [BUGGY]  if(stackSize    >    0)    {    popStack();    }    if(stackSize  >  0)  {  popStack();  System.arraycopy(stack,  0,  pathNames,  0,  stackSize);  }  if(stackSize  >  0)  {  popStack();  System.arraycopy(pathNames,  0,  pathNames,  0,  stackSize);  }  [BUGGY]      pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	261	261	2	replace	if(stackSize        >        0)        {        popStack();        }        if(stackSize    >    0)    {    popStack();    System.arraycopy(stack,    0,    pathNames,    0,    stackSize);    }    if(stackSize  >  0)  {  popStack();  System.arraycopy(pathNames,  0,  pathNames,  0,  stackSize);  }	  	compilable	  [FE]  ArrayIndexOutOfBoundsException  	92	2	add
1222	[BUG]  [BUGGY]  if(stackSize    >    0)    {    popStack();    }    if(stackSize  >  0)  {  popStack();  System.arraycopy(stack,  0,  pathNames,  0,  stackSize);  }  if(stackSize  >  0)  {  popStack();  System.arraycopy(stackNames,  0,  pathNames,  0,  stackSize);  }  [CE]  cannot  find  symbol  stackNames  [FE]      ArrayIndexOutOfBoundsException    [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {      [BUGGY]  if(stackSize    >    0)    {    popStack();    }    if(stackSize  >  0)  {  popStack();  System.arraycopy(stack,  0,  pathNames,  0,  stackSize);  }  if(stackSize  >  0)  {  popStack();  System.arraycopy(stackNames,  0,  pathNames,  0,  stackSize);  }  [BUGGY]      pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	261	261	2	replace	if(stackSize        >        0)        {        popStack();        }        if(stackSize    >    0)    {    popStack();    System.arraycopy(stack,    0,    pathNames,    0,    stackSize);    }    if(stackSize  >  0)  {  popStack();  System.arraycopy(stackNames,  0,  pathNames,  0,  stackSize);  }	  	non-compiled	[CE]  cannot  find  symbol  stackNames	92	None	add
1223	[BUG]  [BUGGY]  connectToPossibleExceptionHandler(JsonToken.VALUE_NUMBER_INT);  [CE]  cannot  find  symbol  VALUE_NUMBER_INT  [FE]            ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {      [BUGGY]  connectToPossibleExceptionHandler(JsonToken.VALUE_NUMBER_INT);  [BUGGY]      pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	261	261	2	replace	connectToPossibleExceptionHandler(JsonToken.VALUE_NUMBER_INT);	  connectToPossibleExceptionHandler(JsonToken.VALUE_EMBEDDED_OBJECT);    	non-compiled	[CE]  cannot  find  symbol  VALUE_NUMBER_INT	182	None	replace
1224	[BUG]  [BUGGY]  validateValue(JsonToken.VALUE_EMBEDDED_TYPE,  SENTINEL_CLOSED);  [CE]  cannot  find  symbol  VALUE_EMBEDDED_TYPE  [FE]                            ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {      [BUGGY]  validateValue(JsonToken.VALUE_EMBEDDED_TYPE,  SENTINEL_CLOSED);  [BUGGY]      pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	261	261	2	replace	validateValue(JsonToken.VALUE_EMBEDDED_TYPE,  SENTINEL_CLOSED);	  validateValue(JsonToken.VALUE_EMBEDDED_TYPE);    	non-compiled	[CE]  cannot  find  symbol  VALUE_EMBEDDED_TYPE	100	None	replace
1225	[BUG]  [BUGGY]  validateValue(JsonToken.START_OBJECT);  [CE]  cannot  find  symbol  START_OBJECT  [FE]                              ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {      [BUGGY]  validateValue(JsonToken.START_OBJECT);  [BUGGY]      pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	261	261	2	replace	validateValue(JsonToken.START_OBJECT);	  validateValue(JsonToken.VALUE_EMBEDDED_TYPE);    	non-compiled	[CE]  cannot  find  symbol  START_OBJECT	100	None	replace
1226	[BUG]  [BUGGY]  validateValue(JsonToken.VALUE_EMBEDDED_TYPE,  UNREADABLE_READER);  [CE]  cannot  find  symbol  VALUE_EMBEDDED_TYPE  [FE]                                ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {      [BUGGY]  validateValue(JsonToken.VALUE_EMBEDDED_TYPE,  UNREADABLE_READER);  [BUGGY]      pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	261	261	2	replace	validateValue(JsonToken.VALUE_EMBEDDED_TYPE,  UNREADABLE_READER);	  validateValue(JsonToken.VALUE_EMBEDDED_TYPE);    	non-compiled	[CE]  cannot  find  symbol  VALUE_EMBEDDED_TYPE	100	None	replace
1227	[BUG]  [BUGGY]  connectToPeek(JsonToken.VALUE_NUMBER_START,  JsonToken.VALUE_NUMBER_ERROR);  [CE]  cannot  find  symbol  VALUE_NUMBER_START  [FE]                            ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {      [BUGGY]  connectToPeek(JsonToken.VALUE_NUMBER_START,  JsonToken.VALUE_NUMBER_ERROR);  [BUGGY]      pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	261	261	2	replace	connectToPeek(JsonToken.VALUE_NUMBER_START,  JsonToken.VALUE_NUMBER_ERROR);	  connectToPeek(JsonToken.VALUE_NUMBER_INT,    JsonToken.VALUE_NUMBER_ERROR);    	non-compiled	[CE]  cannot  find  symbol  VALUE_NUMBER_START	218	None	replace
1228	[BUG]  [BUGGY]  connectToPeek(JsonToken.VALUE_NUMBER,  JsonToken.VALUE_NUMBER_ERROR);  [CE]  cannot  find  symbol  VALUE_NUMBER  [FE]                              ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {      [BUGGY]  connectToPeek(JsonToken.VALUE_NUMBER,  JsonToken.VALUE_NUMBER_ERROR);  [BUGGY]      pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	261	261	2	replace	connectToPeek(JsonToken.VALUE_NUMBER,  JsonToken.VALUE_NUMBER_ERROR);	  connectToPeek(JsonToken.VALUE_NUMBER_INT,    JsonToken.VALUE_NUMBER_ERROR);    	non-compiled	[CE]  cannot  find  symbol  VALUE_NUMBER	218	None	replace
1229	[BUG]  [BUGGY]  connectToPeek(JsonToken.VALUE_STRING,  JsonToken.VALUE_NUMBER_ERROR);  [CE]  cannot  find  symbol  VALUE_STRING  [FE]                                ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {      [BUGGY]  connectToPeek(JsonToken.VALUE_STRING,  JsonToken.VALUE_NUMBER_ERROR);  [BUGGY]      pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	261	261	2	replace	connectToPeek(JsonToken.VALUE_STRING,  JsonToken.VALUE_NUMBER_ERROR);	  connectToPeek(JsonToken.VALUE_NUMBER_INT,    JsonToken.VALUE_NUMBER_ERROR);    	non-compiled	[CE]  cannot  find  symbol  VALUE_STRING	218	None	replace
1230	[BUG]  [BUGGY]  connectToPossibleExceptionHandler(nextIndice(),  result);  [CE]  cannot  find  symbol  [FE]                    ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {      [BUGGY]  connectToPossibleExceptionHandler(nextIndice(),  result);  [BUGGY]      pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	261	261	2	replace	connectToPossibleExceptionHandler(nextIndice(),  result);	  connectToPossibleExceptionHandler(nextIndice());    	non-compiled	[CE]  cannot  find  symbol	185	None	replace
1231	[BUG]  [BUGGY]  connectToPossibleExceptionHandler(nextIndice(),  JsonToken.END_OBJECT);  [CE]  cannot  find  symbol  [FE]                      ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {      [BUGGY]  connectToPossibleExceptionHandler(nextIndice(),  JsonToken.END_OBJECT);  [BUGGY]      pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	261	261	2	replace	connectToPossibleExceptionHandler(nextIndice(),  JsonToken.END_OBJECT);	  connectToPossibleExceptionHandler(nextIndice());    	non-compiled	[CE]  cannot  find  symbol	185	None	replace
1232	[BUG]  [BUGGY]  connectToPossibleExceptionHandler(nextIndice(),  null);  [CE]  cannot  find  symbol  [FE]                        ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {      [BUGGY]  connectToPossibleExceptionHandler(nextIndice(),  null);  [BUGGY]      pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	261	261	2	replace	connectToPossibleExceptionHandler(nextIndice(),  null);	  connectToPossibleExceptionHandler(nextIndice());    	non-compiled	[CE]  cannot  find  symbol	185	None	replace
1233	[BUG]  [BUGGY]  connectToPossibleExceptionHandler(nextIndice(),  STACK_SIZE);  [CE]  cannot  find  symbol  [FE]                          ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {      [BUGGY]  connectToPossibleExceptionHandler(nextIndice(),  STACK_SIZE);  [BUGGY]      pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	261	261	2	replace	connectToPossibleExceptionHandler(nextIndice(),  STACK_SIZE);	  connectToPossibleExceptionHandler(nextIndice());    	non-compiled	[CE]  cannot  find  symbol	185	None	replace
1234	[BUG]  [BUGGY]  if(stackSize  >  1)  {  popStack();  }  else  {  throw  new  IllegalArgumentException( " ".);  }  [CE]  <identifier>  expected  [FE]          ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {      [BUGGY]  if(stackSize  >  1)  {  popStack();  }  else  {  throw  new  IllegalArgumentException( " ".);  }  [BUGGY]      pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	261	261	2	replace	if(stackSize  >  1)  {  popStack();  }  else  {  throw  new  IllegalArgumentException( " ".);  }	  if(stackSize    >    0)    {    popStack();    }    else    {    throw    new    IllegalArgumentException(       "       ");    }    if(stackSize    >    0)    {    popStack();    }    else    {    throw    new    IllegalArgumentException(   "   ".);    }    	non-compiled	[CE]  <identifier>  expected	12	None	replace
1235	[BUG]  [BUGGY]  connectToPossibleExceptionHandler(null,  offset,  stackSize());  [CE]  cannot  find  symbol  offset  [FE]                    ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {      [BUGGY]  connectToPossibleExceptionHandler(null,  offset,  stackSize());  [BUGGY]      pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	261	261	2	replace	connectToPossibleExceptionHandler(null,  offset,  stackSize());	  connectToPossibleExceptionHandler(null,    stackSize());    	non-compiled	[CE]  cannot  find  symbol  offset	135	None	replace
1236	[BUG]  [BUGGY]  connectToPeek(JsonToken.NAME,  UNREADABLE_READER);  [CE]  cannot  find  symbol  [FE]                      ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {      [BUGGY]  connectToPeek(JsonToken.NAME,  UNREADABLE_READER);  [BUGGY]      pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	261	261	2	replace	connectToPeek(JsonToken.NAME,  UNREADABLE_READER);	  connectToPeek(JsonToken.NAME);    	non-compiled	[CE]  cannot  find  symbol	44	None	replace
1237	[BUG]  [BUGGY]  connectToPeek(JsonToken.NAME,  stack);  [CE]  cannot  find  symbol  [FE]                        ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {      [BUGGY]  connectToPeek(JsonToken.NAME,  stack);  [BUGGY]      pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	261	261	2	replace	connectToPeek(JsonToken.NAME,  stack);	  connectToPeek(JsonToken.NAME);    	non-compiled	[CE]  cannot  find  symbol	44	None	replace
1238	[BUG]  [BUGGY]  connectToPeek(JsonToken.NAME,  JsonToken.END_ARRAY);  [CE]  cannot  find  symbol  [FE]                          ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {      [BUGGY]  connectToPeek(JsonToken.NAME,  JsonToken.END_ARRAY);  [BUGGY]      pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	261	261	2	replace	connectToPeek(JsonToken.NAME,  JsonToken.END_ARRAY);	  connectToPeek(JsonToken.NAME);    	non-compiled	[CE]  cannot  find  symbol	44	None	replace
1239	[BUG]  [BUGGY]  JsonToken  t  =  _createJsonToken(JsonToken.END_ARRAY,  stackSize);  [CE]  cannot  find  symbol  [FE]                  ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {      [BUGGY]  JsonToken  t  =  _createJsonToken(JsonToken.END_ARRAY,  stackSize);  [BUGGY]      pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	261	261	2	replace	JsonToken  t  =  _createJsonToken(JsonToken.END_ARRAY,  stackSize);	  JsonToken    t    =    _createJsonToken(JsonToken.END_ARRAY);    	non-compiled	[CE]  cannot  find  symbol	124	None	replace
1240	[BUG]  [BUGGY]  if(stackSize  >  1)  {  popStack();  }  if(stackSize  >  1)  {  popStack();  [CE]  ';'  expected  [FE]    AssertionFailedError    [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {      [BUGGY]  if(stackSize  >  1)  {  popStack();  }  if(stackSize  >  1)  {  popStack();  [BUGGY]      pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	261	261	2	replace	if(stackSize    >    1)    {    popStack();    }    if(stackSize  >  1)  {  popStack();	  	non-compiled	[CE]  ';'  expected	192	None	add
1241	[BUG]  [BUGGY]  [FE]  ArrayIndexOutOfBoundsException  [FE]      AssertionFailedError    [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {      [BUGGY]  if(stackSize  >  1)  {  popStack();  }  if(stackSize  <  1)  {  popStack();  }  [BUGGY]      pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	261	261	2	add	if(stackSize    >    1)    {    popStack();    }    if(stackSize  <  1)  {  popStack();  }	  	compilable	  [FE]  ArrayIndexOutOfBoundsException  	192	2	add
1242	[BUG]  [BUGGY]  if(stackSize  >  1)  {  popStack();  }  if(stackSize  <  1)  {  popStack();  }  [FE]  ArrayIndexOutOfBoundsException  [FE]      AssertionFailedError    [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {      [BUGGY]  if(stackSize  >  1)  {  popStack();  }  if(stackSize  <  1)  {  popStack();  }  [BUGGY]      pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	261	261	2	replace	if(stackSize    >    1)    {    popStack();    }    if(stackSize  <  1)  {  popStack();  }	  	compilable	  [FE]  ArrayIndexOutOfBoundsException  	192	2	add
1243	[BUG]  [BUGGY]  if(stackSize  >  0)  {  popStack();  }  else  {  JsonToken  START_OBJECT  =  null;  nextName();  pathNames[stackSize  -  1]  =  null   ";  }  [CE]  unclosed  string  literal  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {      [BUGGY]  if(stackSize  >  0)  {  popStack();  }  else  {  JsonToken  START_OBJECT  =  null;  nextName();  pathNames[stackSize  -  1]  =  null   ";  }  [BUGGY]      pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	261	261	2	replace	if(stackSize  >  0)  {  popStack();  }  else  {  JsonToken  START_OBJECT  =  null;  nextName();  pathNames[stackSize  -  1]  =  null   ";  }	  if(stackSize    >    0)    {    popStack();    }    else    {    JsonToken    START_OBJECT    =    null;    nextName();    pathNames[stackSize    -    1]    =       "null   ";    }    	non-compiled	[CE]  unclosed  string  literal	133	None	replace
1244	[BUG]  [BUGGY]  if(stackSize  >  0)  {  popStack();  }  else  {  JsonToken  START_OBJECT  =  null;  pathName();  pathNames[stackSize  -  1]  =   "null ";  }  [CE]  cannot  find  symbol  [FE]      ArrayIndexOutOfBoundsException    [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {      [BUGGY]  if(stackSize  >  0)  {  popStack();  }  else  {  JsonToken  START_OBJECT  =  null;  pathName();  pathNames[stackSize  -  1]  =   "null ";  }  [BUGGY]      pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	261	261	2	replace	if(stackSize  >  0)  {  popStack();  }  else  {  JsonToken  START_OBJECT  =  null;  pathName();  pathNames[stackSize  -  1]  =   "null ";  }	  if(stackSize    >    0)    {    popStack();    }    else    {    JsonToken    START_OBJECT    =    null;    nextName();    pathNames[stackSize    -    1]    =       "null   ";    }    	non-compiled	[CE]  cannot  find  symbol	133	None	replace
1245	[BUG]  [BUGGY]  java.util.ArrayList();  [CE]  cannot  find  symbol  [FE]        ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {      [BUGGY]  java.util.ArrayList();  [BUGGY]      pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	261	261	2	replace	java.util.ArrayList();	  StackTrace();    	non-compiled	[CE]  cannot  find  symbol	56	None	replace
1246	[BUG]  [BUGGY]  StackTrace(this.null);  [CE]  <identifier>  expected  [FE]          ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {      [BUGGY]  StackTrace(this.null);  [BUGGY]      pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	261	261	2	replace	StackTrace(this.null);	  StackTrace();    	non-compiled	[CE]  <identifier>  expected	56	None	replace
1247	[BUG]  [BUGGY]  ArrayTrace();  [CE]  cannot  find  symbol  [FE]            ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {      [BUGGY]  ArrayTrace();  [BUGGY]      pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	261	261	2	replace	ArrayTrace();	  StackTrace();    	non-compiled	[CE]  cannot  find  symbol	56	None	replace
1248	[BUG]  [BUGGY]  JsonToken.VALUE_NULL  =  new  JsonToken(JsonToken.FIELD_NAME);  pathNames[stackSize  -  1]  =  null   ";  [CE]  unclosed  string  literal  [FE]                    ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {      [BUGGY]  JsonToken.VALUE_NULL  =  new  JsonToken(JsonToken.FIELD_NAME);  pathNames[stackSize  -  1]  =  null   ";  [BUGGY]      pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	261	261	2	replace	JsonToken.VALUE_NULL  =  new  JsonToken(JsonToken.FIELD_NAME);  pathNames[stackSize  -  1]  =  null   ";	  if(stackSize    >    0)    {    popStack();    }    else    {    JsonToken.VALUE_NULL    =    new    JsonToken(JsonToken.FIELD_NAME);    pathNames[stackSize    -    1]    =    null       ";    }    	non-compiled	[CE]  unclosed  string  literal	126	None	replace
1249	[BUG]  [BUGGY]  if(stackSize  >  0)  {  popStack();  }  else  {  JsonToken.VALUE_NULL  =  new  JsonToken(JsonToken.FIELD_NAME);  pathNames[stackSize  -  1]  =  null';  }  [CE]  unclosed  character  literal  [FE]                      ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {      [BUGGY]  if(stackSize  >  0)  {  popStack();  }  else  {  JsonToken.VALUE_NULL  =  new  JsonToken(JsonToken.FIELD_NAME);  pathNames[stackSize  -  1]  =  null';  }  [BUGGY]      pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	261	261	2	replace	if(stackSize  >  0)  {  popStack();  }  else  {  JsonToken.VALUE_NULL  =  new  JsonToken(JsonToken.FIELD_NAME);  pathNames[stackSize  -  1]  =  null';  }	  if(stackSize    >    0)    {    popStack();    }    else    {    JsonToken.VALUE_NULL    =    new    JsonToken(JsonToken.FIELD_NAME);    pathNames[stackSize    -    1]    =    null       ";    }    	non-compiled	[CE]  unclosed  character  literal	126	None	replace
1250	[BUG]  [BUGGY]  pathNames[stackSize  -  2]  =     "null   ";  pathNames[stackSize  -  2]  =   "null ",;  [CE]  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {      [BUGGY]  pathNames[stackSize  -  2]  =     "null   ";  pathNames[stackSize  -  2]  =   "null ",;  [BUGGY]      pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	261	261	2	replace	pathNames[stackSize    -    2]    =       "null   ";    pathNames[stackSize  -  2]  =   "null ",;	  	non-compiled	[CE]  	40	None	add
1251	[BUG]  [BUGGY]  _reportError( "Current  token( "+getClass().getName()  + ")not  null,  expecting  a  value.. ");  [CE]  cannot  find  symbol  [FE]                  ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {      [BUGGY]  _reportError( "Current  token( "+getClass().getName()  + ")not  null,  expecting  a  value.. ");  [BUGGY]      pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	261	261	2	replace	_reportError( "Current  token( "+getClass().getName()  + ")not  null,  expecting  a  value.. ");	  _reportError(   "Current    token(   "+getClass().getName()    +   ")not    null,    expecting    a    value.   ");    	non-compiled	[CE]  cannot  find  symbol	198	None	replace
1252	[BUG]  [BUGGY]  _reportError( "Current  token( "+getClass().getName()  + ")not  null,  expecting  a  value ",  JsonToken.NAME);  [CE]  cannot  find  symbol  [FE]                      ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {      [BUGGY]  _reportError( "Current  token( "+getClass().getName()  + ")not  null,  expecting  a  value ",  JsonToken.NAME);  [BUGGY]      pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	261	261	2	replace	_reportError( "Current  token( "+getClass().getName()  + ")not  null,  expecting  a  value ",  JsonToken.NAME);	  _reportError(   "Current    token(   "+getClass().getName()    +   ")not    null,    expecting    a    value   ");    	non-compiled	[CE]  cannot  find  symbol	200	None	replace
1253	[BUG]  [BUGGY]  Path  pathIndices[stackSize  -  1]  =  new  Path(pathNames);  [CE]  ']'  expected  [FE]                            ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {      [BUGGY]  Path  pathIndices[stackSize  -  1]  =  new  Path(pathNames);  [BUGGY]      pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	261	261	2	replace	Path  pathIndices[stackSize  -  1]  =  new  Path(pathNames);	  Path    pathIndices[stackSize    -    1]    =    null;    	non-compiled	[CE]  ']'  expected	22	None	replace
1254	[BUG]  [BUGGY]  Path  pathIndices[stackSize  -  1]  =   "null ";  [CE]  [FE]                              ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {      [BUGGY]  Path  pathIndices[stackSize  -  1]  =   "null ";  [BUGGY]      pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	261	261	2	replace	Path  pathIndices[stackSize  -  1]  =   "null ";	  Path    pathIndices[stackSize    -    1]    =    null;    	non-compiled	[CE]  	22	None	replace
1255	[BUG]  [BUGGY]  Path  pathIndices[stackSize  -  1]  =  System.identityHashCode(pathNames);  [CE]  ']'  expected  [FE]                                ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {      [BUGGY]  Path  pathIndices[stackSize  -  1]  =  System.identityHashCode(pathNames);  [BUGGY]      pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	261	261	2	replace	Path  pathIndices[stackSize  -  1]  =  System.identityHashCode(pathNames);	  Path    pathIndices[stackSize    -    1]    =    null;    	non-compiled	[CE]  ']'  expected	22	None	replace
1256	[BUG]  [BUGGY]  JsonToken.START_OBJECT  =  JsonToken.END_ARRAY;  [CE]  cannot  find  symbol  START_OBJECT  [FE]                    ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {      [BUGGY]  JsonToken.START_OBJECT  =  JsonToken.END_ARRAY;  [BUGGY]      pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	261	261	2	replace	JsonToken.START_OBJECT  =  JsonToken.END_ARRAY;	  JsonToken.START_OBJECT;    	non-compiled	[CE]  cannot  find  symbol  START_OBJECT	66	None	replace
1257	[BUG]  [BUGGY]  JsonToken.START_OBJECT  =  JsonToken.START_ARRAY;  [CE]  cannot  find  symbol  START_OBJECT  [FE]                      ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {      [BUGGY]  JsonToken.START_OBJECT  =  JsonToken.START_ARRAY;  [BUGGY]      pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	261	261	2	replace	JsonToken.START_OBJECT  =  JsonToken.START_ARRAY;	  JsonToken.START_OBJECT;    	non-compiled	[CE]  cannot  find  symbol  START_OBJECT	66	None	replace
1258	[BUG]  [BUGGY]  JsonToken.START_OBJECT  =  JsonToken.START_NAME;  [CE]  cannot  find  symbol  START_OBJECT  [FE]                        ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {      [BUGGY]  JsonToken.START_OBJECT  =  JsonToken.START_NAME;  [BUGGY]      pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	261	261	2	replace	JsonToken.START_OBJECT  =  JsonToken.START_NAME;	  JsonToken.START_OBJECT;    	non-compiled	[CE]  cannot  find  symbol  START_OBJECT	66	None	replace
1259	[BUG]  [BUGGY]  JsonToken.START_OBJECT  =  new  JsonToken( "null ");  [CE]  cannot  find  symbol  START_OBJECT  [FE]                          ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {      [BUGGY]  JsonToken.START_OBJECT  =  new  JsonToken( "null ");  [BUGGY]      pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	261	261	2	replace	JsonToken.START_OBJECT  =  new  JsonToken( "null ");	  JsonToken.START_OBJECT;    	non-compiled	[CE]  cannot  find  symbol  START_OBJECT	66	None	replace
1260	[BUG]  [BUGGY]  connectToPeek(JsonToken.VALUE_NUMBER_INT,  JsonToken.END_ARRAY);  [CE]  cannot  find  symbol  VALUE_NUMBER_INT  [FE]                      ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {      [BUGGY]  connectToPeek(JsonToken.VALUE_NUMBER_INT,  JsonToken.END_ARRAY);  [BUGGY]      pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	261	261	2	replace	connectToPeek(JsonToken.VALUE_NUMBER_INT,  JsonToken.END_ARRAY);	  connectToPeek(JsonToken.VALUE_NUMBER_INT,    JsonToken.VALUE_NUMBER_FLOAT);    	non-compiled	[CE]  cannot  find  symbol  VALUE_NUMBER_INT	215	None	replace
1261	[BUG]  [BUGGY]  connectToPeek(JsonToken.START_OBJECT,  JsonToken.VALUE_NUMBER_FLOAT);  [CE]  cannot  find  symbol  START_OBJECT  [FE]                        ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {      [BUGGY]  connectToPeek(JsonToken.START_OBJECT,  JsonToken.VALUE_NUMBER_FLOAT);  [BUGGY]      pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	261	261	2	replace	connectToPeek(JsonToken.START_OBJECT,  JsonToken.VALUE_NUMBER_FLOAT);	  connectToPeek(JsonToken.VALUE_NUMBER_INT,    JsonToken.VALUE_NUMBER_FLOAT);    	non-compiled	[CE]  cannot  find  symbol  START_OBJECT	215	None	replace
1262	[BUG]  [BUGGY]  JsonToken  t  =  _getCurrentName();  [CE]  cannot  find  symbol  [FE]              ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {      [BUGGY]  JsonToken  t  =  _getCurrentName();  [BUGGY]      pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	261	261	2	replace	JsonToken  t  =  _getCurrentName();	  JsonToken    t    =    _getCurrentToken();    	non-compiled	[CE]  cannot  find  symbol	122	None	replace
1263	[BUG]  [BUGGY]  JsonToken  t  =  _nextToken();  [CE]  cannot  find  symbol  [FE]                ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {      [BUGGY]  JsonToken  t  =  _nextToken();  [BUGGY]      pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	261	261	2	replace	JsonToken  t  =  _nextToken();	  JsonToken    t    =    _getCurrentToken();    	non-compiled	[CE]  cannot  find  symbol	122	None	replace
1264	[BUG]  [BUGGY]  JsonToken  t  =  getCurrentToken();  _reportError( "Current  token( "+JsonToken.END_OBJECT+ ")not  a  value ");  [CE]  cannot  find  symbol  [FE]                          ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {      [BUGGY]  JsonToken  t  =  getCurrentToken();  _reportError( "Current  token( "+JsonToken.END_OBJECT+ ")not  a  value ");  [BUGGY]      pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	261	261	2	replace	JsonToken  t  =  getCurrentToken();  _reportError( "Current  token( "+JsonToken.END_OBJECT+ ")not  a  value ");	  _reportError(   "Current    token(   "+JsonToken.END_OBJECT+   ")not    a    value   ");    	non-compiled	[CE]  cannot  find  symbol	130	None	replace
1265	[BUG]  [BUGGY]  _reportError( "Current  token( "+JsonToken.END_OBJECT+ ")expected  value ");  [CE]  cannot  find  symbol  [FE]                            ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {      [BUGGY]  _reportError( "Current  token( "+JsonToken.END_OBJECT+ ")expected  value ");  [BUGGY]      pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	261	261	2	replace	_reportError( "Current  token( "+JsonToken.END_OBJECT+ ")expected  value ");	  _reportError(   "Current    token(   "+JsonToken.END_OBJECT+   ")not    a    value   ");    	non-compiled	[CE]  cannot  find  symbol	130	None	replace
1266	[BUG]  [BUGGY]  JsonToken.VALUE_NULL  =  new  JsonToken(JsonToken.NAME);  pathNames[stackSize  -  1]  =  null   ";  [CE]  unclosed  string  literal  [FE]                  ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {      [BUGGY]  JsonToken.VALUE_NULL  =  new  JsonToken(JsonToken.NAME);  pathNames[stackSize  -  1]  =  null   ";  [BUGGY]      pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	261	261	2	replace	JsonToken.VALUE_NULL  =  new  JsonToken(JsonToken.NAME);  pathNames[stackSize  -  1]  =  null   ";	  if(stackSize    >    0)    {    popStack();    }    else    {    JsonToken.VALUE_NULL    =    new    JsonToken(JsonToken.NAME);    pathNames[stackSize    -    1]    =    null       ";    }    	non-compiled	[CE]  unclosed  string  literal	146	None	replace
1267	[BUG]  [BUGGY]  if(stackSize  >  0)  {  popStack();  }  else  {  JsonToken.VALUE_NULL  =  new  JsonToken(JsonToken.NAME);  pathNames[stackSize  -  1]  =  null. ";  }  [CE]  unclosed  string  literal  [FE]                    ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {      [BUGGY]  if(stackSize  >  0)  {  popStack();  }  else  {  JsonToken.VALUE_NULL  =  new  JsonToken(JsonToken.NAME);  pathNames[stackSize  -  1]  =  null. ";  }  [BUGGY]      pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	261	261	2	replace	if(stackSize  >  0)  {  popStack();  }  else  {  JsonToken.VALUE_NULL  =  new  JsonToken(JsonToken.NAME);  pathNames[stackSize  -  1]  =  null. ";  }	  if(stackSize    >    0)    {    popStack();    }    else    {    JsonToken.VALUE_NULL    =    new    JsonToken(JsonToken.NAME);    pathNames[stackSize    -    1]    =    null       ";    }    	non-compiled	[CE]  unclosed  string  literal	146	None	replace
1268	[BUG]  [BUGGY]  JsonToken.START_OBJECT  =  _getMessage();  [CE]  cannot  find  symbol  START_OBJECT  [FE]                ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {      [BUGGY]  JsonToken.START_OBJECT  =  _getMessage();  [BUGGY]      pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	261	261	2	replace	JsonToken.START_OBJECT  =  _getMessage();	  JsonToken.START_OBJECT    =    _reportUnsupportedOperation();    	non-compiled	[CE]  cannot  find  symbol  START_OBJECT	214	None	replace
1269	[BUG]  [BUGGY]  JsonToken.START_OBJECT  =  _throwAsIOException();  [CE]  cannot  find  symbol  START_OBJECT  [FE]                  ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {      [BUGGY]  JsonToken.START_OBJECT  =  _throwAsIOException();  [BUGGY]      pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	261	261	2	replace	JsonToken.START_OBJECT  =  _throwAsIOException();	  JsonToken.START_OBJECT    =    _reportUnsupportedOperation();    	non-compiled	[CE]  cannot  find  symbol  START_OBJECT	214	None	replace
1270	[BUG]  [BUGGY]  reportUnsupportedOperation(JsonToken.VALUE_NULL);  [CE]  cannot  find  symbol  VALUE_NULL  [FE]                        ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {      [BUGGY]  reportUnsupportedOperation(JsonToken.VALUE_NULL);  [BUGGY]      pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	261	261	2	replace	reportUnsupportedOperation(JsonToken.VALUE_NULL);	  reportUnsupportedOperation();    	non-compiled	[CE]  cannot  find  symbol  VALUE_NULL	68	None	replace
1271	[BUG]  [BUGGY]  reportUnsupportedOperation(JsonToken.START_OBJECT);  [CE]  cannot  find  symbol  START_OBJECT  [FE]                          ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {      [BUGGY]  reportUnsupportedOperation(JsonToken.START_OBJECT);  [BUGGY]      pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	261	261	2	replace	reportUnsupportedOperation(JsonToken.START_OBJECT);	  reportUnsupportedOperation();    	non-compiled	[CE]  cannot  find  symbol  START_OBJECT	68	None	replace
1272	[BUG]  [BUGGY]  reportUnsupportedOperation(JsonToken.END_OBJECT);  [CE]  cannot  find  symbol  [FE]                            ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {      [BUGGY]  reportUnsupportedOperation(JsonToken.END_OBJECT);  [BUGGY]      pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	261	261	2	replace	reportUnsupportedOperation(JsonToken.END_OBJECT);	  reportUnsupportedOperation();    	non-compiled	[CE]  cannot  find  symbol	68	None	replace
1273	[BUG]  [BUGGY]  unsupportedOperation();  [CE]  cannot  find  symbol  [FE]                              ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {      [BUGGY]  unsupportedOperation();  [BUGGY]      pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	261	261	2	replace	unsupportedOperation();	  reportUnsupportedOperation();    	non-compiled	[CE]  cannot  find  symbol	68	None	replace
1274	[BUG]  [BUGGY]  connectToPossibleExceptionHandler(false,  SENTINEL_READER);  [CE]  cannot  find  symbol  SENTINEL_READER  [FE]                ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {      [BUGGY]  connectToPossibleExceptionHandler(false,  SENTINEL_READER);  [BUGGY]      pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	261	261	2	replace	connectToPossibleExceptionHandler(false,  SENTINEL_READER);	  connectToPossibleExceptionHandler(false);    	non-compiled	[CE]  cannot  find  symbol  SENTINEL_READER	114	None	replace
1275	[BUG]  [BUGGY]  connectToPossibleExceptionHandler(false,  JsonToken.END_OBJECT);  [CE]  cannot  find  symbol  [FE]                  ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {      [BUGGY]  connectToPossibleExceptionHandler(false,  JsonToken.END_OBJECT);  [BUGGY]      pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	261	261	2	replace	connectToPossibleExceptionHandler(false,  JsonToken.END_OBJECT);	  connectToPossibleExceptionHandler(false);    	non-compiled	[CE]  cannot  find  symbol	114	None	replace
1276	[BUG]  [BUGGY]  JsonToken.VALUE_NULL  =  new  JsonToken(JsonToken.FIELD_NAME);  pathNames[stackSize  -  1]  =  null  [CE]  ';'  expected  [FE]                  ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {      [BUGGY]  JsonToken.VALUE_NULL  =  new  JsonToken(JsonToken.FIELD_NAME);  pathNames[stackSize  -  1]  =  null  [BUGGY]      pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	261	261	2	replace	JsonToken.VALUE_NULL  =  new  JsonToken(JsonToken.FIELD_NAME);  pathNames[stackSize  -  1]  =  null	  if(stackSize    >    0)    {    popStack();    }    else    {    JsonToken.VALUE_NULL    =    new    JsonToken(JsonToken.FIELD_NAME);    pathNames[stackSize    -    1]    =    null    	non-compiled	[CE]  ';'  expected	150	None	replace
1277	[BUG]  [BUGGY]  if(stackSize  ==  0)  {  popStack();  }  else  {  JsonToken.VALUE_NULL  =  new  JsonToken(JsonToken.FIELD_NAME);  pathNames[stackSize  -  1]  =  null  [CE]  ';'  expected  [FE]                    ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {      [BUGGY]  if(stackSize  ==  0)  {  popStack();  }  else  {  JsonToken.VALUE_NULL  =  new  JsonToken(JsonToken.FIELD_NAME);  pathNames[stackSize  -  1]  =  null  [BUGGY]      pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	261	261	2	replace	if(stackSize  ==  0)  {  popStack();  }  else  {  JsonToken.VALUE_NULL  =  new  JsonToken(JsonToken.FIELD_NAME);  pathNames[stackSize  -  1]  =  null	  if(stackSize    >    0)    {    popStack();    }    else    {    JsonToken.VALUE_NULL    =    new    JsonToken(JsonToken.FIELD_NAME);    pathNames[stackSize    -    1]    =    null    	non-compiled	[CE]  ';'  expected	150	None	replace
1278	[BUG]  [BUGGY]  if(stackSize  >  1)  {  popStack();  }  else  {  JsonToken.VALUE_NULL  =  new  JsonToken(JsonToken.FIELD_NAME);  pathNames[stackSize  -  1]  =  null  [CE]  ';'  expected  [FE]                      ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {      [BUGGY]  if(stackSize  >  1)  {  popStack();  }  else  {  JsonToken.VALUE_NULL  =  new  JsonToken(JsonToken.FIELD_NAME);  pathNames[stackSize  -  1]  =  null  [BUGGY]      pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	261	261	2	replace	if(stackSize  >  1)  {  popStack();  }  else  {  JsonToken.VALUE_NULL  =  new  JsonToken(JsonToken.FIELD_NAME);  pathNames[stackSize  -  1]  =  null	  if(stackSize    >    0)    {    popStack();    }    else    {    JsonToken.VALUE_NULL    =    new    JsonToken(JsonToken.FIELD_NAME);    pathNames[stackSize    -    1]    =    null    	non-compiled	[CE]  ';'  expected	150	None	replace
1279	[BUG]  [BUGGY]  if(stackSize  >  0)  {  popStack();  }  else  {  JsonToken.VALUE_NULL  =  new  JsonToken(JsonToken.FIELD_NAME);  pathNames[stackSize  -  1]  =  null!=  pathNames  [CE]  ';'  expected  [FE]                        ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {      [BUGGY]  if(stackSize  >  0)  {  popStack();  }  else  {  JsonToken.VALUE_NULL  =  new  JsonToken(JsonToken.FIELD_NAME);  pathNames[stackSize  -  1]  =  null!=  pathNames  [BUGGY]      pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	261	261	2	replace	if(stackSize  >  0)  {  popStack();  }  else  {  JsonToken.VALUE_NULL  =  new  JsonToken(JsonToken.FIELD_NAME);  pathNames[stackSize  -  1]  =  null!=  pathNames	  if(stackSize    >    0)    {    popStack();    }    else    {    JsonToken.VALUE_NULL    =    new    JsonToken(JsonToken.FIELD_NAME);    pathNames[stackSize    -    1]    =    null    	non-compiled	[CE]  ';'  expected	150	None	replace
1280	[BUG]  [BUGGY]  if(stackSize  >  0)  {  popStack();  }  else  {  JsonToken.VALUE_NULL  =  new  JsonToken(JsonToken.FIELD_NAME);  pathNames[stackSize  -  1]  =  null  >>  pathNames  [CE]  ';'  expected  [FE]                          ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {      [BUGGY]  if(stackSize  >  0)  {  popStack();  }  else  {  JsonToken.VALUE_NULL  =  new  JsonToken(JsonToken.FIELD_NAME);  pathNames[stackSize  -  1]  =  null  >>  pathNames  [BUGGY]      pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	261	261	2	replace	if(stackSize  >  0)  {  popStack();  }  else  {  JsonToken.VALUE_NULL  =  new  JsonToken(JsonToken.FIELD_NAME);  pathNames[stackSize  -  1]  =  null  >>  pathNames	  if(stackSize    >    0)    {    popStack();    }    else    {    JsonToken.VALUE_NULL    =    new    JsonToken(JsonToken.FIELD_NAME);    pathNames[stackSize    -    1]    =    null    	non-compiled	[CE]  ';'  expected	150	None	replace
1281	[BUG]  [BUGGY]  JsonToken  t  =  getCurrentToken();  _reportError( "Current  token( "+getMessage()  + ")not  a  value ",  JsonToken.END_OBJECT);  [CE]  cannot  find  symbol  [FE]                    ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {      [BUGGY]  JsonToken  t  =  getCurrentToken();  _reportError( "Current  token( "+getMessage()  + ")not  a  value ",  JsonToken.END_OBJECT);  [BUGGY]      pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	261	261	2	replace	JsonToken  t  =  getCurrentToken();  _reportError( "Current  token( "+getMessage()  + ")not  a  value ",  JsonToken.END_OBJECT);	  _reportError(   "Current    token(   "+getMessage()    +   ")not    a    value   ",    JsonToken.END_OBJECT);    	non-compiled	[CE]  cannot  find  symbol	31	None	replace
1282	[BUG]  [BUGGY]  handleUnsupportedOperation(JsonToken.END_OBJECT,  JsonToken.END_OBJECT);  [CE]  cannot  find  symbol  [FE]                  ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {      [BUGGY]  handleUnsupportedOperation(JsonToken.END_OBJECT,  JsonToken.END_OBJECT);  [BUGGY]      pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	261	261	2	replace	handleUnsupportedOperation(JsonToken.END_OBJECT,  JsonToken.END_OBJECT);	  handleUnsupportedOperation();    	non-compiled	[CE]  cannot  find  symbol	65	None	replace
1283	[BUG]  [BUGGY]  handleUnsupportedOperation(JsonToken.START_OBJECT,  JsonToken.END_OBJECT);  [CE]  cannot  find  symbol  START_OBJECT  [FE]                    ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {      [BUGGY]  handleUnsupportedOperation(JsonToken.START_OBJECT,  JsonToken.END_OBJECT);  [BUGGY]      pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	261	261	2	replace	handleUnsupportedOperation(JsonToken.START_OBJECT,  JsonToken.END_OBJECT);	  handleUnsupportedOperation();    	non-compiled	[CE]  cannot  find  symbol  START_OBJECT	65	None	replace
1284	[BUG]  [BUGGY]  handleUnsupportedOperation(JsonToken.START_OBJECT);  [CE]  cannot  find  symbol  START_OBJECT  [FE]                      ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {      [BUGGY]  handleUnsupportedOperation(JsonToken.START_OBJECT);  [BUGGY]      pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	261	261	2	replace	handleUnsupportedOperation(JsonToken.START_OBJECT);	  handleUnsupportedOperation();    	non-compiled	[CE]  cannot  find  symbol  START_OBJECT	65	None	replace
1285	[BUG]  [BUGGY]  handleUnsupportedOperation(JsonToken.END_OBJECT);  [CE]  cannot  find  symbol  [FE]                        ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {      [BUGGY]  handleUnsupportedOperation(JsonToken.END_OBJECT);  [BUGGY]      pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	261	261	2	replace	handleUnsupportedOperation(JsonToken.END_OBJECT);	  handleUnsupportedOperation();    	non-compiled	[CE]  cannot  find  symbol	65	None	replace
1286	[BUG]  [BUGGY]  handleUnsupportedOperation(JsonToken.VALUE_NULL);  [CE]  cannot  find  symbol  VALUE_NULL  [FE]                          ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {      [BUGGY]  handleUnsupportedOperation(JsonToken.VALUE_NULL);  [BUGGY]      pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	261	261	2	replace	handleUnsupportedOperation(JsonToken.VALUE_NULL);	  handleUnsupportedOperation();    	non-compiled	[CE]  cannot  find  symbol  VALUE_NULL	65	None	replace
1287	[BUG]  [BUGGY]  handleUnsupportedOperation(JsonToken.START_OBJECT,  JsonToken.END_ARRAY);  [CE]  cannot  find  symbol  START_OBJECT  [FE]                            ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {      [BUGGY]  handleUnsupportedOperation(JsonToken.START_OBJECT,  JsonToken.END_ARRAY);  [BUGGY]      pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	261	261	2	replace	handleUnsupportedOperation(JsonToken.START_OBJECT,  JsonToken.END_ARRAY);	  handleUnsupportedOperation();    	non-compiled	[CE]  cannot  find  symbol  START_OBJECT	65	None	replace
1288	[BUG]  [BUGGY]  JsonToken  t  =  _createJsonToken(JsonToken.START_OBJECT,  START_NAME);  [CE]  cannot  find  symbol  START_OBJECT  [FE]                ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {      [BUGGY]  JsonToken  t  =  _createJsonToken(JsonToken.START_OBJECT,  START_NAME);  [BUGGY]      pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	261	261	2	replace	JsonToken  t  =  _createJsonToken(JsonToken.START_OBJECT,  START_NAME);	  JsonToken    t    =    _createJsonToken(JsonToken.START_OBJECT);    	non-compiled	[CE]  cannot  find  symbol  START_OBJECT	123	None	replace
1289	[BUG]  [BUGGY]  JsonToken  t  =  _createJsonToken(JsonToken.START_OBJECT,  START_TYPE);  [CE]  cannot  find  symbol  START_OBJECT  [FE]                  ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {      [BUGGY]  JsonToken  t  =  _createJsonToken(JsonToken.START_OBJECT,  START_TYPE);  [BUGGY]      pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	261	261	2	replace	JsonToken  t  =  _createJsonToken(JsonToken.START_OBJECT,  START_TYPE);	  JsonToken    t    =    _createJsonToken(JsonToken.START_OBJECT);    	non-compiled	[CE]  cannot  find  symbol  START_OBJECT	123	None	replace
1290	[BUG]  [BUGGY]  JsonToken  t  =  _createJsonToken(JsonToken.START_OBJECT,  null);  [CE]  cannot  find  symbol  START_OBJECT  [FE]                    ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {      [BUGGY]  JsonToken  t  =  _createJsonToken(JsonToken.START_OBJECT,  null);  [BUGGY]      pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	261	261	2	replace	JsonToken  t  =  _createJsonToken(JsonToken.START_OBJECT,  null);	  JsonToken    t    =    _createJsonToken(JsonToken.START_OBJECT);    	non-compiled	[CE]  cannot  find  symbol  START_OBJECT	123	None	replace
1291	[BUG]  [BUGGY]  PathIndices  pathIndices[stackSize  -  1]  =(pathNames[stackSize  -  1]  ==  null)?  null  :  pathNames[stackSize  -  1];  [CE]  ']'  expected  [FE]            AssertionFailedError      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {      [BUGGY]  PathIndices  pathIndices[stackSize  -  1]  =(pathNames[stackSize  -  1]  ==  null)?  null  :  pathNames[stackSize  -  1];  [BUGGY]      pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	261	261	2	replace	PathIndices  pathIndices[stackSize  -  1]  =(pathNames[stackSize  -  1]  ==  null)?  null  :  pathNames[stackSize  -  1];	  PathIndices    pathIndices[stackSize    -    1]    =       "null   ";    	non-compiled	[CE]  ']'  expected	43	None	replace
1292	[BUG]  [BUGGY]  PathIndices  pathIndices[stackSize  -  1]  =(pathNames[stackSize  -  1]  >=  null)?  null  :  pathNames[stackSize  -  1];  [CE]  ']'  expected  [FE]              AssertionFailedError      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {      [BUGGY]  PathIndices  pathIndices[stackSize  -  1]  =(pathNames[stackSize  -  1]  >=  null)?  null  :  pathNames[stackSize  -  1];  [BUGGY]      pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	261	261	2	replace	PathIndices  pathIndices[stackSize  -  1]  =(pathNames[stackSize  -  1]  >=  null)?  null  :  pathNames[stackSize  -  1];	  PathIndices    pathIndices[stackSize    -    1]    =       "null   ";    	non-compiled	[CE]  ']'  expected	43	None	replace
1293	[BUG]  [BUGGY]  PathIndices  pathIndices[stackSize  -  1]  =(pathNames[stackSize  -  1]  >>  null)?  null  :  pathNames[stackSize  -  1];  [CE]  ']'  expected  [FE]                AssertionFailedError      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {      [BUGGY]  PathIndices  pathIndices[stackSize  -  1]  =(pathNames[stackSize  -  1]  >>  null)?  null  :  pathNames[stackSize  -  1];  [BUGGY]      pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	261	261	2	replace	PathIndices  pathIndices[stackSize  -  1]  =(pathNames[stackSize  -  1]  >>  null)?  null  :  pathNames[stackSize  -  1];	  PathIndices    pathIndices[stackSize    -    1]    =       "null   ";    	non-compiled	[CE]  ']'  expected	43	None	replace
1294	[BUG]  [BUGGY]  PathIndices  pathIndices[stackSize  -  1]  =(pathNames[stackSize  -  1]!=  null)?  null  :  pathNames[stackSize  -  1];  [CE]  ']'  expected  [FE]                  AssertionFailedError      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {      [BUGGY]  PathIndices  pathIndices[stackSize  -  1]  =(pathNames[stackSize  -  1]!=  null)?  null  :  pathNames[stackSize  -  1];  [BUGGY]      pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	261	261	2	replace	PathIndices  pathIndices[stackSize  -  1]  =(pathNames[stackSize  -  1]!=  null)?  null  :  pathNames[stackSize  -  1];	  PathIndices    pathIndices[stackSize    -    1]    =       "null   ";    	non-compiled	[CE]  ']'  expected	43	None	replace
1295	[BUG]  [BUGGY]  if(stackSize  >  0)  {  pathNames.pop();  }  else  {  skipStack();  }  [CE]  cannot  find  symbol  [FE]                    ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {      [BUGGY]  if(stackSize  >  0)  {  pathNames.pop();  }  else  {  skipStack();  }  [BUGGY]      pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	261	261	2	replace	if(stackSize  >  0)  {  pathNames.pop();  }  else  {  skipStack();  }	  if(stackSize    >    0)    {    stack.pop();    }    else    {    skipStack();    }    	non-compiled	[CE]  cannot  find  symbol	167	None	replace
1296	[BUG]  [BUGGY]  StackTraceElement  t  =  stack.peek();  [CE]  cannot  find  symbol  [FE]                      ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {      [BUGGY]  StackTraceElement  t  =  stack.peek();  [BUGGY]      pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	261	261	2	replace	StackTraceElement  t  =  stack.peek();	  if(stackSize    >    0)    {    stack.pop();    }    else    {    skipStack();    }    	non-compiled	[CE]  cannot  find  symbol	167	None	replace
1297	[BUG]  [BUGGY]  if(stackSize  >  0)  {  pathIndices.pop();  }  else  {  skipStack();  }  [CE]  cannot  find  symbol  [FE]                        ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {      [BUGGY]  if(stackSize  >  0)  {  pathIndices.pop();  }  else  {  skipStack();  }  [BUGGY]      pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	261	261	2	replace	if(stackSize  >  0)  {  pathIndices.pop();  }  else  {  skipStack();  }	  if(stackSize    >    0)    {    stack.pop();    }    else    {    skipStack();    }    	non-compiled	[CE]  cannot  find  symbol	167	None	replace
1298	[BUG]  [BUGGY]  if(stackSize  >  0)  {  pathNames.peek();  }  else  {  skipStack();  }  [CE]  cannot  find  symbol  [FE]                          ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {      [BUGGY]  if(stackSize  >  0)  {  pathNames.peek();  }  else  {  skipStack();  }  [BUGGY]      pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	261	261	2	replace	if(stackSize  >  0)  {  pathNames.peek();  }  else  {  skipStack();  }	  if(stackSize    >    0)    {    stack.pop();    }    else    {    skipStack();    }    	non-compiled	[CE]  cannot  find  symbol	167	None	replace
1299	[BUG]  [BUGGY]  if(stackSize  >  0)  {  pathIndices.peek();  }  else  {  skipStack();  }  [CE]  cannot  find  symbol  [FE]                            ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {      [BUGGY]  if(stackSize  >  0)  {  pathIndices.peek();  }  else  {  skipStack();  }  [BUGGY]      pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	261	261	2	replace	if(stackSize  >  0)  {  pathIndices.peek();  }  else  {  skipStack();  }	  if(stackSize    >    0)    {    stack.pop();    }    else    {    skipStack();    }    	non-compiled	[CE]  cannot  find  symbol	167	None	replace
1300	[BUG]  [BUGGY]  validateValue(SENTINEL_CLOSED);  [CE]  cannot  find  symbol  [FE]                          ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {      [BUGGY]  validateValue(SENTINEL_CLOSED);  [BUGGY]      pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	261	261	2	replace	validateValue(SENTINEL_CLOSED);	  validateValue(result);    	non-compiled	[CE]  cannot  find  symbol	105	None	replace
1301	[BUG]  [BUGGY]  validateValue(DEFAULT_NAME);  [CE]  cannot  find  symbol  DEFAULT_NAME  [FE]                            ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {      [BUGGY]  validateValue(DEFAULT_NAME);  [BUGGY]      pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	261	261	2	replace	validateValue(DEFAULT_NAME);	  validateValue(result);    	non-compiled	[CE]  cannot  find  symbol  DEFAULT_NAME	105	None	replace
1302	[BUG]  [BUGGY]  validateValue(NO_READABLE_READER);  [CE]  cannot  find  symbol  NO_READABLE_READER  [FE]                              ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {      [BUGGY]  validateValue(NO_READABLE_READER);  [BUGGY]      pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	261	261	2	replace	validateValue(NO_READABLE_READER);	  validateValue(result);    	non-compiled	[CE]  cannot  find  symbol  NO_READABLE_READER	105	None	replace
1303	[BUG]  [BUGGY]  validateValue(SETINEL_READER);  [CE]  cannot  find  symbol  SETINEL_READER  [FE]                                ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {      [BUGGY]  validateValue(SETINEL_READER);  [BUGGY]      pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	261	261	2	replace	validateValue(SETINEL_READER);	  validateValue(result);    	non-compiled	[CE]  cannot  find  symbol  SETINEL_READER	105	None	replace
1304	[BUG]  [BUGGY]  [FE]  IllegalArgumentException  [FE]    IllegalArgumentException    [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {      [BUGGY]  if(stackSize    >    0)    {    popStack();    }    else    {    throw    new    IllegalArgumentException(     "     ");    }    if(stackSize  >  0)  {  popStack();  }  else  {  throw  new  IllegalArgumentException(   "...   ");  }  if(stackSize  >  0)  {  popStack();  }  else  {  throw  new  IllegalArgumentException( "  [ ");  }  [BUGGY]      pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	261	261	2	add	if(stackSize        >        0)        {        popStack();        }        else        {        throw        new        IllegalArgumentException(       "       ");        }        if(stackSize    >    0)    {    popStack();    }    else    {    throw    new    IllegalArgumentException(   "...   ");    }    if(stackSize  >  0)  {  popStack();  }  else  {  throw  new  IllegalArgumentException( "  [ ");  }	  	compilable	  [FE]  IllegalArgumentException  	15	2	add
1305	[BUG]  [BUGGY]  if(stackSize    >    0)    {    popStack();    }    else    {    throw    new    IllegalArgumentException(     "     ");    }    if(stackSize  >  0)  {  popStack();  }  else  {  throw  new  IllegalArgumentException(   "...   ");  }  if(stackSize  >  0)  {  popStack();  }  else  {  throw  new  IllegalArgumentException( "  [ ");  }  [FE]  IllegalArgumentException  [FE]    IllegalArgumentException    [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {      [BUGGY]  if(stackSize    >    0)    {    popStack();    }    else    {    throw    new    IllegalArgumentException(     "     ");    }    if(stackSize  >  0)  {  popStack();  }  else  {  throw  new  IllegalArgumentException(   "...   ");  }  if(stackSize  >  0)  {  popStack();  }  else  {  throw  new  IllegalArgumentException( "  [ ");  }  [BUGGY]      pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	261	261	2	replace	if(stackSize        >        0)        {        popStack();        }        else        {        throw        new        IllegalArgumentException(       "       ");        }        if(stackSize    >    0)    {    popStack();    }    else    {    throw    new    IllegalArgumentException(   "...   ");    }    if(stackSize  >  0)  {  popStack();  }  else  {  throw  new  IllegalArgumentException( "  [ ");  }	  	compilable	  [FE]  IllegalArgumentException  	15	2	add
1306	[BUG]  [BUGGY]  [FE]  IllegalArgumentException  [FE]      IllegalArgumentException    [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {      [BUGGY]  if(stackSize    >    0)    {    popStack();    }    else    {    throw    new    IllegalArgumentException(     "     ");    }    if(stackSize  >  0)  {  popStack();  }  else  {  throw  new  IllegalArgumentException(   "...   ");  }  if(stackSize  >  0)  {  popStack();  }  else  {  throw  new  IllegalArgumentException( "null ");  }  [BUGGY]      pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	261	261	2	add	if(stackSize        >        0)        {        popStack();        }        else        {        throw        new        IllegalArgumentException(       "       ");        }        if(stackSize    >    0)    {    popStack();    }    else    {    throw    new    IllegalArgumentException(   "...   ");    }    if(stackSize  >  0)  {  popStack();  }  else  {  throw  new  IllegalArgumentException( "null ");  }	  	compilable	  [FE]  IllegalArgumentException  	15	2	add
1307	[BUG]  [BUGGY]  if(stackSize    >    0)    {    popStack();    }    else    {    throw    new    IllegalArgumentException(     "     ");    }    if(stackSize  >  0)  {  popStack();  }  else  {  throw  new  IllegalArgumentException(   "...   ");  }  if(stackSize  >  0)  {  popStack();  }  else  {  throw  new  IllegalArgumentException( "null ");  }  [FE]  IllegalArgumentException  [FE]      IllegalArgumentException    [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {      [BUGGY]  if(stackSize    >    0)    {    popStack();    }    else    {    throw    new    IllegalArgumentException(     "     ");    }    if(stackSize  >  0)  {  popStack();  }  else  {  throw  new  IllegalArgumentException(   "...   ");  }  if(stackSize  >  0)  {  popStack();  }  else  {  throw  new  IllegalArgumentException( "null ");  }  [BUGGY]      pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	261	261	2	replace	if(stackSize        >        0)        {        popStack();        }        else        {        throw        new        IllegalArgumentException(       "       ");        }        if(stackSize    >    0)    {    popStack();    }    else    {    throw    new    IllegalArgumentException(   "...   ");    }    if(stackSize  >  0)  {  popStack();  }  else  {  throw  new  IllegalArgumentException( "null ");  }	  	compilable	  [FE]  IllegalArgumentException  	15	2	add
1308	[BUG]  [BUGGY]  append(JsonToken.VALUE_NUMBER_INT);  [CE]  cannot  find  symbol  VALUE_NUMBER_INT  [FE]                  ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {      [BUGGY]  append(JsonToken.VALUE_NUMBER_INT);  [BUGGY]      pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	261	261	2	replace	append(JsonToken.VALUE_NUMBER_INT);	  hop();    	non-compiled	[CE]  cannot  find  symbol  VALUE_NUMBER_INT	62	None	replace
1309	[BUG]  [BUGGY]  connectToPossibleExceptionHandler(JsonToken.EXPR_RESULT,  UNREADABLE_READER);  [CE]  cannot  find  symbol  EXPR_RESULT  [FE]            ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {      [BUGGY]  connectToPossibleExceptionHandler(JsonToken.EXPR_RESULT,  UNREADABLE_READER);  [BUGGY]      pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	261	261	2	replace	connectToPossibleExceptionHandler(JsonToken.EXPR_RESULT,  UNREADABLE_READER);	  connectToPossibleExceptionHandler(JsonToken.EXPR_RESULT);    	non-compiled	[CE]  cannot  find  symbol  EXPR_RESULT	1	None	replace
1310	[BUG]  [BUGGY]  connectToPossibleExceptionHandler(jsonToken.START_OBJECT,  stack);  [CE]  cannot  find  symbol  jsonToken  [FE]                      ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {      [BUGGY]  connectToPossibleExceptionHandler(jsonToken.START_OBJECT,  stack);  [BUGGY]      pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	261	261	2	replace	connectToPossibleExceptionHandler(jsonToken.START_OBJECT,  stack);	  connectToPossibleExceptionHandler(throwInternal(),    JsonToken.START_OBJECT);    	non-compiled	[CE]  cannot  find  symbol  jsonToken	52	None	replace
1311	[BUG]  [BUGGY]  connectToPossibleExceptionHandler(JsonToken.START_OBJECT,  stack);  [CE]  cannot  find  symbol  START_OBJECT  [FE]                        ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {      [BUGGY]  connectToPossibleExceptionHandler(JsonToken.START_OBJECT,  stack);  [BUGGY]      pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	261	261	2	replace	connectToPossibleExceptionHandler(JsonToken.START_OBJECT,  stack);	  connectToPossibleExceptionHandler(throwInternal(),    JsonToken.START_OBJECT);    	non-compiled	[CE]  cannot  find  symbol  START_OBJECT	52	None	replace
1312	[BUG]  [BUGGY]  connectToPossibleExceptionHandler(nextInternal(),  JsonToken.START_OBJECT);  [CE]  cannot  find  symbol  [FE]                          ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {      [BUGGY]  connectToPossibleExceptionHandler(nextInternal(),  JsonToken.START_OBJECT);  [BUGGY]      pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	261	261	2	replace	connectToPossibleExceptionHandler(nextInternal(),  JsonToken.START_OBJECT);	  connectToPossibleExceptionHandler(throwInternal(),    JsonToken.START_OBJECT);    	non-compiled	[CE]  cannot  find  symbol	52	None	replace
1313	[BUG]  [BUGGY]  if(stackSize  <  0)  {  nextIndex();  }  [CE]  cannot  find  symbol  [FE]            ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {      [BUGGY]  if(stackSize  <  0)  {  nextIndex();  }  [BUGGY]      pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	261	261	2	replace	if(stackSize  <  0)  {  nextIndex();  }	  if(stackSize    >    0)    {    nextIndex();    }    	non-compiled	[CE]  cannot  find  symbol	194	None	replace
1314	[BUG]  [BUGGY]  if(stackSize  >  0)  {  popStack();  }  else  {  System.arraycopy(stackNames,  0,  pathNames,  0,  stackSize);  }  [CE]  cannot  find  symbol  stackNames  [FE]              ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {      [BUGGY]  if(stackSize  >  0)  {  popStack();  }  else  {  System.arraycopy(stackNames,  0,  pathNames,  0,  stackSize);  }  [BUGGY]      pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	261	261	2	replace	if(stackSize  >  0)  {  popStack();  }  else  {  System.arraycopy(stackNames,  0,  pathNames,  0,  stackSize);  }	  if(stackSize    >    0)    {    popStack();    }    if(stackSize    >    0)    {    popStack();    System.arraycopy(stackNames,    0,    pathNames,    0,    stackSize);    }    	non-compiled	[CE]  cannot  find  symbol  stackNames	90	None	replace
1315	[BUG]  [BUGGY]  connectToPossibleExceptionHandler(JsonToken.START_OBJECT,  result);  [CE]  cannot  find  symbol  START_OBJECT  [FE]              ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {      [BUGGY]  connectToPossibleExceptionHandler(JsonToken.START_OBJECT,  result);  [BUGGY]      pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	261	261	2	replace	connectToPossibleExceptionHandler(JsonToken.START_OBJECT,  result);	  connectToPossibleExceptionHandler(JsonToken.START_OBJECT);    	non-compiled	[CE]  cannot  find  symbol  START_OBJECT	2	None	replace
1316	[BUG]  [BUGGY]  JsonToken  t  =  getCurrentToken();  _reportError( "Current  token( "+getMessage()  + ")not  a  value ",  JsonToken.VALUE_NULL);  [CE]  cannot  find  symbol  [FE]                  ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {      [BUGGY]  JsonToken  t  =  getCurrentToken();  _reportError( "Current  token( "+getMessage()  + ")not  a  value ",  JsonToken.VALUE_NULL);  [BUGGY]      pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	261	261	2	replace	JsonToken  t  =  getCurrentToken();  _reportError( "Current  token( "+getMessage()  + ")not  a  value ",  JsonToken.VALUE_NULL);	  _reportError(   "Current    token(   "+getMessage()    +   ")not    a    value   ",    JsonToken.VALUE_NULL);    	non-compiled	[CE]  cannot  find  symbol	30	None	replace
1317	[BUG]  [BUGGY]  _reportError( "Current  token( "+getMessage()  + ")not  a  value ", "JsonToken.VALUE_NULL);  [CE]  unclosed  string  literal  [FE]                    ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {      [BUGGY]  _reportError( "Current  token( "+getMessage()  + ")not  a  value ", "JsonToken.VALUE_NULL);  [BUGGY]      pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	261	261	2	replace	_reportError( "Current  token( "+getMessage()  + ")not  a  value ", "JsonToken.VALUE_NULL);	  _reportError(   "Current    token(   "+getMessage()    +   ")not    a    value   ",    JsonToken.VALUE_NULL);    	non-compiled	[CE]  unclosed  string  literal	30	None	replace
1318	[BUG]  [BUGGY]  StackTree  <  NULL_OF_RANGE)  {  popStack();  }  else  {  skipStack();  }  [CE]  >  expected  [FE]                        ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {      [BUGGY]  StackTree  <  NULL_OF_RANGE)  {  popStack();  }  else  {  skipStack();  }  [BUGGY]      pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	261	261	2	replace	StackTree  <  NULL_OF_RANGE)  {  popStack();  }  else  {  skipStack();  }	  StackTree    <    NUMBER_OF_RANGE)    {    popStack();    }    else    {    skipStack();    }    	non-compiled	[CE]  >  expected	76	None	replace
1319	[BUG]  [BUGGY]  StackTree  <  =  NUMBER_OF_RANGE)  {  popStack();  }  else  {  skipStack();  }  [CE]  illegal  start  of  type  [FE]                          ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {      [BUGGY]  StackTree  <  =  NUMBER_OF_RANGE)  {  popStack();  }  else  {  skipStack();  }  [BUGGY]      pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	261	261	2	replace	StackTree  <  =  NUMBER_OF_RANGE)  {  popStack();  }  else  {  skipStack();  }	  StackTree    <    NUMBER_OF_RANGE)    {    popStack();    }    else    {    skipStack();    }    	non-compiled	[CE]  illegal  start  of  type	76	None	replace
1320	[BUG]  [BUGGY]  connectToPossibleExceptionHandler(JsonToken.START_PARAM);  [CE]  cannot  find  symbol  START_PARAM  [FE]                ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {      [BUGGY]  connectToPossibleExceptionHandler(JsonToken.START_PARAM);  [BUGGY]      pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	261	261	2	replace	connectToPossibleExceptionHandler(JsonToken.START_PARAM);	  peer();    	non-compiled	[CE]  cannot  find  symbol  START_PARAM	61	None	replace
1321	[BUG]  [BUGGY]  JsonToken  VALUE_NULL  =  new  JsonToken(JsonToken.FIELD_NAME);  pathNames[stackSize  -  1]  =  null;  [CE]  cannot  find  symbol  FIELD_NAME  [FE]                  ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {      [BUGGY]  JsonToken  VALUE_NULL  =  new  JsonToken(JsonToken.FIELD_NAME);  pathNames[stackSize  -  1]  =  null;  [BUGGY]      pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	261	261	2	replace	JsonToken  VALUE_NULL  =  new  JsonToken(JsonToken.FIELD_NAME);  pathNames[stackSize  -  1]  =  null;	  if(stackSize    >    0)    {    nextName();    }    else    {    JsonToken.VALUE_NULL    =    new    JsonToken(JsonToken.FIELD_NAME);    pathNames[stackSize    -    1]    =    null;    }    	non-compiled	[CE]  cannot  find  symbol  FIELD_NAME	189	None	replace
1322	[BUG]  [BUGGY]  if(stackSize  >  1)  {  nextName();  }  else  {  JsonToken.VALUE_NULL  =  new  JsonToken(JsonToken.FIELD_NAME);  pathNames[stackSize  -  1]  =  null;  }  [CE]  cannot  find  symbol  VALUE_NULL  [FE]                    ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {      [BUGGY]  if(stackSize  >  1)  {  nextName();  }  else  {  JsonToken.VALUE_NULL  =  new  JsonToken(JsonToken.FIELD_NAME);  pathNames[stackSize  -  1]  =  null;  }  [BUGGY]      pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	261	261	2	replace	if(stackSize  >  1)  {  nextName();  }  else  {  JsonToken.VALUE_NULL  =  new  JsonToken(JsonToken.FIELD_NAME);  pathNames[stackSize  -  1]  =  null;  }	  if(stackSize    >    0)    {    nextName();    }    else    {    JsonToken.VALUE_NULL    =    new    JsonToken(JsonToken.FIELD_NAME);    pathNames[stackSize    -    1]    =    null;    }    	non-compiled	[CE]  cannot  find  symbol  VALUE_NULL	189	None	replace
1323	[BUG]  [BUGGY]  if(stackSize  >  0)  {  nextName();  }  else  {  JsonToken.VALUE_NULL  =  new  JsonToken(JsonToken.FIELD_NAME);  pathNames[stackSize  -  1]  =  null  [CE]  ';'  expected  [FE]                      ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {      [BUGGY]  if(stackSize  >  0)  {  nextName();  }  else  {  JsonToken.VALUE_NULL  =  new  JsonToken(JsonToken.FIELD_NAME);  pathNames[stackSize  -  1]  =  null  [BUGGY]      pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	261	261	2	replace	if(stackSize  >  0)  {  nextName();  }  else  {  JsonToken.VALUE_NULL  =  new  JsonToken(JsonToken.FIELD_NAME);  pathNames[stackSize  -  1]  =  null	  if(stackSize    >    0)    {    nextName();    }    else    {    JsonToken.VALUE_NULL    =    new    JsonToken(JsonToken.FIELD_NAME);    pathNames[stackSize    -    1]    =    null;    }    	non-compiled	[CE]  ';'  expected	189	None	replace
1324	[BUG]  [BUGGY]  if(stackSize  >  0)  {  nextName();  }  else  {  JsonToken.VALUE_NULL  =  new  JsonToken(JsonToken.START_OBJECT);  pathNames[stackSize  -  1]  =  null;  }  [CE]  cannot  find  symbol  VALUE_NULL  [FE]                        ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {      [BUGGY]  if(stackSize  >  0)  {  nextName();  }  else  {  JsonToken.VALUE_NULL  =  new  JsonToken(JsonToken.START_OBJECT);  pathNames[stackSize  -  1]  =  null;  }  [BUGGY]      pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	261	261	2	replace	if(stackSize  >  0)  {  nextName();  }  else  {  JsonToken.VALUE_NULL  =  new  JsonToken(JsonToken.START_OBJECT);  pathNames[stackSize  -  1]  =  null;  }	  if(stackSize    >    0)    {    nextName();    }    else    {    JsonToken.VALUE_NULL    =    new    JsonToken(JsonToken.FIELD_NAME);    pathNames[stackSize    -    1]    =    null;    }    	non-compiled	[CE]  cannot  find  symbol  VALUE_NULL	189	None	replace
1325	[BUG]  [BUGGY]  [FE]  IllegalArgumentException  [FE]    IllegalArgumentException    [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {      [BUGGY]  if(stackSize    >    0)    {    popStack();    }    else    {    throw    new    IllegalArgumentException(     "     ");    }    if(stackSize  >  0)  {  popStack();  }  else  {  throw  new  IllegalArgumentException(   "     ");  }  if(stackSize  >  1)  {  popStack();  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	261	261	2	add	if(stackSize        >        0)        {        popStack();        }        else        {        throw        new        IllegalArgumentException(       "       ");        }        if(stackSize    >    0)    {    popStack();    }    else    {    throw    new    IllegalArgumentException(   "       ");    }    if(stackSize  >  1)  {  popStack();  }  else  {  throw  new  IllegalArgumentException( " ");  }	  	compilable	  [FE]  IllegalArgumentException  	10	2	add
1326	[BUG]  [BUGGY]  if(stackSize    >    0)    {    popStack();    }    else    {    throw    new    IllegalArgumentException(     "     ");    }    if(stackSize  >  0)  {  popStack();  }  else  {  throw  new  IllegalArgumentException(   "     ");  }  if(stackSize  >  1)  {  popStack();  }  else  {  throw  new  IllegalArgumentException( " ");  }  [FE]  IllegalArgumentException  [FE]    IllegalArgumentException    [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {      [BUGGY]  if(stackSize    >    0)    {    popStack();    }    else    {    throw    new    IllegalArgumentException(     "     ");    }    if(stackSize  >  0)  {  popStack();  }  else  {  throw  new  IllegalArgumentException(   "     ");  }  if(stackSize  >  1)  {  popStack();  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	261	261	2	replace	if(stackSize        >        0)        {        popStack();        }        else        {        throw        new        IllegalArgumentException(       "       ");        }        if(stackSize    >    0)    {    popStack();    }    else    {    throw    new    IllegalArgumentException(   "       ");    }    if(stackSize  >  1)  {  popStack();  }  else  {  throw  new  IllegalArgumentException( " ");  }	  	compilable	  [FE]  IllegalArgumentException  	10	2	add
1327	[BUG]  [BUGGY]  [FE]  IllegalArgumentException  [FE]      IllegalArgumentException    [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {      [BUGGY]  if(stackSize    >    0)    {    popStack();    }    else    {    throw    new    IllegalArgumentException(     "     ");    }    if(stackSize  >  0)  {  popStack();  }  else  {  throw  new  IllegalArgumentException(   "     ");  }  if(stackSize  >=  0)  {  popStack();  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	261	261	2	add	if(stackSize        >        0)        {        popStack();        }        else        {        throw        new        IllegalArgumentException(       "       ");        }        if(stackSize    >    0)    {    popStack();    }    else    {    throw    new    IllegalArgumentException(   "       ");    }    if(stackSize  >=  0)  {  popStack();  }  else  {  throw  new  IllegalArgumentException( " ");  }	  	compilable	  [FE]  IllegalArgumentException  	10	2	add
1328	[BUG]  [BUGGY]  if(stackSize    >    0)    {    popStack();    }    else    {    throw    new    IllegalArgumentException(     "     ");    }    if(stackSize  >  0)  {  popStack();  }  else  {  throw  new  IllegalArgumentException(   "     ");  }  if(stackSize  >=  0)  {  popStack();  }  else  {  throw  new  IllegalArgumentException( " ");  }  [FE]  IllegalArgumentException  [FE]      IllegalArgumentException    [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {      [BUGGY]  if(stackSize    >    0)    {    popStack();    }    else    {    throw    new    IllegalArgumentException(     "     ");    }    if(stackSize  >  0)  {  popStack();  }  else  {  throw  new  IllegalArgumentException(   "     ");  }  if(stackSize  >=  0)  {  popStack();  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	261	261	2	replace	if(stackSize        >        0)        {        popStack();        }        else        {        throw        new        IllegalArgumentException(       "       ");        }        if(stackSize    >    0)    {    popStack();    }    else    {    throw    new    IllegalArgumentException(   "       ");    }    if(stackSize  >=  0)  {  popStack();  }  else  {  throw  new  IllegalArgumentException( " ");  }	  	compilable	  [FE]  IllegalArgumentException  	10	2	add
1329	[BUG]  [BUGGY]  Validate.notNull(pathNames[0]);  [CE]  cannot  find  symbol  Validate  [FE]                    ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {      [BUGGY]  Validate.notNull(pathNames[0]);  [BUGGY]      pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	261	261	2	replace	Validate.notNull(pathNames[0]);	  Validate.notNull(pathNames[stackSize    -    1]);    	non-compiled	[CE]  cannot  find  symbol  Validate	201	None	replace
1330	[BUG]  [BUGGY]  JsonToken  t  =  _parseJsonToken(JsonToken.END_OBJECT);  [CE]  cannot  find  symbol  [FE]                    ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {      [BUGGY]  JsonToken  t  =  _parseJsonToken(JsonToken.END_OBJECT);  [BUGGY]      pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	261	261	2	replace	JsonToken  t  =  _parseJsonToken(JsonToken.END_OBJECT);	  JsonToken    t    =    _reportUnsupportedOperation();    	non-compiled	[CE]  cannot  find  symbol	125	None	replace
1331	[BUG]  [BUGGY]  JsonToken  t  =  createCurrentToken();  [CE]  cannot  find  symbol  [FE]        AssertionFailedError      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {      [BUGGY]  JsonToken  t  =  createCurrentToken();  [BUGGY]      pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	261	261	2	replace	JsonToken  t  =  createCurrentToken();	          JsonToken    t    =    getCurrentToken();    	non-compiled	[CE]  cannot  find  symbol	118	None	replace
1332	[BUG]  [BUGGY]  JsonToken  t  =  findCurrentToken();  [CE]  cannot  find  symbol  [FE]          AssertionFailedError      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {      [BUGGY]  JsonToken  t  =  findCurrentToken();  [BUGGY]      pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	261	261	2	replace	JsonToken  t  =  findCurrentToken();	          JsonToken    t    =    getCurrentToken();    	non-compiled	[CE]  cannot  find  symbol	118	None	replace
1333	[BUG]  [BUGGY]  JsonToken  t  =  getNumberToken();  [CE]  cannot  find  symbol  [FE]            AssertionFailedError      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {      [BUGGY]  JsonToken  t  =  getNumberToken();  [BUGGY]      pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	261	261	2	replace	JsonToken  t  =  getNumberToken();	          JsonToken    t    =    getCurrentToken();    	non-compiled	[CE]  cannot  find  symbol	118	None	replace
1334	[BUG]  [BUGGY]  JsonToken  t  =  getCurrentSyntheticToken();  [CE]  cannot  find  symbol  [FE]              AssertionFailedError      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {      [BUGGY]  JsonToken  t  =  getCurrentSyntheticToken();  [BUGGY]      pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	261	261	2	replace	JsonToken  t  =  getCurrentSyntheticToken();	          JsonToken    t    =    getCurrentToken();    	non-compiled	[CE]  cannot  find  symbol	118	None	replace
1335	[BUG]  [BUGGY]  validateValue(JsonToken.VALUE_EMBEDDED_STRING);  [CE]  cannot  find  symbol  VALUE_EMBEDDED_STRING  [FE]                        ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {      [BUGGY]  validateValue(JsonToken.VALUE_EMBEDDED_STRING);  [BUGGY]      pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	261	261	2	replace	validateValue(JsonToken.VALUE_EMBEDDED_STRING);	  validateValue(JsonToken.VALUE_EMBEDDED_OBJECT);    	non-compiled	[CE]  cannot  find  symbol  VALUE_EMBEDDED_STRING	98	None	replace
1336	[BUG]  [BUGGY]  connectToPossibleExceptionHandler(JsonToken.VALUE_NULL,  SENTINEL_CLOSED);  [CE]  cannot  find  symbol  VALUE_NULL  [FE]                    ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {      [BUGGY]  connectToPossibleExceptionHandler(JsonToken.VALUE_NULL,  SENTINEL_CLOSED);  [BUGGY]      pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	261	261	2	replace	connectToPossibleExceptionHandler(JsonToken.VALUE_NULL,  SENTINEL_CLOSED);	  connectToPossibleExceptionHandler(JsonToken.VALUE_NULL);    	non-compiled	[CE]  cannot  find  symbol  VALUE_NULL	5	None	replace
1337	[BUG]  [BUGGY]  connectToPossibleExceptionHandler(JsonToken.VALUE_NULL,  JsonToken.START_OBJECT);  [CE]  cannot  find  symbol  VALUE_NULL  [FE]                      ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {      [BUGGY]  connectToPossibleExceptionHandler(JsonToken.VALUE_NULL,  JsonToken.START_OBJECT);  [BUGGY]      pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	261	261	2	replace	connectToPossibleExceptionHandler(JsonToken.VALUE_NULL,  JsonToken.START_OBJECT);	  connectToPossibleExceptionHandler(JsonToken.VALUE_NULL);    	non-compiled	[CE]  cannot  find  symbol  VALUE_NULL	5	None	replace
1338	[BUG]  [BUGGY]  connectToPossibleExceptionHandler(JsonToken.VALUE_NULL,  JsonToken.END_OBJECT);  [CE]  cannot  find  symbol  VALUE_NULL  [FE]                        ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {      [BUGGY]  connectToPossibleExceptionHandler(JsonToken.VALUE_NULL,  JsonToken.END_OBJECT);  [BUGGY]      pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	261	261	2	replace	connectToPossibleExceptionHandler(JsonToken.VALUE_NULL,  JsonToken.END_OBJECT);	  connectToPossibleExceptionHandler(JsonToken.VALUE_NULL);    	non-compiled	[CE]  cannot  find  symbol  VALUE_NULL	5	None	replace
1339	[BUG]  [BUGGY]  connectToPossibleExceptionHandler(JsonToken.VALUE_NULL,  pathNames);  [CE]  cannot  find  symbol  VALUE_NULL  [FE]                          ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {      [BUGGY]  connectToPossibleExceptionHandler(JsonToken.VALUE_NULL,  pathNames);  [BUGGY]      pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	261	261	2	replace	connectToPossibleExceptionHandler(JsonToken.VALUE_NULL,  pathNames);	  connectToPossibleExceptionHandler(JsonToken.VALUE_NULL);    	non-compiled	[CE]  cannot  find  symbol  VALUE_NULL	5	None	replace
1340	[BUG]  [BUGGY]  pathIndices[stackSize  -  1]  =  new  String(pathNames);  [CE]  no  suitable  constructor  found  for  String(String[])  [FE]                        ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {      [BUGGY]  pathIndices[stackSize  -  1]  =  new  String(pathNames);  [BUGGY]      pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	261	261	2	replace	pathIndices[stackSize  -  1]  =  new  String(pathNames);	  pathIndices[stackSize    -    1]    =    null;    	non-compiled	[CE]  no  suitable  constructor  found  for  String(String[])	19	None	replace
1341	[BUG]  [BUGGY]  pathIndices[stackSize  -  1]  =  JsonToken.VALUE_NUMBER_INT;  [CE]  cannot  find  symbol  VALUE_NUMBER_INT  [FE]                          ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {      [BUGGY]  pathIndices[stackSize  -  1]  =  JsonToken.VALUE_NUMBER_INT;  [BUGGY]      pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	261	261	2	replace	pathIndices[stackSize  -  1]  =  JsonToken.VALUE_NUMBER_INT;	  pathIndices[stackSize    -    1]    =    null;    	non-compiled	[CE]  cannot  find  symbol  VALUE_NUMBER_INT	19	None	replace
1342	[BUG]  [BUGGY]  pathIndices[stackSize  -  1]  =  JsonToken.END_ARRAY;  [CE]  incompatible  types  [FE]                            ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {      [BUGGY]  pathIndices[stackSize  -  1]  =  JsonToken.END_ARRAY;  [BUGGY]      pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	261	261	2	replace	pathIndices[stackSize  -  1]  =  JsonToken.END_ARRAY;	  pathIndices[stackSize    -    1]    =    null;    	non-compiled	[CE]  incompatible  types	19	None	replace
1343	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {      [BUGGY]  pathNames[stackSize  -  1]  =(String)null;  [BUGGY]      pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	261	261	2	add	pathNames[stackSize  -  1]  =(String)null;	  pathNames[stackSize    -    1]    =       "null   ";    	compilable	  [FE]  AssertionFailedError  	35	2	replace
1344	[BUG]  [BUGGY]  pathNames[stackSize  -  1]  =(String)null;  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {      [BUGGY]  pathNames[stackSize  -  1]  =(String)null;  [BUGGY]      pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	261	261	2	replace	pathNames[stackSize  -  1]  =(String)null;	  pathNames[stackSize    -    1]    =       "null   ";    	compilable	  [FE]  AssertionFailedError  	35	2	replace
1345	[BUG]  [BUGGY]  pathIndices[stackSize  -  1]  =  null;  pathNames[stackSize  -  1]  =  null;  [CE]  incompatible  types  [FE]    IllegalArgumentException    [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {      [BUGGY]  pathIndices[stackSize  -  1]  =  null;  pathNames[stackSize  -  1]  =  null;  [BUGGY]      pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	261	261	2	replace	pathIndices[stackSize  -  1]  =  null;  pathNames[stackSize  -  1]  =  null;	  if(stackSize    >    0)    {    popStack();    }    else    {    throw    new    IllegalArgumentException(       "       ");    }    if(stackSize    >    0)    {    popStack();    }    else    {    throw    new    IllegalArgumentException(   "...   ");    }    	non-compiled	[CE]  incompatible  types	16	None	replace
1346	[BUG]  [BUGGY]  connectToPossibleExceptionHandler(null,  JsonToken.VALUE_NUMBER_INT);  [CE]  cannot  find  symbol  VALUE_NUMBER_INT  [FE]                  ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {      [BUGGY]  connectToPossibleExceptionHandler(null,  JsonToken.VALUE_NUMBER_INT);  [BUGGY]      pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	261	261	2	replace	connectToPossibleExceptionHandler(null,  JsonToken.VALUE_NUMBER_INT);	  connectToPossibleExceptionHandler(null,    JsonToken.VALUE_NULL);    	non-compiled	[CE]  cannot  find  symbol  VALUE_NUMBER_INT	170	None	replace
1347	[BUG]  [BUGGY]  connectToPossibleExceptionHandler(null,  JsonToken.VALUE_NUMBER_ERROR);  [CE]  cannot  find  symbol  VALUE_NUMBER_ERROR  [FE]                    ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {      [BUGGY]  connectToPossibleExceptionHandler(null,  JsonToken.VALUE_NUMBER_ERROR);  [BUGGY]      pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	261	261	2	replace	connectToPossibleExceptionHandler(null,  JsonToken.VALUE_NUMBER_ERROR);	  connectToPossibleExceptionHandler(null,    JsonToken.VALUE_NULL);    	non-compiled	[CE]  cannot  find  symbol  VALUE_NUMBER_ERROR	170	None	replace
1348	[BUG]  [BUGGY]  validateValue(JsonToken.VALUE_EMBEDDED_FIELD_NAME,  UNREADABLE_READER);  [CE]  cannot  find  symbol  VALUE_EMBEDDED_FIELD_NAME  [FE]                          ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {      [BUGGY]  validateValue(JsonToken.VALUE_EMBEDDED_FIELD_NAME,  UNREADABLE_READER);  [BUGGY]      pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	261	261	2	replace	validateValue(JsonToken.VALUE_EMBEDDED_FIELD_NAME,  UNREADABLE_READER);	  validateValue(JsonToken.VALUE_EMBEDDED_FIELD_NAME);    	non-compiled	[CE]  cannot  find  symbol  VALUE_EMBEDDED_FIELD_NAME	99	None	replace
1349	[BUG]  [BUGGY]  [FE]  IllegalArgumentException  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {      [BUGGY]  if(stackSize  >=  0)  {  popStack();  }  else  {  throw  new  IllegalArgumentException(   "   ");  }  if(stackSize  >=  1)  {  popStack();  }  else  {  throw  new  IllegalArgumentException( "   ");  }  [BUGGY]      pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	261	261	2	add	if(stackSize    >=    0)    {    popStack();    }    else    {    throw    new    IllegalArgumentException(   "   ");    }    if(stackSize  >=  1)  {  popStack();  }  else  {  throw  new  IllegalArgumentException( "   ");  }	  	compilable	  [FE]  IllegalArgumentException  	179	2	add
1350	[BUG]  [BUGGY]  if(stackSize  >=  0)  {  popStack();  }  else  {  throw  new  IllegalArgumentException(   "   ");  }  if(stackSize  >=  1)  {  popStack();  }  else  {  throw  new  IllegalArgumentException( "   ");  }  [FE]  IllegalArgumentException  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {      [BUGGY]  if(stackSize  >=  0)  {  popStack();  }  else  {  throw  new  IllegalArgumentException(   "   ");  }  if(stackSize  >=  1)  {  popStack();  }  else  {  throw  new  IllegalArgumentException( "   ");  }  [BUGGY]      pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	261	261	2	replace	if(stackSize    >=    0)    {    popStack();    }    else    {    throw    new    IllegalArgumentException(   "   ");    }    if(stackSize  >=  1)  {  popStack();  }  else  {  throw  new  IllegalArgumentException( "   ");  }	  	compilable	  [FE]  IllegalArgumentException  	179	2	add
1351	[BUG]  [BUGGY]  connectToPossibleExceptionHandler(JsonToken.VALUE_NULL,  stack);  [CE]  cannot  find  symbol  VALUE_NULL  [FE]                    ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {      [BUGGY]  connectToPossibleExceptionHandler(JsonToken.VALUE_NULL,  stack);  [BUGGY]      pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	261	261	2	replace	connectToPossibleExceptionHandler(JsonToken.VALUE_NULL,  stack);	  connectToPossibleExceptionHandler(throwInternal(),    JsonToken.VALUE_NULL);    	non-compiled	[CE]  cannot  find  symbol  VALUE_NULL	51	None	replace
1352	[BUG]  [BUGGY]  [FE]  ArrayIndexOutOfBoundsException  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {      [BUGGY]  if(stackSize    >    0)    {    popStack();    }    if(stackSize  <  0)  {  popStack();  }  if(stackSize  >  0)  {  popStack();  }  if(stackSize  >  0)  {  popStack();  }  [BUGGY]      pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	261	261	2	add	if(stackSize        >        0)        {        popStack();        }        if(stackSize    <    0)    {    popStack();    }    if(stackSize  >  0)  {  popStack();  }  if(stackSize  >  0)  {  popStack();  }	  	compilable	  [FE]  ArrayIndexOutOfBoundsException  	206	2	add
1353	[BUG]  [BUGGY]  if(stackSize    >    0)    {    popStack();    }    if(stackSize  <  0)  {  popStack();  }  if(stackSize  >  0)  {  popStack();  }  if(stackSize  >  0)  {  popStack();  }  [FE]  ArrayIndexOutOfBoundsException  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {      [BUGGY]  if(stackSize    >    0)    {    popStack();    }    if(stackSize  <  0)  {  popStack();  }  if(stackSize  >  0)  {  popStack();  }  if(stackSize  >  0)  {  popStack();  }  [BUGGY]      pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	261	261	2	replace	if(stackSize        >        0)        {        popStack();        }        if(stackSize    <    0)    {    popStack();    }    if(stackSize  >  0)  {  popStack();  }  if(stackSize  >  0)  {  popStack();  }	  	compilable	  [FE]  ArrayIndexOutOfBoundsException  	206	2	add
1354	[BUG]  [BUGGY]  [FE]  ArrayIndexOutOfBoundsException  [FE]      ArrayIndexOutOfBoundsException    [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {      [BUGGY]  if(stackSize    >    0)    {    popStack();    }    if(stackSize  <  0)  {  popStack();  }  if(stackSize  >  0)  {  popStack();  }  if(stackSize  <  1)  {  popStack();  }  [BUGGY]      pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	261	261	2	add	if(stackSize        >        0)        {        popStack();        }        if(stackSize    <    0)    {    popStack();    }    if(stackSize  >  0)  {  popStack();  }  if(stackSize  <  1)  {  popStack();  }	  	compilable	  [FE]  ArrayIndexOutOfBoundsException  	206	2	add
1355	[BUG]  [BUGGY]  if(stackSize    >    0)    {    popStack();    }    if(stackSize  <  0)  {  popStack();  }  if(stackSize  >  0)  {  popStack();  }  if(stackSize  <  1)  {  popStack();  }  [FE]  ArrayIndexOutOfBoundsException  [FE]      ArrayIndexOutOfBoundsException    [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {      [BUGGY]  if(stackSize    >    0)    {    popStack();    }    if(stackSize  <  0)  {  popStack();  }  if(stackSize  >  0)  {  popStack();  }  if(stackSize  <  1)  {  popStack();  }  [BUGGY]      pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	261	261	2	replace	if(stackSize        >        0)        {        popStack();        }        if(stackSize    <    0)    {    popStack();    }    if(stackSize  >  0)  {  popStack();  }  if(stackSize  <  1)  {  popStack();  }	  	compilable	  [FE]  ArrayIndexOutOfBoundsException  	206	2	add
1356	[BUG]  [BUGGY]  _reportError( "Current  token( "+JsonToken.START+ ")expected  value ");  [CE]  cannot  find  symbol  START  [FE]                        ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {      [BUGGY]  _reportError( "Current  token( "+JsonToken.START+ ")expected  value ");  [BUGGY]      pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	261	261	2	replace	_reportError( "Current  token( "+JsonToken.START+ ")expected  value ");	  _reportError(   "Current    token(   "+JsonToken.START+   ")not    a    value   ");    	non-compiled	[CE]  cannot  find  symbol  START	129	None	replace
1357	[BUG]  [BUGGY]  connectToPeek(JsonToken.VALUE_NUMBER_CLOSED);  [CE]  cannot  find  symbol  VALUE_NUMBER_CLOSED  [FE]                        ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {      [BUGGY]  connectToPeek(JsonToken.VALUE_NUMBER_CLOSED);  [BUGGY]      pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	261	261	2	replace	connectToPeek(JsonToken.VALUE_NUMBER_CLOSED);	  connectToPeek(JsonToken.VALUE_NUMBER_EXPR_RESULT);    	non-compiled	[CE]  cannot  find  symbol  VALUE_NUMBER_CLOSED	45	None	replace
1358	[BUG]  [BUGGY]  pathIndices[stackSize  -  1]  =   "null ",  null;  [CE]  [FE]                      ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {      [BUGGY]  pathIndices[stackSize  -  1]  =   "null ",  null;  [BUGGY]      pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	261	261	2	replace	pathIndices[stackSize  -  1]  =   "null ",  null;	  pathIndices[stackSize    -    1]    =       "null   ";    	non-compiled	[CE]  	33	None	replace
1359	[BUG]  [BUGGY]  pathIndices[stackSize  -  1]  =   "null ",  JsonToken.END_ARRAY;  [CE]  [FE]                        ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {      [BUGGY]  pathIndices[stackSize  -  1]  =   "null ",  JsonToken.END_ARRAY;  [BUGGY]      pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	261	261	2	replace	pathIndices[stackSize  -  1]  =   "null ",  JsonToken.END_ARRAY;	  pathIndices[stackSize    -    1]    =       "null   ";    	non-compiled	[CE]  	33	None	replace
1360	[BUG]  [BUGGY]  connectToPossibleExceptionHandler(null,  pathNames,  null,  SENTINEL_CLOSED);  [CE]  cannot  find  symbol  [FE]                        ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {      [BUGGY]  connectToPossibleExceptionHandler(null,  pathNames,  null,  SENTINEL_CLOSED);  [BUGGY]      pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	261	261	2	replace	connectToPossibleExceptionHandler(null,  pathNames,  null,  SENTINEL_CLOSED);	  connectToPossibleExceptionHandler(null,    null,    SENTINEL_CLOSED);    	non-compiled	[CE]  cannot  find  symbol	77	None	replace
1361	[BUG]  [BUGGY]  connectToPossibleExceptionHandler(null,  UNREADABLE_READER,  SENTINEL_CLOSED);  [CE]  cannot  find  symbol  [FE]                          ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {      [BUGGY]  connectToPossibleExceptionHandler(null,  UNREADABLE_READER,  SENTINEL_CLOSED);  [BUGGY]      pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	261	261	2	replace	connectToPossibleExceptionHandler(null,  UNREADABLE_READER,  SENTINEL_CLOSED);	  connectToPossibleExceptionHandler(null,    null,    SENTINEL_CLOSED);    	non-compiled	[CE]  cannot  find  symbol	77	None	replace
1362	[BUG]  [BUGGY]  connectToPossibleExceptionHandler(null,  UNREADABLE_READER,  null,  SENTINEL_CLOSED);  [CE]  cannot  find  symbol  [FE]                            ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {      [BUGGY]  connectToPossibleExceptionHandler(null,  UNREADABLE_READER,  null,  SENTINEL_CLOSED);  [BUGGY]      pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	261	261	2	replace	connectToPossibleExceptionHandler(null,  UNREADABLE_READER,  null,  SENTINEL_CLOSED);	  connectToPossibleExceptionHandler(null,    null,    SENTINEL_CLOSED);    	non-compiled	[CE]  cannot  find  symbol	77	None	replace
1363	[BUG]  [BUGGY]  validateValue(null,  JsonToken.START_OBJECT);  [CE]  cannot  find  symbol  START_OBJECT  [FE]                      ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {      [BUGGY]  validateValue(null,  JsonToken.START_OBJECT);  [BUGGY]      pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	261	261	2	replace	validateValue(null,  JsonToken.START_OBJECT);	  validateValue(null);    	non-compiled	[CE]  cannot  find  symbol  START_OBJECT	103	None	replace
1364	[BUG]  [BUGGY]  validateValue(null,  STACK_SIZE);  [CE]  cannot  find  symbol  STACK_SIZE  [FE]                        ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {      [BUGGY]  validateValue(null,  STACK_SIZE);  [BUGGY]      pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	261	261	2	replace	validateValue(null,  STACK_SIZE);	  validateValue(null);    	non-compiled	[CE]  cannot  find  symbol  STACK_SIZE	103	None	replace
1365	[BUG]  [BUGGY]  if(stackSize  >  0)  {  popStack();  }  else  {  JsonToken  START_OBJECT  =  null;  nextName();  pathNames[stackSize  -  1]  =     "null   ";  }  if(stackSize  >  0)  {  popStack();  }  else  {  JsonToken  START_OBJECT  =   "null ";  }  [CE]  incompatible  types  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {      [BUGGY]  if(stackSize  >  0)  {  popStack();  }  else  {  JsonToken  START_OBJECT  =  null;  nextName();  pathNames[stackSize  -  1]  =     "null   ";  }  if(stackSize  >  0)  {  popStack();  }  else  {  JsonToken  START_OBJECT  =   "null ";  }  [BUGGY]      pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	261	261	2	replace	if(stackSize    >    0)    {    popStack();    }    else    {    JsonToken    START_OBJECT    =    null;    nextName();    pathNames[stackSize    -    1]    =       "null   ";    }    if(stackSize  >  0)  {  popStack();  }  else  {  JsonToken  START_OBJECT  =   "null ";  }	  	non-compiled	[CE]  incompatible  types	132	None	add
1366	[BUG]  [BUGGY]  StackTree  <  NUMBER_INDEX  ||  stackSize  >  1)  {  [CE]  >  expected  [FE]                ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {      [BUGGY]  StackTree  <  NUMBER_INDEX  ||  stackSize  >  1)  {  [BUGGY]      pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	261	261	2	replace	StackTree  <  NUMBER_INDEX  ||  stackSize  >  1)  {	  StackTree    <    NUMBER_INDEX    ||    stackSize    >    0)    {    popStack();    }    else    {    skipStack();    }    	non-compiled	[CE]  >  expected	72	None	replace
1367	[BUG]  [BUGGY]  StackTree  <  NUMBER_INDEX  &&  stackSize  >  0)  {  popStack();  }  [CE]  >  expected  [FE]                  ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {      [BUGGY]  StackTree  <  NUMBER_INDEX  &&  stackSize  >  0)  {  popStack();  }  [BUGGY]      pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	261	261	2	replace	StackTree  <  NUMBER_INDEX  &&  stackSize  >  0)  {  popStack();  }	  StackTree    <    NUMBER_INDEX    ||    stackSize    >    0)    {    popStack();    }    else    {    skipStack();    }    	non-compiled	[CE]  >  expected	72	None	replace
1368	[BUG]  [BUGGY]  connectToPossibleExceptionHandler(JsonToken.NAME,  UNREADABLE_READER);  [CE]  cannot  find  symbol  [FE]              ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {      [BUGGY]  connectToPossibleExceptionHandler(JsonToken.NAME,  UNREADABLE_READER);  [BUGGY]      pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	261	261	2	replace	connectToPossibleExceptionHandler(JsonToken.NAME,  UNREADABLE_READER);	  connectToPossibleExceptionHandler(JsonToken.NAME);    	non-compiled	[CE]  cannot  find  symbol	113	None	replace
1369	[BUG]  [BUGGY]  connectToPossibleExceptionHandler(JsonToken.NAME,  pathIndices);  [CE]  cannot  find  symbol  [FE]                ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {      [BUGGY]  connectToPossibleExceptionHandler(JsonToken.NAME,  pathIndices);  [BUGGY]      pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	261	261	2	replace	connectToPossibleExceptionHandler(JsonToken.NAME,  pathIndices);	  connectToPossibleExceptionHandler(JsonToken.NAME);    	non-compiled	[CE]  cannot  find  symbol	113	None	replace
1370	[BUG]  [BUGGY]  connectToPossibleExceptionHandler(null,  pathIndices,  null);  [CE]  cannot  find  symbol  [FE]                        ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {      [BUGGY]  connectToPossibleExceptionHandler(null,  pathIndices,  null);  [BUGGY]      pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	261	261	2	replace	connectToPossibleExceptionHandler(null,  pathIndices,  null);	  connectToPossibleExceptionHandler(null,    null,    pathIndices);    	non-compiled	[CE]  cannot  find  symbol	187	None	replace
1371	[BUG]  [BUGGY]  connectToPossibleExceptionHandler(null,  null,  pathIndices,  JsonToken.END_OBJECT);  [CE]  cannot  find  symbol  [FE]                          ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {      [BUGGY]  connectToPossibleExceptionHandler(null,  null,  pathIndices,  JsonToken.END_OBJECT);  [BUGGY]      pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	261	261	2	replace	connectToPossibleExceptionHandler(null,  null,  pathIndices,  JsonToken.END_OBJECT);	  connectToPossibleExceptionHandler(null,    null,    pathIndices);    	non-compiled	[CE]  cannot  find  symbol	187	None	replace
1372	[BUG]  [BUGGY]  connectToPossibleExceptionHandler(null,  null,  pathIndices,  0);  [CE]  cannot  find  symbol  [FE]                            ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {      [BUGGY]  connectToPossibleExceptionHandler(null,  null,  pathIndices,  0);  [BUGGY]      pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	261	261	2	replace	connectToPossibleExceptionHandler(null,  null,  pathIndices,  0);	  connectToPossibleExceptionHandler(null,    null,    pathIndices);    	non-compiled	[CE]  cannot  find  symbol	187	None	replace
1373	[BUG]  [BUGGY]  connectToPossibleExceptionHandler(null,  null,  pathIndices,  offset);  [CE]  cannot  find  symbol  offset  [FE]                              ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {      [BUGGY]  connectToPossibleExceptionHandler(null,  null,  pathIndices,  offset);  [BUGGY]      pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	261	261	2	replace	connectToPossibleExceptionHandler(null,  null,  pathIndices,  offset);	  connectToPossibleExceptionHandler(null,    null,    pathIndices);    	non-compiled	[CE]  cannot  find  symbol  offset	187	None	replace
1374	[BUG]  [BUGGY]  _reportError( "Current  token( "+getClass().getName()  + ")not  null,  cannot  be  null. ",  JsonToken.NAME);  [CE]  cannot  find  symbol  [FE]                    ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {      [BUGGY]  _reportError( "Current  token( "+getClass().getName()  + ")not  null,  cannot  be  null. ",  JsonToken.NAME);  [BUGGY]      pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	261	261	2	replace	_reportError( "Current  token( "+getClass().getName()  + ")not  null,  cannot  be  null. ",  JsonToken.NAME);	  _reportError(   "Current    token(   "+getClass().getName()    +   ")not    null,    cannot    be    null.   ");    	non-compiled	[CE]  cannot  find  symbol	199	None	replace
1375	[BUG]  [BUGGY]  _reportError( "Current  token( "+getClass()  + ")not  null,  cannot  be  null.   ");  [CE]  cannot  find  symbol  [FE]                      ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {      [BUGGY]  _reportError( "Current  token( "+getClass()  + ")not  null,  cannot  be  null.   ");  [BUGGY]      pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	261	261	2	replace	_reportError( "Current  token( "+getClass()  + ")not  null,  cannot  be  null.   ");	  _reportError(   "Current    token(   "+getClass().getName()    +   ")not    null,    cannot    be    null.   ");    	non-compiled	[CE]  cannot  find  symbol	199	None	replace
1376	[BUG]  [BUGGY]  _reportError( "Current  token( "+JsonToken.NAME+ ")expected  value ");  [CE]  cannot  find  symbol  [FE]                      ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {      [BUGGY]  _reportError( "Current  token( "+JsonToken.NAME+ ")expected  value ");  [BUGGY]      pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	261	261	2	replace	_reportError( "Current  token( "+JsonToken.NAME+ ")expected  value ");	  _reportError(   "Current    token(   "+JsonToken.NAME+   ")not    a    value   ");    	non-compiled	[CE]  cannot  find  symbol	128	None	replace
1377	[BUG]  [BUGGY]  if(stackSize  >  0)  {  nextPath();  }  [CE]  cannot  find  symbol  [FE]              ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {      [BUGGY]  if(stackSize  >  0)  {  nextPath();  }  [BUGGY]      pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	261	261	2	replace	if(stackSize  >  0)  {  nextPath();  }	  if(stackSize    >    0)    {    nextValue();    }    	non-compiled	[CE]  cannot  find  symbol	195	None	replace
1378	[BUG]  [BUGGY]  connectToPossibleExceptionHandler(nextName(),  null);  [CE]  cannot  find  symbol  [FE]                        ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {      [BUGGY]  connectToPossibleExceptionHandler(nextName(),  null);  [BUGGY]      pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	261	261	2	replace	connectToPossibleExceptionHandler(nextName(),  null);	  connectToPossibleExceptionHandler(nextName());    	non-compiled	[CE]  cannot  find  symbol	53	None	replace
1379	[BUG]  [BUGGY]  connectToPossibleExceptionHandler(nextName(),  result);  [CE]  cannot  find  symbol  result  [FE]                          ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {      [BUGGY]  connectToPossibleExceptionHandler(nextName(),  result);  [BUGGY]      pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	261	261	2	replace	connectToPossibleExceptionHandler(nextName(),  result);	  connectToPossibleExceptionHandler(nextName());    	non-compiled	[CE]  cannot  find  symbol  result	53	None	replace
1380	[BUG]  [BUGGY]  connectToPossibleExceptionHandler(nextName(),  JsonToken.END_ARRAY);  [CE]  cannot  find  symbol  [FE]                            ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {      [BUGGY]  connectToPossibleExceptionHandler(nextName(),  JsonToken.END_ARRAY);  [BUGGY]      pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	261	261	2	replace	connectToPossibleExceptionHandler(nextName(),  JsonToken.END_ARRAY);	  connectToPossibleExceptionHandler(nextName());    	non-compiled	[CE]  cannot  find  symbol	53	None	replace
1381	[BUG]  [BUGGY]  JsonToken.END_ARRAY  =  _throwUnsupportedOperation();  [CE]  cannot  assign  a  value  to  final  variable  END_ARRAY  [FE]              ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {      [BUGGY]  JsonToken.END_ARRAY  =  _throwUnsupportedOperation();  [BUGGY]      pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	261	261	2	replace	JsonToken.END_ARRAY  =  _throwUnsupportedOperation();	  _throwUnsupportedOperation();    	non-compiled	[CE]  cannot  assign  a  value  to  final  variable  END_ARRAY	63	None	replace
1382	[BUG]  [BUGGY]  _throwUnsupportedOperation(JsonToken.START_OBJECT);  [CE]  cannot  find  symbol  START_OBJECT  [FE]                ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {      [BUGGY]  _throwUnsupportedOperation(JsonToken.START_OBJECT);  [BUGGY]      pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	261	261	2	replace	_throwUnsupportedOperation(JsonToken.START_OBJECT);	  _throwUnsupportedOperation();    	non-compiled	[CE]  cannot  find  symbol  START_OBJECT	63	None	replace
1383	[BUG]  [BUGGY]  _throwUnsupportedOperation(JsonToken.VALUE_NULL);  [CE]  cannot  find  symbol  VALUE_NULL  [FE]                  ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {      [BUGGY]  _throwUnsupportedOperation(JsonToken.VALUE_NULL);  [BUGGY]      pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	261	261	2	replace	_throwUnsupportedOperation(JsonToken.VALUE_NULL);	  _throwUnsupportedOperation();    	non-compiled	[CE]  cannot  find  symbol  VALUE_NULL	63	None	replace
1384	[BUG]  [BUGGY]  _throwUnsupportedOperation(JsonToken.END_OBJECT);  [CE]  cannot  find  symbol  [FE]                    ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {      [BUGGY]  _throwUnsupportedOperation(JsonToken.END_OBJECT);  [BUGGY]      pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	261	261	2	replace	_throwUnsupportedOperation(JsonToken.END_OBJECT);	  _throwUnsupportedOperation();    	non-compiled	[CE]  cannot  find  symbol	63	None	replace
1385	[BUG]  [BUGGY]  _throwUnsupportedOperation(JsonToken.NAME);  [CE]  cannot  find  symbol  [FE]                      ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {      [BUGGY]  _throwUnsupportedOperation(JsonToken.NAME);  [BUGGY]      pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	261	261	2	replace	_throwUnsupportedOperation(JsonToken.NAME);	  _throwUnsupportedOperation();    	non-compiled	[CE]  cannot  find  symbol	63	None	replace
1386	[BUG]  [BUGGY]  connectToPossibleExceptionHandler(null,  null,  pathNames,  JsonToken.END_ARRAY);  [CE]  cannot  find  symbol  [FE]                            ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {      [BUGGY]  connectToPossibleExceptionHandler(null,  null,  pathNames,  JsonToken.END_ARRAY);  [BUGGY]      pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	261	261	2	replace	connectToPossibleExceptionHandler(null,  null,  pathNames,  JsonToken.END_ARRAY);	  connectToPossibleExceptionHandler(null,    null,    pathNames);    	non-compiled	[CE]  cannot  find  symbol	79	None	replace
1387	[BUG]  [BUGGY]  connectToPossibleExceptionHandler(null,  null,  pathNames,  0);  [CE]  cannot  find  symbol  [FE]                              ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {      [BUGGY]  connectToPossibleExceptionHandler(null,  null,  pathNames,  0);  [BUGGY]      pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	261	261	2	replace	connectToPossibleExceptionHandler(null,  null,  pathNames,  0);	  connectToPossibleExceptionHandler(null,    null,    pathNames);    	non-compiled	[CE]  cannot  find  symbol	79	None	replace
1388	[BUG]  [BUGGY]  [FE]  ArrayIndexOutOfBoundsException  [FE]    AssertionFailedError    [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {      [BUGGY]  if(stackSize  >  1  ||  stackSize  >  0)  {  popStack();  }  [BUGGY]      pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	261	261	2	add	if(stackSize  >  1  ||  stackSize  >  0)  {  popStack();  }	  if(stackSize    >    1)    {    popStack();    }    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	193	2	replace
1389	[BUG]  [BUGGY]  if(stackSize  >  1  ||  stackSize  >  0)  {  popStack();  }  [FE]  ArrayIndexOutOfBoundsException  [FE]    AssertionFailedError    [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {      [BUGGY]  if(stackSize  >  1  ||  stackSize  >  0)  {  popStack();  }  [BUGGY]      pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	261	261	2	replace	if(stackSize  >  1  ||  stackSize  >  0)  {  popStack();  }	  if(stackSize    >    1)    {    popStack();    }    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	193	2	replace
1390	[BUG]  [BUGGY]  [FE]  ArrayIndexOutOfBoundsException  [FE]      AssertionFailedError    [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {      [BUGGY]  if(stackSize  ==  1)  {  popStack();  }  [BUGGY]      pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	261	261	2	add	if(stackSize  ==  1)  {  popStack();  }	  if(stackSize    >    1)    {    popStack();    }    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	193	2	replace
1391	[BUG]  [BUGGY]  if(stackSize  ==  1)  {  popStack();  }  [FE]  ArrayIndexOutOfBoundsException  [FE]      AssertionFailedError    [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {      [BUGGY]  if(stackSize  ==  1)  {  popStack();  }  [BUGGY]      pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	261	261	2	replace	if(stackSize  ==  1)  {  popStack();  }	  if(stackSize    >    1)    {    popStack();    }    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	193	2	replace
1392	[BUG]  [BUGGY]  if(isEmpty())  {  if(stackSize  >  0)  {  popStack();  }  [CE]  ';'  expected  [FE]              ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {      [BUGGY]  if(isEmpty())  {  if(stackSize  >  0)  {  popStack();  }  [BUGGY]      pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	261	261	2	replace	if(isEmpty())  {  if(stackSize  >  0)  {  popStack();  }	  if(stackSize    >    0)    {    popStack();    }    if(stackSize    >    0)    {    popStack();    	non-compiled	[CE]  ';'  expected	210	None	replace
1393	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    IllegalStateException    [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {      [BUGGY]  if(stackSize  ==  0)  {  nextName();  }  [BUGGY]      pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	261	261	2	add	if(stackSize  ==  0)  {  nextName();  }	  if(stackSize    >    0)    {    nextName();    }    	compilable	  [FE]  AssertionFailedError  	191	2	replace
1394	[BUG]  [BUGGY]  if(stackSize  ==  0)  {  nextName();  }  [FE]  AssertionFailedError  [FE]    IllegalStateException    [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {      [BUGGY]  if(stackSize  ==  0)  {  nextName();  }  [BUGGY]      pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	261	261	2	replace	if(stackSize  ==  0)  {  nextName();  }	  if(stackSize    >    0)    {    nextName();    }    	compilable	  [FE]  AssertionFailedError  	191	2	replace
1395	[BUG]  [BUGGY]  [FE]  IllegalStateException  [FE]      IllegalStateException    [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {      [BUGGY]  if(stackSize  >=  0)  {  nextName();  }  [BUGGY]      pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	261	261	2	add	if(stackSize  >=  0)  {  nextName();  }	  if(stackSize    >    0)    {    nextName();    }    	compilable	  [FE]  IllegalStateException  	191	2	replace
1396	[BUG]  [BUGGY]  if(stackSize  >=  0)  {  nextName();  }  [FE]  IllegalStateException  [FE]      IllegalStateException    [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {      [BUGGY]  if(stackSize  >=  0)  {  nextName();  }  [BUGGY]      pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	261	261	2	replace	if(stackSize  >=  0)  {  nextName();  }	  if(stackSize    >    0)    {    nextName();    }    	compilable	  [FE]  IllegalStateException  	191	2	replace
1397	[BUG]  [BUGGY]  [FE]  IllegalStateException  [FE]        IllegalStateException    [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {      [BUGGY]  if(stackSize!=  0)  {  nextName();  }  [BUGGY]      pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	261	261	2	add	if(stackSize!=  0)  {  nextName();  }	  if(stackSize    >    0)    {    nextName();    }    	compilable	  [FE]  IllegalStateException  	191	2	replace
1398	[BUG]  [BUGGY]  if(stackSize!=  0)  {  nextName();  }  [FE]  IllegalStateException  [FE]        IllegalStateException    [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {      [BUGGY]  if(stackSize!=  0)  {  nextName();  }  [BUGGY]      pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	261	261	2	replace	if(stackSize!=  0)  {  nextName();  }	  if(stackSize    >    0)    {    nextName();    }    	compilable	  [FE]  IllegalStateException  	191	2	replace
1399	[BUG]  [BUGGY]  if(stackSize  <  =  0)  {  nextName();  }  [CE]  illegal  start  of  expression  [FE]          IllegalStateException    [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {      [BUGGY]  if(stackSize  <  =  0)  {  nextName();  }  [BUGGY]      pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	261	261	2	replace	if(stackSize  <  =  0)  {  nextName();  }	  if(stackSize    >    0)    {    nextName();    }    	non-compiled	[CE]  illegal  start  of  expression	191	None	replace
1400	[BUG]  [BUGGY]  if(stackSize  >  0)  {  nextName();  }  If(stackSize  >  0)  {  nextName();  }  [CE]  ';'  expected  [FE]    IllegalStateException    [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {      [BUGGY]  if(stackSize  >  0)  {  nextName();  }  If(stackSize  >  0)  {  nextName();  }  [BUGGY]      pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	261	261	2	replace	if(stackSize    >    0)    {    nextName();    }    If(stackSize  >  0)  {  nextName();  }	  	non-compiled	[CE]  ';'  expected	190	None	add
1401	[BUG]  [BUGGY]  if(stackSize  >  0)  {  nextName();  }  if(stackSize  >  0)  {  firstName();  }  [CE]  cannot  find  symbol  [FE]      IllegalStateException    [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {      [BUGGY]  if(stackSize  >  0)  {  nextName();  }  if(stackSize  >  0)  {  firstName();  }  [BUGGY]      pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	261	261	2	replace	if(stackSize    >    0)    {    nextName();    }    if(stackSize  >  0)  {  firstName();  }	  	non-compiled	[CE]  cannot  find  symbol	190	None	add
1402	[BUG]  [BUGGY]  if(stackSize  >  0)  {  nextName();  }  if(stackSize  >  0)  {  stackName();  }  [CE]  cannot  find  symbol  [FE]        IllegalStateException    [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {      [BUGGY]  if(stackSize  >  0)  {  nextName();  }  if(stackSize  >  0)  {  stackName();  }  [BUGGY]      pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	261	261	2	replace	if(stackSize    >    0)    {    nextName();    }    if(stackSize  >  0)  {  stackName();  }	  	non-compiled	[CE]  cannot  find  symbol	190	None	add
1403	[BUG]  [BUGGY]  if(stackSize  >  0)  {  nextName();  }  if(stackSize  >  0)  {  nextName();  [CE]  ';'  expected  [FE]          IllegalStateException    [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {      [BUGGY]  if(stackSize  >  0)  {  nextName();  }  if(stackSize  >  0)  {  nextName();  [BUGGY]      pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	261	261	2	replace	if(stackSize    >    0)    {    nextName();    }    if(stackSize  >  0)  {  nextName();	  	non-compiled	[CE]  ';'  expected	190	None	add
1404	[BUG]  [BUGGY]  pathNames[stackSize  -  1]  =  null;  PathIndices[stackSize  -  1]  =  null;  [CE]  cannot  find  symbol  PathIndices  [FE]    AssertionFailedError    [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {      [BUGGY]  pathNames[stackSize  -  1]  =  null;  PathIndices[stackSize  -  1]  =  null;  [BUGGY]      pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	261	261	2	replace	pathNames[stackSize    -    1]    =    null;    PathIndices[stackSize  -  1]  =  null;	  	non-compiled	[CE]  cannot  find  symbol  PathIndices	20	None	add
1405	[BUG]  [BUGGY]  pathIndices[stackSize  -  1]  =  null;  pathIndices[stackSize  -  1]  =   "null ";  [CE]  incompatible  types  [FE]    IllegalArgumentException    [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {      [BUGGY]  pathIndices[stackSize  -  1]  =  null;  pathIndices[stackSize  -  1]  =   "null ";  [BUGGY]      pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	261	261	2	replace	pathIndices[stackSize  -  1]  =  null;  pathIndices[stackSize  -  1]  =   "null ";	  if(stackSize    >    0)    {    popStack();    }    else    {    throw    new    IllegalArgumentException(       "       ");    }    if(stackSize    >    0)    {    popStack();    }    else    {    throw    new    IllegalArgumentException(   "       ");    }    	non-compiled	[CE]  incompatible  types	11	None	replace
1406	[BUG]  [BUGGY]  pathIndices[stackSize  -  1]  =  new  String(pathNames[0]);  [CE]  incompatible  types  [FE]      IllegalArgumentException    [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {      [BUGGY]  pathIndices[stackSize  -  1]  =  new  String(pathNames[0]);  [BUGGY]      pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	261	261	2	replace	pathIndices[stackSize  -  1]  =  new  String(pathNames[0]);	  if(stackSize    >    0)    {    popStack();    }    else    {    throw    new    IllegalArgumentException(       "       ");    }    if(stackSize    >    0)    {    popStack();    }    else    {    throw    new    IllegalArgumentException(   "       ");    }    	non-compiled	[CE]  incompatible  types	11	None	replace
1407	[BUG]  [BUGGY]  [FE]  ArrayIndexOutOfBoundsException  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {      [BUGGY]  if(stackSize    >    0)    {    popStack();    }    if(stackSize  >  0)  {  popStack();  System.arraycopy(pathNames,  0,  pathNames,  0,  stackSize);  }  if(stackSize  <  0)  {  popStack();  }  if(stackSize  >  0)  {  popStack();  System.arraycopy(pathNames,  0,  pathNames,  0,  stackSize);  }  [BUGGY]      pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	261	261	2	add	if(stackSize        >        0)        {        popStack();        }        if(stackSize    >    0)    {    popStack();    System.arraycopy(pathNames,    0,    pathNames,    0,    stackSize);    }    if(stackSize  <  0)  {  popStack();  }  if(stackSize  >  0)  {  popStack();  System.arraycopy(pathNames,  0,  pathNames,  0,  stackSize);  }	  	compilable	  [FE]  ArrayIndexOutOfBoundsException  	88	2	add
1408	[BUG]  [BUGGY]  if(stackSize    >    0)    {    popStack();    }    if(stackSize  >  0)  {  popStack();  System.arraycopy(pathNames,  0,  pathNames,  0,  stackSize);  }  if(stackSize  <  0)  {  popStack();  }  if(stackSize  >  0)  {  popStack();  System.arraycopy(pathNames,  0,  pathNames,  0,  stackSize);  }  [FE]  ArrayIndexOutOfBoundsException  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {      [BUGGY]  if(stackSize    >    0)    {    popStack();    }    if(stackSize  >  0)  {  popStack();  System.arraycopy(pathNames,  0,  pathNames,  0,  stackSize);  }  if(stackSize  <  0)  {  popStack();  }  if(stackSize  >  0)  {  popStack();  System.arraycopy(pathNames,  0,  pathNames,  0,  stackSize);  }  [BUGGY]      pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	261	261	2	replace	if(stackSize        >        0)        {        popStack();        }        if(stackSize    >    0)    {    popStack();    System.arraycopy(pathNames,    0,    pathNames,    0,    stackSize);    }    if(stackSize  <  0)  {  popStack();  }  if(stackSize  >  0)  {  popStack();  System.arraycopy(pathNames,  0,  pathNames,  0,  stackSize);  }	  	compilable	  [FE]  ArrayIndexOutOfBoundsException  	88	2	add
1409	[BUG]  [BUGGY]  [FE]  ArrayIndexOutOfBoundsException  [FE]      ArrayIndexOutOfBoundsException    [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {      [BUGGY]  if(stackSize    >    0)    {    popStack();    }    if(stackSize  >  0)  {  popStack();  System.arraycopy(pathNames,  0,  pathNames,  0,  stackSize);  }  if(stackSize  >  0)  {  popStack();  }  [BUGGY]      pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	261	261	2	add	if(stackSize        >        0)        {        popStack();        }        if(stackSize    >    0)    {    popStack();    System.arraycopy(pathNames,    0,    pathNames,    0,    stackSize);    }    if(stackSize  >  0)  {  popStack();  }	  	compilable	  [FE]  ArrayIndexOutOfBoundsException  	88	2	add
1410	[BUG]  [BUGGY]  if(stackSize    >    0)    {    popStack();    }    if(stackSize  >  0)  {  popStack();  System.arraycopy(pathNames,  0,  pathNames,  0,  stackSize);  }  if(stackSize  >  0)  {  popStack();  }  [FE]  ArrayIndexOutOfBoundsException  [FE]      ArrayIndexOutOfBoundsException    [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {      [BUGGY]  if(stackSize    >    0)    {    popStack();    }    if(stackSize  >  0)  {  popStack();  System.arraycopy(pathNames,  0,  pathNames,  0,  stackSize);  }  if(stackSize  >  0)  {  popStack();  }  [BUGGY]      pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	261	261	2	replace	if(stackSize        >        0)        {        popStack();        }        if(stackSize    >    0)    {    popStack();    System.arraycopy(pathNames,    0,    pathNames,    0,    stackSize);    }    if(stackSize  >  0)  {  popStack();  }	  	compilable	  [FE]  ArrayIndexOutOfBoundsException  	88	2	add
1411	[BUG]  [BUGGY]  if(stackSize    >    0)    {    popStack();    }    if(stackSize  >  0)  {  popStack();  System.arraycopy(pathNames,  0,  pathNames,  0,  stackSize);  }  if(stackSize  >  0)  {  popStack();  }  if(stackSize  >  0)  {  popStack();  System.arraycopy(pathNames,  0,  pathNames,  0,  stackSize);  [CE]  ';'  expected  [FE]        ArrayIndexOutOfBoundsException    [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {      [BUGGY]  if(stackSize    >    0)    {    popStack();    }    if(stackSize  >  0)  {  popStack();  System.arraycopy(pathNames,  0,  pathNames,  0,  stackSize);  }  if(stackSize  >  0)  {  popStack();  }  if(stackSize  >  0)  {  popStack();  System.arraycopy(pathNames,  0,  pathNames,  0,  stackSize);  [BUGGY]      pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	261	261	2	replace	if(stackSize        >        0)        {        popStack();        }        if(stackSize    >    0)    {    popStack();    System.arraycopy(pathNames,    0,    pathNames,    0,    stackSize);    }    if(stackSize  >  0)  {  popStack();  }  if(stackSize  >  0)  {  popStack();  System.arraycopy(pathNames,  0,  pathNames,  0,  stackSize);	  	non-compiled	[CE]  ';'  expected	88	None	add
1412	[BUG]  [BUGGY]  [FE]  ArrayIndexOutOfBoundsException  [FE]          ArrayIndexOutOfBoundsException    [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {      [BUGGY]  if(stackSize    >    0)    {    popStack();    }    if(stackSize  >  0)  {  popStack();  System.arraycopy(pathNames,  0,  pathNames,  0,  stackSize);  }  if(stackSize  >  0)  {  popStack();  }  if(stackSize  >  0)  {  popStack();  System.arraycopy(pathNames,  1,  pathNames,  0,  stackSize);  }  [BUGGY]      pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	261	261	2	add	if(stackSize        >        0)        {        popStack();        }        if(stackSize    >    0)    {    popStack();    System.arraycopy(pathNames,    0,    pathNames,    0,    stackSize);    }    if(stackSize  >  0)  {  popStack();  }  if(stackSize  >  0)  {  popStack();  System.arraycopy(pathNames,  1,  pathNames,  0,  stackSize);  }	  	compilable	  [FE]  ArrayIndexOutOfBoundsException  	88	2	add
1413	[BUG]  [BUGGY]  if(stackSize    >    0)    {    popStack();    }    if(stackSize  >  0)  {  popStack();  System.arraycopy(pathNames,  0,  pathNames,  0,  stackSize);  }  if(stackSize  >  0)  {  popStack();  }  if(stackSize  >  0)  {  popStack();  System.arraycopy(pathNames,  1,  pathNames,  0,  stackSize);  }  [FE]  ArrayIndexOutOfBoundsException  [FE]          ArrayIndexOutOfBoundsException    [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {      [BUGGY]  if(stackSize    >    0)    {    popStack();    }    if(stackSize  >  0)  {  popStack();  System.arraycopy(pathNames,  0,  pathNames,  0,  stackSize);  }  if(stackSize  >  0)  {  popStack();  }  if(stackSize  >  0)  {  popStack();  System.arraycopy(pathNames,  1,  pathNames,  0,  stackSize);  }  [BUGGY]      pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	261	261	2	replace	if(stackSize        >        0)        {        popStack();        }        if(stackSize    >    0)    {    popStack();    System.arraycopy(pathNames,    0,    pathNames,    0,    stackSize);    }    if(stackSize  >  0)  {  popStack();  }  if(stackSize  >  0)  {  popStack();  System.arraycopy(pathNames,  1,  pathNames,  0,  stackSize);  }	  	compilable	  [FE]  ArrayIndexOutOfBoundsException  	88	2	add
1414	[BUG]  [BUGGY]  JsonToken.VALUE_NULL  =  new  JsonToken(JsonToken.END_OBJECT);  pathNames[stackSize  -  1]  =  null;  [CE]  cannot  find  symbol  VALUE_NULL  [FE]                ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {      [BUGGY]  JsonToken.VALUE_NULL  =  new  JsonToken(JsonToken.END_OBJECT);  pathNames[stackSize  -  1]  =  null;  [BUGGY]      pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	261	261	2	replace	JsonToken.VALUE_NULL  =  new  JsonToken(JsonToken.END_OBJECT);  pathNames[stackSize  -  1]  =  null;	  JsonToken.VALUE_NULL    =    new    JsonToken(JsonToken.FIELD_NAME);    pathNames[stackSize    -    1]    =    null;    	non-compiled	[CE]  cannot  find  symbol  VALUE_NULL	188	None	replace
1415	[BUG]  [BUGGY]  JsonToken.VALUE_NULL  =  new  JsonToken(JsonToken.NAME);  pathNames[stackSize  -  1]  =  null;  [CE]  cannot  find  symbol  VALUE_NULL  [FE]                  ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {      [BUGGY]  JsonToken.VALUE_NULL  =  new  JsonToken(JsonToken.NAME);  pathNames[stackSize  -  1]  =  null;  [BUGGY]      pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	261	261	2	replace	JsonToken.VALUE_NULL  =  new  JsonToken(JsonToken.NAME);  pathNames[stackSize  -  1]  =  null;	  JsonToken.VALUE_NULL    =    new    JsonToken(JsonToken.FIELD_NAME);    pathNames[stackSize    -    1]    =    null;    	non-compiled	[CE]  cannot  find  symbol  VALUE_NULL	188	None	replace
1416	[BUG]  [BUGGY]  _reportError( "Current  token( "+getClass()  + ")not  null, ");  [CE]  cannot  find  symbol  [FE]                    ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {      [BUGGY]  _reportError( "Current  token( "+getClass()  + ")not  null, ");  [BUGGY]      pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	261	261	2	replace	_reportError( "Current  token( "+getClass()  + ")not  null, ");	  _reportError(   "Current    token(   "+getClass().getName()    +   ")not    null,   ");    	non-compiled	[CE]  cannot  find  symbol	116	None	replace
1417	[BUG]  [BUGGY]  _reportError( "Current  token( "+getClass().getName()  + ")not  null,');  [CE]  unclosed  string  literal  [FE]                      ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {      [BUGGY]  _reportError( "Current  token( "+getClass().getName()  + ")not  null,');  [BUGGY]      pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	261	261	2	replace	_reportError( "Current  token( "+getClass().getName()  + ")not  null,');	  _reportError(   "Current    token(   "+getClass().getName()    +   ")not    null,   ");    	non-compiled	[CE]  unclosed  string  literal	116	None	replace
1418	[BUG]  [BUGGY]  JsonToken._reportError( "Current  token( "+getMessage()  +   ")was  expecting  a  value ");  [CE]  cannot  find  symbol  [FE]                  ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {      [BUGGY]  JsonToken._reportError( "Current  token( "+getMessage()  +   ")was  expecting  a  value ");  [BUGGY]      pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	261	261	2	replace	JsonToken._reportError( "Current  token( "+getMessage()  +   ")was  expecting  a  value ");	  _reportError(   "Current    token(   "+getMessage()    +   ")was    expecting    a    value   ");    	non-compiled	[CE]  cannot  find  symbol	144	None	replace
1419	[BUG]  [BUGGY]  _reportError( "Current  token( "+getMessage()  + ")was  expecting  a  value ",  JsonToken.NAME);  [CE]  cannot  find  symbol  [FE]                    ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {      [BUGGY]  _reportError( "Current  token( "+getMessage()  + ")was  expecting  a  value ",  JsonToken.NAME);  [BUGGY]      pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	261	261	2	replace	_reportError( "Current  token( "+getMessage()  + ")was  expecting  a  value ",  JsonToken.NAME);	  _reportError(   "Current    token(   "+getMessage()    +   ")was    expecting    a    value   ");    	non-compiled	[CE]  cannot  find  symbol	144	None	replace
1420	[BUG]  [BUGGY]  [FE]  ArrayIndexOutOfBoundsException  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {      [BUGGY]  if(stackSize!=  0)  {  popStack();  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	261	261	2	add	if(stackSize!=  0)  {  popStack();  }  else  {  throw  new  IllegalArgumentException( " ");  }	  if(stackSize    >=    0)    {    popStack();    }    else    {    throw    new    IllegalArgumentException(   "   ");    }    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	180	2	replace
1421	[BUG]  [BUGGY]  if(stackSize!=  0)  {  popStack();  }  else  {  throw  new  IllegalArgumentException( " ");  }  [FE]  ArrayIndexOutOfBoundsException  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {      [BUGGY]  if(stackSize!=  0)  {  popStack();  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	261	261	2	replace	if(stackSize!=  0)  {  popStack();  }  else  {  throw  new  IllegalArgumentException( " ");  }	  if(stackSize    >=    0)    {    popStack();    }    else    {    throw    new    IllegalArgumentException(   "   ");    }    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	180	2	replace
1422	[BUG]  [BUGGY]  connectToPossibleExceptionHandler(pathNames,  JsonToken.START_OBJECT);  [CE]  cannot  find  symbol  START_OBJECT  [FE]                  ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {      [BUGGY]  connectToPossibleExceptionHandler(pathNames,  JsonToken.START_OBJECT);  [BUGGY]      pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	261	261	2	replace	connectToPossibleExceptionHandler(pathNames,  JsonToken.START_OBJECT);	  connectToPossibleExceptionHandler(pathNames);    	non-compiled	[CE]  cannot  find  symbol  START_OBJECT	7	None	replace
1423	[BUG]  [BUGGY]  connectToPossibleExceptionHandler(this,  pathNames);  [CE]  cannot  find  symbol  [FE]                    ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {      [BUGGY]  connectToPossibleExceptionHandler(this,  pathNames);  [BUGGY]      pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	261	261	2	replace	connectToPossibleExceptionHandler(this,  pathNames);	  connectToPossibleExceptionHandler(pathNames);    	non-compiled	[CE]  cannot  find  symbol	7	None	replace
1424	[BUG]  [BUGGY]  [FE]  ArrayIndexOutOfBoundsException  [FE]                            ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {      [BUGGY]  if(stackSize  >  0)  {  popStack();  }  else  {  JsonToken  END_OBJECT  =  null;  nextName();  pathNames[stackSize  -  1]  =  null;  }  [BUGGY]      pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	261	261	2	add	if(stackSize  >  0)  {  popStack();  }  else  {  JsonToken  END_OBJECT  =  null;  nextName();  pathNames[stackSize  -  1]  =  null;  }	  if(stackSize    >    0)    {    popStack();    }    else    {    JsonToken.END_OBJECT    =    null;    nextName();    pathNames[stackSize    -    1]    =    null;    }    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	141	2	replace
1425	[BUG]  [BUGGY]  if(stackSize  >  0)  {  popStack();  }  else  {  JsonToken  END_OBJECT  =  null;  nextName();  pathNames[stackSize  -  1]  =  null;  }  [FE]  ArrayIndexOutOfBoundsException  [FE]                            ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {      [BUGGY]  if(stackSize  >  0)  {  popStack();  }  else  {  JsonToken  END_OBJECT  =  null;  nextName();  pathNames[stackSize  -  1]  =  null;  }  [BUGGY]      pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	261	261	2	replace	if(stackSize  >  0)  {  popStack();  }  else  {  JsonToken  END_OBJECT  =  null;  nextName();  pathNames[stackSize  -  1]  =  null;  }	  if(stackSize    >    0)    {    popStack();    }    else    {    JsonToken.END_OBJECT    =    null;    nextName();    pathNames[stackSize    -    1]    =    null;    }    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	141	2	replace
1426	[BUG]  [BUGGY]  [FE]  ArrayIndexOutOfBoundsException  [FE]                              ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {      [BUGGY]  if(stackSize  >  0)  {  popStack();  }  else  {  JsonToken  end_OBJECT  =  null;  nextName();  pathNames[stackSize  -  1]  =  null;  }  [BUGGY]      pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	261	261	2	add	if(stackSize  >  0)  {  popStack();  }  else  {  JsonToken  end_OBJECT  =  null;  nextName();  pathNames[stackSize  -  1]  =  null;  }	  if(stackSize    >    0)    {    popStack();    }    else    {    JsonToken.END_OBJECT    =    null;    nextName();    pathNames[stackSize    -    1]    =    null;    }    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	141	2	replace
1427	[BUG]  [BUGGY]  if(stackSize  >  0)  {  popStack();  }  else  {  JsonToken  end_OBJECT  =  null;  nextName();  pathNames[stackSize  -  1]  =  null;  }  [FE]  ArrayIndexOutOfBoundsException  [FE]                              ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {      [BUGGY]  if(stackSize  >  0)  {  popStack();  }  else  {  JsonToken  end_OBJECT  =  null;  nextName();  pathNames[stackSize  -  1]  =  null;  }  [BUGGY]      pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	261	261	2	replace	if(stackSize  >  0)  {  popStack();  }  else  {  JsonToken  end_OBJECT  =  null;  nextName();  pathNames[stackSize  -  1]  =  null;  }	  if(stackSize    >    0)    {    popStack();    }    else    {    JsonToken.END_OBJECT    =    null;    nextName();    pathNames[stackSize    -    1]    =    null;    }    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	141	2	replace
1428	[BUG]  [BUGGY]  [FE]  ArrayIndexOutOfBoundsException  [FE]                                ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {      [BUGGY]  if(stackSize  >  0)  {  popStack();  }  else  {  JsonToken  endObject  =  null;  nextName();  pathNames[stackSize  -  1]  =  null;  }  [BUGGY]      pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	261	261	2	add	if(stackSize  >  0)  {  popStack();  }  else  {  JsonToken  endObject  =  null;  nextName();  pathNames[stackSize  -  1]  =  null;  }	  if(stackSize    >    0)    {    popStack();    }    else    {    JsonToken.END_OBJECT    =    null;    nextName();    pathNames[stackSize    -    1]    =    null;    }    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	141	2	replace
1429	[BUG]  [BUGGY]  if(stackSize  >  0)  {  popStack();  }  else  {  JsonToken  endObject  =  null;  nextName();  pathNames[stackSize  -  1]  =  null;  }  [FE]  ArrayIndexOutOfBoundsException  [FE]                                ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {      [BUGGY]  if(stackSize  >  0)  {  popStack();  }  else  {  JsonToken  endObject  =  null;  nextName();  pathNames[stackSize  -  1]  =  null;  }  [BUGGY]      pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	261	261	2	replace	if(stackSize  >  0)  {  popStack();  }  else  {  JsonToken  endObject  =  null;  nextName();  pathNames[stackSize  -  1]  =  null;  }	  if(stackSize    >    0)    {    popStack();    }    else    {    JsonToken.END_OBJECT    =    null;    nextName();    pathNames[stackSize    -    1]    =    null;    }    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	141	2	replace
1430	[BUG]  [BUGGY]  if(stackSize  <  =  1)  {  popStack();  }  else  {  skipStack();  }  [CE]  illegal  start  of  expression  [FE]                      ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {      [BUGGY]  if(stackSize  <  =  1)  {  popStack();  }  else  {  skipStack();  }  [BUGGY]      pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	261	261	2	replace	if(stackSize  <  =  1)  {  popStack();  }  else  {  skipStack();  }	  if(stackSize    <    =    0)    {    popStack();    }    else    {    skipStack();    }    	non-compiled	[CE]  illegal  start  of  expression	111	None	replace
1431	[BUG]  [BUGGY]  Path[]  pathNames  =  pathNames.toArray(new  Path[pathSize  -  1]);  [CE]  cannot  find  symbol  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {      [BUGGY]  Path[]  pathNames  =  pathNames.toArray(new  Path[pathSize  -  1]);  [BUGGY]      pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	261	261	2	replace	Path[]  pathNames  =  pathNames.toArray(new  Path[pathSize  -  1]);	          if(stackSize    >    0)    {    pathNames[stackSize    -    1]    =    null;    }    	non-compiled	[CE]  cannot  find  symbol	174	None	replace
1432	[BUG]  [BUGGY]  [FE]  IllegalArgumentException  [FE]    IllegalArgumentException    [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {      [BUGGY]  if(stackSize  ==  0)  {  popStack();  }  else  {  throw  new  IllegalArgumentException(   "   ");  }  if(stackSize  ==  1)  {  popStack();  }  else  {  throw  new  IllegalArgumentException( "   ");  }  [BUGGY]      pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	261	261	2	add	if(stackSize    ==    0)    {    popStack();    }    else    {    throw    new    IllegalArgumentException(   "   ");    }    if(stackSize  ==  1)  {  popStack();  }  else  {  throw  new  IllegalArgumentException( "   ");  }	  	compilable	  [FE]  IllegalArgumentException  	177	2	add
1433	[BUG]  [BUGGY]  if(stackSize  ==  0)  {  popStack();  }  else  {  throw  new  IllegalArgumentException(   "   ");  }  if(stackSize  ==  1)  {  popStack();  }  else  {  throw  new  IllegalArgumentException( "   ");  }  [FE]  IllegalArgumentException  [FE]    IllegalArgumentException    [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {      [BUGGY]  if(stackSize  ==  0)  {  popStack();  }  else  {  throw  new  IllegalArgumentException(   "   ");  }  if(stackSize  ==  1)  {  popStack();  }  else  {  throw  new  IllegalArgumentException( "   ");  }  [BUGGY]      pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	261	261	2	replace	if(stackSize    ==    0)    {    popStack();    }    else    {    throw    new    IllegalArgumentException(   "   ");    }    if(stackSize  ==  1)  {  popStack();  }  else  {  throw  new  IllegalArgumentException( "   ");  }	  	compilable	  [FE]  IllegalArgumentException  	177	2	add
1434	[BUG]  [BUGGY]  connectToPossibleExceptionHandler(null,  JsonToken.NAME);  [CE]  cannot  find  symbol  [FE]                        ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {      [BUGGY]  connectToPossibleExceptionHandler(null,  JsonToken.NAME);  [BUGGY]      pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	261	261	2	replace	connectToPossibleExceptionHandler(null,  JsonToken.NAME);	  connectToPossibleExceptionHandler(null,    pathNames);    	non-compiled	[CE]  cannot  find  symbol	145	None	replace
1435	[BUG]  [BUGGY]  connectToPeek(JsonToken.START_OBJECT,  JsonToken.VALUE_NUMBER_FOR);  [CE]  cannot  find  symbol  START_OBJECT  [FE]                          ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {      [BUGGY]  connectToPeek(JsonToken.START_OBJECT,  JsonToken.VALUE_NUMBER_FOR);  [BUGGY]      pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	261	261	2	replace	connectToPeek(JsonToken.START_OBJECT,  JsonToken.VALUE_NUMBER_FOR);	  connectToPeek(JsonToken.VALUE_NUMBER_INT,    JsonToken.VALUE_NUMBER_FOR);    	non-compiled	[CE]  cannot  find  symbol  START_OBJECT	217	None	replace
1436	[BUG]  [BUGGY]  JsonToken  t  =  _createJsonToken(JsonToken.START_OBJECT,  JsonToken.END_ARRAY);  [CE]  cannot  find  symbol  START_OBJECT  [FE]                ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {      [BUGGY]  JsonToken  t  =  _createJsonToken(JsonToken.START_OBJECT,  JsonToken.END_ARRAY);  [BUGGY]      pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	261	261	2	replace	JsonToken  t  =  _createJsonToken(JsonToken.START_OBJECT,  JsonToken.END_ARRAY);	  JsonToken    t    =    _createJsonToken(JsonToken.START_OBJECT);    	non-compiled	[CE]  cannot  find  symbol  START_OBJECT	123	None	replace
1437	[BUG]  [BUGGY]  JsonToken  t  =  _createJsonToken(JsonToken.START_OBJECT,  name);  [CE]  cannot  find  symbol  START_OBJECT  [FE]                  ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {      [BUGGY]  JsonToken  t  =  _createJsonToken(JsonToken.START_OBJECT,  name);  [BUGGY]      pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	261	261	2	replace	JsonToken  t  =  _createJsonToken(JsonToken.START_OBJECT,  name);	  JsonToken    t    =    _createJsonToken(JsonToken.START_OBJECT);    	non-compiled	[CE]  cannot  find  symbol  START_OBJECT	123	None	replace
1438	[BUG]  [BUGGY]  StackTree  <  NUMBER_INDEX  ||  stackSize  >=  0)  {  popStack();  }  [CE]  >  expected  [FE]                ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {      [BUGGY]  StackTree  <  NUMBER_INDEX  ||  stackSize  >=  0)  {  popStack();  }  [BUGGY]      pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	261	261	2	replace	StackTree  <  NUMBER_INDEX  ||  stackSize  >=  0)  {  popStack();  }	  StackTree    <    NUMBER_INDEX    ||    stackSize    >    0)    {    popStack();    }    else    {    skipStack();    }    	non-compiled	[CE]  >  expected	72	None	replace
1439	[BUG]  [BUGGY]  if(stackSize  <  2)  {  popStack();  }  else  {  skipStack();  }  [CE]  cannot  find  symbol  [FE]                    ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {      [BUGGY]  if(stackSize  <  2)  {  popStack();  }  else  {  skipStack();  }  [BUGGY]      pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	261	261	2	replace	if(stackSize  <  2)  {  popStack();  }  else  {  skipStack();  }	  if(stackSize    <    0)    {    popStack();    }    else    {    skipStack();    }    	non-compiled	[CE]  cannot  find  symbol	110	None	replace
1440	[BUG]  [BUGGY]  [FE]  IllegalArgumentException  [FE]    IllegalArgumentException    [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {      [BUGGY]  if(stackSize    >    0)    {    popStack();    }    if(stackSize  >  0)  {  popStack();  }  else  {  throw  new  IllegalArgumentException(   "   ");  }  if(stackSize  >  0)  {  popStack();  }  if(stackSize  >  0)  {  popStack();  }  if(stackSize  >  0)  {  throw  new  IllegalArgumentException( "   ");  }  [BUGGY]      pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	261	261	2	add	if(stackSize        >        0)        {        popStack();        }        if(stackSize    >    0)    {    popStack();    }    else    {    throw    new    IllegalArgumentException(   "   ");    }    if(stackSize  >  0)  {  popStack();  }  if(stackSize  >  0)  {  popStack();  }  if(stackSize  >  0)  {  throw  new  IllegalArgumentException( "   ");  }	  	compilable	  [FE]  IllegalArgumentException  	94	2	add
1441	[BUG]  [BUGGY]  if(stackSize    >    0)    {    popStack();    }    if(stackSize  >  0)  {  popStack();  }  else  {  throw  new  IllegalArgumentException(   "   ");  }  if(stackSize  >  0)  {  popStack();  }  if(stackSize  >  0)  {  popStack();  }  if(stackSize  >  0)  {  throw  new  IllegalArgumentException( "   ");  }  [FE]  IllegalArgumentException  [FE]    IllegalArgumentException    [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {      [BUGGY]  if(stackSize    >    0)    {    popStack();    }    if(stackSize  >  0)  {  popStack();  }  else  {  throw  new  IllegalArgumentException(   "   ");  }  if(stackSize  >  0)  {  popStack();  }  if(stackSize  >  0)  {  popStack();  }  if(stackSize  >  0)  {  throw  new  IllegalArgumentException( "   ");  }  [BUGGY]      pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	261	261	2	replace	if(stackSize        >        0)        {        popStack();        }        if(stackSize    >    0)    {    popStack();    }    else    {    throw    new    IllegalArgumentException(   "   ");    }    if(stackSize  >  0)  {  popStack();  }  if(stackSize  >  0)  {  popStack();  }  if(stackSize  >  0)  {  throw  new  IllegalArgumentException( "   ");  }	  	compilable	  [FE]  IllegalArgumentException  	94	2	add
1442	[BUG]  [BUGGY]  if(stackSize  <  =  1  ||  stackSize  >  0)  {  popStack();  }  else  {  skipStack();  }  [CE]  illegal  start  of  expression  [FE]                      ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {      [BUGGY]  if(stackSize  <  =  1  ||  stackSize  >  0)  {  popStack();  }  else  {  skipStack();  }  [BUGGY]      pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	261	261	2	replace	if(stackSize  <  =  1  ||  stackSize  >  0)  {  popStack();  }  else  {  skipStack();  }	  if(stackSize    <    =    0)    {    popStack();    }    else    {    skipStack();    }    	non-compiled	[CE]  illegal  start  of  expression	111	None	replace
1443	[BUG]  [BUGGY]  [FE]  ArrayIndexOutOfBoundsException  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {      [BUGGY]  if(stackSize    >    0)    {    popStack();    }    if(stackSize  >  0)  {  popStack();  System.arraycopy(pathNames,  0,  pathNames,  0,  stackSize);  }  if(stackSize  >  0)  {  popStack();  }  if(stackSize  <  0)  {  popStack();  System.arraycopy(pathNames,  0,  pathNames,  0,  stackSize);  }  [BUGGY]      pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	261	261	2	add	if(stackSize        >        0)        {        popStack();        }        if(stackSize    >    0)    {    popStack();    System.arraycopy(pathNames,    0,    pathNames,    0,    stackSize);    }    if(stackSize  >  0)  {  popStack();  }  if(stackSize  <  0)  {  popStack();  System.arraycopy(pathNames,  0,  pathNames,  0,  stackSize);  }	  	compilable	  [FE]  ArrayIndexOutOfBoundsException  	88	2	add
1444	[BUG]  [BUGGY]  if(stackSize    >    0)    {    popStack();    }    if(stackSize  >  0)  {  popStack();  System.arraycopy(pathNames,  0,  pathNames,  0,  stackSize);  }  if(stackSize  >  0)  {  popStack();  }  if(stackSize  <  0)  {  popStack();  System.arraycopy(pathNames,  0,  pathNames,  0,  stackSize);  }  [FE]  ArrayIndexOutOfBoundsException  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {      [BUGGY]  if(stackSize    >    0)    {    popStack();    }    if(stackSize  >  0)  {  popStack();  System.arraycopy(pathNames,  0,  pathNames,  0,  stackSize);  }  if(stackSize  >  0)  {  popStack();  }  if(stackSize  <  0)  {  popStack();  System.arraycopy(pathNames,  0,  pathNames,  0,  stackSize);  }  [BUGGY]      pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	261	261	2	replace	if(stackSize        >        0)        {        popStack();        }        if(stackSize    >    0)    {    popStack();    System.arraycopy(pathNames,    0,    pathNames,    0,    stackSize);    }    if(stackSize  >  0)  {  popStack();  }  if(stackSize  <  0)  {  popStack();  System.arraycopy(pathNames,  0,  pathNames,  0,  stackSize);  }	  	compilable	  [FE]  ArrayIndexOutOfBoundsException  	88	2	add
1445	[BUG]  [BUGGY]  [FE]  ArrayIndexOutOfBoundsException  [FE]      ArrayIndexOutOfBoundsException    [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {      [BUGGY]  if(stackSize    >    0)    {    popStack();    }    if(stackSize  >  0)  {  popStack();  System.arraycopy(pathNames,  0,  pathNames,  0,  stackSize);  }  if(stackSize  >=  0)  {  popStack();  }  if(stackSize  >  0)  {  popStack();  System.arraycopy(pathNames,  0,  pathNames,  0,  stackSize);  }  [BUGGY]      pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	261	261	2	add	if(stackSize        >        0)        {        popStack();        }        if(stackSize    >    0)    {    popStack();    System.arraycopy(pathNames,    0,    pathNames,    0,    stackSize);    }    if(stackSize  >=  0)  {  popStack();  }  if(stackSize  >  0)  {  popStack();  System.arraycopy(pathNames,  0,  pathNames,  0,  stackSize);  }	  	compilable	  [FE]  ArrayIndexOutOfBoundsException  	88	2	add
1446	[BUG]  [BUGGY]  if(stackSize    >    0)    {    popStack();    }    if(stackSize  >  0)  {  popStack();  System.arraycopy(pathNames,  0,  pathNames,  0,  stackSize);  }  if(stackSize  >=  0)  {  popStack();  }  if(stackSize  >  0)  {  popStack();  System.arraycopy(pathNames,  0,  pathNames,  0,  stackSize);  }  [FE]  ArrayIndexOutOfBoundsException  [FE]      ArrayIndexOutOfBoundsException    [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {      [BUGGY]  if(stackSize    >    0)    {    popStack();    }    if(stackSize  >  0)  {  popStack();  System.arraycopy(pathNames,  0,  pathNames,  0,  stackSize);  }  if(stackSize  >=  0)  {  popStack();  }  if(stackSize  >  0)  {  popStack();  System.arraycopy(pathNames,  0,  pathNames,  0,  stackSize);  }  [BUGGY]      pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	261	261	2	replace	if(stackSize        >        0)        {        popStack();        }        if(stackSize    >    0)    {    popStack();    System.arraycopy(pathNames,    0,    pathNames,    0,    stackSize);    }    if(stackSize  >=  0)  {  popStack();  }  if(stackSize  >  0)  {  popStack();  System.arraycopy(pathNames,  0,  pathNames,  0,  stackSize);  }	  	compilable	  [FE]  ArrayIndexOutOfBoundsException  	88	2	add
1447	[BUG]  [BUGGY]  if(stackSize  >  0)  {  reportUnsupportedOperation();  }  else  {  pathNames[stackSize  -  1]  =  null;  }  [CE]  cannot  find  symbol  [FE]                        ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {      [BUGGY]  if(stackSize  >  0)  {  reportUnsupportedOperation();  }  else  {  pathNames[stackSize  -  1]  =  null;  }  [BUGGY]      pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	261	261	2	replace	if(stackSize  >  0)  {  reportUnsupportedOperation();  }  else  {  pathNames[stackSize  -  1]  =  null;  }	  reportUnsupportedOperation();    	non-compiled	[CE]  cannot  find  symbol	68	None	replace
1448	[BUG]  [BUGGY]  if(stackSize  >  0)  {  reportUnsupportedOperation();  }  else  {  pathNames[stackSize  -  1]  =   "null ";  }  [CE]  cannot  find  symbol  [FE]                          ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {      [BUGGY]  if(stackSize  >  0)  {  reportUnsupportedOperation();  }  else  {  pathNames[stackSize  -  1]  =   "null ";  }  [BUGGY]      pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	261	261	2	replace	if(stackSize  >  0)  {  reportUnsupportedOperation();  }  else  {  pathNames[stackSize  -  1]  =   "null ";  }	  reportUnsupportedOperation();    	non-compiled	[CE]  cannot  find  symbol	68	None	replace
1449	[BUG]  [BUGGY]  connectToPossibleExceptionHandler(null,  null,  pathNames,  JsonToken.VALUE_EMBEDDED);  [CE]  cannot  find  symbol  VALUE_EMBEDDED  [FE]                            ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {      [BUGGY]  connectToPossibleExceptionHandler(null,  null,  pathNames,  JsonToken.VALUE_EMBEDDED);  [BUGGY]      pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	261	261	2	replace	connectToPossibleExceptionHandler(null,  null,  pathNames,  JsonToken.VALUE_EMBEDDED);	  connectToPossibleExceptionHandler(null,    null,    pathNames);    	non-compiled	[CE]  cannot  find  symbol  VALUE_EMBEDDED	79	None	replace
1450	[BUG]  [BUGGY]  connectToPossibleExceptionHandler(null,  null,  pathNames,  stackSize);  [CE]  cannot  find  symbol  [FE]                              ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {      [BUGGY]  connectToPossibleExceptionHandler(null,  null,  pathNames,  stackSize);  [BUGGY]      pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	261	261	2	replace	connectToPossibleExceptionHandler(null,  null,  pathNames,  stackSize);	  connectToPossibleExceptionHandler(null,    null,    pathNames);    	non-compiled	[CE]  cannot  find  symbol	79	None	replace
1451	[BUG]  [BUGGY]  JsonToken  t  =  _parseJsonToken(JsonToken.END_ARRAY);  [CE]  cannot  find  symbol  [FE]                  ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {      [BUGGY]  JsonToken  t  =  _parseJsonToken(JsonToken.END_ARRAY);  [BUGGY]      pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	261	261	2	replace	JsonToken  t  =  _parseJsonToken(JsonToken.END_ARRAY);	  JsonToken    t    =    _createJsonToken(JsonToken.END_ARRAY);    	non-compiled	[CE]  cannot  find  symbol	124	None	replace
1452	[BUG]  [BUGGY]  _reportError( "Current  token( "+getClass().getName()  + ")not  null,  expecting  a  value ",  stackSize  -  1);  [CE]  cannot  find  symbol  [FE]                      ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {      [BUGGY]  _reportError( "Current  token( "+getClass().getName()  + ")not  null,  expecting  a  value ",  stackSize  -  1);  [BUGGY]      pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	261	261	2	replace	_reportError( "Current  token( "+getClass().getName()  + ")not  null,  expecting  a  value ",  stackSize  -  1);	  _reportError(   "Current    token(   "+getClass().getName()    +   ")not    null,    expecting    a    value   ");    	non-compiled	[CE]  cannot  find  symbol	200	None	replace
1453	[BUG]  [BUGGY]  _reportError( "Current  token( "+getClass().getName()  + ")not  null,  expecting  a  value, ");  [CE]  cannot  find  symbol  [FE]                        ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {      [BUGGY]  _reportError( "Current  token( "+getClass().getName()  + ")not  null,  expecting  a  value, ");  [BUGGY]      pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	261	261	2	replace	_reportError( "Current  token( "+getClass().getName()  + ")not  null,  expecting  a  value, ");	  _reportError(   "Current    token(   "+getClass().getName()    +   ")not    null,    expecting    a    value   ");    	non-compiled	[CE]  cannot  find  symbol	200	None	replace
1454	[BUG]  [BUGGY]  JsonToken.START_OBJECT  =  null;  nextName();  pathNames[stackSize  -  1]  =  null   ";  [CE]  unclosed  string  literal  [FE]                      ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {      [BUGGY]  JsonToken.START_OBJECT  =  null;  nextName();  pathNames[stackSize  -  1]  =  null   ";  [BUGGY]      pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	261	261	2	replace	JsonToken.START_OBJECT  =  null;  nextName();  pathNames[stackSize  -  1]  =  null   ";	  if(stackSize    >    0)    {    popStack();    }    else    {    JsonToken.START_OBJECT    =    null;    nextName();    pathNames[stackSize    -    1]    =    null       ";    }    	non-compiled	[CE]  unclosed  string  literal	131	None	replace
1455	[BUG]  [BUGGY]  if(pathIndices  ==  null)  {  if(stackSize  >  0)  {  popStack();  }  [CE]  ';'  expected  [FE]    java.lang.IllegalArgumentException:      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {      [BUGGY]  if(pathIndices  ==  null)  {  if(stackSize  >  0)  {  popStack();  }  [BUGGY]      pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	261	261	2	replace	if(pathIndices  ==  null)  {  if(stackSize  >  0)  {  popStack();  }	  if(stackSize    >    0)    {    popStack();    }    else    {    throw    new    IllegalArgumentException(       "       ");    }    if(stackSize    >    0)    {    popStack();    }    else    {    throw    new    IllegalArgumentException(   ",   ");    }    	non-compiled	[CE]  ';'  expected	18	None	replace
1456	[BUG]  [BUGGY]  validateValue(value);  [CE]  cannot  find  symbol  value  [FE]                          ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {      [BUGGY]  validateValue(value);  [BUGGY]      pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	261	261	2	replace	validateValue(value);	  validateValue(result);    	non-compiled	[CE]  cannot  find  symbol  value	105	None	replace
1457	[BUG]  [BUGGY]  connectToPossibleExceptionHandler(nextInternal(),  JsonToken.VALUE_NULL);  [CE]  cannot  find  symbol  [FE]                    ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {      [BUGGY]  connectToPossibleExceptionHandler(nextInternal(),  JsonToken.VALUE_NULL);  [BUGGY]      pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	261	261	2	replace	connectToPossibleExceptionHandler(nextInternal(),  JsonToken.VALUE_NULL);	  connectToPossibleExceptionHandler(throwInternal(),    JsonToken.VALUE_NULL);    	non-compiled	[CE]  cannot  find  symbol	51	None	replace
1458	[BUG]  [BUGGY]  connectToPossibleExceptionHandler(next(),  JsonToken.VALUE_NULL);  [CE]  cannot  find  symbol  [FE]                      ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {      [BUGGY]  connectToPossibleExceptionHandler(next(),  JsonToken.VALUE_NULL);  [BUGGY]      pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	261	261	2	replace	connectToPossibleExceptionHandler(next(),  JsonToken.VALUE_NULL);	  connectToPossibleExceptionHandler(throwInternal(),    JsonToken.VALUE_NULL);    	non-compiled	[CE]  cannot  find  symbol	51	None	replace
1459	[BUG]  [BUGGY]  [FE]  java.lang.IllegalArgumentException:    [FE]    java.lang.IllegalArgumentException:      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {      [BUGGY]  if(stackSize    >    0)    {    popStack();    }    else    {    throw    new    IllegalArgumentException(     "     ");    }    if(stackSize  >  0)  {  popStack();  }  else  {  throw  new  IllegalArgumentException(   ",   ");  }  if(stackSize  <  0)  {  popStack();  }  else  {  throw  new  IllegalArgumentException( ", ");  }  [BUGGY]      pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	261	261	2	add	if(stackSize        >        0)        {        popStack();        }        else        {        throw        new        IllegalArgumentException(       "       ");        }        if(stackSize    >    0)    {    popStack();    }    else    {    throw    new    IllegalArgumentException(   ",   ");    }    if(stackSize  <  0)  {  popStack();  }  else  {  throw  new  IllegalArgumentException( ", ");  }	  	compilable	  [FE]  java.lang.IllegalArgumentException:    	17	2	add
1460	[BUG]  [BUGGY]  if(stackSize    >    0)    {    popStack();    }    else    {    throw    new    IllegalArgumentException(     "     ");    }    if(stackSize  >  0)  {  popStack();  }  else  {  throw  new  IllegalArgumentException(   ",   ");  }  if(stackSize  <  0)  {  popStack();  }  else  {  throw  new  IllegalArgumentException( ", ");  }  [FE]  java.lang.IllegalArgumentException:    [FE]    java.lang.IllegalArgumentException:      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {      [BUGGY]  if(stackSize    >    0)    {    popStack();    }    else    {    throw    new    IllegalArgumentException(     "     ");    }    if(stackSize  >  0)  {  popStack();  }  else  {  throw  new  IllegalArgumentException(   ",   ");  }  if(stackSize  <  0)  {  popStack();  }  else  {  throw  new  IllegalArgumentException( ", ");  }  [BUGGY]      pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	261	261	2	replace	if(stackSize        >        0)        {        popStack();        }        else        {        throw        new        IllegalArgumentException(       "       ");        }        if(stackSize    >    0)    {    popStack();    }    else    {    throw    new    IllegalArgumentException(   ",   ");    }    if(stackSize  <  0)  {  popStack();  }  else  {  throw  new  IllegalArgumentException( ", ");  }	  	compilable	  [FE]  java.lang.IllegalArgumentException:    	17	2	add
1461	[BUG]  [BUGGY]  [FE]  java.lang.IllegalArgumentException:    [FE]      java.lang.IllegalArgumentException:      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {      [BUGGY]  if(stackSize    >    0)    {    popStack();    }    else    {    throw    new    IllegalArgumentException(     "     ");    }    if(stackSize  >  0)  {  popStack();  }  else  {  throw  new  IllegalArgumentException(   ",   ");  }  if(stackSize  <  0)  {  popStack();  }  else  {  throw  new  IllegalArgumentException( "   ");  }  [BUGGY]      pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	261	261	2	add	if(stackSize        >        0)        {        popStack();        }        else        {        throw        new        IllegalArgumentException(       "       ");        }        if(stackSize    >    0)    {    popStack();    }    else    {    throw    new    IllegalArgumentException(   ",   ");    }    if(stackSize  <  0)  {  popStack();  }  else  {  throw  new  IllegalArgumentException( "   ");  }	  	compilable	  [FE]  java.lang.IllegalArgumentException:    	17	2	add
1462	[BUG]  [BUGGY]  if(stackSize    >    0)    {    popStack();    }    else    {    throw    new    IllegalArgumentException(     "     ");    }    if(stackSize  >  0)  {  popStack();  }  else  {  throw  new  IllegalArgumentException(   ",   ");  }  if(stackSize  <  0)  {  popStack();  }  else  {  throw  new  IllegalArgumentException( "   ");  }  [FE]  java.lang.IllegalArgumentException:    [FE]      java.lang.IllegalArgumentException:      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {      [BUGGY]  if(stackSize    >    0)    {    popStack();    }    else    {    throw    new    IllegalArgumentException(     "     ");    }    if(stackSize  >  0)  {  popStack();  }  else  {  throw  new  IllegalArgumentException(   ",   ");  }  if(stackSize  <  0)  {  popStack();  }  else  {  throw  new  IllegalArgumentException( "   ");  }  [BUGGY]      pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	261	261	2	replace	if(stackSize        >        0)        {        popStack();        }        else        {        throw        new        IllegalArgumentException(       "       ");        }        if(stackSize    >    0)    {    popStack();    }    else    {    throw    new    IllegalArgumentException(   ",   ");    }    if(stackSize  <  0)  {  popStack();  }  else  {  throw  new  IllegalArgumentException( "   ");  }	  	compilable	  [FE]  java.lang.IllegalArgumentException:    	17	2	add
1463	[BUG]  [BUGGY]  [FE]  ArrayIndexOutOfBoundsException  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {      [BUGGY]  pathNames[stackSize  -  2]  =     "null   ";  pathNames[stackSize  -  1]  =   "null ";  [BUGGY]      pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	261	261	2	add	pathNames[stackSize    -    2]    =       "null   ";    pathNames[stackSize  -  1]  =   "null ";	  	compilable	  [FE]  ArrayIndexOutOfBoundsException  	40	2	add
1464	[BUG]  [BUGGY]  pathNames[stackSize  -  2]  =     "null   ";  pathNames[stackSize  -  1]  =   "null ";  [FE]  ArrayIndexOutOfBoundsException  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {      [BUGGY]  pathNames[stackSize  -  2]  =     "null   ";  pathNames[stackSize  -  1]  =   "null ";  [BUGGY]      pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	261	261	2	replace	pathNames[stackSize    -    2]    =       "null   ";    pathNames[stackSize  -  1]  =   "null ";	  	compilable	  [FE]  ArrayIndexOutOfBoundsException  	40	2	add
1465	[BUG]  [BUGGY]  connectToPossibleExceptionHandler(JsonToken.VALUE_NULL,  result);  [CE]  cannot  find  symbol  VALUE_NULL  [FE]                    ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {      [BUGGY]  connectToPossibleExceptionHandler(JsonToken.VALUE_NULL,  result);  [BUGGY]      pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	261	261	2	replace	connectToPossibleExceptionHandler(JsonToken.VALUE_NULL,  result);	  connectToPossibleExceptionHandler(JsonToken.VALUE_NULL);    	non-compiled	[CE]  cannot  find  symbol  VALUE_NULL	5	None	replace
1466	[BUG]  [BUGGY]  connectToPossibleExceptionHandler(JsonToken.VALUE_NULL,  JsonToken.END_ARRAY);  [CE]  cannot  find  symbol  VALUE_NULL  [FE]                      ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {      [BUGGY]  connectToPossibleExceptionHandler(JsonToken.VALUE_NULL,  JsonToken.END_ARRAY);  [BUGGY]      pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	261	261	2	replace	connectToPossibleExceptionHandler(JsonToken.VALUE_NULL,  JsonToken.END_ARRAY);	  connectToPossibleExceptionHandler(JsonToken.VALUE_NULL);    	non-compiled	[CE]  cannot  find  symbol  VALUE_NULL	5	None	replace
1467	[BUG]  [BUGGY]  _reportError( "Current  token( "+getClass().getName()  + ")not  null!. ");  [CE]  cannot  find  symbol  [FE]                      ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {      [BUGGY]  _reportError( "Current  token( "+getClass().getName()  + ")not  null!. ");  [BUGGY]      pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	261	261	2	replace	_reportError( "Current  token( "+getClass().getName()  + ")not  null!. ");	  _reportError(   "Current    token(   "+getClass().getName()    +   ")not    null!   ");    	non-compiled	[CE]  cannot  find  symbol	117	None	replace
1468	[BUG]  [BUGGY]  _reportError( "Current  token( "+getClass().getName()  + ")not  null! ",  stackSize);  [CE]  cannot  find  symbol  [FE]                        ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {      [BUGGY]  _reportError( "Current  token( "+getClass().getName()  + ")not  null! ",  stackSize);  [BUGGY]      pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	261	261	2	replace	_reportError( "Current  token( "+getClass().getName()  + ")not  null! ",  stackSize);	  _reportError(   "Current    token(   "+getClass().getName()    +   ")not    null!   ");    	non-compiled	[CE]  cannot  find  symbol	117	None	replace
1469	[BUG]  [BUGGY]  pathNames[stackSize  -  1]  =  null;  pathNames[stackSsize  -  1]  =  null;  [CE]  cannot  find  symbol  stackSsize  [FE]    AssertionFailedError    [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {      [BUGGY]  pathNames[stackSize  -  1]  =  null;  pathNames[stackSsize  -  1]  =  null;  [BUGGY]      pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	261	261	2	replace	pathNames[stackSize    -    1]    =    null;    pathNames[stackSsize  -  1]  =  null;	  	non-compiled	[CE]  cannot  find  symbol  stackSsize	20	None	add
1470	[BUG]  [BUGGY]  pathNames[stackSize  -  1]  =  null;  pathNames[stackSize  -  1)]  =  null;  [CE]  ']'  expected  [FE]      AssertionFailedError    [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {      [BUGGY]  pathNames[stackSize  -  1]  =  null;  pathNames[stackSize  -  1)]  =  null;  [BUGGY]      pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	261	261	2	replace	pathNames[stackSize    -    1]    =    null;    pathNames[stackSize  -  1)]  =  null;	  	non-compiled	[CE]  ']'  expected	20	None	add
1471	[BUG]  [BUGGY]  pathNames[stackSize  -  1]  =  null;  pathNames[stackSize  -  1].  =  null;  [CE]  <identifier>  expected  [FE]        AssertionFailedError    [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {      [BUGGY]  pathNames[stackSize  -  1]  =  null;  pathNames[stackSize  -  1].  =  null;  [BUGGY]      pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	261	261	2	replace	pathNames[stackSize    -    1]    =    null;    pathNames[stackSize  -  1].  =  null;	  	non-compiled	[CE]  <identifier>  expected	20	None	add
1472	[BUG]  [BUGGY]  pathNames[stackSize  -  1]  =  null;  pathNames[stackSize  -  1]  =  null.length;  [CE]  <null>  cannot  be  dereferenced  [FE]          AssertionFailedError    [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {      [BUGGY]  pathNames[stackSize  -  1]  =  null;  pathNames[stackSize  -  1]  =  null.length;  [BUGGY]      pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	261	261	2	replace	pathNames[stackSize    -    1]    =    null;    pathNames[stackSize  -  1]  =  null.length;	  	non-compiled	[CE]  <null>  cannot  be  dereferenced	20	None	add
1473	[BUG]  [BUGGY]  connectToPossibleExceptionHandler(null,  JsonToken.VALUE_NULL,  null);  [CE]  cannot  find  symbol  VALUE_NULL  [FE]                  ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {      [BUGGY]  connectToPossibleExceptionHandler(null,  JsonToken.VALUE_NULL,  null);  [BUGGY]      pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	261	261	2	replace	connectToPossibleExceptionHandler(null,  JsonToken.VALUE_NULL,  null);	  connectToPossibleExceptionHandler(null,    JsonToken.VALUE_NULL);    	non-compiled	[CE]  cannot  find  symbol  VALUE_NULL	170	None	replace
1474	[BUG]  [BUGGY]  connectToPossibleExceptionHandler(null,  JsonToken.VALUE_NULL,  SENTINEL_CLOSED);  [CE]  cannot  find  symbol  VALUE_NULL  [FE]                    ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {      [BUGGY]  connectToPossibleExceptionHandler(null,  JsonToken.VALUE_NULL,  SENTINEL_CLOSED);  [BUGGY]      pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	261	261	2	replace	connectToPossibleExceptionHandler(null,  JsonToken.VALUE_NULL,  SENTINEL_CLOSED);	  connectToPossibleExceptionHandler(null,    JsonToken.VALUE_NULL);    	non-compiled	[CE]  cannot  find  symbol  VALUE_NULL	170	None	replace
1475	[BUG]  [BUGGY]  connectToPossibleExceptionHandler(null,  JsonToken.VALUE_NULL,  true);  [CE]  cannot  find  symbol  VALUE_NULL  [FE]                      ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {      [BUGGY]  connectToPossibleExceptionHandler(null,  JsonToken.VALUE_NULL,  true);  [BUGGY]      pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	261	261	2	replace	connectToPossibleExceptionHandler(null,  JsonToken.VALUE_NULL,  true);	  connectToPossibleExceptionHandler(null,    JsonToken.VALUE_NULL);    	non-compiled	[CE]  cannot  find  symbol  VALUE_NULL	170	None	replace
1476	[BUG]  [BUGGY]  connectToPossibleExceptionHandler(null,  JsonToken.VALUE_EMBEDDED);  [CE]  cannot  find  symbol  VALUE_EMBEDDED  [FE]                        ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {      [BUGGY]  connectToPossibleExceptionHandler(null,  JsonToken.VALUE_EMBEDDED);  [BUGGY]      pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	261	261	2	replace	connectToPossibleExceptionHandler(null,  JsonToken.VALUE_EMBEDDED);	  connectToPossibleExceptionHandler(null,    JsonToken.VALUE_NULL);    	non-compiled	[CE]  cannot  find  symbol  VALUE_EMBEDDED	170	None	replace
1477	[BUG]  [BUGGY]  if(stackSize  >  0)  {  nextName();  }  else  {  JsonToken.VALUE_NULL  =  new  JsonToken(JsonToken.FIELD_NAME);  pathNames[stackSize  -  1]  =   "null ";  }  [CE]  cannot  find  symbol  VALUE_NULL  [FE]                  ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {      [BUGGY]  if(stackSize  >  0)  {  nextName();  }  else  {  JsonToken.VALUE_NULL  =  new  JsonToken(JsonToken.FIELD_NAME);  pathNames[stackSize  -  1]  =   "null ";  }  [BUGGY]      pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	261	261	2	replace	if(stackSize  >  0)  {  nextName();  }  else  {  JsonToken.VALUE_NULL  =  new  JsonToken(JsonToken.FIELD_NAME);  pathNames[stackSize  -  1]  =   "null ";  }	  if(stackSize    >    0)    {    nextName();    }    else    {    JsonToken.VALUE_NULL    =    new    JsonToken(JsonToken.FIELD_NAME);    pathNames[stackSize    -    1]    =    null;    }    	non-compiled	[CE]  cannot  find  symbol  VALUE_NULL	189	None	replace
1478	[BUG]  [BUGGY]  if(stackSize  >  0)  {  nextName();  }  else  {  JsonToken.VALUE_NULL  =  new  JsonToken(JsonToken.FIELD_NAME);  pathNames[stackSize  -  1]  =  null   ";  }  [CE]  unclosed  string  literal  [FE]                    ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {      [BUGGY]  if(stackSize  >  0)  {  nextName();  }  else  {  JsonToken.VALUE_NULL  =  new  JsonToken(JsonToken.FIELD_NAME);  pathNames[stackSize  -  1]  =  null   ";  }  [BUGGY]      pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	261	261	2	replace	if(stackSize  >  0)  {  nextName();  }  else  {  JsonToken.VALUE_NULL  =  new  JsonToken(JsonToken.FIELD_NAME);  pathNames[stackSize  -  1]  =  null   ";  }	  if(stackSize    >    0)    {    nextName();    }    else    {    JsonToken.VALUE_NULL    =    new    JsonToken(JsonToken.FIELD_NAME);    pathNames[stackSize    -    1]    =    null;    }    	non-compiled	[CE]  unclosed  string  literal	189	None	replace
1479	[BUG]  [BUGGY]  scan(JsonToken.VALUE_NUMBER_INT);  [CE]  cannot  find  symbol  VALUE_NUMBER_INT  [FE]                ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {      [BUGGY]  scan(JsonToken.VALUE_NUMBER_INT);  [BUGGY]      pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	261	261	2	replace	scan(JsonToken.VALUE_NUMBER_INT);	  peer();    	non-compiled	[CE]  cannot  find  symbol  VALUE_NUMBER_INT	61	None	replace
1480	[BUG]  [BUGGY]  scan(JsonToken.NAME);  [CE]  cannot  find  symbol  [FE]                  ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {      [BUGGY]  scan(JsonToken.NAME);  [BUGGY]      pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	261	261	2	replace	scan(JsonToken.NAME);	  peer();    	non-compiled	[CE]  cannot  find  symbol	61	None	replace
1481	[BUG]  [BUGGY]  scan(JsonToken.VALUE_NUMBER_INT,  JsonToken.VALUE_NUMBER_FLOAT);  [CE]  cannot  find  symbol  VALUE_NUMBER_INT  [FE]                    ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {      [BUGGY]  scan(JsonToken.VALUE_NUMBER_INT,  JsonToken.VALUE_NUMBER_FLOAT);  [BUGGY]      pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	261	261	2	replace	scan(JsonToken.VALUE_NUMBER_INT,  JsonToken.VALUE_NUMBER_FLOAT);	  peer();    	non-compiled	[CE]  cannot  find  symbol  VALUE_NUMBER_INT	61	None	replace
1482	[BUG]  [BUGGY]  scan(JsonToken.VALUE_NUMBER_INT,  stackSize  -  1);  [CE]  cannot  find  symbol  VALUE_NUMBER_INT  [FE]                      ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {      [BUGGY]  scan(JsonToken.VALUE_NUMBER_INT,  stackSize  -  1);  [BUGGY]      pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	261	261	2	replace	scan(JsonToken.VALUE_NUMBER_INT,  stackSize  -  1);	  peer();    	non-compiled	[CE]  cannot  find  symbol  VALUE_NUMBER_INT	61	None	replace
1483	[BUG]  [BUGGY]  scan(JsonToken.VALUE_NUMBER_INT,  JsonToken.VALUE_NUMBER_INT);  [CE]  cannot  find  symbol  VALUE_NUMBER_INT  [FE]                        ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {      [BUGGY]  scan(JsonToken.VALUE_NUMBER_INT,  JsonToken.VALUE_NUMBER_INT);  [BUGGY]      pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	261	261	2	replace	scan(JsonToken.VALUE_NUMBER_INT,  JsonToken.VALUE_NUMBER_INT);	  peer();    	non-compiled	[CE]  cannot  find  symbol  VALUE_NUMBER_INT	61	None	replace
1484	[BUG]  [BUGGY]  scan(JsonToken.VALUE_NUMBER_INT,  JsonToken.VALUE_NUMBER_FOR);  [CE]  cannot  find  symbol  VALUE_NUMBER_INT  [FE]                          ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {      [BUGGY]  scan(JsonToken.VALUE_NUMBER_INT,  JsonToken.VALUE_NUMBER_FOR);  [BUGGY]      pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	261	261	2	replace	scan(JsonToken.VALUE_NUMBER_INT,  JsonToken.VALUE_NUMBER_FOR);	  peer();    	non-compiled	[CE]  cannot  find  symbol  VALUE_NUMBER_INT	61	None	replace
1485	[BUG]  [BUGGY]  validateValue(JsonToken.VALUE_EMBEDDED);  [CE]  cannot  find  symbol  VALUE_EMBEDDED  [FE]                            ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {      [BUGGY]  validateValue(JsonToken.VALUE_EMBEDDED);  [BUGGY]      pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	261	261	2	replace	validateValue(JsonToken.VALUE_EMBEDDED);	  validateValue(JsonToken.VALUE_EMBEDDED_TYPE);    	non-compiled	[CE]  cannot  find  symbol  VALUE_EMBEDDED	100	None	replace
1486	[BUG]  [BUGGY]  validateValue(JsonToken.VALUE_EMBEDDED_TYPE,  true);  [CE]  cannot  find  symbol  VALUE_EMBEDDED_TYPE  [FE]                              ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {      [BUGGY]  validateValue(JsonToken.VALUE_EMBEDDED_TYPE,  true);  [BUGGY]      pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	261	261	2	replace	validateValue(JsonToken.VALUE_EMBEDDED_TYPE,  true);	  validateValue(JsonToken.VALUE_EMBEDDED_TYPE);    	non-compiled	[CE]  cannot  find  symbol  VALUE_EMBEDDED_TYPE	100	None	replace
1487	[BUG]  [BUGGY]  _reportError( "Current  token( "+getClass().getName()  + ")not  a  value, ",  JsonToken.NAME);  [CE]  cannot  find  symbol  [FE]            ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {      [BUGGY]  _reportError( "Current  token( "+getClass().getName()  + ")not  a  value, ",  JsonToken.NAME);  [BUGGY]      pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	261	261	2	replace	_reportError( "Current  token( "+getClass().getName()  + ")not  a  value, ",  JsonToken.NAME);	  _reportError(   "Current    token(   "+getClass().getName()    +   ")not    a    value   ",    JsonToken.NAME);    	non-compiled	[CE]  cannot  find  symbol	154	None	replace
1488	[BUG]  [BUGGY]  connectToPeek(JsonToken.VALUE_NUMBER_INT,  JsonToken.VALUE_NUMBER_DECEMBER);  [CE]  cannot  find  symbol  VALUE_NUMBER_INT  [FE]                        ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {      [BUGGY]  connectToPeek(JsonToken.VALUE_NUMBER_INT,  JsonToken.VALUE_NUMBER_DECEMBER);  [BUGGY]      pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	261	261	2	replace	connectToPeek(JsonToken.VALUE_NUMBER_INT,  JsonToken.VALUE_NUMBER_DECEMBER);	  connectToPeek(JsonToken.VALUE_NUMBER_INT,    JsonToken.VALUE_NUMBER_INT);    	non-compiled	[CE]  cannot  find  symbol  VALUE_NUMBER_INT	216	None	replace
1489	[BUG]  [BUGGY]  if(stackSize  >  0)  {  popStack();  }  else  {  JsonToken.VALUE_NULL  =  new  JsonToken(JsonToken.START_OBJECT);  pathNames[stackSize  -  1]  =   "null ";  }  [CE]  cannot  find  symbol  VALUE_NULL  [FE]                    ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {      [BUGGY]  if(stackSize  >  0)  {  popStack();  }  else  {  JsonToken.VALUE_NULL  =  new  JsonToken(JsonToken.START_OBJECT);  pathNames[stackSize  -  1]  =   "null ";  }  [BUGGY]      pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	261	261	2	replace	if(stackSize  >  0)  {  popStack();  }  else  {  JsonToken.VALUE_NULL  =  new  JsonToken(JsonToken.START_OBJECT);  pathNames[stackSize  -  1]  =   "null ";  }	  if(stackSize    >    0)    {    popStack();    }    else    {    JsonToken.VALUE_NULL    =    new    JsonToken(JsonToken.START_OBJECT);    pathNames[stackSize    -    1]    =    null;    }    	non-compiled	[CE]  cannot  find  symbol  VALUE_NULL	151	None	replace
1490	[BUG]  [BUGGY]  if(stackSize  >  0)  {  popStack();  }  else  {  JsonToken.VALUE_NULL  =  new  JsonToken(JsonToken.START_OBJECT);  pathNames[stackSize  -  1]  =  null   ";  }  [CE]  unclosed  string  literal  [FE]                      ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {      [BUGGY]  if(stackSize  >  0)  {  popStack();  }  else  {  JsonToken.VALUE_NULL  =  new  JsonToken(JsonToken.START_OBJECT);  pathNames[stackSize  -  1]  =  null   ";  }  [BUGGY]      pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	261	261	2	replace	if(stackSize  >  0)  {  popStack();  }  else  {  JsonToken.VALUE_NULL  =  new  JsonToken(JsonToken.START_OBJECT);  pathNames[stackSize  -  1]  =  null   ";  }	  if(stackSize    >    0)    {    popStack();    }    else    {    JsonToken.VALUE_NULL    =    new    JsonToken(JsonToken.START_OBJECT);    pathNames[stackSize    -    1]    =    null;    }    	non-compiled	[CE]  unclosed  string  literal	151	None	replace
1491	[BUG]  [BUGGY]  _reportError( "Current  token( "+getClass().getName()  + ")Not  null,  expecting  a  value ");  [CE]  cannot  find  symbol  [FE]                        ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {      [BUGGY]  _reportError( "Current  token( "+getClass().getName()  + ")Not  null,  expecting  a  value ");  [BUGGY]      pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	261	261	2	replace	_reportError( "Current  token( "+getClass().getName()  + ")Not  null,  expecting  a  value ");	  _reportError(   "Current    token(   "+getClass().getName()    +   ")Not    null.   ");    	non-compiled	[CE]  cannot  find  symbol	39	None	replace
1492	[BUG]  [BUGGY]  _reportError( "Current  token( "+getClass().getName()  + ")Not  null,  expecting  a  value. ");  [CE]  cannot  find  symbol  [FE]                          ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {      [BUGGY]  _reportError( "Current  token( "+getClass().getName()  + ")Not  null,  expecting  a  value. ");  [BUGGY]      pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	261	261	2	replace	_reportError( "Current  token( "+getClass().getName()  + ")Not  null,  expecting  a  value. ");	  _reportError(   "Current    token(   "+getClass().getName()    +   ")Not    null.   ");    	non-compiled	[CE]  cannot  find  symbol	39	None	replace
1493	[BUG]  [BUGGY]  if(peek()  ==  JsonToken.VALUE_EMBEDDED)  {  if(stackSize  >  0)  {  popStack();  }  [CE]  ';'  expected  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {      [BUGGY]  if(peek()  ==  JsonToken.VALUE_EMBEDDED)  {  if(stackSize  >  0)  {  popStack();  }  [BUGGY]      pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	261	261	2	replace	if(peek()  ==  JsonToken.VALUE_EMBEDDED)  {  if(stackSize  >  0)  {  popStack();  }	  if(stackSize    >    0)    {    popStack();    }    if(stackSize    >    0)    {    popStack();    System.arraycopy(pathNames,    0,    pathNames,    1,    stackSize    -    1);    }    	non-compiled	[CE]  ';'  expected	157	None	replace
1494	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      ArrayIndexOutOfBoundsException    [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {      [BUGGY]  if(stackSize  >  1)  {  popStack();  }  else  {  System.arraycopy(pathNames,  0,  pathNames,  1,  stackSize  -  1);  }  [BUGGY]      pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	261	261	2	add	if(stackSize  >  1)  {  popStack();  }  else  {  System.arraycopy(pathNames,  0,  pathNames,  1,  stackSize  -  1);  }	  if(stackSize    >    0)    {    popStack();    }    if(stackSize    >    0)    {    popStack();    System.arraycopy(pathNames,    0,    pathNames,    1,    stackSize    -    1);    }    	compilable	  [FE]  AssertionFailedError  	157	2	replace
1495	[BUG]  [BUGGY]  if(stackSize  >  1)  {  popStack();  }  else  {  System.arraycopy(pathNames,  0,  pathNames,  1,  stackSize  -  1);  }  [FE]  AssertionFailedError  [FE]      ArrayIndexOutOfBoundsException    [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {      [BUGGY]  if(stackSize  >  1)  {  popStack();  }  else  {  System.arraycopy(pathNames,  0,  pathNames,  1,  stackSize  -  1);  }  [BUGGY]      pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	261	261	2	replace	if(stackSize  >  1)  {  popStack();  }  else  {  System.arraycopy(pathNames,  0,  pathNames,  1,  stackSize  -  1);  }	  if(stackSize    >    0)    {    popStack();    }    if(stackSize    >    0)    {    popStack();    System.arraycopy(pathNames,    0,    pathNames,    1,    stackSize    -    1);    }    	compilable	  [FE]  AssertionFailedError  	157	2	replace
1496	[BUG]  [BUGGY]  _reportError( "Current  token( "+JsonToken.START+ ")not  a  value ",  JsonToken.END_OBJECT);  [CE]  cannot  find  symbol  START  [FE]                        ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {      [BUGGY]  _reportError( "Current  token( "+JsonToken.START+ ")not  a  value ",  JsonToken.END_OBJECT);  [BUGGY]      pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	261	261	2	replace	_reportError( "Current  token( "+JsonToken.START+ ")not  a  value ",  JsonToken.END_OBJECT);	  _reportError(   "Current    token(   "+JsonToken.START+   ")not    a    value   ");    	non-compiled	[CE]  cannot  find  symbol  START	129	None	replace
1497	[BUG]  [BUGGY]  _reportError( "Current  token( "+JsonToken.START+ ")not  a  value ",  JsonToken.END_ARRAY);  [CE]  cannot  find  symbol  START  [FE]                          ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {      [BUGGY]  _reportError( "Current  token( "+JsonToken.START+ ")not  a  value ",  JsonToken.END_ARRAY);  [BUGGY]      pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	261	261	2	replace	_reportError( "Current  token( "+JsonToken.START+ ")not  a  value ",  JsonToken.END_ARRAY);	  _reportError(   "Current    token(   "+JsonToken.START+   ")not    a    value   ");    	non-compiled	[CE]  cannot  find  symbol  START	129	None	replace
1498	[BUG]  [BUGGY]  if(isEnabled(Feature.QUOTE_FIELD_NAMES)||  isEnabled(Feature.QUOTE_FIELD_NAMES))  {  popStack();  }  [CE]  cannot  find  symbol  Feature  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {      [BUGGY]  if(isEnabled(Feature.QUOTE_FIELD_NAMES)||  isEnabled(Feature.QUOTE_FIELD_NAMES))  {  popStack();  }  [BUGGY]      pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	261	261	2	replace	if(isEnabled(Feature.QUOTE_FIELD_NAMES)||  isEnabled(Feature.QUOTE_FIELD_NAMES))  {  popStack();  }	  if(stackSize    >    0)    {    popStack();    }    if(stackSize    >    0)    {    popStack();    return;    }    	non-compiled	[CE]  cannot  find  symbol  Feature	212	None	replace
1499	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {      [BUGGY]  pathNames[stackSize  -  1]  =(pathNames[stackSize  -  1]  ==  null)?  null  :  pathNames[stackSize  -  1];  [BUGGY]      pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	261	261	2	add	pathNames[stackSize  -  1]  =(pathNames[stackSize  -  1]  ==  null)?  null  :  pathNames[stackSize  -  1];	  pathNames[stackSize    -    1]    =       "null   ";    	compilable	  [FE]  AssertionFailedError  	35	2	replace
1500	[BUG]  [BUGGY]  pathNames[stackSize  -  1]  =(pathNames[stackSize  -  1]  ==  null)?  null  :  pathNames[stackSize  -  1];  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {      [BUGGY]  pathNames[stackSize  -  1]  =(pathNames[stackSize  -  1]  ==  null)?  null  :  pathNames[stackSize  -  1];  [BUGGY]      pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	261	261	2	replace	pathNames[stackSize  -  1]  =(pathNames[stackSize  -  1]  ==  null)?  null  :  pathNames[stackSize  -  1];	  pathNames[stackSize    -    1]    =       "null   ";    	compilable	  [FE]  AssertionFailedError  	35	2	replace
1501	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {      [BUGGY]  pathNames[stackSize  -  1]  =(pathNames[stackSize  -  1]  ==  null)? "null "  :  pathNames[stackSize  -  1];  [BUGGY]      pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	261	261	2	add	pathNames[stackSize  -  1]  =(pathNames[stackSize  -  1]  ==  null)? "null "  :  pathNames[stackSize  -  1];	  pathNames[stackSize    -    1]    =       "null   ";    	compilable	  [FE]  AssertionFailedError  	35	2	replace
1502	[BUG]  [BUGGY]  pathNames[stackSize  -  1]  =(pathNames[stackSize  -  1]  ==  null)? "null "  :  pathNames[stackSize  -  1];  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {      [BUGGY]  pathNames[stackSize  -  1]  =(pathNames[stackSize  -  1]  ==  null)? "null "  :  pathNames[stackSize  -  1];  [BUGGY]      pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	261	261	2	replace	pathNames[stackSize  -  1]  =(pathNames[stackSize  -  1]  ==  null)? "null "  :  pathNames[stackSize  -  1];	  pathNames[stackSize    -    1]    =       "null   ";    	compilable	  [FE]  AssertionFailedError  	35	2	replace
1503	[BUG]  [BUGGY]  pathNames[stackSize  -  1]  =(pathNames[stackSize  -  1]  ==  null)? "null "  :  pathNames[stackSize  -  1]);  [CE]  [FE]        AssertionFailedError    [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {      [BUGGY]  pathNames[stackSize  -  1]  =(pathNames[stackSize  -  1]  ==  null)? "null "  :  pathNames[stackSize  -  1]);  [BUGGY]      pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	261	261	2	replace	pathNames[stackSize  -  1]  =(pathNames[stackSize  -  1]  ==  null)? "null "  :  pathNames[stackSize  -  1]);	  pathNames[stackSize    -    1]    =       "null   ";    	non-compiled	[CE]  	35	None	replace
1504	[BUG]  [BUGGY]  scan(JsonToken.VALUE_NUMBER_INT,  JsonToken.VALUE_NUMBER_FACTOR);  [CE]  cannot  find  symbol  VALUE_NUMBER_INT  [FE]        ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {      [BUGGY]  scan(JsonToken.VALUE_NUMBER_INT,  JsonToken.VALUE_NUMBER_FACTOR);  [BUGGY]      pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	261	261	2	replace	scan(JsonToken.VALUE_NUMBER_INT,  JsonToken.VALUE_NUMBER_FACTOR);	  peech();    	non-compiled	[CE]  cannot  find  symbol  VALUE_NUMBER_INT	147	None	replace
1505	[BUG]  [BUGGY]  scan(JsonToken.VALUE_NUMBER_INT,  JsonToken.VALUE_NUMBER_FALSE);  [CE]  cannot  find  symbol  VALUE_NUMBER_INT  [FE]          ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {      [BUGGY]  scan(JsonToken.VALUE_NUMBER_INT,  JsonToken.VALUE_NUMBER_FALSE);  [BUGGY]      pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	261	261	2	replace	scan(JsonToken.VALUE_NUMBER_INT,  JsonToken.VALUE_NUMBER_FALSE);	  peech();    	non-compiled	[CE]  cannot  find  symbol  VALUE_NUMBER_INT	147	None	replace
1506	[BUG]  [BUGGY]  if(peek()  ==  JsonToken.VALUE_EMBEDDED_ARRAY)  {  if(stackSize  >  0)  {  popStack();  }  [CE]  ';'  expected  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {      [BUGGY]  if(peek()  ==  JsonToken.VALUE_EMBEDDED_ARRAY)  {  if(stackSize  >  0)  {  popStack();  }  [BUGGY]      pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	261	261	2	replace	if(peek()  ==  JsonToken.VALUE_EMBEDDED_ARRAY)  {  if(stackSize  >  0)  {  popStack();  }	  if(stackSize    >    0)    {    popStack();    }    if(stackSize    >    0)    {    popStack();    System.arraycopy(pathNames,    0,    pathNames,    0,    stackSize);    }    	non-compiled	[CE]  ';'  expected	89	None	replace
1507	[BUG]  [BUGGY]  Validate.notNull(path);  [CE]  cannot  find  symbol  path  [FE]                            ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {      [BUGGY]  Validate.notNull(path);  [BUGGY]      pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	261	261	2	replace	Validate.notNull(path);	  Validate.notNull(stack);    	non-compiled	[CE]  cannot  find  symbol  path	106	None	replace
1508	[BUG]  [BUGGY]  Validate.notNull(paths);  [CE]  cannot  find  symbol  paths  [FE]                              ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {      [BUGGY]  Validate.notNull(paths);  [BUGGY]      pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	261	261	2	replace	Validate.notNull(paths);	  Validate.notNull(stack);    	non-compiled	[CE]  cannot  find  symbol  paths	106	None	replace
1509	[BUG]  [BUGGY]  validateValue(null,  result);  [CE]  cannot  find  symbol  result  [FE]                      ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {      [BUGGY]  validateValue(null,  result);  [BUGGY]      pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	261	261	2	replace	validateValue(null,  result);	  validateValue(null);    	non-compiled	[CE]  cannot  find  symbol  result	103	None	replace
1510	[BUG]  [BUGGY]  validateValue(null,  JsonToken.VALUE_EMBEDDED);  [CE]  cannot  find  symbol  VALUE_EMBEDDED  [FE]                        ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {      [BUGGY]  validateValue(null,  JsonToken.VALUE_EMBEDDED);  [BUGGY]      pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	261	261	2	replace	validateValue(null,  JsonToken.VALUE_EMBEDDED);	  validateValue(null);    	non-compiled	[CE]  cannot  find  symbol  VALUE_EMBEDDED	103	None	replace
1511	[BUG]  [BUGGY]  _reportError( "Current  token( "+getClass().getName()  + ")not  a  value ",  JsonToken.VALUE_NUMBER_ARRAY);  [CE]  cannot  find  symbol  VALUE_NUMBER_ARRAY  [FE]              ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {      [BUGGY]  _reportError( "Current  token( "+getClass().getName()  + ")not  a  value ",  JsonToken.VALUE_NUMBER_ARRAY);  [BUGGY]      pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	261	261	2	replace	_reportError( "Current  token( "+getClass().getName()  + ")not  a  value ",  JsonToken.VALUE_NUMBER_ARRAY);	  _reportError(   "Current    token(   "+getClass().getName()    +   ")not    a    value   ",    JsonToken.VALUE_NUMBER_ERROR);    	non-compiled	[CE]  cannot  find  symbol  VALUE_NUMBER_ARRAY	155	None	replace
1512	[BUG]  [BUGGY]  validateValue(JsonToken.VALUE_EMBEDDED_FIELD_NAME,  STACK_SIZE);  [CE]  cannot  find  symbol  VALUE_EMBEDDED_FIELD_NAME  [FE]                          ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {      [BUGGY]  validateValue(JsonToken.VALUE_EMBEDDED_FIELD_NAME,  STACK_SIZE);  [BUGGY]      pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	261	261	2	replace	validateValue(JsonToken.VALUE_EMBEDDED_FIELD_NAME,  STACK_SIZE);	  validateValue(JsonToken.VALUE_EMBEDDED_FIELD_NAME);    	non-compiled	[CE]  cannot  find  symbol  VALUE_EMBEDDED_FIELD_NAME	99	None	replace
1513	[BUG]  [BUGGY]  handleUnREADABLE_READER(JsonToken.NAME);  [CE]  cannot  find  symbol  [FE]                      ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {      [BUGGY]  handleUnREADABLE_READER(JsonToken.NAME);  [BUGGY]      pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	261	261	2	replace	handleUnREADABLE_READER(JsonToken.NAME);	  handleMissingName();    	non-compiled	[CE]  cannot  find  symbol	67	None	replace
1514	[BUG]  [BUGGY]  handleMissingName(),  JsonToken.NAME);  [CE]  ';'  expected  [FE]                        ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {      [BUGGY]  handleMissingName(),  JsonToken.NAME);  [BUGGY]      pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	261	261	2	replace	handleMissingName(),  JsonToken.NAME);	  handleMissingName();    	non-compiled	[CE]  ';'  expected	67	None	replace
1515	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {      [BUGGY]  if(stackSize  >  1)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	261	261	2	add	if(stackSize  >  1)  {  throw  new  IllegalArgumentException( " ");  }	  if(stackSize    >    1)    {    popStack();    }    	compilable	  [FE]  AssertionFailedError  	193	2	replace
1516	[BUG]  [BUGGY]  if(stackSize  >  1)  {  throw  new  IllegalArgumentException( " ");  }  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {      [BUGGY]  if(stackSize  >  1)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	261	261	2	replace	if(stackSize  >  1)  {  throw  new  IllegalArgumentException( " ");  }	  if(stackSize    >    1)    {    popStack();    }    	compilable	  [FE]  AssertionFailedError  	193	2	replace
1517	[BUG]  [BUGGY]  [FE]  IllegalArgumentException  [FE]    IllegalArgumentException    [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {      [BUGGY]  if(stackSize    >    0)    {    popStack();    }    else    {    throw    new    IllegalArgumentException(     "     ");    }    if(stackSize  >  0)  {  popStack();  }  else  {  throw  new  IllegalArgumentException(   "     ");  }  if(stackSize  ==  0)  {  popStack();  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	261	261	2	add	if(stackSize        >        0)        {        popStack();        }        else        {        throw        new        IllegalArgumentException(       "       ");        }        if(stackSize    >    0)    {    popStack();    }    else    {    throw    new    IllegalArgumentException(   "       ");    }    if(stackSize  ==  0)  {  popStack();  }  else  {  throw  new  IllegalArgumentException( " ");  }	  	compilable	  [FE]  IllegalArgumentException  	10	2	add
1518	[BUG]  [BUGGY]  if(stackSize    >    0)    {    popStack();    }    else    {    throw    new    IllegalArgumentException(     "     ");    }    if(stackSize  >  0)  {  popStack();  }  else  {  throw  new  IllegalArgumentException(   "     ");  }  if(stackSize  ==  0)  {  popStack();  }  else  {  throw  new  IllegalArgumentException( " ");  }  [FE]  IllegalArgumentException  [FE]    IllegalArgumentException    [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {      [BUGGY]  if(stackSize    >    0)    {    popStack();    }    else    {    throw    new    IllegalArgumentException(     "     ");    }    if(stackSize  >  0)  {  popStack();  }  else  {  throw  new  IllegalArgumentException(   "     ");  }  if(stackSize  ==  0)  {  popStack();  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	261	261	2	replace	if(stackSize        >        0)        {        popStack();        }        else        {        throw        new        IllegalArgumentException(       "       ");        }        if(stackSize    >    0)    {    popStack();    }    else    {    throw    new    IllegalArgumentException(   "       ");    }    if(stackSize  ==  0)  {  popStack();  }  else  {  throw  new  IllegalArgumentException( " ");  }	  	compilable	  [FE]  IllegalArgumentException  	10	2	add
1519	[BUG]  [BUGGY]  [FE]  IllegalArgumentException  [FE]      IllegalArgumentException    [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {      [BUGGY]  if(stackSize    >    0)    {    popStack();    }    else    {    throw    new    IllegalArgumentException(     "     ");    }    if(stackSize  >  0)  {  popStack();  }  else  {  throw  new  IllegalArgumentException(   "     ");  }  if(stackSize  <  1)  {  popStack();  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	261	261	2	add	if(stackSize        >        0)        {        popStack();        }        else        {        throw        new        IllegalArgumentException(       "       ");        }        if(stackSize    >    0)    {    popStack();    }    else    {    throw    new    IllegalArgumentException(   "       ");    }    if(stackSize  <  1)  {  popStack();  }  else  {  throw  new  IllegalArgumentException( " ");  }	  	compilable	  [FE]  IllegalArgumentException  	10	2	add
1520	[BUG]  [BUGGY]  if(stackSize    >    0)    {    popStack();    }    else    {    throw    new    IllegalArgumentException(     "     ");    }    if(stackSize  >  0)  {  popStack();  }  else  {  throw  new  IllegalArgumentException(   "     ");  }  if(stackSize  <  1)  {  popStack();  }  else  {  throw  new  IllegalArgumentException( " ");  }  [FE]  IllegalArgumentException  [FE]      IllegalArgumentException    [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {      [BUGGY]  if(stackSize    >    0)    {    popStack();    }    else    {    throw    new    IllegalArgumentException(     "     ");    }    if(stackSize  >  0)  {  popStack();  }  else  {  throw  new  IllegalArgumentException(   "     ");  }  if(stackSize  <  1)  {  popStack();  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	261	261	2	replace	if(stackSize        >        0)        {        popStack();        }        else        {        throw        new        IllegalArgumentException(       "       ");        }        if(stackSize    >    0)    {    popStack();    }    else    {    throw    new    IllegalArgumentException(   "       ");    }    if(stackSize  <  1)  {  popStack();  }  else  {  throw  new  IllegalArgumentException( " ");  }	  	compilable	  [FE]  IllegalArgumentException  	10	2	add
1521	[BUG]  [BUGGY]  [FE]  IllegalArgumentException  [FE]        IllegalArgumentException    [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {      [BUGGY]  if(stackSize    >    0)    {    popStack();    }    else    {    throw    new    IllegalArgumentException(     "     ");    }    if(stackSize  >  0)  {  popStack();  }  else  {  throw  new  IllegalArgumentException(   "     ");  }  if(stackSize!=  0)  {  popStack();  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	261	261	2	add	if(stackSize        >        0)        {        popStack();        }        else        {        throw        new        IllegalArgumentException(       "       ");        }        if(stackSize    >    0)    {    popStack();    }    else    {    throw    new    IllegalArgumentException(   "       ");    }    if(stackSize!=  0)  {  popStack();  }  else  {  throw  new  IllegalArgumentException( " ");  }	  	compilable	  [FE]  IllegalArgumentException  	10	2	add
1522	[BUG]  [BUGGY]  if(stackSize    >    0)    {    popStack();    }    else    {    throw    new    IllegalArgumentException(     "     ");    }    if(stackSize  >  0)  {  popStack();  }  else  {  throw  new  IllegalArgumentException(   "     ");  }  if(stackSize!=  0)  {  popStack();  }  else  {  throw  new  IllegalArgumentException( " ");  }  [FE]  IllegalArgumentException  [FE]        IllegalArgumentException    [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {      [BUGGY]  if(stackSize    >    0)    {    popStack();    }    else    {    throw    new    IllegalArgumentException(     "     ");    }    if(stackSize  >  0)  {  popStack();  }  else  {  throw  new  IllegalArgumentException(   "     ");  }  if(stackSize!=  0)  {  popStack();  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	261	261	2	replace	if(stackSize        >        0)        {        popStack();        }        else        {        throw        new        IllegalArgumentException(       "       ");        }        if(stackSize    >    0)    {    popStack();    }    else    {    throw    new    IllegalArgumentException(   "       ");    }    if(stackSize!=  0)  {  popStack();  }  else  {  throw  new  IllegalArgumentException( " ");  }	  	compilable	  [FE]  IllegalArgumentException  	10	2	add
1523	[BUG]  [BUGGY]  if(stackSize    >    0)    {    popStack();    }    if(stackSize  >  0)  {  popStack();  }  pathNames[stackSize  -  1]  =     "null   ";  if(stackSize  >  0)  {  popStack();  }  if(stackSize  >  0)  {  popStack();  }  if(stackSize  -  1]  =   "null   ";  }  [CE]  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {      [BUGGY]  if(stackSize    >    0)    {    popStack();    }    if(stackSize  >  0)  {  popStack();  }  pathNames[stackSize  -  1]  =     "null   ";  if(stackSize  >  0)  {  popStack();  }  if(stackSize  >  0)  {  popStack();  }  if(stackSize  -  1]  =   "null   ";  }  [BUGGY]      pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	261	261	2	replace	if(stackSize        >        0)        {        popStack();        }        if(stackSize    >    0)    {    popStack();    }    pathNames[stackSize    -    1]    =       "null   ";    if(stackSize  >  0)  {  popStack();  }  if(stackSize  >  0)  {  popStack();  }  if(stackSize  -  1]  =   "null   ";  }	  	non-compiled	[CE]  	86	None	add
1524	[BUG]  [BUGGY]  [FE]  ArrayIndexOutOfBoundsException  [FE]      ArrayIndexOutOfBoundsException    [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {      [BUGGY]  if(stackSize    >    0)    {    popStack();    }    if(stackSize  >  0)  {  popStack();  }  pathNames[stackSize  -  1]  =     "null   ";  if(stackSize  <  0)  {  popStack();  }  if(stackSize  >  0)  {  popStack();  }  [BUGGY]      pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	261	261	2	add	if(stackSize        >        0)        {        popStack();        }        if(stackSize    >    0)    {    popStack();    }    pathNames[stackSize    -    1]    =       "null   ";    if(stackSize  <  0)  {  popStack();  }  if(stackSize  >  0)  {  popStack();  }	  	compilable	  [FE]  ArrayIndexOutOfBoundsException  	86	2	add
1525	[BUG]  [BUGGY]  if(stackSize    >    0)    {    popStack();    }    if(stackSize  >  0)  {  popStack();  }  pathNames[stackSize  -  1]  =     "null   ";  if(stackSize  <  0)  {  popStack();  }  if(stackSize  >  0)  {  popStack();  }  [FE]  ArrayIndexOutOfBoundsException  [FE]      ArrayIndexOutOfBoundsException    [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {      [BUGGY]  if(stackSize    >    0)    {    popStack();    }    if(stackSize  >  0)  {  popStack();  }  pathNames[stackSize  -  1]  =     "null   ";  if(stackSize  <  0)  {  popStack();  }  if(stackSize  >  0)  {  popStack();  }  [BUGGY]      pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	261	261	2	replace	if(stackSize        >        0)        {        popStack();        }        if(stackSize    >    0)    {    popStack();    }    pathNames[stackSize    -    1]    =       "null   ";    if(stackSize  <  0)  {  popStack();  }  if(stackSize  >  0)  {  popStack();  }	  	compilable	  [FE]  ArrayIndexOutOfBoundsException  	86	2	add
1526	[BUG]  [BUGGY]  if(stackSize    >    0)    {    popStack();    }    if(stackSize  >  0)  {  popStack();  }  pathNames[stackSize  -  1]  =     "null   ";  if(stackSize  >  0)  {  popStack();  }  if(stackSize  >  0)  {  popStack();  }  if(stackSize  -  1]  =  null   ";  }  [CE]  [FE]        ArrayIndexOutOfBoundsException    [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {      [BUGGY]  if(stackSize    >    0)    {    popStack();    }    if(stackSize  >  0)  {  popStack();  }  pathNames[stackSize  -  1]  =     "null   ";  if(stackSize  >  0)  {  popStack();  }  if(stackSize  >  0)  {  popStack();  }  if(stackSize  -  1]  =  null   ";  }  [BUGGY]      pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	261	261	2	replace	if(stackSize        >        0)        {        popStack();        }        if(stackSize    >    0)    {    popStack();    }    pathNames[stackSize    -    1]    =       "null   ";    if(stackSize  >  0)  {  popStack();  }  if(stackSize  >  0)  {  popStack();  }  if(stackSize  -  1]  =  null   ";  }	  	non-compiled	[CE]  	86	None	add
1527	[BUG]  [BUGGY]  int  stackSize  =  stackIndices.size();  [CE]  cannot  find  symbol  stackIndices  [FE]              AssertionFailedError      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {      [BUGGY]  int  stackSize  =  stackIndices.size();  [BUGGY]      pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	261	261	2	replace	int  stackSize  =  stackIndices.size();	          int    stackSize    =    stack.size();    	non-compiled	[CE]  cannot  find  symbol  stackIndices	121	None	replace
1528	[BUG]  [BUGGY]  [FE]  IllegalStateException  [FE]    IllegalStateException    [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {      [BUGGY]  if(stackSize  >  0)  {  nextName();  }  if(stackSize  >  0)  {  nextName();  System.arraycopy(pathNames,  0,  pathNames,  1,  stackSize  -  1);  }  [BUGGY]      pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	261	261	2	add	if(stackSize    >    0)    {    nextName();    }    if(stackSize  >  0)  {  nextName();  System.arraycopy(pathNames,  0,  pathNames,  1,  stackSize  -  1);  }	  	compilable	  [FE]  IllegalStateException  	190	2	add
1529	[BUG]  [BUGGY]  if(stackSize  >  0)  {  nextName();  }  if(stackSize  >  0)  {  nextName();  System.arraycopy(pathNames,  0,  pathNames,  1,  stackSize  -  1);  }  [FE]  IllegalStateException  [FE]    IllegalStateException    [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {      [BUGGY]  if(stackSize  >  0)  {  nextName();  }  if(stackSize  >  0)  {  nextName();  System.arraycopy(pathNames,  0,  pathNames,  1,  stackSize  -  1);  }  [BUGGY]      pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	261	261	2	replace	if(stackSize    >    0)    {    nextName();    }    if(stackSize  >  0)  {  nextName();  System.arraycopy(pathNames,  0,  pathNames,  1,  stackSize  -  1);  }	  	compilable	  [FE]  IllegalStateException  	190	2	add
1530	[BUG]  [BUGGY]  [FE]  IllegalStateException  [FE]      IllegalStateException    [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {      [BUGGY]  if(stackSize  >  0)  {  nextName();  }  if(stackSize  >  0)  {  nextName();  System.arraycopy(stack,  0,  pathNames,  0,  stackSize);  }  [BUGGY]      pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	261	261	2	add	if(stackSize    >    0)    {    nextName();    }    if(stackSize  >  0)  {  nextName();  System.arraycopy(stack,  0,  pathNames,  0,  stackSize);  }	  	compilable	  [FE]  IllegalStateException  	190	2	add
1531	[BUG]  [BUGGY]  if(stackSize  >  0)  {  nextName();  }  if(stackSize  >  0)  {  nextName();  System.arraycopy(stack,  0,  pathNames,  0,  stackSize);  }  [FE]  IllegalStateException  [FE]      IllegalStateException    [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {      [BUGGY]  if(stackSize  >  0)  {  nextName();  }  if(stackSize  >  0)  {  nextName();  System.arraycopy(stack,  0,  pathNames,  0,  stackSize);  }  [BUGGY]      pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	261	261	2	replace	if(stackSize    >    0)    {    nextName();    }    if(stackSize  >  0)  {  nextName();  System.arraycopy(stack,  0,  pathNames,  0,  stackSize);  }	  	compilable	  [FE]  IllegalStateException  	190	2	add
1532	[BUG]  [BUGGY]  [FE]  IllegalStateException  [FE]        IllegalStateException    [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {      [BUGGY]  if(stackSize  >  0)  {  nextName();  }  if(stackSize  >  0)  {  nextName();  System.arraycopy(stack,  0,  pathNames,  1,  stackSize  -  1);  }  [BUGGY]      pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	261	261	2	add	if(stackSize    >    0)    {    nextName();    }    if(stackSize  >  0)  {  nextName();  System.arraycopy(stack,  0,  pathNames,  1,  stackSize  -  1);  }	  	compilable	  [FE]  IllegalStateException  	190	2	add
1533	[BUG]  [BUGGY]  if(stackSize  >  0)  {  nextName();  }  if(stackSize  >  0)  {  nextName();  System.arraycopy(stack,  0,  pathNames,  1,  stackSize  -  1);  }  [FE]  IllegalStateException  [FE]        IllegalStateException    [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {      [BUGGY]  if(stackSize  >  0)  {  nextName();  }  if(stackSize  >  0)  {  nextName();  System.arraycopy(stack,  0,  pathNames,  1,  stackSize  -  1);  }  [BUGGY]      pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	261	261	2	replace	if(stackSize    >    0)    {    nextName();    }    if(stackSize  >  0)  {  nextName();  System.arraycopy(stack,  0,  pathNames,  1,  stackSize  -  1);  }	  	compilable	  [FE]  IllegalStateException  	190	2	add
1534	[BUG]  [BUGGY]  [FE]  IllegalStateException  [FE]          IllegalStateException    [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {      [BUGGY]  if(stackSize  >  0)  {  nextName();  }  if(stackSize  >  0)  {  nextName();  System.arraycopy(pathNames,  0,  pathNames,  0,  stackSize);  }  [BUGGY]      pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	261	261	2	add	if(stackSize    >    0)    {    nextName();    }    if(stackSize  >  0)  {  nextName();  System.arraycopy(pathNames,  0,  pathNames,  0,  stackSize);  }	  	compilable	  [FE]  IllegalStateException  	190	2	add
1535	[BUG]  [BUGGY]  if(stackSize  >  0)  {  nextName();  }  if(stackSize  >  0)  {  nextName();  System.arraycopy(pathNames,  0,  pathNames,  0,  stackSize);  }  [FE]  IllegalStateException  [FE]          IllegalStateException    [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {      [BUGGY]  if(stackSize  >  0)  {  nextName();  }  if(stackSize  >  0)  {  nextName();  System.arraycopy(pathNames,  0,  pathNames,  0,  stackSize);  }  [BUGGY]      pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	261	261	2	replace	if(stackSize    >    0)    {    nextName();    }    if(stackSize  >  0)  {  nextName();  System.arraycopy(pathNames,  0,  pathNames,  0,  stackSize);  }	  	compilable	  [FE]  IllegalStateException  	190	2	add
1536	[BUG]  [BUGGY]  if(stackSize  >  0)  {  nextName();  }  if(stackSize  >  0)  {  nextName();  }  pathNames[stackSize  -  1]  =  null   ";  }  [CE]  unclosed  string  literal  [FE]            IllegalStateException    [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {      [BUGGY]  if(stackSize  >  0)  {  nextName();  }  if(stackSize  >  0)  {  nextName();  }  pathNames[stackSize  -  1]  =  null   ";  }  [BUGGY]      pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	261	261	2	replace	if(stackSize    >    0)    {    nextName();    }    if(stackSize  >  0)  {  nextName();  }  pathNames[stackSize  -  1]  =  null   ";  }	  	non-compiled	[CE]  unclosed  string  literal	190	None	add
1537	[BUG]  [BUGGY]  _reportError( "Current  token( "+getMessage()  + ")not  a  value ", "JsonToken.END_ARRAY);  [CE]  unclosed  string  literal  [FE]                ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {      [BUGGY]  _reportError( "Current  token( "+getMessage()  + ")not  a  value ", "JsonToken.END_ARRAY);  [BUGGY]      pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	261	261	2	replace	_reportError( "Current  token( "+getMessage()  + ")not  a  value ", "JsonToken.END_ARRAY);	  _reportError(   "Current    token(   "+getMessage()    +   ")not    a    value   ",    JsonToken.END_ARRAY);    	non-compiled	[CE]  unclosed  string  literal	205	None	replace
1538	[BUG]  [BUGGY]  _reportError( "Current  token( "+getMessage()  + ")not  a  value, ",  JsonToken.END_ARRAY);  [CE]  cannot  find  symbol  [FE]                  ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {      [BUGGY]  _reportError( "Current  token( "+getMessage()  + ")not  a  value, ",  JsonToken.END_ARRAY);  [BUGGY]      pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	261	261	2	replace	_reportError( "Current  token( "+getMessage()  + ")not  a  value, ",  JsonToken.END_ARRAY);	  _reportError(   "Current    token(   "+getMessage()    +   ")not    a    value   ",    JsonToken.END_ARRAY);    	non-compiled	[CE]  cannot  find  symbol	205	None	replace
1539	[BUG]  [BUGGY]  [FE]  ArrayIndexOutOfBoundsException  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {      [BUGGY]  if(stackSize  >=  0)  {  popStack();  }  else  {  throw  new  IllegalArgumentException(   "   ");  }  if(stackSize  >=  0)  {  popStack();  }  else  {  throw  new  IllegalArgumentException( "... ");  }  [BUGGY]      pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	261	261	2	add	if(stackSize    >=    0)    {    popStack();    }    else    {    throw    new    IllegalArgumentException(   "   ");    }    if(stackSize  >=  0)  {  popStack();  }  else  {  throw  new  IllegalArgumentException( "... ");  }	  	compilable	  [FE]  ArrayIndexOutOfBoundsException  	179	2	add
1540	[BUG]  [BUGGY]  if(stackSize  >=  0)  {  popStack();  }  else  {  throw  new  IllegalArgumentException(   "   ");  }  if(stackSize  >=  0)  {  popStack();  }  else  {  throw  new  IllegalArgumentException( "... ");  }  [FE]  ArrayIndexOutOfBoundsException  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {      [BUGGY]  if(stackSize  >=  0)  {  popStack();  }  else  {  throw  new  IllegalArgumentException(   "   ");  }  if(stackSize  >=  0)  {  popStack();  }  else  {  throw  new  IllegalArgumentException( "... ");  }  [BUGGY]      pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	261	261	2	replace	if(stackSize    >=    0)    {    popStack();    }    else    {    throw    new    IllegalArgumentException(   "   ");    }    if(stackSize  >=  0)  {  popStack();  }  else  {  throw  new  IllegalArgumentException( "... ");  }	  	compilable	  [FE]  ArrayIndexOutOfBoundsException  	179	2	add
1541	[BUG]  [BUGGY]  [FE]  IllegalArgumentException  [FE]    IllegalStateException    [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {      [BUGGY]  if(stackSize  >  0)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	261	261	2	add	if(stackSize  >  0)  {  throw  new  IllegalArgumentException( " ");  }	  if(stackSize    >    0)    {    nextName();    }    	compilable	  [FE]  IllegalArgumentException  	191	2	replace
1542	[BUG]  [BUGGY]  if(stackSize  >  0)  {  throw  new  IllegalArgumentException( " ");  }  [FE]  IllegalArgumentException  [FE]    IllegalStateException    [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {      [BUGGY]  if(stackSize  >  0)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	261	261	2	replace	if(stackSize  >  0)  {  throw  new  IllegalArgumentException( " ");  }	  if(stackSize    >    0)    {    nextName();    }    	compilable	  [FE]  IllegalArgumentException  	191	2	replace
1543	[BUG]  [BUGGY]  if(stackSize  >  0)  {  nextIgnoreWhitespace();  }  [CE]  cannot  find  symbol  [FE]      IllegalStateException    [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {      [BUGGY]  if(stackSize  >  0)  {  nextIgnoreWhitespace();  }  [BUGGY]      pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	261	261	2	replace	if(stackSize  >  0)  {  nextIgnoreWhitespace();  }	  if(stackSize    >    0)    {    nextName();    }    	non-compiled	[CE]  cannot  find  symbol	191	None	replace
1544	[BUG]  [BUGGY]  connectToPeek(JsonToken.NAME,  JsonToken.START_ARRAY);  [CE]  cannot  find  symbol  START_ARRAY  [FE]                      ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {      [BUGGY]  connectToPeek(JsonToken.NAME,  JsonToken.START_ARRAY);  [BUGGY]      pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	261	261	2	replace	connectToPeek(JsonToken.NAME,  JsonToken.START_ARRAY);	  connectToPeek(JsonToken.NAME);    	non-compiled	[CE]  cannot  find  symbol  START_ARRAY	44	None	replace
1545	[BUG]  [BUGGY]  connectToPeek(JsonToken.NAME,  JsonToken.VALUE_NULL);  [CE]  cannot  find  symbol  VALUE_NULL  [FE]                        ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {      [BUGGY]  connectToPeek(JsonToken.NAME,  JsonToken.VALUE_NULL);  [BUGGY]      pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	261	261	2	replace	connectToPeek(JsonToken.NAME,  JsonToken.VALUE_NULL);	  connectToPeek(JsonToken.NAME);    	non-compiled	[CE]  cannot  find  symbol  VALUE_NULL	44	None	replace
1546	[BUG]  [BUGGY]  _reportError( "Current  token( "+getClass().getName()  + ")not  an  IllegalArgumentException ");  [CE]  cannot  find  symbol  [FE]              ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {      [BUGGY]  _reportError( "Current  token( "+getClass().getName()  + ")not  an  IllegalArgumentException ");  [BUGGY]      pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	261	261	2	replace	_reportError( "Current  token( "+getClass().getName()  + ")not  an  IllegalArgumentException ");	  _throwUnsupportedOperation();    	non-compiled	[CE]  cannot  find  symbol	63	None	replace
1547	[BUG]  [BUGGY]  _reportError( "Current  token( "+getClass().getName()  + ")not  an  IllegalStateException ");  [CE]  cannot  find  symbol  [FE]                ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {      [BUGGY]  _reportError( "Current  token( "+getClass().getName()  + ")not  an  IllegalStateException ");  [BUGGY]      pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	261	261	2	replace	_reportError( "Current  token( "+getClass().getName()  + ")not  an  IllegalStateException ");	  _throwUnsupportedOperation();    	non-compiled	[CE]  cannot  find  symbol	63	None	replace
1548	[BUG]  [BUGGY]  _throwUnsupportedOperation(JsonToken.VALUE_EMBEDDED_OBJECT);  [CE]  cannot  find  symbol  VALUE_EMBEDDED_OBJECT  [FE]                  ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {      [BUGGY]  _throwUnsupportedOperation(JsonToken.VALUE_EMBEDDED_OBJECT);  [BUGGY]      pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	261	261	2	replace	_throwUnsupportedOperation(JsonToken.VALUE_EMBEDDED_OBJECT);	  _throwUnsupportedOperation();    	non-compiled	[CE]  cannot  find  symbol  VALUE_EMBEDDED_OBJECT	63	None	replace
1549	[BUG]  [BUGGY]  _reportError( "Current  token( "+getClass().getName()  + ")not  an  IllegalArgumentException. ");  [CE]  cannot  find  symbol  [FE]                    ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {      [BUGGY]  _reportError( "Current  token( "+getClass().getName()  + ")not  an  IllegalArgumentException. ");  [BUGGY]      pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	261	261	2	replace	_reportError( "Current  token( "+getClass().getName()  + ")not  an  IllegalArgumentException. ");	  _throwUnsupportedOperation();    	non-compiled	[CE]  cannot  find  symbol	63	None	replace
1550	[BUG]  [BUGGY]  _reportError( "Current  token( "+getMessage()  + ")not  a  value, ",  JsonToken.END_OBJECT);  [CE]  cannot  find  symbol  [FE]                    ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {      [BUGGY]  _reportError( "Current  token( "+getMessage()  + ")not  a  value, ",  JsonToken.END_OBJECT);  [BUGGY]      pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	261	261	2	replace	_reportError( "Current  token( "+getMessage()  + ")not  a  value, ",  JsonToken.END_OBJECT);	  _reportError(   "Current    token(   "+getMessage()    +   ")not    a    value   ",    JsonToken.END_OBJECT);    	non-compiled	[CE]  cannot  find  symbol	31	None	replace
1551	[BUG]  [BUGGY]  [FE]  ArrayIndexOutOfBoundsException  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {      [BUGGY]  if(stackSize    >    0)    {    popStack();    }    if(stackSize  >  0)  {  popStack();  }  if(stackSize  >=  0)  {  popStack();  }  if(stackSize  >  0)  {  popStack();  }  [BUGGY]      pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	261	261	2	add	if(stackSize        >        0)        {        popStack();        }        if(stackSize    >    0)    {    popStack();    }    if(stackSize  >=  0)  {  popStack();  }  if(stackSize  >  0)  {  popStack();  }	  	compilable	  [FE]  ArrayIndexOutOfBoundsException  	84	2	add
1552	[BUG]  [BUGGY]  if(stackSize    >    0)    {    popStack();    }    if(stackSize  >  0)  {  popStack();  }  if(stackSize  >=  0)  {  popStack();  }  if(stackSize  >  0)  {  popStack();  }  [FE]  ArrayIndexOutOfBoundsException  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {      [BUGGY]  if(stackSize    >    0)    {    popStack();    }    if(stackSize  >  0)  {  popStack();  }  if(stackSize  >=  0)  {  popStack();  }  if(stackSize  >  0)  {  popStack();  }  [BUGGY]      pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	261	261	2	replace	if(stackSize        >        0)        {        popStack();        }        if(stackSize    >    0)    {    popStack();    }    if(stackSize  >=  0)  {  popStack();  }  if(stackSize  >  0)  {  popStack();  }	  	compilable	  [FE]  ArrayIndexOutOfBoundsException  	84	2	add
1553	[BUG]  [BUGGY]  [FE]  ArrayIndexOutOfBoundsException  [FE]      ArrayIndexOutOfBoundsException    [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {      [BUGGY]  if(stackSize    >    0)    {    popStack();    }    if(stackSize  >  0)  {  popStack();  }  if(stackSize  ==  0)  {  popStack();  }  if(stackSize  >  0)  {  popStack();  }  [BUGGY]      pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	261	261	2	add	if(stackSize        >        0)        {        popStack();        }        if(stackSize    >    0)    {    popStack();    }    if(stackSize  ==  0)  {  popStack();  }  if(stackSize  >  0)  {  popStack();  }	  	compilable	  [FE]  ArrayIndexOutOfBoundsException  	84	2	add
1554	[BUG]  [BUGGY]  if(stackSize    >    0)    {    popStack();    }    if(stackSize  >  0)  {  popStack();  }  if(stackSize  ==  0)  {  popStack();  }  if(stackSize  >  0)  {  popStack();  }  [FE]  ArrayIndexOutOfBoundsException  [FE]      ArrayIndexOutOfBoundsException    [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {      [BUGGY]  if(stackSize    >    0)    {    popStack();    }    if(stackSize  >  0)  {  popStack();  }  if(stackSize  ==  0)  {  popStack();  }  if(stackSize  >  0)  {  popStack();  }  [BUGGY]      pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	261	261	2	replace	if(stackSize        >        0)        {        popStack();        }        if(stackSize    >    0)    {    popStack();    }    if(stackSize  ==  0)  {  popStack();  }  if(stackSize  >  0)  {  popStack();  }	  	compilable	  [FE]  ArrayIndexOutOfBoundsException  	84	2	add
1555	[BUG]  [BUGGY]  connectToPossibleExceptionHandler(null,  JsonToken.START_OBJECT,  START_CLOSED);  [CE]  cannot  find  symbol  START_OBJECT  [FE]                    ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {      [BUGGY]  connectToPossibleExceptionHandler(null,  JsonToken.START_OBJECT,  START_CLOSED);  [BUGGY]      pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	261	261	2	replace	connectToPossibleExceptionHandler(null,  JsonToken.START_OBJECT,  START_CLOSED);	  connectToPossibleExceptionHandler(null,    JsonToken.START_OBJECT);    	non-compiled	[CE]  cannot  find  symbol  START_OBJECT	8	None	replace
1556	[BUG]  [BUGGY]  PathIndices  pathIndices[stackSize  -  1]  =(pathNames[stackSize  -  1]  ==  null)? "null "  :  pathNames[stackSize  -  1];  [CE]  [FE]            AssertionFailedError      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {      [BUGGY]  PathIndices  pathIndices[stackSize  -  1]  =(pathNames[stackSize  -  1]  ==  null)? "null "  :  pathNames[stackSize  -  1];  [BUGGY]      pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	261	261	2	replace	PathIndices  pathIndices[stackSize  -  1]  =(pathNames[stackSize  -  1]  ==  null)? "null "  :  pathNames[stackSize  -  1];	  PathIndices    pathIndices[stackSize    -    1]    =       "null   ";    	non-compiled	[CE]  	43	None	replace
1557	[BUG]  [BUGGY]  PathIndices  pathIndices[stackSize  -  1]  =(pathNames[stackSize  -  1]  ==  null)? "null "  :  pathNames[stackSize  -  1]);  [CE]  [FE]              AssertionFailedError      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {      [BUGGY]  PathIndices  pathIndices[stackSize  -  1]  =(pathNames[stackSize  -  1]  ==  null)? "null "  :  pathNames[stackSize  -  1]);  [BUGGY]      pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	261	261	2	replace	PathIndices  pathIndices[stackSize  -  1]  =(pathNames[stackSize  -  1]  ==  null)? "null "  :  pathNames[stackSize  -  1]);	  PathIndices    pathIndices[stackSize    -    1]    =       "null   ";    	non-compiled	[CE]  	43	None	replace
1558	[BUG]  [BUGGY]  pathIndices[stackSize  -  1]  =  NULL;  [CE]  cannot  find  symbol  NULL  [FE]                        ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {      [BUGGY]  pathIndices[stackSize  -  1]  =  NULL;  [BUGGY]      pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	261	261	2	replace	pathIndices[stackSize  -  1]  =  NULL;	  pathIndices[stackSize    -    1]    =    null;    	non-compiled	[CE]  cannot  find  symbol  NULL	19	None	replace
1559	[BUG]  [BUGGY]  _reportError( "Current  token( "+getMessage()  + ")was  expecting  a  value ",  stackSize  -  1);  [CE]  cannot  find  symbol  [FE]                  ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {      [BUGGY]  _reportError( "Current  token( "+getMessage()  + ")was  expecting  a  value ",  stackSize  -  1);  [BUGGY]      pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	261	261	2	replace	_reportError( "Current  token( "+getMessage()  + ")was  expecting  a  value ",  stackSize  -  1);	  _reportError(   "Current    token(   "+getMessage()    +   ")was    expecting    a    value   ");    	non-compiled	[CE]  cannot  find  symbol	144	None	replace
1560	[BUG]  [BUGGY]  _reportError( "Current  token( "+getMessage()  + ")was  expecting  a  value, ");  [CE]  cannot  find  symbol  [FE]                    ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {      [BUGGY]  _reportError( "Current  token( "+getMessage()  + ")was  expecting  a  value, ");  [BUGGY]      pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	261	261	2	replace	_reportError( "Current  token( "+getMessage()  + ")was  expecting  a  value, ");	  _reportError(   "Current    token(   "+getMessage()    +   ")was    expecting    a    value   ");    	non-compiled	[CE]  cannot  find  symbol	144	None	replace
1561	[BUG]  [BUGGY]  _reportError( "Current  token( "+JsonToken.VALUE_NULL+ ")not  a  valid  argument. ");  [CE]  cannot  find  symbol  VALUE_NULL  [FE]                ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {      [BUGGY]  _reportError( "Current  token( "+JsonToken.VALUE_NULL+ ")not  a  valid  argument. ");  [BUGGY]      pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	261	261	2	replace	_reportError( "Current  token( "+JsonToken.VALUE_NULL+ ")not  a  valid  argument. ");	  _throwInternal();    	non-compiled	[CE]  cannot  find  symbol  VALUE_NULL	64	None	replace
1562	[BUG]  [BUGGY]  _reportError( "Current  token( "+JsonToken.VALUE_EMBEDDED_OBJECT+ ")not  a  value ");  [CE]  cannot  find  symbol  VALUE_EMBEDDED_OBJECT  [FE]                  ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {      [BUGGY]  _reportError( "Current  token( "+JsonToken.VALUE_EMBEDDED_OBJECT+ ")not  a  value ");  [BUGGY]      pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	261	261	2	replace	_reportError( "Current  token( "+JsonToken.VALUE_EMBEDDED_OBJECT+ ")not  a  value ");	  _throwInternal();    	non-compiled	[CE]  cannot  find  symbol  VALUE_EMBEDDED_OBJECT	64	None	replace
1563	[BUG]  [BUGGY]  _reportError( "Current  token( "+JsonToken.VALUE_NUMBER_INT+ ")not  a  valid  argument. ");  [CE]  cannot  find  symbol  VALUE_NUMBER_INT  [FE]                    ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {      [BUGGY]  _reportError( "Current  token( "+JsonToken.VALUE_NUMBER_INT+ ")not  a  valid  argument. ");  [BUGGY]      pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	261	261	2	replace	_reportError( "Current  token( "+JsonToken.VALUE_NUMBER_INT+ ")not  a  valid  argument. ");	  _throwInternal();    	non-compiled	[CE]  cannot  find  symbol  VALUE_NUMBER_INT	64	None	replace
1564	[BUG]  [BUGGY]  _reportError( "Current  token( "+JsonToken.VALUE_EMBEDDED_OBJECT+ ")not  a  valid  argument. ");  [CE]  cannot  find  symbol  VALUE_EMBEDDED_OBJECT  [FE]                      ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {      [BUGGY]  _reportError( "Current  token( "+JsonToken.VALUE_EMBEDDED_OBJECT+ ")not  a  valid  argument. ");  [BUGGY]      pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	261	261	2	replace	_reportError( "Current  token( "+JsonToken.VALUE_EMBEDDED_OBJECT+ ")not  a  valid  argument. ");	  _throwInternal();    	non-compiled	[CE]  cannot  find  symbol  VALUE_EMBEDDED_OBJECT	64	None	replace
1565	[BUG]  [BUGGY]  _reportError( "Current  token( "+JsonToken.VALUE_NUMBER_INT+ ")not  a  value ");  [CE]  cannot  find  symbol  VALUE_NUMBER_INT  [FE]                        ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {      [BUGGY]  _reportError( "Current  token( "+JsonToken.VALUE_NUMBER_INT+ ")not  a  value ");  [BUGGY]      pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	261	261	2	replace	_reportError( "Current  token( "+JsonToken.VALUE_NUMBER_INT+ ")not  a  value ");	  _throwInternal();    	non-compiled	[CE]  cannot  find  symbol  VALUE_NUMBER_INT	64	None	replace
1566	[BUG]  [BUGGY]  connectToPossibleExceptionHandler(false,  JsonToken.END_ARRAY);  [CE]  cannot  find  symbol  [FE]                ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {      [BUGGY]  connectToPossibleExceptionHandler(false,  JsonToken.END_ARRAY);  [BUGGY]      pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	261	261	2	replace	connectToPossibleExceptionHandler(false,  JsonToken.END_ARRAY);	  connectToPossibleExceptionHandler(false);    	non-compiled	[CE]  cannot  find  symbol	114	None	replace
1567	[BUG]  [BUGGY]  connectToPossibleExceptionHandler(false,  JsonToken.VALUE_EMBEDDED);  [CE]  cannot  find  symbol  VALUE_EMBEDDED  [FE]                  ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {      [BUGGY]  connectToPossibleExceptionHandler(false,  JsonToken.VALUE_EMBEDDED);  [BUGGY]      pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	261	261	2	replace	connectToPossibleExceptionHandler(false,  JsonToken.VALUE_EMBEDDED);	  connectToPossibleExceptionHandler(false);    	non-compiled	[CE]  cannot  find  symbol  VALUE_EMBEDDED	114	None	replace
1568	[BUG]  [BUGGY]  peek();  if(peek()  ==  JsonToken.VALUE_NULL)  {  nextName();  pathNames[stackSize  -  1]  =   "null ";  }  else  {  peek();  }  [CE]  cannot  find  symbol  VALUE_NULL  [FE]    AssertionFailedError    [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {      [BUGGY]  peek();  if(peek()  ==  JsonToken.VALUE_NULL)  {  nextName();  pathNames[stackSize  -  1]  =   "null ";  }  else  {  peek();  }  [BUGGY]      pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	261	261	2	replace	peek();    if(peek()  ==  JsonToken.VALUE_NULL)  {  nextName();  pathNames[stackSize  -  1]  =   "null ";  }  else  {  peek();  }	  	non-compiled	[CE]  cannot  find  symbol  VALUE_NULL	58	None	add
1569	[BUG]  [BUGGY]  StackTrace  <  =  0)  {  popStack();  }  else  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  type  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {      [BUGGY]  StackTrace  <  =  0)  {  popStack();  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	261	261	2	replace	StackTrace  <  =  0)  {  popStack();  }  else  {  throw  new  IllegalArgumentException( " ");  }	  if(stackSize    >=    0)    {    popStack();    }    else    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  type	180	None	replace
1570	[BUG]  [BUGGY]  validateValue(JsonToken.VALUE_NULL,  result);  [CE]  cannot  find  symbol  VALUE_NULL  [FE]                    ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {      [BUGGY]  validateValue(JsonToken.VALUE_NULL,  result);  [BUGGY]      pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	261	261	2	replace	validateValue(JsonToken.VALUE_NULL,  result);	  validateValue(JsonToken.VALUE_NULL);    	non-compiled	[CE]  cannot  find  symbol  VALUE_NULL	96	None	replace
1571	[BUG]  [BUGGY]  validateValue(JsonToken.VALUE_NULL,  JsonToken.END_ARRAY);  [CE]  cannot  find  symbol  VALUE_NULL  [FE]                      ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {      [BUGGY]  validateValue(JsonToken.VALUE_NULL,  JsonToken.END_ARRAY);  [BUGGY]      pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	261	261	2	replace	validateValue(JsonToken.VALUE_NULL,  JsonToken.END_ARRAY);	  validateValue(JsonToken.VALUE_NULL);    	non-compiled	[CE]  cannot  find  symbol  VALUE_NULL	96	None	replace
1572	[BUG]  [BUGGY]  JsonToken.VALUE_NULL  =  new  JsonToken(JsonToken.FIELD_NAME);  pathNames[stackSize  -  1]  =   "null ";  [CE]  cannot  find  symbol  VALUE_NULL  [FE]                ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {      [BUGGY]  JsonToken.VALUE_NULL  =  new  JsonToken(JsonToken.FIELD_NAME);  pathNames[stackSize  -  1]  =   "null ";  [BUGGY]      pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	261	261	2	replace	JsonToken.VALUE_NULL  =  new  JsonToken(JsonToken.FIELD_NAME);  pathNames[stackSize  -  1]  =   "null ";	  JsonToken.VALUE_NULL    =    new    JsonToken(JsonToken.FIELD_NAME);    pathNames[stackSize    -    1]    =    null;    	non-compiled	[CE]  cannot  find  symbol  VALUE_NULL	188	None	replace
1573	[BUG]  [BUGGY]  JsonToken.VALUE_NULL  =  new  JsonToken(JsonToken.VALUE_NULL);  pathNames[stackSize  -  1]  =  null;  [CE]  cannot  find  symbol  VALUE_NULL  [FE]                  ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {      [BUGGY]  JsonToken.VALUE_NULL  =  new  JsonToken(JsonToken.VALUE_NULL);  pathNames[stackSize  -  1]  =  null;  [BUGGY]      pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	261	261	2	replace	JsonToken.VALUE_NULL  =  new  JsonToken(JsonToken.VALUE_NULL);  pathNames[stackSize  -  1]  =  null;	  JsonToken.VALUE_NULL    =    new    JsonToken(JsonToken.FIELD_NAME);    pathNames[stackSize    -    1]    =    null;    	non-compiled	[CE]  cannot  find  symbol  VALUE_NULL	188	None	replace
1574	[BUG]  [BUGGY]  append(JsonToken.VALUE_NUMBER_INT,  JsonToken.VALUE_NUMBER_FLOAT);  [CE]  cannot  find  symbol  VALUE_NUMBER_INT  [FE]                  ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {      [BUGGY]  append(JsonToken.VALUE_NUMBER_INT,  JsonToken.VALUE_NUMBER_FLOAT);  [BUGGY]      pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	261	261	2	replace	append(JsonToken.VALUE_NUMBER_INT,  JsonToken.VALUE_NUMBER_FLOAT);	  hop();    	non-compiled	[CE]  cannot  find  symbol  VALUE_NUMBER_INT	62	None	replace
1575	[BUG]  [BUGGY]  append(JsonToken.VALUE_NUMBER_INT,  JsonToken.VALUE_NUMBER_INT);  [CE]  cannot  find  symbol  VALUE_NUMBER_INT  [FE]                    ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {      [BUGGY]  append(JsonToken.VALUE_NUMBER_INT,  JsonToken.VALUE_NUMBER_INT);  [BUGGY]      pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	261	261	2	replace	append(JsonToken.VALUE_NUMBER_INT,  JsonToken.VALUE_NUMBER_INT);	  hop();    	non-compiled	[CE]  cannot  find  symbol  VALUE_NUMBER_INT	62	None	replace
1576	[BUG]  [BUGGY]  append(JsonToken.VALUE_NUMBER_INT,  JsonToken.VALUE_NUMBER_FALSE);  [CE]  cannot  find  symbol  VALUE_NUMBER_INT  [FE]                      ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {      [BUGGY]  append(JsonToken.VALUE_NUMBER_INT,  JsonToken.VALUE_NUMBER_FALSE);  [BUGGY]      pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	261	261	2	replace	append(JsonToken.VALUE_NUMBER_INT,  JsonToken.VALUE_NUMBER_FALSE);	  hop();    	non-compiled	[CE]  cannot  find  symbol  VALUE_NUMBER_INT	62	None	replace
1577	[BUG]  [BUGGY]  append(JsonToken.VALUE_NULL);  [CE]  cannot  find  symbol  VALUE_NULL  [FE]                        ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {      [BUGGY]  append(JsonToken.VALUE_NULL);  [BUGGY]      pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	261	261	2	replace	append(JsonToken.VALUE_NULL);	  hop();    	non-compiled	[CE]  cannot  find  symbol  VALUE_NULL	62	None	replace
1578	[BUG]  [BUGGY]  append(JsonToken.VALUE_EMBEDDED_OBJECT);  [CE]  cannot  find  symbol  VALUE_EMBEDDED_OBJECT  [FE]                          ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {      [BUGGY]  append(JsonToken.VALUE_EMBEDDED_OBJECT);  [BUGGY]      pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	261	261	2	replace	append(JsonToken.VALUE_EMBEDDED_OBJECT);	  hop();    	non-compiled	[CE]  cannot  find  symbol  VALUE_EMBEDDED_OBJECT	62	None	replace
1579	[BUG]  [BUGGY]  [FE]  IllegalArgumentException  [FE]    IllegalArgumentException    [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {      [BUGGY]  if(stackSize    >    0)    {    popStack();    }    else    {    throw    new    IllegalArgumentException(     "     ");    }    if(stackSize  >  0)  {  popStack();  }  else  {  throw  new  IllegalArgumentException(   ".   ");  }  if(stackSize  <  0)  {  popStack();  }  else  {  throw  new  IllegalArgumentException( ".   ");  }  [BUGGY]      pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	261	261	2	add	if(stackSize        >        0)        {        popStack();        }        else        {        throw        new        IllegalArgumentException(       "       ");        }        if(stackSize    >    0)    {    popStack();    }    else    {    throw    new    IllegalArgumentException(   ".   ");    }    if(stackSize  <  0)  {  popStack();  }  else  {  throw  new  IllegalArgumentException( ".   ");  }	  	compilable	  [FE]  IllegalArgumentException  	13	2	add
1580	[BUG]  [BUGGY]  if(stackSize    >    0)    {    popStack();    }    else    {    throw    new    IllegalArgumentException(     "     ");    }    if(stackSize  >  0)  {  popStack();  }  else  {  throw  new  IllegalArgumentException(   ".   ");  }  if(stackSize  <  0)  {  popStack();  }  else  {  throw  new  IllegalArgumentException( ".   ");  }  [FE]  IllegalArgumentException  [FE]    IllegalArgumentException    [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {      [BUGGY]  if(stackSize    >    0)    {    popStack();    }    else    {    throw    new    IllegalArgumentException(     "     ");    }    if(stackSize  >  0)  {  popStack();  }  else  {  throw  new  IllegalArgumentException(   ".   ");  }  if(stackSize  <  0)  {  popStack();  }  else  {  throw  new  IllegalArgumentException( ".   ");  }  [BUGGY]      pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	261	261	2	replace	if(stackSize        >        0)        {        popStack();        }        else        {        throw        new        IllegalArgumentException(       "       ");        }        if(stackSize    >    0)    {    popStack();    }    else    {    throw    new    IllegalArgumentException(   ".   ");    }    if(stackSize  <  0)  {  popStack();  }  else  {  throw  new  IllegalArgumentException( ".   ");  }	  	compilable	  [FE]  IllegalArgumentException  	13	2	add
1581	[BUG]  [BUGGY]  [FE]  IllegalArgumentException  [FE]      IllegalArgumentException    [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {      [BUGGY]  if(stackSize    >    0)    {    popStack();    }    else    {    throw    new    IllegalArgumentException(     "     ");    }    if(stackSize  >  0)  {  popStack();  }  else  {  throw  new  IllegalArgumentException(   ".   ");  }  if(stackSize  >=  0)  {  popStack();  }  else  {  throw  new  IllegalArgumentException( ".   ");  }  [BUGGY]      pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	261	261	2	add	if(stackSize        >        0)        {        popStack();        }        else        {        throw        new        IllegalArgumentException(       "       ");        }        if(stackSize    >    0)    {    popStack();    }    else    {    throw    new    IllegalArgumentException(   ".   ");    }    if(stackSize  >=  0)  {  popStack();  }  else  {  throw  new  IllegalArgumentException( ".   ");  }	  	compilable	  [FE]  IllegalArgumentException  	13	2	add
1582	[BUG]  [BUGGY]  if(stackSize    >    0)    {    popStack();    }    else    {    throw    new    IllegalArgumentException(     "     ");    }    if(stackSize  >  0)  {  popStack();  }  else  {  throw  new  IllegalArgumentException(   ".   ");  }  if(stackSize  >=  0)  {  popStack();  }  else  {  throw  new  IllegalArgumentException( ".   ");  }  [FE]  IllegalArgumentException  [FE]      IllegalArgumentException    [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {      [BUGGY]  if(stackSize    >    0)    {    popStack();    }    else    {    throw    new    IllegalArgumentException(     "     ");    }    if(stackSize  >  0)  {  popStack();  }  else  {  throw  new  IllegalArgumentException(   ".   ");  }  if(stackSize  >=  0)  {  popStack();  }  else  {  throw  new  IllegalArgumentException( ".   ");  }  [BUGGY]      pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	261	261	2	replace	if(stackSize        >        0)        {        popStack();        }        else        {        throw        new        IllegalArgumentException(       "       ");        }        if(stackSize    >    0)    {    popStack();    }    else    {    throw    new    IllegalArgumentException(   ".   ");    }    if(stackSize  >=  0)  {  popStack();  }  else  {  throw  new  IllegalArgumentException( ".   ");  }	  	compilable	  [FE]  IllegalArgumentException  	13	2	add
1583	[BUG]  [BUGGY]  connectToPossibleExceptionHandler(next(),  JsonToken.VALUE_EMBEDDED);  [CE]  cannot  find  symbol  [FE]                      ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {      [BUGGY]  connectToPossibleExceptionHandler(next(),  JsonToken.VALUE_EMBEDDED);  [BUGGY]      pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	261	261	2	replace	connectToPossibleExceptionHandler(next(),  JsonToken.VALUE_EMBEDDED);	  connectToPossibleExceptionHandler(throwInternal(),    JsonToken.VALUE_EMBEDDED);    	non-compiled	[CE]  cannot  find  symbol	186	None	replace
1584	[BUG]  [BUGGY]  _reportError( "Current  token( "+JsonToken.END_OBJECT+ ")not  a  value ",  JsonToken.END_OBJECT);  [CE]  cannot  find  symbol  [FE]                          ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {      [BUGGY]  _reportError( "Current  token( "+JsonToken.END_OBJECT+ ")not  a  value ",  JsonToken.END_OBJECT);  [BUGGY]      pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	261	261	2	replace	_reportError( "Current  token( "+JsonToken.END_OBJECT+ ")not  a  value ",  JsonToken.END_OBJECT);	  _reportError(   "Current    token(   "+JsonToken.END_OBJECT+   ")not    a    value   ");    	non-compiled	[CE]  cannot  find  symbol	130	None	replace
1585	[BUG]  [BUGGY]  _reportError( "Current  token( "+JsonToken.END_OBJECT+ ")not  a  value ",  JsonToken.END_ARRAY);  [CE]  cannot  find  symbol  [FE]                            ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {      [BUGGY]  _reportError( "Current  token( "+JsonToken.END_OBJECT+ ")not  a  value ",  JsonToken.END_ARRAY);  [BUGGY]      pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	261	261	2	replace	_reportError( "Current  token( "+JsonToken.END_OBJECT+ ")not  a  value ",  JsonToken.END_ARRAY);	  _reportError(   "Current    token(   "+JsonToken.END_OBJECT+   ")not    a    value   ");    	non-compiled	[CE]  cannot  find  symbol	130	None	replace
1586	[BUG]  [BUGGY]  if(stackSize  >  1)  {  popStack();  }  if(stackSize  >  1)  <  popStack();  }  [CE]  >  expected  [FE]    AssertionFailedError    [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {      [BUGGY]  if(stackSize  >  1)  {  popStack();  }  if(stackSize  >  1)  <  popStack();  }  [BUGGY]      pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	261	261	2	replace	if(stackSize    >    1)    {    popStack();    }    if(stackSize  >  1)  <  popStack();  }	  	non-compiled	[CE]  >  expected	192	None	add
1587	[BUG]  [BUGGY]  if(stackSize  >  1)  {  popStack();  }  if(stackSsize  >  1)  {  popStack();  }  [CE]  cannot  find  symbol  stackSsize  [FE]      AssertionFailedError    [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {      [BUGGY]  if(stackSize  >  1)  {  popStack();  }  if(stackSsize  >  1)  {  popStack();  }  [BUGGY]      pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	261	261	2	replace	if(stackSize    >    1)    {    popStack();    }    if(stackSsize  >  1)  {  popStack();  }	  	non-compiled	[CE]  cannot  find  symbol  stackSsize	192	None	add
1588	[BUG]  [BUGGY]  _reportError( "Current  token( "+getClass().getName()  + ")is  not  a  value ",  JsonToken.END_ARRAY);  [CE]  cannot  find  symbol  [FE]                    ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {      [BUGGY]  _reportError( "Current  token( "+getClass().getName()  + ")is  not  a  value ",  JsonToken.END_ARRAY);  [BUGGY]      pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	261	261	2	replace	_reportError( "Current  token( "+getClass().getName()  + ")is  not  a  value ",  JsonToken.END_ARRAY);	  _reportError(   "Current    token(   "+getClass().getName()    +   ")is    not    a    value   ");    	non-compiled	[CE]  cannot  find  symbol	28	None	replace
1589	[BUG]  [BUGGY]  connectToPossibleExceptionHandler(this,  exception);  [CE]  cannot  find  symbol  exception  [FE]                ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {      [BUGGY]  connectToPossibleExceptionHandler(this,  exception);  [BUGGY]      pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	261	261	2	replace	connectToPossibleExceptionHandler(this,  exception);	  connectToPossibleExceptionHandler(this);    	non-compiled	[CE]  cannot  find  symbol  exception	3	None	replace
1590	[BUG]  [BUGGY]  connectToPossibleExceptionHandler(this,  JsonToken.VALUE_EMBEDDED_OBJECT);  [CE]  cannot  find  symbol  VALUE_EMBEDDED_OBJECT  [FE]                  ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {      [BUGGY]  connectToPossibleExceptionHandler(this,  JsonToken.VALUE_EMBEDDED_OBJECT);  [BUGGY]      pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	261	261	2	replace	connectToPossibleExceptionHandler(this,  JsonToken.VALUE_EMBEDDED_OBJECT);	  connectToPossibleExceptionHandler(this);    	non-compiled	[CE]  cannot  find  symbol  VALUE_EMBEDDED_OBJECT	3	None	replace
1591	[BUG]  [BUGGY]  [FE]  ArrayIndexOutOfBoundsException  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {      [BUGGY]  if(stackSize    >    0)    {    popStack();    }    if(stackSize  >  0)  {  popStack();  System.arraycopy(pathNames,  0,  pathNames,  1,  stackSize);  }  if(stackSize  >  1)  {  popStack();  }  if(stackSize  >  0)  {  popStack();  System.arraycopy(pathNames,  0,  pathNames,  1,  stackSize);  }  [BUGGY]      pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	261	261	2	add	if(stackSize        >        0)        {        popStack();        }        if(stackSize    >    0)    {    popStack();    System.arraycopy(pathNames,    0,    pathNames,    1,    stackSize);    }    if(stackSize  >  1)  {  popStack();  }  if(stackSize  >  0)  {  popStack();  System.arraycopy(pathNames,  0,  pathNames,  1,  stackSize);  }	  	compilable	  [FE]  ArrayIndexOutOfBoundsException  	160	2	add
1592	[BUG]  [BUGGY]  if(stackSize    >    0)    {    popStack();    }    if(stackSize  >  0)  {  popStack();  System.arraycopy(pathNames,  0,  pathNames,  1,  stackSize);  }  if(stackSize  >  1)  {  popStack();  }  if(stackSize  >  0)  {  popStack();  System.arraycopy(pathNames,  0,  pathNames,  1,  stackSize);  }  [FE]  ArrayIndexOutOfBoundsException  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {      [BUGGY]  if(stackSize    >    0)    {    popStack();    }    if(stackSize  >  0)  {  popStack();  System.arraycopy(pathNames,  0,  pathNames,  1,  stackSize);  }  if(stackSize  >  1)  {  popStack();  }  if(stackSize  >  0)  {  popStack();  System.arraycopy(pathNames,  0,  pathNames,  1,  stackSize);  }  [BUGGY]      pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	261	261	2	replace	if(stackSize        >        0)        {        popStack();        }        if(stackSize    >    0)    {    popStack();    System.arraycopy(pathNames,    0,    pathNames,    1,    stackSize);    }    if(stackSize  >  1)  {  popStack();  }  if(stackSize  >  0)  {  popStack();  System.arraycopy(pathNames,  0,  pathNames,  1,  stackSize);  }	  	compilable	  [FE]  ArrayIndexOutOfBoundsException  	160	2	add
1593	[BUG]  [BUGGY]  [FE]  ArrayIndexOutOfBoundsException  [FE]      ArrayIndexOutOfBoundsException    [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {      [BUGGY]  if(stackSize    >    0)    {    popStack();    }    if(stackSize  >  0)  {  popStack();  System.arraycopy(pathNames,  0,  pathNames,  1,  stackSize);  }  if(stackSize  >=  0)  {  popStack();  }  if(stackSize  >  0)  {  popStack();  System.arraycopy(pathNames,  0,  pathNames,  1,  stackSize);  }  [BUGGY]      pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	261	261	2	add	if(stackSize        >        0)        {        popStack();        }        if(stackSize    >    0)    {    popStack();    System.arraycopy(pathNames,    0,    pathNames,    1,    stackSize);    }    if(stackSize  >=  0)  {  popStack();  }  if(stackSize  >  0)  {  popStack();  System.arraycopy(pathNames,  0,  pathNames,  1,  stackSize);  }	  	compilable	  [FE]  ArrayIndexOutOfBoundsException  	160	2	add
1594	[BUG]  [BUGGY]  if(stackSize    >    0)    {    popStack();    }    if(stackSize  >  0)  {  popStack();  System.arraycopy(pathNames,  0,  pathNames,  1,  stackSize);  }  if(stackSize  >=  0)  {  popStack();  }  if(stackSize  >  0)  {  popStack();  System.arraycopy(pathNames,  0,  pathNames,  1,  stackSize);  }  [FE]  ArrayIndexOutOfBoundsException  [FE]      ArrayIndexOutOfBoundsException    [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {      [BUGGY]  if(stackSize    >    0)    {    popStack();    }    if(stackSize  >  0)  {  popStack();  System.arraycopy(pathNames,  0,  pathNames,  1,  stackSize);  }  if(stackSize  >=  0)  {  popStack();  }  if(stackSize  >  0)  {  popStack();  System.arraycopy(pathNames,  0,  pathNames,  1,  stackSize);  }  [BUGGY]      pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	261	261	2	replace	if(stackSize        >        0)        {        popStack();        }        if(stackSize    >    0)    {    popStack();    System.arraycopy(pathNames,    0,    pathNames,    1,    stackSize);    }    if(stackSize  >=  0)  {  popStack();  }  if(stackSize  >  0)  {  popStack();  System.arraycopy(pathNames,  0,  pathNames,  1,  stackSize);  }	  	compilable	  [FE]  ArrayIndexOutOfBoundsException  	160	2	add
1595	[BUG]  [BUGGY]  _reportError( "Current  token( "+getMessage()  + ")not  a  value, ",  JsonToken.VALUE_NULL);  [CE]  cannot  find  symbol  [FE]                  ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {      [BUGGY]  _reportError( "Current  token( "+getMessage()  + ")not  a  value, ",  JsonToken.VALUE_NULL);  [BUGGY]      pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	261	261	2	replace	_reportError( "Current  token( "+getMessage()  + ")not  a  value, ",  JsonToken.VALUE_NULL);	  _reportError(   "Current    token(   "+getMessage()    +   ")not    a    value   ",    JsonToken.VALUE_NULL);    	non-compiled	[CE]  cannot  find  symbol	30	None	replace
1596	[BUG]  [BUGGY]  _reportError( "Current  token( "+JsonToken.NAME+ ")not  a  value ",  JsonToken.END_ARRAY);  [CE]  cannot  find  symbol  [FE]                      ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {      [BUGGY]  _reportError( "Current  token( "+JsonToken.NAME+ ")not  a  value ",  JsonToken.END_ARRAY);  [BUGGY]      pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	261	261	2	replace	_reportError( "Current  token( "+JsonToken.NAME+ ")not  a  value ",  JsonToken.END_ARRAY);	  _reportError(   "Current    token(   "+JsonToken.NAME+   ")not    a    value   ");    	non-compiled	[CE]  cannot  find  symbol	128	None	replace
1597	[BUG]  [BUGGY]  _reportError( "Current  token( "+JsonToken.NAME+ ")not  a  value ",  JsonToken.START_OBJECT);  [CE]  cannot  find  symbol  START_OBJECT  [FE]                        ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {      [BUGGY]  _reportError( "Current  token( "+JsonToken.NAME+ ")not  a  value ",  JsonToken.START_OBJECT);  [BUGGY]      pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	261	261	2	replace	_reportError( "Current  token( "+JsonToken.NAME+ ")not  a  value ",  JsonToken.START_OBJECT);	  _reportError(   "Current    token(   "+JsonToken.NAME+   ")not    a    value   ");    	non-compiled	[CE]  cannot  find  symbol  START_OBJECT	128	None	replace
1598	[BUG]  [BUGGY]  connectToPossibleExceptionHandler(pathNames,  exception);  [CE]  cannot  find  symbol  exception  [FE]                  ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {      [BUGGY]  connectToPossibleExceptionHandler(pathNames,  exception);  [BUGGY]      pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	261	261	2	replace	connectToPossibleExceptionHandler(pathNames,  exception);	  connectToPossibleExceptionHandler(pathNames);    	non-compiled	[CE]  cannot  find  symbol  exception	7	None	replace
1599	[BUG]  [BUGGY]  connectToPossibleExceptionHandler(ch,  pathNames);  [CE]  cannot  find  symbol  ch  [FE]                    ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {      [BUGGY]  connectToPossibleExceptionHandler(ch,  pathNames);  [BUGGY]      pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	261	261	2	replace	connectToPossibleExceptionHandler(ch,  pathNames);	  connectToPossibleExceptionHandler(pathNames);    	non-compiled	[CE]  cannot  find  symbol  ch	7	None	replace
1600	[BUG]  [BUGGY]  connectToPossibleExceptionHandler(pathNames,  JsonToken.VALUE_NULL);  [CE]  cannot  find  symbol  VALUE_NULL  [FE]                      ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {      [BUGGY]  connectToPossibleExceptionHandler(pathNames,  JsonToken.VALUE_NULL);  [BUGGY]      pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	261	261	2	replace	connectToPossibleExceptionHandler(pathNames,  JsonToken.VALUE_NULL);	  connectToPossibleExceptionHandler(pathNames);    	non-compiled	[CE]  cannot  find  symbol  VALUE_NULL	7	None	replace
1601	[BUG]  [BUGGY]  connectToPossibleExceptionHandler(this,  null,  null);  [CE]  cannot  find  symbol  [FE]                          ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {      [BUGGY]  connectToPossibleExceptionHandler(this,  null,  null);  [BUGGY]      pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	261	261	2	replace	connectToPossibleExceptionHandler(this,  null,  null);	  connectToPossibleExceptionHandler(null,    null,    null);    	non-compiled	[CE]  cannot  find  symbol	78	None	replace
1602	[BUG]  [BUGGY]  connectToPossibleExceptionHandler(null,  null,  null,  stackSize);  [CE]  cannot  find  symbol  [FE]                            ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {      [BUGGY]  connectToPossibleExceptionHandler(null,  null,  null,  stackSize);  [BUGGY]      pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	261	261	2	replace	connectToPossibleExceptionHandler(null,  null,  null,  stackSize);	  connectToPossibleExceptionHandler(null,    null,    null);    	non-compiled	[CE]  cannot  find  symbol	78	None	replace
1603	[BUG]  [BUGGY]  if(stackSize  <  0)  {  nextName();  }  else  {  skipStack();  }  [CE]  cannot  find  symbol  [FE]                ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {      [BUGGY]  if(stackSize  <  0)  {  nextName();  }  else  {  skipStack();  }  [BUGGY]      pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	261	261	2	replace	if(stackSize  <  0)  {  nextName();  }  else  {  skipStack();  }	  if(stackSize    >    0)    {    nextName();    }    else    {    skipStack();    }    	non-compiled	[CE]  cannot  find  symbol	165	None	replace
1604	[BUG]  [BUGGY]  Validate.notNull(pathNames[stackSize  -  1],  null);  [CE]  cannot  find  symbol  Validate  [FE]                    ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {      [BUGGY]  Validate.notNull(pathNames[stackSize  -  1],  null);  [BUGGY]      pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	261	261	2	replace	Validate.notNull(pathNames[stackSize  -  1],  null);	  Validate.notNull(pathNames[stackSize    -    1]);    	non-compiled	[CE]  cannot  find  symbol  Validate	201	None	replace
1605	[BUG]  [BUGGY]  Validate.notNull(pathNames[stackSize  -  1], "null ");  [CE]  cannot  find  symbol  Validate  [FE]                      ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {      [BUGGY]  Validate.notNull(pathNames[stackSize  -  1], "null ");  [BUGGY]      pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	261	261	2	replace	Validate.notNull(pathNames[stackSize  -  1], "null ");	  Validate.notNull(pathNames[stackSize    -    1]);    	non-compiled	[CE]  cannot  find  symbol  Validate	201	None	replace
1606	[BUG]  [BUGGY]  Validate.notNull(pathNames,  stack[stackSize  -  1]);  [CE]  cannot  find  symbol  Validate  [FE]                        ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {      [BUGGY]  Validate.notNull(pathNames,  stack[stackSize  -  1]);  [BUGGY]      pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	261	261	2	replace	Validate.notNull(pathNames,  stack[stackSize  -  1]);	  Validate.notNull(pathNames[stackSize    -    1]);    	non-compiled	[CE]  cannot  find  symbol  Validate	201	None	replace
1607	[BUG]  [BUGGY]  connectToPeek(JsonToken.VALUE_NUMBER_INT,  stackSize);  [CE]  cannot  find  symbol  VALUE_NUMBER_INT  [FE]                                ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {      [BUGGY]  connectToPeek(JsonToken.VALUE_NUMBER_INT,  stackSize);  [BUGGY]      pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	261	261	2	replace	connectToPeek(JsonToken.VALUE_NUMBER_INT,  stackSize);	  connectToPeek(JsonToken.VALUE_NUMBER_INT);    	non-compiled	[CE]  cannot  find  symbol  VALUE_NUMBER_INT	49	None	replace
1608	[BUG]  [BUGGY]  connectToPeek(JsonToken.VALUE_NUMBER_INT,  stackSize  -  1);  [CE]  cannot  find  symbol  VALUE_NUMBER_INT  [FE]                                  ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {      [BUGGY]  connectToPeek(JsonToken.VALUE_NUMBER_INT,  stackSize  -  1);  [BUGGY]      pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	261	261	2	replace	connectToPeek(JsonToken.VALUE_NUMBER_INT,  stackSize  -  1);	  connectToPeek(JsonToken.VALUE_NUMBER_INT);    	non-compiled	[CE]  cannot  find  symbol  VALUE_NUMBER_INT	49	None	replace
1609	[BUG]  [BUGGY]  connectToPeek(JsonToken.VALUE_NUMBER_INT,  JsonToken.VALUE_NUMBER_FIELD_NAMES));  [CE]  ';'  expected  [FE]                              ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {      [BUGGY]  connectToPeek(JsonToken.VALUE_NUMBER_INT,  JsonToken.VALUE_NUMBER_FIELD_NAMES));  [BUGGY]      pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	261	261	2	replace	connectToPeek(JsonToken.VALUE_NUMBER_INT,  JsonToken.VALUE_NUMBER_FIELD_NAMES));	  connectToPeek(JsonToken.VALUE_NUMBER_INT,    JsonToken.VALUE_NUMBER_INT));    	non-compiled	[CE]  ';'  expected	219	None	replace
1610	[BUG]  [BUGGY]  connectToPeek(JsonToken.VALUE_NUMBER_INT,  JsonToken.VALUE_NUMBER_DECEMBER));  [CE]  ';'  expected  [FE]                                ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {      [BUGGY]  connectToPeek(JsonToken.VALUE_NUMBER_INT,  JsonToken.VALUE_NUMBER_DECEMBER));  [BUGGY]      pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	261	261	2	replace	connectToPeek(JsonToken.VALUE_NUMBER_INT,  JsonToken.VALUE_NUMBER_DECEMBER));	  connectToPeek(JsonToken.VALUE_NUMBER_INT,    JsonToken.VALUE_NUMBER_INT));    	non-compiled	[CE]  ';'  expected	219	None	replace
1611	[BUG]  [BUGGY]  connectToPeek(JsonToken.VALUE_NUMBER_INT,  JsonToken.VALUE_NUMBER_ERROR,  pathNames);  [CE]  cannot  find  symbol  VALUE_NUMBER_INT  [FE]                            ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {      [BUGGY]  connectToPeek(JsonToken.VALUE_NUMBER_INT,  JsonToken.VALUE_NUMBER_ERROR,  pathNames);  [BUGGY]      pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	261	261	2	replace	connectToPeek(JsonToken.VALUE_NUMBER_INT,  JsonToken.VALUE_NUMBER_ERROR,  pathNames);	  connectToPeek(JsonToken.VALUE_NUMBER_INT,    JsonToken.VALUE_NUMBER_ERROR);    	non-compiled	[CE]  cannot  find  symbol  VALUE_NUMBER_INT	218	None	replace
1612	[BUG]  [BUGGY]  _reportError( "Current  token( "+getClass().getName()  + ")not  a  value,  expecting  a  value. ");  [CE]  cannot  find  symbol  [FE]            ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {      [BUGGY]  _reportError( "Current  token( "+getClass().getName()  + ")not  a  value,  expecting  a  value. ");  [BUGGY]      pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	261	261	2	replace	_reportError( "Current  token( "+getClass().getName()  + ")not  a  value,  expecting  a  value. ");	  _reportError(   "Current    token(   "+getClass().getName()    +   ")not    a    value.   ");    	non-compiled	[CE]  cannot  find  symbol	24	None	replace
1613	[BUG]  [BUGGY]  _reportError( "Current  token( "+getClass().getName()  + ")not  a  value.. ");  [CE]  cannot  find  symbol  [FE]              ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {      [BUGGY]  _reportError( "Current  token( "+getClass().getName()  + ")not  a  value.. ");  [BUGGY]      pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	261	261	2	replace	_reportError( "Current  token( "+getClass().getName()  + ")not  a  value.. ");	  _reportError(   "Current    token(   "+getClass().getName()    +   ")not    a    value.   ");    	non-compiled	[CE]  cannot  find  symbol	24	None	replace
1614	[BUG]  [BUGGY]  _reportError( "Current  token( "+getClass().getName()  + ")not  a  value: ");  [CE]  cannot  find  symbol  [FE]                ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {      [BUGGY]  _reportError( "Current  token( "+getClass().getName()  + ")not  a  value: ");  [BUGGY]      pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	261	261	2	replace	_reportError( "Current  token( "+getClass().getName()  + ")not  a  value: ");	  _reportError(   "Current    token(   "+getClass().getName()    +   ")not    a    value.   ");    	non-compiled	[CE]  cannot  find  symbol	24	None	replace
1615	[BUG]  [BUGGY]  [FE]  IllegalArgumentException  [FE]    IllegalArgumentException    [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {      [BUGGY]  if(stackSize    >    0)    {    popStack();    }    else    {    throw    new    IllegalArgumentException(     "     ");    }    if(stackSize  >  0)  {  popStack();  }  else  {  throw  new  IllegalArgumentException(   "...   ");  }  if(stackSize  <  0)  {  popStack();  }  else  {  throw  new  IllegalArgumentException( "...   ");  }  [BUGGY]      pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	261	261	2	add	if(stackSize        >        0)        {        popStack();        }        else        {        throw        new        IllegalArgumentException(       "       ");        }        if(stackSize    >    0)    {    popStack();    }    else    {    throw    new    IllegalArgumentException(   "...   ");    }    if(stackSize  <  0)  {  popStack();  }  else  {  throw  new  IllegalArgumentException( "...   ");  }	  	compilable	  [FE]  IllegalArgumentException  	15	2	add
1616	[BUG]  [BUGGY]  if(stackSize    >    0)    {    popStack();    }    else    {    throw    new    IllegalArgumentException(     "     ");    }    if(stackSize  >  0)  {  popStack();  }  else  {  throw  new  IllegalArgumentException(   "...   ");  }  if(stackSize  <  0)  {  popStack();  }  else  {  throw  new  IllegalArgumentException( "...   ");  }  [FE]  IllegalArgumentException  [FE]    IllegalArgumentException    [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {      [BUGGY]  if(stackSize    >    0)    {    popStack();    }    else    {    throw    new    IllegalArgumentException(     "     ");    }    if(stackSize  >  0)  {  popStack();  }  else  {  throw  new  IllegalArgumentException(   "...   ");  }  if(stackSize  <  0)  {  popStack();  }  else  {  throw  new  IllegalArgumentException( "...   ");  }  [BUGGY]      pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	261	261	2	replace	if(stackSize        >        0)        {        popStack();        }        else        {        throw        new        IllegalArgumentException(       "       ");        }        if(stackSize    >    0)    {    popStack();    }    else    {    throw    new    IllegalArgumentException(   "...   ");    }    if(stackSize  <  0)  {  popStack();  }  else  {  throw  new  IllegalArgumentException( "...   ");  }	  	compilable	  [FE]  IllegalArgumentException  	15	2	add
1617	[BUG]  [BUGGY]  [FE]  IllegalArgumentException  [FE]      IllegalArgumentException    [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {      [BUGGY]  if(stackSize    >    0)    {    popStack();    }    else    {    throw    new    IllegalArgumentException(     "     ");    }    if(stackSize  >  0)  {  popStack();  }  else  {  throw  new  IllegalArgumentException(   "...   ");  }  if(stackSize  >=  0)  {  popStack();  }  else  {  throw  new  IllegalArgumentException( "...   ");  }  [BUGGY]      pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	261	261	2	add	if(stackSize        >        0)        {        popStack();        }        else        {        throw        new        IllegalArgumentException(       "       ");        }        if(stackSize    >    0)    {    popStack();    }    else    {    throw    new    IllegalArgumentException(   "...   ");    }    if(stackSize  >=  0)  {  popStack();  }  else  {  throw  new  IllegalArgumentException( "...   ");  }	  	compilable	  [FE]  IllegalArgumentException  	15	2	add
1618	[BUG]  [BUGGY]  if(stackSize    >    0)    {    popStack();    }    else    {    throw    new    IllegalArgumentException(     "     ");    }    if(stackSize  >  0)  {  popStack();  }  else  {  throw  new  IllegalArgumentException(   "...   ");  }  if(stackSize  >=  0)  {  popStack();  }  else  {  throw  new  IllegalArgumentException( "...   ");  }  [FE]  IllegalArgumentException  [FE]      IllegalArgumentException    [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {      [BUGGY]  if(stackSize    >    0)    {    popStack();    }    else    {    throw    new    IllegalArgumentException(     "     ");    }    if(stackSize  >  0)  {  popStack();  }  else  {  throw  new  IllegalArgumentException(   "...   ");  }  if(stackSize  >=  0)  {  popStack();  }  else  {  throw  new  IllegalArgumentException( "...   ");  }  [BUGGY]      pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	261	261	2	replace	if(stackSize        >        0)        {        popStack();        }        else        {        throw        new        IllegalArgumentException(       "       ");        }        if(stackSize    >    0)    {    popStack();    }    else    {    throw    new    IllegalArgumentException(   "...   ");    }    if(stackSize  >=  0)  {  popStack();  }  else  {  throw  new  IllegalArgumentException( "...   ");  }	  	compilable	  [FE]  IllegalArgumentException  	15	2	add
1619	[BUG]  [BUGGY]  append(stackSize  +  1))  {  popStack();  }  else  {  skipStack();  }  [CE]  ';'  expected  [FE]                ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {      [BUGGY]  append(stackSize  +  1))  {  popStack();  }  else  {  skipStack();  }  [BUGGY]      pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	261	261	2	replace	append(stackSize  +  1))  {  popStack();  }  else  {  skipStack();  }	  if(stackSize    >=    0)    {    popStack();    }    else    {    skipStack();    }    	non-compiled	[CE]  ';'  expected	108	None	replace
1620	[BUG]  [BUGGY]  if(stackSize  >  0)  {  nextStack();  }  [CE]  cannot  find  symbol  [FE]            ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {      [BUGGY]  if(stackSize  >  0)  {  nextStack();  }  [BUGGY]      pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	261	261	2	replace	if(stackSize  >  0)  {  nextStack();  }	  if(stackSize    >    0)    {    popStack();    }    if(stackSsize    >    0)    {    popStack();    }    	non-compiled	[CE]  cannot  find  symbol	209	None	replace
1621	[BUG]  [BUGGY]  StackTree  <  NUMBER_OF_RANGE)  {  nextName();  }  else  {  skipStack();  }  [CE]  >  expected  [FE]                        ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {      [BUGGY]  StackTree  <  NUMBER_OF_RANGE)  {  nextName();  }  else  {  skipStack();  }  [BUGGY]      pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	261	261	2	replace	StackTree  <  NUMBER_OF_RANGE)  {  nextName();  }  else  {  skipStack();  }	  StackTree    <    NUMBER_OF_RANGE)    {    popStack();    }    else    {    skipStack();    }    	non-compiled	[CE]  >  expected	76	None	replace
1622	[BUG]  [BUGGY]  StackTree  <  NUMBER_OF_RANGE)  {  if(stackSize  >  0)  {  popStack();  }  [CE]  >  expected  [FE]                          ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {      [BUGGY]  StackTree  <  NUMBER_OF_RANGE)  {  if(stackSize  >  0)  {  popStack();  }  [BUGGY]      pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	261	261	2	replace	StackTree  <  NUMBER_OF_RANGE)  {  if(stackSize  >  0)  {  popStack();  }	  StackTree    <    NUMBER_OF_RANGE)    {    popStack();    }    else    {    skipStack();    }    	non-compiled	[CE]  >  expected	76	None	replace
1623	[BUG]  [BUGGY]  StackTree  <  NUMBER_OF_RANGE)  {  nextName();  }  [CE]  >  expected  [FE]                            ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {      [BUGGY]  StackTree  <  NUMBER_OF_RANGE)  {  nextName();  }  [BUGGY]      pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	261	261	2	replace	StackTree  <  NUMBER_OF_RANGE)  {  nextName();  }	  StackTree    <    NUMBER_OF_RANGE)    {    popStack();    }    else    {    skipStack();    }    	non-compiled	[CE]  >  expected	76	None	replace
1624	[BUG]  [BUGGY]  pathNames[stackSize  -  1]  =   "null ";  }  [CE]  ']'  expected  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {      [BUGGY]  pathNames[stackSize  -  1]  =   "null ";  }  [BUGGY]      pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	261	261	2	replace	pathNames[stackSize  -  1]  =   "null ";  }	          if(stackSize    >    0)    {    pathNames[stackSize    -    1]    =       "null   ";    }    	non-compiled	[CE]  ']'  expected	172	None	replace
1625	[BUG]  [BUGGY]  [FE]  ArrayIndexOutOfBoundsException  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {      [BUGGY]  if(stackSize  >  0)  {  popStack();  }  else  {  JsonToken  START_OBJECT  =  null;  pathNames[stackSize  -  1]  =   "null ";  }  [BUGGY]      pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	261	261	2	add	if(stackSize  >  0)  {  popStack();  }  else  {  JsonToken  START_OBJECT  =  null;  pathNames[stackSize  -  1]  =   "null ";  }	  if(stackSize    >    0)    {    popStack();    }    else    {    JsonToken    START_OBJECT    =    null;    nextName();    pathNames[stackSize    -    1]    =       "null   ";    }    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	133	2	replace
1626	[BUG]  [BUGGY]  if(stackSize  >  0)  {  popStack();  }  else  {  JsonToken  START_OBJECT  =  null;  pathNames[stackSize  -  1]  =   "null ";  }  [FE]  ArrayIndexOutOfBoundsException  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {      [BUGGY]  if(stackSize  >  0)  {  popStack();  }  else  {  JsonToken  START_OBJECT  =  null;  pathNames[stackSize  -  1]  =   "null ";  }  [BUGGY]      pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	261	261	2	replace	if(stackSize  >  0)  {  popStack();  }  else  {  JsonToken  START_OBJECT  =  null;  pathNames[stackSize  -  1]  =   "null ";  }	  if(stackSize    >    0)    {    popStack();    }    else    {    JsonToken    START_OBJECT    =    null;    nextName();    pathNames[stackSize    -    1]    =       "null   ";    }    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	133	2	replace
1627	[BUG]  [BUGGY]  connectToPossibleExceptionHandler(jsonToken.END_OBJECT,  JsonToken.END_ARRAY);  [CE]  cannot  find  symbol  jsonToken  [FE]                          ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {      [BUGGY]  connectToPossibleExceptionHandler(jsonToken.END_OBJECT,  JsonToken.END_ARRAY);  [BUGGY]      pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	261	261	2	replace	connectToPossibleExceptionHandler(jsonToken.END_OBJECT,  JsonToken.END_ARRAY);	  connectToPossibleExceptionHandler(throwInternal(),    JsonToken.END_OBJECT);    	non-compiled	[CE]  cannot  find  symbol  jsonToken	54	None	replace
1628	[BUG]  [BUGGY]  connectToPossibleExceptionHandler(start,  stackSize,  JsonToken.END_OBJECT);  [CE]  cannot  find  symbol  start  [FE]                            ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {      [BUGGY]  connectToPossibleExceptionHandler(start,  stackSize,  JsonToken.END_OBJECT);  [BUGGY]      pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	261	261	2	replace	connectToPossibleExceptionHandler(start,  stackSize,  JsonToken.END_OBJECT);	  connectToPossibleExceptionHandler(throwInternal(),    JsonToken.END_OBJECT);    	non-compiled	[CE]  cannot  find  symbol  start	54	None	replace
1629	[BUG]  [BUGGY]  Validate.isTrue(pathNames.length  ==  0);  [CE]  cannot  find  symbol  Validate  [FE]                    ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {      [BUGGY]  Validate.isTrue(pathNames.length  ==  0);  [BUGGY]      pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	261	261	2	replace	Validate.isTrue(pathNames.length  ==  0);	  Validate.notNull(stackNames);    	non-compiled	[CE]  cannot  find  symbol  Validate	102	None	replace
1630	[BUG]  [BUGGY]  Validate.isTrue(pathNames.length  ==  1);  [CE]  cannot  find  symbol  Validate  [FE]                      ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {      [BUGGY]  Validate.isTrue(pathNames.length  ==  1);  [BUGGY]      pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	261	261	2	replace	Validate.isTrue(pathNames.length  ==  1);	  Validate.notNull(stackNames);    	non-compiled	[CE]  cannot  find  symbol  Validate	102	None	replace
1631	[BUG]  [BUGGY]  [FE]  ArrayIndexOutOfBoundsException  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {      [BUGGY]  if(stackSize    >    0)    {    popStack();    }    if(stackSize  >  0)  {  popStack();  System.arraycopy(pathNames,  0,  pathNames,  1,  stackSize  -  1);  }  if(stackSize  <  0)  {  popStack();  }  if(stackSize  >  0)  {  popStack();  System.arraycopy(pathNames,  0,  pathNames,  1,  stackSize  -  1);  }  [BUGGY]      pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	261	261	2	add	if(stackSize        >        0)        {        popStack();        }        if(stackSize    >    0)    {    popStack();    System.arraycopy(pathNames,    0,    pathNames,    1,    stackSize    -    1);    }    if(stackSize  <  0)  {  popStack();  }  if(stackSize  >  0)  {  popStack();  System.arraycopy(pathNames,  0,  pathNames,  1,  stackSize  -  1);  }	  	compilable	  [FE]  ArrayIndexOutOfBoundsException  	156	2	add
1632	[BUG]  [BUGGY]  if(stackSize    >    0)    {    popStack();    }    if(stackSize  >  0)  {  popStack();  System.arraycopy(pathNames,  0,  pathNames,  1,  stackSize  -  1);  }  if(stackSize  <  0)  {  popStack();  }  if(stackSize  >  0)  {  popStack();  System.arraycopy(pathNames,  0,  pathNames,  1,  stackSize  -  1);  }  [FE]  ArrayIndexOutOfBoundsException  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {      [BUGGY]  if(stackSize    >    0)    {    popStack();    }    if(stackSize  >  0)  {  popStack();  System.arraycopy(pathNames,  0,  pathNames,  1,  stackSize  -  1);  }  if(stackSize  <  0)  {  popStack();  }  if(stackSize  >  0)  {  popStack();  System.arraycopy(pathNames,  0,  pathNames,  1,  stackSize  -  1);  }  [BUGGY]      pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	261	261	2	replace	if(stackSize        >        0)        {        popStack();        }        if(stackSize    >    0)    {    popStack();    System.arraycopy(pathNames,    0,    pathNames,    1,    stackSize    -    1);    }    if(stackSize  <  0)  {  popStack();  }  if(stackSize  >  0)  {  popStack();  System.arraycopy(pathNames,  0,  pathNames,  1,  stackSize  -  1);  }	  	compilable	  [FE]  ArrayIndexOutOfBoundsException  	156	2	add
1633	[BUG]  [BUGGY]  [FE]  ArrayIndexOutOfBoundsException  [FE]      ArrayIndexOutOfBoundsException    [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {      [BUGGY]  if(stackSize    >    0)    {    popStack();    }    if(stackSize  >  0)  {  popStack();  System.arraycopy(pathNames,  0,  pathNames,  1,  stackSize  -  1);  }  if(stackSize  >  1)  {  popStack();  }  if(stackSize  >  0)  {  popStack();  System.arraycopy(pathNames,  0,  pathNames,  1,  stackSize  -  1);  }  [BUGGY]      pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	261	261	2	add	if(stackSize        >        0)        {        popStack();        }        if(stackSize    >    0)    {    popStack();    System.arraycopy(pathNames,    0,    pathNames,    1,    stackSize    -    1);    }    if(stackSize  >  1)  {  popStack();  }  if(stackSize  >  0)  {  popStack();  System.arraycopy(pathNames,  0,  pathNames,  1,  stackSize  -  1);  }	  	compilable	  [FE]  ArrayIndexOutOfBoundsException  	156	2	add
1634	[BUG]  [BUGGY]  if(stackSize    >    0)    {    popStack();    }    if(stackSize  >  0)  {  popStack();  System.arraycopy(pathNames,  0,  pathNames,  1,  stackSize  -  1);  }  if(stackSize  >  1)  {  popStack();  }  if(stackSize  >  0)  {  popStack();  System.arraycopy(pathNames,  0,  pathNames,  1,  stackSize  -  1);  }  [FE]  ArrayIndexOutOfBoundsException  [FE]      ArrayIndexOutOfBoundsException    [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {      [BUGGY]  if(stackSize    >    0)    {    popStack();    }    if(stackSize  >  0)  {  popStack();  System.arraycopy(pathNames,  0,  pathNames,  1,  stackSize  -  1);  }  if(stackSize  >  1)  {  popStack();  }  if(stackSize  >  0)  {  popStack();  System.arraycopy(pathNames,  0,  pathNames,  1,  stackSize  -  1);  }  [BUGGY]      pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	261	261	2	replace	if(stackSize        >        0)        {        popStack();        }        if(stackSize    >    0)    {    popStack();    System.arraycopy(pathNames,    0,    pathNames,    1,    stackSize    -    1);    }    if(stackSize  >  1)  {  popStack();  }  if(stackSize  >  0)  {  popStack();  System.arraycopy(pathNames,  0,  pathNames,  1,  stackSize  -  1);  }	  	compilable	  [FE]  ArrayIndexOutOfBoundsException  	156	2	add
1635	[BUG]  [BUGGY]  connectToPeek(JsonToken.VALUE_NUMBER_INT,  JsonToken.VALUE_NUMBER_FOR,  stackSize);  [CE]  cannot  find  symbol  VALUE_NUMBER_INT  [FE]                          ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {      [BUGGY]  connectToPeek(JsonToken.VALUE_NUMBER_INT,  JsonToken.VALUE_NUMBER_FOR,  stackSize);  [BUGGY]      pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	261	261	2	replace	connectToPeek(JsonToken.VALUE_NUMBER_INT,  JsonToken.VALUE_NUMBER_FOR,  stackSize);	  connectToPeek(JsonToken.VALUE_NUMBER_INT,    JsonToken.VALUE_NUMBER_FOR);    	non-compiled	[CE]  cannot  find  symbol  VALUE_NUMBER_INT	217	None	replace
1636	[BUG]  [BUGGY]  connectToPeek(JsonToken.VALUE_NUMBER_INT,  JsonToken.VALUE_NUMBER_FOR,  0);  [CE]  cannot  find  symbol  VALUE_NUMBER_INT  [FE]                            ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {      [BUGGY]  connectToPeek(JsonToken.VALUE_NUMBER_INT,  JsonToken.VALUE_NUMBER_FOR,  0);  [BUGGY]      pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	261	261	2	replace	connectToPeek(JsonToken.VALUE_NUMBER_INT,  JsonToken.VALUE_NUMBER_FOR,  0);	  connectToPeek(JsonToken.VALUE_NUMBER_INT,    JsonToken.VALUE_NUMBER_FOR);    	non-compiled	[CE]  cannot  find  symbol  VALUE_NUMBER_INT	217	None	replace
1637	[BUG]  [BUGGY]  validateValue(JsonToken.VALUE_EMBEDDED_ARRAY,  stackSize);  [CE]  cannot  find  symbol  VALUE_EMBEDDED_ARRAY  [FE]                      ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {      [BUGGY]  validateValue(JsonToken.VALUE_EMBEDDED_ARRAY,  stackSize);  [BUGGY]      pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	261	261	2	replace	validateValue(JsonToken.VALUE_EMBEDDED_ARRAY,  stackSize);	  validateValue(JsonToken.VALUE_EMBEDDED_ARRAY);    	non-compiled	[CE]  cannot  find  symbol  VALUE_EMBEDDED_ARRAY	97	None	replace
1638	[BUG]  [BUGGY]  validateValue(JsonToken.VALUE_EMBEDDED_ARRAY,  true);  [CE]  cannot  find  symbol  VALUE_EMBEDDED_ARRAY  [FE]                        ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {      [BUGGY]  validateValue(JsonToken.VALUE_EMBEDDED_ARRAY,  true);  [BUGGY]      pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	261	261	2	replace	validateValue(JsonToken.VALUE_EMBEDDED_ARRAY,  true);	  validateValue(JsonToken.VALUE_EMBEDDED_ARRAY);    	non-compiled	[CE]  cannot  find  symbol  VALUE_EMBEDDED_ARRAY	97	None	replace
1639	[BUG]  [BUGGY]  validateValue(JsonToken.VALUE_EMBEDDED_ARRAY,  stackSize  -  1);  [CE]  cannot  find  symbol  VALUE_EMBEDDED_ARRAY  [FE]                          ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {      [BUGGY]  validateValue(JsonToken.VALUE_EMBEDDED_ARRAY,  stackSize  -  1);  [BUGGY]      pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	261	261	2	replace	validateValue(JsonToken.VALUE_EMBEDDED_ARRAY,  stackSize  -  1);	  validateValue(JsonToken.VALUE_EMBEDDED_ARRAY);    	non-compiled	[CE]  cannot  find  symbol  VALUE_EMBEDDED_ARRAY	97	None	replace
1640	[BUG]  [BUGGY]  JsonToken.START_OBJECT  =  next();  [CE]  cannot  find  symbol  START_OBJECT  [FE]                    ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {      [BUGGY]  JsonToken.START_OBJECT  =  next();  [BUGGY]      pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	261	261	2	replace	JsonToken.START_OBJECT  =  next();	  JsonToken.START_OBJECT;    	non-compiled	[CE]  cannot  find  symbol  START_OBJECT	66	None	replace
1641	[BUG]  [BUGGY]  if(pathIndices!=  null)  {  if(stackSize  >  1)  {  popStack();  }  [CE]  ';'  expected  [FE]          ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {      [BUGGY]  if(pathIndices!=  null)  {  if(stackSize  >  1)  {  popStack();  }  [BUGGY]      pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	261	261	2	replace	if(pathIndices!=  null)  {  if(stackSize  >  1)  {  popStack();  }	  if(stackSize    >    0)    {    popStack();    }    else    {    throw    new    IllegalArgumentException(       "       ");    }    if(stackSize    >    0)    {    popStack();    }    else    {    throw    new    IllegalArgumentException(   "   ".);    }    	non-compiled	[CE]  ';'  expected	12	None	replace
1642	[BUG]  [BUGGY]  _reportError( "Current  token( "+getClass().getName()  + ")not  a  value, ",  JsonToken.END_OBJECT);  [CE]  cannot  find  symbol  [FE]                ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {      [BUGGY]  _reportError( "Current  token( "+getClass().getName()  + ")not  a  value, ",  JsonToken.END_OBJECT);  [BUGGY]      pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	261	261	2	replace	_reportError( "Current  token( "+getClass().getName()  + ")not  a  value, ",  JsonToken.END_OBJECT);	  _reportError(   "Current    token(   "+getClass().getName()    +   ")not    a    value   ",    JsonToken.END_OBJECT);    	non-compiled	[CE]  cannot  find  symbol	26	None	replace
1643	[BUG]  [BUGGY]  ExceptionHandler.throwAsIOException( " ");  [CE]  cannot  find  symbol  ExceptionHandler  [FE]        ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {      [BUGGY]  ExceptionHandler.throwAsIOException( " ");  [BUGGY]      pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	261	261	2	replace	ExceptionHandler.throwAsIOException( " ");	  StackTrace();    	non-compiled	[CE]  cannot  find  symbol  ExceptionHandler	56	None	replace
1644	[BUG]  [BUGGY]  Arrays.sort(pathNames,  new  String[]  {  }  );  [CE]  cannot  find  symbol  Arrays  [FE]          ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {      [BUGGY]  Arrays.sort(pathNames,  new  String[]  {  }  );  [BUGGY]      pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	261	261	2	replace	Arrays.sort(pathNames,  new  String[]  {  }  );	  StackTrace();    	non-compiled	[CE]  cannot  find  symbol  Arrays	56	None	replace
1645	[BUG]  [BUGGY]  if(stackSize  >  0)  {  skipStackTrace();  }  else  {  skipStack();  }  [CE]  cannot  find  symbol  [FE]              ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {      [BUGGY]  if(stackSize  >  0)  {  skipStackTrace();  }  else  {  skipStack();  }  [BUGGY]      pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	261	261	2	replace	if(stackSize  >  0)  {  skipStackTrace();  }  else  {  skipStack();  }	  if(stackSize    >    0)    {    skipStack();    }    else    {    skipStack();    }    	non-compiled	[CE]  cannot  find  symbol	164	None	replace
1646	[BUG]  [BUGGY]  if(stackSize  >  0)  {  skipStackEmpty();  }  else  {  skipStack();  }  [CE]  cannot  find  symbol  [FE]                ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {      [BUGGY]  if(stackSize  >  0)  {  skipStackEmpty();  }  else  {  skipStack();  }  [BUGGY]      pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	261	261	2	replace	if(stackSize  >  0)  {  skipStackEmpty();  }  else  {  skipStack();  }	  if(stackSize    >    0)    {    skipStack();    }    else    {    skipStack();    }    	non-compiled	[CE]  cannot  find  symbol	164	None	replace
1647	[BUG]  [BUGGY]  if(stackSize  >  0)  {  skipStack();  }  [CE]  cannot  find  symbol  [FE]                  ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {      [BUGGY]  if(stackSize  >  0)  {  skipStack();  }  [BUGGY]      pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	261	261	2	replace	if(stackSize  >  0)  {  skipStack();  }	  if(stackSize    >    0)    {    skipStack();    }    else    {    skipStack();    }    	non-compiled	[CE]  cannot  find  symbol	164	None	replace
1648	[BUG]  [BUGGY]  StackTree  <  NUMBER_OF_RANGE  ||  stackSize  >  2)  {  popStack();  }  else  {  skipStack();  }  [CE]  >  expected  [FE]                      ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {      [BUGGY]  StackTree  <  NUMBER_OF_RANGE  ||  stackSize  >  2)  {  popStack();  }  else  {  skipStack();  }  [BUGGY]      pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	261	261	2	replace	StackTree  <  NUMBER_OF_RANGE  ||  stackSize  >  2)  {  popStack();  }  else  {  skipStack();  }	  StackTree    <    NUMBER_OF_RANGE    ||    stackSize    >    0)    {    popStack();    }    else    {    skipStack();    }    	non-compiled	[CE]  >  expected	75	None	replace
1649	[BUG]  [BUGGY]  JsonToken  t  =  _parseJsonToken(JsonToken.VALUE_NULL);  [CE]  cannot  find  symbol  VALUE_NULL  [FE]                    ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {      [BUGGY]  JsonToken  t  =  _parseJsonToken(JsonToken.VALUE_NULL);  [BUGGY]      pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	261	261	2	replace	JsonToken  t  =  _parseJsonToken(JsonToken.VALUE_NULL);	  JsonToken    t    =    _reportUnsupportedOperation();    	non-compiled	[CE]  cannot  find  symbol  VALUE_NULL	125	None	replace
1650	[BUG]  [BUGGY]  _reportError( "Current  token( "+getClass().getName()  + ")not  null, ",  JsonToken.END_ARRAY);  [CE]  cannot  find  symbol  [FE]                    ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {      [BUGGY]  _reportError( "Current  token( "+getClass().getName()  + ")not  null, ",  JsonToken.END_ARRAY);  [BUGGY]      pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	261	261	2	replace	_reportError( "Current  token( "+getClass().getName()  + ")not  null, ",  JsonToken.END_ARRAY);	  _reportError(   "Current    token(   "+getClass().getName()    +   ")not    null,   ");    	non-compiled	[CE]  cannot  find  symbol	116	None	replace
1651	[BUG]  [BUGGY]  _reportError( "Current  token( "+getClass().getName()  + ")Not  a  value ",  SENTINEL_CLOSED);  [CE]  cannot  find  symbol  [FE]                  ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {      [BUGGY]  _reportError( "Current  token( "+getClass().getName()  + ")Not  a  value ",  SENTINEL_CLOSED);  [BUGGY]      pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	261	261	2	replace	_reportError( "Current  token( "+getClass().getName()  + ")Not  a  value ",  SENTINEL_CLOSED);	  _reportError(   "Current    token(   "+getClass().getName()    +   ")Not    a    value   ");    	non-compiled	[CE]  cannot  find  symbol	27	None	replace
1652	[BUG]  [BUGGY]  _reportError( "Current  token( "+getClass().getName()  + ")Not  a  value ",  stackSize);  [CE]  cannot  find  symbol  [FE]                    ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {      [BUGGY]  _reportError( "Current  token( "+getClass().getName()  + ")Not  a  value ",  stackSize);  [BUGGY]      pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	261	261	2	replace	_reportError( "Current  token( "+getClass().getName()  + ")Not  a  value ",  stackSize);	  _reportError(   "Current    token(   "+getClass().getName()    +   ")Not    a    value   ");    	non-compiled	[CE]  cannot  find  symbol	27	None	replace
1653	[BUG]  [BUGGY]  Arrays.fill(pathNames,  new  String[]  {   "null "  }  );  [CE]  cannot  find  symbol  Arrays  [FE]              ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {      [BUGGY]  Arrays.fill(pathNames,  new  String[]  {   "null "  }  );  [BUGGY]      pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	261	261	2	replace	Arrays.fill(pathNames,  new  String[]  {   "null "  }  );	  PopStack();    	non-compiled	[CE]  cannot  find  symbol  Arrays	60	None	replace
1654	[BUG]  [BUGGY]  Arrays.fill(pathNames,  new  String[]  {   "null ",  JsonToken.VALUE_NULL  }  );  [CE]  cannot  find  symbol  VALUE_NULL  [FE]                ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {      [BUGGY]  Arrays.fill(pathNames,  new  String[]  {   "null ",  JsonToken.VALUE_NULL  }  );  [BUGGY]      pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	261	261	2	replace	Arrays.fill(pathNames,  new  String[]  {   "null ",  JsonToken.VALUE_NULL  }  );	  PopStack();    	non-compiled	[CE]  cannot  find  symbol  VALUE_NULL	60	None	replace
1655	[BUG]  [BUGGY]  Arrays.fill(pathNames,  new  String[]  {   "null "  +  JsonToken.VALUE_EMBEDDED_OBJECT  }  );  [CE]  cannot  find  symbol  VALUE_EMBEDDED_OBJECT  [FE]                  ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {      [BUGGY]  Arrays.fill(pathNames,  new  String[]  {   "null "  +  JsonToken.VALUE_EMBEDDED_OBJECT  }  );  [BUGGY]      pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	261	261	2	replace	Arrays.fill(pathNames,  new  String[]  {   "null "  +  JsonToken.VALUE_EMBEDDED_OBJECT  }  );	  PopStack();    	non-compiled	[CE]  cannot  find  symbol  VALUE_EMBEDDED_OBJECT	60	None	replace
1656	[BUG]  [BUGGY]  Arrays.fill(pathNames,  new  String[]  {   "null ", "null "  }  );  [CE]  cannot  find  symbol  Arrays  [FE]                    ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {      [BUGGY]  Arrays.fill(pathNames,  new  String[]  {   "null ", "null "  }  );  [BUGGY]      pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	261	261	2	replace	Arrays.fill(pathNames,  new  String[]  {   "null ", "null "  }  );	  PopStack();    	non-compiled	[CE]  cannot  find  symbol  Arrays	60	None	replace
1657	[BUG]  [BUGGY]  Arrays.fill(pathNames,  new  String[]  {   "null "  +  JsonToken.VALUE_NUMBER_INT  }  );  [CE]  cannot  find  symbol  VALUE_NUMBER_INT  [FE]                      ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {      [BUGGY]  Arrays.fill(pathNames,  new  String[]  {   "null "  +  JsonToken.VALUE_NUMBER_INT  }  );  [BUGGY]      pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	261	261	2	replace	Arrays.fill(pathNames,  new  String[]  {   "null "  +  JsonToken.VALUE_NUMBER_INT  }  );	  PopStack();    	non-compiled	[CE]  cannot  find  symbol  VALUE_NUMBER_INT	60	None	replace
1658	[BUG]  [BUGGY]  Arrays.fill(pathNames,  0,  stackSize);  [CE]  cannot  find  symbol  Arrays  [FE]                        ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {      [BUGGY]  Arrays.fill(pathNames,  0,  stackSize);  [BUGGY]      pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	261	261	2	replace	Arrays.fill(pathNames,  0,  stackSize);	  PopStack();    	non-compiled	[CE]  cannot  find  symbol  Arrays	60	None	replace
1659	[BUG]  [BUGGY]  [FE]  ArrayIndexOutOfBoundsException  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {      [BUGGY]  if(stackSize    >    0)    {    popStack();    }    if(stackSize  >  0)  {  popStack();  System.arraycopy(pathNames,  0,  pathNames,  0,  stackSize  -  1);  }  if(stackSize  <  0)  {  popStack();  }  if(stackSize  >  0)  {  popStack();  System.arraycopy(pathNames,  0,  pathNames,  0,  stackSize  -  1);  }  [BUGGY]      pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	261	261	2	add	if(stackSize        >        0)        {        popStack();        }        if(stackSize    >    0)    {    popStack();    System.arraycopy(pathNames,    0,    pathNames,    0,    stackSize    -    1);    }    if(stackSize  <  0)  {  popStack();  }  if(stackSize  >  0)  {  popStack();  System.arraycopy(pathNames,  0,  pathNames,  0,  stackSize  -  1);  }	  	compilable	  [FE]  ArrayIndexOutOfBoundsException  	158	2	add
1660	[BUG]  [BUGGY]  if(stackSize    >    0)    {    popStack();    }    if(stackSize  >  0)  {  popStack();  System.arraycopy(pathNames,  0,  pathNames,  0,  stackSize  -  1);  }  if(stackSize  <  0)  {  popStack();  }  if(stackSize  >  0)  {  popStack();  System.arraycopy(pathNames,  0,  pathNames,  0,  stackSize  -  1);  }  [FE]  ArrayIndexOutOfBoundsException  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {      [BUGGY]  if(stackSize    >    0)    {    popStack();    }    if(stackSize  >  0)  {  popStack();  System.arraycopy(pathNames,  0,  pathNames,  0,  stackSize  -  1);  }  if(stackSize  <  0)  {  popStack();  }  if(stackSize  >  0)  {  popStack();  System.arraycopy(pathNames,  0,  pathNames,  0,  stackSize  -  1);  }  [BUGGY]      pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	261	261	2	replace	if(stackSize        >        0)        {        popStack();        }        if(stackSize    >    0)    {    popStack();    System.arraycopy(pathNames,    0,    pathNames,    0,    stackSize    -    1);    }    if(stackSize  <  0)  {  popStack();  }  if(stackSize  >  0)  {  popStack();  System.arraycopy(pathNames,  0,  pathNames,  0,  stackSize  -  1);  }	  	compilable	  [FE]  ArrayIndexOutOfBoundsException  	158	2	add
1661	[BUG]  [BUGGY]  [FE]  ArrayIndexOutOfBoundsException  [FE]      ArrayIndexOutOfBoundsException    [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {      [BUGGY]  if(stackSize    >    0)    {    popStack();    }    if(stackSize  >  0)  {  popStack();  System.arraycopy(pathNames,  0,  pathNames,  0,  stackSize  -  1);  }  if(stackSize  >  1)  {  popStack();  }  if(stackSize  >  0)  {  popStack();  System.arraycopy(pathNames,  0,  pathNames,  0,  stackSize  -  1);  }  [BUGGY]      pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	261	261	2	add	if(stackSize        >        0)        {        popStack();        }        if(stackSize    >    0)    {    popStack();    System.arraycopy(pathNames,    0,    pathNames,    0,    stackSize    -    1);    }    if(stackSize  >  1)  {  popStack();  }  if(stackSize  >  0)  {  popStack();  System.arraycopy(pathNames,  0,  pathNames,  0,  stackSize  -  1);  }	  	compilable	  [FE]  ArrayIndexOutOfBoundsException  	158	2	add
1662	[BUG]  [BUGGY]  if(stackSize    >    0)    {    popStack();    }    if(stackSize  >  0)  {  popStack();  System.arraycopy(pathNames,  0,  pathNames,  0,  stackSize  -  1);  }  if(stackSize  >  1)  {  popStack();  }  if(stackSize  >  0)  {  popStack();  System.arraycopy(pathNames,  0,  pathNames,  0,  stackSize  -  1);  }  [FE]  ArrayIndexOutOfBoundsException  [FE]      ArrayIndexOutOfBoundsException    [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {      [BUGGY]  if(stackSize    >    0)    {    popStack();    }    if(stackSize  >  0)  {  popStack();  System.arraycopy(pathNames,  0,  pathNames,  0,  stackSize  -  1);  }  if(stackSize  >  1)  {  popStack();  }  if(stackSize  >  0)  {  popStack();  System.arraycopy(pathNames,  0,  pathNames,  0,  stackSize  -  1);  }  [BUGGY]      pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	261	261	2	replace	if(stackSize        >        0)        {        popStack();        }        if(stackSize    >    0)    {    popStack();    System.arraycopy(pathNames,    0,    pathNames,    0,    stackSize    -    1);    }    if(stackSize  >  1)  {  popStack();  }  if(stackSize  >  0)  {  popStack();  System.arraycopy(pathNames,  0,  pathNames,  0,  stackSize  -  1);  }	  	compilable	  [FE]  ArrayIndexOutOfBoundsException  	158	2	add
1663	[BUG]  [BUGGY]  [FE]  ArrayIndexOutOfBoundsException  [FE]        ArrayIndexOutOfBoundsException    [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {      [BUGGY]  if(stackSize    >    0)    {    popStack();    }    if(stackSize  >  0)  {  popStack();  System.arraycopy(pathNames,  0,  pathNames,  0,  stackSize  -  1);  }  if(stackSize  >  0)  {  popStack();  }  if(stackSize  <  0)  {  popStack();  System.arraycopy(pathNames,  0,  pathNames,  0,  stackSize  -  1);  }  [BUGGY]      pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	261	261	2	add	if(stackSize        >        0)        {        popStack();        }        if(stackSize    >    0)    {    popStack();    System.arraycopy(pathNames,    0,    pathNames,    0,    stackSize    -    1);    }    if(stackSize  >  0)  {  popStack();  }  if(stackSize  <  0)  {  popStack();  System.arraycopy(pathNames,  0,  pathNames,  0,  stackSize  -  1);  }	  	compilable	  [FE]  ArrayIndexOutOfBoundsException  	158	2	add
1664	[BUG]  [BUGGY]  if(stackSize    >    0)    {    popStack();    }    if(stackSize  >  0)  {  popStack();  System.arraycopy(pathNames,  0,  pathNames,  0,  stackSize  -  1);  }  if(stackSize  >  0)  {  popStack();  }  if(stackSize  <  0)  {  popStack();  System.arraycopy(pathNames,  0,  pathNames,  0,  stackSize  -  1);  }  [FE]  ArrayIndexOutOfBoundsException  [FE]        ArrayIndexOutOfBoundsException    [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {      [BUGGY]  if(stackSize    >    0)    {    popStack();    }    if(stackSize  >  0)  {  popStack();  System.arraycopy(pathNames,  0,  pathNames,  0,  stackSize  -  1);  }  if(stackSize  >  0)  {  popStack();  }  if(stackSize  <  0)  {  popStack();  System.arraycopy(pathNames,  0,  pathNames,  0,  stackSize  -  1);  }  [BUGGY]      pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	261	261	2	replace	if(stackSize        >        0)        {        popStack();        }        if(stackSize    >    0)    {    popStack();    System.arraycopy(pathNames,    0,    pathNames,    0,    stackSize    -    1);    }    if(stackSize  >  0)  {  popStack();  }  if(stackSize  <  0)  {  popStack();  System.arraycopy(pathNames,  0,  pathNames,  0,  stackSize  -  1);  }	  	compilable	  [FE]  ArrayIndexOutOfBoundsException  	158	2	add
1665	[BUG]  [BUGGY]  [FE]  ArrayIndexOutOfBoundsException  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {      [BUGGY]  if(stackSize    >    0)    {    popStack();    }    if(stackSize  >  0)  {  popStack();  System.arraycopy(stack,  0,  pathNames,  0,  stackSize);  }  if(stackSize  <  0)  {  popStack();  }  if(stackSize  >  0)  {  popStack();  System.arraycopy(stack,  0,  pathNames,  0,  stackSize);  }  [BUGGY]      pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	261	261	2	add	if(stackSize        >        0)        {        popStack();        }        if(stackSize    >    0)    {    popStack();    System.arraycopy(stack,    0,    pathNames,    0,    stackSize);    }    if(stackSize  <  0)  {  popStack();  }  if(stackSize  >  0)  {  popStack();  System.arraycopy(stack,  0,  pathNames,  0,  stackSize);  }	  	compilable	  [FE]  ArrayIndexOutOfBoundsException  	92	2	add
1666	[BUG]  [BUGGY]  if(stackSize    >    0)    {    popStack();    }    if(stackSize  >  0)  {  popStack();  System.arraycopy(stack,  0,  pathNames,  0,  stackSize);  }  if(stackSize  <  0)  {  popStack();  }  if(stackSize  >  0)  {  popStack();  System.arraycopy(stack,  0,  pathNames,  0,  stackSize);  }  [FE]  ArrayIndexOutOfBoundsException  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {      [BUGGY]  if(stackSize    >    0)    {    popStack();    }    if(stackSize  >  0)  {  popStack();  System.arraycopy(stack,  0,  pathNames,  0,  stackSize);  }  if(stackSize  <  0)  {  popStack();  }  if(stackSize  >  0)  {  popStack();  System.arraycopy(stack,  0,  pathNames,  0,  stackSize);  }  [BUGGY]      pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	261	261	2	replace	if(stackSize        >        0)        {        popStack();        }        if(stackSize    >    0)    {    popStack();    System.arraycopy(stack,    0,    pathNames,    0,    stackSize);    }    if(stackSize  <  0)  {  popStack();  }  if(stackSize  >  0)  {  popStack();  System.arraycopy(stack,  0,  pathNames,  0,  stackSize);  }	  	compilable	  [FE]  ArrayIndexOutOfBoundsException  	92	2	add
1667	[BUG]  [BUGGY]  if(stackSize    >    0)    {    popStack();    }    if(stackSize  >  0)  {  popStack();  System.arraycopy(stack,  0,  pathNames,  0,  stackSize);  }  if(stackSize  >  0)  {  popStack();  }  if(stackSize  >  0)  {  popStack();  System.arraycopy(stack,  pathNames,  0,  stackSize);  }  [CE]  method  arraycopy  in  class  System  cannot  be  applied  to  given  types;  [FE]      ArrayIndexOutOfBoundsException    [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {      [BUGGY]  if(stackSize    >    0)    {    popStack();    }    if(stackSize  >  0)  {  popStack();  System.arraycopy(stack,  0,  pathNames,  0,  stackSize);  }  if(stackSize  >  0)  {  popStack();  }  if(stackSize  >  0)  {  popStack();  System.arraycopy(stack,  pathNames,  0,  stackSize);  }  [BUGGY]      pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	261	261	2	replace	if(stackSize        >        0)        {        popStack();        }        if(stackSize    >    0)    {    popStack();    System.arraycopy(stack,    0,    pathNames,    0,    stackSize);    }    if(stackSize  >  0)  {  popStack();  }  if(stackSize  >  0)  {  popStack();  System.arraycopy(stack,  pathNames,  0,  stackSize);  }	  	non-compiled	[CE]  method  arraycopy  in  class  System  cannot  be  applied  to  given  types;	92	None	add
1668	[BUG]  [BUGGY]  cv.skipChildren();  [CE]  cannot  find  symbol  cv  [FE]          ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {      [BUGGY]  cv.skipChildren();  [BUGGY]      pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	261	261	2	replace	cv.skipChildren();	  ack();    	non-compiled	[CE]  cannot  find  symbol  cv	148	None	replace
1669	[BUG]  [BUGGY]  JsonToken.NAME  ack();  [CE]  ';'  expected  [FE]            ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {      [BUGGY]  JsonToken.NAME  ack();  [BUGGY]      pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	261	261	2	replace	JsonToken.NAME  ack();	  ack();    	non-compiled	[CE]  ';'  expected	148	None	replace
1670	[BUG]  [BUGGY]  JsonToken  token  =  nextValue();  [CE]  cannot  find  symbol  [FE]              ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {      [BUGGY]  JsonToken  token  =  nextValue();  [BUGGY]      pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	261	261	2	replace	JsonToken  token  =  nextValue();	  ack();    	non-compiled	[CE]  cannot  find  symbol	148	None	replace
1671	[BUG]  [BUGGY]  if(stackSize  >  0)  {  pathIndices[stackSize  -  1]  =  null;  }  [CE]  incompatible  types  [FE]              ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {      [BUGGY]  if(stackSize  >  0)  {  pathIndices[stackSize  -  1]  =  null;  }  [BUGGY]      pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	261	261	2	replace	if(stackSize  >  0)  {  pathIndices[stackSize  -  1]  =  null;  }	  if(stackSize    >    0)    {    stack();    }    else    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  incompatible  types	181	None	replace
1672	[BUG]  [BUGGY]  if(stackSize  >  0)  {  stack.removeLast();  }  else  {  throw  new  IllegalArgumentException( " ");  }  [CE]  cannot  find  symbol  [FE]                ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {      [BUGGY]  if(stackSize  >  0)  {  stack.removeLast();  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	261	261	2	replace	if(stackSize  >  0)  {  stack.removeLast();  }  else  {  throw  new  IllegalArgumentException( " ");  }	  if(stackSize    >    0)    {    stack();    }    else    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  cannot  find  symbol	181	None	replace
1673	[BUG]  [BUGGY]  Path  pathIndices[stackSize  -  1]  =(pathNames[stackSize  -  1]  ==  null)? "null "  :  pathNames[stackSize  -  1];  [CE]  [FE]                            ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {      [BUGGY]  Path  pathIndices[stackSize  -  1]  =(pathNames[stackSize  -  1]  ==  null)? "null "  :  pathNames[stackSize  -  1];  [BUGGY]      pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	261	261	2	replace	Path  pathIndices[stackSize  -  1]  =(pathNames[stackSize  -  1]  ==  null)? "null "  :  pathNames[stackSize  -  1];	  Path    pathIndices[stackSize    -    1]    =    null;    	non-compiled	[CE]  	22	None	replace
1674	[BUG]  [BUGGY]  Path  pathIndices[stackSize  -  1]  =(pathNames[stackSize  -  1]  ==  null)? "null "  :  pathNames[stackSize  -  1]);  [CE]  [FE]                              ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {      [BUGGY]  Path  pathIndices[stackSize  -  1]  =(pathNames[stackSize  -  1]  ==  null)? "null "  :  pathNames[stackSize  -  1]);  [BUGGY]      pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	261	261	2	replace	Path  pathIndices[stackSize  -  1]  =(pathNames[stackSize  -  1]  ==  null)? "null "  :  pathNames[stackSize  -  1]);	  Path    pathIndices[stackSize    -    1]    =    null;    	non-compiled	[CE]  	22	None	replace
1675	[BUG]  [BUGGY]  joinStack(stackSize  -  1,  stackSize);  [CE]  cannot  find  symbol  [FE]          ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {      [BUGGY]  joinStack(stackSize  -  1,  stackSize);  [BUGGY]      pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	261	261	2	replace	joinStack(stackSize  -  1,  stackSize);	  rowStack();    	non-compiled	[CE]  cannot  find  symbol	57	None	replace
1676	[BUG]  [BUGGY]  joinStack(stackSize  -  1,  stackSize  -  1);  [CE]  cannot  find  symbol  [FE]            ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {      [BUGGY]  joinStack(stackSize  -  1,  stackSize  -  1);  [BUGGY]      pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	261	261	2	replace	joinStack(stackSize  -  1,  stackSize  -  1);	  rowStack();    	non-compiled	[CE]  cannot  find  symbol	57	None	replace
1677	[BUG]  [BUGGY]  joinStack(stackSize,  stackSize  -  1);  [CE]  cannot  find  symbol  [FE]              ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {      [BUGGY]  joinStack(stackSize,  stackSize  -  1);  [BUGGY]      pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	261	261	2	replace	joinStack(stackSize,  stackSize  -  1);	  rowStack();    	non-compiled	[CE]  cannot  find  symbol	57	None	replace
1678	[BUG]  [BUGGY]  connectToPossibleExceptionHandler(nextIndice(),  JsonToken.START_OBJECT);  [CE]  cannot  find  symbol  [FE]                    ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {      [BUGGY]  connectToPossibleExceptionHandler(nextIndice(),  JsonToken.START_OBJECT);  [BUGGY]      pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	261	261	2	replace	connectToPossibleExceptionHandler(nextIndice(),  JsonToken.START_OBJECT);	  connectToPossibleExceptionHandler(nextIndice());    	non-compiled	[CE]  cannot  find  symbol	185	None	replace
1679	[BUG]  [BUGGY]  connectToPossibleExceptionHandler(nextIndice(),  JsonToken.END_ARRAY);  [CE]  cannot  find  symbol  [FE]                      ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {      [BUGGY]  connectToPossibleExceptionHandler(nextIndice(),  JsonToken.END_ARRAY);  [BUGGY]      pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	261	261	2	replace	connectToPossibleExceptionHandler(nextIndice(),  JsonToken.END_ARRAY);	  connectToPossibleExceptionHandler(nextIndice());    	non-compiled	[CE]  cannot  find  symbol	185	None	replace
1680	[BUG]  [BUGGY]  connectToPossibleExceptionHandler(null,  result,  throwInternal());  [CE]  cannot  find  symbol  result  [FE]                      ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {      [BUGGY]  connectToPossibleExceptionHandler(null,  result,  throwInternal());  [BUGGY]      pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	261	261	2	replace	connectToPossibleExceptionHandler(null,  result,  throwInternal());	  connectToPossibleExceptionHandler(null,    throwInternal());    	non-compiled	[CE]  cannot  find  symbol  result	136	None	replace
1681	[BUG]  [BUGGY]  Path[]  pathIndices  =  getKey();  [CE]  cannot  find  symbol  [FE]            AssertionFailedError      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {      [BUGGY]  Path[]  pathIndices  =  getKey();  [BUGGY]      pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	261	261	2	replace	Path[]  pathIndices  =  getKey();	          Path[]    pathIndices    =    getValues();    	non-compiled	[CE]  cannot  find  symbol	120	None	replace
1682	[BUG]  [BUGGY]  connectToPossibleExceptionHandler(JsonToken.END_OBJECT,  result);  [CE]  cannot  find  symbol  result  [FE]            ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {      [BUGGY]  connectToPossibleExceptionHandler(JsonToken.END_OBJECT,  result);  [BUGGY]      pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	261	261	2	replace	connectToPossibleExceptionHandler(JsonToken.END_OBJECT,  result);	  connectToPossibleExceptionHandler(JsonToken.END_OBJECT);    	non-compiled	[CE]  cannot  find  symbol  result	112	None	replace
1683	[BUG]  [BUGGY]  connectToPossibleExceptionHandler(JsonToken.END_OBJECT,  JsonToken.START_ARRAY);  [CE]  cannot  find  symbol  START_ARRAY  [FE]              ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {      [BUGGY]  connectToPossibleExceptionHandler(JsonToken.END_OBJECT,  JsonToken.START_ARRAY);  [BUGGY]      pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	261	261	2	replace	connectToPossibleExceptionHandler(JsonToken.END_OBJECT,  JsonToken.START_ARRAY);	  connectToPossibleExceptionHandler(JsonToken.END_OBJECT);    	non-compiled	[CE]  cannot  find  symbol  START_ARRAY	112	None	replace
1684	[BUG]  [BUGGY]  [FE]  ArrayIndexOutOfBoundsException  [FE]              ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {      [BUGGY]  if(stackSize  >  0)  {  popStack();  System.arraycopy(pathNames,  0,  pathNames,  0,  stackSize);  }  [BUGGY]      pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	261	261	2	add	if(stackSize  >  0)  {  popStack();  System.arraycopy(pathNames,  0,  pathNames,  0,  stackSize);  }	  if(stackSize    >    0)    {    popStack();    }    if(stackSize    >    0)    {    popStack();    System.arraycopy(stackNames,    0,    pathNames,    0,    stackSize);    }    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	90	2	replace
1685	[BUG]  [BUGGY]  if(stackSize  >  0)  {  popStack();  System.arraycopy(pathNames,  0,  pathNames,  0,  stackSize);  }  [FE]  ArrayIndexOutOfBoundsException  [FE]              ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {      [BUGGY]  if(stackSize  >  0)  {  popStack();  System.arraycopy(pathNames,  0,  pathNames,  0,  stackSize);  }  [BUGGY]      pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	261	261	2	replace	if(stackSize  >  0)  {  popStack();  System.arraycopy(pathNames,  0,  pathNames,  0,  stackSize);  }	  if(stackSize    >    0)    {    popStack();    }    if(stackSize    >    0)    {    popStack();    System.arraycopy(stackNames,    0,    pathNames,    0,    stackSize);    }    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	90	2	replace
1686	[BUG]  [BUGGY]  [FE]  ArrayStoreException  [FE]                ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {      [BUGGY]  if(stackSize  >  0)  {  popStack();  System.arraycopy(pathNames,  0,  pathIndices,  0,  stackSize);  }  [BUGGY]      pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	261	261	2	add	if(stackSize  >  0)  {  popStack();  System.arraycopy(pathNames,  0,  pathIndices,  0,  stackSize);  }	  if(stackSize    >    0)    {    popStack();    }    if(stackSize    >    0)    {    popStack();    System.arraycopy(stackNames,    0,    pathNames,    0,    stackSize);    }    	compilable	  [FE]  ArrayStoreException  	90	2	replace
1687	[BUG]  [BUGGY]  if(stackSize  >  0)  {  popStack();  System.arraycopy(pathNames,  0,  pathIndices,  0,  stackSize);  }  [FE]  ArrayStoreException  [FE]                ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {      [BUGGY]  if(stackSize  >  0)  {  popStack();  System.arraycopy(pathNames,  0,  pathIndices,  0,  stackSize);  }  [BUGGY]      pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	261	261	2	replace	if(stackSize  >  0)  {  popStack();  System.arraycopy(pathNames,  0,  pathIndices,  0,  stackSize);  }	  if(stackSize    >    0)    {    popStack();    }    if(stackSize    >    0)    {    popStack();    System.arraycopy(stackNames,    0,    pathNames,    0,    stackSize);    }    	compilable	  [FE]  ArrayStoreException  	90	2	replace
1688	[BUG]  [BUGGY]  connectToPossibleExceptionHandler(null,  null,  pathIndices,  JsonToken.VALUE_EMBEDDED);  [CE]  cannot  find  symbol  VALUE_EMBEDDED  [FE]                        ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {      [BUGGY]  connectToPossibleExceptionHandler(null,  null,  pathIndices,  JsonToken.VALUE_EMBEDDED);  [BUGGY]      pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	261	261	2	replace	connectToPossibleExceptionHandler(null,  null,  pathIndices,  JsonToken.VALUE_EMBEDDED);	  connectToPossibleExceptionHandler(null,    null,    pathIndices);    	non-compiled	[CE]  cannot  find  symbol  VALUE_EMBEDDED	187	None	replace
1689	[BUG]  [BUGGY]  String[]  pathIndices  =  getValues(JsonToken.VALUE_EMBEDDED_ARRAY);  [CE]  cannot  find  symbol  VALUE_EMBEDDED_ARRAY  [FE]          AssertionFailedError      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {      [BUGGY]  String[]  pathIndices  =  getValues(JsonToken.VALUE_EMBEDDED_ARRAY);  [BUGGY]      pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	261	261	2	replace	String[]  pathIndices  =  getValues(JsonToken.VALUE_EMBEDDED_ARRAY);	          String[]    pathIndices    =    getValues();    	non-compiled	[CE]  cannot  find  symbol  VALUE_EMBEDDED_ARRAY	119	None	replace
1690	[BUG]  [BUGGY]  String[]  pathIndices  =  getValues(JsonToken.VALUE_EMBEDDED_OBJECT);  [CE]  cannot  find  symbol  VALUE_EMBEDDED_OBJECT  [FE]            AssertionFailedError      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {      [BUGGY]  String[]  pathIndices  =  getValues(JsonToken.VALUE_EMBEDDED_OBJECT);  [BUGGY]      pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	261	261	2	replace	String[]  pathIndices  =  getValues(JsonToken.VALUE_EMBEDDED_OBJECT);	          String[]    pathIndices    =    getValues();    	non-compiled	[CE]  cannot  find  symbol  VALUE_EMBEDDED_OBJECT	119	None	replace
1691	[BUG]  [BUGGY]  [FE]  ArrayIndexOutOfBoundsException  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {      [BUGGY]  if(stackSize    >    0)    {    popStack();    }    if(stackSize  <  0)  {  popStack();  }  if(stackSize  <  0)  {  popStack();  }  if(stackSize  <  0)  {  popStack();  }  [BUGGY]      pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	261	261	2	add	if(stackSize        >        0)        {        popStack();        }        if(stackSize    <    0)    {    popStack();    }    if(stackSize  <  0)  {  popStack();  }  if(stackSize  <  0)  {  popStack();  }	  	compilable	  [FE]  ArrayIndexOutOfBoundsException  	206	2	add
1692	[BUG]  [BUGGY]  if(stackSize    >    0)    {    popStack();    }    if(stackSize  <  0)  {  popStack();  }  if(stackSize  <  0)  {  popStack();  }  if(stackSize  <  0)  {  popStack();  }  [FE]  ArrayIndexOutOfBoundsException  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {      [BUGGY]  if(stackSize    >    0)    {    popStack();    }    if(stackSize  <  0)  {  popStack();  }  if(stackSize  <  0)  {  popStack();  }  if(stackSize  <  0)  {  popStack();  }  [BUGGY]      pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	261	261	2	replace	if(stackSize        >        0)        {        popStack();        }        if(stackSize    <    0)    {    popStack();    }    if(stackSize  <  0)  {  popStack();  }  if(stackSize  <  0)  {  popStack();  }	  	compilable	  [FE]  ArrayIndexOutOfBoundsException  	206	2	add
1693	[BUG]  [BUGGY]  JsonToken.START_OBJECT  =  _textBuffer.getCurrentToken();  [CE]  cannot  find  symbol  START_OBJECT  [FE]              ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {      [BUGGY]  JsonToken.START_OBJECT  =  _textBuffer.getCurrentToken();  [BUGGY]      pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	261	261	2	replace	JsonToken.START_OBJECT  =  _textBuffer.getCurrentToken();	  JsonToken.START_OBJECT    =    _getCurrentToken();    	non-compiled	[CE]  cannot  find  symbol  START_OBJECT	213	None	replace
1694	[BUG]  [BUGGY]  JsonToken.START_OBJECT  =  nextToken();  [CE]  cannot  find  symbol  START_OBJECT  [FE]                ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {      [BUGGY]  JsonToken.START_OBJECT  =  nextToken();  [BUGGY]      pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	261	261	2	replace	JsonToken.START_OBJECT  =  nextToken();	  JsonToken.START_OBJECT    =    _getCurrentToken();    	non-compiled	[CE]  cannot  find  symbol  START_OBJECT	213	None	replace
1695	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {      [BUGGY]  if(stackSize  >  1)  {  popStack();  }  else  {  System.arraycopy(pathNames,  0,  pathNames,  0,  stackSize  -  1);  }  [BUGGY]      pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	261	261	2	add	if(stackSize  >  1)  {  popStack();  }  else  {  System.arraycopy(pathNames,  0,  pathNames,  0,  stackSize  -  1);  }	  if(stackSize    >    0)    {    popStack();    }    if(stackSize    >    0)    {    popStack();    System.arraycopy(pathNames,    0,    pathNames,    0,    stackSize    -    1);    }    	compilable	  [FE]  AssertionFailedError  	159	2	replace
1696	[BUG]  [BUGGY]  if(stackSize  >  1)  {  popStack();  }  else  {  System.arraycopy(pathNames,  0,  pathNames,  0,  stackSize  -  1);  }  [FE]  AssertionFailedError  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {      [BUGGY]  if(stackSize  >  1)  {  popStack();  }  else  {  System.arraycopy(pathNames,  0,  pathNames,  0,  stackSize  -  1);  }  [BUGGY]      pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	261	261	2	replace	if(stackSize  >  1)  {  popStack();  }  else  {  System.arraycopy(pathNames,  0,  pathNames,  0,  stackSize  -  1);  }	  if(stackSize    >    0)    {    popStack();    }    if(stackSize    >    0)    {    popStack();    System.arraycopy(pathNames,    0,    pathNames,    0,    stackSize    -    1);    }    	compilable	  [FE]  AssertionFailedError  	159	2	replace
1697	[BUG]  [BUGGY]  connectToPossibleExceptionHandler(JsonToken.NAME,  JsonToken.END_ARRAY);  [CE]  cannot  find  symbol  [FE]              ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {      [BUGGY]  connectToPossibleExceptionHandler(JsonToken.NAME,  JsonToken.END_ARRAY);  [BUGGY]      pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	261	261	2	replace	connectToPossibleExceptionHandler(JsonToken.NAME,  JsonToken.END_ARRAY);	  connectToPossibleExceptionHandler(JsonToken.NAME);    	non-compiled	[CE]  cannot  find  symbol	113	None	replace
1698	[BUG]  [BUGGY]  connectToPossibleExceptionHandler(JsonToken.NAME,  JsonToken.EMPTY);  [CE]  cannot  find  symbol  EMPTY  [FE]                ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {      [BUGGY]  connectToPossibleExceptionHandler(JsonToken.NAME,  JsonToken.EMPTY);  [BUGGY]      pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	261	261	2	replace	connectToPossibleExceptionHandler(JsonToken.NAME,  JsonToken.EMPTY);	  connectToPossibleExceptionHandler(JsonToken.NAME);    	non-compiled	[CE]  cannot  find  symbol  EMPTY	113	None	replace
1699	[BUG]  [BUGGY]  connectToPeek(JsonToken.VALUE_NUMBER,  JsonToken.VALUE_NUMBER_INT);  [CE]  cannot  find  symbol  VALUE_NUMBER  [FE]                      ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {      [BUGGY]  connectToPeek(JsonToken.VALUE_NUMBER,  JsonToken.VALUE_NUMBER_INT);  [BUGGY]      pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	261	261	2	replace	connectToPeek(JsonToken.VALUE_NUMBER,  JsonToken.VALUE_NUMBER_INT);	  connectToPeek(JsonToken.VALUE_NUMBER_INT,    JsonToken.VALUE_NUMBER_FLOAT);    	non-compiled	[CE]  cannot  find  symbol  VALUE_NUMBER	215	None	replace
1700	[BUG]  [BUGGY]  PathIndices  pathIndices[stackSize  -  1]  =  new  Path(pathNames);  [CE]  ']'  expected  [FE]          AssertionFailedError      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {      [BUGGY]  PathIndices  pathIndices[stackSize  -  1]  =  new  Path(pathNames);  [BUGGY]      pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	261	261	2	replace	PathIndices  pathIndices[stackSize  -  1]  =  new  Path(pathNames);	  PathIndices    pathIndices[stackSize    -    1]    =    null;    	non-compiled	[CE]  ']'  expected	42	None	replace
1701	[BUG]  [BUGGY]  connectToPossibleExceptionHandler(null,  pathNames,  SENTINEL_CLOSED);  [CE]  cannot  find  symbol  [FE]                        ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {      [BUGGY]  connectToPossibleExceptionHandler(null,  pathNames,  SENTINEL_CLOSED);  [BUGGY]      pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	261	261	2	replace	connectToPossibleExceptionHandler(null,  pathNames,  SENTINEL_CLOSED);	  connectToPossibleExceptionHandler(null,    pathNames);    	non-compiled	[CE]  cannot  find  symbol	145	None	replace
1702	[BUG]  [BUGGY]  _reportError( "Current  token( "+JsonToken.STRING+ ")not  a  value ",  JsonToken.END_ARRAY);  [CE]  cannot  find  symbol  [FE]                    ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {      [BUGGY]  _reportError( "Current  token( "+JsonToken.STRING+ ")not  a  value ",  JsonToken.END_ARRAY);  [BUGGY]      pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	261	261	2	replace	_reportError( "Current  token( "+JsonToken.STRING+ ")not  a  value ",  JsonToken.END_ARRAY);	  _reportError(   "Current    token(   "+JsonToken.STRING+   ")not    a    value   ");    	non-compiled	[CE]  cannot  find  symbol	220	None	replace
1703	[BUG]  [BUGGY]  _reportError( "Current  token( "+JsonToken.STRING+ ")not  a  value ",  JsonToken.FIELD_NAME);  [CE]  cannot  find  symbol  FIELD_NAME  [FE]                      ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {      [BUGGY]  _reportError( "Current  token( "+JsonToken.STRING+ ")not  a  value ",  JsonToken.FIELD_NAME);  [BUGGY]      pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	261	261	2	replace	_reportError( "Current  token( "+JsonToken.STRING+ ")not  a  value ",  JsonToken.FIELD_NAME);	  _reportError(   "Current    token(   "+JsonToken.STRING+   ")not    a    value   ");    	non-compiled	[CE]  cannot  find  symbol  FIELD_NAME	220	None	replace
1704	[BUG]  [BUGGY]  connectToPeek(JsonToken.VALUE_EMBEDDED);  [CE]  cannot  find  symbol  VALUE_EMBEDDED  [FE]                          ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {      [BUGGY]  connectToPeek(JsonToken.VALUE_EMBEDDED);  [BUGGY]      pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	261	261	2	replace	connectToPeek(JsonToken.VALUE_EMBEDDED);	  connectToPeek(JsonToken.VALUE_NUMBER_FLOAT);    	non-compiled	[CE]  cannot  find  symbol  VALUE_EMBEDDED	46	None	replace
1705	[BUG]  [BUGGY]  pathNames[stackSize  -  1]  =  null;  }  [CE]  ']'  expected  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {      [BUGGY]  pathNames[stackSize  -  1]  =  null;  }  [BUGGY]      pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	261	261	2	replace	pathNames[stackSize  -  1]  =  null;  }	          if(stackSize    >    0)    {    pathNames[stackSize    -    1]    =    null;    }    	non-compiled	[CE]  ']'  expected	174	None	replace
1706	[BUG]  [BUGGY]  JsonToken  t  =  _textBuffer.getCurrentToken();  [CE]  cannot  find  symbol  _textBuffer  [FE]              ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {      [BUGGY]  JsonToken  t  =  _textBuffer.getCurrentToken();  [BUGGY]      pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	261	261	2	replace	JsonToken  t  =  _textBuffer.getCurrentToken();	  JsonToken    t    =    _getCurrentToken();    	non-compiled	[CE]  cannot  find  symbol  _textBuffer	122	None	replace
1707	[BUG]  [BUGGY]  connectToPossibleExceptionHandler(next(),  JsonToken.VALUE_EMPTY);  [CE]  cannot  find  symbol  [FE]                            ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {      [BUGGY]  connectToPossibleExceptionHandler(next(),  JsonToken.VALUE_EMPTY);  [BUGGY]      pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	261	261	2	replace	connectToPossibleExceptionHandler(next(),  JsonToken.VALUE_EMPTY);	  connectToPossibleExceptionHandler(throwInternal(),    JsonToken.VALUE_EMPTY);    	non-compiled	[CE]  cannot  find  symbol	55	None	replace
1708	[BUG]  [BUGGY]  connectToPossibleExceptionHandler(jsonToken.VALUE_EMPTY,  JsonToken.START_OBJECT);  [CE]  cannot  find  symbol  jsonToken  [FE]                              ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {      [BUGGY]  connectToPossibleExceptionHandler(jsonToken.VALUE_EMPTY,  JsonToken.START_OBJECT);  [BUGGY]      pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	261	261	2	replace	connectToPossibleExceptionHandler(jsonToken.VALUE_EMPTY,  JsonToken.START_OBJECT);	  connectToPossibleExceptionHandler(throwInternal(),    JsonToken.VALUE_EMPTY);    	non-compiled	[CE]  cannot  find  symbol  jsonToken	55	None	replace
1709	[BUG]  [BUGGY]  _reportError( "Current  token( "+getMessage()  + ")not  a  value,  expecting  a  value. ");  [CE]  cannot  find  symbol  [FE]                ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {      [BUGGY]  _reportError( "Current  token( "+getMessage()  + ")not  a  value,  expecting  a  value. ");  [BUGGY]      pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	261	261	2	replace	_reportError( "Current  token( "+getMessage()  + ")not  a  value,  expecting  a  value. ");	  _reportError(   "Current    token(   "+getMessage()    +   ")not    a    value.   ");    	non-compiled	[CE]  cannot  find  symbol	29	None	replace
1710	[BUG]  [BUGGY]  _reportError( "Current  token( "+getMessage()  + ")not  a  value.. ");  [CE]  cannot  find  symbol  [FE]                  ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {      [BUGGY]  _reportError( "Current  token( "+getMessage()  + ")not  a  value.. ");  [BUGGY]      pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	261	261	2	replace	_reportError( "Current  token( "+getMessage()  + ")not  a  value.. ");	  _reportError(   "Current    token(   "+getMessage()    +   ")not    a    value.   ");    	non-compiled	[CE]  cannot  find  symbol	29	None	replace
1711	[BUG]  [BUGGY]  _reportError( "Current  token( "+getMessage()  + ")not  a  value.  If(stackSize  ==  1, ");  [CE]  cannot  find  symbol  [FE]                    ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {      [BUGGY]  _reportError( "Current  token( "+getMessage()  + ")not  a  value.  If(stackSize  ==  1, ");  [BUGGY]      pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	261	261	2	replace	_reportError( "Current  token( "+getMessage()  + ")not  a  value.  If(stackSize  ==  1, ");	  _reportError(   "Current    token(   "+getMessage()    +   ")not    a    value.   ");    	non-compiled	[CE]  cannot  find  symbol	29	None	replace
1712	[BUG]  [BUGGY]  _reportError( "Current  token( "+getMessage()  + ")not  a  value.  If(stackSize  ==  1  &&  stackSize  <  =  stackSize)];  [CE]  unclosed  string  literal  [FE]                      ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {      [BUGGY]  _reportError( "Current  token( "+getMessage()  + ")not  a  value.  If(stackSize  ==  1  &&  stackSize  <  =  stackSize)];  [BUGGY]      pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	261	261	2	replace	_reportError( "Current  token( "+getMessage()  + ")not  a  value.  If(stackSize  ==  1  &&  stackSize  <  =  stackSize)];	  _reportError(   "Current    token(   "+getMessage()    +   ")not    a    value.   ");    	non-compiled	[CE]  unclosed  string  literal	29	None	replace
1713	[BUG]  [BUGGY]  _reportError( "Current  token( "+getMessage()  + ")not  a  value.  If(stackSize  ==  stackSize)? ");  [CE]  cannot  find  symbol  [FE]                        ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {      [BUGGY]  _reportError( "Current  token( "+getMessage()  + ")not  a  value.  If(stackSize  ==  stackSize)? ");  [BUGGY]      pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	261	261	2	replace	_reportError( "Current  token( "+getMessage()  + ")not  a  value.  If(stackSize  ==  stackSize)? ");	  _reportError(   "Current    token(   "+getMessage()    +   ")not    a    value.   ");    	non-compiled	[CE]  cannot  find  symbol	29	None	replace
1714	[BUG]  [BUGGY]  JsonToken.START_OBJECT  =  null;  lastName();  pathNames[stackSize  -  1]  =  null;  }  [CE]  ']'  expected  [FE]                              ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {      [BUGGY]  JsonToken.START_OBJECT  =  null;  lastName();  pathNames[stackSize  -  1]  =  null;  }  [BUGGY]      pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	261	261	2	replace	JsonToken.START_OBJECT  =  null;  lastName();  pathNames[stackSize  -  1]  =  null;  }	  if(stackSize    >    0)    {    popStack();    }    else    {    JsonToken.START_OBJECT    =    null;    lastName();    pathNames[stackSize    -    1]    =    null;    }    	non-compiled	[CE]  ']'  expected	142	None	replace
1715	[BUG]  [BUGGY]  if(isEnabled(Feature.QUOTE_FIELD_NAMES))  {  popStack();  }  [CE]  cannot  find  symbol  Feature  [FE]              ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {      [BUGGY]  if(isEnabled(Feature.QUOTE_FIELD_NAMES))  {  popStack();  }  [BUGGY]      pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	261	261	2	replace	if(isEnabled(Feature.QUOTE_FIELD_NAMES))  {  popStack();  }	  if(stackSize    >    0)    {    popStack();    }    if(stackSize    >    0)    {    popStack();    	non-compiled	[CE]  cannot  find  symbol  Feature	210	None	replace
1716	[BUG]  [BUGGY]  if(stackSize  >  0)  {  append(stackSize  -  1)  {  popStack();  }  else  {  skipStack();  }  [CE]  ';'  expected  [FE]                  ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {      [BUGGY]  if(stackSize  >  0)  {  append(stackSize  -  1)  {  popStack();  }  else  {  skipStack();  }  [BUGGY]      pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	261	261	2	replace	if(stackSize  >  0)  {  append(stackSize  -  1)  {  popStack();  }  else  {  skipStack();  }	  append(stackSize    -    1)    {    popStack();    }    else    {    skipStack();    }    	non-compiled	[CE]  ';'  expected	166	None	replace
1717	[BUG]  [BUGGY]  if(stackSize  >  0)  {  append(stackSize  -  1)  {  popStack();  }  [CE]  ';'  expected  [FE]                    ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {      [BUGGY]  if(stackSize  >  0)  {  append(stackSize  -  1)  {  popStack();  }  [BUGGY]      pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	261	261	2	replace	if(stackSize  >  0)  {  append(stackSize  -  1)  {  popStack();  }	  append(stackSize    -    1)    {    popStack();    }    else    {    skipStack();    }    	non-compiled	[CE]  ';'  expected	166	None	replace
1718	[BUG]  [BUGGY]  [FE]  IllegalStateException  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {      [BUGGY]  if(stackSize  >  0)  {  popStack();  }  else  {  JsonToken  START_OBJECT  =  null;  nextName();  pathNames[stackSize  -  1]  =  null;  }  if(stackSize  <  0)  {  popStack();  }  else  {  JsonToken  START_OBJECT  =  null;  nextName();  pathNames[stackSize  -  1]  =  null;  }  [BUGGY]      pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	261	261	2	add	if(stackSize    >    0)    {    popStack();    }    else    {    JsonToken    START_OBJECT    =    null;    nextName();    pathNames[stackSize    -    1]    =    null;    }    if(stackSize  <  0)  {  popStack();  }  else  {  JsonToken  START_OBJECT  =  null;  nextName();  pathNames[stackSize  -  1]  =  null;  }	  	compilable	  [FE]  IllegalStateException  	138	2	add
1719	[BUG]  [BUGGY]  if(stackSize  >  0)  {  popStack();  }  else  {  JsonToken  START_OBJECT  =  null;  nextName();  pathNames[stackSize  -  1]  =  null;  }  if(stackSize  <  0)  {  popStack();  }  else  {  JsonToken  START_OBJECT  =  null;  nextName();  pathNames[stackSize  -  1]  =  null;  }  [FE]  IllegalStateException  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {      [BUGGY]  if(stackSize  >  0)  {  popStack();  }  else  {  JsonToken  START_OBJECT  =  null;  nextName();  pathNames[stackSize  -  1]  =  null;  }  if(stackSize  <  0)  {  popStack();  }  else  {  JsonToken  START_OBJECT  =  null;  nextName();  pathNames[stackSize  -  1]  =  null;  }  [BUGGY]      pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	261	261	2	replace	if(stackSize    >    0)    {    popStack();    }    else    {    JsonToken    START_OBJECT    =    null;    nextName();    pathNames[stackSize    -    1]    =    null;    }    if(stackSize  <  0)  {  popStack();  }  else  {  JsonToken  START_OBJECT  =  null;  nextName();  pathNames[stackSize  -  1]  =  null;  }	  	compilable	  [FE]  IllegalStateException  	138	2	add
1720	[BUG]  [BUGGY]  [FE]  IllegalStateException  [FE]      ArrayIndexOutOfBoundsException    [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {      [BUGGY]  if(stackSize  >  0)  {  popStack();  }  else  {  JsonToken  START_OBJECT  =  null;  nextName();  pathNames[stackSize  -  1]  =  null;  }  if(stackSize  >  1)  {  popStack();  }  else  {  JsonToken  START_OBJECT  =  null;  nextName();  pathNames[stackSize  -  1]  =  null;  }  [BUGGY]      pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	261	261	2	add	if(stackSize    >    0)    {    popStack();    }    else    {    JsonToken    START_OBJECT    =    null;    nextName();    pathNames[stackSize    -    1]    =    null;    }    if(stackSize  >  1)  {  popStack();  }  else  {  JsonToken  START_OBJECT  =  null;  nextName();  pathNames[stackSize  -  1]  =  null;  }	  	compilable	  [FE]  IllegalStateException  	138	2	add
1721	[BUG]  [BUGGY]  if(stackSize  >  0)  {  popStack();  }  else  {  JsonToken  START_OBJECT  =  null;  nextName();  pathNames[stackSize  -  1]  =  null;  }  if(stackSize  >  1)  {  popStack();  }  else  {  JsonToken  START_OBJECT  =  null;  nextName();  pathNames[stackSize  -  1]  =  null;  }  [FE]  IllegalStateException  [FE]      ArrayIndexOutOfBoundsException    [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {      [BUGGY]  if(stackSize  >  0)  {  popStack();  }  else  {  JsonToken  START_OBJECT  =  null;  nextName();  pathNames[stackSize  -  1]  =  null;  }  if(stackSize  >  1)  {  popStack();  }  else  {  JsonToken  START_OBJECT  =  null;  nextName();  pathNames[stackSize  -  1]  =  null;  }  [BUGGY]      pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	261	261	2	replace	if(stackSize    >    0)    {    popStack();    }    else    {    JsonToken    START_OBJECT    =    null;    nextName();    pathNames[stackSize    -    1]    =    null;    }    if(stackSize  >  1)  {  popStack();  }  else  {  JsonToken  START_OBJECT  =  null;  nextName();  pathNames[stackSize  -  1]  =  null;  }	  	compilable	  [FE]  IllegalStateException  	138	2	add
1722	[BUG]  [BUGGY]  if(stackSize  >  0)  {  popStack();  }  else  {  JsonToken  START_OBJECT  =  null;  nextName();  pathNames[stackSize  -  1]  =  null;  }  if(stackSize  >  0)  {  popStack();  }  else  {  JsonToken  START_OBJECT  =  null;  nextName();  pathNames[stackSize  -  1]  =  null  [CE]  ';'  expected  [FE]        ArrayIndexOutOfBoundsException    [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {      [BUGGY]  if(stackSize  >  0)  {  popStack();  }  else  {  JsonToken  START_OBJECT  =  null;  nextName();  pathNames[stackSize  -  1]  =  null;  }  if(stackSize  >  0)  {  popStack();  }  else  {  JsonToken  START_OBJECT  =  null;  nextName();  pathNames[stackSize  -  1]  =  null  [BUGGY]      pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	261	261	2	replace	if(stackSize    >    0)    {    popStack();    }    else    {    JsonToken    START_OBJECT    =    null;    nextName();    pathNames[stackSize    -    1]    =    null;    }    if(stackSize  >  0)  {  popStack();  }  else  {  JsonToken  START_OBJECT  =  null;  nextName();  pathNames[stackSize  -  1]  =  null	  	non-compiled	[CE]  ';'  expected	138	None	add
1723	[BUG]  [BUGGY]  if(stackSize  >  0)  {  popStack();  }  else  {  JsonToken  START_OBJECT  =  null;  nextName();  pathNames[stackSize  -  1]  =  null;  }  if(stackSize  >  0)  {  popStack();  }  else  {  JsonToken  START_OBJECT  =  getStack();  pathNames[stackSize  -  1]  =  null;  }  [CE]  cannot  find  symbol  [FE]          ArrayIndexOutOfBoundsException    [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {      [BUGGY]  if(stackSize  >  0)  {  popStack();  }  else  {  JsonToken  START_OBJECT  =  null;  nextName();  pathNames[stackSize  -  1]  =  null;  }  if(stackSize  >  0)  {  popStack();  }  else  {  JsonToken  START_OBJECT  =  getStack();  pathNames[stackSize  -  1]  =  null;  }  [BUGGY]      pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	261	261	2	replace	if(stackSize    >    0)    {    popStack();    }    else    {    JsonToken    START_OBJECT    =    null;    nextName();    pathNames[stackSize    -    1]    =    null;    }    if(stackSize  >  0)  {  popStack();  }  else  {  JsonToken  START_OBJECT  =  getStack();  pathNames[stackSize  -  1]  =  null;  }	  	non-compiled	[CE]  cannot  find  symbol	138	None	add
1724	[BUG]  [BUGGY]  _reportError( "Current  token( "+getMessage()  + ")not  a  value, ",  JsonToken.FIELD_NAME);  [CE]  cannot  find  symbol  [FE]                      ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {      [BUGGY]  _reportError( "Current  token( "+getMessage()  + ")not  a  value, ",  JsonToken.FIELD_NAME);  [BUGGY]      pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	261	261	2	replace	_reportError( "Current  token( "+getMessage()  + ")not  a  value, ",  JsonToken.FIELD_NAME);	  _reportError(   "Current    token(   "+getMessage()    +   ")not    a    value   ",    JsonToken.FIELD_NAME);    	non-compiled	[CE]  cannot  find  symbol	32	None	replace
1725	[BUG]  [BUGGY]  if(stackSize  >  0)  {  popStack();  }  else  {  JsonToken.START_OBJECT  =  null;  pathNames[stackSize  -  1]  =   "null ";  }  [CE]  cannot  find  symbol  START_OBJECT  [FE]                          ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {      [BUGGY]  if(stackSize  >  0)  {  popStack();  }  else  {  JsonToken.START_OBJECT  =  null;  pathNames[stackSize  -  1]  =   "null ";  }  [BUGGY]      pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	261	261	2	replace	if(stackSize  >  0)  {  popStack();  }  else  {  JsonToken.START_OBJECT  =  null;  pathNames[stackSize  -  1]  =   "null ";  }	  if(stackSize    >    0)    {    popStack();    }    else    {    JsonToken.START_OBJECT    =    null;    pathNames[stackSize    -    1]    =    null;    }    	non-compiled	[CE]  cannot  find  symbol  START_OBJECT	140	None	replace
1726	[BUG]  [BUGGY]          if(stackSize  >  0)  {  pathNames[stackSize  -  1]  =  null;  }  if(stackSize  >  0)  {  pathNames[stackSized  -  1]  =  null;  }  [CE]  cannot  find  symbol  stackSized  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {      [BUGGY]          if(stackSize  >  0)  {  pathNames[stackSize  -  1]  =  null;  }  if(stackSize  >  0)  {  pathNames[stackSized  -  1]  =  null;  }  [BUGGY]      pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	261	261	2	replace	                if(stackSize    >    0)    {    pathNames[stackSize    -    1]    =    null;    }    if(stackSize  >  0)  {  pathNames[stackSized  -  1]  =  null;  }	  	non-compiled	[CE]  cannot  find  symbol  stackSized	173	None	add
1727	[BUG]  [BUGGY]  connectToPossibleExceptionHandler(JsonToken.EXPR_RESULT,  result);  [CE]  cannot  find  symbol  EXPR_RESULT  [FE]            ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {      [BUGGY]  connectToPossibleExceptionHandler(JsonToken.EXPR_RESULT,  result);  [BUGGY]      pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	261	261	2	replace	connectToPossibleExceptionHandler(JsonToken.EXPR_RESULT,  result);	  connectToPossibleExceptionHandler(JsonToken.EXPR_RESULT);    	non-compiled	[CE]  cannot  find  symbol  EXPR_RESULT	1	None	replace
1728	[BUG]  [BUGGY]  _reportError( "Current  token( "+JsonToken.VALUE_EMBEDDED_OBJECT+ ")not  an  object. ");  [CE]  cannot  find  symbol  VALUE_EMBEDDED_OBJECT  [FE]        ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {      [BUGGY]  _reportError( "Current  token( "+JsonToken.VALUE_EMBEDDED_OBJECT+ ")not  an  object. ");  [BUGGY]      pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	261	261	2	replace	_reportError( "Current  token( "+JsonToken.VALUE_EMBEDDED_OBJECT+ ")not  an  object. ");	  pullStack();    	non-compiled	[CE]  cannot  find  symbol  VALUE_EMBEDDED_OBJECT	69	None	replace
1729	[BUG]  [BUGGY]  _reportError( "Current  token( "+getClass().getName()  + ")not  a  value ",  JsonToken.END_ARRAY);  [CE]  cannot  find  symbol  [FE]              ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {      [BUGGY]  _reportError( "Current  token( "+getClass().getName()  + ")not  a  value ",  JsonToken.END_ARRAY);  [BUGGY]      pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	261	261	2	replace	_reportError( "Current  token( "+getClass().getName()  + ")not  a  value ",  JsonToken.END_ARRAY);	  _reportError(   "Current    token(   "+getClass().getName()    +   ")not    a    value   ",    JsonToken.VALUE_NULL);    	non-compiled	[CE]  cannot  find  symbol	25	None	replace
1730	[BUG]  [BUGGY]  _reportError( "Current  token( "+getClass().getName()  + ")not  a  value ",  count,  stackSize);  [CE]  cannot  find  symbol  count  [FE]            ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {      [BUGGY]  _reportError( "Current  token( "+getClass().getName()  + ")not  a  value ",  count,  stackSize);  [BUGGY]      pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	261	261	2	replace	_reportError( "Current  token( "+getClass().getName()  + ")not  a  value ",  count,  stackSize);	  _reportError(   "Current    token(   "+getClass().getName()    +   ")not    a    value   ",    stackSize);    	non-compiled	[CE]  cannot  find  symbol  count	204	None	replace
1731	[BUG]  [BUGGY]  connectToPossibleExceptionHandler(this,  stack.throwInternal());  [CE]  cannot  find  symbol  [FE]                  ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {      [BUGGY]  connectToPossibleExceptionHandler(this,  stack.throwInternal());  [BUGGY]      pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	261	261	2	replace	connectToPossibleExceptionHandler(this,  stack.throwInternal());	  connectToPossibleExceptionHandler(this.throwInternal());    	non-compiled	[CE]  cannot  find  symbol	50	None	replace
1732	[BUG]  [BUGGY]  connectToPossibleExceptionHandler(jsonToken,  JsonToken.END_ARRAY);  [CE]  cannot  find  symbol  jsonToken  [FE]                              ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {      [BUGGY]  connectToPossibleExceptionHandler(jsonToken,  JsonToken.END_ARRAY);  [BUGGY]      pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	261	261	2	replace	connectToPossibleExceptionHandler(jsonToken,  JsonToken.END_ARRAY);	  connectToPossibleExceptionHandler(null,    JsonToken.END_ARRAY);    	non-compiled	[CE]  cannot  find  symbol  jsonToken	80	None	replace
1733	[BUG]  [BUGGY]  pathNames[stackSize  -  1]  =   "null ".;  [CE]  <identifier>  expected  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {      [BUGGY]  pathNames[stackSize  -  1]  =   "null ".;  [BUGGY]      pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	261	261	2	replace	pathNames[stackSize  -  1]  =   "null ".;	  pathNames[stackSize    -    2]    =       "null   ";    	non-compiled	[CE]  <identifier>  expected	41	None	replace
1734	[BUG]  [BUGGY]  JsonToken.VALUE_NULL  =  new  JsonToken(JsonToken.FIELD_NAME);  pathNames[stackSize  -  1]  =  null   ";  }  [CE]  unclosed  string  literal  [FE]                    ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {      [BUGGY]  JsonToken.VALUE_NULL  =  new  JsonToken(JsonToken.FIELD_NAME);  pathNames[stackSize  -  1]  =  null   ";  }  [BUGGY]      pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	261	261	2	replace	JsonToken.VALUE_NULL  =  new  JsonToken(JsonToken.FIELD_NAME);  pathNames[stackSize  -  1]  =  null   ";  }	  if(stackSize    >    0)    {    popStack();    }    else    {    JsonToken.VALUE_NULL    =    new    JsonToken(JsonToken.FIELD_NAME);    pathNames[stackSize    -    1]    =    null       ";    }    	non-compiled	[CE]  unclosed  string  literal	126	None	replace
1735	[BUG]  [BUGGY]  if(stackSize  >  0)  {  handleUnsupportedOperation();  }  else  {  pathNames[stackSize  -  1]  =  null;  }  [CE]  cannot  find  symbol  [FE]                  ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {      [BUGGY]  if(stackSize  >  0)  {  handleUnsupportedOperation();  }  else  {  pathNames[stackSize  -  1]  =  null;  }  [BUGGY]      pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	261	261	2	replace	if(stackSize  >  0)  {  handleUnsupportedOperation();  }  else  {  pathNames[stackSize  -  1]  =  null;  }	  handleUnsupportedOperation();    	non-compiled	[CE]  cannot  find  symbol	65	None	replace
1736	[BUG]  [BUGGY]  if(stackSize  >  0)  {  handleUnsupportedOperation();  }  else  {  pathNames[stackSize  -  1]  =  null;  System.arraycopy(pathNames,  0,  pathNames,  0,  stackSize  -  1);  }  [CE]  cannot  find  symbol  [FE]                    ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {      [BUGGY]  if(stackSize  >  0)  {  handleUnsupportedOperation();  }  else  {  pathNames[stackSize  -  1]  =  null;  System.arraycopy(pathNames,  0,  pathNames,  0,  stackSize  -  1);  }  [BUGGY]      pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	261	261	2	replace	if(stackSize  >  0)  {  handleUnsupportedOperation();  }  else  {  pathNames[stackSize  -  1]  =  null;  System.arraycopy(pathNames,  0,  pathNames,  0,  stackSize  -  1);  }	  handleUnsupportedOperation();    	non-compiled	[CE]  cannot  find  symbol	65	None	replace
1737	[BUG]  [BUGGY]  if(stackSize  >  0)  {  handleUnsupportedOperation();  }  else  {  pathNames[stackSize  -  1]  =   "null ";  }  [CE]  cannot  find  symbol  [FE]                      ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {      [BUGGY]  if(stackSize  >  0)  {  handleUnsupportedOperation();  }  else  {  pathNames[stackSize  -  1]  =   "null ";  }  [BUGGY]      pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	261	261	2	replace	if(stackSize  >  0)  {  handleUnsupportedOperation();  }  else  {  pathNames[stackSize  -  1]  =   "null ";  }	  handleUnsupportedOperation();    	non-compiled	[CE]  cannot  find  symbol	65	None	replace
1738	[BUG]  [BUGGY]  if(stackSize  >  0)  {  handleUnsupportedOperation();  }  [CE]  cannot  find  symbol  [FE]                        ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {      [BUGGY]  if(stackSize  >  0)  {  handleUnsupportedOperation();  }  [BUGGY]      pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	261	261	2	replace	if(stackSize  >  0)  {  handleUnsupportedOperation();  }	  handleUnsupportedOperation();    	non-compiled	[CE]  cannot  find  symbol	65	None	replace
1739	[BUG]  [BUGGY]  if(stackSize  >  0)  {  handleUnsupportedOperation();  }  else  {  pathNames[stackSize  -  1]  =   "null ";  System.arraycopy(pathNames,  0,  pathNames,  0,  stackSize  -  1);  }  [CE]  cannot  find  symbol  [FE]                          ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {      [BUGGY]  if(stackSize  >  0)  {  handleUnsupportedOperation();  }  else  {  pathNames[stackSize  -  1]  =   "null ";  System.arraycopy(pathNames,  0,  pathNames,  0,  stackSize  -  1);  }  [BUGGY]      pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	261	261	2	replace	if(stackSize  >  0)  {  handleUnsupportedOperation();  }  else  {  pathNames[stackSize  -  1]  =   "null ";  System.arraycopy(pathNames,  0,  pathNames,  0,  stackSize  -  1);  }	  handleUnsupportedOperation();    	non-compiled	[CE]  cannot  find  symbol	65	None	replace
1740	[BUG]  [BUGGY]  _reportError( "Current  token( "+JsonToken.VALUE_NUMBER_EXPR_RESULT+ ")not  a  value ");  [CE]  cannot  find  symbol  VALUE_NUMBER_EXPR_RESULT  [FE]                    ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {      [BUGGY]  _reportError( "Current  token( "+JsonToken.VALUE_NUMBER_EXPR_RESULT+ ")not  a  value ");  [BUGGY]      pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	261	261	2	replace	_reportError( "Current  token( "+JsonToken.VALUE_NUMBER_EXPR_RESULT+ ")not  a  value ");	  _reportError(   "Current    token(   "+JsonToken.VALUE_NUMBER_ERROR+   ")not    a    value   ");    	non-compiled	[CE]  cannot  find  symbol  VALUE_NUMBER_EXPR_RESULT	127	None	replace
1741	[BUG]  [BUGGY]  if(stackSize  >  0)  {  popStack();  System.arraycopy(stackNames,  0,  pathNames,  1,  stackSize  -  1);  }  [CE]  cannot  find  symbol  stackNames  [FE]              ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {      [BUGGY]  if(stackSize  >  0)  {  popStack();  System.arraycopy(stackNames,  0,  pathNames,  1,  stackSize  -  1);  }  [BUGGY]      pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	261	261	2	replace	if(stackSize  >  0)  {  popStack();  System.arraycopy(stackNames,  0,  pathNames,  1,  stackSize  -  1);  }	  if(stackSize    >    0)    {    popStack();    }    if(stackSize    >    0)    {    popStack();    System.arraycopy(stackNames,    0,    pathNames,    1,    stackSize    -    1);    }    	non-compiled	[CE]  cannot  find  symbol  stackNames	162	None	replace
1742	[BUG]  [BUGGY]  connectToPossibleExceptionHandler(jsonToken.START_OBJECT,  JsonToken.START_OBJECT);  [CE]  cannot  find  symbol  jsonToken  [FE]                      ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {      [BUGGY]  connectToPossibleExceptionHandler(jsonToken.START_OBJECT,  JsonToken.START_OBJECT);  [BUGGY]      pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	261	261	2	replace	connectToPossibleExceptionHandler(jsonToken.START_OBJECT,  JsonToken.START_OBJECT);	  connectToPossibleExceptionHandler(throwInternal(),    JsonToken.START_OBJECT);    	non-compiled	[CE]  cannot  find  symbol  jsonToken	52	None	replace
1743	[BUG]  [BUGGY]  connectToPossibleExceptionHandler(jsonToken.START_OBJECT,  JsonToken.START_ARRAY);  [CE]  cannot  find  symbol  jsonToken  [FE]                        ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {      [BUGGY]  connectToPossibleExceptionHandler(jsonToken.START_OBJECT,  JsonToken.START_ARRAY);  [BUGGY]      pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	261	261	2	replace	connectToPossibleExceptionHandler(jsonToken.START_OBJECT,  JsonToken.START_ARRAY);	  connectToPossibleExceptionHandler(throwInternal(),    JsonToken.START_OBJECT);    	non-compiled	[CE]  cannot  find  symbol  jsonToken	52	None	replace
1744	[BUG]  [BUGGY]  connectToPossibleExceptionHandler(start,  stackSize,  JsonToken.START_OBJECT);  [CE]  cannot  find  symbol  start  [FE]                          ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {      [BUGGY]  connectToPossibleExceptionHandler(start,  stackSize,  JsonToken.START_OBJECT);  [BUGGY]      pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	261	261	2	replace	connectToPossibleExceptionHandler(start,  stackSize,  JsonToken.START_OBJECT);	  connectToPossibleExceptionHandler(throwInternal(),    JsonToken.START_OBJECT);    	non-compiled	[CE]  cannot  find  symbol  start	52	None	replace
1745	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]          ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {      [BUGGY]  if(stackSize  >  1  ||  stackSize  >  1)  {  popStack();  }  [BUGGY]      pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	261	261	2	add	if(stackSize  >  1  ||  stackSize  >  1)  {  popStack();  }	  if(stackSize    >    0)    {    popStack();    }    If(stackSize    >    0)    {    popStack();    }    	compilable	  [FE]  AssertionFailedError  	208	2	replace
1746	[BUG]  [BUGGY]  if(stackSize  >  1  ||  stackSize  >  1)  {  popStack();  }  [FE]  AssertionFailedError  [FE]          ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {      [BUGGY]  if(stackSize  >  1  ||  stackSize  >  1)  {  popStack();  }  [BUGGY]      pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	261	261	2	replace	if(stackSize  >  1  ||  stackSize  >  1)  {  popStack();  }	  if(stackSize    >    0)    {    popStack();    }    If(stackSize    >    0)    {    popStack();    }    	compilable	  [FE]  AssertionFailedError  	208	2	replace
1747	[BUG]  [BUGGY]  pathIndices[stackSize  -  1]  =  null(pathNames);  [CE]  ';'  expected  [FE]                  ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {      [BUGGY]  pathIndices[stackSize  -  1]  =  null(pathNames);  [BUGGY]      pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	261	261	2	replace	pathIndices[stackSize  -  1]  =  null(pathNames);	  pathIndices[stackSize    -    1]    =    null       ";    	non-compiled	[CE]  ';'  expected	168	None	replace
1748	[BUG]  [BUGGY]  [FE]  IllegalArgumentException  [FE]    IllegalArgumentException    [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {      [BUGGY]  if(stackSize  >  1)  {  popStack();  }  else  {  throw  new  IllegalArgumentException(   "   ");  }  if(stackSize  <  1)  {  popStack();  }  else  {  throw  new  IllegalArgumentException( "   ");  }  [BUGGY]      pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	261	261	2	add	if(stackSize    >    1)    {    popStack();    }    else    {    throw    new    IllegalArgumentException(   "   ");    }    if(stackSize  <  1)  {  popStack();  }  else  {  throw  new  IllegalArgumentException( "   ");  }	  	compilable	  [FE]  IllegalArgumentException  	175	2	add
1749	[BUG]  [BUGGY]  if(stackSize  >  1)  {  popStack();  }  else  {  throw  new  IllegalArgumentException(   "   ");  }  if(stackSize  <  1)  {  popStack();  }  else  {  throw  new  IllegalArgumentException( "   ");  }  [FE]  IllegalArgumentException  [FE]    IllegalArgumentException    [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {      [BUGGY]  if(stackSize  >  1)  {  popStack();  }  else  {  throw  new  IllegalArgumentException(   "   ");  }  if(stackSize  <  1)  {  popStack();  }  else  {  throw  new  IllegalArgumentException( "   ");  }  [BUGGY]      pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	261	261	2	replace	if(stackSize    >    1)    {    popStack();    }    else    {    throw    new    IllegalArgumentException(   "   ");    }    if(stackSize  <  1)  {  popStack();  }  else  {  throw  new  IllegalArgumentException( "   ");  }	  	compilable	  [FE]  IllegalArgumentException  	175	2	add
1750	[BUG]  [BUGGY]  [FE]  ArrayIndexOutOfBoundsException  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {      [BUGGY]  if(stackSize    >    0)    {    popStack();    }    if(stackSize  >  0)  {  popStack();  return;  }  if(stackSize  >=  0)  {  popStack();  }  if(stackSize  >  0)  {  popStack();  return;  }  [BUGGY]      pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	261	261	2	add	if(stackSize        >        0)        {        popStack();        }        if(stackSize    >    0)    {    popStack();    return;    }    if(stackSize  >=  0)  {  popStack();  }  if(stackSize  >  0)  {  popStack();  return;  }	  	compilable	  [FE]  ArrayIndexOutOfBoundsException  	211	2	add
1751	[BUG]  [BUGGY]  if(stackSize    >    0)    {    popStack();    }    if(stackSize  >  0)  {  popStack();  return;  }  if(stackSize  >=  0)  {  popStack();  }  if(stackSize  >  0)  {  popStack();  return;  }  [FE]  ArrayIndexOutOfBoundsException  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {      [BUGGY]  if(stackSize    >    0)    {    popStack();    }    if(stackSize  >  0)  {  popStack();  return;  }  if(stackSize  >=  0)  {  popStack();  }  if(stackSize  >  0)  {  popStack();  return;  }  [BUGGY]      pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	261	261	2	replace	if(stackSize        >        0)        {        popStack();        }        if(stackSize    >    0)    {    popStack();    return;    }    if(stackSize  >=  0)  {  popStack();  }  if(stackSize  >  0)  {  popStack();  return;  }	  	compilable	  [FE]  ArrayIndexOutOfBoundsException  	211	2	add
1752	[BUG]  [BUGGY]  [FE]  ArrayIndexOutOfBoundsException  [FE]      ArrayIndexOutOfBoundsException    [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {      [BUGGY]  if(stackSize    >    0)    {    popStack();    }    if(stackSize  >  0)  {  popStack();  return;  }  if(stackSize  ==  0)  {  popStack();  }  if(stackSize  >  0)  {  popStack();  return;  }  [BUGGY]      pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	261	261	2	add	if(stackSize        >        0)        {        popStack();        }        if(stackSize    >    0)    {    popStack();    return;    }    if(stackSize  ==  0)  {  popStack();  }  if(stackSize  >  0)  {  popStack();  return;  }	  	compilable	  [FE]  ArrayIndexOutOfBoundsException  	211	2	add
1753	[BUG]  [BUGGY]  if(stackSize    >    0)    {    popStack();    }    if(stackSize  >  0)  {  popStack();  return;  }  if(stackSize  ==  0)  {  popStack();  }  if(stackSize  >  0)  {  popStack();  return;  }  [FE]  ArrayIndexOutOfBoundsException  [FE]      ArrayIndexOutOfBoundsException    [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {      [BUGGY]  if(stackSize    >    0)    {    popStack();    }    if(stackSize  >  0)  {  popStack();  return;  }  if(stackSize  ==  0)  {  popStack();  }  if(stackSize  >  0)  {  popStack();  return;  }  [BUGGY]      pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	261	261	2	replace	if(stackSize        >        0)        {        popStack();        }        if(stackSize    >    0)    {    popStack();    return;    }    if(stackSize  ==  0)  {  popStack();  }  if(stackSize  >  0)  {  popStack();  return;  }	  	compilable	  [FE]  ArrayIndexOutOfBoundsException  	211	2	add
1754	[BUG]  [BUGGY]  _reportError( "Current  token( "+getMessage()  + ")not  a  value, ",  JsonToken.NAME);  [CE]  cannot  find  symbol  [FE]                ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {      [BUGGY]  _reportError( "Current  token( "+getMessage()  + ")not  a  value, ",  JsonToken.NAME);  [BUGGY]      pathNames[stackSize  -  1]  =       "null     ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	261	261	2	replace	_reportError( "Current  token( "+getMessage()  + ")not  a  value, ",  JsonToken.NAME);	  _reportError(   "Current    token(   "+getMessage()    +   ")not    a    value   ",    JsonToken.NAME);    	non-compiled	[CE]  cannot  find  symbol	143	None	replace
