bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  connectToPossibleExceptionHandler(JsonToken.EXPR_RESULT);  [CE]  cannot  find  symbol  EXPR_RESULT  [FE]        ArrayIndexOutOfBoundsException    [CONTEXT]    @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =     "null   ";  }  else  {    [BUGGY]  connectToPossibleExceptionHandler(JsonToken.EXPR_RESULT);  [BUGGY]    pathNames[stackSize  -  1]  =     "null   ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	261	261	2	replace	connectToPossibleExceptionHandler(JsonToken.EXPR_RESULT);	  connectToPossibleExceptionHandler();    	non-compiled	[CE]  cannot  find  symbol  EXPR_RESULT	11	None	replace
2	[BUG]  [BUGGY]  connectToPossibleExceptionHandler(JsonToken.START_OBJECT);  [CE]  cannot  find  symbol  START_OBJECT  [FE]          ArrayIndexOutOfBoundsException    [CONTEXT]    @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =     "null   ";  }  else  {    [BUGGY]  connectToPossibleExceptionHandler(JsonToken.START_OBJECT);  [BUGGY]    pathNames[stackSize  -  1]  =     "null   ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	261	261	2	replace	connectToPossibleExceptionHandler(JsonToken.START_OBJECT);	  connectToPossibleExceptionHandler();    	non-compiled	[CE]  cannot  find  symbol  START_OBJECT	11	None	replace
3	[BUG]  [BUGGY]  connectToPossibleExceptionHandler(this);  [CE]  cannot  find  symbol  [FE]            ArrayIndexOutOfBoundsException    [CONTEXT]    @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =     "null   ";  }  else  {    [BUGGY]  connectToPossibleExceptionHandler(this);  [BUGGY]    pathNames[stackSize  -  1]  =     "null   ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	261	261	2	replace	connectToPossibleExceptionHandler(this);	  connectToPossibleExceptionHandler();    	non-compiled	[CE]  cannot  find  symbol	11	None	replace
4	[BUG]  [BUGGY]  connectToPossibleExceptionHandler(JsonToken.VALUE_EMPTY);  [CE]  cannot  find  symbol  VALUE_EMPTY  [FE]              ArrayIndexOutOfBoundsException    [CONTEXT]    @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =     "null   ";  }  else  {    [BUGGY]  connectToPossibleExceptionHandler(JsonToken.VALUE_EMPTY);  [BUGGY]    pathNames[stackSize  -  1]  =     "null   ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	261	261	2	replace	connectToPossibleExceptionHandler(JsonToken.VALUE_EMPTY);	  connectToPossibleExceptionHandler();    	non-compiled	[CE]  cannot  find  symbol  VALUE_EMPTY	11	None	replace
5	[BUG]  [BUGGY]  connectToPossibleExceptionHandler(JsonToken.VALUE_NULL);  [CE]  cannot  find  symbol  VALUE_NULL  [FE]                ArrayIndexOutOfBoundsException    [CONTEXT]    @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =     "null   ";  }  else  {    [BUGGY]  connectToPossibleExceptionHandler(JsonToken.VALUE_NULL);  [BUGGY]    pathNames[stackSize  -  1]  =     "null   ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	261	261	2	replace	connectToPossibleExceptionHandler(JsonToken.VALUE_NULL);	  connectToPossibleExceptionHandler();    	non-compiled	[CE]  cannot  find  symbol  VALUE_NULL	11	None	replace
6	[BUG]  [BUGGY]  connectToPossibleExceptionHandler(null,  SENTINEL_CLOSED);  [CE]  cannot  find  symbol  [FE]            ArrayIndexOutOfBoundsException    [CONTEXT]    @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =     "null   ";  }  else  {    [BUGGY]  connectToPossibleExceptionHandler(null,  SENTINEL_CLOSED);  [BUGGY]    pathNames[stackSize  -  1]  =     "null   ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	261	261	2	replace	connectToPossibleExceptionHandler(null,  SENTINEL_CLOSED);	  connectToPossibleExceptionHandler(null);    	non-compiled	[CE]  cannot  find  symbol	13	None	replace
7	[BUG]  [BUGGY]  connectToPossibleExceptionHandler(pathNames);  [CE]  cannot  find  symbol  [FE]              ArrayIndexOutOfBoundsException    [CONTEXT]    @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =     "null   ";  }  else  {    [BUGGY]  connectToPossibleExceptionHandler(pathNames);  [BUGGY]    pathNames[stackSize  -  1]  =     "null   ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	261	261	2	replace	connectToPossibleExceptionHandler(pathNames);	  connectToPossibleExceptionHandler(null);    	non-compiled	[CE]  cannot  find  symbol	13	None	replace
8	[BUG]  [BUGGY]  connectToPossibleExceptionHandler(null,  JsonToken.START_OBJECT);  [CE]  cannot  find  symbol  START_OBJECT  [FE]                ArrayIndexOutOfBoundsException    [CONTEXT]    @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =     "null   ";  }  else  {    [BUGGY]  connectToPossibleExceptionHandler(null,  JsonToken.START_OBJECT);  [BUGGY]    pathNames[stackSize  -  1]  =     "null   ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	261	261	2	replace	connectToPossibleExceptionHandler(null,  JsonToken.START_OBJECT);	  connectToPossibleExceptionHandler(null);    	non-compiled	[CE]  cannot  find  symbol  START_OBJECT	13	None	replace
9	[BUG]  [BUGGY]  connectToPossibleExceptionHandler(null,  JsonToken.END_OBJECT);  [CE]  cannot  find  symbol  [FE]                  ArrayIndexOutOfBoundsException    [CONTEXT]    @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =     "null   ";  }  else  {    [BUGGY]  connectToPossibleExceptionHandler(null,  JsonToken.END_OBJECT);  [BUGGY]    pathNames[stackSize  -  1]  =     "null   ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	261	261	2	replace	connectToPossibleExceptionHandler(null,  JsonToken.END_OBJECT);	  connectToPossibleExceptionHandler(null);    	non-compiled	[CE]  cannot  find  symbol	13	None	replace
10	[BUG]  [BUGGY]  [FE]  IllegalArgumentException  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]    @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =     "null   ";  }  else  {    [BUGGY]  if(stackSize  >  0)  {  popStack();  }  else  {  throw  new  IllegalArgumentException(   "   ");  }  if(stackSize  >  0)  {  popStack();  }  else  {  throw  new  IllegalArgumentException( "   ");  }  [BUGGY]    pathNames[stackSize  -  1]  =     "null   ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	261	261	2	add	if(stackSize    >    0)    {    popStack();    }    else    {    throw    new    IllegalArgumentException(   "   ");    }    if(stackSize  >  0)  {  popStack();  }  else  {  throw  new  IllegalArgumentException( "   ");  }	  	compilable	  [FE]  IllegalArgumentException  	1	2	add
11	[BUG]  [BUGGY]  if(stackSize  >  0)  {  popStack();  }  else  {  throw  new  IllegalArgumentException(   "   ");  }  if(stackSize  >  0)  {  popStack();  }  else  {  throw  new  IllegalArgumentException( "   ");  }  [FE]  IllegalArgumentException  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]    @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =     "null   ";  }  else  {    [BUGGY]  if(stackSize  >  0)  {  popStack();  }  else  {  throw  new  IllegalArgumentException(   "   ");  }  if(stackSize  >  0)  {  popStack();  }  else  {  throw  new  IllegalArgumentException( "   ");  }  [BUGGY]    pathNames[stackSize  -  1]  =     "null   ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	261	261	2	replace	if(stackSize    >    0)    {    popStack();    }    else    {    throw    new    IllegalArgumentException(   "   ");    }    if(stackSize  >  0)  {  popStack();  }  else  {  throw  new  IllegalArgumentException( "   ");  }	  	compilable	  [FE]  IllegalArgumentException  	1	2	add
12	[BUG]  [BUGGY]  if(stackSize  >  0)  {  popStack();  }  else  {  throw  new  IllegalArgumentException(   "   ");  }  if(stackSize  >  0)  {  popStack();  }  else  {  throw  new  IllegalArgumentException( " ".);  }  [CE]  <identifier>  expected  [FE]      ArrayIndexOutOfBoundsException    [CONTEXT]    @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =     "null   ";  }  else  {    [BUGGY]  if(stackSize  >  0)  {  popStack();  }  else  {  throw  new  IllegalArgumentException(   "   ");  }  if(stackSize  >  0)  {  popStack();  }  else  {  throw  new  IllegalArgumentException( " ".);  }  [BUGGY]    pathNames[stackSize  -  1]  =     "null   ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	261	261	2	replace	if(stackSize    >    0)    {    popStack();    }    else    {    throw    new    IllegalArgumentException(   "   ");    }    if(stackSize  >  0)  {  popStack();  }  else  {  throw  new  IllegalArgumentException( " ".);  }	  	non-compiled	[CE]  <identifier>  expected	1	None	add
13	[BUG]  [BUGGY]  [FE]  IllegalArgumentException  [FE]        ArrayIndexOutOfBoundsException    [CONTEXT]    @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =     "null   ";  }  else  {    [BUGGY]  if(stackSize  >  0)  {  popStack();  }  else  {  throw  new  IllegalArgumentException(   "   ");  }  if(stackSize  >  0)  {  popStack();  }  else  {  throw  new  IllegalArgumentException( ". ");  }  [BUGGY]    pathNames[stackSize  -  1]  =     "null   ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	261	261	2	add	if(stackSize    >    0)    {    popStack();    }    else    {    throw    new    IllegalArgumentException(   "   ");    }    if(stackSize  >  0)  {  popStack();  }  else  {  throw  new  IllegalArgumentException( ". ");  }	  	compilable	  [FE]  IllegalArgumentException  	1	2	add
14	[BUG]  [BUGGY]  if(stackSize  >  0)  {  popStack();  }  else  {  throw  new  IllegalArgumentException(   "   ");  }  if(stackSize  >  0)  {  popStack();  }  else  {  throw  new  IllegalArgumentException( ". ");  }  [FE]  IllegalArgumentException  [FE]        ArrayIndexOutOfBoundsException    [CONTEXT]    @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =     "null   ";  }  else  {    [BUGGY]  if(stackSize  >  0)  {  popStack();  }  else  {  throw  new  IllegalArgumentException(   "   ");  }  if(stackSize  >  0)  {  popStack();  }  else  {  throw  new  IllegalArgumentException( ". ");  }  [BUGGY]    pathNames[stackSize  -  1]  =     "null   ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	261	261	2	replace	if(stackSize    >    0)    {    popStack();    }    else    {    throw    new    IllegalArgumentException(   "   ");    }    if(stackSize  >  0)  {  popStack();  }  else  {  throw  new  IllegalArgumentException( ". ");  }	  	compilable	  [FE]  IllegalArgumentException  	1	2	add
15	[BUG]  [BUGGY]  [FE]  IllegalArgumentException  [FE]          ArrayIndexOutOfBoundsException    [CONTEXT]    @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =     "null   ";  }  else  {    [BUGGY]  if(stackSize  >  0)  {  popStack();  }  else  {  throw  new  IllegalArgumentException(   "   ");  }  if(stackSize  >  0)  {  popStack();  }  else  {  throw  new  IllegalArgumentException( "... ");  }  [BUGGY]    pathNames[stackSize  -  1]  =     "null   ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	261	261	2	add	if(stackSize    >    0)    {    popStack();    }    else    {    throw    new    IllegalArgumentException(   "   ");    }    if(stackSize  >  0)  {  popStack();  }  else  {  throw  new  IllegalArgumentException( "... ");  }	  	compilable	  [FE]  IllegalArgumentException  	1	2	add
16	[BUG]  [BUGGY]  if(stackSize  >  0)  {  popStack();  }  else  {  throw  new  IllegalArgumentException(   "   ");  }  if(stackSize  >  0)  {  popStack();  }  else  {  throw  new  IllegalArgumentException( "... ");  }  [FE]  IllegalArgumentException  [FE]          ArrayIndexOutOfBoundsException    [CONTEXT]    @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =     "null   ";  }  else  {    [BUGGY]  if(stackSize  >  0)  {  popStack();  }  else  {  throw  new  IllegalArgumentException(   "   ");  }  if(stackSize  >  0)  {  popStack();  }  else  {  throw  new  IllegalArgumentException( "... ");  }  [BUGGY]    pathNames[stackSize  -  1]  =     "null   ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	261	261	2	replace	if(stackSize    >    0)    {    popStack();    }    else    {    throw    new    IllegalArgumentException(   "   ");    }    if(stackSize  >  0)  {  popStack();  }  else  {  throw  new  IllegalArgumentException( "... ");  }	  	compilable	  [FE]  IllegalArgumentException  	1	2	add
17	[BUG]  [BUGGY]  [FE]  java.lang.IllegalArgumentException:    [FE]            ArrayIndexOutOfBoundsException    [CONTEXT]    @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =     "null   ";  }  else  {    [BUGGY]  if(stackSize  >  0)  {  popStack();  }  else  {  throw  new  IllegalArgumentException(   "   ");  }  if(stackSize  >  0)  {  popStack();  }  else  {  throw  new  IllegalArgumentException( ", ");  }  [BUGGY]    pathNames[stackSize  -  1]  =     "null   ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	261	261	2	add	if(stackSize    >    0)    {    popStack();    }    else    {    throw    new    IllegalArgumentException(   "   ");    }    if(stackSize  >  0)  {  popStack();  }  else  {  throw  new  IllegalArgumentException( ", ");  }	  	compilable	  [FE]  java.lang.IllegalArgumentException:    	1	2	add
18	[BUG]  [BUGGY]  if(stackSize  >  0)  {  popStack();  }  else  {  throw  new  IllegalArgumentException(   "   ");  }  if(stackSize  >  0)  {  popStack();  }  else  {  throw  new  IllegalArgumentException( ", ");  }  [FE]  java.lang.IllegalArgumentException:    [FE]            ArrayIndexOutOfBoundsException    [CONTEXT]    @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =     "null   ";  }  else  {    [BUGGY]  if(stackSize  >  0)  {  popStack();  }  else  {  throw  new  IllegalArgumentException(   "   ");  }  if(stackSize  >  0)  {  popStack();  }  else  {  throw  new  IllegalArgumentException( ", ");  }  [BUGGY]    pathNames[stackSize  -  1]  =     "null   ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	261	261	2	replace	if(stackSize    >    0)    {    popStack();    }    else    {    throw    new    IllegalArgumentException(   "   ");    }    if(stackSize  >  0)  {  popStack();  }  else  {  throw  new  IllegalArgumentException( ", ");  }	  	compilable	  [FE]  java.lang.IllegalArgumentException:    	1	2	add
19	[BUG]  [BUGGY]  pathIndices[stackSize  -  1]  =  null;  [CE]  incompatible  types  [FE]                    ArrayIndexOutOfBoundsException    [CONTEXT]    @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =     "null   ";  }  else  {    [BUGGY]  pathIndices[stackSize  -  1]  =  null;  [BUGGY]    pathNames[stackSize  -  1]  =     "null   ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	261	261	2	replace	pathIndices[stackSize  -  1]  =  null;	  if(stackSize    >    0)    {    popStack();    }    else    {    JsonToken.START_OBJECT    =    null;    nextName();    pathNames[stackSize    -    1]    =    null;    }    	non-compiled	[CE]  incompatible  types	8	None	replace
20	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]                      ArrayIndexOutOfBoundsException    [CONTEXT]    @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =     "null   ";  }  else  {    [BUGGY]  pathNames[stackSize  -  1]  =  null;  [BUGGY]    pathNames[stackSize  -  1]  =     "null   ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	261	261	2	add	pathNames[stackSize  -  1]  =  null;	  if(stackSize    >    0)    {    popStack();    }    else    {    JsonToken.START_OBJECT    =    null;    nextName();    pathNames[stackSize    -    1]    =    null;    }    	compilable	  [FE]  AssertionFailedError  	8	2	replace
21	[BUG]  [BUGGY]  pathNames[stackSize  -  1]  =  null;  [FE]  AssertionFailedError  [FE]                      ArrayIndexOutOfBoundsException    [CONTEXT]    @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =     "null   ";  }  else  {    [BUGGY]  pathNames[stackSize  -  1]  =  null;  [BUGGY]    pathNames[stackSize  -  1]  =     "null   ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	261	261	2	replace	pathNames[stackSize  -  1]  =  null;	  if(stackSize    >    0)    {    popStack();    }    else    {    JsonToken.START_OBJECT    =    null;    nextName();    pathNames[stackSize    -    1]    =    null;    }    	compilable	  [FE]  AssertionFailedError  	8	2	replace
22	[BUG]  [BUGGY]  Path  pathIndices[stackSize  -  1]  =  null;  [CE]  ']'  expected  [FE]                        ArrayIndexOutOfBoundsException    [CONTEXT]    @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =     "null   ";  }  else  {    [BUGGY]  Path  pathIndices[stackSize  -  1]  =  null;  [BUGGY]    pathNames[stackSize  -  1]  =     "null   ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	261	261	2	replace	Path  pathIndices[stackSize  -  1]  =  null;	  if(stackSize    >    0)    {    popStack();    }    else    {    JsonToken.START_OBJECT    =    null;    nextName();    pathNames[stackSize    -    1]    =    null;    }    	non-compiled	[CE]  ']'  expected	8	None	replace
23	[BUG]  [BUGGY]  pathIndices[stackSize  -  2]  =  null;  [CE]  incompatible  types  [FE]                          ArrayIndexOutOfBoundsException    [CONTEXT]    @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =     "null   ";  }  else  {    [BUGGY]  pathIndices[stackSize  -  2]  =  null;  [BUGGY]    pathNames[stackSize  -  1]  =     "null   ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	261	261	2	replace	pathIndices[stackSize  -  2]  =  null;	  if(stackSize    >    0)    {    popStack();    }    else    {    JsonToken.START_OBJECT    =    null;    nextName();    pathNames[stackSize    -    1]    =    null;    }    	non-compiled	[CE]  incompatible  types	8	None	replace
24	[BUG]  [BUGGY]  _reportError( "Current  token( "+getClass().getName()  + ")not  a  value. ");  [CE]  cannot  find  symbol  [FE]        ArrayIndexOutOfBoundsException    [CONTEXT]    @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =     "null   ";  }  else  {    [BUGGY]  _reportError( "Current  token( "+getClass().getName()  + ")not  a  value. ");  [BUGGY]    pathNames[stackSize  -  1]  =     "null   ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	261	261	2	replace	_reportError( "Current  token( "+getClass().getName()  + ")not  a  value. ");	  _reportError(   "Current    token(   "+getClass().getName()    +   ")not    a    value   ");    	non-compiled	[CE]  cannot  find  symbol	18	None	replace
25	[BUG]  [BUGGY]  _reportError( "Current  token( "+getClass().getName()  + ")not  a  value ",  JsonToken.VALUE_NULL);  [CE]  cannot  find  symbol  VALUE_NULL  [FE]          ArrayIndexOutOfBoundsException    [CONTEXT]    @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =     "null   ";  }  else  {    [BUGGY]  _reportError( "Current  token( "+getClass().getName()  + ")not  a  value ",  JsonToken.VALUE_NULL);  [BUGGY]    pathNames[stackSize  -  1]  =     "null   ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	261	261	2	replace	_reportError( "Current  token( "+getClass().getName()  + ")not  a  value ",  JsonToken.VALUE_NULL);	  _reportError(   "Current    token(   "+getClass().getName()    +   ")not    a    value   ");    	non-compiled	[CE]  cannot  find  symbol  VALUE_NULL	18	None	replace
26	[BUG]  [BUGGY]  _reportError( "Current  token( "+getClass().getName()  + ")not  a  value ",  JsonToken.END_OBJECT);  [CE]  cannot  find  symbol  [FE]            ArrayIndexOutOfBoundsException    [CONTEXT]    @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =     "null   ";  }  else  {    [BUGGY]  _reportError( "Current  token( "+getClass().getName()  + ")not  a  value ",  JsonToken.END_OBJECT);  [BUGGY]    pathNames[stackSize  -  1]  =     "null   ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	261	261	2	replace	_reportError( "Current  token( "+getClass().getName()  + ")not  a  value ",  JsonToken.END_OBJECT);	  _reportError(   "Current    token(   "+getClass().getName()    +   ")not    a    value   ");    	non-compiled	[CE]  cannot  find  symbol	18	None	replace
27	[BUG]  [BUGGY]  _reportError( "Current  token( "+getClass().getName()  + ")Not  a  value ");  [CE]  cannot  find  symbol  [FE]              ArrayIndexOutOfBoundsException    [CONTEXT]    @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =     "null   ";  }  else  {    [BUGGY]  _reportError( "Current  token( "+getClass().getName()  + ")Not  a  value ");  [BUGGY]    pathNames[stackSize  -  1]  =     "null   ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	261	261	2	replace	_reportError( "Current  token( "+getClass().getName()  + ")Not  a  value ");	  _reportError(   "Current    token(   "+getClass().getName()    +   ")not    a    value   ");    	non-compiled	[CE]  cannot  find  symbol	18	None	replace
28	[BUG]  [BUGGY]  _reportError( "Current  token( "+getClass().getName()  + ")is  not  a  value ");  [CE]  cannot  find  symbol  [FE]                ArrayIndexOutOfBoundsException    [CONTEXT]    @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =     "null   ";  }  else  {    [BUGGY]  _reportError( "Current  token( "+getClass().getName()  + ")is  not  a  value ");  [BUGGY]    pathNames[stackSize  -  1]  =     "null   ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	261	261	2	replace	_reportError( "Current  token( "+getClass().getName()  + ")is  not  a  value ");	  _reportError(   "Current    token(   "+getClass().getName()    +   ")not    a    value   ");    	non-compiled	[CE]  cannot  find  symbol	18	None	replace
29	[BUG]  [BUGGY]  _reportError( "Current  token( "+getMessage()  + ")not  a  value. ");  [CE]  cannot  find  symbol  [FE]            ArrayIndexOutOfBoundsException    [CONTEXT]    @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =     "null   ";  }  else  {    [BUGGY]  _reportError( "Current  token( "+getMessage()  + ")not  a  value. ");  [BUGGY]    pathNames[stackSize  -  1]  =     "null   ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	261	261	2	replace	_reportError( "Current  token( "+getMessage()  + ")not  a  value. ");	  _reportError(   "Current    token(   "+getMessage()    +   ")not    a    value   ");    	non-compiled	[CE]  cannot  find  symbol	20	None	replace
30	[BUG]  [BUGGY]  _reportError( "Current  token( "+getMessage()  + ")not  a  value ",  JsonToken.VALUE_NULL);  [CE]  cannot  find  symbol  [FE]              ArrayIndexOutOfBoundsException    [CONTEXT]    @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =     "null   ";  }  else  {    [BUGGY]  _reportError( "Current  token( "+getMessage()  + ")not  a  value ",  JsonToken.VALUE_NULL);  [BUGGY]    pathNames[stackSize  -  1]  =     "null   ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	261	261	2	replace	_reportError( "Current  token( "+getMessage()  + ")not  a  value ",  JsonToken.VALUE_NULL);	  _reportError(   "Current    token(   "+getMessage()    +   ")not    a    value   ");    	non-compiled	[CE]  cannot  find  symbol	20	None	replace
31	[BUG]  [BUGGY]  _reportError( "Current  token( "+getMessage()  + ")not  a  value ",  JsonToken.END_OBJECT);  [CE]  cannot  find  symbol  [FE]                ArrayIndexOutOfBoundsException    [CONTEXT]    @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =     "null   ";  }  else  {    [BUGGY]  _reportError( "Current  token( "+getMessage()  + ")not  a  value ",  JsonToken.END_OBJECT);  [BUGGY]    pathNames[stackSize  -  1]  =     "null   ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	261	261	2	replace	_reportError( "Current  token( "+getMessage()  + ")not  a  value ",  JsonToken.END_OBJECT);	  _reportError(   "Current    token(   "+getMessage()    +   ")not    a    value   ");    	non-compiled	[CE]  cannot  find  symbol	20	None	replace
32	[BUG]  [BUGGY]  _reportError( "Current  token( "+getMessage()  + ")not  a  value ",  JsonToken.FIELD_NAME);  [CE]  cannot  find  symbol  [FE]                  ArrayIndexOutOfBoundsException    [CONTEXT]    @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =     "null   ";  }  else  {    [BUGGY]  _reportError( "Current  token( "+getMessage()  + ")not  a  value ",  JsonToken.FIELD_NAME);  [BUGGY]    pathNames[stackSize  -  1]  =     "null   ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	261	261	2	replace	_reportError( "Current  token( "+getMessage()  + ")not  a  value ",  JsonToken.FIELD_NAME);	  _reportError(   "Current    token(   "+getMessage()    +   ")not    a    value   ");    	non-compiled	[CE]  cannot  find  symbol	20	None	replace
33	[BUG]  [BUGGY]  pathIndices[stackSize  -  1]  =   "null ";  [CE]  incompatible  types  [FE]                  ArrayIndexOutOfBoundsException    [CONTEXT]    @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =     "null   ";  }  else  {    [BUGGY]  pathIndices[stackSize  -  1]  =   "null ";  [BUGGY]    pathNames[stackSize  -  1]  =     "null   ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	261	261	2	replace	pathIndices[stackSize  -  1]  =   "null ";	  if(stackSize    >    0)    {    popStack();    }    else    {    JsonToken.START_OBJECT    =    null;    nextName();    pathNames[stackSize    -    1]    =       "null   ";    }    	non-compiled	[CE]  incompatible  types	7	None	replace
34	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]                    ArrayIndexOutOfBoundsException    [CONTEXT]    @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =     "null   ";  }  else  {    [BUGGY]  pathNames[stackSize  -  1]  =   "null ";  [BUGGY]    pathNames[stackSize  -  1]  =     "null   ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	261	261	2	add	pathNames[stackSize  -  1]  =   "null ";	  if(stackSize    >    0)    {    popStack();    }    else    {    JsonToken.START_OBJECT    =    null;    nextName();    pathNames[stackSize    -    1]    =       "null   ";    }    	compilable	  [FE]  AssertionFailedError  	7	2	replace
35	[BUG]  [BUGGY]  pathNames[stackSize  -  1]  =   "null ";  [FE]  AssertionFailedError  [FE]                    ArrayIndexOutOfBoundsException    [CONTEXT]    @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =     "null   ";  }  else  {    [BUGGY]  pathNames[stackSize  -  1]  =   "null ";  [BUGGY]    pathNames[stackSize  -  1]  =     "null   ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	261	261	2	replace	pathNames[stackSize  -  1]  =   "null ";	  if(stackSize    >    0)    {    popStack();    }    else    {    JsonToken.START_OBJECT    =    null;    nextName();    pathNames[stackSize    -    1]    =       "null   ";    }    	compilable	  [FE]  AssertionFailedError  	7	2	replace
36	[BUG]  [BUGGY]  _reportError( "Current  token( "+getClass().getName()  + ")not  null ",  JsonToken.END_OBJECT);  [CE]  cannot  find  symbol  [FE]              ArrayIndexOutOfBoundsException    [CONTEXT]    @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =     "null   ";  }  else  {    [BUGGY]  _reportError( "Current  token( "+getClass().getName()  + ")not  null ",  JsonToken.END_OBJECT);  [BUGGY]    pathNames[stackSize  -  1]  =     "null   ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	261	261	2	replace	_reportError( "Current  token( "+getClass().getName()  + ")not  null ",  JsonToken.END_OBJECT);	  _reportError(   "Current    token(   "+getClass().getName()    +   ")not    null.   ");    	non-compiled	[CE]  cannot  find  symbol	21	None	replace
37	[BUG]  [BUGGY]  _reportError( "Current  token( "+getClass().getName()  + ")not  null ",  JsonToken.VALUE_NULL);  [CE]  cannot  find  symbol  VALUE_NULL  [FE]                ArrayIndexOutOfBoundsException    [CONTEXT]    @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =     "null   ";  }  else  {    [BUGGY]  _reportError( "Current  token( "+getClass().getName()  + ")not  null ",  JsonToken.VALUE_NULL);  [BUGGY]    pathNames[stackSize  -  1]  =     "null   ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	261	261	2	replace	_reportError( "Current  token( "+getClass().getName()  + ")not  null ",  JsonToken.VALUE_NULL);	  _reportError(   "Current    token(   "+getClass().getName()    +   ")not    null.   ");    	non-compiled	[CE]  cannot  find  symbol  VALUE_NULL	21	None	replace
38	[BUG]  [BUGGY]  _reportError( "Current  token( "+getClass().getName()  + ")not  null ",  JsonToken.FIELD_NAME);  [CE]  cannot  find  symbol  FIELD_NAME  [FE]                  ArrayIndexOutOfBoundsException    [CONTEXT]    @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =     "null   ";  }  else  {    [BUGGY]  _reportError( "Current  token( "+getClass().getName()  + ")not  null ",  JsonToken.FIELD_NAME);  [BUGGY]    pathNames[stackSize  -  1]  =     "null   ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	261	261	2	replace	_reportError( "Current  token( "+getClass().getName()  + ")not  null ",  JsonToken.FIELD_NAME);	  _reportError(   "Current    token(   "+getClass().getName()    +   ")not    null.   ");    	non-compiled	[CE]  cannot  find  symbol  FIELD_NAME	21	None	replace
39	[BUG]  [BUGGY]  _reportError( "Current  token( "+getClass().getName()  + ")Not  null. ");  [CE]  cannot  find  symbol  [FE]                    ArrayIndexOutOfBoundsException    [CONTEXT]    @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =     "null   ";  }  else  {    [BUGGY]  _reportError( "Current  token( "+getClass().getName()  + ")Not  null. ");  [BUGGY]    pathNames[stackSize  -  1]  =     "null   ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	261	261	2	replace	_reportError( "Current  token( "+getClass().getName()  + ")Not  null. ");	  _reportError(   "Current    token(   "+getClass().getName()    +   ")not    null.   ");    	non-compiled	[CE]  cannot  find  symbol	21	None	replace
40	[BUG]  [BUGGY]  [FE]  ArrayIndexOutOfBoundsException  [FE]    AssertionFailedError    [CONTEXT]    @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =     "null   ";  }  else  {    [BUGGY]  pathNames[stackSize  -  2]  =   "null ";  [BUGGY]    pathNames[stackSize  -  1]  =     "null   ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	261	261	2	add	pathNames[stackSize  -  2]  =   "null ";	      	compilable	  [FE]  ArrayIndexOutOfBoundsException  	10	2	replace
41	[BUG]  [BUGGY]  pathNames[stackSize  -  2]  =   "null ";  [FE]  ArrayIndexOutOfBoundsException  [FE]    AssertionFailedError    [CONTEXT]    @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =     "null   ";  }  else  {    [BUGGY]  pathNames[stackSize  -  2]  =   "null ";  [BUGGY]    pathNames[stackSize  -  1]  =     "null   ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	261	261	2	replace	pathNames[stackSize  -  2]  =   "null ";	      	compilable	  [FE]  ArrayIndexOutOfBoundsException  	10	2	replace
42	[BUG]  [BUGGY]  PathIndices  pathIndices[stackSize  -  1]  =  null;  [CE]  ']'  expected  [FE]      AssertionFailedError    [CONTEXT]    @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =     "null   ";  }  else  {    [BUGGY]  PathIndices  pathIndices[stackSize  -  1]  =  null;  [BUGGY]    pathNames[stackSize  -  1]  =     "null   ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	261	261	2	replace	PathIndices  pathIndices[stackSize  -  1]  =  null;	      	non-compiled	[CE]  ']'  expected	10	None	replace
43	[BUG]  [BUGGY]  PathIndices  pathIndices[stackSize  -  1]  =   "null ";  [CE]  [FE]        AssertionFailedError    [CONTEXT]    @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =     "null   ";  }  else  {    [BUGGY]  PathIndices  pathIndices[stackSize  -  1]  =   "null ";  [BUGGY]    pathNames[stackSize  -  1]  =     "null   ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	261	261	2	replace	PathIndices  pathIndices[stackSize  -  1]  =   "null ";	      	non-compiled	[CE]  	10	None	replace
44	[BUG]  [BUGGY]  connectToPeek(JsonToken.NAME);  [CE]  cannot  find  symbol  [FE]                  ArrayIndexOutOfBoundsException    [CONTEXT]    @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =     "null   ";  }  else  {    [BUGGY]  connectToPeek(JsonToken.NAME);  [BUGGY]    pathNames[stackSize  -  1]  =     "null   ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	261	261	2	replace	connectToPeek(JsonToken.NAME);	  connectToPeek();    	non-compiled	[CE]  cannot  find  symbol	16	None	replace
45	[BUG]  [BUGGY]  connectToPeek(JsonToken.VALUE_NUMBER_EXPR_RESULT);  [CE]  cannot  find  symbol  VALUE_NUMBER_EXPR_RESULT  [FE]                    ArrayIndexOutOfBoundsException    [CONTEXT]    @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =     "null   ";  }  else  {    [BUGGY]  connectToPeek(JsonToken.VALUE_NUMBER_EXPR_RESULT);  [BUGGY]    pathNames[stackSize  -  1]  =     "null   ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	261	261	2	replace	connectToPeek(JsonToken.VALUE_NUMBER_EXPR_RESULT);	  connectToPeek();    	non-compiled	[CE]  cannot  find  symbol  VALUE_NUMBER_EXPR_RESULT	16	None	replace
46	[BUG]  [BUGGY]  connectToPeek(JsonToken.VALUE_NUMBER_FLOAT);  [CE]  cannot  find  symbol  VALUE_NUMBER_FLOAT  [FE]                      ArrayIndexOutOfBoundsException    [CONTEXT]    @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =     "null   ";  }  else  {    [BUGGY]  connectToPeek(JsonToken.VALUE_NUMBER_FLOAT);  [BUGGY]    pathNames[stackSize  -  1]  =     "null   ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	261	261	2	replace	connectToPeek(JsonToken.VALUE_NUMBER_FLOAT);	  connectToPeek();    	non-compiled	[CE]  cannot  find  symbol  VALUE_NUMBER_FLOAT	16	None	replace
47	[BUG]  [BUGGY]  connectToPeek(JsonToken.VALUE_NUMBER_OF_RANGE);  [CE]  cannot  find  symbol  VALUE_NUMBER_OF_RANGE  [FE]                        ArrayIndexOutOfBoundsException    [CONTEXT]    @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =     "null   ";  }  else  {    [BUGGY]  connectToPeek(JsonToken.VALUE_NUMBER_OF_RANGE);  [BUGGY]    pathNames[stackSize  -  1]  =     "null   ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	261	261	2	replace	connectToPeek(JsonToken.VALUE_NUMBER_OF_RANGE);	  connectToPeek();    	non-compiled	[CE]  cannot  find  symbol  VALUE_NUMBER_OF_RANGE	16	None	replace
48	[BUG]  [BUGGY]  connectToPeek(JsonToken.START_OBJECT);  [CE]  cannot  find  symbol  START_OBJECT  [FE]                          ArrayIndexOutOfBoundsException    [CONTEXT]    @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =     "null   ";  }  else  {    [BUGGY]  connectToPeek(JsonToken.START_OBJECT);  [BUGGY]    pathNames[stackSize  -  1]  =     "null   ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	261	261	2	replace	connectToPeek(JsonToken.START_OBJECT);	  connectToPeek();    	non-compiled	[CE]  cannot  find  symbol  START_OBJECT	16	None	replace
49	[BUG]  [BUGGY]  connectToPeek(JsonToken.VALUE_NUMBER_INT);  [CE]  cannot  find  symbol  VALUE_NUMBER_INT  [FE]                            ArrayIndexOutOfBoundsException    [CONTEXT]    @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =     "null   ";  }  else  {    [BUGGY]  connectToPeek(JsonToken.VALUE_NUMBER_INT);  [BUGGY]    pathNames[stackSize  -  1]  =     "null   ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	261	261	2	replace	connectToPeek(JsonToken.VALUE_NUMBER_INT);	  connectToPeek();    	non-compiled	[CE]  cannot  find  symbol  VALUE_NUMBER_INT	16	None	replace
50	[BUG]  [BUGGY]  connectToPossibleExceptionHandler(this.throwInternal());  [CE]  cannot  find  symbol  [FE]              ArrayIndexOutOfBoundsException    [CONTEXT]    @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =     "null   ";  }  else  {    [BUGGY]  connectToPossibleExceptionHandler(this.throwInternal());  [BUGGY]    pathNames[stackSize  -  1]  =     "null   ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	261	261	2	replace	connectToPossibleExceptionHandler(this.throwInternal());	  connectToPossibleExceptionHandler(throwInternal());    	non-compiled	[CE]  cannot  find  symbol	14	None	replace
51	[BUG]  [BUGGY]  connectToPossibleExceptionHandler(throwInternal(),  JsonToken.VALUE_NULL);  [CE]  cannot  find  symbol  [FE]                ArrayIndexOutOfBoundsException    [CONTEXT]    @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =     "null   ";  }  else  {    [BUGGY]  connectToPossibleExceptionHandler(throwInternal(),  JsonToken.VALUE_NULL);  [BUGGY]    pathNames[stackSize  -  1]  =     "null   ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	261	261	2	replace	connectToPossibleExceptionHandler(throwInternal(),  JsonToken.VALUE_NULL);	  connectToPossibleExceptionHandler(throwInternal());    	non-compiled	[CE]  cannot  find  symbol	14	None	replace
52	[BUG]  [BUGGY]  connectToPossibleExceptionHandler(throwInternal(),  JsonToken.START_OBJECT);  [CE]  cannot  find  symbol  [FE]                  ArrayIndexOutOfBoundsException    [CONTEXT]    @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =     "null   ";  }  else  {    [BUGGY]  connectToPossibleExceptionHandler(throwInternal(),  JsonToken.START_OBJECT);  [BUGGY]    pathNames[stackSize  -  1]  =     "null   ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	261	261	2	replace	connectToPossibleExceptionHandler(throwInternal(),  JsonToken.START_OBJECT);	  connectToPossibleExceptionHandler(throwInternal());    	non-compiled	[CE]  cannot  find  symbol	14	None	replace
53	[BUG]  [BUGGY]  connectToPossibleExceptionHandler(nextName());  [CE]  cannot  find  symbol  [FE]                    ArrayIndexOutOfBoundsException    [CONTEXT]    @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =     "null   ";  }  else  {    [BUGGY]  connectToPossibleExceptionHandler(nextName());  [BUGGY]    pathNames[stackSize  -  1]  =     "null   ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	261	261	2	replace	connectToPossibleExceptionHandler(nextName());	  connectToPossibleExceptionHandler(throwInternal());    	non-compiled	[CE]  cannot  find  symbol	14	None	replace
54	[BUG]  [BUGGY]  connectToPossibleExceptionHandler(throwInternal(),  JsonToken.END_OBJECT);  [CE]  cannot  find  symbol  [FE]                      ArrayIndexOutOfBoundsException    [CONTEXT]    @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =     "null   ";  }  else  {    [BUGGY]  connectToPossibleExceptionHandler(throwInternal(),  JsonToken.END_OBJECT);  [BUGGY]    pathNames[stackSize  -  1]  =     "null   ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	261	261	2	replace	connectToPossibleExceptionHandler(throwInternal(),  JsonToken.END_OBJECT);	  connectToPossibleExceptionHandler(throwInternal());    	non-compiled	[CE]  cannot  find  symbol	14	None	replace
55	[BUG]  [BUGGY]  connectToPossibleExceptionHandler(throwInternal(),  JsonToken.VALUE_EMPTY);  [CE]  cannot  find  symbol  [FE]                        ArrayIndexOutOfBoundsException    [CONTEXT]    @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =     "null   ";  }  else  {    [BUGGY]  connectToPossibleExceptionHandler(throwInternal(),  JsonToken.VALUE_EMPTY);  [BUGGY]    pathNames[stackSize  -  1]  =     "null   ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	261	261	2	replace	connectToPossibleExceptionHandler(throwInternal(),  JsonToken.VALUE_EMPTY);	  connectToPossibleExceptionHandler(throwInternal());    	non-compiled	[CE]  cannot  find  symbol	14	None	replace
56	[BUG]  [BUGGY]  StackTrace();  [CE]  cannot  find  symbol  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]    @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =     "null   ";  }  else  {    [BUGGY]  StackTrace();  [BUGGY]    pathNames[stackSize  -  1]  =     "null   ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	261	261	2	replace	StackTrace();	  if(stackSize    >    0)    {    popStack();    }    else    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  cannot  find  symbol	2	None	replace
57	[BUG]  [BUGGY]  rowStack();  [CE]  cannot  find  symbol  [FE]      ArrayIndexOutOfBoundsException    [CONTEXT]    @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =     "null   ";  }  else  {    [BUGGY]  rowStack();  [BUGGY]    pathNames[stackSize  -  1]  =     "null   ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	261	261	2	replace	rowStack();	  if(stackSize    >    0)    {    popStack();    }    else    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  cannot  find  symbol	2	None	replace
58	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]        ArrayIndexOutOfBoundsException    [CONTEXT]    @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =     "null   ";  }  else  {    [BUGGY]  peek();  [BUGGY]    pathNames[stackSize  -  1]  =     "null   ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	261	261	2	add	peek();	  if(stackSize    >    0)    {    popStack();    }    else    {    throw    new    IllegalArgumentException(   "   ");    }    	compilable	  [FE]  AssertionFailedError  	2	2	replace
59	[BUG]  [BUGGY]  peek();  [FE]  AssertionFailedError  [FE]        ArrayIndexOutOfBoundsException    [CONTEXT]    @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =     "null   ";  }  else  {    [BUGGY]  peek();  [BUGGY]    pathNames[stackSize  -  1]  =     "null   ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	261	261	2	replace	peek();	  if(stackSize    >    0)    {    popStack();    }    else    {    throw    new    IllegalArgumentException(   "   ");    }    	compilable	  [FE]  AssertionFailedError  	2	2	replace
60	[BUG]  [BUGGY]  PopStack();  [CE]  cannot  find  symbol  [FE]          ArrayIndexOutOfBoundsException    [CONTEXT]    @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =     "null   ";  }  else  {    [BUGGY]  PopStack();  [BUGGY]    pathNames[stackSize  -  1]  =     "null   ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	261	261	2	replace	PopStack();	  if(stackSize    >    0)    {    popStack();    }    else    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  cannot  find  symbol	2	None	replace
61	[BUG]  [BUGGY]  peer();  [CE]  cannot  find  symbol  [FE]            ArrayIndexOutOfBoundsException    [CONTEXT]    @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =     "null   ";  }  else  {    [BUGGY]  peer();  [BUGGY]    pathNames[stackSize  -  1]  =     "null   ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	261	261	2	replace	peer();	  if(stackSize    >    0)    {    popStack();    }    else    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  cannot  find  symbol	2	None	replace
62	[BUG]  [BUGGY]  hop();  [CE]  cannot  find  symbol  [FE]              ArrayIndexOutOfBoundsException    [CONTEXT]    @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =     "null   ";  }  else  {    [BUGGY]  hop();  [BUGGY]    pathNames[stackSize  -  1]  =     "null   ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	261	261	2	replace	hop();	  if(stackSize    >    0)    {    popStack();    }    else    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  cannot  find  symbol	2	None	replace
63	[BUG]  [BUGGY]  _throwUnsupportedOperation();  [CE]  cannot  find  symbol  [FE]          ArrayIndexOutOfBoundsException    [CONTEXT]    @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =     "null   ";  }  else  {    [BUGGY]  _throwUnsupportedOperation();  [BUGGY]    pathNames[stackSize  -  1]  =     "null   ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	261	261	2	replace	_throwUnsupportedOperation();	  _reportUnsupportedOperation();    	non-compiled	[CE]  cannot  find  symbol	12	None	replace
64	[BUG]  [BUGGY]  _throwInternal();  [CE]  cannot  find  symbol  [FE]            ArrayIndexOutOfBoundsException    [CONTEXT]    @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =     "null   ";  }  else  {    [BUGGY]  _throwInternal();  [BUGGY]    pathNames[stackSize  -  1]  =     "null   ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	261	261	2	replace	_throwInternal();	  _reportUnsupportedOperation();    	non-compiled	[CE]  cannot  find  symbol	12	None	replace
65	[BUG]  [BUGGY]  handleUnsupportedOperation();  [CE]  cannot  find  symbol  [FE]              ArrayIndexOutOfBoundsException    [CONTEXT]    @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =     "null   ";  }  else  {    [BUGGY]  handleUnsupportedOperation();  [BUGGY]    pathNames[stackSize  -  1]  =     "null   ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	261	261	2	replace	handleUnsupportedOperation();	  _reportUnsupportedOperation();    	non-compiled	[CE]  cannot  find  symbol	12	None	replace
66	[BUG]  [BUGGY]  JsonToken.START_OBJECT;  [CE]  not  a  statement  [FE]                ArrayIndexOutOfBoundsException    [CONTEXT]    @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =     "null   ";  }  else  {    [BUGGY]  JsonToken.START_OBJECT;  [BUGGY]    pathNames[stackSize  -  1]  =     "null   ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	261	261	2	replace	JsonToken.START_OBJECT;	  _reportUnsupportedOperation();    	non-compiled	[CE]  not  a  statement	12	None	replace
67	[BUG]  [BUGGY]  handleMissingName();  [CE]  cannot  find  symbol  [FE]                  ArrayIndexOutOfBoundsException    [CONTEXT]    @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =     "null   ";  }  else  {    [BUGGY]  handleMissingName();  [BUGGY]    pathNames[stackSize  -  1]  =     "null   ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	261	261	2	replace	handleMissingName();	  _reportUnsupportedOperation();    	non-compiled	[CE]  cannot  find  symbol	12	None	replace
68	[BUG]  [BUGGY]  reportUnsupportedOperation();  [CE]  cannot  find  symbol  [FE]                    ArrayIndexOutOfBoundsException    [CONTEXT]    @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =     "null   ";  }  else  {    [BUGGY]  reportUnsupportedOperation();  [BUGGY]    pathNames[stackSize  -  1]  =     "null   ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	261	261	2	replace	reportUnsupportedOperation();	  _reportUnsupportedOperation();    	non-compiled	[CE]  cannot  find  symbol	12	None	replace
69	[BUG]  [BUGGY]  pullStack();  [CE]  cannot  find  symbol  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]    @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =     "null   ";  }  else  {    [BUGGY]  pullStack();  [BUGGY]    pathNames[stackSize  -  1]  =     "null   ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	261	261	2	replace	pullStack();	  if(stackSize    >    0)    {    popStack();    }    	non-compiled	[CE]  cannot  find  symbol	24	None	replace
70	[BUG]  [BUGGY]  hopStack();  [CE]  cannot  find  symbol  [FE]      ArrayIndexOutOfBoundsException    [CONTEXT]    @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =     "null   ";  }  else  {    [BUGGY]  hopStack();  [BUGGY]    pathNames[stackSize  -  1]  =     "null   ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	261	261	2	replace	hopStack();	  if(stackSize    >    0)    {    popStack();    }    	non-compiled	[CE]  cannot  find  symbol	24	None	replace
71	[BUG]  [BUGGY]  StackTree  <  NUMBER_INDEXES  ||  stackSize  >  0)  {  popStack();  }  else  {  skipStack();  }  [CE]  >  expected  [FE]          ArrayIndexOutOfBoundsException    [CONTEXT]    @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =     "null   ";  }  else  {    [BUGGY]  StackTree  <  NUMBER_INDEXES  ||  stackSize  >  0)  {  popStack();  }  else  {  skipStack();  }  [BUGGY]    pathNames[stackSize  -  1]  =     "null   ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	261	261	2	replace	StackTree  <  NUMBER_INDEXES  ||  stackSize  >  0)  {  popStack();  }  else  {  skipStack();  }	  if(stackSize    >    0)    {    popStack();    }    else    {    skipStack();    }    	non-compiled	[CE]  >  expected	19	None	replace
72	[BUG]  [BUGGY]  StackTree  <  NUMBER_INDEX  ||  stackSize  >  0)  {  popStack();  }  else  {  skipStack();  }  [CE]  >  expected  [FE]            ArrayIndexOutOfBoundsException    [CONTEXT]    @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =     "null   ";  }  else  {    [BUGGY]  StackTree  <  NUMBER_INDEX  ||  stackSize  >  0)  {  popStack();  }  else  {  skipStack();  }  [BUGGY]    pathNames[stackSize  -  1]  =     "null   ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	261	261	2	replace	StackTree  <  NUMBER_INDEX  ||  stackSize  >  0)  {  popStack();  }  else  {  skipStack();  }	  if(stackSize    >    0)    {    popStack();    }    else    {    skipStack();    }    	non-compiled	[CE]  >  expected	19	None	replace
73	[BUG]  [BUGGY]  StackTree  <  MISSING_READER  &&  stackSize  >  0)  {  popStack();  }  else  {  skipStack();  }  [CE]  >  expected  [FE]              ArrayIndexOutOfBoundsException    [CONTEXT]    @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =     "null   ";  }  else  {    [BUGGY]  StackTree  <  MISSING_READER  &&  stackSize  >  0)  {  popStack();  }  else  {  skipStack();  }  [BUGGY]    pathNames[stackSize  -  1]  =     "null   ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	261	261	2	replace	StackTree  <  MISSING_READER  &&  stackSize  >  0)  {  popStack();  }  else  {  skipStack();  }	  if(stackSize    >    0)    {    popStack();    }    else    {    skipStack();    }    	non-compiled	[CE]  >  expected	19	None	replace
74	[BUG]  [BUGGY]  StackTree  <  NUMBER_ERROR  &&  stackSize  >  0)  {  popStack();  }  else  {  skipStack();  }  [CE]  >  expected  [FE]                ArrayIndexOutOfBoundsException    [CONTEXT]    @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =     "null   ";  }  else  {    [BUGGY]  StackTree  <  NUMBER_ERROR  &&  stackSize  >  0)  {  popStack();  }  else  {  skipStack();  }  [BUGGY]    pathNames[stackSize  -  1]  =     "null   ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	261	261	2	replace	StackTree  <  NUMBER_ERROR  &&  stackSize  >  0)  {  popStack();  }  else  {  skipStack();  }	  if(stackSize    >    0)    {    popStack();    }    else    {    skipStack();    }    	non-compiled	[CE]  >  expected	19	None	replace
75	[BUG]  [BUGGY]  StackTree  <  NUMBER_OF_RANGE  ||  stackSize  >  0)  {  popStack();  }  else  {  skipStack();  }  [CE]  >  expected  [FE]                  ArrayIndexOutOfBoundsException    [CONTEXT]    @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =     "null   ";  }  else  {    [BUGGY]  StackTree  <  NUMBER_OF_RANGE  ||  stackSize  >  0)  {  popStack();  }  else  {  skipStack();  }  [BUGGY]    pathNames[stackSize  -  1]  =     "null   ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	261	261	2	replace	StackTree  <  NUMBER_OF_RANGE  ||  stackSize  >  0)  {  popStack();  }  else  {  skipStack();  }	  if(stackSize    >    0)    {    popStack();    }    else    {    skipStack();    }    	non-compiled	[CE]  >  expected	19	None	replace
76	[BUG]  [BUGGY]  StackTree  <  NUMBER_OF_RANGE)  {  popStack();  }  else  {  skipStack();  }  [CE]  >  expected  [FE]                    ArrayIndexOutOfBoundsException    [CONTEXT]    @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =     "null   ";  }  else  {    [BUGGY]  StackTree  <  NUMBER_OF_RANGE)  {  popStack();  }  else  {  skipStack();  }  [BUGGY]    pathNames[stackSize  -  1]  =     "null   ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	261	261	2	replace	StackTree  <  NUMBER_OF_RANGE)  {  popStack();  }  else  {  skipStack();  }	  if(stackSize    >    0)    {    popStack();    }    else    {    skipStack();    }    	non-compiled	[CE]  >  expected	19	None	replace
77	[BUG]  [BUGGY]  connectToPossibleExceptionHandler(null,  null,  SENTINEL_CLOSED);  [CE]  cannot  find  symbol  [FE]                    ArrayIndexOutOfBoundsException    [CONTEXT]    @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =     "null   ";  }  else  {    [BUGGY]  connectToPossibleExceptionHandler(null,  null,  SENTINEL_CLOSED);  [BUGGY]    pathNames[stackSize  -  1]  =     "null   ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	261	261	2	replace	connectToPossibleExceptionHandler(null,  null,  SENTINEL_CLOSED);	  connectToPossibleExceptionHandler(null,    null);    	non-compiled	[CE]  cannot  find  symbol	17	None	replace
78	[BUG]  [BUGGY]  connectToPossibleExceptionHandler(null,  null,  null);  [CE]  cannot  find  symbol  [FE]                      ArrayIndexOutOfBoundsException    [CONTEXT]    @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =     "null   ";  }  else  {    [BUGGY]  connectToPossibleExceptionHandler(null,  null,  null);  [BUGGY]    pathNames[stackSize  -  1]  =     "null   ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	261	261	2	replace	connectToPossibleExceptionHandler(null,  null,  null);	  connectToPossibleExceptionHandler(null,    null);    	non-compiled	[CE]  cannot  find  symbol	17	None	replace
79	[BUG]  [BUGGY]  connectToPossibleExceptionHandler(null,  null,  pathNames);  [CE]  cannot  find  symbol  [FE]                        ArrayIndexOutOfBoundsException    [CONTEXT]    @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =     "null   ";  }  else  {    [BUGGY]  connectToPossibleExceptionHandler(null,  null,  pathNames);  [BUGGY]    pathNames[stackSize  -  1]  =     "null   ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	261	261	2	replace	connectToPossibleExceptionHandler(null,  null,  pathNames);	  connectToPossibleExceptionHandler(null,    null);    	non-compiled	[CE]  cannot  find  symbol	17	None	replace
80	[BUG]  [BUGGY]  connectToPossibleExceptionHandler(null,  JsonToken.END_ARRAY);  [CE]  cannot  find  symbol  [FE]                          ArrayIndexOutOfBoundsException    [CONTEXT]    @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =     "null   ";  }  else  {    [BUGGY]  connectToPossibleExceptionHandler(null,  JsonToken.END_ARRAY);  [BUGGY]    pathNames[stackSize  -  1]  =     "null   ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	261	261	2	replace	connectToPossibleExceptionHandler(null,  JsonToken.END_ARRAY);	  connectToPossibleExceptionHandler(null,    null);    	non-compiled	[CE]  cannot  find  symbol	17	None	replace
81	[BUG]  [BUGGY]  _reportError( "Current  token( "+JsonToken.VALUE_NUMBER+ ")not  a  value ");  [CE]  cannot  find  symbol  VALUE_NUMBER  [FE]                ArrayIndexOutOfBoundsException    [CONTEXT]    @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =     "null   ";  }  else  {    [BUGGY]  _reportError( "Current  token( "+JsonToken.VALUE_NUMBER+ ")not  a  value ");  [BUGGY]    pathNames[stackSize  -  1]  =     "null   ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	261	261	2	replace	_reportError( "Current  token( "+JsonToken.VALUE_NUMBER+ ")not  a  value ");	  _reportError(   "Current    token(   "+JsonToken.VALUE_NULL+   ")not    a    value   ");    	non-compiled	[CE]  cannot  find  symbol  VALUE_NUMBER	22	None	replace
82	[BUG]  [BUGGY]  _reportError( "Current  token( "+JsonToken.FIELD_NAME+ ")not  a  value ");  [CE]  cannot  find  symbol  FIELD_NAME  [FE]                  ArrayIndexOutOfBoundsException    [CONTEXT]    @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =     "null   ";  }  else  {    [BUGGY]  _reportError( "Current  token( "+JsonToken.FIELD_NAME+ ")not  a  value ");  [BUGGY]    pathNames[stackSize  -  1]  =     "null   ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	261	261	2	replace	_reportError( "Current  token( "+JsonToken.FIELD_NAME+ ")not  a  value ");	  _reportError(   "Current    token(   "+JsonToken.VALUE_NULL+   ")not    a    value   ");    	non-compiled	[CE]  cannot  find  symbol  FIELD_NAME	22	None	replace
83	[BUG]  [BUGGY]  _reportError( "Current  token( "+JsonToken.VALUE_NULL+ ")not  a  value. ");  [CE]  cannot  find  symbol  VALUE_NULL  [FE]                    ArrayIndexOutOfBoundsException    [CONTEXT]    @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =     "null   ";  }  else  {    [BUGGY]  _reportError( "Current  token( "+JsonToken.VALUE_NULL+ ")not  a  value. ");  [BUGGY]    pathNames[stackSize  -  1]  =     "null   ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	261	261	2	replace	_reportError( "Current  token( "+JsonToken.VALUE_NULL+ ")not  a  value. ");	  _reportError(   "Current    token(   "+JsonToken.VALUE_NULL+   ")not    a    value   ");    	non-compiled	[CE]  cannot  find  symbol  VALUE_NULL	22	None	replace
84	[BUG]  [BUGGY]  [FE]  ArrayIndexOutOfBoundsException  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]    @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =     "null   ";  }  else  {    [BUGGY]  if(stackSize  >  0)  {  popStack();  }  if(stackSize  >  0)  {  popStack();  }  [BUGGY]    pathNames[stackSize  -  1]  =     "null   ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	261	261	2	add	if(stackSize    >    0)    {    popStack();    }    if(stackSize  >  0)  {  popStack();  }	  	compilable	  [FE]  ArrayIndexOutOfBoundsException  	23	2	add
85	[BUG]  [BUGGY]  if(stackSize  >  0)  {  popStack();  }  if(stackSize  >  0)  {  popStack();  }  [FE]  ArrayIndexOutOfBoundsException  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]    @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =     "null   ";  }  else  {    [BUGGY]  if(stackSize  >  0)  {  popStack();  }  if(stackSize  >  0)  {  popStack();  }  [BUGGY]    pathNames[stackSize  -  1]  =     "null   ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	261	261	2	replace	if(stackSize    >    0)    {    popStack();    }    if(stackSize  >  0)  {  popStack();  }	  	compilable	  [FE]  ArrayIndexOutOfBoundsException  	23	2	add
86	[BUG]  [BUGGY]  [FE]  ArrayIndexOutOfBoundsException  [FE]      ArrayIndexOutOfBoundsException    [CONTEXT]    @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =     "null   ";  }  else  {    [BUGGY]  if(stackSize  >  0)  {  popStack();  }  if(stackSize  >  0)  {  popStack();  }  pathNames[stackSize  -  1]  =   "null ";  [BUGGY]    pathNames[stackSize  -  1]  =     "null   ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	261	261	2	add	if(stackSize    >    0)    {    popStack();    }    if(stackSize  >  0)  {  popStack();  }  pathNames[stackSize  -  1]  =   "null ";	  	compilable	  [FE]  ArrayIndexOutOfBoundsException  	23	2	add
87	[BUG]  [BUGGY]  if(stackSize  >  0)  {  popStack();  }  if(stackSize  >  0)  {  popStack();  }  pathNames[stackSize  -  1]  =   "null ";  [FE]  ArrayIndexOutOfBoundsException  [FE]      ArrayIndexOutOfBoundsException    [CONTEXT]    @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =     "null   ";  }  else  {    [BUGGY]  if(stackSize  >  0)  {  popStack();  }  if(stackSize  >  0)  {  popStack();  }  pathNames[stackSize  -  1]  =   "null ";  [BUGGY]    pathNames[stackSize  -  1]  =     "null   ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	261	261	2	replace	if(stackSize    >    0)    {    popStack();    }    if(stackSize  >  0)  {  popStack();  }  pathNames[stackSize  -  1]  =   "null ";	  	compilable	  [FE]  ArrayIndexOutOfBoundsException  	23	2	add
88	[BUG]  [BUGGY]  [FE]  ArrayIndexOutOfBoundsException  [FE]        ArrayIndexOutOfBoundsException    [CONTEXT]    @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =     "null   ";  }  else  {    [BUGGY]  if(stackSize  >  0)  {  popStack();  }  if(stackSize  >  0)  {  popStack();  System.arraycopy(pathNames,  0,  pathNames,  0,  stackSize);  }  [BUGGY]    pathNames[stackSize  -  1]  =     "null   ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	261	261	2	add	if(stackSize    >    0)    {    popStack();    }    if(stackSize  >  0)  {  popStack();  System.arraycopy(pathNames,  0,  pathNames,  0,  stackSize);  }	  	compilable	  [FE]  ArrayIndexOutOfBoundsException  	23	2	add
89	[BUG]  [BUGGY]  if(stackSize  >  0)  {  popStack();  }  if(stackSize  >  0)  {  popStack();  System.arraycopy(pathNames,  0,  pathNames,  0,  stackSize);  }  [FE]  ArrayIndexOutOfBoundsException  [FE]        ArrayIndexOutOfBoundsException    [CONTEXT]    @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =     "null   ";  }  else  {    [BUGGY]  if(stackSize  >  0)  {  popStack();  }  if(stackSize  >  0)  {  popStack();  System.arraycopy(pathNames,  0,  pathNames,  0,  stackSize);  }  [BUGGY]    pathNames[stackSize  -  1]  =     "null   ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	261	261	2	replace	if(stackSize    >    0)    {    popStack();    }    if(stackSize  >  0)  {  popStack();  System.arraycopy(pathNames,  0,  pathNames,  0,  stackSize);  }	  	compilable	  [FE]  ArrayIndexOutOfBoundsException  	23	2	add
90	[BUG]  [BUGGY]  if(stackSize  >  0)  {  popStack();  }  if(stackSize  >  0)  {  popStack();  System.arraycopy(stackNames,  0,  pathNames,  0,  stackSize);  }  [CE]  cannot  find  symbol  stackNames  [FE]          ArrayIndexOutOfBoundsException    [CONTEXT]    @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =     "null   ";  }  else  {    [BUGGY]  if(stackSize  >  0)  {  popStack();  }  if(stackSize  >  0)  {  popStack();  System.arraycopy(stackNames,  0,  pathNames,  0,  stackSize);  }  [BUGGY]    pathNames[stackSize  -  1]  =     "null   ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	261	261	2	replace	if(stackSize    >    0)    {    popStack();    }    if(stackSize  >  0)  {  popStack();  System.arraycopy(stackNames,  0,  pathNames,  0,  stackSize);  }	  	non-compiled	[CE]  cannot  find  symbol  stackNames	23	None	add
91	[BUG]  [BUGGY]  if(stackSize  >  0)  {  popStack();  }  if(stackSize  >  0)  {  popStack();  }  pathIndices[stackSize  -  1]  =   "null ";  [CE]  incompatible  types  [FE]            ArrayIndexOutOfBoundsException    [CONTEXT]    @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =     "null   ";  }  else  {    [BUGGY]  if(stackSize  >  0)  {  popStack();  }  if(stackSize  >  0)  {  popStack();  }  pathIndices[stackSize  -  1]  =   "null ";  [BUGGY]    pathNames[stackSize  -  1]  =     "null   ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	261	261	2	replace	if(stackSize    >    0)    {    popStack();    }    if(stackSize  >  0)  {  popStack();  }  pathIndices[stackSize  -  1]  =   "null ";	  	non-compiled	[CE]  incompatible  types	23	None	add
92	[BUG]  [BUGGY]  [FE]  ArrayIndexOutOfBoundsException  [FE]              ArrayIndexOutOfBoundsException    [CONTEXT]    @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =     "null   ";  }  else  {    [BUGGY]  if(stackSize  >  0)  {  popStack();  }  if(stackSize  >  0)  {  popStack();  System.arraycopy(stack,  0,  pathNames,  0,  stackSize);  }  [BUGGY]    pathNames[stackSize  -  1]  =     "null   ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	261	261	2	add	if(stackSize    >    0)    {    popStack();    }    if(stackSize  >  0)  {  popStack();  System.arraycopy(stack,  0,  pathNames,  0,  stackSize);  }	  	compilable	  [FE]  ArrayIndexOutOfBoundsException  	23	2	add
93	[BUG]  [BUGGY]  if(stackSize  >  0)  {  popStack();  }  if(stackSize  >  0)  {  popStack();  System.arraycopy(stack,  0,  pathNames,  0,  stackSize);  }  [FE]  ArrayIndexOutOfBoundsException  [FE]              ArrayIndexOutOfBoundsException    [CONTEXT]    @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =     "null   ";  }  else  {    [BUGGY]  if(stackSize  >  0)  {  popStack();  }  if(stackSize  >  0)  {  popStack();  System.arraycopy(stack,  0,  pathNames,  0,  stackSize);  }  [BUGGY]    pathNames[stackSize  -  1]  =     "null   ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	261	261	2	replace	if(stackSize    >    0)    {    popStack();    }    if(stackSize  >  0)  {  popStack();  System.arraycopy(stack,  0,  pathNames,  0,  stackSize);  }	  	compilable	  [FE]  ArrayIndexOutOfBoundsException  	23	2	add
94	[BUG]  [BUGGY]  [FE]  IllegalArgumentException  [FE]                ArrayIndexOutOfBoundsException    [CONTEXT]    @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =     "null   ";  }  else  {    [BUGGY]  if(stackSize  >  0)  {  popStack();  }  if(stackSize  >  0)  {  popStack();  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]    pathNames[stackSize  -  1]  =     "null   ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	261	261	2	add	if(stackSize    >    0)    {    popStack();    }    if(stackSize  >  0)  {  popStack();  }  else  {  throw  new  IllegalArgumentException( " ");  }	  	compilable	  [FE]  IllegalArgumentException  	23	2	add
95	[BUG]  [BUGGY]  if(stackSize  >  0)  {  popStack();  }  if(stackSize  >  0)  {  popStack();  }  else  {  throw  new  IllegalArgumentException( " ");  }  [FE]  IllegalArgumentException  [FE]                ArrayIndexOutOfBoundsException    [CONTEXT]    @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =     "null   ";  }  else  {    [BUGGY]  if(stackSize  >  0)  {  popStack();  }  if(stackSize  >  0)  {  popStack();  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]    pathNames[stackSize  -  1]  =     "null   ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	261	261	2	replace	if(stackSize    >    0)    {    popStack();    }    if(stackSize  >  0)  {  popStack();  }  else  {  throw  new  IllegalArgumentException( " ");  }	  	compilable	  [FE]  IllegalArgumentException  	23	2	add
96	[BUG]  [BUGGY]  validateValue(JsonToken.VALUE_NULL);  [CE]  cannot  find  symbol  VALUE_NULL  [FE]                ArrayIndexOutOfBoundsException    [CONTEXT]    @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =     "null   ";  }  else  {    [BUGGY]  validateValue(JsonToken.VALUE_NULL);  [BUGGY]    pathNames[stackSize  -  1]  =     "null   ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	261	261	2	replace	validateValue(JsonToken.VALUE_NULL);	  validateValue();    	non-compiled	[CE]  cannot  find  symbol  VALUE_NULL	15	None	replace
97	[BUG]  [BUGGY]  validateValue(JsonToken.VALUE_EMBEDDED_ARRAY);  [CE]  cannot  find  symbol  VALUE_EMBEDDED_ARRAY  [FE]                  ArrayIndexOutOfBoundsException    [CONTEXT]    @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =     "null   ";  }  else  {    [BUGGY]  validateValue(JsonToken.VALUE_EMBEDDED_ARRAY);  [BUGGY]    pathNames[stackSize  -  1]  =     "null   ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	261	261	2	replace	validateValue(JsonToken.VALUE_EMBEDDED_ARRAY);	  validateValue();    	non-compiled	[CE]  cannot  find  symbol  VALUE_EMBEDDED_ARRAY	15	None	replace
98	[BUG]  [BUGGY]  validateValue(JsonToken.VALUE_EMBEDDED_OBJECT);  [CE]  cannot  find  symbol  VALUE_EMBEDDED_OBJECT  [FE]                    ArrayIndexOutOfBoundsException    [CONTEXT]    @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =     "null   ";  }  else  {    [BUGGY]  validateValue(JsonToken.VALUE_EMBEDDED_OBJECT);  [BUGGY]    pathNames[stackSize  -  1]  =     "null   ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	261	261	2	replace	validateValue(JsonToken.VALUE_EMBEDDED_OBJECT);	  validateValue();    	non-compiled	[CE]  cannot  find  symbol  VALUE_EMBEDDED_OBJECT	15	None	replace
99	[BUG]  [BUGGY]  validateValue(JsonToken.VALUE_EMBEDDED_FIELD_NAME);  [CE]  cannot  find  symbol  VALUE_EMBEDDED_FIELD_NAME  [FE]                      ArrayIndexOutOfBoundsException    [CONTEXT]    @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =     "null   ";  }  else  {    [BUGGY]  validateValue(JsonToken.VALUE_EMBEDDED_FIELD_NAME);  [BUGGY]    pathNames[stackSize  -  1]  =     "null   ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	261	261	2	replace	validateValue(JsonToken.VALUE_EMBEDDED_FIELD_NAME);	  validateValue();    	non-compiled	[CE]  cannot  find  symbol  VALUE_EMBEDDED_FIELD_NAME	15	None	replace
100	[BUG]  [BUGGY]  validateValue(JsonToken.VALUE_EMBEDDED_TYPE);  [CE]  cannot  find  symbol  VALUE_EMBEDDED_TYPE  [FE]                        ArrayIndexOutOfBoundsException    [CONTEXT]    @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =     "null   ";  }  else  {    [BUGGY]  validateValue(JsonToken.VALUE_EMBEDDED_TYPE);  [BUGGY]    pathNames[stackSize  -  1]  =     "null   ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	261	261	2	replace	validateValue(JsonToken.VALUE_EMBEDDED_TYPE);	  validateValue();    	non-compiled	[CE]  cannot  find  symbol  VALUE_EMBEDDED_TYPE	15	None	replace
101	[BUG]  [BUGGY]  Validate.notNull(pathNames);  [CE]  cannot  find  symbol  Validate  [FE]                          ArrayIndexOutOfBoundsException    [CONTEXT]    @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =     "null   ";  }  else  {    [BUGGY]  Validate.notNull(pathNames);  [BUGGY]    pathNames[stackSize  -  1]  =     "null   ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	261	261	2	replace	Validate.notNull(pathNames);	  validateValue();    	non-compiled	[CE]  cannot  find  symbol  Validate	15	None	replace
102	[BUG]  [BUGGY]  Validate.notNull(stackNames);  [CE]  cannot  find  symbol  stackNames  [FE]                ArrayIndexOutOfBoundsException    [CONTEXT]    @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =     "null   ";  }  else  {    [BUGGY]  Validate.notNull(stackNames);  [BUGGY]    pathNames[stackSize  -  1]  =     "null   ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	261	261	2	replace	Validate.notNull(stackNames);	  validateValue();    	non-compiled	[CE]  cannot  find  symbol  stackNames	15	None	replace
103	[BUG]  [BUGGY]  validateValue(null);  [CE]  cannot  find  symbol  [FE]                  ArrayIndexOutOfBoundsException    [CONTEXT]    @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =     "null   ";  }  else  {    [BUGGY]  validateValue(null);  [BUGGY]    pathNames[stackSize  -  1]  =     "null   ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	261	261	2	replace	validateValue(null);	  validateValue();    	non-compiled	[CE]  cannot  find  symbol	15	None	replace
104	[BUG]  [BUGGY]  Validate.notNull(stackSize);  [CE]  cannot  find  symbol  Validate  [FE]                    ArrayIndexOutOfBoundsException    [CONTEXT]    @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =     "null   ";  }  else  {    [BUGGY]  Validate.notNull(stackSize);  [BUGGY]    pathNames[stackSize  -  1]  =     "null   ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	261	261	2	replace	Validate.notNull(stackSize);	  validateValue();    	non-compiled	[CE]  cannot  find  symbol  Validate	15	None	replace
105	[BUG]  [BUGGY]  validateValue(result);  [CE]  cannot  find  symbol  result  [FE]                      ArrayIndexOutOfBoundsException    [CONTEXT]    @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =     "null   ";  }  else  {    [BUGGY]  validateValue(result);  [BUGGY]    pathNames[stackSize  -  1]  =     "null   ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	261	261	2	replace	validateValue(result);	  validateValue();    	non-compiled	[CE]  cannot  find  symbol  result	15	None	replace
106	[BUG]  [BUGGY]  Validate.notNull(stack);  [CE]  cannot  find  symbol  Validate  [FE]                        ArrayIndexOutOfBoundsException    [CONTEXT]    @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =     "null   ";  }  else  {    [BUGGY]  Validate.notNull(stack);  [BUGGY]    pathNames[stackSize  -  1]  =     "null   ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	261	261	2	replace	Validate.notNull(stack);	  validateValue();    	non-compiled	[CE]  cannot  find  symbol  Validate	15	None	replace
107	[BUG]  [BUGGY]  if(stackSize  >  1)  {  popStack();  }  else  {  skipStack();  }  [CE]  cannot  find  symbol  [FE]          ArrayIndexOutOfBoundsException    [CONTEXT]    @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =     "null   ";  }  else  {    [BUGGY]  if(stackSize  >  1)  {  popStack();  }  else  {  skipStack();  }  [BUGGY]    pathNames[stackSize  -  1]  =     "null   ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	261	261	2	replace	if(stackSize  >  1)  {  popStack();  }  else  {  skipStack();  }	  if(stackSize    >    0)    {    popStack();    }    else    {    skipStack();    }    	non-compiled	[CE]  cannot  find  symbol	19	None	replace
108	[BUG]  [BUGGY]  if(stackSize  >=  0)  {  popStack();  }  else  {  skipStack();  }  [CE]  cannot  find  symbol  [FE]            ArrayIndexOutOfBoundsException    [CONTEXT]    @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =     "null   ";  }  else  {    [BUGGY]  if(stackSize  >=  0)  {  popStack();  }  else  {  skipStack();  }  [BUGGY]    pathNames[stackSize  -  1]  =     "null   ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	261	261	2	replace	if(stackSize  >=  0)  {  popStack();  }  else  {  skipStack();  }	  if(stackSize    >    0)    {    popStack();    }    else    {    skipStack();    }    	non-compiled	[CE]  cannot  find  symbol	19	None	replace
109	[BUG]  [BUGGY]  if(stackSize  ==  0)  {  popStack();  }  else  {  skipStack();  }  [CE]  cannot  find  symbol  [FE]              ArrayIndexOutOfBoundsException    [CONTEXT]    @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =     "null   ";  }  else  {    [BUGGY]  if(stackSize  ==  0)  {  popStack();  }  else  {  skipStack();  }  [BUGGY]    pathNames[stackSize  -  1]  =     "null   ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	261	261	2	replace	if(stackSize  ==  0)  {  popStack();  }  else  {  skipStack();  }	  if(stackSize    >    0)    {    popStack();    }    else    {    skipStack();    }    	non-compiled	[CE]  cannot  find  symbol	19	None	replace
110	[BUG]  [BUGGY]  if(stackSize  <  0)  {  popStack();  }  else  {  skipStack();  }  [CE]  cannot  find  symbol  [FE]                ArrayIndexOutOfBoundsException    [CONTEXT]    @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =     "null   ";  }  else  {    [BUGGY]  if(stackSize  <  0)  {  popStack();  }  else  {  skipStack();  }  [BUGGY]    pathNames[stackSize  -  1]  =     "null   ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	261	261	2	replace	if(stackSize  <  0)  {  popStack();  }  else  {  skipStack();  }	  if(stackSize    >    0)    {    popStack();    }    else    {    skipStack();    }    	non-compiled	[CE]  cannot  find  symbol	19	None	replace
111	[BUG]  [BUGGY]  if(stackSize  <  =  0)  {  popStack();  }  else  {  skipStack();  }  [CE]  illegal  start  of  expression  [FE]                  ArrayIndexOutOfBoundsException    [CONTEXT]    @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =     "null   ";  }  else  {    [BUGGY]  if(stackSize  <  =  0)  {  popStack();  }  else  {  skipStack();  }  [BUGGY]    pathNames[stackSize  -  1]  =     "null   ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	261	261	2	replace	if(stackSize  <  =  0)  {  popStack();  }  else  {  skipStack();  }	  if(stackSize    >    0)    {    popStack();    }    else    {    skipStack();    }    	non-compiled	[CE]  illegal  start  of  expression	19	None	replace
112	[BUG]  [BUGGY]  connectToPossibleExceptionHandler(JsonToken.END_OBJECT);  [CE]  cannot  find  symbol  [FE]        ArrayIndexOutOfBoundsException    [CONTEXT]    @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =     "null   ";  }  else  {    [BUGGY]  connectToPossibleExceptionHandler(JsonToken.END_OBJECT);  [BUGGY]    pathNames[stackSize  -  1]  =     "null   ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	261	261	2	replace	connectToPossibleExceptionHandler(JsonToken.END_OBJECT);	  connectToPossibleExceptionHandler();    	non-compiled	[CE]  cannot  find  symbol	11	None	replace
113	[BUG]  [BUGGY]  connectToPossibleExceptionHandler(JsonToken.NAME);  [CE]  cannot  find  symbol  [FE]          ArrayIndexOutOfBoundsException    [CONTEXT]    @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =     "null   ";  }  else  {    [BUGGY]  connectToPossibleExceptionHandler(JsonToken.NAME);  [BUGGY]    pathNames[stackSize  -  1]  =     "null   ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	261	261	2	replace	connectToPossibleExceptionHandler(JsonToken.NAME);	  connectToPossibleExceptionHandler();    	non-compiled	[CE]  cannot  find  symbol	11	None	replace
114	[BUG]  [BUGGY]  connectToPossibleExceptionHandler(false);  [CE]  cannot  find  symbol  [FE]            ArrayIndexOutOfBoundsException    [CONTEXT]    @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =     "null   ";  }  else  {    [BUGGY]  connectToPossibleExceptionHandler(false);  [BUGGY]    pathNames[stackSize  -  1]  =     "null   ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	261	261	2	replace	connectToPossibleExceptionHandler(false);	  connectToPossibleExceptionHandler();    	non-compiled	[CE]  cannot  find  symbol	11	None	replace
115	[BUG]  [BUGGY]  _reportError( "Current  token( "+getClass().getName()  + ")not  null ",  JsonToken.NAME);  [CE]  cannot  find  symbol  [FE]              ArrayIndexOutOfBoundsException    [CONTEXT]    @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =     "null   ";  }  else  {    [BUGGY]  _reportError( "Current  token( "+getClass().getName()  + ")not  null ",  JsonToken.NAME);  [BUGGY]    pathNames[stackSize  -  1]  =     "null   ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	261	261	2	replace	_reportError( "Current  token( "+getClass().getName()  + ")not  null ",  JsonToken.NAME);	  _reportError(   "Current    token(   "+getClass().getName()    +   ")not    null.   ");    	non-compiled	[CE]  cannot  find  symbol	21	None	replace
116	[BUG]  [BUGGY]  _reportError( "Current  token( "+getClass().getName()  + ")not  null, ");  [CE]  cannot  find  symbol  [FE]                ArrayIndexOutOfBoundsException    [CONTEXT]    @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =     "null   ";  }  else  {    [BUGGY]  _reportError( "Current  token( "+getClass().getName()  + ")not  null, ");  [BUGGY]    pathNames[stackSize  -  1]  =     "null   ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	261	261	2	replace	_reportError( "Current  token( "+getClass().getName()  + ")not  null, ");	  _reportError(   "Current    token(   "+getClass().getName()    +   ")not    null.   ");    	non-compiled	[CE]  cannot  find  symbol	21	None	replace
117	[BUG]  [BUGGY]  _reportError( "Current  token( "+getClass().getName()  + ")not  null! ");  [CE]  cannot  find  symbol  [FE]                  ArrayIndexOutOfBoundsException    [CONTEXT]    @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =     "null   ";  }  else  {    [BUGGY]  _reportError( "Current  token( "+getClass().getName()  + ")not  null! ");  [BUGGY]    pathNames[stackSize  -  1]  =     "null   ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	261	261	2	replace	_reportError( "Current  token( "+getClass().getName()  + ")not  null! ");	  _reportError(   "Current    token(   "+getClass().getName()    +   ")not    null.   ");    	non-compiled	[CE]  cannot  find  symbol	21	None	replace
118	[BUG]  [BUGGY]      JsonToken  t  =  getCurrentToken();  [CE]  cannot  find  symbol  [FE]    AssertionFailedError    [CONTEXT]    @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =     "null   ";  }  else  {    [BUGGY]      JsonToken  t  =  getCurrentToken();  [BUGGY]    pathNames[stackSize  -  1]  =     "null   ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	261	261	2	replace	        JsonToken  t  =  getCurrentToken();	  	non-compiled	[CE]  cannot  find  symbol	9	None	add
119	[BUG]  [BUGGY]      String[]  pathIndices  =  getValues();  [CE]  cannot  find  symbol  [FE]      AssertionFailedError    [CONTEXT]    @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =     "null   ";  }  else  {    [BUGGY]      String[]  pathIndices  =  getValues();  [BUGGY]    pathNames[stackSize  -  1]  =     "null   ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	261	261	2	replace	        String[]  pathIndices  =  getValues();	  	non-compiled	[CE]  cannot  find  symbol	9	None	add
120	[BUG]  [BUGGY]      Path[]  pathIndices  =  getValues();  [CE]  cannot  find  symbol  [FE]        AssertionFailedError    [CONTEXT]    @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =     "null   ";  }  else  {    [BUGGY]      Path[]  pathIndices  =  getValues();  [BUGGY]    pathNames[stackSize  -  1]  =     "null   ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	261	261	2	replace	        Path[]  pathIndices  =  getValues();	  	non-compiled	[CE]  cannot  find  symbol	9	None	add
121	[BUG]  [BUGGY]      int  stackSize  =  stack.size();  [CE]  cannot  find  symbol  [FE]          AssertionFailedError    [CONTEXT]    @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =     "null   ";  }  else  {    [BUGGY]      int  stackSize  =  stack.size();  [BUGGY]    pathNames[stackSize  -  1]  =     "null   ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	261	261	2	replace	        int  stackSize  =  stack.size();	  	non-compiled	[CE]  cannot  find  symbol	9	None	add
122	[BUG]  [BUGGY]  JsonToken  t  =  _getCurrentToken();  [CE]  cannot  find  symbol  [FE]          ArrayIndexOutOfBoundsException    [CONTEXT]    @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =     "null   ";  }  else  {    [BUGGY]  JsonToken  t  =  _getCurrentToken();  [BUGGY]    pathNames[stackSize  -  1]  =     "null   ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	261	261	2	replace	JsonToken  t  =  _getCurrentToken();	  _reportUnsupportedOperation();    	non-compiled	[CE]  cannot  find  symbol	12	None	replace
123	[BUG]  [BUGGY]  JsonToken  t  =  _createJsonToken(JsonToken.START_OBJECT);  [CE]  cannot  find  symbol  START_OBJECT  [FE]            ArrayIndexOutOfBoundsException    [CONTEXT]    @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =     "null   ";  }  else  {    [BUGGY]  JsonToken  t  =  _createJsonToken(JsonToken.START_OBJECT);  [BUGGY]    pathNames[stackSize  -  1]  =     "null   ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	261	261	2	replace	JsonToken  t  =  _createJsonToken(JsonToken.START_OBJECT);	  _reportUnsupportedOperation();    	non-compiled	[CE]  cannot  find  symbol  START_OBJECT	12	None	replace
124	[BUG]  [BUGGY]  JsonToken  t  =  _createJsonToken(JsonToken.END_ARRAY);  [CE]  cannot  find  symbol  [FE]              ArrayIndexOutOfBoundsException    [CONTEXT]    @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =     "null   ";  }  else  {    [BUGGY]  JsonToken  t  =  _createJsonToken(JsonToken.END_ARRAY);  [BUGGY]    pathNames[stackSize  -  1]  =     "null   ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	261	261	2	replace	JsonToken  t  =  _createJsonToken(JsonToken.END_ARRAY);	  _reportUnsupportedOperation();    	non-compiled	[CE]  cannot  find  symbol	12	None	replace
125	[BUG]  [BUGGY]  JsonToken  t  =  _reportUnsupportedOperation();  [CE]  cannot  find  symbol  [FE]                ArrayIndexOutOfBoundsException    [CONTEXT]    @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =     "null   ";  }  else  {    [BUGGY]  JsonToken  t  =  _reportUnsupportedOperation();  [BUGGY]    pathNames[stackSize  -  1]  =     "null   ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	261	261	2	replace	JsonToken  t  =  _reportUnsupportedOperation();	  _reportUnsupportedOperation();    	non-compiled	[CE]  cannot  find  symbol	12	None	replace
126	[BUG]  [BUGGY]  if(stackSize  >  0)  {  popStack();  }  else  {  JsonToken.VALUE_NULL  =  new  JsonToken(JsonToken.FIELD_NAME);  pathNames[stackSize  -  1]  =  null   ";  }  [CE]  unclosed  string  literal  [FE]                ArrayIndexOutOfBoundsException    [CONTEXT]    @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =     "null   ";  }  else  {    [BUGGY]  if(stackSize  >  0)  {  popStack();  }  else  {  JsonToken.VALUE_NULL  =  new  JsonToken(JsonToken.FIELD_NAME);  pathNames[stackSize  -  1]  =  null   ";  }  [BUGGY]    pathNames[stackSize  -  1]  =     "null   ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	261	261	2	replace	if(stackSize  >  0)  {  popStack();  }  else  {  JsonToken.VALUE_NULL  =  new  JsonToken(JsonToken.FIELD_NAME);  pathNames[stackSize  -  1]  =  null   ";  }	  if(stackSize    >    0)    {    popStack();    }    else    {    JsonToken.VALUE_NULL    =    new    JsonToken(JsonToken.FIELD_NAME);    pathNames[stackSize    -    1]    =       "null   ";    }    	non-compiled	[CE]  unclosed  string  literal	6	None	replace
127	[BUG]  [BUGGY]  _reportError( "Current  token( "+JsonToken.VALUE_NUMBER_ERROR+ ")not  a  value ");  [CE]  cannot  find  symbol  VALUE_NUMBER_ERROR  [FE]                ArrayIndexOutOfBoundsException    [CONTEXT]    @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =     "null   ";  }  else  {    [BUGGY]  _reportError( "Current  token( "+JsonToken.VALUE_NUMBER_ERROR+ ")not  a  value ");  [BUGGY]    pathNames[stackSize  -  1]  =     "null   ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	261	261	2	replace	_reportError( "Current  token( "+JsonToken.VALUE_NUMBER_ERROR+ ")not  a  value ");	  _reportError(   "Current    token(   "+JsonToken.VALUE_NULL+   ")not    a    value   ");    	non-compiled	[CE]  cannot  find  symbol  VALUE_NUMBER_ERROR	22	None	replace
128	[BUG]  [BUGGY]  _reportError( "Current  token( "+JsonToken.NAME+ ")not  a  value ");  [CE]  cannot  find  symbol  [FE]                  ArrayIndexOutOfBoundsException    [CONTEXT]    @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =     "null   ";  }  else  {    [BUGGY]  _reportError( "Current  token( "+JsonToken.NAME+ ")not  a  value ");  [BUGGY]    pathNames[stackSize  -  1]  =     "null   ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	261	261	2	replace	_reportError( "Current  token( "+JsonToken.NAME+ ")not  a  value ");	  _reportError(   "Current    token(   "+JsonToken.VALUE_NULL+   ")not    a    value   ");    	non-compiled	[CE]  cannot  find  symbol	22	None	replace
129	[BUG]  [BUGGY]  _reportError( "Current  token( "+JsonToken.START+ ")not  a  value ");  [CE]  cannot  find  symbol  START  [FE]                    ArrayIndexOutOfBoundsException    [CONTEXT]    @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =     "null   ";  }  else  {    [BUGGY]  _reportError( "Current  token( "+JsonToken.START+ ")not  a  value ");  [BUGGY]    pathNames[stackSize  -  1]  =     "null   ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	261	261	2	replace	_reportError( "Current  token( "+JsonToken.START+ ")not  a  value ");	  _reportError(   "Current    token(   "+JsonToken.VALUE_NULL+   ")not    a    value   ");    	non-compiled	[CE]  cannot  find  symbol  START	22	None	replace
130	[BUG]  [BUGGY]  _reportError( "Current  token( "+JsonToken.END_OBJECT+ ")not  a  value ");  [CE]  cannot  find  symbol  [FE]                      ArrayIndexOutOfBoundsException    [CONTEXT]    @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =     "null   ";  }  else  {    [BUGGY]  _reportError( "Current  token( "+JsonToken.END_OBJECT+ ")not  a  value ");  [BUGGY]    pathNames[stackSize  -  1]  =     "null   ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	261	261	2	replace	_reportError( "Current  token( "+JsonToken.END_OBJECT+ ")not  a  value ");	  _reportError(   "Current    token(   "+JsonToken.VALUE_NULL+   ")not    a    value   ");    	non-compiled	[CE]  cannot  find  symbol	22	None	replace
131	[BUG]  [BUGGY]  if(stackSize  >  0)  {  popStack();  }  else  {  JsonToken.START_OBJECT  =  null;  nextName();  pathNames[stackSize  -  1]  =  null   ";  }  [CE]  unclosed  string  literal  [FE]                  ArrayIndexOutOfBoundsException    [CONTEXT]    @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =     "null   ";  }  else  {    [BUGGY]  if(stackSize  >  0)  {  popStack();  }  else  {  JsonToken.START_OBJECT  =  null;  nextName();  pathNames[stackSize  -  1]  =  null   ";  }  [BUGGY]    pathNames[stackSize  -  1]  =     "null   ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	261	261	2	replace	if(stackSize  >  0)  {  popStack();  }  else  {  JsonToken.START_OBJECT  =  null;  nextName();  pathNames[stackSize  -  1]  =  null   ";  }	  if(stackSize    >    0)    {    popStack();    }    else    {    JsonToken.START_OBJECT    =    null;    nextName();    pathNames[stackSize    -    1]    =       "null   ";    }    	non-compiled	[CE]  unclosed  string  literal	7	None	replace
132	[BUG]  [BUGGY]  [FE]  ArrayIndexOutOfBoundsException  [FE]                    ArrayIndexOutOfBoundsException    [CONTEXT]    @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =     "null   ";  }  else  {    [BUGGY]  if(stackSize  >  0)  {  popStack();  }  else  {  JsonToken  START_OBJECT  =  null;  nextName();  pathNames[stackSize  -  1]  =   "null ";  }  [BUGGY]    pathNames[stackSize  -  1]  =     "null   ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	261	261	2	add	if(stackSize  >  0)  {  popStack();  }  else  {  JsonToken  START_OBJECT  =  null;  nextName();  pathNames[stackSize  -  1]  =   "null ";  }	  if(stackSize    >    0)    {    popStack();    }    else    {    JsonToken.START_OBJECT    =    null;    nextName();    pathNames[stackSize    -    1]    =       "null   ";    }    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	7	2	replace
133	[BUG]  [BUGGY]  if(stackSize  >  0)  {  popStack();  }  else  {  JsonToken  START_OBJECT  =  null;  nextName();  pathNames[stackSize  -  1]  =   "null ";  }  [FE]  ArrayIndexOutOfBoundsException  [FE]                    ArrayIndexOutOfBoundsException    [CONTEXT]    @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =     "null   ";  }  else  {    [BUGGY]  if(stackSize  >  0)  {  popStack();  }  else  {  JsonToken  START_OBJECT  =  null;  nextName();  pathNames[stackSize  -  1]  =   "null ";  }  [BUGGY]    pathNames[stackSize  -  1]  =     "null   ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	261	261	2	replace	if(stackSize  >  0)  {  popStack();  }  else  {  JsonToken  START_OBJECT  =  null;  nextName();  pathNames[stackSize  -  1]  =   "null ";  }	  if(stackSize    >    0)    {    popStack();    }    else    {    JsonToken.START_OBJECT    =    null;    nextName();    pathNames[stackSize    -    1]    =       "null   ";    }    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	7	2	replace
134	[BUG]  [BUGGY]  connectToPossibleExceptionHandler(null,  stackSize);  [CE]  cannot  find  symbol  [FE]              ArrayIndexOutOfBoundsException    [CONTEXT]    @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =     "null   ";  }  else  {    [BUGGY]  connectToPossibleExceptionHandler(null,  stackSize);  [BUGGY]    pathNames[stackSize  -  1]  =     "null   ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	261	261	2	replace	connectToPossibleExceptionHandler(null,  stackSize);	  connectToPossibleExceptionHandler(throwInternal());    	non-compiled	[CE]  cannot  find  symbol	14	None	replace
135	[BUG]  [BUGGY]  connectToPossibleExceptionHandler(null,  stackSize());  [CE]  cannot  find  symbol  [FE]                ArrayIndexOutOfBoundsException    [CONTEXT]    @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =     "null   ";  }  else  {    [BUGGY]  connectToPossibleExceptionHandler(null,  stackSize());  [BUGGY]    pathNames[stackSize  -  1]  =     "null   ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	261	261	2	replace	connectToPossibleExceptionHandler(null,  stackSize());	  connectToPossibleExceptionHandler(throwInternal());    	non-compiled	[CE]  cannot  find  symbol	14	None	replace
136	[BUG]  [BUGGY]  connectToPossibleExceptionHandler(null,  throwInternal());  [CE]  cannot  find  symbol  [FE]                  ArrayIndexOutOfBoundsException    [CONTEXT]    @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =     "null   ";  }  else  {    [BUGGY]  connectToPossibleExceptionHandler(null,  throwInternal());  [BUGGY]    pathNames[stackSize  -  1]  =     "null   ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	261	261	2	replace	connectToPossibleExceptionHandler(null,  throwInternal());	  connectToPossibleExceptionHandler(throwInternal());    	non-compiled	[CE]  cannot  find  symbol	14	None	replace
137	[BUG]  [BUGGY]  connectToPossibleExceptionHandler(this,  stackSize);  [CE]  cannot  find  symbol  [FE]                    ArrayIndexOutOfBoundsException    [CONTEXT]    @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =     "null   ";  }  else  {    [BUGGY]  connectToPossibleExceptionHandler(this,  stackSize);  [BUGGY]    pathNames[stackSize  -  1]  =     "null   ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	261	261	2	replace	connectToPossibleExceptionHandler(this,  stackSize);	  connectToPossibleExceptionHandler(throwInternal());    	non-compiled	[CE]  cannot  find  symbol	14	None	replace
138	[BUG]  [BUGGY]  [FE]  ArrayIndexOutOfBoundsException  [FE]                    ArrayIndexOutOfBoundsException    [CONTEXT]    @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =     "null   ";  }  else  {    [BUGGY]  if(stackSize  >  0)  {  popStack();  }  else  {  JsonToken  START_OBJECT  =  null;  nextName();  pathNames[stackSize  -  1]  =  null;  }  [BUGGY]    pathNames[stackSize  -  1]  =     "null   ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	261	261	2	add	if(stackSize  >  0)  {  popStack();  }  else  {  JsonToken  START_OBJECT  =  null;  nextName();  pathNames[stackSize  -  1]  =  null;  }	  if(stackSize    >    0)    {    popStack();    }    else    {    JsonToken.START_OBJECT    =    null;    nextName();    pathNames[stackSize    -    1]    =    null;    }    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	8	2	replace
139	[BUG]  [BUGGY]  if(stackSize  >  0)  {  popStack();  }  else  {  JsonToken  START_OBJECT  =  null;  nextName();  pathNames[stackSize  -  1]  =  null;  }  [FE]  ArrayIndexOutOfBoundsException  [FE]                    ArrayIndexOutOfBoundsException    [CONTEXT]    @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =     "null   ";  }  else  {    [BUGGY]  if(stackSize  >  0)  {  popStack();  }  else  {  JsonToken  START_OBJECT  =  null;  nextName();  pathNames[stackSize  -  1]  =  null;  }  [BUGGY]    pathNames[stackSize  -  1]  =     "null   ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	261	261	2	replace	if(stackSize  >  0)  {  popStack();  }  else  {  JsonToken  START_OBJECT  =  null;  nextName();  pathNames[stackSize  -  1]  =  null;  }	  if(stackSize    >    0)    {    popStack();    }    else    {    JsonToken.START_OBJECT    =    null;    nextName();    pathNames[stackSize    -    1]    =    null;    }    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	8	2	replace
140	[BUG]  [BUGGY]  if(stackSize  >  0)  {  popStack();  }  else  {  JsonToken.START_OBJECT  =  null;  pathNames[stackSize  -  1]  =  null;  }  [CE]  cannot  find  symbol  START_OBJECT  [FE]                      ArrayIndexOutOfBoundsException    [CONTEXT]    @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =     "null   ";  }  else  {    [BUGGY]  if(stackSize  >  0)  {  popStack();  }  else  {  JsonToken.START_OBJECT  =  null;  pathNames[stackSize  -  1]  =  null;  }  [BUGGY]    pathNames[stackSize  -  1]  =     "null   ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	261	261	2	replace	if(stackSize  >  0)  {  popStack();  }  else  {  JsonToken.START_OBJECT  =  null;  pathNames[stackSize  -  1]  =  null;  }	  if(stackSize    >    0)    {    popStack();    }    else    {    JsonToken.START_OBJECT    =    null;    nextName();    pathNames[stackSize    -    1]    =    null;    }    	non-compiled	[CE]  cannot  find  symbol  START_OBJECT	8	None	replace
141	[BUG]  [BUGGY]  if(stackSize  >  0)  {  popStack();  }  else  {  JsonToken.END_OBJECT  =  null;  nextName();  pathNames[stackSize  -  1]  =  null;  }  [CE]  cannot  assign  a  value  to  final  variable  END_OBJECT  [FE]                        ArrayIndexOutOfBoundsException    [CONTEXT]    @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =     "null   ";  }  else  {    [BUGGY]  if(stackSize  >  0)  {  popStack();  }  else  {  JsonToken.END_OBJECT  =  null;  nextName();  pathNames[stackSize  -  1]  =  null;  }  [BUGGY]    pathNames[stackSize  -  1]  =     "null   ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	261	261	2	replace	if(stackSize  >  0)  {  popStack();  }  else  {  JsonToken.END_OBJECT  =  null;  nextName();  pathNames[stackSize  -  1]  =  null;  }	  if(stackSize    >    0)    {    popStack();    }    else    {    JsonToken.START_OBJECT    =    null;    nextName();    pathNames[stackSize    -    1]    =    null;    }    	non-compiled	[CE]  cannot  assign  a  value  to  final  variable  END_OBJECT	8	None	replace
142	[BUG]  [BUGGY]  if(stackSize  >  0)  {  popStack();  }  else  {  JsonToken.START_OBJECT  =  null;  lastName();  pathNames[stackSize  -  1]  =  null;  }  [CE]  cannot  find  symbol  START_OBJECT  [FE]                          ArrayIndexOutOfBoundsException    [CONTEXT]    @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =     "null   ";  }  else  {    [BUGGY]  if(stackSize  >  0)  {  popStack();  }  else  {  JsonToken.START_OBJECT  =  null;  lastName();  pathNames[stackSize  -  1]  =  null;  }  [BUGGY]    pathNames[stackSize  -  1]  =     "null   ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	261	261	2	replace	if(stackSize  >  0)  {  popStack();  }  else  {  JsonToken.START_OBJECT  =  null;  lastName();  pathNames[stackSize  -  1]  =  null;  }	  if(stackSize    >    0)    {    popStack();    }    else    {    JsonToken.START_OBJECT    =    null;    nextName();    pathNames[stackSize    -    1]    =    null;    }    	non-compiled	[CE]  cannot  find  symbol  START_OBJECT	8	None	replace
143	[BUG]  [BUGGY]  _reportError( "Current  token( "+getMessage()  + ")not  a  value ",  JsonToken.NAME);  [CE]  cannot  find  symbol  [FE]            ArrayIndexOutOfBoundsException    [CONTEXT]    @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =     "null   ";  }  else  {    [BUGGY]  _reportError( "Current  token( "+getMessage()  + ")not  a  value ",  JsonToken.NAME);  [BUGGY]    pathNames[stackSize  -  1]  =     "null   ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	261	261	2	replace	_reportError( "Current  token( "+getMessage()  + ")not  a  value ",  JsonToken.NAME);	  _reportError(   "Current    token(   "+getMessage()    +   ")not    a    value   ");    	non-compiled	[CE]  cannot  find  symbol	20	None	replace
144	[BUG]  [BUGGY]  _reportError( "Current  token( "+getMessage()  + ")was  expecting  a  value ");  [CE]  cannot  find  symbol  [FE]              ArrayIndexOutOfBoundsException    [CONTEXT]    @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =     "null   ";  }  else  {    [BUGGY]  _reportError( "Current  token( "+getMessage()  + ")was  expecting  a  value ");  [BUGGY]    pathNames[stackSize  -  1]  =     "null   ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	261	261	2	replace	_reportError( "Current  token( "+getMessage()  + ")was  expecting  a  value ");	  _reportError(   "Current    token(   "+getMessage()    +   ")not    a    value   ");    	non-compiled	[CE]  cannot  find  symbol	20	None	replace
145	[BUG]  [BUGGY]  connectToPossibleExceptionHandler(null,  pathNames);  [CE]  cannot  find  symbol  [FE]                    ArrayIndexOutOfBoundsException    [CONTEXT]    @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =     "null   ";  }  else  {    [BUGGY]  connectToPossibleExceptionHandler(null,  pathNames);  [BUGGY]    pathNames[stackSize  -  1]  =     "null   ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	261	261	2	replace	connectToPossibleExceptionHandler(null,  pathNames);	  connectToPossibleExceptionHandler(null,    null);    	non-compiled	[CE]  cannot  find  symbol	17	None	replace
146	[BUG]  [BUGGY]  if(stackSize  >  0)  {  popStack();  }  else  {  JsonToken.VALUE_NULL  =  new  JsonToken(JsonToken.NAME);  pathNames[stackSize  -  1]  =  null   ";  }  [CE]  unclosed  string  literal  [FE]              ArrayIndexOutOfBoundsException    [CONTEXT]    @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =     "null   ";  }  else  {    [BUGGY]  if(stackSize  >  0)  {  popStack();  }  else  {  JsonToken.VALUE_NULL  =  new  JsonToken(JsonToken.NAME);  pathNames[stackSize  -  1]  =  null   ";  }  [BUGGY]    pathNames[stackSize  -  1]  =     "null   ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	261	261	2	replace	if(stackSize  >  0)  {  popStack();  }  else  {  JsonToken.VALUE_NULL  =  new  JsonToken(JsonToken.NAME);  pathNames[stackSize  -  1]  =  null   ";  }	  if(stackSize    >    0)    {    popStack();    }    else    {    JsonToken.VALUE_NULL    =    new    JsonToken(JsonToken.NAME);    pathNames[stackSize    -    1]    =       "null   ";    }    	non-compiled	[CE]  unclosed  string  literal	5	None	replace
147	[BUG]  [BUGGY]  peech();  [CE]  cannot  find  symbol  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]    @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =     "null   ";  }  else  {    [BUGGY]  peech();  [BUGGY]    pathNames[stackSize  -  1]  =     "null   ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	261	261	2	replace	peech();	  if(stackSize    >    0)    {    popStack();    }    else    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  cannot  find  symbol	2	None	replace
148	[BUG]  [BUGGY]  ack();  [CE]  cannot  find  symbol  [FE]      ArrayIndexOutOfBoundsException    [CONTEXT]    @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =     "null   ";  }  else  {    [BUGGY]  ack();  [BUGGY]    pathNames[stackSize  -  1]  =     "null   ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	261	261	2	replace	ack();	  if(stackSize    >    0)    {    popStack();    }    else    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  cannot  find  symbol	2	None	replace
149	[BUG]  [BUGGY]  if(stackSize  >  1)  {  popStack();  }  else  {  JsonToken.VALUE_NULL  =  new  JsonToken(JsonToken.FIELD_NAME);  pathNames[stackSize  -  1]  =  null;  }  [CE]  cannot  find  symbol  VALUE_NULL  [FE]            ArrayIndexOutOfBoundsException    [CONTEXT]    @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =     "null   ";  }  else  {    [BUGGY]  if(stackSize  >  1)  {  popStack();  }  else  {  JsonToken.VALUE_NULL  =  new  JsonToken(JsonToken.FIELD_NAME);  pathNames[stackSize  -  1]  =  null;  }  [BUGGY]    pathNames[stackSize  -  1]  =     "null   ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	261	261	2	replace	if(stackSize  >  1)  {  popStack();  }  else  {  JsonToken.VALUE_NULL  =  new  JsonToken(JsonToken.FIELD_NAME);  pathNames[stackSize  -  1]  =  null;  }	  if(stackSize    >    0)    {    popStack();    }    else    {    JsonToken.VALUE_NULL    =    new    JsonToken(JsonToken.FIELD_NAME);    pathNames[stackSize    -    1]    =    null;    }    	non-compiled	[CE]  cannot  find  symbol  VALUE_NULL	4	None	replace
150	[BUG]  [BUGGY]  if(stackSize  >  0)  {  popStack();  }  else  {  JsonToken.VALUE_NULL  =  new  JsonToken(JsonToken.FIELD_NAME);  pathNames[stackSize  -  1]  =  null  [CE]  ';'  expected  [FE]              ArrayIndexOutOfBoundsException    [CONTEXT]    @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =     "null   ";  }  else  {    [BUGGY]  if(stackSize  >  0)  {  popStack();  }  else  {  JsonToken.VALUE_NULL  =  new  JsonToken(JsonToken.FIELD_NAME);  pathNames[stackSize  -  1]  =  null  [BUGGY]    pathNames[stackSize  -  1]  =     "null   ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	261	261	2	replace	if(stackSize  >  0)  {  popStack();  }  else  {  JsonToken.VALUE_NULL  =  new  JsonToken(JsonToken.FIELD_NAME);  pathNames[stackSize  -  1]  =  null	  if(stackSize    >    0)    {    popStack();    }    else    {    JsonToken.VALUE_NULL    =    new    JsonToken(JsonToken.FIELD_NAME);    pathNames[stackSize    -    1]    =    null;    }    	non-compiled	[CE]  ';'  expected	4	None	replace
151	[BUG]  [BUGGY]  if(stackSize  >  0)  {  popStack();  }  else  {  JsonToken.VALUE_NULL  =  new  JsonToken(JsonToken.START_OBJECT);  pathNames[stackSize  -  1]  =  null;  }  [CE]  cannot  find  symbol  VALUE_NULL  [FE]                ArrayIndexOutOfBoundsException    [CONTEXT]    @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =     "null   ";  }  else  {    [BUGGY]  if(stackSize  >  0)  {  popStack();  }  else  {  JsonToken.VALUE_NULL  =  new  JsonToken(JsonToken.START_OBJECT);  pathNames[stackSize  -  1]  =  null;  }  [BUGGY]    pathNames[stackSize  -  1]  =     "null   ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	261	261	2	replace	if(stackSize  >  0)  {  popStack();  }  else  {  JsonToken.VALUE_NULL  =  new  JsonToken(JsonToken.START_OBJECT);  pathNames[stackSize  -  1]  =  null;  }	  if(stackSize    >    0)    {    popStack();    }    else    {    JsonToken.VALUE_NULL    =    new    JsonToken(JsonToken.FIELD_NAME);    pathNames[stackSize    -    1]    =    null;    }    	non-compiled	[CE]  cannot  find  symbol  VALUE_NULL	4	None	replace
152	[BUG]  [BUGGY]  if(stackSize  >  1)  {  popStack();  }  else  {  JsonToken.VALUE_NULL  =  new  JsonToken(JsonToken.NAME);  pathNames[stackSize  -  1]  =  null;  }  [CE]  cannot  find  symbol  VALUE_NULL  [FE]          ArrayIndexOutOfBoundsException    [CONTEXT]    @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =     "null   ";  }  else  {    [BUGGY]  if(stackSize  >  1)  {  popStack();  }  else  {  JsonToken.VALUE_NULL  =  new  JsonToken(JsonToken.NAME);  pathNames[stackSize  -  1]  =  null;  }  [BUGGY]    pathNames[stackSize  -  1]  =     "null   ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	261	261	2	replace	if(stackSize  >  1)  {  popStack();  }  else  {  JsonToken.VALUE_NULL  =  new  JsonToken(JsonToken.NAME);  pathNames[stackSize  -  1]  =  null;  }	  if(stackSize    >    0)    {    popStack();    }    else    {    JsonToken.VALUE_NULL    =    new    JsonToken(JsonToken.NAME);    pathNames[stackSize    -    1]    =    null;    }    	non-compiled	[CE]  cannot  find  symbol  VALUE_NULL	3	None	replace
153	[BUG]  [BUGGY]  if(stackSize  >  0)  {  popStack();  }  else  {  JsonToken.VALUE_NULL  =  new  JsonToken(JsonToken.NAME);  pathNames[stackSize  -  1]  =  null  [CE]  ';'  expected  [FE]            ArrayIndexOutOfBoundsException    [CONTEXT]    @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =     "null   ";  }  else  {    [BUGGY]  if(stackSize  >  0)  {  popStack();  }  else  {  JsonToken.VALUE_NULL  =  new  JsonToken(JsonToken.NAME);  pathNames[stackSize  -  1]  =  null  [BUGGY]    pathNames[stackSize  -  1]  =     "null   ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	261	261	2	replace	if(stackSize  >  0)  {  popStack();  }  else  {  JsonToken.VALUE_NULL  =  new  JsonToken(JsonToken.NAME);  pathNames[stackSize  -  1]  =  null	  if(stackSize    >    0)    {    popStack();    }    else    {    JsonToken.VALUE_NULL    =    new    JsonToken(JsonToken.NAME);    pathNames[stackSize    -    1]    =    null;    }    	non-compiled	[CE]  ';'  expected	3	None	replace
154	[BUG]  [BUGGY]  _reportError( "Current  token( "+getClass().getName()  + ")not  a  value ",  JsonToken.NAME);  [CE]  cannot  find  symbol  [FE]        ArrayIndexOutOfBoundsException    [CONTEXT]    @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =     "null   ";  }  else  {    [BUGGY]  _reportError( "Current  token( "+getClass().getName()  + ")not  a  value ",  JsonToken.NAME);  [BUGGY]    pathNames[stackSize  -  1]  =     "null   ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	261	261	2	replace	_reportError( "Current  token( "+getClass().getName()  + ")not  a  value ",  JsonToken.NAME);	  _reportError(   "Current    token(   "+getClass().getName()    +   ")not    a    value   ");    	non-compiled	[CE]  cannot  find  symbol	18	None	replace
155	[BUG]  [BUGGY]  _reportError( "Current  token( "+getClass().getName()  + ")not  a  value ",  JsonToken.VALUE_NUMBER_ERROR);  [CE]  cannot  find  symbol  VALUE_NUMBER_ERROR  [FE]          ArrayIndexOutOfBoundsException    [CONTEXT]    @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =     "null   ";  }  else  {    [BUGGY]  _reportError( "Current  token( "+getClass().getName()  + ")not  a  value ",  JsonToken.VALUE_NUMBER_ERROR);  [BUGGY]    pathNames[stackSize  -  1]  =     "null   ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	261	261	2	replace	_reportError( "Current  token( "+getClass().getName()  + ")not  a  value ",  JsonToken.VALUE_NUMBER_ERROR);	  _reportError(   "Current    token(   "+getClass().getName()    +   ")not    a    value   ");    	non-compiled	[CE]  cannot  find  symbol  VALUE_NUMBER_ERROR	18	None	replace
156	[BUG]  [BUGGY]  [FE]  ArrayIndexOutOfBoundsException  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]    @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =     "null   ";  }  else  {    [BUGGY]  if(stackSize  >  0)  {  popStack();  }  if(stackSize  >  0)  {  popStack();  System.arraycopy(pathNames,  0,  pathNames,  1,  stackSize  -  1);  }  [BUGGY]    pathNames[stackSize  -  1]  =     "null   ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	261	261	2	add	if(stackSize    >    0)    {    popStack();    }    if(stackSize  >  0)  {  popStack();  System.arraycopy(pathNames,  0,  pathNames,  1,  stackSize  -  1);  }	  	compilable	  [FE]  ArrayIndexOutOfBoundsException  	23	2	add
157	[BUG]  [BUGGY]  if(stackSize  >  0)  {  popStack();  }  if(stackSize  >  0)  {  popStack();  System.arraycopy(pathNames,  0,  pathNames,  1,  stackSize  -  1);  }  [FE]  ArrayIndexOutOfBoundsException  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]    @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =     "null   ";  }  else  {    [BUGGY]  if(stackSize  >  0)  {  popStack();  }  if(stackSize  >  0)  {  popStack();  System.arraycopy(pathNames,  0,  pathNames,  1,  stackSize  -  1);  }  [BUGGY]    pathNames[stackSize  -  1]  =     "null   ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	261	261	2	replace	if(stackSize    >    0)    {    popStack();    }    if(stackSize  >  0)  {  popStack();  System.arraycopy(pathNames,  0,  pathNames,  1,  stackSize  -  1);  }	  	compilable	  [FE]  ArrayIndexOutOfBoundsException  	23	2	add
158	[BUG]  [BUGGY]  [FE]  ArrayIndexOutOfBoundsException  [FE]      ArrayIndexOutOfBoundsException    [CONTEXT]    @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =     "null   ";  }  else  {    [BUGGY]  if(stackSize  >  0)  {  popStack();  }  if(stackSize  >  0)  {  popStack();  System.arraycopy(pathNames,  0,  pathNames,  0,  stackSize  -  1);  }  [BUGGY]    pathNames[stackSize  -  1]  =     "null   ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	261	261	2	add	if(stackSize    >    0)    {    popStack();    }    if(stackSize  >  0)  {  popStack();  System.arraycopy(pathNames,  0,  pathNames,  0,  stackSize  -  1);  }	  	compilable	  [FE]  ArrayIndexOutOfBoundsException  	23	2	add
159	[BUG]  [BUGGY]  if(stackSize  >  0)  {  popStack();  }  if(stackSize  >  0)  {  popStack();  System.arraycopy(pathNames,  0,  pathNames,  0,  stackSize  -  1);  }  [FE]  ArrayIndexOutOfBoundsException  [FE]      ArrayIndexOutOfBoundsException    [CONTEXT]    @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =     "null   ";  }  else  {    [BUGGY]  if(stackSize  >  0)  {  popStack();  }  if(stackSize  >  0)  {  popStack();  System.arraycopy(pathNames,  0,  pathNames,  0,  stackSize  -  1);  }  [BUGGY]    pathNames[stackSize  -  1]  =     "null   ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	261	261	2	replace	if(stackSize    >    0)    {    popStack();    }    if(stackSize  >  0)  {  popStack();  System.arraycopy(pathNames,  0,  pathNames,  0,  stackSize  -  1);  }	  	compilable	  [FE]  ArrayIndexOutOfBoundsException  	23	2	add
160	[BUG]  [BUGGY]  [FE]  ArrayIndexOutOfBoundsException  [FE]        ArrayIndexOutOfBoundsException    [CONTEXT]    @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =     "null   ";  }  else  {    [BUGGY]  if(stackSize  >  0)  {  popStack();  }  if(stackSize  >  0)  {  popStack();  System.arraycopy(pathNames,  0,  pathNames,  1,  stackSize);  }  [BUGGY]    pathNames[stackSize  -  1]  =     "null   ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	261	261	2	add	if(stackSize    >    0)    {    popStack();    }    if(stackSize  >  0)  {  popStack();  System.arraycopy(pathNames,  0,  pathNames,  1,  stackSize);  }	  	compilable	  [FE]  ArrayIndexOutOfBoundsException  	23	2	add
161	[BUG]  [BUGGY]  if(stackSize  >  0)  {  popStack();  }  if(stackSize  >  0)  {  popStack();  System.arraycopy(pathNames,  0,  pathNames,  1,  stackSize);  }  [FE]  ArrayIndexOutOfBoundsException  [FE]        ArrayIndexOutOfBoundsException    [CONTEXT]    @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =     "null   ";  }  else  {    [BUGGY]  if(stackSize  >  0)  {  popStack();  }  if(stackSize  >  0)  {  popStack();  System.arraycopy(pathNames,  0,  pathNames,  1,  stackSize);  }  [BUGGY]    pathNames[stackSize  -  1]  =     "null   ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	261	261	2	replace	if(stackSize    >    0)    {    popStack();    }    if(stackSize  >  0)  {  popStack();  System.arraycopy(pathNames,  0,  pathNames,  1,  stackSize);  }	  	compilable	  [FE]  ArrayIndexOutOfBoundsException  	23	2	add
162	[BUG]  [BUGGY]  if(stackSize  >  0)  {  popStack();  }  if(stackSize  >  0)  {  popStack();  System.arraycopy(stackNames,  0,  pathNames,  1,  stackSize  -  1);  }  [CE]  cannot  find  symbol  stackNames  [FE]          ArrayIndexOutOfBoundsException    [CONTEXT]    @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =     "null   ";  }  else  {    [BUGGY]  if(stackSize  >  0)  {  popStack();  }  if(stackSize  >  0)  {  popStack();  System.arraycopy(stackNames,  0,  pathNames,  1,  stackSize  -  1);  }  [BUGGY]    pathNames[stackSize  -  1]  =     "null   ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	261	261	2	replace	if(stackSize    >    0)    {    popStack();    }    if(stackSize  >  0)  {  popStack();  System.arraycopy(stackNames,  0,  pathNames,  1,  stackSize  -  1);  }	  	non-compiled	[CE]  cannot  find  symbol  stackNames	23	None	add
163	[BUG]  [BUGGY]  connectToPeek(JsonToken.END_ARRAY);  [CE]  cannot  find  symbol  [FE]                  ArrayIndexOutOfBoundsException    [CONTEXT]    @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =     "null   ";  }  else  {    [BUGGY]  connectToPeek(JsonToken.END_ARRAY);  [BUGGY]    pathNames[stackSize  -  1]  =     "null   ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	261	261	2	replace	connectToPeek(JsonToken.END_ARRAY);	  connectToPeek();    	non-compiled	[CE]  cannot  find  symbol	16	None	replace
164	[BUG]  [BUGGY]  if(stackSize  >  0)  {  skipStack();  }  else  {  skipStack();  }  [CE]  cannot  find  symbol  [FE]          ArrayIndexOutOfBoundsException    [CONTEXT]    @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =     "null   ";  }  else  {    [BUGGY]  if(stackSize  >  0)  {  skipStack();  }  else  {  skipStack();  }  [BUGGY]    pathNames[stackSize  -  1]  =     "null   ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	261	261	2	replace	if(stackSize  >  0)  {  skipStack();  }  else  {  skipStack();  }	  if(stackSize    >    0)    {    popStack();    }    else    {    skipStack();    }    	non-compiled	[CE]  cannot  find  symbol	19	None	replace
165	[BUG]  [BUGGY]  if(stackSize  >  0)  {  nextName();  }  else  {  skipStack();  }  [CE]  cannot  find  symbol  [FE]            ArrayIndexOutOfBoundsException    [CONTEXT]    @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =     "null   ";  }  else  {    [BUGGY]  if(stackSize  >  0)  {  nextName();  }  else  {  skipStack();  }  [BUGGY]    pathNames[stackSize  -  1]  =     "null   ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	261	261	2	replace	if(stackSize  >  0)  {  nextName();  }  else  {  skipStack();  }	  if(stackSize    >    0)    {    popStack();    }    else    {    skipStack();    }    	non-compiled	[CE]  cannot  find  symbol	19	None	replace
166	[BUG]  [BUGGY]  append(stackSize  -  1)  {  popStack();  }  else  {  skipStack();  }  [CE]  ';'  expected  [FE]              ArrayIndexOutOfBoundsException    [CONTEXT]    @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =     "null   ";  }  else  {    [BUGGY]  append(stackSize  -  1)  {  popStack();  }  else  {  skipStack();  }  [BUGGY]    pathNames[stackSize  -  1]  =     "null   ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	261	261	2	replace	append(stackSize  -  1)  {  popStack();  }  else  {  skipStack();  }	  if(stackSize    >    0)    {    popStack();    }    else    {    skipStack();    }    	non-compiled	[CE]  ';'  expected	19	None	replace
167	[BUG]  [BUGGY]  if(stackSize  >  0)  {  stack.pop();  }  else  {  skipStack();  }  [CE]  cannot  find  symbol  [FE]                ArrayIndexOutOfBoundsException    [CONTEXT]    @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =     "null   ";  }  else  {    [BUGGY]  if(stackSize  >  0)  {  stack.pop();  }  else  {  skipStack();  }  [BUGGY]    pathNames[stackSize  -  1]  =     "null   ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	261	261	2	replace	if(stackSize  >  0)  {  stack.pop();  }  else  {  skipStack();  }	  if(stackSize    >    0)    {    popStack();    }    else    {    skipStack();    }    	non-compiled	[CE]  cannot  find  symbol	19	None	replace
168	[BUG]  [BUGGY]  pathIndices[stackSize  -  1]  =  null   ";  [CE]  unclosed  string  literal  [FE]              ArrayIndexOutOfBoundsException    [CONTEXT]    @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =     "null   ";  }  else  {    [BUGGY]  pathIndices[stackSize  -  1]  =  null   ";  [BUGGY]    pathNames[stackSize  -  1]  =     "null   ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	261	261	2	replace	pathIndices[stackSize  -  1]  =  null   ";	  if(stackSize    >    0)    {    popStack();    }    else    {    JsonToken.VALUE_NULL    =    new    JsonToken(JsonToken.NAME);    pathNames[stackSize    -    1]    =       "null   ";    }    	non-compiled	[CE]  unclosed  string  literal	5	None	replace
169	[BUG]  [BUGGY]  connectToPossibleExceptionHandler(ch,  null);  [CE]  cannot  find  symbol  ch  [FE]            ArrayIndexOutOfBoundsException    [CONTEXT]    @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =     "null   ";  }  else  {    [BUGGY]  connectToPossibleExceptionHandler(ch,  null);  [BUGGY]    pathNames[stackSize  -  1]  =     "null   ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	261	261	2	replace	connectToPossibleExceptionHandler(ch,  null);	  connectToPossibleExceptionHandler(null);    	non-compiled	[CE]  cannot  find  symbol  ch	13	None	replace
170	[BUG]  [BUGGY]  connectToPossibleExceptionHandler(null,  JsonToken.VALUE_NULL);  [CE]  cannot  find  symbol  VALUE_NULL  [FE]              ArrayIndexOutOfBoundsException    [CONTEXT]    @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =     "null   ";  }  else  {    [BUGGY]  connectToPossibleExceptionHandler(null,  JsonToken.VALUE_NULL);  [BUGGY]    pathNames[stackSize  -  1]  =     "null   ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	261	261	2	replace	connectToPossibleExceptionHandler(null,  JsonToken.VALUE_NULL);	  connectToPossibleExceptionHandler(null);    	non-compiled	[CE]  cannot  find  symbol  VALUE_NULL	13	None	replace
171	[BUG]  [BUGGY]  [FE]  ArrayIndexOutOfBoundsException  [FE]    AssertionFailedError    [CONTEXT]    @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =     "null   ";  }  else  {    [BUGGY]      if(stackSize  >  0)  {  pathNames[stackSize  -  1]  =   "null ";  }  [BUGGY]    pathNames[stackSize  -  1]  =     "null   ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	261	261	2	add	        if(stackSize  >  0)  {  pathNames[stackSize  -  1]  =   "null ";  }	  	compilable	  [FE]  ArrayIndexOutOfBoundsException  	9	2	add
172	[BUG]  [BUGGY]      if(stackSize  >  0)  {  pathNames[stackSize  -  1]  =   "null ";  }  [FE]  ArrayIndexOutOfBoundsException  [FE]    AssertionFailedError    [CONTEXT]    @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =     "null   ";  }  else  {    [BUGGY]      if(stackSize  >  0)  {  pathNames[stackSize  -  1]  =   "null ";  }  [BUGGY]    pathNames[stackSize  -  1]  =     "null   ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	261	261	2	replace	        if(stackSize  >  0)  {  pathNames[stackSize  -  1]  =   "null ";  }	  	compilable	  [FE]  ArrayIndexOutOfBoundsException  	9	2	add
173	[BUG]  [BUGGY]  [FE]  ArrayIndexOutOfBoundsException  [FE]      AssertionFailedError    [CONTEXT]    @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =     "null   ";  }  else  {    [BUGGY]      if(stackSize  >  0)  {  pathNames[stackSize  -  1]  =  null;  }  [BUGGY]    pathNames[stackSize  -  1]  =     "null   ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	261	261	2	add	        if(stackSize  >  0)  {  pathNames[stackSize  -  1]  =  null;  }	  	compilable	  [FE]  ArrayIndexOutOfBoundsException  	9	2	add
174	[BUG]  [BUGGY]      if(stackSize  >  0)  {  pathNames[stackSize  -  1]  =  null;  }  [FE]  ArrayIndexOutOfBoundsException  [FE]      AssertionFailedError    [CONTEXT]    @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =     "null   ";  }  else  {    [BUGGY]      if(stackSize  >  0)  {  pathNames[stackSize  -  1]  =  null;  }  [BUGGY]    pathNames[stackSize  -  1]  =     "null   ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	261	261	2	replace	        if(stackSize  >  0)  {  pathNames[stackSize  -  1]  =  null;  }	  	compilable	  [FE]  ArrayIndexOutOfBoundsException  	9	2	add
175	[BUG]  [BUGGY]  [FE]  IllegalArgumentException  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]    @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =     "null   ";  }  else  {    [BUGGY]  if(stackSize  >  1)  {  popStack();  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]    pathNames[stackSize  -  1]  =     "null   ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	261	261	2	add	if(stackSize  >  1)  {  popStack();  }  else  {  throw  new  IllegalArgumentException( " ");  }	  if(stackSize    >    0)    {    popStack();    }    else    {    throw    new    IllegalArgumentException(   "   ");    }    	compilable	  [FE]  IllegalArgumentException  	2	2	replace
176	[BUG]  [BUGGY]  if(stackSize  >  1)  {  popStack();  }  else  {  throw  new  IllegalArgumentException( " ");  }  [FE]  IllegalArgumentException  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]    @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =     "null   ";  }  else  {    [BUGGY]  if(stackSize  >  1)  {  popStack();  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]    pathNames[stackSize  -  1]  =     "null   ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	261	261	2	replace	if(stackSize  >  1)  {  popStack();  }  else  {  throw  new  IllegalArgumentException( " ");  }	  if(stackSize    >    0)    {    popStack();    }    else    {    throw    new    IllegalArgumentException(   "   ");    }    	compilable	  [FE]  IllegalArgumentException  	2	2	replace
177	[BUG]  [BUGGY]  [FE]  IllegalArgumentException  [FE]      ArrayIndexOutOfBoundsException    [CONTEXT]    @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =     "null   ";  }  else  {    [BUGGY]  if(stackSize  ==  0)  {  popStack();  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]    pathNames[stackSize  -  1]  =     "null   ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	261	261	2	add	if(stackSize  ==  0)  {  popStack();  }  else  {  throw  new  IllegalArgumentException( " ");  }	  if(stackSize    >    0)    {    popStack();    }    else    {    throw    new    IllegalArgumentException(   "   ");    }    	compilable	  [FE]  IllegalArgumentException  	2	2	replace
178	[BUG]  [BUGGY]  if(stackSize  ==  0)  {  popStack();  }  else  {  throw  new  IllegalArgumentException( " ");  }  [FE]  IllegalArgumentException  [FE]      ArrayIndexOutOfBoundsException    [CONTEXT]    @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =     "null   ";  }  else  {    [BUGGY]  if(stackSize  ==  0)  {  popStack();  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]    pathNames[stackSize  -  1]  =     "null   ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	261	261	2	replace	if(stackSize  ==  0)  {  popStack();  }  else  {  throw  new  IllegalArgumentException( " ");  }	  if(stackSize    >    0)    {    popStack();    }    else    {    throw    new    IllegalArgumentException(   "   ");    }    	compilable	  [FE]  IllegalArgumentException  	2	2	replace
179	[BUG]  [BUGGY]  [FE]  ArrayIndexOutOfBoundsException  [FE]        ArrayIndexOutOfBoundsException    [CONTEXT]    @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =     "null   ";  }  else  {    [BUGGY]  if(stackSize  >=  0)  {  popStack();  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]    pathNames[stackSize  -  1]  =     "null   ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	261	261	2	add	if(stackSize  >=  0)  {  popStack();  }  else  {  throw  new  IllegalArgumentException( " ");  }	  if(stackSize    >    0)    {    popStack();    }    else    {    throw    new    IllegalArgumentException(   "   ");    }    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	2	2	replace
180	[BUG]  [BUGGY]  if(stackSize  >=  0)  {  popStack();  }  else  {  throw  new  IllegalArgumentException( " ");  }  [FE]  ArrayIndexOutOfBoundsException  [FE]        ArrayIndexOutOfBoundsException    [CONTEXT]    @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =     "null   ";  }  else  {    [BUGGY]  if(stackSize  >=  0)  {  popStack();  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]    pathNames[stackSize  -  1]  =     "null   ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	261	261	2	replace	if(stackSize  >=  0)  {  popStack();  }  else  {  throw  new  IllegalArgumentException( " ");  }	  if(stackSize    >    0)    {    popStack();    }    else    {    throw    new    IllegalArgumentException(   "   ");    }    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	2	2	replace
181	[BUG]  [BUGGY]  if(stackSize  >  0)  {  stack();  }  else  {  throw  new  IllegalArgumentException( " ");  }  [CE]  cannot  find  symbol  [FE]          ArrayIndexOutOfBoundsException    [CONTEXT]    @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =     "null   ";  }  else  {    [BUGGY]  if(stackSize  >  0)  {  stack();  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]    pathNames[stackSize  -  1]  =     "null   ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	261	261	2	replace	if(stackSize  >  0)  {  stack();  }  else  {  throw  new  IllegalArgumentException( " ");  }	  if(stackSize    >    0)    {    popStack();    }    else    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  cannot  find  symbol	2	None	replace
182	[BUG]  [BUGGY]  connectToPossibleExceptionHandler(JsonToken.VALUE_EMBEDDED_OBJECT);  [CE]  cannot  find  symbol  VALUE_EMBEDDED_OBJECT  [FE]        ArrayIndexOutOfBoundsException    [CONTEXT]    @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =     "null   ";  }  else  {    [BUGGY]  connectToPossibleExceptionHandler(JsonToken.VALUE_EMBEDDED_OBJECT);  [BUGGY]    pathNames[stackSize  -  1]  =     "null   ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	261	261	2	replace	connectToPossibleExceptionHandler(JsonToken.VALUE_EMBEDDED_OBJECT);	  connectToPossibleExceptionHandler();    	non-compiled	[CE]  cannot  find  symbol  VALUE_EMBEDDED_OBJECT	11	None	replace
183	[BUG]  [BUGGY]  connectToPossibleExceptionHandler(jsonToken);  [CE]  cannot  find  symbol  jsonToken  [FE]          ArrayIndexOutOfBoundsException    [CONTEXT]    @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =     "null   ";  }  else  {    [BUGGY]  connectToPossibleExceptionHandler(jsonToken);  [BUGGY]    pathNames[stackSize  -  1]  =     "null   ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	261	261	2	replace	connectToPossibleExceptionHandler(jsonToken);	  connectToPossibleExceptionHandler();    	non-compiled	[CE]  cannot  find  symbol  jsonToken	11	None	replace
184	[BUG]  [BUGGY]  connectToPossibleExceptionHandler(this.nextInternal());  [CE]  cannot  find  symbol  [FE]              ArrayIndexOutOfBoundsException    [CONTEXT]    @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =     "null   ";  }  else  {    [BUGGY]  connectToPossibleExceptionHandler(this.nextInternal());  [BUGGY]    pathNames[stackSize  -  1]  =     "null   ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	261	261	2	replace	connectToPossibleExceptionHandler(this.nextInternal());	  connectToPossibleExceptionHandler(throwInternal());    	non-compiled	[CE]  cannot  find  symbol	14	None	replace
185	[BUG]  [BUGGY]  connectToPossibleExceptionHandler(nextIndice());  [CE]  cannot  find  symbol  [FE]                ArrayIndexOutOfBoundsException    [CONTEXT]    @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =     "null   ";  }  else  {    [BUGGY]  connectToPossibleExceptionHandler(nextIndice());  [BUGGY]    pathNames[stackSize  -  1]  =     "null   ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	261	261	2	replace	connectToPossibleExceptionHandler(nextIndice());	  connectToPossibleExceptionHandler(throwInternal());    	non-compiled	[CE]  cannot  find  symbol	14	None	replace
186	[BUG]  [BUGGY]  connectToPossibleExceptionHandler(throwInternal(),  JsonToken.VALUE_EMBEDDED);  [CE]  cannot  find  symbol  [FE]                  ArrayIndexOutOfBoundsException    [CONTEXT]    @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =     "null   ";  }  else  {    [BUGGY]  connectToPossibleExceptionHandler(throwInternal(),  JsonToken.VALUE_EMBEDDED);  [BUGGY]    pathNames[stackSize  -  1]  =     "null   ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	261	261	2	replace	connectToPossibleExceptionHandler(throwInternal(),  JsonToken.VALUE_EMBEDDED);	  connectToPossibleExceptionHandler(throwInternal());    	non-compiled	[CE]  cannot  find  symbol	14	None	replace
187	[BUG]  [BUGGY]  connectToPossibleExceptionHandler(null,  null,  pathIndices);  [CE]  cannot  find  symbol  [FE]                    ArrayIndexOutOfBoundsException    [CONTEXT]    @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =     "null   ";  }  else  {    [BUGGY]  connectToPossibleExceptionHandler(null,  null,  pathIndices);  [BUGGY]    pathNames[stackSize  -  1]  =     "null   ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	261	261	2	replace	connectToPossibleExceptionHandler(null,  null,  pathIndices);	  connectToPossibleExceptionHandler(null,    null);    	non-compiled	[CE]  cannot  find  symbol	17	None	replace
188	[BUG]  [BUGGY]  JsonToken.VALUE_NULL  =  new  JsonToken(JsonToken.FIELD_NAME);  pathNames[stackSize  -  1]  =  null;  [CE]  cannot  find  symbol  VALUE_NULL  [FE]            ArrayIndexOutOfBoundsException    [CONTEXT]    @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =     "null   ";  }  else  {    [BUGGY]  JsonToken.VALUE_NULL  =  new  JsonToken(JsonToken.FIELD_NAME);  pathNames[stackSize  -  1]  =  null;  [BUGGY]    pathNames[stackSize  -  1]  =     "null   ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	261	261	2	replace	JsonToken.VALUE_NULL  =  new  JsonToken(JsonToken.FIELD_NAME);  pathNames[stackSize  -  1]  =  null;	  if(stackSize    >    0)    {    popStack();    }    else    {    JsonToken.VALUE_NULL    =    new    JsonToken(JsonToken.FIELD_NAME);    pathNames[stackSize    -    1]    =    null;    }    	non-compiled	[CE]  cannot  find  symbol  VALUE_NULL	4	None	replace
189	[BUG]  [BUGGY]  if(stackSize  >  0)  {  nextName();  }  else  {  JsonToken.VALUE_NULL  =  new  JsonToken(JsonToken.FIELD_NAME);  pathNames[stackSize  -  1]  =  null;  }  [CE]  cannot  find  symbol  VALUE_NULL  [FE]              ArrayIndexOutOfBoundsException    [CONTEXT]    @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =     "null   ";  }  else  {    [BUGGY]  if(stackSize  >  0)  {  nextName();  }  else  {  JsonToken.VALUE_NULL  =  new  JsonToken(JsonToken.FIELD_NAME);  pathNames[stackSize  -  1]  =  null;  }  [BUGGY]    pathNames[stackSize  -  1]  =     "null   ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	261	261	2	replace	if(stackSize  >  0)  {  nextName();  }  else  {  JsonToken.VALUE_NULL  =  new  JsonToken(JsonToken.FIELD_NAME);  pathNames[stackSize  -  1]  =  null;  }	  if(stackSize    >    0)    {    popStack();    }    else    {    JsonToken.VALUE_NULL    =    new    JsonToken(JsonToken.FIELD_NAME);    pathNames[stackSize    -    1]    =    null;    }    	non-compiled	[CE]  cannot  find  symbol  VALUE_NULL	4	None	replace
190	[BUG]  [BUGGY]  [FE]  IllegalStateException  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]    @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =     "null   ";  }  else  {    [BUGGY]  if(stackSize  >  0)  {  nextName();  }  [BUGGY]    pathNames[stackSize  -  1]  =     "null   ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	261	261	2	add	if(stackSize  >  0)  {  nextName();  }	  if(stackSize    >    0)    {    popStack();    }    	compilable	  [FE]  IllegalStateException  	24	2	replace
191	[BUG]  [BUGGY]  if(stackSize  >  0)  {  nextName();  }  [FE]  IllegalStateException  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]    @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =     "null   ";  }  else  {    [BUGGY]  if(stackSize  >  0)  {  nextName();  }  [BUGGY]    pathNames[stackSize  -  1]  =     "null   ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	261	261	2	replace	if(stackSize  >  0)  {  nextName();  }	  if(stackSize    >    0)    {    popStack();    }    	compilable	  [FE]  IllegalStateException  	24	2	replace
192	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      ArrayIndexOutOfBoundsException    [CONTEXT]    @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =     "null   ";  }  else  {    [BUGGY]  if(stackSize  >  1)  {  popStack();  }  [BUGGY]    pathNames[stackSize  -  1]  =     "null   ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	261	261	2	add	if(stackSize  >  1)  {  popStack();  }	  if(stackSize    >    0)    {    popStack();    }    	compilable	  [FE]  AssertionFailedError  	24	2	replace
193	[BUG]  [BUGGY]  if(stackSize  >  1)  {  popStack();  }  [FE]  AssertionFailedError  [FE]      ArrayIndexOutOfBoundsException    [CONTEXT]    @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =     "null   ";  }  else  {    [BUGGY]  if(stackSize  >  1)  {  popStack();  }  [BUGGY]    pathNames[stackSize  -  1]  =     "null   ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	261	261	2	replace	if(stackSize  >  1)  {  popStack();  }	  if(stackSize    >    0)    {    popStack();    }    	compilable	  [FE]  AssertionFailedError  	24	2	replace
194	[BUG]  [BUGGY]  if(stackSize  >  0)  {  nextIndex();  }  [CE]  cannot  find  symbol  [FE]        ArrayIndexOutOfBoundsException    [CONTEXT]    @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =     "null   ";  }  else  {    [BUGGY]  if(stackSize  >  0)  {  nextIndex();  }  [BUGGY]    pathNames[stackSize  -  1]  =     "null   ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	261	261	2	replace	if(stackSize  >  0)  {  nextIndex();  }	  if(stackSize    >    0)    {    popStack();    }    	non-compiled	[CE]  cannot  find  symbol	24	None	replace
195	[BUG]  [BUGGY]  if(stackSize  >  0)  {  nextValue();  }  [CE]  cannot  find  symbol  [FE]          ArrayIndexOutOfBoundsException    [CONTEXT]    @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =     "null   ";  }  else  {    [BUGGY]  if(stackSize  >  0)  {  nextValue();  }  [BUGGY]    pathNames[stackSize  -  1]  =     "null   ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	261	261	2	replace	if(stackSize  >  0)  {  nextValue();  }	  if(stackSize    >    0)    {    popStack();    }    	non-compiled	[CE]  cannot  find  symbol	24	None	replace
196	[BUG]  [BUGGY]  [FE]  ArrayIndexOutOfBoundsException  [FE]            ArrayIndexOutOfBoundsException    [CONTEXT]    @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =     "null   ";  }  else  {    [BUGGY]  if(stackSize  >=  0)  {  popStack();  }  [BUGGY]    pathNames[stackSize  -  1]  =     "null   ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	261	261	2	add	if(stackSize  >=  0)  {  popStack();  }	  if(stackSize    >    0)    {    popStack();    }    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	24	2	replace
197	[BUG]  [BUGGY]  if(stackSize  >=  0)  {  popStack();  }  [FE]  ArrayIndexOutOfBoundsException  [FE]            ArrayIndexOutOfBoundsException    [CONTEXT]    @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =     "null   ";  }  else  {    [BUGGY]  if(stackSize  >=  0)  {  popStack();  }  [BUGGY]    pathNames[stackSize  -  1]  =     "null   ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	261	261	2	replace	if(stackSize  >=  0)  {  popStack();  }	  if(stackSize    >    0)    {    popStack();    }    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	24	2	replace
198	[BUG]  [BUGGY]  _reportError( "Current  token( "+getClass().getName()  + ")not  null,  expecting  a  value. ");  [CE]  cannot  find  symbol  [FE]              ArrayIndexOutOfBoundsException    [CONTEXT]    @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =     "null   ";  }  else  {    [BUGGY]  _reportError( "Current  token( "+getClass().getName()  + ")not  null,  expecting  a  value. ");  [BUGGY]    pathNames[stackSize  -  1]  =     "null   ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	261	261	2	replace	_reportError( "Current  token( "+getClass().getName()  + ")not  null,  expecting  a  value. ");	  _reportError(   "Current    token(   "+getClass().getName()    +   ")not    null.   ");    	non-compiled	[CE]  cannot  find  symbol	21	None	replace
199	[BUG]  [BUGGY]  _reportError( "Current  token( "+getClass().getName()  + ")not  null,  cannot  be  null. ");  [CE]  cannot  find  symbol  [FE]                ArrayIndexOutOfBoundsException    [CONTEXT]    @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =     "null   ";  }  else  {    [BUGGY]  _reportError( "Current  token( "+getClass().getName()  + ")not  null,  cannot  be  null. ");  [BUGGY]    pathNames[stackSize  -  1]  =     "null   ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	261	261	2	replace	_reportError( "Current  token( "+getClass().getName()  + ")not  null,  cannot  be  null. ");	  _reportError(   "Current    token(   "+getClass().getName()    +   ")not    null.   ");    	non-compiled	[CE]  cannot  find  symbol	21	None	replace
200	[BUG]  [BUGGY]  _reportError( "Current  token( "+getClass().getName()  + ")not  null,  expecting  a  value ");  [CE]  cannot  find  symbol  [FE]                  ArrayIndexOutOfBoundsException    [CONTEXT]    @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =     "null   ";  }  else  {    [BUGGY]  _reportError( "Current  token( "+getClass().getName()  + ")not  null,  expecting  a  value ");  [BUGGY]    pathNames[stackSize  -  1]  =     "null   ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	261	261	2	replace	_reportError( "Current  token( "+getClass().getName()  + ")not  null,  expecting  a  value ");	  _reportError(   "Current    token(   "+getClass().getName()    +   ")not    null.   ");    	non-compiled	[CE]  cannot  find  symbol	21	None	replace
201	[BUG]  [BUGGY]  Validate.notNull(pathNames[stackSize  -  1]);  [CE]  cannot  find  symbol  Validate  [FE]                ArrayIndexOutOfBoundsException    [CONTEXT]    @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =     "null   ";  }  else  {    [BUGGY]  Validate.notNull(pathNames[stackSize  -  1]);  [BUGGY]    pathNames[stackSize  -  1]  =     "null   ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	261	261	2	replace	Validate.notNull(pathNames[stackSize  -  1]);	  validateValue();    	non-compiled	[CE]  cannot  find  symbol  Validate	15	None	replace
202	[BUG]  [BUGGY]  Validate.notNull(result);  [CE]  cannot  find  symbol  result  [FE]                  ArrayIndexOutOfBoundsException    [CONTEXT]    @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =     "null   ";  }  else  {    [BUGGY]  Validate.notNull(result);  [BUGGY]    pathNames[stackSize  -  1]  =     "null   ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	261	261	2	replace	Validate.notNull(result);	  validateValue();    	non-compiled	[CE]  cannot  find  symbol  result	15	None	replace
203	[BUG]  [BUGGY]  Validate.notNull(stackSize  -  1);  [CE]  cannot  find  symbol  Validate  [FE]                    ArrayIndexOutOfBoundsException    [CONTEXT]    @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =     "null   ";  }  else  {    [BUGGY]  Validate.notNull(stackSize  -  1);  [BUGGY]    pathNames[stackSize  -  1]  =     "null   ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	261	261	2	replace	Validate.notNull(stackSize  -  1);	  validateValue();    	non-compiled	[CE]  cannot  find  symbol  Validate	15	None	replace
204	[BUG]  [BUGGY]  _reportError( "Current  token( "+getClass().getName()  + ")not  a  value ",  stackSize);  [CE]  cannot  find  symbol  [FE]        ArrayIndexOutOfBoundsException    [CONTEXT]    @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =     "null   ";  }  else  {    [BUGGY]  _reportError( "Current  token( "+getClass().getName()  + ")not  a  value ",  stackSize);  [BUGGY]    pathNames[stackSize  -  1]  =     "null   ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	261	261	2	replace	_reportError( "Current  token( "+getClass().getName()  + ")not  a  value ",  stackSize);	  _reportError(   "Current    token(   "+getClass().getName()    +   ")not    a    value   ");    	non-compiled	[CE]  cannot  find  symbol	18	None	replace
205	[BUG]  [BUGGY]  _reportError( "Current  token( "+getMessage()  + ")not  a  value ",  JsonToken.END_ARRAY);  [CE]  cannot  find  symbol  [FE]            ArrayIndexOutOfBoundsException    [CONTEXT]    @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =     "null   ";  }  else  {    [BUGGY]  _reportError( "Current  token( "+getMessage()  + ")not  a  value ",  JsonToken.END_ARRAY);  [BUGGY]    pathNames[stackSize  -  1]  =     "null   ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	261	261	2	replace	_reportError( "Current  token( "+getMessage()  + ")not  a  value ",  JsonToken.END_ARRAY);	  _reportError(   "Current    token(   "+getMessage()    +   ")not    a    value   ");    	non-compiled	[CE]  cannot  find  symbol	20	None	replace
206	[BUG]  [BUGGY]  [FE]  ArrayIndexOutOfBoundsException  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]    @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =     "null   ";  }  else  {    [BUGGY]  if(stackSize  >  0)  {  popStack();  }  if(stackSize  <  0)  {  popStack();  }  [BUGGY]    pathNames[stackSize  -  1]  =     "null   ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	261	261	2	add	if(stackSize    >    0)    {    popStack();    }    if(stackSize  <  0)  {  popStack();  }	  	compilable	  [FE]  ArrayIndexOutOfBoundsException  	23	2	add
207	[BUG]  [BUGGY]  if(stackSize  >  0)  {  popStack();  }  if(stackSize  <  0)  {  popStack();  }  [FE]  ArrayIndexOutOfBoundsException  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]    @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =     "null   ";  }  else  {    [BUGGY]  if(stackSize  >  0)  {  popStack();  }  if(stackSize  <  0)  {  popStack();  }  [BUGGY]    pathNames[stackSize  -  1]  =     "null   ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	261	261	2	replace	if(stackSize    >    0)    {    popStack();    }    if(stackSize  <  0)  {  popStack();  }	  	compilable	  [FE]  ArrayIndexOutOfBoundsException  	23	2	add
208	[BUG]  [BUGGY]  if(stackSize  >  0)  {  popStack();  }  If(stackSize  >  0)  {  popStack();  }  [CE]  ';'  expected  [FE]      ArrayIndexOutOfBoundsException    [CONTEXT]    @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =     "null   ";  }  else  {    [BUGGY]  if(stackSize  >  0)  {  popStack();  }  If(stackSize  >  0)  {  popStack();  }  [BUGGY]    pathNames[stackSize  -  1]  =     "null   ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	261	261	2	replace	if(stackSize    >    0)    {    popStack();    }    If(stackSize  >  0)  {  popStack();  }	  	non-compiled	[CE]  ';'  expected	23	None	add
209	[BUG]  [BUGGY]  if(stackSize  >  0)  {  popStack();  }  if(stackSsize  >  0)  {  popStack();  }  [CE]  cannot  find  symbol  stackSsize  [FE]        ArrayIndexOutOfBoundsException    [CONTEXT]    @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =     "null   ";  }  else  {    [BUGGY]  if(stackSize  >  0)  {  popStack();  }  if(stackSsize  >  0)  {  popStack();  }  [BUGGY]    pathNames[stackSize  -  1]  =     "null   ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	261	261	2	replace	if(stackSize    >    0)    {    popStack();    }    if(stackSsize  >  0)  {  popStack();  }	  	non-compiled	[CE]  cannot  find  symbol  stackSsize	23	None	add
210	[BUG]  [BUGGY]  if(stackSize  >  0)  {  popStack();  }  if(stackSize  >  0)  {  popStack();  [CE]  ';'  expected  [FE]          ArrayIndexOutOfBoundsException    [CONTEXT]    @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =     "null   ";  }  else  {    [BUGGY]  if(stackSize  >  0)  {  popStack();  }  if(stackSize  >  0)  {  popStack();  [BUGGY]    pathNames[stackSize  -  1]  =     "null   ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	261	261	2	replace	if(stackSize    >    0)    {    popStack();    }    if(stackSize  >  0)  {  popStack();	  	non-compiled	[CE]  ';'  expected	23	None	add
211	[BUG]  [BUGGY]  [FE]  ArrayIndexOutOfBoundsException  [FE]            ArrayIndexOutOfBoundsException    [CONTEXT]    @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =     "null   ";  }  else  {    [BUGGY]  if(stackSize  >  0)  {  popStack();  }  if(stackSize  >  0)  {  popStack();  return;  }  [BUGGY]    pathNames[stackSize  -  1]  =     "null   ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	261	261	2	add	if(stackSize    >    0)    {    popStack();    }    if(stackSize  >  0)  {  popStack();  return;  }	  	compilable	  [FE]  ArrayIndexOutOfBoundsException  	23	2	add
212	[BUG]  [BUGGY]  if(stackSize  >  0)  {  popStack();  }  if(stackSize  >  0)  {  popStack();  return;  }  [FE]  ArrayIndexOutOfBoundsException  [FE]            ArrayIndexOutOfBoundsException    [CONTEXT]    @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =     "null   ";  }  else  {    [BUGGY]  if(stackSize  >  0)  {  popStack();  }  if(stackSize  >  0)  {  popStack();  return;  }  [BUGGY]    pathNames[stackSize  -  1]  =     "null   ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	261	261	2	replace	if(stackSize    >    0)    {    popStack();    }    if(stackSize  >  0)  {  popStack();  return;  }	  	compilable	  [FE]  ArrayIndexOutOfBoundsException  	23	2	add
213	[BUG]  [BUGGY]  JsonToken.START_OBJECT  =  _getCurrentToken();  [CE]  cannot  find  symbol  START_OBJECT  [FE]          ArrayIndexOutOfBoundsException    [CONTEXT]    @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =     "null   ";  }  else  {    [BUGGY]  JsonToken.START_OBJECT  =  _getCurrentToken();  [BUGGY]    pathNames[stackSize  -  1]  =     "null   ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	261	261	2	replace	JsonToken.START_OBJECT  =  _getCurrentToken();	  _reportUnsupportedOperation();    	non-compiled	[CE]  cannot  find  symbol  START_OBJECT	12	None	replace
214	[BUG]  [BUGGY]  JsonToken.START_OBJECT  =  _reportUnsupportedOperation();  [CE]  cannot  find  symbol  START_OBJECT  [FE]            ArrayIndexOutOfBoundsException    [CONTEXT]    @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =     "null   ";  }  else  {    [BUGGY]  JsonToken.START_OBJECT  =  _reportUnsupportedOperation();  [BUGGY]    pathNames[stackSize  -  1]  =     "null   ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	261	261	2	replace	JsonToken.START_OBJECT  =  _reportUnsupportedOperation();	  _reportUnsupportedOperation();    	non-compiled	[CE]  cannot  find  symbol  START_OBJECT	12	None	replace
215	[BUG]  [BUGGY]  connectToPeek(JsonToken.VALUE_NUMBER_INT,  JsonToken.VALUE_NUMBER_FLOAT);  [CE]  cannot  find  symbol  VALUE_NUMBER_INT  [FE]                  ArrayIndexOutOfBoundsException    [CONTEXT]    @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =     "null   ";  }  else  {    [BUGGY]  connectToPeek(JsonToken.VALUE_NUMBER_INT,  JsonToken.VALUE_NUMBER_FLOAT);  [BUGGY]    pathNames[stackSize  -  1]  =     "null   ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	261	261	2	replace	connectToPeek(JsonToken.VALUE_NUMBER_INT,  JsonToken.VALUE_NUMBER_FLOAT);	  connectToPeek();    	non-compiled	[CE]  cannot  find  symbol  VALUE_NUMBER_INT	16	None	replace
216	[BUG]  [BUGGY]  connectToPeek(JsonToken.VALUE_NUMBER_INT,  JsonToken.VALUE_NUMBER_INT);  [CE]  cannot  find  symbol  VALUE_NUMBER_INT  [FE]                    ArrayIndexOutOfBoundsException    [CONTEXT]    @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =     "null   ";  }  else  {    [BUGGY]  connectToPeek(JsonToken.VALUE_NUMBER_INT,  JsonToken.VALUE_NUMBER_INT);  [BUGGY]    pathNames[stackSize  -  1]  =     "null   ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	261	261	2	replace	connectToPeek(JsonToken.VALUE_NUMBER_INT,  JsonToken.VALUE_NUMBER_INT);	  connectToPeek();    	non-compiled	[CE]  cannot  find  symbol  VALUE_NUMBER_INT	16	None	replace
217	[BUG]  [BUGGY]  connectToPeek(JsonToken.VALUE_NUMBER_INT,  JsonToken.VALUE_NUMBER_FOR);  [CE]  cannot  find  symbol  VALUE_NUMBER_INT  [FE]                      ArrayIndexOutOfBoundsException    [CONTEXT]    @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =     "null   ";  }  else  {    [BUGGY]  connectToPeek(JsonToken.VALUE_NUMBER_INT,  JsonToken.VALUE_NUMBER_FOR);  [BUGGY]    pathNames[stackSize  -  1]  =     "null   ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	261	261	2	replace	connectToPeek(JsonToken.VALUE_NUMBER_INT,  JsonToken.VALUE_NUMBER_FOR);	  connectToPeek();    	non-compiled	[CE]  cannot  find  symbol  VALUE_NUMBER_INT	16	None	replace
218	[BUG]  [BUGGY]  connectToPeek(JsonToken.VALUE_NUMBER_INT,  JsonToken.VALUE_NUMBER_ERROR);  [CE]  cannot  find  symbol  VALUE_NUMBER_INT  [FE]                        ArrayIndexOutOfBoundsException    [CONTEXT]    @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =     "null   ";  }  else  {    [BUGGY]  connectToPeek(JsonToken.VALUE_NUMBER_INT,  JsonToken.VALUE_NUMBER_ERROR);  [BUGGY]    pathNames[stackSize  -  1]  =     "null   ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	261	261	2	replace	connectToPeek(JsonToken.VALUE_NUMBER_INT,  JsonToken.VALUE_NUMBER_ERROR);	  connectToPeek();    	non-compiled	[CE]  cannot  find  symbol  VALUE_NUMBER_INT	16	None	replace
219	[BUG]  [BUGGY]  connectToPeek(JsonToken.VALUE_NUMBER_INT,  JsonToken.VALUE_NUMBER_INT));  [CE]  ';'  expected  [FE]                          ArrayIndexOutOfBoundsException    [CONTEXT]    @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =     "null   ";  }  else  {    [BUGGY]  connectToPeek(JsonToken.VALUE_NUMBER_INT,  JsonToken.VALUE_NUMBER_INT));  [BUGGY]    pathNames[stackSize  -  1]  =     "null   ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	261	261	2	replace	connectToPeek(JsonToken.VALUE_NUMBER_INT,  JsonToken.VALUE_NUMBER_INT));	  connectToPeek();    	non-compiled	[CE]  ';'  expected	16	None	replace
220	[BUG]  [BUGGY]  _reportError( "Current  token( "+JsonToken.STRING+ ")not  a  value ");  [CE]  cannot  find  symbol  [FE]                ArrayIndexOutOfBoundsException    [CONTEXT]    @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =     "null   ";  }  else  {    [BUGGY]  _reportError( "Current  token( "+JsonToken.STRING+ ")not  a  value ");  [BUGGY]    pathNames[stackSize  -  1]  =     "null   ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	261	261	2	replace	_reportError( "Current  token( "+JsonToken.STRING+ ")not  a  value ");	  _reportError(   "Current    token(   "+JsonToken.VALUE_NULL+   ")not    a    value   ");    	non-compiled	[CE]  cannot  find  symbol	22	None	replace
221	[BUG]  [BUGGY]  pathNames[stackSize  -  1]  =  null   ";  [CE]  unclosed  string  literal  [FE]                  ArrayIndexOutOfBoundsException    [CONTEXT]    @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =     "null   ";  }  else  {    [BUGGY]  pathNames[stackSize  -  1]  =  null   ";  [BUGGY]    pathNames[stackSize  -  1]  =     "null   ";  }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	261	261	2	replace	pathNames[stackSize  -  1]  =  null   ";	  if(stackSize    >    0)    {    popStack();    }    else    {    JsonToken.START_OBJECT    =    null;    nextName();    pathNames[stackSize    -    1]    =       "null   ";    }    	non-compiled	[CE]  unclosed  string  literal	7	None	replace
