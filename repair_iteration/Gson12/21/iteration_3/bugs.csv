bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  ||  stackSize  >  0)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  expression  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {  popStack();      [BUGGY]  ||  stackSize  >  0)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	262	262	2	replace	||  stackSize  >  0)  {  throw  new  IllegalArgumentException( " ");  }	  if(stackSize    >    0)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	16	None	replace
2	[BUG]  [BUGGY]  ||(stackSize  >  0  &&  stack[stackSize  -  1]!=  JsonToken.VALUE_NULL))  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  expression  [FE]      ArrayIndexOutOfBoundsException    [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {  popStack();      [BUGGY]  ||(stackSize  >  0  &&  stack[stackSize  -  1]!=  JsonToken.VALUE_NULL))  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	262	262	2	replace	||(stackSize  >  0  &&  stack[stackSize  -  1]!=  JsonToken.VALUE_NULL))  {  throw  new  IllegalArgumentException( " ");  }	  if(stackSize    >    0)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	16	None	replace
3	[BUG]  [BUGGY]  ||(stackSize  >  0  &&  stackNames[stackSize  -  1]!=  null))  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  expression  [FE]        ArrayIndexOutOfBoundsException    [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {  popStack();      [BUGGY]  ||(stackSize  >  0  &&  stackNames[stackSize  -  1]!=  null))  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	262	262	2	replace	||(stackSize  >  0  &&  stackNames[stackSize  -  1]!=  null))  {  throw  new  IllegalArgumentException( " ");  }	  if(stackSize    >    0)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	16	None	replace
4	[BUG]  [BUGGY]  ||(stackSize  >  0  &&  stackNames[stackSize  -  1]!=  JsonToken.VALUE_NULL))  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  expression  [FE]          ArrayIndexOutOfBoundsException    [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {  popStack();      [BUGGY]  ||(stackSize  >  0  &&  stackNames[stackSize  -  1]!=  JsonToken.VALUE_NULL))  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	262	262	2	replace	||(stackSize  >  0  &&  stackNames[stackSize  -  1]!=  JsonToken.VALUE_NULL))  {  throw  new  IllegalArgumentException( " ");  }	  if(stackSize    >    0)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	16	None	replace
5	[BUG]  [BUGGY]  ||(stackSize  >  0  &&  stack.length  >  0)||(stackSize  <  pathNames.length))  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  expression  [FE]            ArrayIndexOutOfBoundsException    [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {  popStack();      [BUGGY]  ||(stackSize  >  0  &&  stack.length  >  0)||(stackSize  <  pathNames.length))  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	262	262	2	replace	||(stackSize  >  0  &&  stack.length  >  0)||(stackSize  <  pathNames.length))  {  throw  new  IllegalArgumentException( " ");  }	  if(stackSize    >    0)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	16	None	replace
6	[BUG]  [BUGGY]  ||(stackSize  >  0  &&  stackNames[stackSize  -  1]  ==  null))  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  expression  [FE]              ArrayIndexOutOfBoundsException    [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {  popStack();      [BUGGY]  ||(stackSize  >  0  &&  stackNames[stackSize  -  1]  ==  null))  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	262	262	2	replace	||(stackSize  >  0  &&  stackNames[stackSize  -  1]  ==  null))  {  throw  new  IllegalArgumentException( " ");  }	  if(stackSize    >    0)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	16	None	replace
7	[BUG]  [BUGGY]  ||(stackSize  >  0  &&  stack[stackSize  -  1]!=  null))  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  expression  [FE]                ArrayIndexOutOfBoundsException    [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {  popStack();      [BUGGY]  ||(stackSize  >  0  &&  stack[stackSize  -  1]!=  null))  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	262	262	2	replace	||(stackSize  >  0  &&  stack[stackSize  -  1]!=  null))  {  throw  new  IllegalArgumentException( " ");  }	  if(stackSize    >    0)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	16	None	replace
8	[BUG]  [BUGGY]  pathIndices[stackSize  -  1]  =  null;  PathIndexOutOfBoundsException.printStackTrace(pathNames);  pathNames[stackSize  -  1]  =  null;  [CE]  incompatible  types  [FE]                  ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {  popStack();      [BUGGY]  pathIndices[stackSize  -  1]  =  null;  PathIndexOutOfBoundsException.printStackTrace(pathNames);  pathNames[stackSize  -  1]  =  null;  [BUGGY]      }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	262	262	2	replace	pathIndices[stackSize  -  1]  =  null;  PathIndexOutOfBoundsException.printStackTrace(pathNames);  pathNames[stackSize  -  1]  =  null;	  pathNames[stackSize    -    1]    =    null;    PathIndexOutOfBoundsException.printStackTrace(pathNames);    pathNames[stackSize    -    1]    =    null;    	non-compiled	[CE]  incompatible  types	32	None	replace
9	[BUG]  [BUGGY]  PathIndexOutOfBoundsException.printStackTrace(pathNames);  pathNames[stackSize  -  1]  =  null;  [CE]  cannot  find  symbol  PathIndexOutOfBoundsException  [FE]                    ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {  popStack();      [BUGGY]  PathIndexOutOfBoundsException.printStackTrace(pathNames);  pathNames[stackSize  -  1]  =  null;  [BUGGY]      }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	262	262	2	replace	PathIndexOutOfBoundsException.printStackTrace(pathNames);  pathNames[stackSize  -  1]  =  null;	  pathNames[stackSize    -    1]    =    null;    PathIndexOutOfBoundsException.printStackTrace(pathNames);    pathNames[stackSize    -    1]    =    null;    	non-compiled	[CE]  cannot  find  symbol  PathIndexOutOfBoundsException	32	None	replace
10	[BUG]  [BUGGY]  pathIndexOutOfBoundsException.printStackTrace(pathNames);  pathNames[stackSize  -  1]  =  null;  [CE]  cannot  find  symbol  pathIndexOutOfBoundsException  [FE]                      ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {  popStack();      [BUGGY]  pathIndexOutOfBoundsException.printStackTrace(pathNames);  pathNames[stackSize  -  1]  =  null;  [BUGGY]      }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	262	262	2	replace	pathIndexOutOfBoundsException.printStackTrace(pathNames);  pathNames[stackSize  -  1]  =  null;	  pathNames[stackSize    -    1]    =    null;    PathIndexOutOfBoundsException.printStackTrace(pathNames);    pathNames[stackSize    -    1]    =    null;    	non-compiled	[CE]  cannot  find  symbol  pathIndexOutOfBoundsException	32	None	replace
11	[BUG]  [BUGGY]  [FE]  ArrayIndexOutOfBoundsException  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {  popStack();      [BUGGY]          if(stackSize  >  0)  {  pathNames[stackSize  -  1]  =  null;  }  else  {  skipValue();  }  if(stackSize  >  0)  {  pathNames[stackSize  -  1]  =  null;  }  else  {  skipValue();  }  [BUGGY]      }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	262	262	2	add	                if(stackSize    >    0)    {    pathNames[stackSize    -    1]    =    null;    }    else    {    skipValue();    }    if(stackSize  >  0)  {  pathNames[stackSize  -  1]  =  null;  }  else  {  skipValue();  }	  	compilable	  [FE]  ArrayIndexOutOfBoundsException  	34	2	add
12	[BUG]  [BUGGY]          if(stackSize  >  0)  {  pathNames[stackSize  -  1]  =  null;  }  else  {  skipValue();  }  if(stackSize  >  0)  {  pathNames[stackSize  -  1]  =  null;  }  else  {  skipValue();  }  [FE]  ArrayIndexOutOfBoundsException  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {  popStack();      [BUGGY]          if(stackSize  >  0)  {  pathNames[stackSize  -  1]  =  null;  }  else  {  skipValue();  }  if(stackSize  >  0)  {  pathNames[stackSize  -  1]  =  null;  }  else  {  skipValue();  }  [BUGGY]      }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	262	262	2	replace	                if(stackSize    >    0)    {    pathNames[stackSize    -    1]    =    null;    }    else    {    skipValue();    }    if(stackSize  >  0)  {  pathNames[stackSize  -  1]  =  null;  }  else  {  skipValue();  }	  	compilable	  [FE]  ArrayIndexOutOfBoundsException  	34	2	add
13	[BUG]  [BUGGY]  [FE]  ArrayIndexOutOfBoundsException  [FE]      ArrayIndexOutOfBoundsException    [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {  popStack();      [BUGGY]          if(stackSize  >  0)  {  pathNames[stackSize  -  1]  =  null;  }  else  {  skipValue();  }  if(stackSize  >  0)  {  pathNames[stackSize  +  1]  =  null;  }  else  {  skipValue();  }  [BUGGY]      }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	262	262	2	add	                if(stackSize    >    0)    {    pathNames[stackSize    -    1]    =    null;    }    else    {    skipValue();    }    if(stackSize  >  0)  {  pathNames[stackSize  +  1]  =  null;  }  else  {  skipValue();  }	  	compilable	  [FE]  ArrayIndexOutOfBoundsException  	34	2	add
14	[BUG]  [BUGGY]          if(stackSize  >  0)  {  pathNames[stackSize  -  1]  =  null;  }  else  {  skipValue();  }  if(stackSize  >  0)  {  pathNames[stackSize  +  1]  =  null;  }  else  {  skipValue();  }  [FE]  ArrayIndexOutOfBoundsException  [FE]      ArrayIndexOutOfBoundsException    [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {  popStack();      [BUGGY]          if(stackSize  >  0)  {  pathNames[stackSize  -  1]  =  null;  }  else  {  skipValue();  }  if(stackSize  >  0)  {  pathNames[stackSize  +  1]  =  null;  }  else  {  skipValue();  }  [BUGGY]      }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	262	262	2	replace	                if(stackSize    >    0)    {    pathNames[stackSize    -    1]    =    null;    }    else    {    skipValue();    }    if(stackSize  >  0)  {  pathNames[stackSize  +  1]  =  null;  }  else  {  skipValue();  }	  	compilable	  [FE]  ArrayIndexOutOfBoundsException  	34	2	add
15	[BUG]  [BUGGY]          if(stackSize  >  0)  {  pathNames[stackSize  -  1]  =  null;  }  else  {  skipValue();  }  if(stackSize  >  0)  {  pathNames[stackSize  -  1]  =  null;  }  else  skipValue();  }  [CE]  ']'  expected  [FE]        ArrayIndexOutOfBoundsException    [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {  popStack();      [BUGGY]          if(stackSize  >  0)  {  pathNames[stackSize  -  1]  =  null;  }  else  {  skipValue();  }  if(stackSize  >  0)  {  pathNames[stackSize  -  1]  =  null;  }  else  skipValue();  }  [BUGGY]      }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	262	262	2	replace	                if(stackSize    >    0)    {    pathNames[stackSize    -    1]    =    null;    }    else    {    skipValue();    }    if(stackSize  >  0)  {  pathNames[stackSize  -  1]  =  null;  }  else  skipValue();  }	  	non-compiled	[CE]  ']'  expected	34	None	add
16	[BUG]  [BUGGY]  [FE]  ArrayIndexOutOfBoundsException  [FE]          ArrayIndexOutOfBoundsException    [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {  popStack();      [BUGGY]          if(stackSize  >  0)  {  pathNames[stackSize  -  1]  =  null;  }  else  {  skipValue();  }  if(stackSize  >  0)  {  pathNames[stackSize  -  2]  =  null;  }  else  {  skipValue();  }  [BUGGY]      }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	262	262	2	add	                if(stackSize    >    0)    {    pathNames[stackSize    -    1]    =    null;    }    else    {    skipValue();    }    if(stackSize  >  0)  {  pathNames[stackSize  -  2]  =  null;  }  else  {  skipValue();  }	  	compilable	  [FE]  ArrayIndexOutOfBoundsException  	34	2	add
17	[BUG]  [BUGGY]          if(stackSize  >  0)  {  pathNames[stackSize  -  1]  =  null;  }  else  {  skipValue();  }  if(stackSize  >  0)  {  pathNames[stackSize  -  2]  =  null;  }  else  {  skipValue();  }  [FE]  ArrayIndexOutOfBoundsException  [FE]          ArrayIndexOutOfBoundsException    [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {  popStack();      [BUGGY]          if(stackSize  >  0)  {  pathNames[stackSize  -  1]  =  null;  }  else  {  skipValue();  }  if(stackSize  >  0)  {  pathNames[stackSize  -  2]  =  null;  }  else  {  skipValue();  }  [BUGGY]      }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	262	262	2	replace	                if(stackSize    >    0)    {    pathNames[stackSize    -    1]    =    null;    }    else    {    skipValue();    }    if(stackSize  >  0)  {  pathNames[stackSize  -  2]  =  null;  }  else  {  skipValue();  }	  	compilable	  [FE]  ArrayIndexOutOfBoundsException  	34	2	add
18	[BUG]  [BUGGY]          if(stackSize  >  0)  {  pathNames[stackSize  -  1]  =  null;  }  else  {  skipValue();  }  if(stackSize  >  0)  {  pathNames[stackSize  -  1].  =  null;  }  else  {  skipValue();  }  [CE]  <identifier>  expected  [FE]            ArrayIndexOutOfBoundsException    [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {  popStack();      [BUGGY]          if(stackSize  >  0)  {  pathNames[stackSize  -  1]  =  null;  }  else  {  skipValue();  }  if(stackSize  >  0)  {  pathNames[stackSize  -  1].  =  null;  }  else  {  skipValue();  }  [BUGGY]      }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	262	262	2	replace	                if(stackSize    >    0)    {    pathNames[stackSize    -    1]    =    null;    }    else    {    skipValue();    }    if(stackSize  >  0)  {  pathNames[stackSize  -  1].  =  null;  }  else  {  skipValue();  }	  	non-compiled	[CE]  <identifier>  expected	34	None	add
19	[BUG]  [BUGGY]          if(stackSize  >  0)  {  pathNames[stackSize  -  1]  =  null;  }  else  {  skipValue();  }  If(stackSize  >  0)  {  pathNames[stackSize  -  1]  =  null;  }  else  {  skipValue();  }  [CE]  ';'  expected  [FE]              ArrayIndexOutOfBoundsException    [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {  popStack();      [BUGGY]          if(stackSize  >  0)  {  pathNames[stackSize  -  1]  =  null;  }  else  {  skipValue();  }  If(stackSize  >  0)  {  pathNames[stackSize  -  1]  =  null;  }  else  {  skipValue();  }  [BUGGY]      }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	262	262	2	replace	                if(stackSize    >    0)    {    pathNames[stackSize    -    1]    =    null;    }    else    {    skipValue();    }    If(stackSize  >  0)  {  pathNames[stackSize  -  1]  =  null;  }  else  {  skipValue();  }	  	non-compiled	[CE]  ';'  expected	34	None	add
20	[BUG]  [BUGGY]  pathIndices[stackSize  -  1]  =  null;  System.arraycopy(pathNames,  0,  pathNames,  0,  stackSize  -  1);  [CE]  incompatible  types  [FE]              ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {  popStack();      [BUGGY]  pathIndices[stackSize  -  1]  =  null;  System.arraycopy(pathNames,  0,  pathNames,  0,  stackSize  -  1);  [BUGGY]      }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	262	262	2	replace	pathIndices[stackSize  -  1]  =  null;  System.arraycopy(pathNames,  0,  pathNames,  0,  stackSize  -  1);	  if(stackSize    >    0)    {    pathIndices[stackSize    -    1]    =    null;    System.arraycopy(pathNames,    0,    pathNames,    0,    stackSize    -    1);    }    else    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  incompatible  types	48	None	replace
21	[BUG]  [BUGGY]  PathIndices[stackSize  -  1]  =  null;  System.arraycopy(pathNames,  0,  pathNames,  0,  stackSize  -  1);  [CE]  cannot  find  symbol  PathIndices  [FE]                ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {  popStack();      [BUGGY]  PathIndices[stackSize  -  1]  =  null;  System.arraycopy(pathNames,  0,  pathNames,  0,  stackSize  -  1);  [BUGGY]      }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	262	262	2	replace	PathIndices[stackSize  -  1]  =  null;  System.arraycopy(pathNames,  0,  pathNames,  0,  stackSize  -  1);	  if(stackSize    >    0)    {    pathIndices[stackSize    -    1]    =    null;    System.arraycopy(pathNames,    0,    pathNames,    0,    stackSize    -    1);    }    else    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  cannot  find  symbol  PathIndices	48	None	replace
22	[BUG]  [BUGGY]  PathIndices  pathIndices[stackSize  -  1]  =  null;  System.arraycopy(pathNames,  0,  pathNames,  0,  stackSize  -  1);  [CE]  ']'  expected  [FE]                  ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {  popStack();      [BUGGY]  PathIndices  pathIndices[stackSize  -  1]  =  null;  System.arraycopy(pathNames,  0,  pathNames,  0,  stackSize  -  1);  [BUGGY]      }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	262	262	2	replace	PathIndices  pathIndices[stackSize  -  1]  =  null;  System.arraycopy(pathNames,  0,  pathNames,  0,  stackSize  -  1);	  if(stackSize    >    0)    {    pathIndices[stackSize    -    1]    =    null;    System.arraycopy(pathNames,    0,    pathNames,    0,    stackSize    -    1);    }    else    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  ']'  expected	48	None	replace
23	[BUG]  [BUGGY]  Path  pathIndices[stackSize  -  1]  =  null;  System.arraycopy(pathNames,  0,  pathNames,  0,  stackSize  -  1);  [CE]  ']'  expected  [FE]                    ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {  popStack();      [BUGGY]  Path  pathIndices[stackSize  -  1]  =  null;  System.arraycopy(pathNames,  0,  pathNames,  0,  stackSize  -  1);  [BUGGY]      }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	262	262	2	replace	Path  pathIndices[stackSize  -  1]  =  null;  System.arraycopy(pathNames,  0,  pathNames,  0,  stackSize  -  1);	  if(stackSize    >    0)    {    pathIndices[stackSize    -    1]    =    null;    System.arraycopy(pathNames,    0,    pathNames,    0,    stackSize    -    1);    }    else    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  ']'  expected	48	None	replace
24	[BUG]  [BUGGY]  pathNames[stackSize  -  1]  =   "null ".;  [CE]  <identifier>  expected  [FE]            ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {  popStack();      [BUGGY]  pathNames[stackSize  -  1]  =   "null ".;  [BUGGY]      }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	262	262	2	replace	pathNames[stackSize  -  1]  =   "null ".;	  pathNames[stackSize    -    2]    =           "null       ";    pathNames[stackSize    -    2]    =       "null   ".;    	non-compiled	[CE]  <identifier>  expected	9	None	replace
25	[BUG]  [BUGGY]  [FE]  ArrayIndexOutOfBoundsException  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {  popStack();      [BUGGY]  pathNames[stackSize    -    1]    =    null;    if(stackSize  >  0)  {  pathNames[stackSize  -  1]  =  null;  }  else  {  popStack();  }  pathNames[stackSize  -  1]  =  null;  if(stackSize  >  0)  {  pathNames[stackSize  -  1]  =  null;  }  else  {  popStack();  }  [BUGGY]      }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	262	262	2	add	pathNames[stackSize        -        1]        =        null;        if(stackSize    >    0)    {    pathNames[stackSize    -    1]    =    null;    }    else    {    popStack();    }    pathNames[stackSize  -  1]  =  null;  if(stackSize  >  0)  {  pathNames[stackSize  -  1]  =  null;  }  else  {  popStack();  }	  	compilable	  [FE]  ArrayIndexOutOfBoundsException  	67	2	add
26	[BUG]  [BUGGY]  pathNames[stackSize    -    1]    =    null;    if(stackSize  >  0)  {  pathNames[stackSize  -  1]  =  null;  }  else  {  popStack();  }  pathNames[stackSize  -  1]  =  null;  if(stackSize  >  0)  {  pathNames[stackSize  -  1]  =  null;  }  else  {  popStack();  }  [FE]  ArrayIndexOutOfBoundsException  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {  popStack();      [BUGGY]  pathNames[stackSize    -    1]    =    null;    if(stackSize  >  0)  {  pathNames[stackSize  -  1]  =  null;  }  else  {  popStack();  }  pathNames[stackSize  -  1]  =  null;  if(stackSize  >  0)  {  pathNames[stackSize  -  1]  =  null;  }  else  {  popStack();  }  [BUGGY]      }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	262	262	2	replace	pathNames[stackSize        -        1]        =        null;        if(stackSize    >    0)    {    pathNames[stackSize    -    1]    =    null;    }    else    {    popStack();    }    pathNames[stackSize  -  1]  =  null;  if(stackSize  >  0)  {  pathNames[stackSize  -  1]  =  null;  }  else  {  popStack();  }	  	compilable	  [FE]  ArrayIndexOutOfBoundsException  	67	2	add
27	[BUG]  [BUGGY]  pathNames[stackSize    -    1]    =    null;    if(stackSize  >  0)  {  pathNames[stackSize  -  1]  =  null;  }  else  {  popStack();  }  if(stackSize  >  0)  {  pathNames[stackSize  -  1]  =  null;  if(stackSize  >  0)  {  pathNames[stackSize  -  1]  =  null;  }  else  {  popStack();  }  [CE]  ';'  expected  [FE]      ArrayIndexOutOfBoundsException    [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {  popStack();      [BUGGY]  pathNames[stackSize    -    1]    =    null;    if(stackSize  >  0)  {  pathNames[stackSize  -  1]  =  null;  }  else  {  popStack();  }  if(stackSize  >  0)  {  pathNames[stackSize  -  1]  =  null;  if(stackSize  >  0)  {  pathNames[stackSize  -  1]  =  null;  }  else  {  popStack();  }  [BUGGY]      }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	262	262	2	replace	pathNames[stackSize        -        1]        =        null;        if(stackSize    >    0)    {    pathNames[stackSize    -    1]    =    null;    }    else    {    popStack();    }    if(stackSize  >  0)  {  pathNames[stackSize  -  1]  =  null;  if(stackSize  >  0)  {  pathNames[stackSize  -  1]  =  null;  }  else  {  popStack();  }	  	non-compiled	[CE]  ';'  expected	67	None	add
28	[BUG]  [BUGGY]  [FE]  ArrayIndexOutOfBoundsException  [FE]        ArrayIndexOutOfBoundsException    [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {  popStack();      [BUGGY]  pathNames[stackSize    -    1]    =    null;    if(stackSize  >  0)  {  pathNames[stackSize  -  1]  =  null;  }  else  {  popStack();  }  if(stackSize  >  0)  {  pathNames[stackSize  -  1]  =  null;  if(stackSize  >  0)  {  pathNames[stackSize  -  1]  =  null;  }  else  {  popStack();  }  }  [BUGGY]      }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	262	262	2	add	pathNames[stackSize        -        1]        =        null;        if(stackSize    >    0)    {    pathNames[stackSize    -    1]    =    null;    }    else    {    popStack();    }    if(stackSize  >  0)  {  pathNames[stackSize  -  1]  =  null;  if(stackSize  >  0)  {  pathNames[stackSize  -  1]  =  null;  }  else  {  popStack();  }  }	  	compilable	  [FE]  ArrayIndexOutOfBoundsException  	67	2	add
29	[BUG]  [BUGGY]  pathNames[stackSize    -    1]    =    null;    if(stackSize  >  0)  {  pathNames[stackSize  -  1]  =  null;  }  else  {  popStack();  }  if(stackSize  >  0)  {  pathNames[stackSize  -  1]  =  null;  if(stackSize  >  0)  {  pathNames[stackSize  -  1]  =  null;  }  else  {  popStack();  }  }  [FE]  ArrayIndexOutOfBoundsException  [FE]        ArrayIndexOutOfBoundsException    [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {  popStack();      [BUGGY]  pathNames[stackSize    -    1]    =    null;    if(stackSize  >  0)  {  pathNames[stackSize  -  1]  =  null;  }  else  {  popStack();  }  if(stackSize  >  0)  {  pathNames[stackSize  -  1]  =  null;  if(stackSize  >  0)  {  pathNames[stackSize  -  1]  =  null;  }  else  {  popStack();  }  }  [BUGGY]      }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	262	262	2	replace	pathNames[stackSize        -        1]        =        null;        if(stackSize    >    0)    {    pathNames[stackSize    -    1]    =    null;    }    else    {    popStack();    }    if(stackSize  >  0)  {  pathNames[stackSize  -  1]  =  null;  if(stackSize  >  0)  {  pathNames[stackSize  -  1]  =  null;  }  else  {  popStack();  }  }	  	compilable	  [FE]  ArrayIndexOutOfBoundsException  	67	2	add
30	[BUG]  [BUGGY]  pathNames[stackSize    -    1]    =    null;    if(stackSize  >  0)  {  pathNames[stackSize  -  1]  =  null;  }  else  {  popStack();  }  PathIndices  pathNames[stackSize  -  1]  =  null;  if(stackSize  >  0)  {  pathNames[stackSize  -  1]  =  null;  }  else  {  popStack();  }  [CE]  ']'  expected  [FE]          ArrayIndexOutOfBoundsException    [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {  popStack();      [BUGGY]  pathNames[stackSize    -    1]    =    null;    if(stackSize  >  0)  {  pathNames[stackSize  -  1]  =  null;  }  else  {  popStack();  }  PathIndices  pathNames[stackSize  -  1]  =  null;  if(stackSize  >  0)  {  pathNames[stackSize  -  1]  =  null;  }  else  {  popStack();  }  [BUGGY]      }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	262	262	2	replace	pathNames[stackSize        -        1]        =        null;        if(stackSize    >    0)    {    pathNames[stackSize    -    1]    =    null;    }    else    {    popStack();    }    PathIndices  pathNames[stackSize  -  1]  =  null;  if(stackSize  >  0)  {  pathNames[stackSize  -  1]  =  null;  }  else  {  popStack();  }	  	non-compiled	[CE]  ']'  expected	67	None	add
31	[BUG]  [BUGGY]  pathNames[stackSize    -    1]    =    null;    if(stackSize  >  0)  {  pathNames[stackSize  -  1]  =  null;  }  else  {  popStack();  }  if(peek()  ==  JsonToken.VALUE_NULL)  {  nextName();  pathNames[stackSize  -  1]  =  null;  if(stackSize  >  0)  {  pathNames[stackSize  -  1]  =  null;  }  else  {  popStack();  }  [CE]  ';'  expected  [FE]            ArrayIndexOutOfBoundsException    [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {  popStack();      [BUGGY]  pathNames[stackSize    -    1]    =    null;    if(stackSize  >  0)  {  pathNames[stackSize  -  1]  =  null;  }  else  {  popStack();  }  if(peek()  ==  JsonToken.VALUE_NULL)  {  nextName();  pathNames[stackSize  -  1]  =  null;  if(stackSize  >  0)  {  pathNames[stackSize  -  1]  =  null;  }  else  {  popStack();  }  [BUGGY]      }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	262	262	2	replace	pathNames[stackSize        -        1]        =        null;        if(stackSize    >    0)    {    pathNames[stackSize    -    1]    =    null;    }    else    {    popStack();    }    if(peek()  ==  JsonToken.VALUE_NULL)  {  nextName();  pathNames[stackSize  -  1]  =  null;  if(stackSize  >  0)  {  pathNames[stackSize  -  1]  =  null;  }  else  {  popStack();  }	  	non-compiled	[CE]  ';'  expected	67	None	add
32	[BUG]  [BUGGY]  pathNames[stackSize    -    1]    =    null;    if(stackSize  >  0)  {  pathNames[stackSize  -  1]  =  null;  }  else  {  popStack();  }  if(peek()  ==  JsonToken.VALUE_NULL)  {  pathNames[stackSize  -  1]  =  null;  if(stackSize  >  0)  {  pathNames[stackSize  -  1]  =  null;  }  else  {  popStack();  }  [CE]  ';'  expected  [FE]              ArrayIndexOutOfBoundsException    [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {  popStack();      [BUGGY]  pathNames[stackSize    -    1]    =    null;    if(stackSize  >  0)  {  pathNames[stackSize  -  1]  =  null;  }  else  {  popStack();  }  if(peek()  ==  JsonToken.VALUE_NULL)  {  pathNames[stackSize  -  1]  =  null;  if(stackSize  >  0)  {  pathNames[stackSize  -  1]  =  null;  }  else  {  popStack();  }  [BUGGY]      }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	262	262	2	replace	pathNames[stackSize        -        1]        =        null;        if(stackSize    >    0)    {    pathNames[stackSize    -    1]    =    null;    }    else    {    popStack();    }    if(peek()  ==  JsonToken.VALUE_NULL)  {  pathNames[stackSize  -  1]  =  null;  if(stackSize  >  0)  {  pathNames[stackSize  -  1]  =  null;  }  else  {  popStack();  }	  	non-compiled	[CE]  ';'  expected	67	None	add
33	[BUG]  [BUGGY]  pathNames[stackSize    -    1]    =    null;    if(stackSize  >  0)  {  pathNames[stackSize  -  1]  =  null;  }  else  {  popStack();  }  if(peek()  ==  JsonToken.VALUE_NULL)  {  nextName();  pathNames[stackSize  -  1]  =  null;  if(stackSize  >  0)  {  pathNames[stackSize  -  1]  =  null;  }  else  {  popStack()  [CE]  ';'  expected  [FE]                ArrayIndexOutOfBoundsException    [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {  popStack();      [BUGGY]  pathNames[stackSize    -    1]    =    null;    if(stackSize  >  0)  {  pathNames[stackSize  -  1]  =  null;  }  else  {  popStack();  }  if(peek()  ==  JsonToken.VALUE_NULL)  {  nextName();  pathNames[stackSize  -  1]  =  null;  if(stackSize  >  0)  {  pathNames[stackSize  -  1]  =  null;  }  else  {  popStack()  [BUGGY]      }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	262	262	2	replace	pathNames[stackSize        -        1]        =        null;        if(stackSize    >    0)    {    pathNames[stackSize    -    1]    =    null;    }    else    {    popStack();    }    if(peek()  ==  JsonToken.VALUE_NULL)  {  nextName();  pathNames[stackSize  -  1]  =  null;  if(stackSize  >  0)  {  pathNames[stackSize  -  1]  =  null;  }  else  {  popStack()	  	non-compiled	[CE]  ';'  expected	67	None	add
34	[BUG]  [BUGGY]  int[]  result  =  new  int[stackSize  -  1];  for(int  i  =  0;  i  <  stackSize;  ++i)  {  result[i]  =  handleMissingValue();  }  [CE]  cannot  find  symbol  [FE]            ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {  popStack();      [BUGGY]  int[]  result  =  new  int[stackSize  -  1];  for(int  i  =  0;  i  <  stackSize;  ++i)  {  result[i]  =  handleMissingValue();  }  [BUGGY]      }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	262	262	2	replace	int[]  result  =  new  int[stackSize  -  1];  for(int  i  =  0;  i  <  stackSize;  ++i)  {  result[i]  =  handleMissingValue();  }	  if(stackSize    >    0)    {    int[]    result    =    new    int[stackSize    -    1];    for(int    i    =    0;    i    <    stackSize;    ++i)    {    result[i]    =    handleMissingValue();    }    	non-compiled	[CE]  cannot  find  symbol	79	None	replace
35	[BUG]  [BUGGY]  ||  stackSize  >  0)  {  int[]  result  =  new  int[stackSize  -  1];  for(int  i  =  0;  i  <  stackSize;  ++i)  {  result[i]  =  handleMissingValue();  }  [CE]  illegal  start  of  expression  [FE]              ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {  popStack();      [BUGGY]  ||  stackSize  >  0)  {  int[]  result  =  new  int[stackSize  -  1];  for(int  i  =  0;  i  <  stackSize;  ++i)  {  result[i]  =  handleMissingValue();  }  [BUGGY]      }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	262	262	2	replace	||  stackSize  >  0)  {  int[]  result  =  new  int[stackSize  -  1];  for(int  i  =  0;  i  <  stackSize;  ++i)  {  result[i]  =  handleMissingValue();  }	  if(stackSize    >    0)    {    int[]    result    =    new    int[stackSize    -    1];    for(int    i    =    0;    i    <    stackSize;    ++i)    {    result[i]    =    handleMissingValue();    }    	non-compiled	[CE]  illegal  start  of  expression	79	None	replace
36	[BUG]  [BUGGY]  []  result  =  new  int[stackSize  -  1];  for(int  i  =  0;  i  <  stackSize;  ++i)  {  result[i]  =  handleMissingValue();  }  [CE]  illegal  start  of  expression  [FE]                ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {  popStack();      [BUGGY]  []  result  =  new  int[stackSize  -  1];  for(int  i  =  0;  i  <  stackSize;  ++i)  {  result[i]  =  handleMissingValue();  }  [BUGGY]      }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	262	262	2	replace	[]  result  =  new  int[stackSize  -  1];  for(int  i  =  0;  i  <  stackSize;  ++i)  {  result[i]  =  handleMissingValue();  }	  if(stackSize    >    0)    {    int[]    result    =    new    int[stackSize    -    1];    for(int    i    =    0;    i    <    stackSize;    ++i)    {    result[i]    =    handleMissingValue();    }    	non-compiled	[CE]  illegal  start  of  expression	79	None	replace
37	[BUG]  [BUGGY]  if(stackSize  >  1)  {  int[]  result  =  new  int[stackSize  -  1];  for(int  i  =  0;  i  <  stackSize;  ++i)  {  result[i]  =  handleMissingValue();  }  [CE]  ';'  expected  [FE]                  ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {  popStack();      [BUGGY]  if(stackSize  >  1)  {  int[]  result  =  new  int[stackSize  -  1];  for(int  i  =  0;  i  <  stackSize;  ++i)  {  result[i]  =  handleMissingValue();  }  [BUGGY]      }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	262	262	2	replace	if(stackSize  >  1)  {  int[]  result  =  new  int[stackSize  -  1];  for(int  i  =  0;  i  <  stackSize;  ++i)  {  result[i]  =  handleMissingValue();  }	  if(stackSize    >    0)    {    int[]    result    =    new    int[stackSize    -    1];    for(int    i    =    0;    i    <    stackSize;    ++i)    {    result[i]    =    handleMissingValue();    }    	non-compiled	[CE]  ';'  expected	79	None	replace
38	[BUG]  [BUGGY]  if(stackSize  ==  0)  {  if(stackSize  >  0)  {  int[]  result  =  new  int[stackSize  -  1];  for(int  i  =  0;  i  <  stackSize;  ++i)  {  result[i]  =  handleMissingValue();  }  [CE]  ';'  expected  [FE]                    ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {  popStack();      [BUGGY]  if(stackSize  ==  0)  {  if(stackSize  >  0)  {  int[]  result  =  new  int[stackSize  -  1];  for(int  i  =  0;  i  <  stackSize;  ++i)  {  result[i]  =  handleMissingValue();  }  [BUGGY]      }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	262	262	2	replace	if(stackSize  ==  0)  {  if(stackSize  >  0)  {  int[]  result  =  new  int[stackSize  -  1];  for(int  i  =  0;  i  <  stackSize;  ++i)  {  result[i]  =  handleMissingValue();  }	  if(stackSize    >    0)    {    int[]    result    =    new    int[stackSize    -    1];    for(int    i    =    0;    i    <    stackSize;    ++i)    {    result[i]    =    handleMissingValue();    }    	non-compiled	[CE]  ';'  expected	79	None	replace
39	[BUG]  [BUGGY]  if(stackSize  ==  0)  {  if(stackSize  >  0)  {  int[]  result  =  new  int[stackSize  -  1];  for(int  i  =  0;  i  <  stackSize;  ++i)  {  result[i]  =  handleMissingValue();  }  }  [CE]  ';'  expected  [FE]                      ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {  popStack();      [BUGGY]  if(stackSize  ==  0)  {  if(stackSize  >  0)  {  int[]  result  =  new  int[stackSize  -  1];  for(int  i  =  0;  i  <  stackSize;  ++i)  {  result[i]  =  handleMissingValue();  }  }  [BUGGY]      }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	262	262	2	replace	if(stackSize  ==  0)  {  if(stackSize  >  0)  {  int[]  result  =  new  int[stackSize  -  1];  for(int  i  =  0;  i  <  stackSize;  ++i)  {  result[i]  =  handleMissingValue();  }  }	  if(stackSize    >    0)    {    int[]    result    =    new    int[stackSize    -    1];    for(int    i    =    0;    i    <    stackSize;    ++i)    {    result[i]    =    handleMissingValue();    }    	non-compiled	[CE]  ';'  expected	79	None	replace
40	[BUG]  [BUGGY]  pathNames[stackSize  -  1]  =  null;  }  else  {  popStack();  }  [CE]  'else'  without  'if'  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {  popStack();      [BUGGY]  pathNames[stackSize  -  1]  =  null;  }  else  {  popStack();  }  [BUGGY]      }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	262	262	2	replace	pathNames[stackSize  -  1]  =  null;  }  else  {  popStack();  }	  if(stackSize    >    0)    {    pathNames[stackSize    -    1]    =    null;    }    else    {    popStack();    }    	non-compiled	[CE]  'else'  without  'if'	24	None	replace
41	[BUG]  [BUGGY]  Path  pathIndices[stackSize  -  1]  =  null;  [CE]  ']'  expected  [FE]      ArrayIndexOutOfBoundsException    [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {  popStack();      [BUGGY]  Path  pathIndices[stackSize  -  1]  =  null;  [BUGGY]      }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	262	262	2	replace	Path  pathIndices[stackSize  -  1]  =  null;	  if(stackSize    >    0)    {    pathNames[stackSize    -    1]    =    null;    }    else    {    popStack();    }    	non-compiled	[CE]  ']'  expected	24	None	replace
42	[BUG]  [BUGGY]  patterns[stackSize  -  1]  =  null;  }  else  {  popStack();  }  [CE]  'else'  without  'if'  [FE]        ArrayIndexOutOfBoundsException    [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {  popStack();      [BUGGY]  patterns[stackSize  -  1]  =  null;  }  else  {  popStack();  }  [BUGGY]      }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	262	262	2	replace	patterns[stackSize  -  1]  =  null;  }  else  {  popStack();  }	  if(stackSize    >    0)    {    pathNames[stackSize    -    1]    =    null;    }    else    {    popStack();    }    	non-compiled	[CE]  'else'  without  'if'	24	None	replace
43	[BUG]  [BUGGY]  Path  pathNames[stackSize  -  1]  =  null;  [CE]  ']'  expected  [FE]          ArrayIndexOutOfBoundsException    [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {  popStack();      [BUGGY]  Path  pathNames[stackSize  -  1]  =  null;  [BUGGY]      }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	262	262	2	replace	Path  pathNames[stackSize  -  1]  =  null;	  if(stackSize    >    0)    {    pathNames[stackSize    -    1]    =    null;    }    else    {    popStack();    }    	non-compiled	[CE]  ']'  expected	24	None	replace
44	[BUG]  [BUGGY]  ||(stackSize  >  stackSize  -  1))  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  expression  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {  popStack();      [BUGGY]  ||(stackSize  >  stackSize  -  1))  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	262	262	2	replace	||(stackSize  >  stackSize  -  1))  {  throw  new  IllegalArgumentException( " ");  }	  if(stackSize    >    stackSize)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	22	None	replace
45	[BUG]  [BUGGY]  if(stackSize  <  =  stackSize)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  expression  [FE]      ArrayIndexOutOfBoundsException    [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {  popStack();      [BUGGY]  if(stackSize  <  =  stackSize)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	262	262	2	replace	if(stackSize  <  =  stackSize)  {  throw  new  IllegalArgumentException( " ");  }	  if(stackSize    >    stackSize)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	22	None	replace
46	[BUG]  [BUGGY]  [FE]  ArrayIndexOutOfBoundsException  [FE]        ArrayIndexOutOfBoundsException    [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {  popStack();      [BUGGY]  if(stackSize  >  1)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	262	262	2	add	if(stackSize  >  1)  {  throw  new  IllegalArgumentException( " ");  }	  if(stackSize    >    stackSize)    {    throw    new    IllegalArgumentException(   "   ");    }    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	22	2	replace
47	[BUG]  [BUGGY]  if(stackSize  >  1)  {  throw  new  IllegalArgumentException( " ");  }  [FE]  ArrayIndexOutOfBoundsException  [FE]        ArrayIndexOutOfBoundsException    [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {  popStack();      [BUGGY]  if(stackSize  >  1)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	262	262	2	replace	if(stackSize  >  1)  {  throw  new  IllegalArgumentException( " ");  }	  if(stackSize    >    stackSize)    {    throw    new    IllegalArgumentException(   "   ");    }    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	22	2	replace
48	[BUG]  [BUGGY]  [FE]  IllegalArgumentException  [FE]          ArrayIndexOutOfBoundsException    [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {  popStack();      [BUGGY]  throw  new  IllegalArgumentException( " ");  [BUGGY]      }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	262	262	2	add	throw  new  IllegalArgumentException( " ");	  if(stackSize    >    stackSize)    {    throw    new    IllegalArgumentException(   "   ");    }    	compilable	  [FE]  IllegalArgumentException  	22	2	replace
49	[BUG]  [BUGGY]  throw  new  IllegalArgumentException( " ");  [FE]  IllegalArgumentException  [FE]          ArrayIndexOutOfBoundsException    [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {  popStack();      [BUGGY]  throw  new  IllegalArgumentException( " ");  [BUGGY]      }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	262	262	2	replace	throw  new  IllegalArgumentException( " ");	  if(stackSize    >    stackSize)    {    throw    new    IllegalArgumentException(   "   ");    }    	compilable	  [FE]  IllegalArgumentException  	22	2	replace
50	[BUG]  [BUGGY]  [FE]  ArrayIndexOutOfBoundsException  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {  popStack();      [BUGGY]          if(stackSize  >  0)  {  pathIndices  =  new  int[stackSize  -  1];  System.arraycopy(pathNames,  0,  pathNames,  1,  stackSize  -  1);  }  if(stackSize  >  0)  {  pathIndices  =  new  int[stackSize  -  1];  System.arraycopy(pathNames,  0,  pathNames,  1,  stackSize  -  1);  }  [BUGGY]      }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	262	262	2	add	                if(stackSize    >    0)    {    pathIndices    =    new    int[stackSize    -    1];    System.arraycopy(pathNames,    0,    pathNames,    1,    stackSize    -    1);    }    if(stackSize  >  0)  {  pathIndices  =  new  int[stackSize  -  1];  System.arraycopy(pathNames,  0,  pathNames,  1,  stackSize  -  1);  }	  	compilable	  [FE]  ArrayIndexOutOfBoundsException  	63	2	add
51	[BUG]  [BUGGY]          if(stackSize  >  0)  {  pathIndices  =  new  int[stackSize  -  1];  System.arraycopy(pathNames,  0,  pathNames,  1,  stackSize  -  1);  }  if(stackSize  >  0)  {  pathIndices  =  new  int[stackSize  -  1];  System.arraycopy(pathNames,  0,  pathNames,  1,  stackSize  -  1);  }  [FE]  ArrayIndexOutOfBoundsException  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {  popStack();      [BUGGY]          if(stackSize  >  0)  {  pathIndices  =  new  int[stackSize  -  1];  System.arraycopy(pathNames,  0,  pathNames,  1,  stackSize  -  1);  }  if(stackSize  >  0)  {  pathIndices  =  new  int[stackSize  -  1];  System.arraycopy(pathNames,  0,  pathNames,  1,  stackSize  -  1);  }  [BUGGY]      }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	262	262	2	replace	                if(stackSize    >    0)    {    pathIndices    =    new    int[stackSize    -    1];    System.arraycopy(pathNames,    0,    pathNames,    1,    stackSize    -    1);    }    if(stackSize  >  0)  {  pathIndices  =  new  int[stackSize  -  1];  System.arraycopy(pathNames,  0,  pathNames,  1,  stackSize  -  1);  }	  	compilable	  [FE]  ArrayIndexOutOfBoundsException  	63	2	add
52	[BUG]  [BUGGY]          if(stackSize  >  0)  {  pathIndices  =  new  int[stackSize  -  1];  System.arraycopy(pathNames,  0,  pathNames,  1,  stackSize  -  1);  }  if(stackSize  >  0)  {  pathIndices  =  new  int[pathNames,  1,  stackSize  -  1];  System.arraycopy(pathNames,  0,  pathNames,  1,  stackSize  -  1);  }  [CE]  ']'  expected  [FE]      ArrayIndexOutOfBoundsException    [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {  popStack();      [BUGGY]          if(stackSize  >  0)  {  pathIndices  =  new  int[stackSize  -  1];  System.arraycopy(pathNames,  0,  pathNames,  1,  stackSize  -  1);  }  if(stackSize  >  0)  {  pathIndices  =  new  int[pathNames,  1,  stackSize  -  1];  System.arraycopy(pathNames,  0,  pathNames,  1,  stackSize  -  1);  }  [BUGGY]      }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	262	262	2	replace	                if(stackSize    >    0)    {    pathIndices    =    new    int[stackSize    -    1];    System.arraycopy(pathNames,    0,    pathNames,    1,    stackSize    -    1);    }    if(stackSize  >  0)  {  pathIndices  =  new  int[pathNames,  1,  stackSize  -  1];  System.arraycopy(pathNames,  0,  pathNames,  1,  stackSize  -  1);  }	  	non-compiled	[CE]  ']'  expected	63	None	add
53	[BUG]  [BUGGY]          if(stackSize  >  0)  {  pathIndices  =  new  int[stackSize  -  1];  System.arraycopy(pathNames,  0,  pathNames,  1,  stackSize  -  1);  }  if(stackSize  >  0)  {  pathIndices  =  new  int[stackSize  -  1];  System.arraycopy(pathNames,  0,  pathNames,  1,  stackSize  -  1  [CE]  [FE]        ArrayIndexOutOfBoundsException    [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {  popStack();      [BUGGY]          if(stackSize  >  0)  {  pathIndices  =  new  int[stackSize  -  1];  System.arraycopy(pathNames,  0,  pathNames,  1,  stackSize  -  1);  }  if(stackSize  >  0)  {  pathIndices  =  new  int[stackSize  -  1];  System.arraycopy(pathNames,  0,  pathNames,  1,  stackSize  -  1  [BUGGY]      }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	262	262	2	replace	                if(stackSize    >    0)    {    pathIndices    =    new    int[stackSize    -    1];    System.arraycopy(pathNames,    0,    pathNames,    1,    stackSize    -    1);    }    if(stackSize  >  0)  {  pathIndices  =  new  int[stackSize  -  1];  System.arraycopy(pathNames,  0,  pathNames,  1,  stackSize  -  1	  	non-compiled	[CE]  	63	None	add
54	[BUG]  [BUGGY]  [FE]  ArrayIndexOutOfBoundsException  [FE]          ArrayIndexOutOfBoundsException    [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {  popStack();      [BUGGY]          if(stackSize  >  0)  {  pathIndices  =  new  int[stackSize  -  1];  System.arraycopy(pathNames,  0,  pathNames,  1,  stackSize  -  1);  }  if(stackSize  >  0)  {  pathIndices  =  new  int[stackSize  -  1];  System.arraycopy(pathNames,  1,  pathNames,  1,  stackSize  -  1);  }  [BUGGY]      }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	262	262	2	add	                if(stackSize    >    0)    {    pathIndices    =    new    int[stackSize    -    1];    System.arraycopy(pathNames,    0,    pathNames,    1,    stackSize    -    1);    }    if(stackSize  >  0)  {  pathIndices  =  new  int[stackSize  -  1];  System.arraycopy(pathNames,  1,  pathNames,  1,  stackSize  -  1);  }	  	compilable	  [FE]  ArrayIndexOutOfBoundsException  	63	2	add
55	[BUG]  [BUGGY]          if(stackSize  >  0)  {  pathIndices  =  new  int[stackSize  -  1];  System.arraycopy(pathNames,  0,  pathNames,  1,  stackSize  -  1);  }  if(stackSize  >  0)  {  pathIndices  =  new  int[stackSize  -  1];  System.arraycopy(pathNames,  1,  pathNames,  1,  stackSize  -  1);  }  [FE]  ArrayIndexOutOfBoundsException  [FE]          ArrayIndexOutOfBoundsException    [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {  popStack();      [BUGGY]          if(stackSize  >  0)  {  pathIndices  =  new  int[stackSize  -  1];  System.arraycopy(pathNames,  0,  pathNames,  1,  stackSize  -  1);  }  if(stackSize  >  0)  {  pathIndices  =  new  int[stackSize  -  1];  System.arraycopy(pathNames,  1,  pathNames,  1,  stackSize  -  1);  }  [BUGGY]      }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	262	262	2	replace	                if(stackSize    >    0)    {    pathIndices    =    new    int[stackSize    -    1];    System.arraycopy(pathNames,    0,    pathNames,    1,    stackSize    -    1);    }    if(stackSize  >  0)  {  pathIndices  =  new  int[stackSize  -  1];  System.arraycopy(pathNames,  1,  pathNames,  1,  stackSize  -  1);  }	  	compilable	  [FE]  ArrayIndexOutOfBoundsException  	63	2	add
56	[BUG]  [BUGGY]          if(stackSize  >  0)  {  pathIndices  =  new  int[stackSize  -  1];  System.arraycopy(pathNames,  0,  pathNames,  1,  stackSize  -  1);  }  If(stackSize  >  0)  {  pathIndices  =  new  int[stackSize  -  1];  System.arraycopy(pathNames,  0,  pathNames,  1,  stackSize  -  1);  }  [CE]  ';'  expected  [FE]            ArrayIndexOutOfBoundsException    [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {  popStack();      [BUGGY]          if(stackSize  >  0)  {  pathIndices  =  new  int[stackSize  -  1];  System.arraycopy(pathNames,  0,  pathNames,  1,  stackSize  -  1);  }  If(stackSize  >  0)  {  pathIndices  =  new  int[stackSize  -  1];  System.arraycopy(pathNames,  0,  pathNames,  1,  stackSize  -  1);  }  [BUGGY]      }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	262	262	2	replace	                if(stackSize    >    0)    {    pathIndices    =    new    int[stackSize    -    1];    System.arraycopy(pathNames,    0,    pathNames,    1,    stackSize    -    1);    }    If(stackSize  >  0)  {  pathIndices  =  new  int[stackSize  -  1];  System.arraycopy(pathNames,  0,  pathNames,  1,  stackSize  -  1);  }	  	non-compiled	[CE]  ';'  expected	63	None	add
57	[BUG]  [BUGGY]  [FE]  ArrayIndexOutOfBoundsException  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {  popStack();      [BUGGY]  pathNames[stackSize    -    1]    =    null;    if(stackSize  >  0)  {  pathNames[stackSize  -  1]  =  null;  }  else  {  popStack();  pathNames[stackSize  -  1]  =  null;  }  pathNames[stackSize  -  1]  =  null;  if(stackSize  >  0)  {  pathNames[stackSize  -  1]  =  null;  }  else  {  popStack();  pathNames[stackSize  -  1]  =  null;  }  [BUGGY]      }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	262	262	2	add	pathNames[stackSize        -        1]        =        null;        if(stackSize    >    0)    {    pathNames[stackSize    -    1]    =    null;    }    else    {    popStack();    pathNames[stackSize    -    1]    =    null;    }    pathNames[stackSize  -  1]  =  null;  if(stackSize  >  0)  {  pathNames[stackSize  -  1]  =  null;  }  else  {  popStack();  pathNames[stackSize  -  1]  =  null;  }	  	compilable	  [FE]  ArrayIndexOutOfBoundsException  	65	2	add
58	[BUG]  [BUGGY]  pathNames[stackSize    -    1]    =    null;    if(stackSize  >  0)  {  pathNames[stackSize  -  1]  =  null;  }  else  {  popStack();  pathNames[stackSize  -  1]  =  null;  }  pathNames[stackSize  -  1]  =  null;  if(stackSize  >  0)  {  pathNames[stackSize  -  1]  =  null;  }  else  {  popStack();  pathNames[stackSize  -  1]  =  null;  }  [FE]  ArrayIndexOutOfBoundsException  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {  popStack();      [BUGGY]  pathNames[stackSize    -    1]    =    null;    if(stackSize  >  0)  {  pathNames[stackSize  -  1]  =  null;  }  else  {  popStack();  pathNames[stackSize  -  1]  =  null;  }  pathNames[stackSize  -  1]  =  null;  if(stackSize  >  0)  {  pathNames[stackSize  -  1]  =  null;  }  else  {  popStack();  pathNames[stackSize  -  1]  =  null;  }  [BUGGY]      }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	262	262	2	replace	pathNames[stackSize        -        1]        =        null;        if(stackSize    >    0)    {    pathNames[stackSize    -    1]    =    null;    }    else    {    popStack();    pathNames[stackSize    -    1]    =    null;    }    pathNames[stackSize  -  1]  =  null;  if(stackSize  >  0)  {  pathNames[stackSize  -  1]  =  null;  }  else  {  popStack();  pathNames[stackSize  -  1]  =  null;  }	  	compilable	  [FE]  ArrayIndexOutOfBoundsException  	65	2	add
59	[BUG]  [BUGGY]  pathNames[stackSize    -    1]    =    null;    if(stackSize  >  0)  {  pathNames[stackSize  -  1]  =  null;  }  else  {  popStack();  pathNames[stackSize  -  1]  =  null;  }  pathNames[stackSize  -  1]  =  null;  if(stackSize  >  0)  {  pathNames[stackSize  -  1]  =  null;  }  else  {  popStack();  pathNames[stackSize  -  1]  =  null;  [CE]  ';'  expected  [FE]      ArrayIndexOutOfBoundsException    [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {  popStack();      [BUGGY]  pathNames[stackSize    -    1]    =    null;    if(stackSize  >  0)  {  pathNames[stackSize  -  1]  =  null;  }  else  {  popStack();  pathNames[stackSize  -  1]  =  null;  }  pathNames[stackSize  -  1]  =  null;  if(stackSize  >  0)  {  pathNames[stackSize  -  1]  =  null;  }  else  {  popStack();  pathNames[stackSize  -  1]  =  null;  [BUGGY]      }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	262	262	2	replace	pathNames[stackSize        -        1]        =        null;        if(stackSize    >    0)    {    pathNames[stackSize    -    1]    =    null;    }    else    {    popStack();    pathNames[stackSize    -    1]    =    null;    }    pathNames[stackSize  -  1]  =  null;  if(stackSize  >  0)  {  pathNames[stackSize  -  1]  =  null;  }  else  {  popStack();  pathNames[stackSize  -  1]  =  null;	  	non-compiled	[CE]  ';'  expected	65	None	add
60	[BUG]  [BUGGY]  [FE]  ArrayIndexOutOfBoundsException  [FE]        ArrayIndexOutOfBoundsException    [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {  popStack();      [BUGGY]  pathNames[stackSize    -    1]    =    null;    if(stackSize  >  0)  {  pathNames[stackSize  -  1]  =  null;  }  else  {  popStack();  pathNames[stackSize  -  1]  =  null;  }  pathNames[stackSize  -  1]  =  null;  if(stackSize  >  0)  {  pathNames[stackSize  -  1]  =  null;  }  [BUGGY]      }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	262	262	2	add	pathNames[stackSize        -        1]        =        null;        if(stackSize    >    0)    {    pathNames[stackSize    -    1]    =    null;    }    else    {    popStack();    pathNames[stackSize    -    1]    =    null;    }    pathNames[stackSize  -  1]  =  null;  if(stackSize  >  0)  {  pathNames[stackSize  -  1]  =  null;  }	  	compilable	  [FE]  ArrayIndexOutOfBoundsException  	65	2	add
61	[BUG]  [BUGGY]  pathNames[stackSize    -    1]    =    null;    if(stackSize  >  0)  {  pathNames[stackSize  -  1]  =  null;  }  else  {  popStack();  pathNames[stackSize  -  1]  =  null;  }  pathNames[stackSize  -  1]  =  null;  if(stackSize  >  0)  {  pathNames[stackSize  -  1]  =  null;  }  [FE]  ArrayIndexOutOfBoundsException  [FE]        ArrayIndexOutOfBoundsException    [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {  popStack();      [BUGGY]  pathNames[stackSize    -    1]    =    null;    if(stackSize  >  0)  {  pathNames[stackSize  -  1]  =  null;  }  else  {  popStack();  pathNames[stackSize  -  1]  =  null;  }  pathNames[stackSize  -  1]  =  null;  if(stackSize  >  0)  {  pathNames[stackSize  -  1]  =  null;  }  [BUGGY]      }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	262	262	2	replace	pathNames[stackSize        -        1]        =        null;        if(stackSize    >    0)    {    pathNames[stackSize    -    1]    =    null;    }    else    {    popStack();    pathNames[stackSize    -    1]    =    null;    }    pathNames[stackSize  -  1]  =  null;  if(stackSize  >  0)  {  pathNames[stackSize  -  1]  =  null;  }	  	compilable	  [FE]  ArrayIndexOutOfBoundsException  	65	2	add
62	[BUG]  [BUGGY]  pathNames[stackSize    -    1]    =    null;    if(stackSize  >  0)  {  pathNames[stackSize  -  1]  =  null;  }  else  {  popStack();  pathNames[stackSize  -  1]  =  null;  }  PathNode  pathNames[stackSize  -  1]  =  null;  if(stackSize  >  0)  {  pathNames[stackSize  -  1]  =  null;  }  else  {  popStack();  pathNames[stackSize  -  1]  =  null;  }  [CE]  ']'  expected  [FE]          ArrayIndexOutOfBoundsException    [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {  popStack();      [BUGGY]  pathNames[stackSize    -    1]    =    null;    if(stackSize  >  0)  {  pathNames[stackSize  -  1]  =  null;  }  else  {  popStack();  pathNames[stackSize  -  1]  =  null;  }  PathNode  pathNames[stackSize  -  1]  =  null;  if(stackSize  >  0)  {  pathNames[stackSize  -  1]  =  null;  }  else  {  popStack();  pathNames[stackSize  -  1]  =  null;  }  [BUGGY]      }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	262	262	2	replace	pathNames[stackSize        -        1]        =        null;        if(stackSize    >    0)    {    pathNames[stackSize    -    1]    =    null;    }    else    {    popStack();    pathNames[stackSize    -    1]    =    null;    }    PathNode  pathNames[stackSize  -  1]  =  null;  if(stackSize  >  0)  {  pathNames[stackSize  -  1]  =  null;  }  else  {  popStack();  pathNames[stackSize  -  1]  =  null;  }	  	non-compiled	[CE]  ']'  expected	65	None	add
63	[BUG]  [BUGGY]  pathNames[stackSize    -    1]    =    null;    if(stackSize  >  0)  {  pathNames[stackSize  -  1]  =  null;  }  else  {  popStack();  pathNames[stackSize  -  1]  =  null;  }  pathNames[stackSize  -  1]  =  null;  if(stackSize  >  0)  {  pathNames[stackSize  -  1]  =  null;  }  else  {  popStack();  pathNames[stackSize  -  1]  =  null  [CE]  ';'  expected  [FE]            ArrayIndexOutOfBoundsException    [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {  popStack();      [BUGGY]  pathNames[stackSize    -    1]    =    null;    if(stackSize  >  0)  {  pathNames[stackSize  -  1]  =  null;  }  else  {  popStack();  pathNames[stackSize  -  1]  =  null;  }  pathNames[stackSize  -  1]  =  null;  if(stackSize  >  0)  {  pathNames[stackSize  -  1]  =  null;  }  else  {  popStack();  pathNames[stackSize  -  1]  =  null  [BUGGY]      }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	262	262	2	replace	pathNames[stackSize        -        1]        =        null;        if(stackSize    >    0)    {    pathNames[stackSize    -    1]    =    null;    }    else    {    popStack();    pathNames[stackSize    -    1]    =    null;    }    pathNames[stackSize  -  1]  =  null;  if(stackSize  >  0)  {  pathNames[stackSize  -  1]  =  null;  }  else  {  popStack();  pathNames[stackSize  -  1]  =  null	  	non-compiled	[CE]  ';'  expected	65	None	add
64	[BUG]  [BUGGY]  pathNames[stackSize    -    1]    =    null;    if(stackSize  >  0)  {  pathNames[stackSize  -  1]  =  null;  }  else  {  popStack();  pathNames[stackSize  -  1]  =  null;  }  pathNames[stackSize  -  1]  =  null;  if(stackSize  >  0)  {  pathNames[stackSize  -  1]  =  null;  }  else  {  popStack();  pathNames[stackSize  -  1]  =  nu  [CE]  ';'  expected  [FE]              ArrayIndexOutOfBoundsException    [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {  popStack();      [BUGGY]  pathNames[stackSize    -    1]    =    null;    if(stackSize  >  0)  {  pathNames[stackSize  -  1]  =  null;  }  else  {  popStack();  pathNames[stackSize  -  1]  =  null;  }  pathNames[stackSize  -  1]  =  null;  if(stackSize  >  0)  {  pathNames[stackSize  -  1]  =  null;  }  else  {  popStack();  pathNames[stackSize  -  1]  =  nu  [BUGGY]      }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	262	262	2	replace	pathNames[stackSize        -        1]        =        null;        if(stackSize    >    0)    {    pathNames[stackSize    -    1]    =    null;    }    else    {    popStack();    pathNames[stackSize    -    1]    =    null;    }    pathNames[stackSize  -  1]  =  null;  if(stackSize  >  0)  {  pathNames[stackSize  -  1]  =  null;  }  else  {  popStack();  pathNames[stackSize  -  1]  =  nu	  	non-compiled	[CE]  ';'  expected	65	None	add
65	[BUG]  [BUGGY]  pathNames[stackSize    -    1]    =    null;    if(stackSize  >  0)  {  pathNames[stackSize  -  1]  =  null;  }  else  {  popStack();  pathNames[stackSize  -  1]  =  null;  }  PathIndices  pathNames[stackSize  -  1]  =  null;  if(stackSize  >  0)  {  pathNames[stackSize  -  1]  =  null;  }  else  {  popStack();  pathNames[stackSize  -  1]  =  null;  }  [CE]  ']'  expected  [FE]                ArrayIndexOutOfBoundsException    [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {  popStack();      [BUGGY]  pathNames[stackSize    -    1]    =    null;    if(stackSize  >  0)  {  pathNames[stackSize  -  1]  =  null;  }  else  {  popStack();  pathNames[stackSize  -  1]  =  null;  }  PathIndices  pathNames[stackSize  -  1]  =  null;  if(stackSize  >  0)  {  pathNames[stackSize  -  1]  =  null;  }  else  {  popStack();  pathNames[stackSize  -  1]  =  null;  }  [BUGGY]      }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	262	262	2	replace	pathNames[stackSize        -        1]        =        null;        if(stackSize    >    0)    {    pathNames[stackSize    -    1]    =    null;    }    else    {    popStack();    pathNames[stackSize    -    1]    =    null;    }    PathIndices  pathNames[stackSize  -  1]  =  null;  if(stackSize  >  0)  {  pathNames[stackSize  -  1]  =  null;  }  else  {  popStack();  pathNames[stackSize  -  1]  =  null;  }	  	non-compiled	[CE]  ']'  expected	65	None	add
66	[BUG]  [BUGGY]  [FE]  ArrayIndexOutOfBoundsException  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {  popStack();      [BUGGY]  pathNames[stackSize  -  1]  =     "null   "  +  JsonToken.NAME;  pathNames[stackSize  -  1]  =   "null   "  +  JsonToken.NAME;  [BUGGY]      }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	262	262	2	add	pathNames[stackSize    -    1]    =       "null   "    +    JsonToken.NAME;    pathNames[stackSize  -  1]  =   "null   "  +  JsonToken.NAME;	  	compilable	  [FE]  ArrayIndexOutOfBoundsException  	90	2	add
67	[BUG]  [BUGGY]  pathNames[stackSize  -  1]  =     "null   "  +  JsonToken.NAME;  pathNames[stackSize  -  1]  =   "null   "  +  JsonToken.NAME;  [FE]  ArrayIndexOutOfBoundsException  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {  popStack();      [BUGGY]  pathNames[stackSize  -  1]  =     "null   "  +  JsonToken.NAME;  pathNames[stackSize  -  1]  =   "null   "  +  JsonToken.NAME;  [BUGGY]      }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	262	262	2	replace	pathNames[stackSize    -    1]    =       "null   "    +    JsonToken.NAME;    pathNames[stackSize  -  1]  =   "null   "  +  JsonToken.NAME;	  	compilable	  [FE]  ArrayIndexOutOfBoundsException  	90	2	add
68	[BUG]  [BUGGY]  pathNames[stackSize  -  1]  =     "null   "  +  JsonToken.NAME;  PathIndices[stackSize  -  1]  =   "null   "  +  JsonToken.NAME;  [CE]  cannot  find  symbol  PathIndices  [FE]      ArrayIndexOutOfBoundsException    [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {  popStack();      [BUGGY]  pathNames[stackSize  -  1]  =     "null   "  +  JsonToken.NAME;  PathIndices[stackSize  -  1]  =   "null   "  +  JsonToken.NAME;  [BUGGY]      }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	262	262	2	replace	pathNames[stackSize    -    1]    =       "null   "    +    JsonToken.NAME;    PathIndices[stackSize  -  1]  =   "null   "  +  JsonToken.NAME;	  	non-compiled	[CE]  cannot  find  symbol  PathIndices	90	None	add
69	[BUG]  [BUGGY]  pathNames[stackSize  -  1]  =     "null   "  +  JsonToken.NAME;  paths[stackSize  -  1]  =   "null   "  +  JsonToken.NAME;  [CE]  cannot  find  symbol  paths  [FE]        ArrayIndexOutOfBoundsException    [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {  popStack();      [BUGGY]  pathNames[stackSize  -  1]  =     "null   "  +  JsonToken.NAME;  paths[stackSize  -  1]  =   "null   "  +  JsonToken.NAME;  [BUGGY]      }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	262	262	2	replace	pathNames[stackSize    -    1]    =       "null   "    +    JsonToken.NAME;    paths[stackSize  -  1]  =   "null   "  +  JsonToken.NAME;	  	non-compiled	[CE]  cannot  find  symbol  paths	90	None	add
70	[BUG]  [BUGGY]  pathNames[stackSize  -  1]  =     "null   "  +  JsonToken.NAME;  pathNames[stackSize  -  1]  =   "null ",  +  JsonToken.NAME;  [CE]  [FE]          ArrayIndexOutOfBoundsException    [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {  popStack();      [BUGGY]  pathNames[stackSize  -  1]  =     "null   "  +  JsonToken.NAME;  pathNames[stackSize  -  1]  =   "null ",  +  JsonToken.NAME;  [BUGGY]      }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	262	262	2	replace	pathNames[stackSize    -    1]    =       "null   "    +    JsonToken.NAME;    pathNames[stackSize  -  1]  =   "null ",  +  JsonToken.NAME;	  	non-compiled	[CE]  	90	None	add
71	[BUG]  [BUGGY]  [FE]  IllegalArgumentException  [FE]    IllegalArgumentException    [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {  popStack();      [BUGGY]  if(stackSize  >  0)  {  pathIndices  =  new  int[stackSize  -  1];  System.arraycopy(pathNames,  0,  pathNames,  0,  stackSize  -  1);  }  else  {  throw  new  IllegalArgumentException(   "   ");  }  if(stackSize  >  0)  {  pathIndices  =  new  int[stackSize  -  1];  System.arraycopy(pathNames,  0,  pathNames,  0,  stackSize  -  1);  }  else  {  throw  new  IllegalArgumentException( "   ");  }  [BUGGY]      }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	262	262	2	add	if(stackSize    >    0)    {    pathIndices    =    new    int[stackSize    -    1];    System.arraycopy(pathNames,    0,    pathNames,    0,    stackSize    -    1);    }    else    {    throw    new    IllegalArgumentException(   "   ");    }    if(stackSize  >  0)  {  pathIndices  =  new  int[stackSize  -  1];  System.arraycopy(pathNames,  0,  pathNames,  0,  stackSize  -  1);  }  else  {  throw  new  IllegalArgumentException( "   ");  }	  	compilable	  [FE]  IllegalArgumentException  	45	2	add
72	[BUG]  [BUGGY]  if(stackSize  >  0)  {  pathIndices  =  new  int[stackSize  -  1];  System.arraycopy(pathNames,  0,  pathNames,  0,  stackSize  -  1);  }  else  {  throw  new  IllegalArgumentException(   "   ");  }  if(stackSize  >  0)  {  pathIndices  =  new  int[stackSize  -  1];  System.arraycopy(pathNames,  0,  pathNames,  0,  stackSize  -  1);  }  else  {  throw  new  IllegalArgumentException( "   ");  }  [FE]  IllegalArgumentException  [FE]    IllegalArgumentException    [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {  popStack();      [BUGGY]  if(stackSize  >  0)  {  pathIndices  =  new  int[stackSize  -  1];  System.arraycopy(pathNames,  0,  pathNames,  0,  stackSize  -  1);  }  else  {  throw  new  IllegalArgumentException(   "   ");  }  if(stackSize  >  0)  {  pathIndices  =  new  int[stackSize  -  1];  System.arraycopy(pathNames,  0,  pathNames,  0,  stackSize  -  1);  }  else  {  throw  new  IllegalArgumentException( "   ");  }  [BUGGY]      }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	262	262	2	replace	if(stackSize    >    0)    {    pathIndices    =    new    int[stackSize    -    1];    System.arraycopy(pathNames,    0,    pathNames,    0,    stackSize    -    1);    }    else    {    throw    new    IllegalArgumentException(   "   ");    }    if(stackSize  >  0)  {  pathIndices  =  new  int[stackSize  -  1];  System.arraycopy(pathNames,  0,  pathNames,  0,  stackSize  -  1);  }  else  {  throw  new  IllegalArgumentException( "   ");  }	  	compilable	  [FE]  IllegalArgumentException  	45	2	add
73	[BUG]  [BUGGY]  if(stackSize  >  0)  {  pathIndices  =  new  int[stackSize  -  1];  System.arraycopy(pathNames,  0,  pathNames,  0,  stackSize  -  1);  }  else  {  throw  new  IllegalArgumentException(   "   ");  }  if(stackSize  >  0)  {  pathIndices  =  new  int[stackSize  -  1];  System.arraycopy(pathNames,  0,  pathNames,  0,  stackSize  -  1);  }  else  {  throw  new  IllegalArgumentException( "  [CE]  unclosed  string  literal  [FE]      IllegalArgumentException    [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {  popStack();      [BUGGY]  if(stackSize  >  0)  {  pathIndices  =  new  int[stackSize  -  1];  System.arraycopy(pathNames,  0,  pathNames,  0,  stackSize  -  1);  }  else  {  throw  new  IllegalArgumentException(   "   ");  }  if(stackSize  >  0)  {  pathIndices  =  new  int[stackSize  -  1];  System.arraycopy(pathNames,  0,  pathNames,  0,  stackSize  -  1);  }  else  {  throw  new  IllegalArgumentException( "  [BUGGY]      }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	262	262	2	replace	if(stackSize    >    0)    {    pathIndices    =    new    int[stackSize    -    1];    System.arraycopy(pathNames,    0,    pathNames,    0,    stackSize    -    1);    }    else    {    throw    new    IllegalArgumentException(   "   ");    }    if(stackSize  >  0)  {  pathIndices  =  new  int[stackSize  -  1];  System.arraycopy(pathNames,  0,  pathNames,  0,  stackSize  -  1);  }  else  {  throw  new  IllegalArgumentException( "	  	non-compiled	[CE]  unclosed  string  literal	45	None	add
74	[BUG]  [BUGGY]  if(stackSize  >  0)  {  pathIndices  =  new  int[stackSize  -  1];  System.arraycopy(pathNames,  0,  pathNames,  0,  stackSize  -  1);  }  else  {  throw  new  IllegalArgumentException(   "   ");  }  if(stackSize  >  0)  {  pathIndices  =  new  int[stackSize  -  1];  System.arraycopy(pathNames,  0,  pathNames,  0,  stackSize  -  1);  }  else  {  throw  new  IllegalArgumentException(  [CE]  [FE]        IllegalArgumentException    [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {  popStack();      [BUGGY]  if(stackSize  >  0)  {  pathIndices  =  new  int[stackSize  -  1];  System.arraycopy(pathNames,  0,  pathNames,  0,  stackSize  -  1);  }  else  {  throw  new  IllegalArgumentException(   "   ");  }  if(stackSize  >  0)  {  pathIndices  =  new  int[stackSize  -  1];  System.arraycopy(pathNames,  0,  pathNames,  0,  stackSize  -  1);  }  else  {  throw  new  IllegalArgumentException(  [BUGGY]      }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	262	262	2	replace	if(stackSize    >    0)    {    pathIndices    =    new    int[stackSize    -    1];    System.arraycopy(pathNames,    0,    pathNames,    0,    stackSize    -    1);    }    else    {    throw    new    IllegalArgumentException(   "   ");    }    if(stackSize  >  0)  {  pathIndices  =  new  int[stackSize  -  1];  System.arraycopy(pathNames,  0,  pathNames,  0,  stackSize  -  1);  }  else  {  throw  new  IllegalArgumentException(	  	non-compiled	[CE]  	45	None	add
75	[BUG]  [BUGGY]  if(stackSize  >  0)  {  pathIndices  =  new  int[stackSize  -  1];  System.arraycopy(pathNames,  0,  pathNames,  0,  stackSize  -  1);  }  else  {  throw  new  IllegalArgumentException(   "   ");  }  if(stackSize  >  0)  {  pathIndices  =  new  int[stackSize  -  1];  System.arraycopy(pathNames,  0,  pathNames,  0,  stackSize  -  1);  }  else  {  throw  new  IllegalArgumentException( " ".);  }  [CE]  <identifier>  expected  [FE]          IllegalArgumentException    [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {  popStack();      [BUGGY]  if(stackSize  >  0)  {  pathIndices  =  new  int[stackSize  -  1];  System.arraycopy(pathNames,  0,  pathNames,  0,  stackSize  -  1);  }  else  {  throw  new  IllegalArgumentException(   "   ");  }  if(stackSize  >  0)  {  pathIndices  =  new  int[stackSize  -  1];  System.arraycopy(pathNames,  0,  pathNames,  0,  stackSize  -  1);  }  else  {  throw  new  IllegalArgumentException( " ".);  }  [BUGGY]      }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	262	262	2	replace	if(stackSize    >    0)    {    pathIndices    =    new    int[stackSize    -    1];    System.arraycopy(pathNames,    0,    pathNames,    0,    stackSize    -    1);    }    else    {    throw    new    IllegalArgumentException(   "   ");    }    if(stackSize  >  0)  {  pathIndices  =  new  int[stackSize  -  1];  System.arraycopy(pathNames,  0,  pathNames,  0,  stackSize  -  1);  }  else  {  throw  new  IllegalArgumentException( " ".);  }	  	non-compiled	[CE]  <identifier>  expected	45	None	add
76	[BUG]  [BUGGY]  [FE]  IllegalArgumentException  [FE]            IllegalArgumentException    [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {  popStack();      [BUGGY]  if(stackSize  >  0)  {  pathIndices  =  new  int[stackSize  -  1];  System.arraycopy(pathNames,  0,  pathNames,  0,  stackSize  -  1);  }  else  {  throw  new  IllegalArgumentException(   "   ");  }  if(stackSize  >  0)  {  pathIndices  =  new  int[stackSize  -  1];  System.arraycopy(pathNames,  0,  pathNames,  0,  stackSize  -  1);  }  else  {  throw  new  IllegalArgumentException( ". ");  }  [BUGGY]      }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	262	262	2	add	if(stackSize    >    0)    {    pathIndices    =    new    int[stackSize    -    1];    System.arraycopy(pathNames,    0,    pathNames,    0,    stackSize    -    1);    }    else    {    throw    new    IllegalArgumentException(   "   ");    }    if(stackSize  >  0)  {  pathIndices  =  new  int[stackSize  -  1];  System.arraycopy(pathNames,  0,  pathNames,  0,  stackSize  -  1);  }  else  {  throw  new  IllegalArgumentException( ". ");  }	  	compilable	  [FE]  IllegalArgumentException  	45	2	add
77	[BUG]  [BUGGY]  if(stackSize  >  0)  {  pathIndices  =  new  int[stackSize  -  1];  System.arraycopy(pathNames,  0,  pathNames,  0,  stackSize  -  1);  }  else  {  throw  new  IllegalArgumentException(   "   ");  }  if(stackSize  >  0)  {  pathIndices  =  new  int[stackSize  -  1];  System.arraycopy(pathNames,  0,  pathNames,  0,  stackSize  -  1);  }  else  {  throw  new  IllegalArgumentException( ". ");  }  [FE]  IllegalArgumentException  [FE]            IllegalArgumentException    [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {  popStack();      [BUGGY]  if(stackSize  >  0)  {  pathIndices  =  new  int[stackSize  -  1];  System.arraycopy(pathNames,  0,  pathNames,  0,  stackSize  -  1);  }  else  {  throw  new  IllegalArgumentException(   "   ");  }  if(stackSize  >  0)  {  pathIndices  =  new  int[stackSize  -  1];  System.arraycopy(pathNames,  0,  pathNames,  0,  stackSize  -  1);  }  else  {  throw  new  IllegalArgumentException( ". ");  }  [BUGGY]      }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	262	262	2	replace	if(stackSize    >    0)    {    pathIndices    =    new    int[stackSize    -    1];    System.arraycopy(pathNames,    0,    pathNames,    0,    stackSize    -    1);    }    else    {    throw    new    IllegalArgumentException(   "   ");    }    if(stackSize  >  0)  {  pathIndices  =  new  int[stackSize  -  1];  System.arraycopy(pathNames,  0,  pathNames,  0,  stackSize  -  1);  }  else  {  throw  new  IllegalArgumentException( ". ");  }	  	compilable	  [FE]  IllegalArgumentException  	45	2	add
78	[BUG]  [BUGGY]  [FE]  ArrayIndexOutOfBoundsException  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {  popStack();      [BUGGY]  pathNames[stackSize  -  1]  =     "null   "  +  JsonToken.END_OBJECT;  pathNames[stackSize  -  1]  =   "null   "  +  JsonToken.END_OBJECT;  [BUGGY]      }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	262	262	2	add	pathNames[stackSize    -    1]    =       "null   "    +    JsonToken.END_OBJECT;    pathNames[stackSize  -  1]  =   "null   "  +  JsonToken.END_OBJECT;	  	compilable	  [FE]  ArrayIndexOutOfBoundsException  	58	2	add
79	[BUG]  [BUGGY]  pathNames[stackSize  -  1]  =     "null   "  +  JsonToken.END_OBJECT;  pathNames[stackSize  -  1]  =   "null   "  +  JsonToken.END_OBJECT;  [FE]  ArrayIndexOutOfBoundsException  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {  popStack();      [BUGGY]  pathNames[stackSize  -  1]  =     "null   "  +  JsonToken.END_OBJECT;  pathNames[stackSize  -  1]  =   "null   "  +  JsonToken.END_OBJECT;  [BUGGY]      }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	262	262	2	replace	pathNames[stackSize    -    1]    =       "null   "    +    JsonToken.END_OBJECT;    pathNames[stackSize  -  1]  =   "null   "  +  JsonToken.END_OBJECT;	  	compilable	  [FE]  ArrayIndexOutOfBoundsException  	58	2	add
80	[BUG]  [BUGGY]  pathNames[stackSize  -  1]  =     "null   "  +  JsonToken.END_OBJECT;  PathIndices[stackSize  -  1]  =   "null   "  +  JsonToken.END_OBJECT;  [CE]  cannot  find  symbol  PathIndices  [FE]      ArrayIndexOutOfBoundsException    [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {  popStack();      [BUGGY]  pathNames[stackSize  -  1]  =     "null   "  +  JsonToken.END_OBJECT;  PathIndices[stackSize  -  1]  =   "null   "  +  JsonToken.END_OBJECT;  [BUGGY]      }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	262	262	2	replace	pathNames[stackSize    -    1]    =       "null   "    +    JsonToken.END_OBJECT;    PathIndices[stackSize  -  1]  =   "null   "  +  JsonToken.END_OBJECT;	  	non-compiled	[CE]  cannot  find  symbol  PathIndices	58	None	add
81	[BUG]  [BUGGY]  pathNames[stackSize  -  1]  =     "null   "  +  JsonToken.END_OBJECT;  paths[stackSize  -  1]  =   "null   "  +  JsonToken.END_OBJECT;  [CE]  cannot  find  symbol  paths  [FE]        ArrayIndexOutOfBoundsException    [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {  popStack();      [BUGGY]  pathNames[stackSize  -  1]  =     "null   "  +  JsonToken.END_OBJECT;  paths[stackSize  -  1]  =   "null   "  +  JsonToken.END_OBJECT;  [BUGGY]      }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	262	262	2	replace	pathNames[stackSize    -    1]    =       "null   "    +    JsonToken.END_OBJECT;    paths[stackSize  -  1]  =   "null   "  +  JsonToken.END_OBJECT;	  	non-compiled	[CE]  cannot  find  symbol  paths	58	None	add
82	[BUG]  [BUGGY]  pathNames[stackSize  -  1]  =     "null   "  +  JsonToken.END_OBJECT;  pathNames[stackSize  -  1]  =   "null ",  +  JsonToken.END_OBJECT;  [CE]  [FE]          ArrayIndexOutOfBoundsException    [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {  popStack();      [BUGGY]  pathNames[stackSize  -  1]  =     "null   "  +  JsonToken.END_OBJECT;  pathNames[stackSize  -  1]  =   "null ",  +  JsonToken.END_OBJECT;  [BUGGY]      }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	262	262	2	replace	pathNames[stackSize    -    1]    =       "null   "    +    JsonToken.END_OBJECT;    pathNames[stackSize  -  1]  =   "null ",  +  JsonToken.END_OBJECT;	  	non-compiled	[CE]  	58	None	add
83	[BUG]  [BUGGY]  PathIndexOutOfBoundsException  e  =  new  PathIndexOutOfBoundsException();  pathNames[stackSize  -  1]  =  null;  [CE]  cannot  find  symbol  [FE]            ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {  popStack();      [BUGGY]  PathIndexOutOfBoundsException  e  =  new  PathIndexOutOfBoundsException();  pathNames[stackSize  -  1]  =  null;  [BUGGY]      }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	262	262	2	replace	PathIndexOutOfBoundsException  e  =  new  PathIndexOutOfBoundsException();  pathNames[stackSize  -  1]  =  null;	  pathNames[stackSize    -    1]    =    null;    PathIndexOutOfBoundsException    e    =    new    PathIndexOutOfBoundsException();    pathNames[stackSize    -    1]    =    null;    	non-compiled	[CE]  cannot  find  symbol	29	None	replace
84	[BUG]  [BUGGY]  pathNames[stackSize  -  1]  =  new  PathIndexOutOfBoundsException();  pathNames[stackSize  -  1]  =  null;  [CE]  cannot  find  symbol  [FE]              ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {  popStack();      [BUGGY]  pathNames[stackSize  -  1]  =  new  PathIndexOutOfBoundsException();  pathNames[stackSize  -  1]  =  null;  [BUGGY]      }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	262	262	2	replace	pathNames[stackSize  -  1]  =  new  PathIndexOutOfBoundsException();  pathNames[stackSize  -  1]  =  null;	  pathNames[stackSize    -    1]    =    null;    PathIndexOutOfBoundsException    e    =    new    PathIndexOutOfBoundsException();    pathNames[stackSize    -    1]    =    null;    	non-compiled	[CE]  cannot  find  symbol	29	None	replace
85	[BUG]  [BUGGY]  pathIndexOutOfBoundsException  e  =  new  PathIndexOutOfBoundsException();  pathNames[stackSize  -  1]  =  null;  [CE]  cannot  find  symbol  [FE]                ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {  popStack();      [BUGGY]  pathIndexOutOfBoundsException  e  =  new  PathIndexOutOfBoundsException();  pathNames[stackSize  -  1]  =  null;  [BUGGY]      }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	262	262	2	replace	pathIndexOutOfBoundsException  e  =  new  PathIndexOutOfBoundsException();  pathNames[stackSize  -  1]  =  null;	  pathNames[stackSize    -    1]    =    null;    PathIndexOutOfBoundsException    e    =    new    PathIndexOutOfBoundsException();    pathNames[stackSize    -    1]    =    null;    	non-compiled	[CE]  cannot  find  symbol	29	None	replace
86	[BUG]  [BUGGY]  [FE]  ArrayIndexOutOfBoundsException  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {  popStack();      [BUGGY]  pathNames[stackSize  -  2]  =  null;  if(stackSize  >  0)  {  pathNames[stackSize  -  1]  =  null;  }  else  {  popStack();  pathNames[stackSize  -  1]  =  null;  }  [BUGGY]      }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	262	262	2	add	pathNames[stackSize  -  2]  =  null;  if(stackSize  >  0)  {  pathNames[stackSize  -  1]  =  null;  }  else  {  popStack();  pathNames[stackSize  -  1]  =  null;  }	  pathNames[stackSize    -    1]    =    null;    if(stackSize    >    0)    {    pathNames[stackSize    -    1]    =    null;    }    else    {    popStack();    pathNames[stackSize    -    1]    =    null;    }    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	66	2	replace
87	[BUG]  [BUGGY]  pathNames[stackSize  -  2]  =  null;  if(stackSize  >  0)  {  pathNames[stackSize  -  1]  =  null;  }  else  {  popStack();  pathNames[stackSize  -  1]  =  null;  }  [FE]  ArrayIndexOutOfBoundsException  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {  popStack();      [BUGGY]  pathNames[stackSize  -  2]  =  null;  if(stackSize  >  0)  {  pathNames[stackSize  -  1]  =  null;  }  else  {  popStack();  pathNames[stackSize  -  1]  =  null;  }  [BUGGY]      }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	262	262	2	replace	pathNames[stackSize  -  2]  =  null;  if(stackSize  >  0)  {  pathNames[stackSize  -  1]  =  null;  }  else  {  popStack();  pathNames[stackSize  -  1]  =  null;  }	  pathNames[stackSize    -    1]    =    null;    if(stackSize    >    0)    {    pathNames[stackSize    -    1]    =    null;    }    else    {    popStack();    pathNames[stackSize    -    1]    =    null;    }    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	66	2	replace
88	[BUG]  [BUGGY]  pathIndices[stackSize  -  1]  =  null;  if(stackSize  >  0)  {  pathNames[stackSize  -  1]  =  null;  }  else  {  popStack();  pathNames[stackSize  -  1]  =  null;  }  [CE]  incompatible  types  [FE]      ArrayIndexOutOfBoundsException    [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {  popStack();      [BUGGY]  pathIndices[stackSize  -  1]  =  null;  if(stackSize  >  0)  {  pathNames[stackSize  -  1]  =  null;  }  else  {  popStack();  pathNames[stackSize  -  1]  =  null;  }  [BUGGY]      }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	262	262	2	replace	pathIndices[stackSize  -  1]  =  null;  if(stackSize  >  0)  {  pathNames[stackSize  -  1]  =  null;  }  else  {  popStack();  pathNames[stackSize  -  1]  =  null;  }	  pathNames[stackSize    -    1]    =    null;    if(stackSize    >    0)    {    pathNames[stackSize    -    1]    =    null;    }    else    {    popStack();    pathNames[stackSize    -    1]    =    null;    }    	non-compiled	[CE]  incompatible  types	66	None	replace
89	[BUG]  [BUGGY]  pathNames[stackSize  -  1]  =  null;  if(stackSize  >  0)  {  pathNames[stackSize  -  1]  =  null;  }  else  {  popStack();  pathNames[stackSize  -  1]  =  nu  [CE]  ';'  expected  [FE]        ArrayIndexOutOfBoundsException    [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {  popStack();      [BUGGY]  pathNames[stackSize  -  1]  =  null;  if(stackSize  >  0)  {  pathNames[stackSize  -  1]  =  null;  }  else  {  popStack();  pathNames[stackSize  -  1]  =  nu  [BUGGY]      }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	262	262	2	replace	pathNames[stackSize  -  1]  =  null;  if(stackSize  >  0)  {  pathNames[stackSize  -  1]  =  null;  }  else  {  popStack();  pathNames[stackSize  -  1]  =  nu	  pathNames[stackSize    -    1]    =    null;    if(stackSize    >    0)    {    pathNames[stackSize    -    1]    =    null;    }    else    {    popStack();    pathNames[stackSize    -    1]    =    null;    }    	non-compiled	[CE]  ';'  expected	66	None	replace
90	[BUG]  [BUGGY]  [FE]  ArrayIndexOutOfBoundsException  [FE]          ArrayIndexOutOfBoundsException    [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {  popStack();      [BUGGY]  pathNames[stackSize  -  2]  =  null;  if(stackSize  >  0)  {  pathNames[stackSize  -  2]  =  null;  }  else  {  popStack();  pathNames[stackSize  -  1]  =  null;  }  [BUGGY]      }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	262	262	2	add	pathNames[stackSize  -  2]  =  null;  if(stackSize  >  0)  {  pathNames[stackSize  -  2]  =  null;  }  else  {  popStack();  pathNames[stackSize  -  1]  =  null;  }	  pathNames[stackSize    -    1]    =    null;    if(stackSize    >    0)    {    pathNames[stackSize    -    1]    =    null;    }    else    {    popStack();    pathNames[stackSize    -    1]    =    null;    }    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	66	2	replace
91	[BUG]  [BUGGY]  pathNames[stackSize  -  2]  =  null;  if(stackSize  >  0)  {  pathNames[stackSize  -  2]  =  null;  }  else  {  popStack();  pathNames[stackSize  -  1]  =  null;  }  [FE]  ArrayIndexOutOfBoundsException  [FE]          ArrayIndexOutOfBoundsException    [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {  popStack();      [BUGGY]  pathNames[stackSize  -  2]  =  null;  if(stackSize  >  0)  {  pathNames[stackSize  -  2]  =  null;  }  else  {  popStack();  pathNames[stackSize  -  1]  =  null;  }  [BUGGY]      }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	262	262	2	replace	pathNames[stackSize  -  2]  =  null;  if(stackSize  >  0)  {  pathNames[stackSize  -  2]  =  null;  }  else  {  popStack();  pathNames[stackSize  -  1]  =  null;  }	  pathNames[stackSize    -    1]    =    null;    if(stackSize    >    0)    {    pathNames[stackSize    -    1]    =    null;    }    else    {    popStack();    pathNames[stackSize    -    1]    =    null;    }    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	66	2	replace
92	[BUG]  [BUGGY]  pathNames[stackSize  -  1]  =  JsonToken.END_OBJECT;  [CE]  incompatible  types  [FE]                  ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {  popStack();      [BUGGY]  pathNames[stackSize  -  1]  =  JsonToken.END_OBJECT;  [BUGGY]      }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	262	262	2	replace	pathNames[stackSize  -  1]  =  JsonToken.END_OBJECT;	  pathNames[stackSize    -    1]    =    JsonToken.VALUE_EMBEDDED;    	non-compiled	[CE]  incompatible  types	54	None	replace
93	[BUG]  [BUGGY]  pathNames[stackSize  -  1]  = "null ";  }  else  {  popStack();  }  [CE]  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {  popStack();      [BUGGY]  pathNames[stackSize  -  1]  = "null ";  }  else  {  popStack();  }  [BUGGY]      }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	262	262	2	replace	pathNames[stackSize  -  1]  = "null ";  }  else  {  popStack();  }	  if(stackSize    >    0)    {    pathNames[stackSize    -    1]    =       "null   ";    }    else    {    popStack();    }    	non-compiled	[CE]  	18	None	replace
94	[BUG]  [BUGGY]  pathNames[stackSize  -  1]  =   "null "  +  JsonToken.VALUE_NULL;  [CE]  cannot  find  symbol  VALUE_NULL  [FE]                  ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {  popStack();      [BUGGY]  pathNames[stackSize  -  1]  =   "null "  +  JsonToken.VALUE_NULL;  [BUGGY]      }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	262	262	2	replace	pathNames[stackSize  -  1]  =   "null "  +  JsonToken.VALUE_NULL;	  pathNames[stackSize    -    1]    =       "null   "    +    JsonToken.VALUE_CLOSED;    	non-compiled	[CE]  cannot  find  symbol  VALUE_NULL	89	None	replace
95	[BUG]  [BUGGY]  pathNames[stackSize  -  1]  =   "null "  +  JsonToken.VALUE_FALSE;  [CE]  cannot  find  symbol  VALUE_FALSE  [FE]                    ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {  popStack();      [BUGGY]  pathNames[stackSize  -  1]  =   "null "  +  JsonToken.VALUE_FALSE;  [BUGGY]      }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	262	262	2	replace	pathNames[stackSize  -  1]  =   "null "  +  JsonToken.VALUE_FALSE;	  pathNames[stackSize    -    1]    =       "null   "    +    JsonToken.VALUE_CLOSED;    	non-compiled	[CE]  cannot  find  symbol  VALUE_FALSE	89	None	replace
96	[BUG]  [BUGGY]  [FE]  NegativeArraySizeException  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {  popStack();      [BUGGY]  pathIndices  =  new  int[stackSize  -  1];  System.arraycopy(pathNames,  0,  pathNames,  1,  stackSize  -  1);  [BUGGY]      }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	262	262	2	add	pathIndices  =  new  int[stackSize  -  1];  System.arraycopy(pathNames,  0,  pathNames,  1,  stackSize  -  1);	          if(stackSize    >    0)    {    pathIndices    =    new    int[stackSize    -    1];    System.arraycopy(pathNames,    0,    pathNames,    1,    stackSize    -    1);    }    	compilable	  [FE]  NegativeArraySizeException  	64	2	replace
97	[BUG]  [BUGGY]  pathIndices  =  new  int[stackSize  -  1];  System.arraycopy(pathNames,  0,  pathNames,  1,  stackSize  -  1);  [FE]  NegativeArraySizeException  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {  popStack();      [BUGGY]  pathIndices  =  new  int[stackSize  -  1];  System.arraycopy(pathNames,  0,  pathNames,  1,  stackSize  -  1);  [BUGGY]      }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	262	262	2	replace	pathIndices  =  new  int[stackSize  -  1];  System.arraycopy(pathNames,  0,  pathNames,  1,  stackSize  -  1);	          if(stackSize    >    0)    {    pathIndices    =    new    int[stackSize    -    1];    System.arraycopy(pathNames,    0,    pathNames,    1,    stackSize    -    1);    }    	compilable	  [FE]  NegativeArraySizeException  	64	2	replace
98	[BUG]  [BUGGY]  Path[]  pathIndices  =  new  Path[stackSize  -  1];  System.arraycopy(pathNames,  0,  pathNames,  1,  stackSize  -  1);  [CE]  cannot  find  symbol  [FE]      ArrayIndexOutOfBoundsException    [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {  popStack();      [BUGGY]  Path[]  pathIndices  =  new  Path[stackSize  -  1];  System.arraycopy(pathNames,  0,  pathNames,  1,  stackSize  -  1);  [BUGGY]      }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	262	262	2	replace	Path[]  pathIndices  =  new  Path[stackSize  -  1];  System.arraycopy(pathNames,  0,  pathNames,  1,  stackSize  -  1);	          if(stackSize    >    0)    {    pathIndices    =    new    int[stackSize    -    1];    System.arraycopy(pathNames,    0,    pathNames,    1,    stackSize    -    1);    }    	non-compiled	[CE]  cannot  find  symbol	64	None	replace
99	[BUG]  [BUGGY]  [FE]  ArrayIndexOutOfBoundsException  [FE]        ArrayIndexOutOfBoundsException    [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {  popStack();      [BUGGY]  pathIndices  =  new  int[pathNames.length  -  1];  System.arraycopy(pathNames,  0,  pathNames,  1,  stackSize  -  1);  [BUGGY]      }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	262	262	2	add	pathIndices  =  new  int[pathNames.length  -  1];  System.arraycopy(pathNames,  0,  pathNames,  1,  stackSize  -  1);	          if(stackSize    >    0)    {    pathIndices    =    new    int[stackSize    -    1];    System.arraycopy(pathNames,    0,    pathNames,    1,    stackSize    -    1);    }    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	64	2	replace
100	[BUG]  [BUGGY]  pathIndices  =  new  int[pathNames.length  -  1];  System.arraycopy(pathNames,  0,  pathNames,  1,  stackSize  -  1);  [FE]  ArrayIndexOutOfBoundsException  [FE]        ArrayIndexOutOfBoundsException    [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {  popStack();      [BUGGY]  pathIndices  =  new  int[pathNames.length  -  1];  System.arraycopy(pathNames,  0,  pathNames,  1,  stackSize  -  1);  [BUGGY]      }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	262	262	2	replace	pathIndices  =  new  int[pathNames.length  -  1];  System.arraycopy(pathNames,  0,  pathNames,  1,  stackSize  -  1);	          if(stackSize    >    0)    {    pathIndices    =    new    int[stackSize    -    1];    System.arraycopy(pathNames,    0,    pathNames,    1,    stackSize    -    1);    }    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	64	2	replace
101	[BUG]  [BUGGY]  [FE]  ArrayIndexOutOfBoundsException  [FE]          ArrayIndexOutOfBoundsException    [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {  popStack();      [BUGGY]  if(stackSize  >  0)  {  pathIndices  =  new  int[pathNames.length  -  1];  System.arraycopy(pathNames,  0,  pathNames,  1,  stackSize  -  1);  }  [BUGGY]      }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	262	262	2	add	if(stackSize  >  0)  {  pathIndices  =  new  int[pathNames.length  -  1];  System.arraycopy(pathNames,  0,  pathNames,  1,  stackSize  -  1);  }	          if(stackSize    >    0)    {    pathIndices    =    new    int[stackSize    -    1];    System.arraycopy(pathNames,    0,    pathNames,    1,    stackSize    -    1);    }    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	64	2	replace
102	[BUG]  [BUGGY]  if(stackSize  >  0)  {  pathIndices  =  new  int[pathNames.length  -  1];  System.arraycopy(pathNames,  0,  pathNames,  1,  stackSize  -  1);  }  [FE]  ArrayIndexOutOfBoundsException  [FE]          ArrayIndexOutOfBoundsException    [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {  popStack();      [BUGGY]  if(stackSize  >  0)  {  pathIndices  =  new  int[pathNames.length  -  1];  System.arraycopy(pathNames,  0,  pathNames,  1,  stackSize  -  1);  }  [BUGGY]      }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	262	262	2	replace	if(stackSize  >  0)  {  pathIndices  =  new  int[pathNames.length  -  1];  System.arraycopy(pathNames,  0,  pathNames,  1,  stackSize  -  1);  }	          if(stackSize    >    0)    {    pathIndices    =    new    int[stackSize    -    1];    System.arraycopy(pathNames,    0,    pathNames,    1,    stackSize    -    1);    }    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	64	2	replace
103	[BUG]  [BUGGY]  pathIndices  =  new  int[pathSize  -  1];  System.arraycopy(pathNames,  0,  pathNames,  1,  stackSize  -  1);  [CE]  cannot  find  symbol  pathSize  [FE]            ArrayIndexOutOfBoundsException    [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {  popStack();      [BUGGY]  pathIndices  =  new  int[pathSize  -  1];  System.arraycopy(pathNames,  0,  pathNames,  1,  stackSize  -  1);  [BUGGY]      }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	262	262	2	replace	pathIndices  =  new  int[pathSize  -  1];  System.arraycopy(pathNames,  0,  pathNames,  1,  stackSize  -  1);	          if(stackSize    >    0)    {    pathIndices    =    new    int[stackSize    -    1];    System.arraycopy(pathNames,    0,    pathNames,    1,    stackSize    -    1);    }    	non-compiled	[CE]  cannot  find  symbol  pathSize	64	None	replace
104	[BUG]  [BUGGY]  PathIndexOutOfBoundsException  e  =  new  PathIndexOutOfBoundsException( " "));  pathNames[stackSize  -  1]  =  null;  [CE]  [FE]                ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {  popStack();      [BUGGY]  PathIndexOutOfBoundsException  e  =  new  PathIndexOutOfBoundsException( " "));  pathNames[stackSize  -  1]  =  null;  [BUGGY]      }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	262	262	2	replace	PathIndexOutOfBoundsException  e  =  new  PathIndexOutOfBoundsException( " "));  pathNames[stackSize  -  1]  =  null;	  pathNames[stackSize    -    1]    =    null;    PathIndexOutOfBoundsException    e    =    new    PathIndexOutOfBoundsException(   "   "));    pathNames[stackSize    -    1]    =    null;    	non-compiled	[CE]  	31	None	replace
105	[BUG]  [BUGGY]  pathIndexOutOfBoundsException  e  =  new  PathIndexOutOfBoundsException( " "));  pathNames[stackSize  -  1]  =  null;  [CE]  [FE]                  ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {  popStack();      [BUGGY]  pathIndexOutOfBoundsException  e  =  new  PathIndexOutOfBoundsException( " "));  pathNames[stackSize  -  1]  =  null;  [BUGGY]      }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	262	262	2	replace	pathIndexOutOfBoundsException  e  =  new  PathIndexOutOfBoundsException( " "));  pathNames[stackSize  -  1]  =  null;	  pathNames[stackSize    -    1]    =    null;    PathIndexOutOfBoundsException    e    =    new    PathIndexOutOfBoundsException(   "   "));    pathNames[stackSize    -    1]    =    null;    	non-compiled	[CE]  	31	None	replace
106	[BUG]  [BUGGY]  pathNames[stackSize  -  1]  =  new  PathIndexOutOfBoundsException( " "));  pathNames[stackSize  -  1]  =  null;  [CE]  [FE]                    ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {  popStack();      [BUGGY]  pathNames[stackSize  -  1]  =  new  PathIndexOutOfBoundsException( " "));  pathNames[stackSize  -  1]  =  null;  [BUGGY]      }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	262	262	2	replace	pathNames[stackSize  -  1]  =  new  PathIndexOutOfBoundsException( " "));  pathNames[stackSize  -  1]  =  null;	  pathNames[stackSize    -    1]    =    null;    PathIndexOutOfBoundsException    e    =    new    PathIndexOutOfBoundsException(   "   "));    pathNames[stackSize    -    1]    =    null;    	non-compiled	[CE]  	31	None	replace
107	[BUG]  [BUGGY]  PathIndexOutOfBoundsException  e  =  new  PathIndexOutOfBoundsException(String.valueOf(result));  pathNames[stackSize  -  1]  =  null;  [CE]  cannot  find  symbol  [FE]        ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {  popStack();      [BUGGY]  PathIndexOutOfBoundsException  e  =  new  PathIndexOutOfBoundsException(String.valueOf(result));  pathNames[stackSize  -  1]  =  null;  [BUGGY]      }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	262	262	2	replace	PathIndexOutOfBoundsException  e  =  new  PathIndexOutOfBoundsException(String.valueOf(result));  pathNames[stackSize  -  1]  =  null;	  pathNames[stackSize    -    1]    =    null;    PathIndexOutOfBoundsException    e    =    new    PathIndexOutOfBoundsException(String.valueOf(result));    pathNames[stackSize    -    1]    =    null;    	non-compiled	[CE]  cannot  find  symbol	55	None	replace
108	[BUG]  [BUGGY]  pathNames[0]  =  null;  PathIndexOutOfBoundsException  e  =  new  PathIndexOutOfBoundsException(String.valueOf(result));  pathNames[stackSize  -  1]  =  null;  [CE]  cannot  find  symbol  [FE]          ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {  popStack();      [BUGGY]  pathNames[0]  =  null;  PathIndexOutOfBoundsException  e  =  new  PathIndexOutOfBoundsException(String.valueOf(result));  pathNames[stackSize  -  1]  =  null;  [BUGGY]      }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	262	262	2	replace	pathNames[0]  =  null;  PathIndexOutOfBoundsException  e  =  new  PathIndexOutOfBoundsException(String.valueOf(result));  pathNames[stackSize  -  1]  =  null;	  pathNames[stackSize    -    1]    =    null;    PathIndexOutOfBoundsException    e    =    new    PathIndexOutOfBoundsException(String.valueOf(result));    pathNames[stackSize    -    1]    =    null;    	non-compiled	[CE]  cannot  find  symbol	55	None	replace
109	[BUG]  [BUGGY]  pathNames[stackSize  -  1]  =  new  PathIndexOutOfBoundsException(String.valueOf(result));  pathNames[stackSize  -  1]  =  null;  [CE]  cannot  find  symbol  [FE]            ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {  popStack();      [BUGGY]  pathNames[stackSize  -  1]  =  new  PathIndexOutOfBoundsException(String.valueOf(result));  pathNames[stackSize  -  1]  =  null;  [BUGGY]      }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	262	262	2	replace	pathNames[stackSize  -  1]  =  new  PathIndexOutOfBoundsException(String.valueOf(result));  pathNames[stackSize  -  1]  =  null;	  pathNames[stackSize    -    1]    =    null;    PathIndexOutOfBoundsException    e    =    new    PathIndexOutOfBoundsException(String.valueOf(result));    pathNames[stackSize    -    1]    =    null;    	non-compiled	[CE]  cannot  find  symbol	55	None	replace
110	[BUG]  [BUGGY]  pathNames[stackSize  -  1]  =  null;  pathIndexOutOfBoundsException  e  =  new  PathIndexOutOfBoundsException(String.valueOf(result));  pathNames[stackSize  -  1]  =  null;  [CE]  cannot  find  symbol  [FE]              ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {  popStack();      [BUGGY]  pathNames[stackSize  -  1]  =  null;  pathIndexOutOfBoundsException  e  =  new  PathIndexOutOfBoundsException(String.valueOf(result));  pathNames[stackSize  -  1]  =  null;  [BUGGY]      }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	262	262	2	replace	pathNames[stackSize  -  1]  =  null;  pathIndexOutOfBoundsException  e  =  new  PathIndexOutOfBoundsException(String.valueOf(result));  pathNames[stackSize  -  1]  =  null;	  pathNames[stackSize    -    1]    =    null;    PathIndexOutOfBoundsException    e    =    new    PathIndexOutOfBoundsException(String.valueOf(result));    pathNames[stackSize    -    1]    =    null;    	non-compiled	[CE]  cannot  find  symbol	55	None	replace
111	[BUG]  [BUGGY]  [FE]  ArrayIndexOutOfBoundsException  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {  popStack();      [BUGGY]  pathNames[stackSize  -  2]  =  null;  if(stackSize  >  0)  {  pathNames[stackSize  -  1]  =  null;  }  else  {  popStack();  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	262	262	2	add	pathNames[stackSize  -  2]  =  null;  if(stackSize  >  0)  {  pathNames[stackSize  -  1]  =  null;  }  else  {  popStack();  throw  new  IllegalArgumentException( " ");  }	  pathNames[stackSize    -    1]    =    null;    if(stackSize    >    0)    {    pathNames[stackSize    -    1]    =    null;    }    else    {    popStack();    throw    new    IllegalArgumentException(   "   ");    }    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	72	2	replace
112	[BUG]  [BUGGY]  pathNames[stackSize  -  2]  =  null;  if(stackSize  >  0)  {  pathNames[stackSize  -  1]  =  null;  }  else  {  popStack();  throw  new  IllegalArgumentException( " ");  }  [FE]  ArrayIndexOutOfBoundsException  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {  popStack();      [BUGGY]  pathNames[stackSize  -  2]  =  null;  if(stackSize  >  0)  {  pathNames[stackSize  -  1]  =  null;  }  else  {  popStack();  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	262	262	2	replace	pathNames[stackSize  -  2]  =  null;  if(stackSize  >  0)  {  pathNames[stackSize  -  1]  =  null;  }  else  {  popStack();  throw  new  IllegalArgumentException( " ");  }	  pathNames[stackSize    -    1]    =    null;    if(stackSize    >    0)    {    pathNames[stackSize    -    1]    =    null;    }    else    {    popStack();    throw    new    IllegalArgumentException(   "   ");    }    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	72	2	replace
113	[BUG]  [BUGGY]  [FE]  ArrayIndexOutOfBoundsException  [FE]      ArrayIndexOutOfBoundsException    [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {  popStack();      [BUGGY]  pathNames[stackSize  -  2]  =  null;  if(stackSize  >  0)  {  pathNames[stackSize  -  2]  =  null;  }  else  {  popStack();  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	262	262	2	add	pathNames[stackSize  -  2]  =  null;  if(stackSize  >  0)  {  pathNames[stackSize  -  2]  =  null;  }  else  {  popStack();  throw  new  IllegalArgumentException( " ");  }	  pathNames[stackSize    -    1]    =    null;    if(stackSize    >    0)    {    pathNames[stackSize    -    1]    =    null;    }    else    {    popStack();    throw    new    IllegalArgumentException(   "   ");    }    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	72	2	replace
114	[BUG]  [BUGGY]  pathNames[stackSize  -  2]  =  null;  if(stackSize  >  0)  {  pathNames[stackSize  -  2]  =  null;  }  else  {  popStack();  throw  new  IllegalArgumentException( " ");  }  [FE]  ArrayIndexOutOfBoundsException  [FE]      ArrayIndexOutOfBoundsException    [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {  popStack();      [BUGGY]  pathNames[stackSize  -  2]  =  null;  if(stackSize  >  0)  {  pathNames[stackSize  -  2]  =  null;  }  else  {  popStack();  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	262	262	2	replace	pathNames[stackSize  -  2]  =  null;  if(stackSize  >  0)  {  pathNames[stackSize  -  2]  =  null;  }  else  {  popStack();  throw  new  IllegalArgumentException( " ");  }	  pathNames[stackSize    -    1]    =    null;    if(stackSize    >    0)    {    pathNames[stackSize    -    1]    =    null;    }    else    {    popStack();    throw    new    IllegalArgumentException(   "   ");    }    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	72	2	replace
115	[BUG]  [BUGGY]  pathIndices[stackSize  -  1]  =  null;  if(stackSize  >  0)  {  pathNames[stackSize  -  1]  =  null;  }  else  {  popStack();  throw  new  IllegalArgumentException( " ");  }  [CE]  incompatible  types  [FE]        ArrayIndexOutOfBoundsException    [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {  popStack();      [BUGGY]  pathIndices[stackSize  -  1]  =  null;  if(stackSize  >  0)  {  pathNames[stackSize  -  1]  =  null;  }  else  {  popStack();  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	262	262	2	replace	pathIndices[stackSize  -  1]  =  null;  if(stackSize  >  0)  {  pathNames[stackSize  -  1]  =  null;  }  else  {  popStack();  throw  new  IllegalArgumentException( " ");  }	  pathNames[stackSize    -    1]    =    null;    if(stackSize    >    0)    {    pathNames[stackSize    -    1]    =    null;    }    else    {    popStack();    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  incompatible  types	72	None	replace
116	[BUG]  [BUGGY]  [FE]  ArrayIndexOutOfBoundsException  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {  popStack();      [BUGGY]  if(stackSize  >  0)  {  int[]  result  =  new  int[stackSize  -  1];  System.arraycopy(stack,  0,  pathNames,  0,  stackSize  -  1);  }  if(stackSize  >  0)  {  int[]  result  =  new  int[stackSize  -  1];  System.arraycopy(stack,  0,  pathNames,  0,  stackSize  -  1);  }  [BUGGY]      }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	262	262	2	add	if(stackSize    >    0)    {    int[]    result    =    new    int[stackSize    -    1];    System.arraycopy(stack,    0,    pathNames,    0,    stackSize    -    1);    }    if(stackSize  >  0)  {  int[]  result  =  new  int[stackSize  -  1];  System.arraycopy(stack,  0,  pathNames,  0,  stackSize  -  1);  }	  	compilable	  [FE]  ArrayIndexOutOfBoundsException  	80	2	add
117	[BUG]  [BUGGY]  if(stackSize  >  0)  {  int[]  result  =  new  int[stackSize  -  1];  System.arraycopy(stack,  0,  pathNames,  0,  stackSize  -  1);  }  if(stackSize  >  0)  {  int[]  result  =  new  int[stackSize  -  1];  System.arraycopy(stack,  0,  pathNames,  0,  stackSize  -  1);  }  [FE]  ArrayIndexOutOfBoundsException  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {  popStack();      [BUGGY]  if(stackSize  >  0)  {  int[]  result  =  new  int[stackSize  -  1];  System.arraycopy(stack,  0,  pathNames,  0,  stackSize  -  1);  }  if(stackSize  >  0)  {  int[]  result  =  new  int[stackSize  -  1];  System.arraycopy(stack,  0,  pathNames,  0,  stackSize  -  1);  }  [BUGGY]      }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	262	262	2	replace	if(stackSize    >    0)    {    int[]    result    =    new    int[stackSize    -    1];    System.arraycopy(stack,    0,    pathNames,    0,    stackSize    -    1);    }    if(stackSize  >  0)  {  int[]  result  =  new  int[stackSize  -  1];  System.arraycopy(stack,  0,  pathNames,  0,  stackSize  -  1);  }	  	compilable	  [FE]  ArrayIndexOutOfBoundsException  	80	2	add
118	[BUG]  [BUGGY]  [FE]  ArrayIndexOutOfBoundsException  [FE]      ArrayIndexOutOfBoundsException    [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {  popStack();      [BUGGY]  if(stackSize  >  0)  {  int[]  result  =  new  int[stackSize  -  1];  System.arraycopy(stack,  0,  pathNames,  0,  stackSize  -  1);  }  if(stackSize  >  0)  {  int[]  result  =  new  int[stackSize  -  1];  System.arraycopy(result,  0,  pathNames,  0,  stackSize  -  1);  }  [BUGGY]      }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	262	262	2	add	if(stackSize    >    0)    {    int[]    result    =    new    int[stackSize    -    1];    System.arraycopy(stack,    0,    pathNames,    0,    stackSize    -    1);    }    if(stackSize  >  0)  {  int[]  result  =  new  int[stackSize  -  1];  System.arraycopy(result,  0,  pathNames,  0,  stackSize  -  1);  }	  	compilable	  [FE]  ArrayIndexOutOfBoundsException  	80	2	add
119	[BUG]  [BUGGY]  if(stackSize  >  0)  {  int[]  result  =  new  int[stackSize  -  1];  System.arraycopy(stack,  0,  pathNames,  0,  stackSize  -  1);  }  if(stackSize  >  0)  {  int[]  result  =  new  int[stackSize  -  1];  System.arraycopy(result,  0,  pathNames,  0,  stackSize  -  1);  }  [FE]  ArrayIndexOutOfBoundsException  [FE]      ArrayIndexOutOfBoundsException    [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {  popStack();      [BUGGY]  if(stackSize  >  0)  {  int[]  result  =  new  int[stackSize  -  1];  System.arraycopy(stack,  0,  pathNames,  0,  stackSize  -  1);  }  if(stackSize  >  0)  {  int[]  result  =  new  int[stackSize  -  1];  System.arraycopy(result,  0,  pathNames,  0,  stackSize  -  1);  }  [BUGGY]      }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	262	262	2	replace	if(stackSize    >    0)    {    int[]    result    =    new    int[stackSize    -    1];    System.arraycopy(stack,    0,    pathNames,    0,    stackSize    -    1);    }    if(stackSize  >  0)  {  int[]  result  =  new  int[stackSize  -  1];  System.arraycopy(result,  0,  pathNames,  0,  stackSize  -  1);  }	  	compilable	  [FE]  ArrayIndexOutOfBoundsException  	80	2	add
120	[BUG]  [BUGGY]  [FE]  ArrayIndexOutOfBoundsException  [FE]        ArrayIndexOutOfBoundsException    [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {  popStack();      [BUGGY]  if(stackSize  >  0)  {  int[]  result  =  new  int[stackSize  -  1];  System.arraycopy(stack,  0,  pathNames,  0,  stackSize  -  1);  }  if(stackSize  >  0)  {  int[]  result  =  new  int[stackSize  -  1];  System.arraycopy(pathNames,  0,  result,  0,  stackSize  -  1);  }  [BUGGY]      }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	262	262	2	add	if(stackSize    >    0)    {    int[]    result    =    new    int[stackSize    -    1];    System.arraycopy(stack,    0,    pathNames,    0,    stackSize    -    1);    }    if(stackSize  >  0)  {  int[]  result  =  new  int[stackSize  -  1];  System.arraycopy(pathNames,  0,  result,  0,  stackSize  -  1);  }	  	compilable	  [FE]  ArrayIndexOutOfBoundsException  	80	2	add
121	[BUG]  [BUGGY]  if(stackSize  >  0)  {  int[]  result  =  new  int[stackSize  -  1];  System.arraycopy(stack,  0,  pathNames,  0,  stackSize  -  1);  }  if(stackSize  >  0)  {  int[]  result  =  new  int[stackSize  -  1];  System.arraycopy(pathNames,  0,  result,  0,  stackSize  -  1);  }  [FE]  ArrayIndexOutOfBoundsException  [FE]        ArrayIndexOutOfBoundsException    [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {  popStack();      [BUGGY]  if(stackSize  >  0)  {  int[]  result  =  new  int[stackSize  -  1];  System.arraycopy(stack,  0,  pathNames,  0,  stackSize  -  1);  }  if(stackSize  >  0)  {  int[]  result  =  new  int[stackSize  -  1];  System.arraycopy(pathNames,  0,  result,  0,  stackSize  -  1);  }  [BUGGY]      }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	262	262	2	replace	if(stackSize    >    0)    {    int[]    result    =    new    int[stackSize    -    1];    System.arraycopy(stack,    0,    pathNames,    0,    stackSize    -    1);    }    if(stackSize  >  0)  {  int[]  result  =  new  int[stackSize  -  1];  System.arraycopy(pathNames,  0,  result,  0,  stackSize  -  1);  }	  	compilable	  [FE]  ArrayIndexOutOfBoundsException  	80	2	add
122	[BUG]  [BUGGY]  [FE]  ArrayIndexOutOfBoundsException  [FE]          ArrayIndexOutOfBoundsException    [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {  popStack();      [BUGGY]  if(stackSize  >  0)  {  int[]  result  =  new  int[stackSize  -  1];  System.arraycopy(stack,  0,  pathNames,  0,  stackSize  -  1);  }  if(stackSize  >  0)  {  int[]  result  =  new  int[stackSize  -  1];  System.arraycopy(pathNames,  0,  pathNames,  0,  stackSize  -  1);  }  [BUGGY]      }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	262	262	2	add	if(stackSize    >    0)    {    int[]    result    =    new    int[stackSize    -    1];    System.arraycopy(stack,    0,    pathNames,    0,    stackSize    -    1);    }    if(stackSize  >  0)  {  int[]  result  =  new  int[stackSize  -  1];  System.arraycopy(pathNames,  0,  pathNames,  0,  stackSize  -  1);  }	  	compilable	  [FE]  ArrayIndexOutOfBoundsException  	80	2	add
123	[BUG]  [BUGGY]  if(stackSize  >  0)  {  int[]  result  =  new  int[stackSize  -  1];  System.arraycopy(stack,  0,  pathNames,  0,  stackSize  -  1);  }  if(stackSize  >  0)  {  int[]  result  =  new  int[stackSize  -  1];  System.arraycopy(pathNames,  0,  pathNames,  0,  stackSize  -  1);  }  [FE]  ArrayIndexOutOfBoundsException  [FE]          ArrayIndexOutOfBoundsException    [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {  popStack();      [BUGGY]  if(stackSize  >  0)  {  int[]  result  =  new  int[stackSize  -  1];  System.arraycopy(stack,  0,  pathNames,  0,  stackSize  -  1);  }  if(stackSize  >  0)  {  int[]  result  =  new  int[stackSize  -  1];  System.arraycopy(pathNames,  0,  pathNames,  0,  stackSize  -  1);  }  [BUGGY]      }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	262	262	2	replace	if(stackSize    >    0)    {    int[]    result    =    new    int[stackSize    -    1];    System.arraycopy(stack,    0,    pathNames,    0,    stackSize    -    1);    }    if(stackSize  >  0)  {  int[]  result  =  new  int[stackSize  -  1];  System.arraycopy(pathNames,  0,  pathNames,  0,  stackSize  -  1);  }	  	compilable	  [FE]  ArrayIndexOutOfBoundsException  	80	2	add
124	[BUG]  [BUGGY]  if(stackSize  >  0)  {  int[]  result  =  new  int[stackSize  -  1];  System.arraycopy(stack,  0,  pathNames,  0,  stackSize  -  1);  }  if(stackSize  >  0)  {  int[]  result  =  new  int[result.length  -  1];  System.arraycopy(stack,  0,  pathNames,  0,  stackSize  -  1);  }  [CE]  variable  result  might  not  have  been  initialized  [FE]            ArrayIndexOutOfBoundsException    [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {  popStack();      [BUGGY]  if(stackSize  >  0)  {  int[]  result  =  new  int[stackSize  -  1];  System.arraycopy(stack,  0,  pathNames,  0,  stackSize  -  1);  }  if(stackSize  >  0)  {  int[]  result  =  new  int[result.length  -  1];  System.arraycopy(stack,  0,  pathNames,  0,  stackSize  -  1);  }  [BUGGY]      }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	262	262	2	replace	if(stackSize    >    0)    {    int[]    result    =    new    int[stackSize    -    1];    System.arraycopy(stack,    0,    pathNames,    0,    stackSize    -    1);    }    if(stackSize  >  0)  {  int[]  result  =  new  int[result.length  -  1];  System.arraycopy(stack,  0,  pathNames,  0,  stackSize  -  1);  }	  	non-compiled	[CE]  variable  result  might  not  have  been  initialized	80	None	add
125	[BUG]  [BUGGY]  [FE]  ArrayIndexOutOfBoundsException  [FE]              ArrayIndexOutOfBoundsException    [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {  popStack();      [BUGGY]  if(stackSize  >  0)  {  int[]  result  =  new  int[stackSize  -  1];  System.arraycopy(stack,  0,  pathNames,  0,  stackSize  -  1);  }  if(stackSize  >  0)  {  int[]  pathNames  =  new  int[stackSize  -  1];  System.arraycopy(stack,  0,  pathNames,  0,  stackSize  -  1);  }  [BUGGY]      }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	262	262	2	add	if(stackSize    >    0)    {    int[]    result    =    new    int[stackSize    -    1];    System.arraycopy(stack,    0,    pathNames,    0,    stackSize    -    1);    }    if(stackSize  >  0)  {  int[]  pathNames  =  new  int[stackSize  -  1];  System.arraycopy(stack,  0,  pathNames,  0,  stackSize  -  1);  }	  	compilable	  [FE]  ArrayIndexOutOfBoundsException  	80	2	add
126	[BUG]  [BUGGY]  if(stackSize  >  0)  {  int[]  result  =  new  int[stackSize  -  1];  System.arraycopy(stack,  0,  pathNames,  0,  stackSize  -  1);  }  if(stackSize  >  0)  {  int[]  pathNames  =  new  int[stackSize  -  1];  System.arraycopy(stack,  0,  pathNames,  0,  stackSize  -  1);  }  [FE]  ArrayIndexOutOfBoundsException  [FE]              ArrayIndexOutOfBoundsException    [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {  popStack();      [BUGGY]  if(stackSize  >  0)  {  int[]  result  =  new  int[stackSize  -  1];  System.arraycopy(stack,  0,  pathNames,  0,  stackSize  -  1);  }  if(stackSize  >  0)  {  int[]  pathNames  =  new  int[stackSize  -  1];  System.arraycopy(stack,  0,  pathNames,  0,  stackSize  -  1);  }  [BUGGY]      }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	262	262	2	replace	if(stackSize    >    0)    {    int[]    result    =    new    int[stackSize    -    1];    System.arraycopy(stack,    0,    pathNames,    0,    stackSize    -    1);    }    if(stackSize  >  0)  {  int[]  pathNames  =  new  int[stackSize  -  1];  System.arraycopy(stack,  0,  pathNames,  0,  stackSize  -  1);  }	  	compilable	  [FE]  ArrayIndexOutOfBoundsException  	80	2	add
127	[BUG]  [BUGGY]  [FE]  ArrayIndexOutOfBoundsException  [FE]                ArrayIndexOutOfBoundsException    [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {  popStack();      [BUGGY]  if(stackSize  >  0)  {  int[]  result  =  new  int[stackSize  -  1];  System.arraycopy(stack,  0,  pathNames,  0,  stackSize  -  1);  }  if(stackSize  >  0)  {  int[]  result  =  new  int[stackSize  -  1];  System.arraycopy(stack,  0,  pathNames,  1,  stackSize  -  1);  }  [BUGGY]      }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	262	262	2	add	if(stackSize    >    0)    {    int[]    result    =    new    int[stackSize    -    1];    System.arraycopy(stack,    0,    pathNames,    0,    stackSize    -    1);    }    if(stackSize  >  0)  {  int[]  result  =  new  int[stackSize  -  1];  System.arraycopy(stack,  0,  pathNames,  1,  stackSize  -  1);  }	  	compilable	  [FE]  ArrayIndexOutOfBoundsException  	80	2	add
128	[BUG]  [BUGGY]  if(stackSize  >  0)  {  int[]  result  =  new  int[stackSize  -  1];  System.arraycopy(stack,  0,  pathNames,  0,  stackSize  -  1);  }  if(stackSize  >  0)  {  int[]  result  =  new  int[stackSize  -  1];  System.arraycopy(stack,  0,  pathNames,  1,  stackSize  -  1);  }  [FE]  ArrayIndexOutOfBoundsException  [FE]                ArrayIndexOutOfBoundsException    [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {  popStack();      [BUGGY]  if(stackSize  >  0)  {  int[]  result  =  new  int[stackSize  -  1];  System.arraycopy(stack,  0,  pathNames,  0,  stackSize  -  1);  }  if(stackSize  >  0)  {  int[]  result  =  new  int[stackSize  -  1];  System.arraycopy(stack,  0,  pathNames,  1,  stackSize  -  1);  }  [BUGGY]      }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	262	262	2	replace	if(stackSize    >    0)    {    int[]    result    =    new    int[stackSize    -    1];    System.arraycopy(stack,    0,    pathNames,    0,    stackSize    -    1);    }    if(stackSize  >  0)  {  int[]  result  =  new  int[stackSize  -  1];  System.arraycopy(stack,  0,  pathNames,  1,  stackSize  -  1);  }	  	compilable	  [FE]  ArrayIndexOutOfBoundsException  	80	2	add
129	[BUG]  [BUGGY]  int[]  result  =  new  int[stackSize  -  1];  for(int  i  =  0;  i  <  stackSize;  ++i)  {  result[i]  =  getValue();  }  [CE]  cannot  find  symbol  [FE]                    ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {  popStack();      [BUGGY]  int[]  result  =  new  int[stackSize  -  1];  for(int  i  =  0;  i  <  stackSize;  ++i)  {  result[i]  =  getValue();  }  [BUGGY]      }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	262	262	2	replace	int[]  result  =  new  int[stackSize  -  1];  for(int  i  =  0;  i  <  stackSize;  ++i)  {  result[i]  =  getValue();  }	  if(stackSize    >    0)    {    int[]    result    =    new    int[stackSize    -    1];    for(int    i    =    0;    i    <    stackSize;    ++i)    {    result[i]    =    getValue();    }    	non-compiled	[CE]  cannot  find  symbol	85	None	replace
130	[BUG]  [BUGGY]  []  result  =  new  int[stackSize  -  1];  for(int  i  =  0;  i  <  stackSize;  ++i)  {  result[i]  =  getValue();  }  [CE]  illegal  start  of  expression  [FE]                      ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {  popStack();      [BUGGY]  []  result  =  new  int[stackSize  -  1];  for(int  i  =  0;  i  <  stackSize;  ++i)  {  result[i]  =  getValue();  }  [BUGGY]      }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	262	262	2	replace	[]  result  =  new  int[stackSize  -  1];  for(int  i  =  0;  i  <  stackSize;  ++i)  {  result[i]  =  getValue();  }	  if(stackSize    >    0)    {    int[]    result    =    new    int[stackSize    -    1];    for(int    i    =    0;    i    <    stackSize;    ++i)    {    result[i]    =    getValue();    }    	non-compiled	[CE]  illegal  start  of  expression	85	None	replace
131	[BUG]  [BUGGY]  ||  stackSize  >  0)  {  int[]  result  =  new  int[stackSize  -  1];  for(int  i  =  0;  i  <  stackSize;  ++i)  {  result[i]  =  getValue();  }  [CE]  illegal  start  of  expression  [FE]                        ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {  popStack();      [BUGGY]  ||  stackSize  >  0)  {  int[]  result  =  new  int[stackSize  -  1];  for(int  i  =  0;  i  <  stackSize;  ++i)  {  result[i]  =  getValue();  }  [BUGGY]      }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	262	262	2	replace	||  stackSize  >  0)  {  int[]  result  =  new  int[stackSize  -  1];  for(int  i  =  0;  i  <  stackSize;  ++i)  {  result[i]  =  getValue();  }	  if(stackSize    >    0)    {    int[]    result    =    new    int[stackSize    -    1];    for(int    i    =    0;    i    <    stackSize;    ++i)    {    result[i]    =    getValue();    }    	non-compiled	[CE]  illegal  start  of  expression	85	None	replace
132	[BUG]  [BUGGY]  if(isEnabled(Feature.QUOTE_FIELD_NAMES))  {  if(stackSize  >  0)  {  int[]  result  =  new  int[stackSize  -  1];  for(int  i  =  0;  i  <  stackSize;  ++i)  {  result[  [CE]  illegal  start  of  expression  [FE]                          ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {  popStack();      [BUGGY]  if(isEnabled(Feature.QUOTE_FIELD_NAMES))  {  if(stackSize  >  0)  {  int[]  result  =  new  int[stackSize  -  1];  for(int  i  =  0;  i  <  stackSize;  ++i)  {  result[  [BUGGY]      }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	262	262	2	replace	if(isEnabled(Feature.QUOTE_FIELD_NAMES))  {  if(stackSize  >  0)  {  int[]  result  =  new  int[stackSize  -  1];  for(int  i  =  0;  i  <  stackSize;  ++i)  {  result[	  if(stackSize    >    0)    {    int[]    result    =    new    int[stackSize    -    1];    for(int    i    =    0;    i    <    stackSize;    ++i)    {    result[i]    =    getValue();    }    	non-compiled	[CE]  illegal  start  of  expression	85	None	replace
133	[BUG]  [BUGGY]  if(stackSize  >  1)  {  int[]  result  =  new  int[stackSize  -  1];  for(int  i  =  0;  i  <  stackSize;  ++i)  {  result[i]  =  getValue();  }  [CE]  ';'  expected  [FE]                            ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {  popStack();      [BUGGY]  if(stackSize  >  1)  {  int[]  result  =  new  int[stackSize  -  1];  for(int  i  =  0;  i  <  stackSize;  ++i)  {  result[i]  =  getValue();  }  [BUGGY]      }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	262	262	2	replace	if(stackSize  >  1)  {  int[]  result  =  new  int[stackSize  -  1];  for(int  i  =  0;  i  <  stackSize;  ++i)  {  result[i]  =  getValue();  }	  if(stackSize    >    0)    {    int[]    result    =    new    int[stackSize    -    1];    for(int    i    =    0;    i    <    stackSize;    ++i)    {    result[i]    =    getValue();    }    	non-compiled	[CE]  ';'  expected	85	None	replace
134	[BUG]  [BUGGY]  if(isEnabled(Feature.QUOTE_FIELD_NAMES))  {  if(stackSize  >  0)  {  int[]  result  =  new  int[stackSize  -  1];  for(int  i  =  0;  i  <  stackSize;  ++i)  {  result[i]  =  getValue();  }  [CE]  ';'  expected  [FE]                              ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {  popStack();      [BUGGY]  if(isEnabled(Feature.QUOTE_FIELD_NAMES))  {  if(stackSize  >  0)  {  int[]  result  =  new  int[stackSize  -  1];  for(int  i  =  0;  i  <  stackSize;  ++i)  {  result[i]  =  getValue();  }  [BUGGY]      }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	262	262	2	replace	if(isEnabled(Feature.QUOTE_FIELD_NAMES))  {  if(stackSize  >  0)  {  int[]  result  =  new  int[stackSize  -  1];  for(int  i  =  0;  i  <  stackSize;  ++i)  {  result[i]  =  getValue();  }	  if(stackSize    >    0)    {    int[]    result    =    new    int[stackSize    -    1];    for(int    i    =    0;    i    <    stackSize;    ++i)    {    result[i]    =    getValue();    }    	non-compiled	[CE]  ';'  expected	85	None	replace
135	[BUG]  [BUGGY]  [FE]  ArrayIndexOutOfBoundsException  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {  popStack();      [BUGGY]  pathNames[stackSize  -  1]  =     "null   "  +  JsonToken.END_ARRAY;  pathNames[stackSize  -  1]  =   "null   "  +  JsonToken.END_ARRAY;  [BUGGY]      }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	262	262	2	add	pathNames[stackSize    -    1]    =       "null   "    +    JsonToken.END_ARRAY;    pathNames[stackSize  -  1]  =   "null   "  +  JsonToken.END_ARRAY;	  	compilable	  [FE]  ArrayIndexOutOfBoundsException  	61	2	add
136	[BUG]  [BUGGY]  pathNames[stackSize  -  1]  =     "null   "  +  JsonToken.END_ARRAY;  pathNames[stackSize  -  1]  =   "null   "  +  JsonToken.END_ARRAY;  [FE]  ArrayIndexOutOfBoundsException  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {  popStack();      [BUGGY]  pathNames[stackSize  -  1]  =     "null   "  +  JsonToken.END_ARRAY;  pathNames[stackSize  -  1]  =   "null   "  +  JsonToken.END_ARRAY;  [BUGGY]      }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	262	262	2	replace	pathNames[stackSize    -    1]    =       "null   "    +    JsonToken.END_ARRAY;    pathNames[stackSize  -  1]  =   "null   "  +  JsonToken.END_ARRAY;	  	compilable	  [FE]  ArrayIndexOutOfBoundsException  	61	2	add
137	[BUG]  [BUGGY]  pathNames[stackSize  -  1]  =     "null   "  +  JsonToken.END_ARRAY;  PathIndices[stackSize  -  1]  =   "null   "  +  JsonToken.END_ARRAY;  [CE]  cannot  find  symbol  PathIndices  [FE]      ArrayIndexOutOfBoundsException    [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {  popStack();      [BUGGY]  pathNames[stackSize  -  1]  =     "null   "  +  JsonToken.END_ARRAY;  PathIndices[stackSize  -  1]  =   "null   "  +  JsonToken.END_ARRAY;  [BUGGY]      }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	262	262	2	replace	pathNames[stackSize    -    1]    =       "null   "    +    JsonToken.END_ARRAY;    PathIndices[stackSize  -  1]  =   "null   "  +  JsonToken.END_ARRAY;	  	non-compiled	[CE]  cannot  find  symbol  PathIndices	61	None	add
138	[BUG]  [BUGGY]  pathNames[stackSize  -  1]  =     "null   "  +  JsonToken.END_ARRAY;  paths[stackSize  -  1]  =   "null   "  +  JsonToken.END_ARRAY;  [CE]  cannot  find  symbol  paths  [FE]        ArrayIndexOutOfBoundsException    [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {  popStack();      [BUGGY]  pathNames[stackSize  -  1]  =     "null   "  +  JsonToken.END_ARRAY;  paths[stackSize  -  1]  =   "null   "  +  JsonToken.END_ARRAY;  [BUGGY]      }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	262	262	2	replace	pathNames[stackSize    -    1]    =       "null   "    +    JsonToken.END_ARRAY;    paths[stackSize  -  1]  =   "null   "  +  JsonToken.END_ARRAY;	  	non-compiled	[CE]  cannot  find  symbol  paths	61	None	add
139	[BUG]  [BUGGY]  pathNames[stackSize  -  1]  =     "null   "  +  JsonToken.END_ARRAY;  pathNames[stackSize  -  1]  =   "null ",  +  JsonToken.END_ARRAY;  [CE]  [FE]          ArrayIndexOutOfBoundsException    [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {  popStack();      [BUGGY]  pathNames[stackSize  -  1]  =     "null   "  +  JsonToken.END_ARRAY;  pathNames[stackSize  -  1]  =   "null ",  +  JsonToken.END_ARRAY;  [BUGGY]      }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	262	262	2	replace	pathNames[stackSize    -    1]    =       "null   "    +    JsonToken.END_ARRAY;    pathNames[stackSize  -  1]  =   "null ",  +  JsonToken.END_ARRAY;	  	non-compiled	[CE]  	61	None	add
140	[BUG]  [BUGGY]  [FE]  NegativeArraySizeException  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {  popStack();      [BUGGY]  int[]  result  =  new  int[stackSize  -  1];  System.arraycopy(pathNames,  0,  pathNames,  0,  stackSize  -  1);  [BUGGY]      }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	262	262	2	add	int[]  result  =  new  int[stackSize  -  1];  System.arraycopy(pathNames,  0,  pathNames,  0,  stackSize  -  1);	  if(stackSize    >    0)    {    int[]    result    =    new    int[stackSize    -    1];    System.arraycopy(pathNames,    0,    pathNames,    0,    stackSize    -    1);    }    	compilable	  [FE]  NegativeArraySizeException  	78	2	replace
141	[BUG]  [BUGGY]  int[]  result  =  new  int[stackSize  -  1];  System.arraycopy(pathNames,  0,  pathNames,  0,  stackSize  -  1);  [FE]  NegativeArraySizeException  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {  popStack();      [BUGGY]  int[]  result  =  new  int[stackSize  -  1];  System.arraycopy(pathNames,  0,  pathNames,  0,  stackSize  -  1);  [BUGGY]      }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	262	262	2	replace	int[]  result  =  new  int[stackSize  -  1];  System.arraycopy(pathNames,  0,  pathNames,  0,  stackSize  -  1);	  if(stackSize    >    0)    {    int[]    result    =    new    int[stackSize    -    1];    System.arraycopy(pathNames,    0,    pathNames,    0,    stackSize    -    1);    }    	compilable	  [FE]  NegativeArraySizeException  	78	2	replace
142	[BUG]  [BUGGY]  [FE]  ArrayIndexOutOfBoundsException  [FE]      ArrayIndexOutOfBoundsException    [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {  popStack();      [BUGGY]  if(stackSize  >  1)  {  int[]  result  =  new  int[stackSize  -  1];  System.arraycopy(pathNames,  0,  pathNames,  0,  stackSize  -  1);  }  [BUGGY]      }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	262	262	2	add	if(stackSize  >  1)  {  int[]  result  =  new  int[stackSize  -  1];  System.arraycopy(pathNames,  0,  pathNames,  0,  stackSize  -  1);  }	  if(stackSize    >    0)    {    int[]    result    =    new    int[stackSize    -    1];    System.arraycopy(pathNames,    0,    pathNames,    0,    stackSize    -    1);    }    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	78	2	replace
143	[BUG]  [BUGGY]  if(stackSize  >  1)  {  int[]  result  =  new  int[stackSize  -  1];  System.arraycopy(pathNames,  0,  pathNames,  0,  stackSize  -  1);  }  [FE]  ArrayIndexOutOfBoundsException  [FE]      ArrayIndexOutOfBoundsException    [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {  popStack();      [BUGGY]  if(stackSize  >  1)  {  int[]  result  =  new  int[stackSize  -  1];  System.arraycopy(pathNames,  0,  pathNames,  0,  stackSize  -  1);  }  [BUGGY]      }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	262	262	2	replace	if(stackSize  >  1)  {  int[]  result  =  new  int[stackSize  -  1];  System.arraycopy(pathNames,  0,  pathNames,  0,  stackSize  -  1);  }	  if(stackSize    >    0)    {    int[]    result    =    new    int[stackSize    -    1];    System.arraycopy(pathNames,    0,    pathNames,    0,    stackSize    -    1);    }    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	78	2	replace
144	[BUG]  [BUGGY]  [FE]  NegativeArraySizeException  [FE]        ArrayIndexOutOfBoundsException    [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {  popStack();      [BUGGY]  Integer[]  result  =  new  Integer[stackSize  -  1];  System.arraycopy(pathNames,  0,  pathNames,  0,  stackSize  -  1);  [BUGGY]      }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	262	262	2	add	Integer[]  result  =  new  Integer[stackSize  -  1];  System.arraycopy(pathNames,  0,  pathNames,  0,  stackSize  -  1);	  if(stackSize    >    0)    {    int[]    result    =    new    int[stackSize    -    1];    System.arraycopy(pathNames,    0,    pathNames,    0,    stackSize    -    1);    }    	compilable	  [FE]  NegativeArraySizeException  	78	2	replace
145	[BUG]  [BUGGY]  Integer[]  result  =  new  Integer[stackSize  -  1];  System.arraycopy(pathNames,  0,  pathNames,  0,  stackSize  -  1);  [FE]  NegativeArraySizeException  [FE]        ArrayIndexOutOfBoundsException    [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {  popStack();      [BUGGY]  Integer[]  result  =  new  Integer[stackSize  -  1];  System.arraycopy(pathNames,  0,  pathNames,  0,  stackSize  -  1);  [BUGGY]      }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	262	262	2	replace	Integer[]  result  =  new  Integer[stackSize  -  1];  System.arraycopy(pathNames,  0,  pathNames,  0,  stackSize  -  1);	  if(stackSize    >    0)    {    int[]    result    =    new    int[stackSize    -    1];    System.arraycopy(pathNames,    0,    pathNames,    0,    stackSize    -    1);    }    	compilable	  [FE]  NegativeArraySizeException  	78	2	replace
146	[BUG]  [BUGGY]  [FE]  ArrayIndexOutOfBoundsException  [FE]          ArrayIndexOutOfBoundsException    [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {  popStack();      [BUGGY]  int[]  result  =  new  int[pathNames.length  -  1];  System.arraycopy(pathNames,  0,  pathNames,  0,  stackSize  -  1);  [BUGGY]      }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	262	262	2	add	int[]  result  =  new  int[pathNames.length  -  1];  System.arraycopy(pathNames,  0,  pathNames,  0,  stackSize  -  1);	  if(stackSize    >    0)    {    int[]    result    =    new    int[stackSize    -    1];    System.arraycopy(pathNames,    0,    pathNames,    0,    stackSize    -    1);    }    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	78	2	replace
147	[BUG]  [BUGGY]  int[]  result  =  new  int[pathNames.length  -  1];  System.arraycopy(pathNames,  0,  pathNames,  0,  stackSize  -  1);  [FE]  ArrayIndexOutOfBoundsException  [FE]          ArrayIndexOutOfBoundsException    [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {  popStack();      [BUGGY]  int[]  result  =  new  int[pathNames.length  -  1];  System.arraycopy(pathNames,  0,  pathNames,  0,  stackSize  -  1);  [BUGGY]      }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	262	262	2	replace	int[]  result  =  new  int[pathNames.length  -  1];  System.arraycopy(pathNames,  0,  pathNames,  0,  stackSize  -  1);	  if(stackSize    >    0)    {    int[]    result    =    new    int[stackSize    -    1];    System.arraycopy(pathNames,    0,    pathNames,    0,    stackSize    -    1);    }    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	78	2	replace
148	[BUG]  [BUGGY]  if(count  >  0)  {  int[]  result  =  new  int[stackSize  -  1];  System.arraycopy(pathNames,  0,  pathNames,  0,  stackSize  -  1);  }  [CE]  cannot  find  symbol  count  [FE]            ArrayIndexOutOfBoundsException    [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {  popStack();      [BUGGY]  if(count  >  0)  {  int[]  result  =  new  int[stackSize  -  1];  System.arraycopy(pathNames,  0,  pathNames,  0,  stackSize  -  1);  }  [BUGGY]      }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	262	262	2	replace	if(count  >  0)  {  int[]  result  =  new  int[stackSize  -  1];  System.arraycopy(pathNames,  0,  pathNames,  0,  stackSize  -  1);  }	  if(stackSize    >    0)    {    int[]    result    =    new    int[stackSize    -    1];    System.arraycopy(pathNames,    0,    pathNames,    0,    stackSize    -    1);    }    	non-compiled	[CE]  cannot  find  symbol  count	78	None	replace
149	[BUG]  [BUGGY]  [FE]  ArrayIndexOutOfBoundsException  [FE]              ArrayIndexOutOfBoundsException    [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {  popStack();      [BUGGY]  if(stackSize  >  0)  {  int[]  result  =  new  int[pathNames.length  -  1];  System.arraycopy(pathNames,  0,  pathNames,  0,  stackSize  -  1);  }  [BUGGY]      }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	262	262	2	add	if(stackSize  >  0)  {  int[]  result  =  new  int[pathNames.length  -  1];  System.arraycopy(pathNames,  0,  pathNames,  0,  stackSize  -  1);  }	  if(stackSize    >    0)    {    int[]    result    =    new    int[stackSize    -    1];    System.arraycopy(pathNames,    0,    pathNames,    0,    stackSize    -    1);    }    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	78	2	replace
150	[BUG]  [BUGGY]  if(stackSize  >  0)  {  int[]  result  =  new  int[pathNames.length  -  1];  System.arraycopy(pathNames,  0,  pathNames,  0,  stackSize  -  1);  }  [FE]  ArrayIndexOutOfBoundsException  [FE]              ArrayIndexOutOfBoundsException    [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {  popStack();      [BUGGY]  if(stackSize  >  0)  {  int[]  result  =  new  int[pathNames.length  -  1];  System.arraycopy(pathNames,  0,  pathNames,  0,  stackSize  -  1);  }  [BUGGY]      }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	262	262	2	replace	if(stackSize  >  0)  {  int[]  result  =  new  int[pathNames.length  -  1];  System.arraycopy(pathNames,  0,  pathNames,  0,  stackSize  -  1);  }	  if(stackSize    >    0)    {    int[]    result    =    new    int[stackSize    -    1];    System.arraycopy(pathNames,    0,    pathNames,    0,    stackSize    -    1);    }    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	78	2	replace
151	[BUG]  [BUGGY]  [FE]  ArrayIndexOutOfBoundsException  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {  popStack();      [BUGGY]  pathNames[stackSize    -    2]    =         "null     ";    pathNames[stackSize  -  2]  =     "null     ";  pathNames[stackSize  -  2]  =   "null   ";  pathNames[stackSize  -  2]  =   "null   ";  [BUGGY]      }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	262	262	2	add	pathNames[stackSize        -        2]        =               "null       ";        pathNames[stackSize    -    2]    =       "null       ";    pathNames[stackSize  -  2]  =   "null   ";  pathNames[stackSize  -  2]  =   "null   ";	  	compilable	  [FE]  ArrayIndexOutOfBoundsException  	6	2	add
152	[BUG]  [BUGGY]  pathNames[stackSize    -    2]    =         "null     ";    pathNames[stackSize  -  2]  =     "null     ";  pathNames[stackSize  -  2]  =   "null   ";  pathNames[stackSize  -  2]  =   "null   ";  [FE]  ArrayIndexOutOfBoundsException  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {  popStack();      [BUGGY]  pathNames[stackSize    -    2]    =         "null     ";    pathNames[stackSize  -  2]  =     "null     ";  pathNames[stackSize  -  2]  =   "null   ";  pathNames[stackSize  -  2]  =   "null   ";  [BUGGY]      }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	262	262	2	replace	pathNames[stackSize        -        2]        =               "null       ";        pathNames[stackSize    -    2]    =       "null       ";    pathNames[stackSize  -  2]  =   "null   ";  pathNames[stackSize  -  2]  =   "null   ";	  	compilable	  [FE]  ArrayIndexOutOfBoundsException  	6	2	add
153	[BUG]  [BUGGY]  pathNames[stackSize    -    2]    =         "null     ";    pathNames[stackSize  -  2]  =     "null     ";  pathNames[stackSize  -  2]  =   "null ",;  pathNames[stackSize  -  2]  =   "null   ";  [CE]  [FE]      ArrayIndexOutOfBoundsException    [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {  popStack();      [BUGGY]  pathNames[stackSize    -    2]    =         "null     ";    pathNames[stackSize  -  2]  =     "null     ";  pathNames[stackSize  -  2]  =   "null ",;  pathNames[stackSize  -  2]  =   "null   ";  [BUGGY]      }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	262	262	2	replace	pathNames[stackSize        -        2]        =               "null       ";        pathNames[stackSize    -    2]    =       "null       ";    pathNames[stackSize  -  2]  =   "null ",;  pathNames[stackSize  -  2]  =   "null   ";	  	non-compiled	[CE]  	6	None	add
154	[BUG]  [BUGGY]  pathNames[stackSize  -  1]  =  JsonToken.NAME;  [CE]  incompatible  types  [FE]                      ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {  popStack();      [BUGGY]  pathNames[stackSize  -  1]  =  JsonToken.NAME;  [BUGGY]      }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	262	262	2	replace	pathNames[stackSize  -  1]  =  JsonToken.NAME;	  pathNames[stackSize    -    1]    =    JsonToken.FIELD_NAME;    	non-compiled	[CE]  incompatible  types	3	None	replace
155	[BUG]  [BUGGY]  pathNames[stackSize  -  1]  =  null. ";  [CE]  unclosed  string  literal  [FE]            ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {  popStack();      [BUGGY]  pathNames[stackSize  -  1]  =  null. ";  [BUGGY]      }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	262	262	2	replace	pathNames[stackSize  -  1]  =  null. ";	  pathNames[stackSize    -    2]    =    null   ";    	non-compiled	[CE]  unclosed  string  literal	5	None	replace
156	[BUG]  [BUGGY]  PathIndexOutOfBoundsException  e  =  new  PathIndexOutOfBoundsException(String.valueOf(stackSize  -  1));  pathNames[stackSize  -  1]  =  null;  [CE]  cannot  find  symbol  [FE]            ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {  popStack();      [BUGGY]  PathIndexOutOfBoundsException  e  =  new  PathIndexOutOfBoundsException(String.valueOf(stackSize  -  1));  pathNames[stackSize  -  1]  =  null;  [BUGGY]      }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	262	262	2	replace	PathIndexOutOfBoundsException  e  =  new  PathIndexOutOfBoundsException(String.valueOf(stackSize  -  1));  pathNames[stackSize  -  1]  =  null;	  pathNames[stackSize    -    1]    =    null;    PathIndexOutOfBoundsException    e    =    new    PathIndexOutOfBoundsException(String.valueOf(stackSize    -    1));    pathNames[stackSize    -    1]    =    null;    	non-compiled	[CE]  cannot  find  symbol	57	None	replace
157	[BUG]  [BUGGY]  pathNames[result.length  -  1]  =  null;  PathIndexOutOfBoundsException  e  =  new  PathIndexOutOfBoundsException(String.valueOf(stackSize  -  1));  pathNames[stackSize  -  1]  =  null;  [CE]  cannot  find  symbol  result  [FE]              ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {  popStack();      [BUGGY]  pathNames[result.length  -  1]  =  null;  PathIndexOutOfBoundsException  e  =  new  PathIndexOutOfBoundsException(String.valueOf(stackSize  -  1));  pathNames[stackSize  -  1]  =  null;  [BUGGY]      }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	262	262	2	replace	pathNames[result.length  -  1]  =  null;  PathIndexOutOfBoundsException  e  =  new  PathIndexOutOfBoundsException(String.valueOf(stackSize  -  1));  pathNames[stackSize  -  1]  =  null;	  pathNames[stackSize    -    1]    =    null;    PathIndexOutOfBoundsException    e    =    new    PathIndexOutOfBoundsException(String.valueOf(stackSize    -    1));    pathNames[stackSize    -    1]    =    null;    	non-compiled	[CE]  cannot  find  symbol  result	57	None	replace
158	[BUG]  [BUGGY]  pathNames[stackSize  -  1]  =  new  PathIndexOutOfBoundsException(String.valueOf(stackSize  -  1));  pathNames[stackSize  -  1]  =  null;  [CE]  cannot  find  symbol  [FE]                ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {  popStack();      [BUGGY]  pathNames[stackSize  -  1]  =  new  PathIndexOutOfBoundsException(String.valueOf(stackSize  -  1));  pathNames[stackSize  -  1]  =  null;  [BUGGY]      }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	262	262	2	replace	pathNames[stackSize  -  1]  =  new  PathIndexOutOfBoundsException(String.valueOf(stackSize  -  1));  pathNames[stackSize  -  1]  =  null;	  pathNames[stackSize    -    1]    =    null;    PathIndexOutOfBoundsException    e    =    new    PathIndexOutOfBoundsException(String.valueOf(stackSize    -    1));    pathNames[stackSize    -    1]    =    null;    	non-compiled	[CE]  cannot  find  symbol	57	None	replace
159	[BUG]  [BUGGY]  pathNames[stackSize  -  1]  =  null;  pathIndexOutOfBoundsException  e  =  new  PathIndexOutOfBoundsException(String.valueOf(stackSize  -  1));  pathNames[stackSize  -  1]  =  null;  [CE]  cannot  find  symbol  [FE]                  ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {  popStack();      [BUGGY]  pathNames[stackSize  -  1]  =  null;  pathIndexOutOfBoundsException  e  =  new  PathIndexOutOfBoundsException(String.valueOf(stackSize  -  1));  pathNames[stackSize  -  1]  =  null;  [BUGGY]      }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	262	262	2	replace	pathNames[stackSize  -  1]  =  null;  pathIndexOutOfBoundsException  e  =  new  PathIndexOutOfBoundsException(String.valueOf(stackSize  -  1));  pathNames[stackSize  -  1]  =  null;	  pathNames[stackSize    -    1]    =    null;    PathIndexOutOfBoundsException    e    =    new    PathIndexOutOfBoundsException(String.valueOf(stackSize    -    1));    pathNames[stackSize    -    1]    =    null;    	non-compiled	[CE]  cannot  find  symbol	57	None	replace
160	[BUG]  [BUGGY]  [FE]  ArrayIndexOutOfBoundsException  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {  popStack();      [BUGGY]  pathNames[stackSize  -  2]  =  null;  if(stackSize  >  0)  {  pathNames[stackSize  -  1]  =  null;  }  [BUGGY]      }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	262	262	2	add	pathNames[stackSize  -  2]  =  null;  if(stackSize  >  0)  {  pathNames[stackSize  -  1]  =  null;  }	  pathNames[stackSize    -    1]    =    null;    if(stackSize    >    0)    {    pathNames[stackSize    -    1]    =    null;    }    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	70	2	replace
161	[BUG]  [BUGGY]  pathNames[stackSize  -  2]  =  null;  if(stackSize  >  0)  {  pathNames[stackSize  -  1]  =  null;  }  [FE]  ArrayIndexOutOfBoundsException  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {  popStack();      [BUGGY]  pathNames[stackSize  -  2]  =  null;  if(stackSize  >  0)  {  pathNames[stackSize  -  1]  =  null;  }  [BUGGY]      }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	262	262	2	replace	pathNames[stackSize  -  2]  =  null;  if(stackSize  >  0)  {  pathNames[stackSize  -  1]  =  null;  }	  pathNames[stackSize    -    1]    =    null;    if(stackSize    >    0)    {    pathNames[stackSize    -    1]    =    null;    }    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	70	2	replace
162	[BUG]  [BUGGY]  [FE]  ArrayIndexOutOfBoundsException  [FE]      ArrayIndexOutOfBoundsException    [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {  popStack();      [BUGGY]  pathNames[stackSize  -  1]  =  null;  if(stackSize  >  1)  {  pathNames[stackSize  -  1]  =  null;  }  [BUGGY]      }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	262	262	2	add	pathNames[stackSize  -  1]  =  null;  if(stackSize  >  1)  {  pathNames[stackSize  -  1]  =  null;  }	  pathNames[stackSize    -    1]    =    null;    if(stackSize    >    0)    {    pathNames[stackSize    -    1]    =    null;    }    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	70	2	replace
163	[BUG]  [BUGGY]  pathNames[stackSize  -  1]  =  null;  if(stackSize  >  1)  {  pathNames[stackSize  -  1]  =  null;  }  [FE]  ArrayIndexOutOfBoundsException  [FE]      ArrayIndexOutOfBoundsException    [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {  popStack();      [BUGGY]  pathNames[stackSize  -  1]  =  null;  if(stackSize  >  1)  {  pathNames[stackSize  -  1]  =  null;  }  [BUGGY]      }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	262	262	2	replace	pathNames[stackSize  -  1]  =  null;  if(stackSize  >  1)  {  pathNames[stackSize  -  1]  =  null;  }	  pathNames[stackSize    -    1]    =    null;    if(stackSize    >    0)    {    pathNames[stackSize    -    1]    =    null;    }    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	70	2	replace
164	[BUG]  [BUGGY]  [FE]  ArrayIndexOutOfBoundsException  [FE]        ArrayIndexOutOfBoundsException    [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {  popStack();      [BUGGY]  pathNames[stackSize  -  2]  =  null;  if(stackSize  >  1)  {  pathNames[stackSize  -  1]  =  null;  }  [BUGGY]      }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	262	262	2	add	pathNames[stackSize  -  2]  =  null;  if(stackSize  >  1)  {  pathNames[stackSize  -  1]  =  null;  }	  pathNames[stackSize    -    1]    =    null;    if(stackSize    >    0)    {    pathNames[stackSize    -    1]    =    null;    }    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	70	2	replace
165	[BUG]  [BUGGY]  pathNames[stackSize  -  2]  =  null;  if(stackSize  >  1)  {  pathNames[stackSize  -  1]  =  null;  }  [FE]  ArrayIndexOutOfBoundsException  [FE]        ArrayIndexOutOfBoundsException    [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {  popStack();      [BUGGY]  pathNames[stackSize  -  2]  =  null;  if(stackSize  >  1)  {  pathNames[stackSize  -  1]  =  null;  }  [BUGGY]      }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	262	262	2	replace	pathNames[stackSize  -  2]  =  null;  if(stackSize  >  1)  {  pathNames[stackSize  -  1]  =  null;  }	  pathNames[stackSize    -    1]    =    null;    if(stackSize    >    0)    {    pathNames[stackSize    -    1]    =    null;    }    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	70	2	replace
166	[BUG]  [BUGGY]  [FE]  ArrayIndexOutOfBoundsException  [FE]          ArrayIndexOutOfBoundsException    [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {  popStack();      [BUGGY]  pathNames[stackSize  -  1]  =  null;  if(stackSize  <  1)  {  pathNames[stackSize  -  1]  =  null;  }  [BUGGY]      }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	262	262	2	add	pathNames[stackSize  -  1]  =  null;  if(stackSize  <  1)  {  pathNames[stackSize  -  1]  =  null;  }	  pathNames[stackSize    -    1]    =    null;    if(stackSize    >    0)    {    pathNames[stackSize    -    1]    =    null;    }    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	70	2	replace
167	[BUG]  [BUGGY]  pathNames[stackSize  -  1]  =  null;  if(stackSize  <  1)  {  pathNames[stackSize  -  1]  =  null;  }  [FE]  ArrayIndexOutOfBoundsException  [FE]          ArrayIndexOutOfBoundsException    [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {  popStack();      [BUGGY]  pathNames[stackSize  -  1]  =  null;  if(stackSize  <  1)  {  pathNames[stackSize  -  1]  =  null;  }  [BUGGY]      }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	262	262	2	replace	pathNames[stackSize  -  1]  =  null;  if(stackSize  <  1)  {  pathNames[stackSize  -  1]  =  null;  }	  pathNames[stackSize    -    1]    =    null;    if(stackSize    >    0)    {    pathNames[stackSize    -    1]    =    null;    }    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	70	2	replace
168	[BUG]  [BUGGY]  [FE]  NegativeArraySizeException  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {  popStack();      [BUGGY]  int[]  result  =  new  int[stackSize  -  1];  System.arraycopy(pathNames,  0,  pathNames,  0,  stackSize  -  1);  return;  [BUGGY]      }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	262	262	2	add	int[]  result  =  new  int[stackSize  -  1];  System.arraycopy(pathNames,  0,  pathNames,  0,  stackSize  -  1);  return;	  if(stackSize    >    0)    {    int[]    result    =    new    int[stackSize    -    1];    System.arraycopy(pathNames,    0,    pathNames,    0,    stackSize    -    1);    return;    }    	compilable	  [FE]  NegativeArraySizeException  	84	2	replace
169	[BUG]  [BUGGY]  int[]  result  =  new  int[stackSize  -  1];  System.arraycopy(pathNames,  0,  pathNames,  0,  stackSize  -  1);  return;  [FE]  NegativeArraySizeException  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {  popStack();      [BUGGY]  int[]  result  =  new  int[stackSize  -  1];  System.arraycopy(pathNames,  0,  pathNames,  0,  stackSize  -  1);  return;  [BUGGY]      }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	262	262	2	replace	int[]  result  =  new  int[stackSize  -  1];  System.arraycopy(pathNames,  0,  pathNames,  0,  stackSize  -  1);  return;	  if(stackSize    >    0)    {    int[]    result    =    new    int[stackSize    -    1];    System.arraycopy(pathNames,    0,    pathNames,    0,    stackSize    -    1);    return;    }    	compilable	  [FE]  NegativeArraySizeException  	84	2	replace
170	[BUG]  [BUGGY]  [FE]  ArrayIndexOutOfBoundsException  [FE]      ArrayIndexOutOfBoundsException    [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {  popStack();      [BUGGY]  if(stackSize  >  1)  {  int[]  result  =  new  int[stackSize  -  1];  System.arraycopy(pathNames,  0,  pathNames,  0,  stackSize  -  1);  return;  }  [BUGGY]      }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	262	262	2	add	if(stackSize  >  1)  {  int[]  result  =  new  int[stackSize  -  1];  System.arraycopy(pathNames,  0,  pathNames,  0,  stackSize  -  1);  return;  }	  if(stackSize    >    0)    {    int[]    result    =    new    int[stackSize    -    1];    System.arraycopy(pathNames,    0,    pathNames,    0,    stackSize    -    1);    return;    }    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	84	2	replace
171	[BUG]  [BUGGY]  if(stackSize  >  1)  {  int[]  result  =  new  int[stackSize  -  1];  System.arraycopy(pathNames,  0,  pathNames,  0,  stackSize  -  1);  return;  }  [FE]  ArrayIndexOutOfBoundsException  [FE]      ArrayIndexOutOfBoundsException    [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {  popStack();      [BUGGY]  if(stackSize  >  1)  {  int[]  result  =  new  int[stackSize  -  1];  System.arraycopy(pathNames,  0,  pathNames,  0,  stackSize  -  1);  return;  }  [BUGGY]      }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	262	262	2	replace	if(stackSize  >  1)  {  int[]  result  =  new  int[stackSize  -  1];  System.arraycopy(pathNames,  0,  pathNames,  0,  stackSize  -  1);  return;  }	  if(stackSize    >    0)    {    int[]    result    =    new    int[stackSize    -    1];    System.arraycopy(pathNames,    0,    pathNames,    0,    stackSize    -    1);    return;    }    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	84	2	replace
172	[BUG]  [BUGGY]  [FE]  NegativeArraySizeException  [FE]        ArrayIndexOutOfBoundsException    [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {  popStack();      [BUGGY]  Integer[]  result  =  new  Integer[stackSize  -  1];  System.arraycopy(pathNames,  0,  pathNames,  0,  stackSize  -  1);  return;  [BUGGY]      }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	262	262	2	add	Integer[]  result  =  new  Integer[stackSize  -  1];  System.arraycopy(pathNames,  0,  pathNames,  0,  stackSize  -  1);  return;	  if(stackSize    >    0)    {    int[]    result    =    new    int[stackSize    -    1];    System.arraycopy(pathNames,    0,    pathNames,    0,    stackSize    -    1);    return;    }    	compilable	  [FE]  NegativeArraySizeException  	84	2	replace
173	[BUG]  [BUGGY]  Integer[]  result  =  new  Integer[stackSize  -  1];  System.arraycopy(pathNames,  0,  pathNames,  0,  stackSize  -  1);  return;  [FE]  NegativeArraySizeException  [FE]        ArrayIndexOutOfBoundsException    [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {  popStack();      [BUGGY]  Integer[]  result  =  new  Integer[stackSize  -  1];  System.arraycopy(pathNames,  0,  pathNames,  0,  stackSize  -  1);  return;  [BUGGY]      }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	262	262	2	replace	Integer[]  result  =  new  Integer[stackSize  -  1];  System.arraycopy(pathNames,  0,  pathNames,  0,  stackSize  -  1);  return;	  if(stackSize    >    0)    {    int[]    result    =    new    int[stackSize    -    1];    System.arraycopy(pathNames,    0,    pathNames,    0,    stackSize    -    1);    return;    }    	compilable	  [FE]  NegativeArraySizeException  	84	2	replace
174	[BUG]  [BUGGY]  [FE]  ArrayIndexOutOfBoundsException  [FE]          ArrayIndexOutOfBoundsException    [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {  popStack();      [BUGGY]  int[]  result  =  new  int[pathNames.length  -  1];  System.arraycopy(pathNames,  0,  pathNames,  0,  stackSize  -  1);  return;  [BUGGY]      }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	262	262	2	add	int[]  result  =  new  int[pathNames.length  -  1];  System.arraycopy(pathNames,  0,  pathNames,  0,  stackSize  -  1);  return;	  if(stackSize    >    0)    {    int[]    result    =    new    int[stackSize    -    1];    System.arraycopy(pathNames,    0,    pathNames,    0,    stackSize    -    1);    return;    }    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	84	2	replace
175	[BUG]  [BUGGY]  int[]  result  =  new  int[pathNames.length  -  1];  System.arraycopy(pathNames,  0,  pathNames,  0,  stackSize  -  1);  return;  [FE]  ArrayIndexOutOfBoundsException  [FE]          ArrayIndexOutOfBoundsException    [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {  popStack();      [BUGGY]  int[]  result  =  new  int[pathNames.length  -  1];  System.arraycopy(pathNames,  0,  pathNames,  0,  stackSize  -  1);  return;  [BUGGY]      }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	262	262	2	replace	int[]  result  =  new  int[pathNames.length  -  1];  System.arraycopy(pathNames,  0,  pathNames,  0,  stackSize  -  1);  return;	  if(stackSize    >    0)    {    int[]    result    =    new    int[stackSize    -    1];    System.arraycopy(pathNames,    0,    pathNames,    0,    stackSize    -    1);    return;    }    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	84	2	replace
176	[BUG]  [BUGGY]  [FE]  NegativeArraySizeException  [FE]            ArrayIndexOutOfBoundsException    [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {  popStack();      [BUGGY]  if(stackSize  ==  0)  {  int[]  result  =  new  int[stackSize  -  1];  System.arraycopy(pathNames,  0,  pathNames,  0,  stackSize  -  1);  return;  }  [BUGGY]      }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	262	262	2	add	if(stackSize  ==  0)  {  int[]  result  =  new  int[stackSize  -  1];  System.arraycopy(pathNames,  0,  pathNames,  0,  stackSize  -  1);  return;  }	  if(stackSize    >    0)    {    int[]    result    =    new    int[stackSize    -    1];    System.arraycopy(pathNames,    0,    pathNames,    0,    stackSize    -    1);    return;    }    	compilable	  [FE]  NegativeArraySizeException  	84	2	replace
177	[BUG]  [BUGGY]  if(stackSize  ==  0)  {  int[]  result  =  new  int[stackSize  -  1];  System.arraycopy(pathNames,  0,  pathNames,  0,  stackSize  -  1);  return;  }  [FE]  NegativeArraySizeException  [FE]            ArrayIndexOutOfBoundsException    [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {  popStack();      [BUGGY]  if(stackSize  ==  0)  {  int[]  result  =  new  int[stackSize  -  1];  System.arraycopy(pathNames,  0,  pathNames,  0,  stackSize  -  1);  return;  }  [BUGGY]      }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	262	262	2	replace	if(stackSize  ==  0)  {  int[]  result  =  new  int[stackSize  -  1];  System.arraycopy(pathNames,  0,  pathNames,  0,  stackSize  -  1);  return;  }	  if(stackSize    >    0)    {    int[]    result    =    new    int[stackSize    -    1];    System.arraycopy(pathNames,    0,    pathNames,    0,    stackSize    -    1);    return;    }    	compilable	  [FE]  NegativeArraySizeException  	84	2	replace
178	[BUG]  [BUGGY]  [FE]  NegativeArraySizeException  [FE]                ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {  popStack();      [BUGGY]  pathIndices  =  new  int[stackSize  -  1];  System.arraycopy(pathNames,  0,  pathNames,  0,  stackSize  -  1);  [BUGGY]      }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	262	262	2	add	pathIndices  =  new  int[stackSize  -  1];  System.arraycopy(pathNames,  0,  pathNames,  0,  stackSize  -  1);	  if(stackSize    >    0)    {    pathIndices    =    new    int[stackSize    -    1];    System.arraycopy(pathNames,    0,    pathNames,    0,    stackSize    -    1);    }    else    {    throw    new    JsonTokenException(   "   ");    }    	compilable	  [FE]  NegativeArraySizeException  	49	2	replace
179	[BUG]  [BUGGY]  pathIndices  =  new  int[stackSize  -  1];  System.arraycopy(pathNames,  0,  pathNames,  0,  stackSize  -  1);  [FE]  NegativeArraySizeException  [FE]                ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {  popStack();      [BUGGY]  pathIndices  =  new  int[stackSize  -  1];  System.arraycopy(pathNames,  0,  pathNames,  0,  stackSize  -  1);  [BUGGY]      }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	262	262	2	replace	pathIndices  =  new  int[stackSize  -  1];  System.arraycopy(pathNames,  0,  pathNames,  0,  stackSize  -  1);	  if(stackSize    >    0)    {    pathIndices    =    new    int[stackSize    -    1];    System.arraycopy(pathNames,    0,    pathNames,    0,    stackSize    -    1);    }    else    {    throw    new    JsonTokenException(   "   ");    }    	compilable	  [FE]  NegativeArraySizeException  	49	2	replace
180	[BUG]  [BUGGY]  if(stackSize  >  0)  {  pathIndices  =  new  int[pathNames.length  -  1];  System.arraycopy(pathNames,  0,  pathNames,  0,  stackSize  -  1);  }  else  {  throw  new  JsonTokenException( " ");  }  [CE]  cannot  find  symbol  [FE]                  ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {  popStack();      [BUGGY]  if(stackSize  >  0)  {  pathIndices  =  new  int[pathNames.length  -  1];  System.arraycopy(pathNames,  0,  pathNames,  0,  stackSize  -  1);  }  else  {  throw  new  JsonTokenException( " ");  }  [BUGGY]      }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	262	262	2	replace	if(stackSize  >  0)  {  pathIndices  =  new  int[pathNames.length  -  1];  System.arraycopy(pathNames,  0,  pathNames,  0,  stackSize  -  1);  }  else  {  throw  new  JsonTokenException( " ");  }	  if(stackSize    >    0)    {    pathIndices    =    new    int[stackSize    -    1];    System.arraycopy(pathNames,    0,    pathNames,    0,    stackSize    -    1);    }    else    {    throw    new    JsonTokenException(   "   ");    }    	non-compiled	[CE]  cannot  find  symbol	49	None	replace
181	[BUG]  [BUGGY]  if(stackSize  >  1)  {  pathIndices  =  new  int[stackSize  -  1];  System.arraycopy(pathNames,  0,  pathNames,  0,  stackSize  -  1);  }  else  {  throw  new  JsonTokenException( " ");  }  [CE]  cannot  find  symbol  [FE]                    ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {  popStack();      [BUGGY]  if(stackSize  >  1)  {  pathIndices  =  new  int[stackSize  -  1];  System.arraycopy(pathNames,  0,  pathNames,  0,  stackSize  -  1);  }  else  {  throw  new  JsonTokenException( " ");  }  [BUGGY]      }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	262	262	2	replace	if(stackSize  >  1)  {  pathIndices  =  new  int[stackSize  -  1];  System.arraycopy(pathNames,  0,  pathNames,  0,  stackSize  -  1);  }  else  {  throw  new  JsonTokenException( " ");  }	  if(stackSize    >    0)    {    pathIndices    =    new    int[stackSize    -    1];    System.arraycopy(pathNames,    0,    pathNames,    0,    stackSize    -    1);    }    else    {    throw    new    JsonTokenException(   "   ");    }    	non-compiled	[CE]  cannot  find  symbol	49	None	replace
182	[BUG]  [BUGGY]  pathIndices  =  new  int[stackSize  -  1];  System.arraycopy(pathNames,  0,  pathNames,  0,  stackSize  -  1);  }  else  {  throw  new  JsonTokenException( " ");  }  [CE]  [FE]                      ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {  popStack();      [BUGGY]  pathIndices  =  new  int[stackSize  -  1];  System.arraycopy(pathNames,  0,  pathNames,  0,  stackSize  -  1);  }  else  {  throw  new  JsonTokenException( " ");  }  [BUGGY]      }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	262	262	2	replace	pathIndices  =  new  int[stackSize  -  1];  System.arraycopy(pathNames,  0,  pathNames,  0,  stackSize  -  1);  }  else  {  throw  new  JsonTokenException( " ");  }	  if(stackSize    >    0)    {    pathIndices    =    new    int[stackSize    -    1];    System.arraycopy(pathNames,    0,    pathNames,    0,    stackSize    -    1);    }    else    {    throw    new    JsonTokenException(   "   ");    }    	non-compiled	[CE]  	49	None	replace
183	[BUG]  [BUGGY]  PathIndices  pathIndices  =  new  PathIndices(stackSize  -  1);  System.arraycopy(pathNames,  0,  pathNames,  0,  stackSize  -  1);  [CE]  cannot  find  symbol  [FE]                        ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {  popStack();      [BUGGY]  PathIndices  pathIndices  =  new  PathIndices(stackSize  -  1);  System.arraycopy(pathNames,  0,  pathNames,  0,  stackSize  -  1);  [BUGGY]      }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	262	262	2	replace	PathIndices  pathIndices  =  new  PathIndices(stackSize  -  1);  System.arraycopy(pathNames,  0,  pathNames,  0,  stackSize  -  1);	  if(stackSize    >    0)    {    pathIndices    =    new    int[stackSize    -    1];    System.arraycopy(pathNames,    0,    pathNames,    0,    stackSize    -    1);    }    else    {    throw    new    JsonTokenException(   "   ");    }    	non-compiled	[CE]  cannot  find  symbol	49	None	replace
184	[BUG]  [BUGGY]  pathNames[stackSize  -  1]  =   "null "  +  JsonToken.VALUE;  [CE]  cannot  find  symbol  VALUE  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {  popStack();      [BUGGY]  pathNames[stackSize  -  1]  =   "null "  +  JsonToken.VALUE;  [BUGGY]      }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	262	262	2	replace	pathNames[stackSize  -  1]  =   "null "  +  JsonToken.VALUE;	  pathNames[stackSize    -    1]    =       "null   "    +    JsonToken.NAME;    	non-compiled	[CE]  cannot  find  symbol  VALUE	91	None	replace
185	[BUG]  [BUGGY]  [FE]  ArrayIndexOutOfBoundsException  [FE]      ArrayIndexOutOfBoundsException    [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {  popStack();      [BUGGY]  pathNames[stackSize  -  2]  =   "null "  +  JsonToken.NAME;  [BUGGY]      }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	262	262	2	add	pathNames[stackSize  -  2]  =   "null "  +  JsonToken.NAME;	  pathNames[stackSize    -    1]    =       "null   "    +    JsonToken.NAME;    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	91	2	replace
186	[BUG]  [BUGGY]  pathNames[stackSize  -  2]  =   "null "  +  JsonToken.NAME;  [FE]  ArrayIndexOutOfBoundsException  [FE]      ArrayIndexOutOfBoundsException    [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {  popStack();      [BUGGY]  pathNames[stackSize  -  2]  =   "null "  +  JsonToken.NAME;  [BUGGY]      }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	262	262	2	replace	pathNames[stackSize  -  2]  =   "null "  +  JsonToken.NAME;	  pathNames[stackSize    -    1]    =       "null   "    +    JsonToken.NAME;    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	91	2	replace
187	[BUG]  [BUGGY]  pathNames[stackSize  -  1]  =   "null "  +  JsonToken.VALUE_NAME;  [CE]  cannot  find  symbol  VALUE_NAME  [FE]        ArrayIndexOutOfBoundsException    [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {  popStack();      [BUGGY]  pathNames[stackSize  -  1]  =   "null "  +  JsonToken.VALUE_NAME;  [BUGGY]      }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	262	262	2	replace	pathNames[stackSize  -  1]  =   "null "  +  JsonToken.VALUE_NAME;	  pathNames[stackSize    -    1]    =       "null   "    +    JsonToken.NAME;    	non-compiled	[CE]  cannot  find  symbol  VALUE_NAME	91	None	replace
188	[BUG]  [BUGGY]  pathNames[stackSize  -  1]  =   "null "  +  JsonToken.VALUE_NUMBER_ARRAY;  [CE]  cannot  find  symbol  VALUE_NUMBER_ARRAY  [FE]                      ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {  popStack();      [BUGGY]  pathNames[stackSize  -  1]  =   "null "  +  JsonToken.VALUE_NUMBER_ARRAY;  [BUGGY]      }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	262	262	2	replace	pathNames[stackSize  -  1]  =   "null "  +  JsonToken.VALUE_NUMBER_ARRAY;	  pathNames[stackSize    -    1]    =       "null   "    +    JsonToken.VALUE_EMBEDDED_ARRAY;    	non-compiled	[CE]  cannot  find  symbol  VALUE_NUMBER_ARRAY	42	None	replace
189	[BUG]  [BUGGY]  pathNames[stackSize  -  1]  =   "null "  +  JsonToken.START_ARRAY;  [CE]  cannot  find  symbol  START_ARRAY  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {  popStack();      [BUGGY]  pathNames[stackSize  -  1]  =   "null "  +  JsonToken.START_ARRAY;  [BUGGY]      }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	262	262	2	replace	pathNames[stackSize  -  1]  =   "null "  +  JsonToken.START_ARRAY;	  pathNames[stackSize    -    1]    =       "null   "    +    JsonToken.END_ARRAY;    	non-compiled	[CE]  cannot  find  symbol  START_ARRAY	62	None	replace
190	[BUG]  [BUGGY]  pathNames[stackSize  -  1]  =  JsonToken.END_ARRAY;  [CE]  incompatible  types  [FE]      ArrayIndexOutOfBoundsException    [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {  popStack();      [BUGGY]  pathNames[stackSize  -  1]  =  JsonToken.END_ARRAY;  [BUGGY]      }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	262	262	2	replace	pathNames[stackSize  -  1]  =  JsonToken.END_ARRAY;	  pathNames[stackSize    -    1]    =       "null   "    +    JsonToken.END_ARRAY;    	non-compiled	[CE]  incompatible  types	62	None	replace
191	[BUG]  [BUGGY]  PathIndexOutOfBoundsException.printStackTrace();  pathNames[stackSize  -  1]  =  null;  [CE]  cannot  find  symbol  PathIndexOutOfBoundsException  [FE]          ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {  popStack();      [BUGGY]  PathIndexOutOfBoundsException.printStackTrace();  pathNames[stackSize  -  1]  =  null;  [BUGGY]      }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	262	262	2	replace	PathIndexOutOfBoundsException.printStackTrace();  pathNames[stackSize  -  1]  =  null;	  pathNames[stackSize    -    1]    =    null;    PathIndexOutOfBoundsException.printStackTrace();    pathNames[stackSize    -    1]    =    null;    	non-compiled	[CE]  cannot  find  symbol  PathIndexOutOfBoundsException	28	None	replace
192	[BUG]  [BUGGY]  pathIndexOutOfBoundsException.printStackTrace();  pathNames[stackSize  -  1]  =  null;  [CE]  cannot  find  symbol  pathIndexOutOfBoundsException  [FE]            ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {  popStack();      [BUGGY]  pathIndexOutOfBoundsException.printStackTrace();  pathNames[stackSize  -  1]  =  null;  [BUGGY]      }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	262	262	2	replace	pathIndexOutOfBoundsException.printStackTrace();  pathNames[stackSize  -  1]  =  null;	  pathNames[stackSize    -    1]    =    null;    PathIndexOutOfBoundsException.printStackTrace();    pathNames[stackSize    -    1]    =    null;    	non-compiled	[CE]  cannot  find  symbol  pathIndexOutOfBoundsException	28	None	replace
193	[BUG]  [BUGGY]  [FE]  ArrayIndexOutOfBoundsException  [FE]              ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {  popStack();      [BUGGY]  pathNames[stackSize  -  3]  =  null;  [BUGGY]      }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	262	262	2	add	pathNames[stackSize  -  3]  =  null;	  pathNames[stackSize    -    1]    =    null;    PathIndexOutOfBoundsException.printStackTrace();    pathNames[stackSize    -    1]    =    null;    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	28	2	replace
194	[BUG]  [BUGGY]  pathNames[stackSize  -  3]  =  null;  [FE]  ArrayIndexOutOfBoundsException  [FE]              ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {  popStack();      [BUGGY]  pathNames[stackSize  -  3]  =  null;  [BUGGY]      }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	262	262	2	replace	pathNames[stackSize  -  3]  =  null;	  pathNames[stackSize    -    1]    =    null;    PathIndexOutOfBoundsException.printStackTrace();    pathNames[stackSize    -    1]    =    null;    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	28	2	replace
195	[BUG]  [BUGGY]  Path[]  result  =  pathNames[stackSize  -  1];  [CE]  cannot  find  symbol  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {  popStack();      [BUGGY]  Path[]  result  =  pathNames[stackSize  -  1];  [BUGGY]      }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	262	262	2	replace	Path[]  result  =  pathNames[stackSize  -  1];	  if(stackSize    >    0)    {    pathNames[stackSize    -    1]    =    null;    }    	non-compiled	[CE]  cannot  find  symbol	20	None	replace
196	[BUG]  [BUGGY]  PathIndices[stackSize  -  1]  =  null;  [CE]  cannot  find  symbol  PathIndices  [FE]      ArrayIndexOutOfBoundsException    [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {  popStack();      [BUGGY]  PathIndices[stackSize  -  1]  =  null;  [BUGGY]      }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	262	262	2	replace	PathIndices[stackSize  -  1]  =  null;	  if(stackSize    >    0)    {    pathNames[stackSize    -    1]    =    null;    }    	non-compiled	[CE]  cannot  find  symbol  PathIndices	20	None	replace
197	[BUG]  [BUGGY]  paths[stackSize  -  1]  =  null;  [CE]  cannot  find  symbol  paths  [FE]        ArrayIndexOutOfBoundsException    [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {  popStack();      [BUGGY]  paths[stackSize  -  1]  =  null;  [BUGGY]      }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	262	262	2	replace	paths[stackSize  -  1]  =  null;	  if(stackSize    >    0)    {    pathNames[stackSize    -    1]    =    null;    }    	non-compiled	[CE]  cannot  find  symbol  paths	20	None	replace
198	[BUG]  [BUGGY]  pathNames[stackSize  -  1]  =  null;  }  [CE]  ']'  expected  [FE]          ArrayIndexOutOfBoundsException    [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {  popStack();      [BUGGY]  pathNames[stackSize  -  1]  =  null;  }  [BUGGY]      }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	262	262	2	replace	pathNames[stackSize  -  1]  =  null;  }	  if(stackSize    >    0)    {    pathNames[stackSize    -    1]    =    null;    }    	non-compiled	[CE]  ']'  expected	20	None	replace
199	[BUG]  [BUGGY]  [FE]  ArrayIndexOutOfBoundsException  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {  popStack();      [BUGGY]  pathNames[stackSize  -  2]  =  null;  if(stackSize  >  0)  {  pathNames[stackSize  -  1]  =  null;  }  else  {  popStack();  throw  new  RuntimeException( " ");  }  [BUGGY]      }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	262	262	2	add	pathNames[stackSize  -  2]  =  null;  if(stackSize  >  0)  {  pathNames[stackSize  -  1]  =  null;  }  else  {  popStack();  throw  new  RuntimeException( " ");  }	  pathNames[stackSize    -    1]    =    null;    if(stackSize    >    0)    {    pathNames[stackSize    -    1]    =    null;    }    else    {    popStack();    throw    new    RuntimeException(   "   ");    }    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	75	2	replace
200	[BUG]  [BUGGY]  pathNames[stackSize  -  2]  =  null;  if(stackSize  >  0)  {  pathNames[stackSize  -  1]  =  null;  }  else  {  popStack();  throw  new  RuntimeException( " ");  }  [FE]  ArrayIndexOutOfBoundsException  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {  popStack();      [BUGGY]  pathNames[stackSize  -  2]  =  null;  if(stackSize  >  0)  {  pathNames[stackSize  -  1]  =  null;  }  else  {  popStack();  throw  new  RuntimeException( " ");  }  [BUGGY]      }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	262	262	2	replace	pathNames[stackSize  -  2]  =  null;  if(stackSize  >  0)  {  pathNames[stackSize  -  1]  =  null;  }  else  {  popStack();  throw  new  RuntimeException( " ");  }	  pathNames[stackSize    -    1]    =    null;    if(stackSize    >    0)    {    pathNames[stackSize    -    1]    =    null;    }    else    {    popStack();    throw    new    RuntimeException(   "   ");    }    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	75	2	replace
201	[BUG]  [BUGGY]  [FE]  ArrayIndexOutOfBoundsException  [FE]      ArrayIndexOutOfBoundsException    [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {  popStack();      [BUGGY]  pathNames[stackSize  -  2]  =  null;  if(stackSize  >  0)  {  pathNames[stackSize  -  2]  =  null;  }  else  {  popStack();  throw  new  RuntimeException( " ");  }  [BUGGY]      }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	262	262	2	add	pathNames[stackSize  -  2]  =  null;  if(stackSize  >  0)  {  pathNames[stackSize  -  2]  =  null;  }  else  {  popStack();  throw  new  RuntimeException( " ");  }	  pathNames[stackSize    -    1]    =    null;    if(stackSize    >    0)    {    pathNames[stackSize    -    1]    =    null;    }    else    {    popStack();    throw    new    RuntimeException(   "   ");    }    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	75	2	replace
202	[BUG]  [BUGGY]  pathNames[stackSize  -  2]  =  null;  if(stackSize  >  0)  {  pathNames[stackSize  -  2]  =  null;  }  else  {  popStack();  throw  new  RuntimeException( " ");  }  [FE]  ArrayIndexOutOfBoundsException  [FE]      ArrayIndexOutOfBoundsException    [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {  popStack();      [BUGGY]  pathNames[stackSize  -  2]  =  null;  if(stackSize  >  0)  {  pathNames[stackSize  -  2]  =  null;  }  else  {  popStack();  throw  new  RuntimeException( " ");  }  [BUGGY]      }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	262	262	2	replace	pathNames[stackSize  -  2]  =  null;  if(stackSize  >  0)  {  pathNames[stackSize  -  2]  =  null;  }  else  {  popStack();  throw  new  RuntimeException( " ");  }	  pathNames[stackSize    -    1]    =    null;    if(stackSize    >    0)    {    pathNames[stackSize    -    1]    =    null;    }    else    {    popStack();    throw    new    RuntimeException(   "   ");    }    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	75	2	replace
203	[BUG]  [BUGGY]  Path[]  pathIndices  =  new  Path[stackSize  -  1];  System.arraycopy(pathNames,  0,  pathNames,  0,  stackSize  -  1);  [CE]  cannot  find  symbol  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {  popStack();      [BUGGY]  Path[]  pathIndices  =  new  Path[stackSize  -  1];  System.arraycopy(pathNames,  0,  pathNames,  0,  stackSize  -  1);  [BUGGY]      }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	262	262	2	replace	Path[]  pathIndices  =  new  Path[stackSize  -  1];  System.arraycopy(pathNames,  0,  pathNames,  0,  stackSize  -  1);	  if(stackSize    >    0)    {    pathIndices    =    new    int[stackSize    -    1];    System.arraycopy(pathNames,    0,    pathNames,    0,    stackSize    -    1);    }    	non-compiled	[CE]  cannot  find  symbol	44	None	replace
204	[BUG]  [BUGGY]  [FE]  ArrayIndexOutOfBoundsException  [FE]      ArrayIndexOutOfBoundsException    [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {  popStack();      [BUGGY]  pathIndices  =  new  int[pathNames.length  -  1];  System.arraycopy(pathNames,  0,  pathNames,  0,  stackSize  -  1);  [BUGGY]      }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	262	262	2	add	pathIndices  =  new  int[pathNames.length  -  1];  System.arraycopy(pathNames,  0,  pathNames,  0,  stackSize  -  1);	  if(stackSize    >    0)    {    pathIndices    =    new    int[stackSize    -    1];    System.arraycopy(pathNames,    0,    pathNames,    0,    stackSize    -    1);    }    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	44	2	replace
205	[BUG]  [BUGGY]  pathIndices  =  new  int[pathNames.length  -  1];  System.arraycopy(pathNames,  0,  pathNames,  0,  stackSize  -  1);  [FE]  ArrayIndexOutOfBoundsException  [FE]      ArrayIndexOutOfBoundsException    [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {  popStack();      [BUGGY]  pathIndices  =  new  int[pathNames.length  -  1];  System.arraycopy(pathNames,  0,  pathNames,  0,  stackSize  -  1);  [BUGGY]      }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	262	262	2	replace	pathIndices  =  new  int[pathNames.length  -  1];  System.arraycopy(pathNames,  0,  pathNames,  0,  stackSize  -  1);	  if(stackSize    >    0)    {    pathIndices    =    new    int[stackSize    -    1];    System.arraycopy(pathNames,    0,    pathNames,    0,    stackSize    -    1);    }    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	44	2	replace
206	[BUG]  [BUGGY]  [FE]  ArrayIndexOutOfBoundsException  [FE]        ArrayIndexOutOfBoundsException    [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {  popStack();      [BUGGY]  if(stackSize  >  0)  {  pathIndices  =  new  int[pathNames.length  -  1];  System.arraycopy(pathNames,  0,  pathNames,  0,  stackSize  -  1);  }  [BUGGY]      }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	262	262	2	add	if(stackSize  >  0)  {  pathIndices  =  new  int[pathNames.length  -  1];  System.arraycopy(pathNames,  0,  pathNames,  0,  stackSize  -  1);  }	  if(stackSize    >    0)    {    pathIndices    =    new    int[stackSize    -    1];    System.arraycopy(pathNames,    0,    pathNames,    0,    stackSize    -    1);    }    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	44	2	replace
207	[BUG]  [BUGGY]  if(stackSize  >  0)  {  pathIndices  =  new  int[pathNames.length  -  1];  System.arraycopy(pathNames,  0,  pathNames,  0,  stackSize  -  1);  }  [FE]  ArrayIndexOutOfBoundsException  [FE]        ArrayIndexOutOfBoundsException    [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {  popStack();      [BUGGY]  if(stackSize  >  0)  {  pathIndices  =  new  int[pathNames.length  -  1];  System.arraycopy(pathNames,  0,  pathNames,  0,  stackSize  -  1);  }  [BUGGY]      }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	262	262	2	replace	if(stackSize  >  0)  {  pathIndices  =  new  int[pathNames.length  -  1];  System.arraycopy(pathNames,  0,  pathNames,  0,  stackSize  -  1);  }	  if(stackSize    >    0)    {    pathIndices    =    new    int[stackSize    -    1];    System.arraycopy(pathNames,    0,    pathNames,    0,    stackSize    -    1);    }    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	44	2	replace
208	[BUG]  [BUGGY]  [FE]  ArrayIndexOutOfBoundsException  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {  popStack();      [BUGGY]  if(stackSize  >  0)  {  pathNames[stackSize  -  1]  =     "null   ";  }  else  {  popStack();  }  if(stackSize  >  0)  {  pathNames[stackSize  -  1]  =   "null ";  }  else  {  popStack();  }  [BUGGY]      }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	262	262	2	add	if(stackSize    >    0)    {    pathNames[stackSize    -    1]    =       "null   ";    }    else    {    popStack();    }    if(stackSize  >  0)  {  pathNames[stackSize  -  1]  =   "null ";  }  else  {  popStack();  }	  	compilable	  [FE]  ArrayIndexOutOfBoundsException  	17	2	add
209	[BUG]  [BUGGY]  if(stackSize  >  0)  {  pathNames[stackSize  -  1]  =     "null   ";  }  else  {  popStack();  }  if(stackSize  >  0)  {  pathNames[stackSize  -  1]  =   "null ";  }  else  {  popStack();  }  [FE]  ArrayIndexOutOfBoundsException  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {  popStack();      [BUGGY]  if(stackSize  >  0)  {  pathNames[stackSize  -  1]  =     "null   ";  }  else  {  popStack();  }  if(stackSize  >  0)  {  pathNames[stackSize  -  1]  =   "null ";  }  else  {  popStack();  }  [BUGGY]      }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	262	262	2	replace	if(stackSize    >    0)    {    pathNames[stackSize    -    1]    =       "null   ";    }    else    {    popStack();    }    if(stackSize  >  0)  {  pathNames[stackSize  -  1]  =   "null ";  }  else  {  popStack();  }	  	compilable	  [FE]  ArrayIndexOutOfBoundsException  	17	2	add
210	[BUG]  [BUGGY]  if(stackSize  >  0)  {  pathNames[stackSize  -  1]  =     "null   ";  }  else  {  popStack();  }  if(stackSize  >  0)  {  pathNames[stackSize  -  1]  =   "null ".;  }  else  {  popStack();  }  [CE]  <identifier>  expected  [FE]      ArrayIndexOutOfBoundsException    [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {  popStack();      [BUGGY]  if(stackSize  >  0)  {  pathNames[stackSize  -  1]  =     "null   ";  }  else  {  popStack();  }  if(stackSize  >  0)  {  pathNames[stackSize  -  1]  =   "null ".;  }  else  {  popStack();  }  [BUGGY]      }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	262	262	2	replace	if(stackSize    >    0)    {    pathNames[stackSize    -    1]    =       "null   ";    }    else    {    popStack();    }    if(stackSize  >  0)  {  pathNames[stackSize  -  1]  =   "null ".;  }  else  {  popStack();  }	  	non-compiled	[CE]  <identifier>  expected	17	None	add
211	[BUG]  [BUGGY]  [FE]  ArrayIndexOutOfBoundsException  [FE]        ArrayIndexOutOfBoundsException    [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {  popStack();      [BUGGY]  if(stackSize  >  0)  {  pathNames[stackSize  -  1]  =     "null   ";  }  else  {  popStack();  }  if(stackSize  >  0)  {  pathNames[stackSize  -  1]  =   "null. ";  }  else  {  popStack();  }  [BUGGY]      }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	262	262	2	add	if(stackSize    >    0)    {    pathNames[stackSize    -    1]    =       "null   ";    }    else    {    popStack();    }    if(stackSize  >  0)  {  pathNames[stackSize  -  1]  =   "null. ";  }  else  {  popStack();  }	  	compilable	  [FE]  ArrayIndexOutOfBoundsException  	17	2	add
212	[BUG]  [BUGGY]  if(stackSize  >  0)  {  pathNames[stackSize  -  1]  =     "null   ";  }  else  {  popStack();  }  if(stackSize  >  0)  {  pathNames[stackSize  -  1]  =   "null. ";  }  else  {  popStack();  }  [FE]  ArrayIndexOutOfBoundsException  [FE]        ArrayIndexOutOfBoundsException    [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {  popStack();      [BUGGY]  if(stackSize  >  0)  {  pathNames[stackSize  -  1]  =     "null   ";  }  else  {  popStack();  }  if(stackSize  >  0)  {  pathNames[stackSize  -  1]  =   "null. ";  }  else  {  popStack();  }  [BUGGY]      }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	262	262	2	replace	if(stackSize    >    0)    {    pathNames[stackSize    -    1]    =       "null   ";    }    else    {    popStack();    }    if(stackSize  >  0)  {  pathNames[stackSize  -  1]  =   "null. ";  }  else  {  popStack();  }	  	compilable	  [FE]  ArrayIndexOutOfBoundsException  	17	2	add
213	[BUG]  [BUGGY]  if(stackSize  >  0)  {  pathNames[stackSize  -  1]  =     "null   ";  }  else  {  popStack();  }  if(stackSize  >  0)  {  pathNames[stackSize  -  1]  =  null   ";  }  else  {  popStack();  }  [CE]  unclosed  string  literal  [FE]          ArrayIndexOutOfBoundsException    [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {  popStack();      [BUGGY]  if(stackSize  >  0)  {  pathNames[stackSize  -  1]  =     "null   ";  }  else  {  popStack();  }  if(stackSize  >  0)  {  pathNames[stackSize  -  1]  =  null   ";  }  else  {  popStack();  }  [BUGGY]      }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	262	262	2	replace	if(stackSize    >    0)    {    pathNames[stackSize    -    1]    =       "null   ";    }    else    {    popStack();    }    if(stackSize  >  0)  {  pathNames[stackSize  -  1]  =  null   ";  }  else  {  popStack();  }	  	non-compiled	[CE]  unclosed  string  literal	17	None	add
214	[BUG]  [BUGGY]  if(stackSize  >  0)  {  pathNames[stackSize  -  1]  =     "null   ";  }  else  {  popStack();  }  if(stackSize  >  0)  {  pathNames[stackSize  -  1]  =   "null ",;  }  else  {  popStack();  }  [CE]  [FE]            ArrayIndexOutOfBoundsException    [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {  popStack();      [BUGGY]  if(stackSize  >  0)  {  pathNames[stackSize  -  1]  =     "null   ";  }  else  {  popStack();  }  if(stackSize  >  0)  {  pathNames[stackSize  -  1]  =   "null ",;  }  else  {  popStack();  }  [BUGGY]      }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	262	262	2	replace	if(stackSize    >    0)    {    pathNames[stackSize    -    1]    =       "null   ";    }    else    {    popStack();    }    if(stackSize  >  0)  {  pathNames[stackSize  -  1]  =   "null ",;  }  else  {  popStack();  }	  	non-compiled	[CE]  	17	None	add
215	[BUG]  [BUGGY]  [FE]  ArrayIndexOutOfBoundsException  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {  popStack();      [BUGGY]  if(stackSize  >  0)  {  int[]  result  =  new  int[stackSize  -  1];  System.arraycopy(pathNames,  0,  pathNames,  0,  stackSize  -  1);  return;  }  if(stackSize  >  0)  {  int[]  result  =  new  int[stackSize  -  1];  System.arraycopy(pathNames,  0,  pathNames,  0,  stackSize  -  1);  return;  }  [BUGGY]      }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	262	262	2	add	if(stackSize    >    0)    {    int[]    result    =    new    int[stackSize    -    1];    System.arraycopy(pathNames,    0,    pathNames,    0,    stackSize    -    1);    return;    }    if(stackSize  >  0)  {  int[]  result  =  new  int[stackSize  -  1];  System.arraycopy(pathNames,  0,  pathNames,  0,  stackSize  -  1);  return;  }	  	compilable	  [FE]  ArrayIndexOutOfBoundsException  	83	2	add
216	[BUG]  [BUGGY]  if(stackSize  >  0)  {  int[]  result  =  new  int[stackSize  -  1];  System.arraycopy(pathNames,  0,  pathNames,  0,  stackSize  -  1);  return;  }  if(stackSize  >  0)  {  int[]  result  =  new  int[stackSize  -  1];  System.arraycopy(pathNames,  0,  pathNames,  0,  stackSize  -  1);  return;  }  [FE]  ArrayIndexOutOfBoundsException  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {  popStack();      [BUGGY]  if(stackSize  >  0)  {  int[]  result  =  new  int[stackSize  -  1];  System.arraycopy(pathNames,  0,  pathNames,  0,  stackSize  -  1);  return;  }  if(stackSize  >  0)  {  int[]  result  =  new  int[stackSize  -  1];  System.arraycopy(pathNames,  0,  pathNames,  0,  stackSize  -  1);  return;  }  [BUGGY]      }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	262	262	2	replace	if(stackSize    >    0)    {    int[]    result    =    new    int[stackSize    -    1];    System.arraycopy(pathNames,    0,    pathNames,    0,    stackSize    -    1);    return;    }    if(stackSize  >  0)  {  int[]  result  =  new  int[stackSize  -  1];  System.arraycopy(pathNames,  0,  pathNames,  0,  stackSize  -  1);  return;  }	  	compilable	  [FE]  ArrayIndexOutOfBoundsException  	83	2	add
217	[BUG]  [BUGGY]  if(stackSize  >  0)  {  int[]  result  =  new  int[stackSize  -  1];  System.arraycopy(pathNames,  0,  pathNames,  0,  stackSize  -  1);  return;  }  if(stackSize  >  0)  {  int[]  result  =  new  int[result.length  -  1];  System.arraycopy(pathNames,  0,  pathNames,  0,  stackSize  -  1);  return;  }  [CE]  variable  result  might  not  have  been  initialized  [FE]      ArrayIndexOutOfBoundsException    [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {  popStack();      [BUGGY]  if(stackSize  >  0)  {  int[]  result  =  new  int[stackSize  -  1];  System.arraycopy(pathNames,  0,  pathNames,  0,  stackSize  -  1);  return;  }  if(stackSize  >  0)  {  int[]  result  =  new  int[result.length  -  1];  System.arraycopy(pathNames,  0,  pathNames,  0,  stackSize  -  1);  return;  }  [BUGGY]      }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	262	262	2	replace	if(stackSize    >    0)    {    int[]    result    =    new    int[stackSize    -    1];    System.arraycopy(pathNames,    0,    pathNames,    0,    stackSize    -    1);    return;    }    if(stackSize  >  0)  {  int[]  result  =  new  int[result.length  -  1];  System.arraycopy(pathNames,  0,  pathNames,  0,  stackSize  -  1);  return;  }	  	non-compiled	[CE]  variable  result  might  not  have  been  initialized	83	None	add
218	[BUG]  [BUGGY]  [FE]  ArrayIndexOutOfBoundsException  [FE]        ArrayIndexOutOfBoundsException    [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {  popStack();      [BUGGY]  if(stackSize  >  0)  {  int[]  result  =  new  int[stackSize  -  1];  System.arraycopy(pathNames,  0,  pathNames,  0,  stackSize  -  1);  return;  }  if(stackSize  >  0)  {  int[]  result  =  new  int[stackSize  -  1];  System.arraycopy(pathNames,  0,  result,  0,  stackSize  -  1);  return;  }  [BUGGY]      }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	262	262	2	add	if(stackSize    >    0)    {    int[]    result    =    new    int[stackSize    -    1];    System.arraycopy(pathNames,    0,    pathNames,    0,    stackSize    -    1);    return;    }    if(stackSize  >  0)  {  int[]  result  =  new  int[stackSize  -  1];  System.arraycopy(pathNames,  0,  result,  0,  stackSize  -  1);  return;  }	  	compilable	  [FE]  ArrayIndexOutOfBoundsException  	83	2	add
219	[BUG]  [BUGGY]  if(stackSize  >  0)  {  int[]  result  =  new  int[stackSize  -  1];  System.arraycopy(pathNames,  0,  pathNames,  0,  stackSize  -  1);  return;  }  if(stackSize  >  0)  {  int[]  result  =  new  int[stackSize  -  1];  System.arraycopy(pathNames,  0,  result,  0,  stackSize  -  1);  return;  }  [FE]  ArrayIndexOutOfBoundsException  [FE]        ArrayIndexOutOfBoundsException    [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {  popStack();      [BUGGY]  if(stackSize  >  0)  {  int[]  result  =  new  int[stackSize  -  1];  System.arraycopy(pathNames,  0,  pathNames,  0,  stackSize  -  1);  return;  }  if(stackSize  >  0)  {  int[]  result  =  new  int[stackSize  -  1];  System.arraycopy(pathNames,  0,  result,  0,  stackSize  -  1);  return;  }  [BUGGY]      }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	262	262	2	replace	if(stackSize    >    0)    {    int[]    result    =    new    int[stackSize    -    1];    System.arraycopy(pathNames,    0,    pathNames,    0,    stackSize    -    1);    return;    }    if(stackSize  >  0)  {  int[]  result  =  new  int[stackSize  -  1];  System.arraycopy(pathNames,  0,  result,  0,  stackSize  -  1);  return;  }	  	compilable	  [FE]  ArrayIndexOutOfBoundsException  	83	2	add
220	[BUG]  [BUGGY]  if(stackSize  >  0)  {  int[]  result  =  new  int[stackSize  -  1];  System.arraycopy(pathNames,  0,  pathNames,  0,  stackSize  -  1);  return;  }  if(stackSize  >  0)  {  int[]  result  =  new  int[stackSize  -  1];  System.arraycopy(pathNames,  0,  pathNames,  0,  stackSize  -  1);  return;  [CE]  ';'  expected  [FE]          ArrayIndexOutOfBoundsException    [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {  popStack();      [BUGGY]  if(stackSize  >  0)  {  int[]  result  =  new  int[stackSize  -  1];  System.arraycopy(pathNames,  0,  pathNames,  0,  stackSize  -  1);  return;  }  if(stackSize  >  0)  {  int[]  result  =  new  int[stackSize  -  1];  System.arraycopy(pathNames,  0,  pathNames,  0,  stackSize  -  1);  return;  [BUGGY]      }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	262	262	2	replace	if(stackSize    >    0)    {    int[]    result    =    new    int[stackSize    -    1];    System.arraycopy(pathNames,    0,    pathNames,    0,    stackSize    -    1);    return;    }    if(stackSize  >  0)  {  int[]  result  =  new  int[stackSize  -  1];  System.arraycopy(pathNames,  0,  pathNames,  0,  stackSize  -  1);  return;	  	non-compiled	[CE]  ';'  expected	83	None	add
221	[BUG]  [BUGGY]  if(stackSize  >  0)  {  int[]  result  =  new  int[stackSize  -  1];  System.arraycopy(pathNames,  0,  pathNames,  0,  stackSize  -  1);  return;  }  if(stackSize  >  0)  {  int[]  result  =  new  int[stackSize  -  1];  System.arraycopy(pathNames,  0,  pathNames,  0,  stackSize  -  1);  [CE]  ';'  expected  [FE]            ArrayIndexOutOfBoundsException    [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {  popStack();      [BUGGY]  if(stackSize  >  0)  {  int[]  result  =  new  int[stackSize  -  1];  System.arraycopy(pathNames,  0,  pathNames,  0,  stackSize  -  1);  return;  }  if(stackSize  >  0)  {  int[]  result  =  new  int[stackSize  -  1];  System.arraycopy(pathNames,  0,  pathNames,  0,  stackSize  -  1);  [BUGGY]      }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	262	262	2	replace	if(stackSize    >    0)    {    int[]    result    =    new    int[stackSize    -    1];    System.arraycopy(pathNames,    0,    pathNames,    0,    stackSize    -    1);    return;    }    if(stackSize  >  0)  {  int[]  result  =  new  int[stackSize  -  1];  System.arraycopy(pathNames,  0,  pathNames,  0,  stackSize  -  1);	  	non-compiled	[CE]  ';'  expected	83	None	add
222	[BUG]  [BUGGY]  [FE]  ArrayIndexOutOfBoundsException  [FE]              ArrayIndexOutOfBoundsException    [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {  popStack();      [BUGGY]  if(stackSize  >  0)  {  int[]  result  =  new  int[stackSize  -  1];  System.arraycopy(pathNames,  0,  pathNames,  0,  stackSize  -  1);  return;  }  if(stackSize  >  0)  {  int[]  pathNames  =  new  int[stackSize  -  1];  System.arraycopy(pathNames,  0,  pathNames,  0,  stackSize  -  1);  return;  }  [BUGGY]      }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	262	262	2	add	if(stackSize    >    0)    {    int[]    result    =    new    int[stackSize    -    1];    System.arraycopy(pathNames,    0,    pathNames,    0,    stackSize    -    1);    return;    }    if(stackSize  >  0)  {  int[]  pathNames  =  new  int[stackSize  -  1];  System.arraycopy(pathNames,  0,  pathNames,  0,  stackSize  -  1);  return;  }	  	compilable	  [FE]  ArrayIndexOutOfBoundsException  	83	2	add
223	[BUG]  [BUGGY]  if(stackSize  >  0)  {  int[]  result  =  new  int[stackSize  -  1];  System.arraycopy(pathNames,  0,  pathNames,  0,  stackSize  -  1);  return;  }  if(stackSize  >  0)  {  int[]  pathNames  =  new  int[stackSize  -  1];  System.arraycopy(pathNames,  0,  pathNames,  0,  stackSize  -  1);  return;  }  [FE]  ArrayIndexOutOfBoundsException  [FE]              ArrayIndexOutOfBoundsException    [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {  popStack();      [BUGGY]  if(stackSize  >  0)  {  int[]  result  =  new  int[stackSize  -  1];  System.arraycopy(pathNames,  0,  pathNames,  0,  stackSize  -  1);  return;  }  if(stackSize  >  0)  {  int[]  pathNames  =  new  int[stackSize  -  1];  System.arraycopy(pathNames,  0,  pathNames,  0,  stackSize  -  1);  return;  }  [BUGGY]      }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	262	262	2	replace	if(stackSize    >    0)    {    int[]    result    =    new    int[stackSize    -    1];    System.arraycopy(pathNames,    0,    pathNames,    0,    stackSize    -    1);    return;    }    if(stackSize  >  0)  {  int[]  pathNames  =  new  int[stackSize  -  1];  System.arraycopy(pathNames,  0,  pathNames,  0,  stackSize  -  1);  return;  }	  	compilable	  [FE]  ArrayIndexOutOfBoundsException  	83	2	add
224	[BUG]  [BUGGY]  [FE]  ArrayIndexOutOfBoundsException  [FE]                ArrayIndexOutOfBoundsException    [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {  popStack();      [BUGGY]  if(stackSize  >  0)  {  int[]  result  =  new  int[stackSize  -  1];  System.arraycopy(pathNames,  0,  pathNames,  0,  stackSize  -  1);  return;  }  if(stackSize  >  0)  {  int[]  result  =  new  int[stackSize  -  1];  System.arraycopy(pathNames,  0,  pathNames,  1,  stackSize  -  1);  return;  }  [BUGGY]      }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	262	262	2	add	if(stackSize    >    0)    {    int[]    result    =    new    int[stackSize    -    1];    System.arraycopy(pathNames,    0,    pathNames,    0,    stackSize    -    1);    return;    }    if(stackSize  >  0)  {  int[]  result  =  new  int[stackSize  -  1];  System.arraycopy(pathNames,  0,  pathNames,  1,  stackSize  -  1);  return;  }	  	compilable	  [FE]  ArrayIndexOutOfBoundsException  	83	2	add
225	[BUG]  [BUGGY]  if(stackSize  >  0)  {  int[]  result  =  new  int[stackSize  -  1];  System.arraycopy(pathNames,  0,  pathNames,  0,  stackSize  -  1);  return;  }  if(stackSize  >  0)  {  int[]  result  =  new  int[stackSize  -  1];  System.arraycopy(pathNames,  0,  pathNames,  1,  stackSize  -  1);  return;  }  [FE]  ArrayIndexOutOfBoundsException  [FE]                ArrayIndexOutOfBoundsException    [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {  popStack();      [BUGGY]  if(stackSize  >  0)  {  int[]  result  =  new  int[stackSize  -  1];  System.arraycopy(pathNames,  0,  pathNames,  0,  stackSize  -  1);  return;  }  if(stackSize  >  0)  {  int[]  result  =  new  int[stackSize  -  1];  System.arraycopy(pathNames,  0,  pathNames,  1,  stackSize  -  1);  return;  }  [BUGGY]      }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	262	262	2	replace	if(stackSize    >    0)    {    int[]    result    =    new    int[stackSize    -    1];    System.arraycopy(pathNames,    0,    pathNames,    0,    stackSize    -    1);    return;    }    if(stackSize  >  0)  {  int[]  result  =  new  int[stackSize  -  1];  System.arraycopy(pathNames,  0,  pathNames,  1,  stackSize  -  1);  return;  }	  	compilable	  [FE]  ArrayIndexOutOfBoundsException  	83	2	add
226	[BUG]  [BUGGY]  pathNames[stackSize  -  2]  =  JsonToken.VALUE_NULL;  [CE]  cannot  find  symbol  VALUE_NULL  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {  popStack();      [BUGGY]  pathNames[stackSize  -  2]  =  JsonToken.VALUE_NULL;  [BUGGY]      }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	262	262	2	replace	pathNames[stackSize  -  2]  =  JsonToken.VALUE_NULL;	  pathNames[stackSize    -    2]    =    null;    	non-compiled	[CE]  cannot  find  symbol  VALUE_NULL	37	None	replace
227	[BUG]  [BUGGY]  pathNames[stackSize  -  2]  =  JsonToken.VALUE_EMBEDDED_OBJECT;  [CE]  cannot  find  symbol  VALUE_EMBEDDED_OBJECT  [FE]      ArrayIndexOutOfBoundsException    [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {  popStack();      [BUGGY]  pathNames[stackSize  -  2]  =  JsonToken.VALUE_EMBEDDED_OBJECT;  [BUGGY]      }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	262	262	2	replace	pathNames[stackSize  -  2]  =  JsonToken.VALUE_EMBEDDED_OBJECT;	  pathNames[stackSize    -    2]    =    null;    	non-compiled	[CE]  cannot  find  symbol  VALUE_EMBEDDED_OBJECT	37	None	replace
228	[BUG]  [BUGGY]  pathNames[stackSize  -  2]  =  JsonToken.VALUE_STRING;  [CE]  cannot  find  symbol  VALUE_STRING  [FE]        ArrayIndexOutOfBoundsException    [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {  popStack();      [BUGGY]  pathNames[stackSize  -  2]  =  JsonToken.VALUE_STRING;  [BUGGY]      }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	262	262	2	replace	pathNames[stackSize  -  2]  =  JsonToken.VALUE_STRING;	  pathNames[stackSize    -    2]    =    null;    	non-compiled	[CE]  cannot  find  symbol  VALUE_STRING	37	None	replace
229	[BUG]  [BUGGY]  pathNames[stackSize  -  2]  =  JsonToken.VALUE_EMBEDDED_ARRAY;  [CE]  cannot  find  symbol  VALUE_EMBEDDED_ARRAY  [FE]          ArrayIndexOutOfBoundsException    [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {  popStack();      [BUGGY]  pathNames[stackSize  -  2]  =  JsonToken.VALUE_EMBEDDED_ARRAY;  [BUGGY]      }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	262	262	2	replace	pathNames[stackSize  -  2]  =  JsonToken.VALUE_EMBEDDED_ARRAY;	  pathNames[stackSize    -    2]    =    null;    	non-compiled	[CE]  cannot  find  symbol  VALUE_EMBEDDED_ARRAY	37	None	replace
230	[BUG]  [BUGGY]  pathNames[stackSize  -  1]  =  null;  }  else  {  skipValue();  }  [CE]  'else'  without  'if'  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {  popStack();      [BUGGY]  pathNames[stackSize  -  1]  =  null;  }  else  {  skipValue();  }  [BUGGY]      }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	262	262	2	replace	pathNames[stackSize  -  1]  =  null;  }  else  {  skipValue();  }	          if(stackSize    >    0)    {    pathNames[stackSize    -    1]    =    null;    }    else    {    skipValue();    }    	non-compiled	[CE]  'else'  without  'if'	35	None	replace
231	[BUG]  [BUGGY]  PathIndices  pathIndices[stackSize  -  1]  =  null;  [CE]  ']'  expected  [FE]      ArrayIndexOutOfBoundsException    [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {  popStack();      [BUGGY]  PathIndices  pathIndices[stackSize  -  1]  =  null;  [BUGGY]      }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	262	262	2	replace	PathIndices  pathIndices[stackSize  -  1]  =  null;	          if(stackSize    >    0)    {    pathNames[stackSize    -    1]    =    null;    }    else    {    skipValue();    }    	non-compiled	[CE]  ']'  expected	35	None	replace
232	[BUG]  [BUGGY]  pathNames[stackSize  -  1]  =  null;  if(stackSize  >  1)  {  pathNames[stackSize  -  1]  =  null;  }  else  {  popStack();  skipStack();  }  [CE]  cannot  find  symbol  [FE]                ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {  popStack();      [BUGGY]  pathNames[stackSize  -  1]  =  null;  if(stackSize  >  1)  {  pathNames[stackSize  -  1]  =  null;  }  else  {  popStack();  skipStack();  }  [BUGGY]      }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	262	262	2	replace	pathNames[stackSize  -  1]  =  null;  if(stackSize  >  1)  {  pathNames[stackSize  -  1]  =  null;  }  else  {  popStack();  skipStack();  }	  pathNames[stackSize    -    1]    =    null;    if(stackSize    >    0)    {    pathNames[stackSize    -    1]    =    null;    }    else    {    popStack();    skipStack();    }    	non-compiled	[CE]  cannot  find  symbol	73	None	replace
233	[BUG]  [BUGGY]  pathNames[stackSize  -  2]  =  null;  if(stackSize  >  0)  {  pathNames[stackSize  -  1]  =  null;  }  else  {  popStack();  skipStack();  }  [CE]  cannot  find  symbol  [FE]                  ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {  popStack();      [BUGGY]  pathNames[stackSize  -  2]  =  null;  if(stackSize  >  0)  {  pathNames[stackSize  -  1]  =  null;  }  else  {  popStack();  skipStack();  }  [BUGGY]      }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	262	262	2	replace	pathNames[stackSize  -  2]  =  null;  if(stackSize  >  0)  {  pathNames[stackSize  -  1]  =  null;  }  else  {  popStack();  skipStack();  }	  pathNames[stackSize    -    1]    =    null;    if(stackSize    >    0)    {    pathNames[stackSize    -    1]    =    null;    }    else    {    popStack();    skipStack();    }    	non-compiled	[CE]  cannot  find  symbol	73	None	replace
234	[BUG]  [BUGGY]  pathNames[stackSize  -  1]  =  null;  if(stackSize  >  2)  {  pathNames[stackSize  -  1]  =  null;  }  else  {  popStack();  skipStack();  }  [CE]  cannot  find  symbol  [FE]                    ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {  popStack();      [BUGGY]  pathNames[stackSize  -  1]  =  null;  if(stackSize  >  2)  {  pathNames[stackSize  -  1]  =  null;  }  else  {  popStack();  skipStack();  }  [BUGGY]      }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	262	262	2	replace	pathNames[stackSize  -  1]  =  null;  if(stackSize  >  2)  {  pathNames[stackSize  -  1]  =  null;  }  else  {  popStack();  skipStack();  }	  pathNames[stackSize    -    1]    =    null;    if(stackSize    >    0)    {    pathNames[stackSize    -    1]    =    null;    }    else    {    popStack();    skipStack();    }    	non-compiled	[CE]  cannot  find  symbol	73	None	replace
235	[BUG]  [BUGGY]  pathNames[stackSize  -  1]  =  null;  if(result.length  >  0)  {  pathNames[stackSize  -  1]  =  null;  }  else  {  popStack();  skipStack();  }  [CE]  cannot  find  symbol  result  [FE]                      ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {  popStack();      [BUGGY]  pathNames[stackSize  -  1]  =  null;  if(result.length  >  0)  {  pathNames[stackSize  -  1]  =  null;  }  else  {  popStack();  skipStack();  }  [BUGGY]      }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	262	262	2	replace	pathNames[stackSize  -  1]  =  null;  if(result.length  >  0)  {  pathNames[stackSize  -  1]  =  null;  }  else  {  popStack();  skipStack();  }	  pathNames[stackSize    -    1]    =    null;    if(stackSize    >    0)    {    pathNames[stackSize    -    1]    =    null;    }    else    {    popStack();    skipStack();    }    	non-compiled	[CE]  cannot  find  symbol  result	73	None	replace
236	[BUG]  [BUGGY]  pathNames[stackSize  -  1]  =  null;  if(pathNames.length  >  0)  {  pathNames[stackSize  -  1]  =  null;  }  else  {  popStack();  skipStack();  }  [CE]  cannot  find  symbol  [FE]                        ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {  popStack();      [BUGGY]  pathNames[stackSize  -  1]  =  null;  if(pathNames.length  >  0)  {  pathNames[stackSize  -  1]  =  null;  }  else  {  popStack();  skipStack();  }  [BUGGY]      }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	262	262	2	replace	pathNames[stackSize  -  1]  =  null;  if(pathNames.length  >  0)  {  pathNames[stackSize  -  1]  =  null;  }  else  {  popStack();  skipStack();  }	  pathNames[stackSize    -    1]    =    null;    if(stackSize    >    0)    {    pathNames[stackSize    -    1]    =    null;    }    else    {    popStack();    skipStack();    }    	non-compiled	[CE]  cannot  find  symbol	73	None	replace
237	[BUG]  [BUGGY]  pathNames[stackSize  -  1]  =  JsonToken.START_ARRAY;  [CE]  cannot  find  symbol  START_ARRAY  [FE]                  ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {  popStack();      [BUGGY]  pathNames[stackSize  -  1]  =  JsonToken.START_ARRAY;  [BUGGY]      }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	262	262	2	replace	pathNames[stackSize  -  1]  =  JsonToken.START_ARRAY;	  pathNames[stackSize    -    1]    =    JsonToken.START_OBJECT;    	non-compiled	[CE]  cannot  find  symbol  START_ARRAY	13	None	replace
238	[BUG]  [BUGGY]  pathNames[stackSize  -  1]  =  JsonToken.START_OBJECTION;  [CE]  cannot  find  symbol  START_OBJECTION  [FE]                    ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {  popStack();      [BUGGY]  pathNames[stackSize  -  1]  =  JsonToken.START_OBJECTION;  [BUGGY]      }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	262	262	2	replace	pathNames[stackSize  -  1]  =  JsonToken.START_OBJECTION;	  pathNames[stackSize    -    1]    =    JsonToken.START_OBJECT;    	non-compiled	[CE]  cannot  find  symbol  START_OBJECTION	13	None	replace
239	[BUG]  [BUGGY]  pathNames[stackSize  -  1]  =  JsonToken.STRING;  [CE]  incompatible  types  [FE]                      ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {  popStack();      [BUGGY]  pathNames[stackSize  -  1]  =  JsonToken.STRING;  [BUGGY]      }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	262	262	2	replace	pathNames[stackSize  -  1]  =  JsonToken.STRING;	  pathNames[stackSize    -    1]    =    JsonToken.START_OBJECT;    	non-compiled	[CE]  incompatible  types	13	None	replace
240	[BUG]  [BUGGY]  pathNames[stackSize  -  1]  =   "null ",;  [CE]  [FE]          ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {  popStack();      [BUGGY]  pathNames[stackSize  -  1]  =   "null ",;  [BUGGY]      }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	262	262	2	replace	pathNames[stackSize  -  1]  =   "null ",;	  pathNames[stackSize    -    2]    =           "null       ";    pathNames[stackSize    -    2]    =       "null   ",;    	non-compiled	[CE]  	8	None	replace
241	[BUG]  [BUGGY]  int[]  result  =  new  int[stackSize  -  1];  for(int  i  =  0;  i  <  stackSize;  ++i)  {  result[i]  =  handleMissingName();  }  [CE]  cannot  find  symbol  [FE]        ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {  popStack();      [BUGGY]  int[]  result  =  new  int[stackSize  -  1];  for(int  i  =  0;  i  <  stackSize;  ++i)  {  result[i]  =  handleMissingName();  }  [BUGGY]      }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	262	262	2	replace	int[]  result  =  new  int[stackSize  -  1];  for(int  i  =  0;  i  <  stackSize;  ++i)  {  result[i]  =  handleMissingName();  }	          if(stackSize    >    0)    {    int[]    result    =    new    int[stackSize    -    1];    for(int    i    =    0;    i    <    stackSize;    ++i)    {    result[i]    =    handleMissingName();    }    	non-compiled	[CE]  cannot  find  symbol	86	None	replace
242	[BUG]  [BUGGY]  if(stackSize  >  1)  {  int[]  result  =  new  int[stackSize  -  1];  for(int  i  =  0;  i  <  stackSize;  ++i)  {  result[i]  =  handleMissingName();  }  [CE]  ';'  expected  [FE]          ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {  popStack();      [BUGGY]  if(stackSize  >  1)  {  int[]  result  =  new  int[stackSize  -  1];  for(int  i  =  0;  i  <  stackSize;  ++i)  {  result[i]  =  handleMissingName();  }  [BUGGY]      }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	262	262	2	replace	if(stackSize  >  1)  {  int[]  result  =  new  int[stackSize  -  1];  for(int  i  =  0;  i  <  stackSize;  ++i)  {  result[i]  =  handleMissingName();  }	          if(stackSize    >    0)    {    int[]    result    =    new    int[stackSize    -    1];    for(int    i    =    0;    i    <    stackSize;    ++i)    {    result[i]    =    handleMissingName();    }    	non-compiled	[CE]  ';'  expected	86	None	replace
243	[BUG]  [BUGGY]  []  result  =  new  int[stackSize  -  1];  for(int  i  =  0;  i  <  stackSize;  ++i)  {  result[i]  =  handleMissingName();  }  [CE]  illegal  start  of  expression  [FE]            ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {  popStack();      [BUGGY]  []  result  =  new  int[stackSize  -  1];  for(int  i  =  0;  i  <  stackSize;  ++i)  {  result[i]  =  handleMissingName();  }  [BUGGY]      }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	262	262	2	replace	[]  result  =  new  int[stackSize  -  1];  for(int  i  =  0;  i  <  stackSize;  ++i)  {  result[i]  =  handleMissingName();  }	          if(stackSize    >    0)    {    int[]    result    =    new    int[stackSize    -    1];    for(int    i    =    0;    i    <    stackSize;    ++i)    {    result[i]    =    handleMissingName();    }    	non-compiled	[CE]  illegal  start  of  expression	86	None	replace
244	[BUG]  [BUGGY]  if(stackSize  ==  0)  {  int[]  result  =  new  int[stackSize  -  1];  for(int  i  =  0;  i  <  stackSize;  ++i)  {  result[i]  =  handleMissingName();  }  [CE]  ';'  expected  [FE]              ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {  popStack();      [BUGGY]  if(stackSize  ==  0)  {  int[]  result  =  new  int[stackSize  -  1];  for(int  i  =  0;  i  <  stackSize;  ++i)  {  result[i]  =  handleMissingName();  }  [BUGGY]      }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	262	262	2	replace	if(stackSize  ==  0)  {  int[]  result  =  new  int[stackSize  -  1];  for(int  i  =  0;  i  <  stackSize;  ++i)  {  result[i]  =  handleMissingName();  }	          if(stackSize    >    0)    {    int[]    result    =    new    int[stackSize    -    1];    for(int    i    =    0;    i    <    stackSize;    ++i)    {    result[i]    =    handleMissingName();    }    	non-compiled	[CE]  ';'  expected	86	None	replace
245	[BUG]  [BUGGY]  if(stackSize  >=  0)  {  int[]  result  =  new  int[stackSize  -  1];  for(int  i  =  0;  i  <  stackSize;  ++i)  {  result[i]  =  handleMissingName();  }  [CE]  ';'  expected  [FE]                ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {  popStack();      [BUGGY]  if(stackSize  >=  0)  {  int[]  result  =  new  int[stackSize  -  1];  for(int  i  =  0;  i  <  stackSize;  ++i)  {  result[i]  =  handleMissingName();  }  [BUGGY]      }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	262	262	2	replace	if(stackSize  >=  0)  {  int[]  result  =  new  int[stackSize  -  1];  for(int  i  =  0;  i  <  stackSize;  ++i)  {  result[i]  =  handleMissingName();  }	          if(stackSize    >    0)    {    int[]    result    =    new    int[stackSize    -    1];    for(int    i    =    0;    i    <    stackSize;    ++i)    {    result[i]    =    handleMissingName();    }    	non-compiled	[CE]  ';'  expected	86	None	replace
246	[BUG]  [BUGGY]  if(stackSize  ==  0)  {  if(stackSize  >  0)  {  int[]  result  =  new  int[stackSize  -  1];  for(int  i  =  0;  i  <  stackSize;  ++i)  {  result[i]  =  handleMissingName();  }  [CE]  ';'  expected  [FE]                  ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {  popStack();      [BUGGY]  if(stackSize  ==  0)  {  if(stackSize  >  0)  {  int[]  result  =  new  int[stackSize  -  1];  for(int  i  =  0;  i  <  stackSize;  ++i)  {  result[i]  =  handleMissingName();  }  [BUGGY]      }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	262	262	2	replace	if(stackSize  ==  0)  {  if(stackSize  >  0)  {  int[]  result  =  new  int[stackSize  -  1];  for(int  i  =  0;  i  <  stackSize;  ++i)  {  result[i]  =  handleMissingName();  }	          if(stackSize    >    0)    {    int[]    result    =    new    int[stackSize    -    1];    for(int    i    =    0;    i    <    stackSize;    ++i)    {    result[i]    =    handleMissingName();    }    	non-compiled	[CE]  ';'  expected	86	None	replace
247	[BUG]  [BUGGY]  if(stackSize  >  0)  {  int[]  result  =  new  int[stackSize  -  1];  System.arraycopy(pathNames,  0,  result,  0,  stackSize  -  1,  stackSize  -  1);  }  [CE]  method  arraycopy  in  class  System  cannot  be  applied  to  given  types;  [FE]                ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {  popStack();      [BUGGY]  if(stackSize  >  0)  {  int[]  result  =  new  int[stackSize  -  1];  System.arraycopy(pathNames,  0,  result,  0,  stackSize  -  1,  stackSize  -  1);  }  [BUGGY]      }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	262	262	2	replace	if(stackSize  >  0)  {  int[]  result  =  new  int[stackSize  -  1];  System.arraycopy(pathNames,  0,  result,  0,  stackSize  -  1,  stackSize  -  1);  }	  if(stackSize    >    0)    {    int[]    result    =    new    int[stackSize    -    1];    System.arraycopy(stack,    0,    pathNames,    0,    stackSize    -    1,    stackSize    -    1);    }    	non-compiled	[CE]  method  arraycopy  in  class  System  cannot  be  applied  to  given  types;	82	None	replace
248	[BUG]  [BUGGY]  int[]  result  =  new  int[stackSize  -  1];  System.arraycopy(pathNames,  0,  result,  0,  stackSize  -  1,  stackSize  -  1);  [CE]  method  arraycopy  in  class  System  cannot  be  applied  to  given  types;  [FE]                  ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {  popStack();      [BUGGY]  int[]  result  =  new  int[stackSize  -  1];  System.arraycopy(pathNames,  0,  result,  0,  stackSize  -  1,  stackSize  -  1);  [BUGGY]      }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	262	262	2	replace	int[]  result  =  new  int[stackSize  -  1];  System.arraycopy(pathNames,  0,  result,  0,  stackSize  -  1,  stackSize  -  1);	  if(stackSize    >    0)    {    int[]    result    =    new    int[stackSize    -    1];    System.arraycopy(stack,    0,    pathNames,    0,    stackSize    -    1,    stackSize    -    1);    }    	non-compiled	[CE]  method  arraycopy  in  class  System  cannot  be  applied  to  given  types;	82	None	replace
249	[BUG]  [BUGGY]  Object[]  result  =  new  Object[stackSize  -  1];  System.arraycopy(pathNames,  0,  result,  0,  stackSize  -  1,  stackSize  -  1);  [CE]  method  arraycopy  in  class  System  cannot  be  applied  to  given  types;  [FE]                    ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {  popStack();      [BUGGY]  Object[]  result  =  new  Object[stackSize  -  1];  System.arraycopy(pathNames,  0,  result,  0,  stackSize  -  1,  stackSize  -  1);  [BUGGY]      }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	262	262	2	replace	Object[]  result  =  new  Object[stackSize  -  1];  System.arraycopy(pathNames,  0,  result,  0,  stackSize  -  1,  stackSize  -  1);	  if(stackSize    >    0)    {    int[]    result    =    new    int[stackSize    -    1];    System.arraycopy(stack,    0,    pathNames,    0,    stackSize    -    1,    stackSize    -    1);    }    	non-compiled	[CE]  method  arraycopy  in  class  System  cannot  be  applied  to  given  types;	82	None	replace
250	[BUG]  [BUGGY]  if(count  >  0)  {  int[]  result  =  new  int[stackSize  -  1];  System.arraycopy(pathNames,  0,  result,  0,  stackSize  -  1,  stackSize  -  1);  }  [CE]  cannot  find  symbol  count  [FE]                      ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {  popStack();      [BUGGY]  if(count  >  0)  {  int[]  result  =  new  int[stackSize  -  1];  System.arraycopy(pathNames,  0,  result,  0,  stackSize  -  1,  stackSize  -  1);  }  [BUGGY]      }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	262	262	2	replace	if(count  >  0)  {  int[]  result  =  new  int[stackSize  -  1];  System.arraycopy(pathNames,  0,  result,  0,  stackSize  -  1,  stackSize  -  1);  }	  if(stackSize    >    0)    {    int[]    result    =    new    int[stackSize    -    1];    System.arraycopy(stack,    0,    pathNames,    0,    stackSize    -    1,    stackSize    -    1);    }    	non-compiled	[CE]  cannot  find  symbol  count	82	None	replace
251	[BUG]  [BUGGY]  if(stackSize  >  0)  {  int[]  result  =  new  int[pathNames.length  -  1];  System.arraycopy(stack,  0,  pathNames,  0,  stackSize  -  1,  stackSize  -  1);  }  [CE]  method  arraycopy  in  class  System  cannot  be  applied  to  given  types;  [FE]                        ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {  popStack();      [BUGGY]  if(stackSize  >  0)  {  int[]  result  =  new  int[pathNames.length  -  1];  System.arraycopy(stack,  0,  pathNames,  0,  stackSize  -  1,  stackSize  -  1);  }  [BUGGY]      }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	262	262	2	replace	if(stackSize  >  0)  {  int[]  result  =  new  int[pathNames.length  -  1];  System.arraycopy(stack,  0,  pathNames,  0,  stackSize  -  1,  stackSize  -  1);  }	  if(stackSize    >    0)    {    int[]    result    =    new    int[stackSize    -    1];    System.arraycopy(stack,    0,    pathNames,    0,    stackSize    -    1,    stackSize    -    1);    }    	non-compiled	[CE]  method  arraycopy  in  class  System  cannot  be  applied  to  given  types;	82	None	replace
252	[BUG]  [BUGGY]  System.arraycopy(pathNames,  0,  result,  0,  stackSize  -  1,  stackSize  -  1);  [CE]  cannot  find  symbol  result  [FE]                          ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {  popStack();      [BUGGY]  System.arraycopy(pathNames,  0,  result,  0,  stackSize  -  1,  stackSize  -  1);  [BUGGY]      }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	262	262	2	replace	System.arraycopy(pathNames,  0,  result,  0,  stackSize  -  1,  stackSize  -  1);	  if(stackSize    >    0)    {    int[]    result    =    new    int[stackSize    -    1];    System.arraycopy(stack,    0,    pathNames,    0,    stackSize    -    1,    stackSize    -    1);    }    	non-compiled	[CE]  cannot  find  symbol  result	82	None	replace
253	[BUG]  [BUGGY]  [FE]  ArrayIndexOutOfBoundsException  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {  popStack();      [BUGGY]  if(stackSize  >  stackSize)  {  throw  new  IllegalArgumentException(   "   ");  }  if(stackSize  >  stackSize)  {  throw  new  IllegalArgumentException( "   ");  }  [BUGGY]      }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	262	262	2	add	if(stackSize    >    stackSize)    {    throw    new    IllegalArgumentException(   "   ");    }    if(stackSize  >  stackSize)  {  throw  new  IllegalArgumentException( "   ");  }	  	compilable	  [FE]  ArrayIndexOutOfBoundsException  	21	2	add
254	[BUG]  [BUGGY]  if(stackSize  >  stackSize)  {  throw  new  IllegalArgumentException(   "   ");  }  if(stackSize  >  stackSize)  {  throw  new  IllegalArgumentException( "   ");  }  [FE]  ArrayIndexOutOfBoundsException  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {  popStack();      [BUGGY]  if(stackSize  >  stackSize)  {  throw  new  IllegalArgumentException(   "   ");  }  if(stackSize  >  stackSize)  {  throw  new  IllegalArgumentException( "   ");  }  [BUGGY]      }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	262	262	2	replace	if(stackSize    >    stackSize)    {    throw    new    IllegalArgumentException(   "   ");    }    if(stackSize  >  stackSize)  {  throw  new  IllegalArgumentException( "   ");  }	  	compilable	  [FE]  ArrayIndexOutOfBoundsException  	21	2	add
255	[BUG]  [BUGGY]  [FE]  ArrayIndexOutOfBoundsException  [FE]      ArrayIndexOutOfBoundsException    [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {  popStack();      [BUGGY]  if(stackSize  >  stackSize)  {  throw  new  IllegalArgumentException(   "   ");  }  if(stackSize  >  stackSize)  {  throw  new  IllegalArgumentException( ".   ");  }  [BUGGY]      }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	262	262	2	add	if(stackSize    >    stackSize)    {    throw    new    IllegalArgumentException(   "   ");    }    if(stackSize  >  stackSize)  {  throw  new  IllegalArgumentException( ".   ");  }	  	compilable	  [FE]  ArrayIndexOutOfBoundsException  	21	2	add
256	[BUG]  [BUGGY]  if(stackSize  >  stackSize)  {  throw  new  IllegalArgumentException(   "   ");  }  if(stackSize  >  stackSize)  {  throw  new  IllegalArgumentException( ".   ");  }  [FE]  ArrayIndexOutOfBoundsException  [FE]      ArrayIndexOutOfBoundsException    [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {  popStack();      [BUGGY]  if(stackSize  >  stackSize)  {  throw  new  IllegalArgumentException(   "   ");  }  if(stackSize  >  stackSize)  {  throw  new  IllegalArgumentException( ".   ");  }  [BUGGY]      }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	262	262	2	replace	if(stackSize    >    stackSize)    {    throw    new    IllegalArgumentException(   "   ");    }    if(stackSize  >  stackSize)  {  throw  new  IllegalArgumentException( ".   ");  }	  	compilable	  [FE]  ArrayIndexOutOfBoundsException  	21	2	add
257	[BUG]  [BUGGY]  [FE]  ArrayIndexOutOfBoundsException  [FE]        ArrayIndexOutOfBoundsException    [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {  popStack();      [BUGGY]  if(stackSize  >  stackSize)  {  throw  new  IllegalArgumentException(   "   ");  }  if(stackSize  >  stackSize)  {  throw  new  IllegalArgumentException( ",   ");  }  [BUGGY]      }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	262	262	2	add	if(stackSize    >    stackSize)    {    throw    new    IllegalArgumentException(   "   ");    }    if(stackSize  >  stackSize)  {  throw  new  IllegalArgumentException( ",   ");  }	  	compilable	  [FE]  ArrayIndexOutOfBoundsException  	21	2	add
258	[BUG]  [BUGGY]  if(stackSize  >  stackSize)  {  throw  new  IllegalArgumentException(   "   ");  }  if(stackSize  >  stackSize)  {  throw  new  IllegalArgumentException( ",   ");  }  [FE]  ArrayIndexOutOfBoundsException  [FE]        ArrayIndexOutOfBoundsException    [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {  popStack();      [BUGGY]  if(stackSize  >  stackSize)  {  throw  new  IllegalArgumentException(   "   ");  }  if(stackSize  >  stackSize)  {  throw  new  IllegalArgumentException( ",   ");  }  [BUGGY]      }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	262	262	2	replace	if(stackSize    >    stackSize)    {    throw    new    IllegalArgumentException(   "   ");    }    if(stackSize  >  stackSize)  {  throw  new  IllegalArgumentException( ",   ");  }	  	compilable	  [FE]  ArrayIndexOutOfBoundsException  	21	2	add
259	[BUG]  [BUGGY]  if(stackSize  >  stackSize)  {  throw  new  IllegalArgumentException(   "   ");  }  if(stackSize  >  stackSize)  {  throw  new  IllegalArgumentException(. "   ");  }  [CE]  illegal  start  of  expression  [FE]          ArrayIndexOutOfBoundsException    [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {  popStack();      [BUGGY]  if(stackSize  >  stackSize)  {  throw  new  IllegalArgumentException(   "   ");  }  if(stackSize  >  stackSize)  {  throw  new  IllegalArgumentException(. "   ");  }  [BUGGY]      }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	262	262	2	replace	if(stackSize    >    stackSize)    {    throw    new    IllegalArgumentException(   "   ");    }    if(stackSize  >  stackSize)  {  throw  new  IllegalArgumentException(. "   ");  }	  	non-compiled	[CE]  illegal  start  of  expression	21	None	add
260	[BUG]  [BUGGY]  [FE]  ArrayIndexOutOfBoundsException  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {  popStack();      [BUGGY]  pathNames[stackSize    -    2]    =         "null     ";    pathNames[stackSize  -  2]  =     "null.   ";  pathNames[stackSize  -  2]  =   "null   ";  pathNames[stackSize  -  2]  =   "null.   ";  [BUGGY]      }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	262	262	2	add	pathNames[stackSize        -        2]        =               "null       ";        pathNames[stackSize    -    2]    =       "null.   ";    pathNames[stackSize  -  2]  =   "null   ";  pathNames[stackSize  -  2]  =   "null.   ";	  	compilable	  [FE]  ArrayIndexOutOfBoundsException  	10	2	add
261	[BUG]  [BUGGY]  pathNames[stackSize    -    2]    =         "null     ";    pathNames[stackSize  -  2]  =     "null.   ";  pathNames[stackSize  -  2]  =   "null   ";  pathNames[stackSize  -  2]  =   "null.   ";  [FE]  ArrayIndexOutOfBoundsException  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {  popStack();      [BUGGY]  pathNames[stackSize    -    2]    =         "null     ";    pathNames[stackSize  -  2]  =     "null.   ";  pathNames[stackSize  -  2]  =   "null   ";  pathNames[stackSize  -  2]  =   "null.   ";  [BUGGY]      }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	262	262	2	replace	pathNames[stackSize        -        2]        =               "null       ";        pathNames[stackSize    -    2]    =       "null.   ";    pathNames[stackSize  -  2]  =   "null   ";  pathNames[stackSize  -  2]  =   "null.   ";	  	compilable	  [FE]  ArrayIndexOutOfBoundsException  	10	2	add
262	[BUG]  [BUGGY]  pathNames[stackSize    -    2]    =         "null     ";    pathNames[stackSize  -  2]  =     "null.   ";  pathNames[stackSize  -  2]  =   "null ",;  pathNames[stackSize  -  2]  =   "null.   ";  [CE]  [FE]      ArrayIndexOutOfBoundsException    [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {  popStack();      [BUGGY]  pathNames[stackSize    -    2]    =         "null     ";    pathNames[stackSize  -  2]  =     "null.   ";  pathNames[stackSize  -  2]  =   "null ",;  pathNames[stackSize  -  2]  =   "null.   ";  [BUGGY]      }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	262	262	2	replace	pathNames[stackSize        -        2]        =               "null       ";        pathNames[stackSize    -    2]    =       "null.   ";    pathNames[stackSize  -  2]  =   "null ",;  pathNames[stackSize  -  2]  =   "null.   ";	  	non-compiled	[CE]  	10	None	add
263	[BUG]  [BUGGY]  [FE]  ArrayIndexOutOfBoundsException  [FE]        ArrayIndexOutOfBoundsException    [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {  popStack();      [BUGGY]  pathNames[stackSize    -    2]    =         "null     ";    pathNames[stackSize  -  2]  =     "null.   ";  pathNames[stackSize  -  2]  =   "null. ";  pathNames[stackSize  -  2]  =   "null.   ";  [BUGGY]      }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	262	262	2	add	pathNames[stackSize        -        2]        =               "null       ";        pathNames[stackSize    -    2]    =       "null.   ";    pathNames[stackSize  -  2]  =   "null. ";  pathNames[stackSize  -  2]  =   "null.   ";	  	compilable	  [FE]  ArrayIndexOutOfBoundsException  	10	2	add
264	[BUG]  [BUGGY]  pathNames[stackSize    -    2]    =         "null     ";    pathNames[stackSize  -  2]  =     "null.   ";  pathNames[stackSize  -  2]  =   "null. ";  pathNames[stackSize  -  2]  =   "null.   ";  [FE]  ArrayIndexOutOfBoundsException  [FE]        ArrayIndexOutOfBoundsException    [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {  popStack();      [BUGGY]  pathNames[stackSize    -    2]    =         "null     ";    pathNames[stackSize  -  2]  =     "null.   ";  pathNames[stackSize  -  2]  =   "null. ";  pathNames[stackSize  -  2]  =   "null.   ";  [BUGGY]      }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	262	262	2	replace	pathNames[stackSize        -        2]        =               "null       ";        pathNames[stackSize    -    2]    =       "null.   ";    pathNames[stackSize  -  2]  =   "null. ";  pathNames[stackSize  -  2]  =   "null.   ";	  	compilable	  [FE]  ArrayIndexOutOfBoundsException  	10	2	add
265	[BUG]  [BUGGY]  pathNames[stackSize  -  1]  =  JsonToken.VALUE_NUMBER_FLOAT;  [CE]  cannot  find  symbol  VALUE_NUMBER_FLOAT  [FE]                    ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {  popStack();      [BUGGY]  pathNames[stackSize  -  1]  =  JsonToken.VALUE_NUMBER_FLOAT;  [BUGGY]      }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	262	262	2	replace	pathNames[stackSize  -  1]  =  JsonToken.VALUE_NUMBER_FLOAT;	  pathNames[stackSize    -    1]    =    JsonToken.VALUE_NUMBER_ARRAY;    	non-compiled	[CE]  cannot  find  symbol  VALUE_NUMBER_FLOAT	53	None	replace
266	[BUG]  [BUGGY]  [FE]  ArrayIndexOutOfBoundsException  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {  popStack();      [BUGGY]  pathNames[stackSize    -    1]    =    null;    if(stackSize  >  0)  {  pathNames[stackSize  -  1]  =  null;  }  else  {  popStack();  throw  new  RuntimeException(   "   ");  }  pathNames[stackSize  -  1]  =  null;  if(stackSize  >  0)  {  pathNames[stackSize  -  1]  =  null;  }  else  {  popStack();  throw  new  RuntimeException( " ");  }  [BUGGY]      }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	262	262	2	add	pathNames[stackSize        -        1]        =        null;        if(stackSize    >    0)    {    pathNames[stackSize    -    1]    =    null;    }    else    {    popStack();    throw    new    RuntimeException(   "   ");    }    pathNames[stackSize  -  1]  =  null;  if(stackSize  >  0)  {  pathNames[stackSize  -  1]  =  null;  }  else  {  popStack();  throw  new  RuntimeException( " ");  }	  	compilable	  [FE]  ArrayIndexOutOfBoundsException  	74	2	add
267	[BUG]  [BUGGY]  pathNames[stackSize    -    1]    =    null;    if(stackSize  >  0)  {  pathNames[stackSize  -  1]  =  null;  }  else  {  popStack();  throw  new  RuntimeException(   "   ");  }  pathNames[stackSize  -  1]  =  null;  if(stackSize  >  0)  {  pathNames[stackSize  -  1]  =  null;  }  else  {  popStack();  throw  new  RuntimeException( " ");  }  [FE]  ArrayIndexOutOfBoundsException  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {  popStack();      [BUGGY]  pathNames[stackSize    -    1]    =    null;    if(stackSize  >  0)  {  pathNames[stackSize  -  1]  =  null;  }  else  {  popStack();  throw  new  RuntimeException(   "   ");  }  pathNames[stackSize  -  1]  =  null;  if(stackSize  >  0)  {  pathNames[stackSize  -  1]  =  null;  }  else  {  popStack();  throw  new  RuntimeException( " ");  }  [BUGGY]      }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	262	262	2	replace	pathNames[stackSize        -        1]        =        null;        if(stackSize    >    0)    {    pathNames[stackSize    -    1]    =    null;    }    else    {    popStack();    throw    new    RuntimeException(   "   ");    }    pathNames[stackSize  -  1]  =  null;  if(stackSize  >  0)  {  pathNames[stackSize  -  1]  =  null;  }  else  {  popStack();  throw  new  RuntimeException( " ");  }	  	compilable	  [FE]  ArrayIndexOutOfBoundsException  	74	2	add
268	[BUG]  [BUGGY]  pathNames[stackSize    -    1]    =    null;    if(stackSize  >  0)  {  pathNames[stackSize  -  1]  =  null;  }  else  {  popStack();  throw  new  RuntimeException(   "   ");  }  PathNode  pathNames[stackSize  -  1]  =  null;  if(stackSize  >  0)  {  pathNames[stackSize  -  1]  =  null;  }  else  {  popStack();  throw  new  RuntimeException( " ");  }  [CE]  [FE]      ArrayIndexOutOfBoundsException    [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {  popStack();      [BUGGY]  pathNames[stackSize    -    1]    =    null;    if(stackSize  >  0)  {  pathNames[stackSize  -  1]  =  null;  }  else  {  popStack();  throw  new  RuntimeException(   "   ");  }  PathNode  pathNames[stackSize  -  1]  =  null;  if(stackSize  >  0)  {  pathNames[stackSize  -  1]  =  null;  }  else  {  popStack();  throw  new  RuntimeException( " ");  }  [BUGGY]      }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	262	262	2	replace	pathNames[stackSize        -        1]        =        null;        if(stackSize    >    0)    {    pathNames[stackSize    -    1]    =    null;    }    else    {    popStack();    throw    new    RuntimeException(   "   ");    }    PathNode  pathNames[stackSize  -  1]  =  null;  if(stackSize  >  0)  {  pathNames[stackSize  -  1]  =  null;  }  else  {  popStack();  throw  new  RuntimeException( " ");  }	  	non-compiled	[CE]  	74	None	add
269	[BUG]  [BUGGY]  pathNames[stackSize    -    1]    =    null;    if(stackSize  >  0)  {  pathNames[stackSize  -  1]  =  null;  }  else  {  popStack();  throw  new  RuntimeException(   "   ");  }  if(stackSize  >  0)  {  pathNames[stackSize  -  1]  =  null;  if(stackSize  >  0)  {  pathNames[stackSize  -  1]  =  null;  }  else  {  popStack();  throw  new  RuntimeException( "   ");  }  [CE]  ';'  expected  [FE]        ArrayIndexOutOfBoundsException    [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {  popStack();      [BUGGY]  pathNames[stackSize    -    1]    =    null;    if(stackSize  >  0)  {  pathNames[stackSize  -  1]  =  null;  }  else  {  popStack();  throw  new  RuntimeException(   "   ");  }  if(stackSize  >  0)  {  pathNames[stackSize  -  1]  =  null;  if(stackSize  >  0)  {  pathNames[stackSize  -  1]  =  null;  }  else  {  popStack();  throw  new  RuntimeException( "   ");  }  [BUGGY]      }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	262	262	2	replace	pathNames[stackSize        -        1]        =        null;        if(stackSize    >    0)    {    pathNames[stackSize    -    1]    =    null;    }    else    {    popStack();    throw    new    RuntimeException(   "   ");    }    if(stackSize  >  0)  {  pathNames[stackSize  -  1]  =  null;  if(stackSize  >  0)  {  pathNames[stackSize  -  1]  =  null;  }  else  {  popStack();  throw  new  RuntimeException( "   ");  }	  	non-compiled	[CE]  ';'  expected	74	None	add
270	[BUG]  [BUGGY]  pathNames[stackSize    -    1]    =    null;    if(stackSize  >  0)  {  pathNames[stackSize  -  1]  =  null;  }  else  {  popStack();  throw  new  RuntimeException(   "   ");  }  if(stackSize  >  0)  {  pathNames[stackSize  -  1]  =  null;  if(stackSize  >  0)  {  pathNames[stackSize  -  1]  =  null;  }  else  {  popStack();  throw  new  RuntimeException( "  [CE]  unclosed  string  literal  [FE]          ArrayIndexOutOfBoundsException    [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {  popStack();      [BUGGY]  pathNames[stackSize    -    1]    =    null;    if(stackSize  >  0)  {  pathNames[stackSize  -  1]  =  null;  }  else  {  popStack();  throw  new  RuntimeException(   "   ");  }  if(stackSize  >  0)  {  pathNames[stackSize  -  1]  =  null;  if(stackSize  >  0)  {  pathNames[stackSize  -  1]  =  null;  }  else  {  popStack();  throw  new  RuntimeException( "  [BUGGY]      }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	262	262	2	replace	pathNames[stackSize        -        1]        =        null;        if(stackSize    >    0)    {    pathNames[stackSize    -    1]    =    null;    }    else    {    popStack();    throw    new    RuntimeException(   "   ");    }    if(stackSize  >  0)  {  pathNames[stackSize  -  1]  =  null;  if(stackSize  >  0)  {  pathNames[stackSize  -  1]  =  null;  }  else  {  popStack();  throw  new  RuntimeException( "	  	non-compiled	[CE]  unclosed  string  literal	74	None	add
271	[BUG]  [BUGGY]  pathNames[stackSize    -    1]    =    null;    if(stackSize  >  0)  {  pathNames[stackSize  -  1]  =  null;  }  else  {  popStack();  throw  new  RuntimeException(   "   ");  }  PathIndices  pathNames[stackSize  -  1]  =  null;  if(stackSize  >  0)  {  pathNames[stackSize  -  1]  =  null;  }  else  {  popStack();  throw  new  RuntimeException( " ");  }  [CE]  [FE]            ArrayIndexOutOfBoundsException    [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {  popStack();      [BUGGY]  pathNames[stackSize    -    1]    =    null;    if(stackSize  >  0)  {  pathNames[stackSize  -  1]  =  null;  }  else  {  popStack();  throw  new  RuntimeException(   "   ");  }  PathIndices  pathNames[stackSize  -  1]  =  null;  if(stackSize  >  0)  {  pathNames[stackSize  -  1]  =  null;  }  else  {  popStack();  throw  new  RuntimeException( " ");  }  [BUGGY]      }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	262	262	2	replace	pathNames[stackSize        -        1]        =        null;        if(stackSize    >    0)    {    pathNames[stackSize    -    1]    =    null;    }    else    {    popStack();    throw    new    RuntimeException(   "   ");    }    PathIndices  pathNames[stackSize  -  1]  =  null;  if(stackSize  >  0)  {  pathNames[stackSize  -  1]  =  null;  }  else  {  popStack();  throw  new  RuntimeException( " ");  }	  	non-compiled	[CE]  	74	None	add
272	[BUG]  [BUGGY]  [FE]  ArrayIndexOutOfBoundsException  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {  popStack();      [BUGGY]  if(stackSize  >  0)  {  int[]  result  =  new  int[stackSize  -  1];  System.arraycopy(pathNames,  0,  result,  0,  stackSize  -  1);  }  [BUGGY]      }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	262	262	2	add	if(stackSize  >  0)  {  int[]  result  =  new  int[stackSize  -  1];  System.arraycopy(pathNames,  0,  result,  0,  stackSize  -  1);  }	  if(stackSize    >    0)    {    int[]    result    =    new    int[stackSize    -    1];    System.arraycopy(stack,    0,    pathNames,    0,    stackSize    -    1);    }    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	81	2	replace
273	[BUG]  [BUGGY]  if(stackSize  >  0)  {  int[]  result  =  new  int[stackSize  -  1];  System.arraycopy(pathNames,  0,  result,  0,  stackSize  -  1);  }  [FE]  ArrayIndexOutOfBoundsException  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {  popStack();      [BUGGY]  if(stackSize  >  0)  {  int[]  result  =  new  int[stackSize  -  1];  System.arraycopy(pathNames,  0,  result,  0,  stackSize  -  1);  }  [BUGGY]      }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	262	262	2	replace	if(stackSize  >  0)  {  int[]  result  =  new  int[stackSize  -  1];  System.arraycopy(pathNames,  0,  result,  0,  stackSize  -  1);  }	  if(stackSize    >    0)    {    int[]    result    =    new    int[stackSize    -    1];    System.arraycopy(stack,    0,    pathNames,    0,    stackSize    -    1);    }    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	81	2	replace
274	[BUG]  [BUGGY]  [FE]  NegativeArraySizeException  [FE]      ArrayIndexOutOfBoundsException    [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {  popStack();      [BUGGY]  int[]  result  =  new  int[stackSize  -  1];  System.arraycopy(pathNames,  0,  result,  0,  stackSize  -  1);  [BUGGY]      }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	262	262	2	add	int[]  result  =  new  int[stackSize  -  1];  System.arraycopy(pathNames,  0,  result,  0,  stackSize  -  1);	  if(stackSize    >    0)    {    int[]    result    =    new    int[stackSize    -    1];    System.arraycopy(stack,    0,    pathNames,    0,    stackSize    -    1);    }    	compilable	  [FE]  NegativeArraySizeException  	81	2	replace
275	[BUG]  [BUGGY]  int[]  result  =  new  int[stackSize  -  1];  System.arraycopy(pathNames,  0,  result,  0,  stackSize  -  1);  [FE]  NegativeArraySizeException  [FE]      ArrayIndexOutOfBoundsException    [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {  popStack();      [BUGGY]  int[]  result  =  new  int[stackSize  -  1];  System.arraycopy(pathNames,  0,  result,  0,  stackSize  -  1);  [BUGGY]      }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	262	262	2	replace	int[]  result  =  new  int[stackSize  -  1];  System.arraycopy(pathNames,  0,  result,  0,  stackSize  -  1);	  if(stackSize    >    0)    {    int[]    result    =    new    int[stackSize    -    1];    System.arraycopy(stack,    0,    pathNames,    0,    stackSize    -    1);    }    	compilable	  [FE]  NegativeArraySizeException  	81	2	replace
276	[BUG]  [BUGGY]  if(success)  {  if(stackSize  >  0)  {  int[]  result  =  new  int[stackSize  -  1];  System.arraycopy(stack,  0,  pathNames,  0,  stackSize  -  1);  }  [CE]  ';'  expected  [FE]        ArrayIndexOutOfBoundsException    [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {  popStack();      [BUGGY]  if(success)  {  if(stackSize  >  0)  {  int[]  result  =  new  int[stackSize  -  1];  System.arraycopy(stack,  0,  pathNames,  0,  stackSize  -  1);  }  [BUGGY]      }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	262	262	2	replace	if(success)  {  if(stackSize  >  0)  {  int[]  result  =  new  int[stackSize  -  1];  System.arraycopy(stack,  0,  pathNames,  0,  stackSize  -  1);  }	  if(stackSize    >    0)    {    int[]    result    =    new    int[stackSize    -    1];    System.arraycopy(stack,    0,    pathNames,    0,    stackSize    -    1);    }    	non-compiled	[CE]  ';'  expected	81	None	replace
277	[BUG]  [BUGGY]  [FE]  NegativeArraySizeException  [FE]          ArrayIndexOutOfBoundsException    [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {  popStack();      [BUGGY]  Integer[]  result  =  new  Integer[stackSize  -  1];  System.arraycopy(pathNames,  0,  result,  0,  stackSize  -  1);  [BUGGY]      }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	262	262	2	add	Integer[]  result  =  new  Integer[stackSize  -  1];  System.arraycopy(pathNames,  0,  result,  0,  stackSize  -  1);	  if(stackSize    >    0)    {    int[]    result    =    new    int[stackSize    -    1];    System.arraycopy(stack,    0,    pathNames,    0,    stackSize    -    1);    }    	compilable	  [FE]  NegativeArraySizeException  	81	2	replace
278	[BUG]  [BUGGY]  Integer[]  result  =  new  Integer[stackSize  -  1];  System.arraycopy(pathNames,  0,  result,  0,  stackSize  -  1);  [FE]  NegativeArraySizeException  [FE]          ArrayIndexOutOfBoundsException    [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {  popStack();      [BUGGY]  Integer[]  result  =  new  Integer[stackSize  -  1];  System.arraycopy(pathNames,  0,  result,  0,  stackSize  -  1);  [BUGGY]      }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	262	262	2	replace	Integer[]  result  =  new  Integer[stackSize  -  1];  System.arraycopy(pathNames,  0,  result,  0,  stackSize  -  1);	  if(stackSize    >    0)    {    int[]    result    =    new    int[stackSize    -    1];    System.arraycopy(stack,    0,    pathNames,    0,    stackSize    -    1);    }    	compilable	  [FE]  NegativeArraySizeException  	81	2	replace
279	[BUG]  [BUGGY]  [FE]  NegativeArraySizeException  [FE]            ArrayIndexOutOfBoundsException    [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {  popStack();      [BUGGY]  int[]  result  =  new  int[stackSize  -  1];  System.arraycopy(stack,  0,  pathNames,  0,  stackSize  -  1);  [BUGGY]      }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	262	262	2	add	int[]  result  =  new  int[stackSize  -  1];  System.arraycopy(stack,  0,  pathNames,  0,  stackSize  -  1);	  if(stackSize    >    0)    {    int[]    result    =    new    int[stackSize    -    1];    System.arraycopy(stack,    0,    pathNames,    0,    stackSize    -    1);    }    	compilable	  [FE]  NegativeArraySizeException  	81	2	replace
280	[BUG]  [BUGGY]  int[]  result  =  new  int[stackSize  -  1];  System.arraycopy(stack,  0,  pathNames,  0,  stackSize  -  1);  [FE]  NegativeArraySizeException  [FE]            ArrayIndexOutOfBoundsException    [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {  popStack();      [BUGGY]  int[]  result  =  new  int[stackSize  -  1];  System.arraycopy(stack,  0,  pathNames,  0,  stackSize  -  1);  [BUGGY]      }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	262	262	2	replace	int[]  result  =  new  int[stackSize  -  1];  System.arraycopy(stack,  0,  pathNames,  0,  stackSize  -  1);	  if(stackSize    >    0)    {    int[]    result    =    new    int[stackSize    -    1];    System.arraycopy(stack,    0,    pathNames,    0,    stackSize    -    1);    }    	compilable	  [FE]  NegativeArraySizeException  	81	2	replace
281	[BUG]  [BUGGY]  if(count  >  0)  {  int[]  result  =  new  int[stackSize  -  1];  System.arraycopy(stack,  0,  pathNames,  0,  stackSize  -  1);  }  [CE]  cannot  find  symbol  count  [FE]              ArrayIndexOutOfBoundsException    [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {  popStack();      [BUGGY]  if(count  >  0)  {  int[]  result  =  new  int[stackSize  -  1];  System.arraycopy(stack,  0,  pathNames,  0,  stackSize  -  1);  }  [BUGGY]      }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	262	262	2	replace	if(count  >  0)  {  int[]  result  =  new  int[stackSize  -  1];  System.arraycopy(stack,  0,  pathNames,  0,  stackSize  -  1);  }	  if(stackSize    >    0)    {    int[]    result    =    new    int[stackSize    -    1];    System.arraycopy(stack,    0,    pathNames,    0,    stackSize    -    1);    }    	non-compiled	[CE]  cannot  find  symbol  count	81	None	replace
282	[BUG]  [BUGGY]  [FE]  ArrayIndexOutOfBoundsException  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {  popStack();      [BUGGY]  pathNames[stackSize    -    1]    =    null;    pathNames[stackSize  -  1]  =  null;  pathNames[stackSize  -  1]  =  null;  pathNames[stackSize  -  1]  =  null;  [BUGGY]      }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	262	262	2	add	pathNames[stackSize        -        1]        =        null;        pathNames[stackSize    -    1]    =    null;    pathNames[stackSize  -  1]  =  null;  pathNames[stackSize  -  1]  =  null;	  	compilable	  [FE]  ArrayIndexOutOfBoundsException  	26	2	add
283	[BUG]  [BUGGY]  pathNames[stackSize    -    1]    =    null;    pathNames[stackSize  -  1]  =  null;  pathNames[stackSize  -  1]  =  null;  pathNames[stackSize  -  1]  =  null;  [FE]  ArrayIndexOutOfBoundsException  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {  popStack();      [BUGGY]  pathNames[stackSize    -    1]    =    null;    pathNames[stackSize  -  1]  =  null;  pathNames[stackSize  -  1]  =  null;  pathNames[stackSize  -  1]  =  null;  [BUGGY]      }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	262	262	2	replace	pathNames[stackSize        -        1]        =        null;        pathNames[stackSize    -    1]    =    null;    pathNames[stackSize  -  1]  =  null;  pathNames[stackSize  -  1]  =  null;	  	compilable	  [FE]  ArrayIndexOutOfBoundsException  	26	2	add
284	[BUG]  [BUGGY]  pathNames[stackSize    -    1]    =    null;    pathNames[stackSize  -  1]  =  null;  PathIndexOutOfBoundsException.printStackTrace();  pathNames[stackSize  -  1]  =  null;  pathNames[stackSize  -  1]  =  null;  [CE]  cannot  find  symbol  PathIndexOutOfBoundsException  [FE]      ArrayIndexOutOfBoundsException    [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {  popStack();      [BUGGY]  pathNames[stackSize    -    1]    =    null;    pathNames[stackSize  -  1]  =  null;  PathIndexOutOfBoundsException.printStackTrace();  pathNames[stackSize  -  1]  =  null;  pathNames[stackSize  -  1]  =  null;  [BUGGY]      }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	262	262	2	replace	pathNames[stackSize        -        1]        =        null;        pathNames[stackSize    -    1]    =    null;    PathIndexOutOfBoundsException.printStackTrace();  pathNames[stackSize  -  1]  =  null;  pathNames[stackSize  -  1]  =  null;	  	non-compiled	[CE]  cannot  find  symbol  PathIndexOutOfBoundsException	26	None	add
285	[BUG]  [BUGGY]  pathNames[stackSize    -    1]    =    null;    pathNames[stackSize  -  1]  =  null;  PathIndices[stackSize  -  1]  =  null;  pathNames[stackSize  -  1]  =  null;  [CE]  cannot  find  symbol  PathIndices  [FE]        ArrayIndexOutOfBoundsException    [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {  popStack();      [BUGGY]  pathNames[stackSize    -    1]    =    null;    pathNames[stackSize  -  1]  =  null;  PathIndices[stackSize  -  1]  =  null;  pathNames[stackSize  -  1]  =  null;  [BUGGY]      }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	262	262	2	replace	pathNames[stackSize        -        1]        =        null;        pathNames[stackSize    -    1]    =    null;    PathIndices[stackSize  -  1]  =  null;  pathNames[stackSize  -  1]  =  null;	  	non-compiled	[CE]  cannot  find  symbol  PathIndices	26	None	add
286	[BUG]  [BUGGY]  pathNames[stackSize    -    1]    =    null;    pathNames[stackSize  -  1]  =  null;  PathNode  pathNames[stackSize  -  1]  =  null;  pathNames[stackSize  -  1]  =  null;  [CE]  ']'  expected  [FE]          ArrayIndexOutOfBoundsException    [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {  popStack();      [BUGGY]  pathNames[stackSize    -    1]    =    null;    pathNames[stackSize  -  1]  =  null;  PathNode  pathNames[stackSize  -  1]  =  null;  pathNames[stackSize  -  1]  =  null;  [BUGGY]      }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	262	262	2	replace	pathNames[stackSize        -        1]        =        null;        pathNames[stackSize    -    1]    =    null;    PathNode  pathNames[stackSize  -  1]  =  null;  pathNames[stackSize  -  1]  =  null;	  	non-compiled	[CE]  ']'  expected	26	None	add
287	[BUG]  [BUGGY]  pathNames[stackSize    -    1]    =    null;    pathNames[stackSize  -  1]  =  null;  PathInfo  pathNames[stackSize  -  1]  =  null;  pathNames[stackSize  -  1]  =  null;  [CE]  ']'  expected  [FE]            ArrayIndexOutOfBoundsException    [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {  popStack();      [BUGGY]  pathNames[stackSize    -    1]    =    null;    pathNames[stackSize  -  1]  =  null;  PathInfo  pathNames[stackSize  -  1]  =  null;  pathNames[stackSize  -  1]  =  null;  [BUGGY]      }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	262	262	2	replace	pathNames[stackSize        -        1]        =        null;        pathNames[stackSize    -    1]    =    null;    PathInfo  pathNames[stackSize  -  1]  =  null;  pathNames[stackSize  -  1]  =  null;	  	non-compiled	[CE]  ']'  expected	26	None	add
288	[BUG]  [BUGGY]  pathNames[stackSize    -    1]    =    null;    pathNames[stackSize  -  1]  =  null;  Path[stackSize  -  1]  =  null;  pathNames[stackSize  -  1]  =  null;  [CE]  cannot  find  symbol  Path  [FE]              ArrayIndexOutOfBoundsException    [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {  popStack();      [BUGGY]  pathNames[stackSize    -    1]    =    null;    pathNames[stackSize  -  1]  =  null;  Path[stackSize  -  1]  =  null;  pathNames[stackSize  -  1]  =  null;  [BUGGY]      }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	262	262	2	replace	pathNames[stackSize        -        1]        =        null;        pathNames[stackSize    -    1]    =    null;    Path[stackSize  -  1]  =  null;  pathNames[stackSize  -  1]  =  null;	  	non-compiled	[CE]  cannot  find  symbol  Path	26	None	add
289	[BUG]  [BUGGY]  [FE]  ArrayIndexOutOfBoundsException  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {  popStack();      [BUGGY]  if(stackSize  >  0)  {  pathNames[stackSize  -  1]  =  null;  }  else  {  popStack();  }  if(stackSize  >  0)  {  pathNames[stackSize  -  1]  =  null;  }  else  {  popStack();  }  [BUGGY]      }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	262	262	2	add	if(stackSize    >    0)    {    pathNames[stackSize    -    1]    =    null;    }    else    {    popStack();    }    if(stackSize  >  0)  {  pathNames[stackSize  -  1]  =  null;  }  else  {  popStack();  }	  	compilable	  [FE]  ArrayIndexOutOfBoundsException  	23	2	add
290	[BUG]  [BUGGY]  if(stackSize  >  0)  {  pathNames[stackSize  -  1]  =  null;  }  else  {  popStack();  }  if(stackSize  >  0)  {  pathNames[stackSize  -  1]  =  null;  }  else  {  popStack();  }  [FE]  ArrayIndexOutOfBoundsException  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {  popStack();      [BUGGY]  if(stackSize  >  0)  {  pathNames[stackSize  -  1]  =  null;  }  else  {  popStack();  }  if(stackSize  >  0)  {  pathNames[stackSize  -  1]  =  null;  }  else  {  popStack();  }  [BUGGY]      }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	262	262	2	replace	if(stackSize    >    0)    {    pathNames[stackSize    -    1]    =    null;    }    else    {    popStack();    }    if(stackSize  >  0)  {  pathNames[stackSize  -  1]  =  null;  }  else  {  popStack();  }	  	compilable	  [FE]  ArrayIndexOutOfBoundsException  	23	2	add
291	[BUG]  [BUGGY]  [FE]  ArrayIndexOutOfBoundsException  [FE]      ArrayIndexOutOfBoundsException    [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {  popStack();      [BUGGY]  if(stackSize  >  0)  {  pathNames[stackSize  -  1]  =  null;  }  else  {  popStack();  }  if(stackSize  >  0)  {  pathNames[stackSize  +  1]  =  null;  }  else  {  popStack();  }  [BUGGY]      }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	262	262	2	add	if(stackSize    >    0)    {    pathNames[stackSize    -    1]    =    null;    }    else    {    popStack();    }    if(stackSize  >  0)  {  pathNames[stackSize  +  1]  =  null;  }  else  {  popStack();  }	  	compilable	  [FE]  ArrayIndexOutOfBoundsException  	23	2	add
292	[BUG]  [BUGGY]  if(stackSize  >  0)  {  pathNames[stackSize  -  1]  =  null;  }  else  {  popStack();  }  if(stackSize  >  0)  {  pathNames[stackSize  +  1]  =  null;  }  else  {  popStack();  }  [FE]  ArrayIndexOutOfBoundsException  [FE]      ArrayIndexOutOfBoundsException    [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {  popStack();      [BUGGY]  if(stackSize  >  0)  {  pathNames[stackSize  -  1]  =  null;  }  else  {  popStack();  }  if(stackSize  >  0)  {  pathNames[stackSize  +  1]  =  null;  }  else  {  popStack();  }  [BUGGY]      }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	262	262	2	replace	if(stackSize    >    0)    {    pathNames[stackSize    -    1]    =    null;    }    else    {    popStack();    }    if(stackSize  >  0)  {  pathNames[stackSize  +  1]  =  null;  }  else  {  popStack();  }	  	compilable	  [FE]  ArrayIndexOutOfBoundsException  	23	2	add
293	[BUG]  [BUGGY]  [FE]  ArrayIndexOutOfBoundsException  [FE]        ArrayIndexOutOfBoundsException    [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {  popStack();      [BUGGY]  if(stackSize  >  0)  {  pathNames[stackSize  -  1]  =  null;  }  else  {  popStack();  }  if(stackSize  >  0)  {  pathNames[stackSize  -  2]  =  null;  }  else  {  popStack();  }  [BUGGY]      }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	262	262	2	add	if(stackSize    >    0)    {    pathNames[stackSize    -    1]    =    null;    }    else    {    popStack();    }    if(stackSize  >  0)  {  pathNames[stackSize  -  2]  =  null;  }  else  {  popStack();  }	  	compilable	  [FE]  ArrayIndexOutOfBoundsException  	23	2	add
294	[BUG]  [BUGGY]  if(stackSize  >  0)  {  pathNames[stackSize  -  1]  =  null;  }  else  {  popStack();  }  if(stackSize  >  0)  {  pathNames[stackSize  -  2]  =  null;  }  else  {  popStack();  }  [FE]  ArrayIndexOutOfBoundsException  [FE]        ArrayIndexOutOfBoundsException    [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {  popStack();      [BUGGY]  if(stackSize  >  0)  {  pathNames[stackSize  -  1]  =  null;  }  else  {  popStack();  }  if(stackSize  >  0)  {  pathNames[stackSize  -  2]  =  null;  }  else  {  popStack();  }  [BUGGY]      }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	262	262	2	replace	if(stackSize    >    0)    {    pathNames[stackSize    -    1]    =    null;    }    else    {    popStack();    }    if(stackSize  >  0)  {  pathNames[stackSize  -  2]  =  null;  }  else  {  popStack();  }	  	compilable	  [FE]  ArrayIndexOutOfBoundsException  	23	2	add
295	[BUG]  [BUGGY]  if(stackSize  >  0)  {  pathNames[stackSize  -  1]  =  null;  }  else  {  popStack();  }  if(stackSize  >  0)  {  pathNames[stackSize  -  1].  =  null;  }  else  {  popStack();  }  [CE]  <identifier>  expected  [FE]          ArrayIndexOutOfBoundsException    [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {  popStack();      [BUGGY]  if(stackSize  >  0)  {  pathNames[stackSize  -  1]  =  null;  }  else  {  popStack();  }  if(stackSize  >  0)  {  pathNames[stackSize  -  1].  =  null;  }  else  {  popStack();  }  [BUGGY]      }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	262	262	2	replace	if(stackSize    >    0)    {    pathNames[stackSize    -    1]    =    null;    }    else    {    popStack();    }    if(stackSize  >  0)  {  pathNames[stackSize  -  1].  =  null;  }  else  {  popStack();  }	  	non-compiled	[CE]  <identifier>  expected	23	None	add
296	[BUG]  [BUGGY]  if(stackSize  >  0)  {  pathNames[stackSize  -  1]  =  null;  }  else  {  popStack();  }  If(stackSize  >  0)  {  pathNames[stackSize  -  1]  =  null;  }  else  {  popStack();  }  [CE]  ';'  expected  [FE]            ArrayIndexOutOfBoundsException    [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {  popStack();      [BUGGY]  if(stackSize  >  0)  {  pathNames[stackSize  -  1]  =  null;  }  else  {  popStack();  }  If(stackSize  >  0)  {  pathNames[stackSize  -  1]  =  null;  }  else  {  popStack();  }  [BUGGY]      }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	262	262	2	replace	if(stackSize    >    0)    {    pathNames[stackSize    -    1]    =    null;    }    else    {    popStack();    }    If(stackSize  >  0)  {  pathNames[stackSize  -  1]  =  null;  }  else  {  popStack();  }	  	non-compiled	[CE]  ';'  expected	23	None	add
297	[BUG]  [BUGGY]  if(stackSize  >  0)  {  pathNames[stackSize  -  1]  =  null;  }  else  {  popStack();  }  if(stackSize  >  0)  {  paths[stackSize  -  1]  =  null;  }  else  {  popStack();  }  [CE]  cannot  find  symbol  paths  [FE]              ArrayIndexOutOfBoundsException    [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {  popStack();      [BUGGY]  if(stackSize  >  0)  {  pathNames[stackSize  -  1]  =  null;  }  else  {  popStack();  }  if(stackSize  >  0)  {  paths[stackSize  -  1]  =  null;  }  else  {  popStack();  }  [BUGGY]      }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	262	262	2	replace	if(stackSize    >    0)    {    pathNames[stackSize    -    1]    =    null;    }    else    {    popStack();    }    if(stackSize  >  0)  {  paths[stackSize  -  1]  =  null;  }  else  {  popStack();  }	  	non-compiled	[CE]  cannot  find  symbol  paths	23	None	add
298	[BUG]  [BUGGY]  [FE]  ArrayIndexOutOfBoundsException  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {  popStack();      [BUGGY]  pathNames[stackSize    -    1]    =    null;    if(stackSize  >  0)  {  pathNames[stackSize  -  1]  =  null;  }  pathNames[stackSize  -  1]  =  null;  if(stackSize  >  0)  {  pathNames[stackSize  -  1]  =  null;  }  [BUGGY]      }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	262	262	2	add	pathNames[stackSize        -        1]        =        null;        if(stackSize    >    0)    {    pathNames[stackSize    -    1]    =    null;    }    pathNames[stackSize  -  1]  =  null;  if(stackSize  >  0)  {  pathNames[stackSize  -  1]  =  null;  }	  	compilable	  [FE]  ArrayIndexOutOfBoundsException  	69	2	add
299	[BUG]  [BUGGY]  pathNames[stackSize    -    1]    =    null;    if(stackSize  >  0)  {  pathNames[stackSize  -  1]  =  null;  }  pathNames[stackSize  -  1]  =  null;  if(stackSize  >  0)  {  pathNames[stackSize  -  1]  =  null;  }  [FE]  ArrayIndexOutOfBoundsException  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {  popStack();      [BUGGY]  pathNames[stackSize    -    1]    =    null;    if(stackSize  >  0)  {  pathNames[stackSize  -  1]  =  null;  }  pathNames[stackSize  -  1]  =  null;  if(stackSize  >  0)  {  pathNames[stackSize  -  1]  =  null;  }  [BUGGY]      }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	262	262	2	replace	pathNames[stackSize        -        1]        =        null;        if(stackSize    >    0)    {    pathNames[stackSize    -    1]    =    null;    }    pathNames[stackSize  -  1]  =  null;  if(stackSize  >  0)  {  pathNames[stackSize  -  1]  =  null;  }	  	compilable	  [FE]  ArrayIndexOutOfBoundsException  	69	2	add
300	[BUG]  [BUGGY]  pathNames[stackSize    -    1]    =    null;    if(stackSize  >  0)  {  pathNames[stackSize  -  1]  =  null;  }  if(stackSize  >  0)  {  pathNames[stackSize  -  1]  =  null;  if(stackSize  >  0)  {  pathNames[stackSize  -  1]  =  null;  }  [CE]  ';'  expected  [FE]      ArrayIndexOutOfBoundsException    [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {  popStack();      [BUGGY]  pathNames[stackSize    -    1]    =    null;    if(stackSize  >  0)  {  pathNames[stackSize  -  1]  =  null;  }  if(stackSize  >  0)  {  pathNames[stackSize  -  1]  =  null;  if(stackSize  >  0)  {  pathNames[stackSize  -  1]  =  null;  }  [BUGGY]      }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	262	262	2	replace	pathNames[stackSize        -        1]        =        null;        if(stackSize    >    0)    {    pathNames[stackSize    -    1]    =    null;    }    if(stackSize  >  0)  {  pathNames[stackSize  -  1]  =  null;  if(stackSize  >  0)  {  pathNames[stackSize  -  1]  =  null;  }	  	non-compiled	[CE]  ';'  expected	69	None	add
301	[BUG]  [BUGGY]  pathNames[stackSize    -    1]    =    null;    if(stackSize  >  0)  {  pathNames[stackSize  -  1]  =  null;  }  PathNode  pathNames[stackSize  -  1]  =  null;  if(stackSize  >  0)  {  pathNames[stackSize  -  1]  =  null;  }  [CE]  ']'  expected  [FE]        ArrayIndexOutOfBoundsException    [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {  popStack();      [BUGGY]  pathNames[stackSize    -    1]    =    null;    if(stackSize  >  0)  {  pathNames[stackSize  -  1]  =  null;  }  PathNode  pathNames[stackSize  -  1]  =  null;  if(stackSize  >  0)  {  pathNames[stackSize  -  1]  =  null;  }  [BUGGY]      }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	262	262	2	replace	pathNames[stackSize        -        1]        =        null;        if(stackSize    >    0)    {    pathNames[stackSize    -    1]    =    null;    }    PathNode  pathNames[stackSize  -  1]  =  null;  if(stackSize  >  0)  {  pathNames[stackSize  -  1]  =  null;  }	  	non-compiled	[CE]  ']'  expected	69	None	add
302	[BUG]  [BUGGY]  pathNames[stackSize    -    1]    =    null;    if(stackSize  >  0)  {  pathNames[stackSize  -  1]  =  null;  }  PathIndices  pathNames[stackSize  -  1]  =  null;  if(stackSize  >  0)  {  pathNames[stackSize  -  1]  =  null;  }  [CE]  ']'  expected  [FE]          ArrayIndexOutOfBoundsException    [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {  popStack();      [BUGGY]  pathNames[stackSize    -    1]    =    null;    if(stackSize  >  0)  {  pathNames[stackSize  -  1]  =  null;  }  PathIndices  pathNames[stackSize  -  1]  =  null;  if(stackSize  >  0)  {  pathNames[stackSize  -  1]  =  null;  }  [BUGGY]      }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	262	262	2	replace	pathNames[stackSize        -        1]        =        null;        if(stackSize    >    0)    {    pathNames[stackSize    -    1]    =    null;    }    PathIndices  pathNames[stackSize  -  1]  =  null;  if(stackSize  >  0)  {  pathNames[stackSize  -  1]  =  null;  }	  	non-compiled	[CE]  ']'  expected	69	None	add
303	[BUG]  [BUGGY]  pathNames[stackSize    -    1]    =    null;    if(stackSize  >  0)  {  pathNames[stackSize  -  1]  =  null;  }  PathIndexOutOfBoundsException.printStackTrace();  pathNames[stackSize  -  1]  =  null;  if(stackSize  >  0)  {  pathNames[stackSize  -  1]  =  null;  }  [CE]  cannot  find  symbol  PathIndexOutOfBoundsException  [FE]            ArrayIndexOutOfBoundsException    [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {  popStack();      [BUGGY]  pathNames[stackSize    -    1]    =    null;    if(stackSize  >  0)  {  pathNames[stackSize  -  1]  =  null;  }  PathIndexOutOfBoundsException.printStackTrace();  pathNames[stackSize  -  1]  =  null;  if(stackSize  >  0)  {  pathNames[stackSize  -  1]  =  null;  }  [BUGGY]      }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	262	262	2	replace	pathNames[stackSize        -        1]        =        null;        if(stackSize    >    0)    {    pathNames[stackSize    -    1]    =    null;    }    PathIndexOutOfBoundsException.printStackTrace();  pathNames[stackSize  -  1]  =  null;  if(stackSize  >  0)  {  pathNames[stackSize  -  1]  =  null;  }	  	non-compiled	[CE]  cannot  find  symbol  PathIndexOutOfBoundsException	69	None	add
304	[BUG]  [BUGGY]  [FE]  ArrayIndexOutOfBoundsException  [FE]              ArrayIndexOutOfBoundsException    [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {  popStack();      [BUGGY]  pathNames[stackSize    -    1]    =    null;    if(stackSize  >  0)  {  pathNames[stackSize  -  1]  =  null;  }  if(stackSize  >  0)  {  pathNames[stackSize  -  1]  =  null;  if(stackSize  >  0)  {  pathNames[stackSize  -  1]  =  null;  }  }  [BUGGY]      }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	262	262	2	add	pathNames[stackSize        -        1]        =        null;        if(stackSize    >    0)    {    pathNames[stackSize    -    1]    =    null;    }    if(stackSize  >  0)  {  pathNames[stackSize  -  1]  =  null;  if(stackSize  >  0)  {  pathNames[stackSize  -  1]  =  null;  }  }	  	compilable	  [FE]  ArrayIndexOutOfBoundsException  	69	2	add
305	[BUG]  [BUGGY]  pathNames[stackSize    -    1]    =    null;    if(stackSize  >  0)  {  pathNames[stackSize  -  1]  =  null;  }  if(stackSize  >  0)  {  pathNames[stackSize  -  1]  =  null;  if(stackSize  >  0)  {  pathNames[stackSize  -  1]  =  null;  }  }  [FE]  ArrayIndexOutOfBoundsException  [FE]              ArrayIndexOutOfBoundsException    [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {  popStack();      [BUGGY]  pathNames[stackSize    -    1]    =    null;    if(stackSize  >  0)  {  pathNames[stackSize  -  1]  =  null;  }  if(stackSize  >  0)  {  pathNames[stackSize  -  1]  =  null;  if(stackSize  >  0)  {  pathNames[stackSize  -  1]  =  null;  }  }  [BUGGY]      }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	262	262	2	replace	pathNames[stackSize        -        1]        =        null;        if(stackSize    >    0)    {    pathNames[stackSize    -    1]    =    null;    }    if(stackSize  >  0)  {  pathNames[stackSize  -  1]  =  null;  if(stackSize  >  0)  {  pathNames[stackSize  -  1]  =  null;  }  }	  	compilable	  [FE]  ArrayIndexOutOfBoundsException  	69	2	add
306	[BUG]  [BUGGY]  pathNames[stackSize    -    1]    =    null;    if(stackSize  >  0)  {  pathNames[stackSize  -  1]  =  null;  }  if(stackSize  >  0)  {  pathNames[stackSize  -  1]  =  null;  if(stackSize  >  0)  {  pathNames[stackSize  -  1]  =  null  [CE]  ';'  expected  [FE]                ArrayIndexOutOfBoundsException    [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {  popStack();      [BUGGY]  pathNames[stackSize    -    1]    =    null;    if(stackSize  >  0)  {  pathNames[stackSize  -  1]  =  null;  }  if(stackSize  >  0)  {  pathNames[stackSize  -  1]  =  null;  if(stackSize  >  0)  {  pathNames[stackSize  -  1]  =  null  [BUGGY]      }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	262	262	2	replace	pathNames[stackSize        -        1]        =        null;        if(stackSize    >    0)    {    pathNames[stackSize    -    1]    =    null;    }    if(stackSize  >  0)  {  pathNames[stackSize  -  1]  =  null;  if(stackSize  >  0)  {  pathNames[stackSize  -  1]  =  null	  	non-compiled	[CE]  ';'  expected	69	None	add
307	[BUG]  [BUGGY]  [FE]  ArrayIndexOutOfBoundsException  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {  popStack();      [BUGGY]  pathNames[stackSize    -    1]    =    null;    if(stackSize  >  0)  {  pathNames[stackSize  -  1]  =  null;  }  else  {  popStack();  throw  new  IllegalArgumentException(   "   ");  }  pathNames[stackSize  -  1]  =  null;  if(stackSize  >  0)  {  pathNames[stackSize  -  1]  =  null;  }  else  {  popStack();  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	262	262	2	add	pathNames[stackSize        -        1]        =        null;        if(stackSize    >    0)    {    pathNames[stackSize    -    1]    =    null;    }    else    {    popStack();    throw    new    IllegalArgumentException(   "   ");    }    pathNames[stackSize  -  1]  =  null;  if(stackSize  >  0)  {  pathNames[stackSize  -  1]  =  null;  }  else  {  popStack();  throw  new  IllegalArgumentException( " ");  }	  	compilable	  [FE]  ArrayIndexOutOfBoundsException  	71	2	add
308	[BUG]  [BUGGY]  pathNames[stackSize    -    1]    =    null;    if(stackSize  >  0)  {  pathNames[stackSize  -  1]  =  null;  }  else  {  popStack();  throw  new  IllegalArgumentException(   "   ");  }  pathNames[stackSize  -  1]  =  null;  if(stackSize  >  0)  {  pathNames[stackSize  -  1]  =  null;  }  else  {  popStack();  throw  new  IllegalArgumentException( " ");  }  [FE]  ArrayIndexOutOfBoundsException  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {  popStack();      [BUGGY]  pathNames[stackSize    -    1]    =    null;    if(stackSize  >  0)  {  pathNames[stackSize  -  1]  =  null;  }  else  {  popStack();  throw  new  IllegalArgumentException(   "   ");  }  pathNames[stackSize  -  1]  =  null;  if(stackSize  >  0)  {  pathNames[stackSize  -  1]  =  null;  }  else  {  popStack();  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	262	262	2	replace	pathNames[stackSize        -        1]        =        null;        if(stackSize    >    0)    {    pathNames[stackSize    -    1]    =    null;    }    else    {    popStack();    throw    new    IllegalArgumentException(   "   ");    }    pathNames[stackSize  -  1]  =  null;  if(stackSize  >  0)  {  pathNames[stackSize  -  1]  =  null;  }  else  {  popStack();  throw  new  IllegalArgumentException( " ");  }	  	compilable	  [FE]  ArrayIndexOutOfBoundsException  	71	2	add
309	[BUG]  [BUGGY]  pathNames[stackSize    -    1]    =    null;    if(stackSize  >  0)  {  pathNames[stackSize  -  1]  =  null;  }  else  {  popStack();  throw  new  IllegalArgumentException(   "   ");  }  PathNode  pathNames[stackSize  -  1]  =  null;  if(stackSize  >  0)  {  pathNames[stackSize  -  1]  =  null;  }  else  {  popStack();  throw  new  IllegalArgumentException( " ");  }  [CE]  [FE]      ArrayIndexOutOfBoundsException    [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {  popStack();      [BUGGY]  pathNames[stackSize    -    1]    =    null;    if(stackSize  >  0)  {  pathNames[stackSize  -  1]  =  null;  }  else  {  popStack();  throw  new  IllegalArgumentException(   "   ");  }  PathNode  pathNames[stackSize  -  1]  =  null;  if(stackSize  >  0)  {  pathNames[stackSize  -  1]  =  null;  }  else  {  popStack();  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	262	262	2	replace	pathNames[stackSize        -        1]        =        null;        if(stackSize    >    0)    {    pathNames[stackSize    -    1]    =    null;    }    else    {    popStack();    throw    new    IllegalArgumentException(   "   ");    }    PathNode  pathNames[stackSize  -  1]  =  null;  if(stackSize  >  0)  {  pathNames[stackSize  -  1]  =  null;  }  else  {  popStack();  throw  new  IllegalArgumentException( " ");  }	  	non-compiled	[CE]  	71	None	add
310	[BUG]  [BUGGY]  pathNames[stackSize    -    1]    =    null;    if(stackSize  >  0)  {  pathNames[stackSize  -  1]  =  null;  }  else  {  popStack();  throw  new  IllegalArgumentException(   "   ");  }  if(stackSize  >  0)  {  pathNames[stackSize  -  1]  =  null;  if(stackSize  >  0)  {  pathNames[stackSize  -  1]  =  null;  }  else  {  popStack();  throw  new  IllegalArgumentException( "  [CE]  unclosed  string  literal  [FE]        ArrayIndexOutOfBoundsException    [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {  popStack();      [BUGGY]  pathNames[stackSize    -    1]    =    null;    if(stackSize  >  0)  {  pathNames[stackSize  -  1]  =  null;  }  else  {  popStack();  throw  new  IllegalArgumentException(   "   ");  }  if(stackSize  >  0)  {  pathNames[stackSize  -  1]  =  null;  if(stackSize  >  0)  {  pathNames[stackSize  -  1]  =  null;  }  else  {  popStack();  throw  new  IllegalArgumentException( "  [BUGGY]      }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	262	262	2	replace	pathNames[stackSize        -        1]        =        null;        if(stackSize    >    0)    {    pathNames[stackSize    -    1]    =    null;    }    else    {    popStack();    throw    new    IllegalArgumentException(   "   ");    }    if(stackSize  >  0)  {  pathNames[stackSize  -  1]  =  null;  if(stackSize  >  0)  {  pathNames[stackSize  -  1]  =  null;  }  else  {  popStack();  throw  new  IllegalArgumentException( "	  	non-compiled	[CE]  unclosed  string  literal	71	None	add
311	[BUG]  [BUGGY]  pathNames[stackSize    -    1]    =    null;    if(stackSize  >  0)  {  pathNames[stackSize  -  1]  =  null;  }  else  {  popStack();  throw  new  IllegalArgumentException(   "   ");  }  if(stackSize  >  0)  {  pathNames[stackSize  -  1]  =  null;  if(stackSize  >  0)  {  pathNames[stackSize  -  1]  =  null;  }  else  {  popStack();  throw  new  IllegalArgumentException( "   ");  }  [CE]  ';'  expected  [FE]          ArrayIndexOutOfBoundsException    [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {  popStack();      [BUGGY]  pathNames[stackSize    -    1]    =    null;    if(stackSize  >  0)  {  pathNames[stackSize  -  1]  =  null;  }  else  {  popStack();  throw  new  IllegalArgumentException(   "   ");  }  if(stackSize  >  0)  {  pathNames[stackSize  -  1]  =  null;  if(stackSize  >  0)  {  pathNames[stackSize  -  1]  =  null;  }  else  {  popStack();  throw  new  IllegalArgumentException( "   ");  }  [BUGGY]      }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	262	262	2	replace	pathNames[stackSize        -        1]        =        null;        if(stackSize    >    0)    {    pathNames[stackSize    -    1]    =    null;    }    else    {    popStack();    throw    new    IllegalArgumentException(   "   ");    }    if(stackSize  >  0)  {  pathNames[stackSize  -  1]  =  null;  if(stackSize  >  0)  {  pathNames[stackSize  -  1]  =  null;  }  else  {  popStack();  throw  new  IllegalArgumentException( "   ");  }	  	non-compiled	[CE]  ';'  expected	71	None	add
312	[BUG]  [BUGGY]  [FE]  ArrayIndexOutOfBoundsException  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {  popStack();      [BUGGY]  if(stackSize  >  0)  {  pathNames[stackSize  -  1]  =  null;  }  if(stackSize  >  0)  {  pathNames[stackSize  -  1]  =  null;  }  [BUGGY]      }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	262	262	2	add	if(stackSize    >    0)    {    pathNames[stackSize    -    1]    =    null;    }    if(stackSize  >  0)  {  pathNames[stackSize  -  1]  =  null;  }	  	compilable	  [FE]  ArrayIndexOutOfBoundsException  	19	2	add
313	[BUG]  [BUGGY]  if(stackSize  >  0)  {  pathNames[stackSize  -  1]  =  null;  }  if(stackSize  >  0)  {  pathNames[stackSize  -  1]  =  null;  }  [FE]  ArrayIndexOutOfBoundsException  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {  popStack();      [BUGGY]  if(stackSize  >  0)  {  pathNames[stackSize  -  1]  =  null;  }  if(stackSize  >  0)  {  pathNames[stackSize  -  1]  =  null;  }  [BUGGY]      }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	262	262	2	replace	if(stackSize    >    0)    {    pathNames[stackSize    -    1]    =    null;    }    if(stackSize  >  0)  {  pathNames[stackSize  -  1]  =  null;  }	  	compilable	  [FE]  ArrayIndexOutOfBoundsException  	19	2	add
314	[BUG]  [BUGGY]  if(stackSize  >  0)  {  pathNames[stackSize  -  1]  =  null;  }  If(stackSize  >  0)  {  pathNames[stackSize  -  1]  =  null;  }  [CE]  ';'  expected  [FE]      ArrayIndexOutOfBoundsException    [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {  popStack();      [BUGGY]  if(stackSize  >  0)  {  pathNames[stackSize  -  1]  =  null;  }  If(stackSize  >  0)  {  pathNames[stackSize  -  1]  =  null;  }  [BUGGY]      }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	262	262	2	replace	if(stackSize    >    0)    {    pathNames[stackSize    -    1]    =    null;    }    If(stackSize  >  0)  {  pathNames[stackSize  -  1]  =  null;  }	  	non-compiled	[CE]  ';'  expected	19	None	add
315	[BUG]  [BUGGY]  [FE]  ArrayIndexOutOfBoundsException  [FE]        ArrayIndexOutOfBoundsException    [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {  popStack();      [BUGGY]  if(stackSize  >  0)  {  pathNames[stackSize  -  1]  =  null;  }  if(stackSize  >  0)  {  pathNames[stackSize  +  1]  =  null;  }  [BUGGY]      }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	262	262	2	add	if(stackSize    >    0)    {    pathNames[stackSize    -    1]    =    null;    }    if(stackSize  >  0)  {  pathNames[stackSize  +  1]  =  null;  }	  	compilable	  [FE]  ArrayIndexOutOfBoundsException  	19	2	add
316	[BUG]  [BUGGY]  if(stackSize  >  0)  {  pathNames[stackSize  -  1]  =  null;  }  if(stackSize  >  0)  {  pathNames[stackSize  +  1]  =  null;  }  [FE]  ArrayIndexOutOfBoundsException  [FE]        ArrayIndexOutOfBoundsException    [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {  popStack();      [BUGGY]  if(stackSize  >  0)  {  pathNames[stackSize  -  1]  =  null;  }  if(stackSize  >  0)  {  pathNames[stackSize  +  1]  =  null;  }  [BUGGY]      }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	262	262	2	replace	if(stackSize    >    0)    {    pathNames[stackSize    -    1]    =    null;    }    if(stackSize  >  0)  {  pathNames[stackSize  +  1]  =  null;  }	  	compilable	  [FE]  ArrayIndexOutOfBoundsException  	19	2	add
317	[BUG]  [BUGGY]  [FE]  ArrayIndexOutOfBoundsException  [FE]          ArrayIndexOutOfBoundsException    [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {  popStack();      [BUGGY]  if(stackSize  >  0)  {  pathNames[stackSize  -  1]  =  null;  }  if(stackSize  >  0)  {  pathNames[stackSize  -  2]  =  null;  }  [BUGGY]      }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	262	262	2	add	if(stackSize    >    0)    {    pathNames[stackSize    -    1]    =    null;    }    if(stackSize  >  0)  {  pathNames[stackSize  -  2]  =  null;  }	  	compilable	  [FE]  ArrayIndexOutOfBoundsException  	19	2	add
318	[BUG]  [BUGGY]  if(stackSize  >  0)  {  pathNames[stackSize  -  1]  =  null;  }  if(stackSize  >  0)  {  pathNames[stackSize  -  2]  =  null;  }  [FE]  ArrayIndexOutOfBoundsException  [FE]          ArrayIndexOutOfBoundsException    [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {  popStack();      [BUGGY]  if(stackSize  >  0)  {  pathNames[stackSize  -  1]  =  null;  }  if(stackSize  >  0)  {  pathNames[stackSize  -  2]  =  null;  }  [BUGGY]      }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	262	262	2	replace	if(stackSize    >    0)    {    pathNames[stackSize    -    1]    =    null;    }    if(stackSize  >  0)  {  pathNames[stackSize  -  2]  =  null;  }	  	compilable	  [FE]  ArrayIndexOutOfBoundsException  	19	2	add
319	[BUG]  [BUGGY]  if(stackSize  >  0)  {  pathNames[stackSize  -  1]  =  null;  }  if(stackSsize  >  0)  {  pathNames[stackSize  -  1]  =  null;  }  [CE]  cannot  find  symbol  stackSsize  [FE]            ArrayIndexOutOfBoundsException    [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {  popStack();      [BUGGY]  if(stackSize  >  0)  {  pathNames[stackSize  -  1]  =  null;  }  if(stackSsize  >  0)  {  pathNames[stackSize  -  1]  =  null;  }  [BUGGY]      }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	262	262	2	replace	if(stackSize    >    0)    {    pathNames[stackSize    -    1]    =    null;    }    if(stackSsize  >  0)  {  pathNames[stackSize  -  1]  =  null;  }	  	non-compiled	[CE]  cannot  find  symbol  stackSsize	19	None	add
320	[BUG]  [BUGGY]  if(stackSize  >  0)  {  pathNames[stackSize  -  1]  =  null;  }  if(stackSize  >  0)  {  pathNames[stackSize  -  1].  =  null;  }  [CE]  <identifier>  expected  [FE]              ArrayIndexOutOfBoundsException    [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {  popStack();      [BUGGY]  if(stackSize  >  0)  {  pathNames[stackSize  -  1]  =  null;  }  if(stackSize  >  0)  {  pathNames[stackSize  -  1].  =  null;  }  [BUGGY]      }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	262	262	2	replace	if(stackSize    >    0)    {    pathNames[stackSize    -    1]    =    null;    }    if(stackSize  >  0)  {  pathNames[stackSize  -  1].  =  null;  }	  	non-compiled	[CE]  <identifier>  expected	19	None	add
321	[BUG]  [BUGGY]  [FE]  ArrayIndexOutOfBoundsException  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {  popStack();      [BUGGY]  pathNames[stackSize  -  2]  =  null;  if(stackSize  >  0)  {  pathNames[stackSize  -  1]  =  null;  }  else  {  popStack();  }  [BUGGY]      }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	262	262	2	add	pathNames[stackSize  -  2]  =  null;  if(stackSize  >  0)  {  pathNames[stackSize  -  1]  =  null;  }  else  {  popStack();  }	  pathNames[stackSize    -    1]    =    null;    if(stackSize    >    0)    {    pathNames[stackSize    -    1]    =    null;    }    else    {    popStack();    }    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	68	2	replace
322	[BUG]  [BUGGY]  pathNames[stackSize  -  2]  =  null;  if(stackSize  >  0)  {  pathNames[stackSize  -  1]  =  null;  }  else  {  popStack();  }  [FE]  ArrayIndexOutOfBoundsException  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {  popStack();      [BUGGY]  pathNames[stackSize  -  2]  =  null;  if(stackSize  >  0)  {  pathNames[stackSize  -  1]  =  null;  }  else  {  popStack();  }  [BUGGY]      }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	262	262	2	replace	pathNames[stackSize  -  2]  =  null;  if(stackSize  >  0)  {  pathNames[stackSize  -  1]  =  null;  }  else  {  popStack();  }	  pathNames[stackSize    -    1]    =    null;    if(stackSize    >    0)    {    pathNames[stackSize    -    1]    =    null;    }    else    {    popStack();    }    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	68	2	replace
323	[BUG]  [BUGGY]  [FE]  ArrayIndexOutOfBoundsException  [FE]      ArrayIndexOutOfBoundsException    [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {  popStack();      [BUGGY]  pathNames[stackSize  -  2]  =  null;  if(stackSize  >  0)  {  pathNames[stackSize  -  2]  =  null;  }  else  {  popStack();  }  [BUGGY]      }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	262	262	2	add	pathNames[stackSize  -  2]  =  null;  if(stackSize  >  0)  {  pathNames[stackSize  -  2]  =  null;  }  else  {  popStack();  }	  pathNames[stackSize    -    1]    =    null;    if(stackSize    >    0)    {    pathNames[stackSize    -    1]    =    null;    }    else    {    popStack();    }    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	68	2	replace
324	[BUG]  [BUGGY]  pathNames[stackSize  -  2]  =  null;  if(stackSize  >  0)  {  pathNames[stackSize  -  2]  =  null;  }  else  {  popStack();  }  [FE]  ArrayIndexOutOfBoundsException  [FE]      ArrayIndexOutOfBoundsException    [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {  popStack();      [BUGGY]  pathNames[stackSize  -  2]  =  null;  if(stackSize  >  0)  {  pathNames[stackSize  -  2]  =  null;  }  else  {  popStack();  }  [BUGGY]      }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	262	262	2	replace	pathNames[stackSize  -  2]  =  null;  if(stackSize  >  0)  {  pathNames[stackSize  -  2]  =  null;  }  else  {  popStack();  }	  pathNames[stackSize    -    1]    =    null;    if(stackSize    >    0)    {    pathNames[stackSize    -    1]    =    null;    }    else    {    popStack();    }    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	68	2	replace
325	[BUG]  [BUGGY]  pathIndices[stackSize  -  1]  =  null;  if(stackSize  >  0)  {  pathNames[stackSize  -  1]  =  null;  }  else  {  popStack();  }  [CE]  incompatible  types  [FE]        ArrayIndexOutOfBoundsException    [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {  popStack();      [BUGGY]  pathIndices[stackSize  -  1]  =  null;  if(stackSize  >  0)  {  pathNames[stackSize  -  1]  =  null;  }  else  {  popStack();  }  [BUGGY]      }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	262	262	2	replace	pathIndices[stackSize  -  1]  =  null;  if(stackSize  >  0)  {  pathNames[stackSize  -  1]  =  null;  }  else  {  popStack();  }	  pathNames[stackSize    -    1]    =    null;    if(stackSize    >    0)    {    pathNames[stackSize    -    1]    =    null;    }    else    {    popStack();    }    	non-compiled	[CE]  incompatible  types	68	None	replace
326	[BUG]  [BUGGY]  [FE]  IllegalArgumentException  [FE]    IllegalArgumentException    [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {  popStack();      [BUGGY]  if(stackSize  >  1)  {  pathIndices  =  new  int[stackSize  -  1];  System.arraycopy(pathNames,  0,  pathNames,  0,  stackSize  -  1);  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	262	262	2	add	if(stackSize  >  1)  {  pathIndices  =  new  int[stackSize  -  1];  System.arraycopy(pathNames,  0,  pathNames,  0,  stackSize  -  1);  }  else  {  throw  new  IllegalArgumentException( " ");  }	  if(stackSize    >    0)    {    pathIndices    =    new    int[stackSize    -    1];    System.arraycopy(pathNames,    0,    pathNames,    0,    stackSize    -    1);    }    else    {    throw    new    IllegalArgumentException(   "   ");    }    	compilable	  [FE]  IllegalArgumentException  	46	2	replace
327	[BUG]  [BUGGY]  if(stackSize  >  1)  {  pathIndices  =  new  int[stackSize  -  1];  System.arraycopy(pathNames,  0,  pathNames,  0,  stackSize  -  1);  }  else  {  throw  new  IllegalArgumentException( " ");  }  [FE]  IllegalArgumentException  [FE]    IllegalArgumentException    [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {  popStack();      [BUGGY]  if(stackSize  >  1)  {  pathIndices  =  new  int[stackSize  -  1];  System.arraycopy(pathNames,  0,  pathNames,  0,  stackSize  -  1);  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	262	262	2	replace	if(stackSize  >  1)  {  pathIndices  =  new  int[stackSize  -  1];  System.arraycopy(pathNames,  0,  pathNames,  0,  stackSize  -  1);  }  else  {  throw  new  IllegalArgumentException( " ");  }	  if(stackSize    >    0)    {    pathIndices    =    new    int[stackSize    -    1];    System.arraycopy(pathNames,    0,    pathNames,    0,    stackSize    -    1);    }    else    {    throw    new    IllegalArgumentException(   "   ");    }    	compilable	  [FE]  IllegalArgumentException  	46	2	replace
328	[BUG]  [BUGGY]  pathIndices  =  new  int[stackSize  -  1];  System.arraycopy(pathNames,  0,  pathNames,  0,  stackSize  -  1);  }  else  {  throw  new  IllegalArgumentException( " ");  }  [CE]  [FE]      IllegalArgumentException    [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {  popStack();      [BUGGY]  pathIndices  =  new  int[stackSize  -  1];  System.arraycopy(pathNames,  0,  pathNames,  0,  stackSize  -  1);  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	262	262	2	replace	pathIndices  =  new  int[stackSize  -  1];  System.arraycopy(pathNames,  0,  pathNames,  0,  stackSize  -  1);  }  else  {  throw  new  IllegalArgumentException( " ");  }	  if(stackSize    >    0)    {    pathIndices    =    new    int[stackSize    -    1];    System.arraycopy(pathNames,    0,    pathNames,    0,    stackSize    -    1);    }    else    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  	46	None	replace
329	[BUG]  [BUGGY]  pathIndices[stackSize  -  1]  =  null;  [CE]  incompatible  types  [FE]                    ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {  popStack();      [BUGGY]  pathIndices[stackSize  -  1]  =  null;  [BUGGY]      }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	262	262	2	replace	pathIndices[stackSize  -  1]  =  null;	  if(stackSize    >    0)    {    pathIndices[stackSize    -    1]    =    null;    }    else    {    popStack();    }    	non-compiled	[CE]  incompatible  types	25	None	replace
330	[BUG]  [BUGGY]  pathIndices[stackSize  -  1]  =  null;  }  else  {  popStack();  }  [CE]  'else'  without  'if'  [FE]                      ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {  popStack();      [BUGGY]  pathIndices[stackSize  -  1]  =  null;  }  else  {  popStack();  }  [BUGGY]      }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	262	262	2	replace	pathIndices[stackSize  -  1]  =  null;  }  else  {  popStack();  }	  if(stackSize    >    0)    {    pathIndices[stackSize    -    1]    =    null;    }    else    {    popStack();    }    	non-compiled	[CE]  'else'  without  'if'	25	None	replace
331	[BUG]  [BUGGY]  patterns[stackSize  -  1]  =  null;  [CE]  cannot  find  symbol  patterns  [FE]                        ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {  popStack();      [BUGGY]  patterns[stackSize  -  1]  =  null;  [BUGGY]      }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	262	262	2	replace	patterns[stackSize  -  1]  =  null;	  if(stackSize    >    0)    {    pathIndices[stackSize    -    1]    =    null;    }    else    {    popStack();    }    	non-compiled	[CE]  cannot  find  symbol  patterns	25	None	replace
332	[BUG]  [BUGGY]  [FE]  ArrayIndexOutOfBoundsException  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {  popStack();      [BUGGY]  if(stackSize  >  0)  {  pathIndices  =  new  int[stackSize  -  1];  System.arraycopy(pathNames,  0,  pathNames,  0,  stackSize  -  1);  }  if(stackSize  >  0)  {  pathIndices  =  new  int[stackSize  -  1];  System.arraycopy(pathNames,  0,  pathNames,  0,  stackSize  -  1);  }  [BUGGY]      }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	262	262	2	add	if(stackSize    >    0)    {    pathIndices    =    new    int[stackSize    -    1];    System.arraycopy(pathNames,    0,    pathNames,    0,    stackSize    -    1);    }    if(stackSize  >  0)  {  pathIndices  =  new  int[stackSize  -  1];  System.arraycopy(pathNames,  0,  pathNames,  0,  stackSize  -  1);  }	  	compilable	  [FE]  ArrayIndexOutOfBoundsException  	43	2	add
333	[BUG]  [BUGGY]  if(stackSize  >  0)  {  pathIndices  =  new  int[stackSize  -  1];  System.arraycopy(pathNames,  0,  pathNames,  0,  stackSize  -  1);  }  if(stackSize  >  0)  {  pathIndices  =  new  int[stackSize  -  1];  System.arraycopy(pathNames,  0,  pathNames,  0,  stackSize  -  1);  }  [FE]  ArrayIndexOutOfBoundsException  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {  popStack();      [BUGGY]  if(stackSize  >  0)  {  pathIndices  =  new  int[stackSize  -  1];  System.arraycopy(pathNames,  0,  pathNames,  0,  stackSize  -  1);  }  if(stackSize  >  0)  {  pathIndices  =  new  int[stackSize  -  1];  System.arraycopy(pathNames,  0,  pathNames,  0,  stackSize  -  1);  }  [BUGGY]      }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	262	262	2	replace	if(stackSize    >    0)    {    pathIndices    =    new    int[stackSize    -    1];    System.arraycopy(pathNames,    0,    pathNames,    0,    stackSize    -    1);    }    if(stackSize  >  0)  {  pathIndices  =  new  int[stackSize  -  1];  System.arraycopy(pathNames,  0,  pathNames,  0,  stackSize  -  1);  }	  	compilable	  [FE]  ArrayIndexOutOfBoundsException  	43	2	add
334	[BUG]  [BUGGY]  [FE]  ArrayIndexOutOfBoundsException  [FE]      ArrayIndexOutOfBoundsException    [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {  popStack();      [BUGGY]  if(stackSize  >  0)  {  pathIndices  =  new  int[stackSize  -  1];  System.arraycopy(pathNames,  0,  pathNames,  0,  stackSize  -  1);  }  if(stackSize  >  0)  {  pathIndices  =  new  int[stackSize  -  1];  System.arraycopy(pathNames,  0,  pathNames,  1,  stackSize  -  1);  }  [BUGGY]      }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	262	262	2	add	if(stackSize    >    0)    {    pathIndices    =    new    int[stackSize    -    1];    System.arraycopy(pathNames,    0,    pathNames,    0,    stackSize    -    1);    }    if(stackSize  >  0)  {  pathIndices  =  new  int[stackSize  -  1];  System.arraycopy(pathNames,  0,  pathNames,  1,  stackSize  -  1);  }	  	compilable	  [FE]  ArrayIndexOutOfBoundsException  	43	2	add
335	[BUG]  [BUGGY]  if(stackSize  >  0)  {  pathIndices  =  new  int[stackSize  -  1];  System.arraycopy(pathNames,  0,  pathNames,  0,  stackSize  -  1);  }  if(stackSize  >  0)  {  pathIndices  =  new  int[stackSize  -  1];  System.arraycopy(pathNames,  0,  pathNames,  1,  stackSize  -  1);  }  [FE]  ArrayIndexOutOfBoundsException  [FE]      ArrayIndexOutOfBoundsException    [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {  popStack();      [BUGGY]  if(stackSize  >  0)  {  pathIndices  =  new  int[stackSize  -  1];  System.arraycopy(pathNames,  0,  pathNames,  0,  stackSize  -  1);  }  if(stackSize  >  0)  {  pathIndices  =  new  int[stackSize  -  1];  System.arraycopy(pathNames,  0,  pathNames,  1,  stackSize  -  1);  }  [BUGGY]      }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	262	262	2	replace	if(stackSize    >    0)    {    pathIndices    =    new    int[stackSize    -    1];    System.arraycopy(pathNames,    0,    pathNames,    0,    stackSize    -    1);    }    if(stackSize  >  0)  {  pathIndices  =  new  int[stackSize  -  1];  System.arraycopy(pathNames,  0,  pathNames,  1,  stackSize  -  1);  }	  	compilable	  [FE]  ArrayIndexOutOfBoundsException  	43	2	add
336	[BUG]  [BUGGY]  if(stackSize  >  0)  {  pathIndices  =  new  int[stackSize  -  1];  System.arraycopy(pathNames,  0,  pathNames,  0,  stackSize  -  1);  }  if(stackSize  >  0)  {  pathIndices  =  new  int[stackSize  -  1];  System.arraycopy(pathNames,  0,  pathNames,  0,  stackSize  -  1  [CE]  [FE]        ArrayIndexOutOfBoundsException    [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {  popStack();      [BUGGY]  if(stackSize  >  0)  {  pathIndices  =  new  int[stackSize  -  1];  System.arraycopy(pathNames,  0,  pathNames,  0,  stackSize  -  1);  }  if(stackSize  >  0)  {  pathIndices  =  new  int[stackSize  -  1];  System.arraycopy(pathNames,  0,  pathNames,  0,  stackSize  -  1  [BUGGY]      }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	262	262	2	replace	if(stackSize    >    0)    {    pathIndices    =    new    int[stackSize    -    1];    System.arraycopy(pathNames,    0,    pathNames,    0,    stackSize    -    1);    }    if(stackSize  >  0)  {  pathIndices  =  new  int[stackSize  -  1];  System.arraycopy(pathNames,  0,  pathNames,  0,  stackSize  -  1	  	non-compiled	[CE]  	43	None	add
337	[BUG]  [BUGGY]  [FE]  ArrayIndexOutOfBoundsException  [FE]          ArrayIndexOutOfBoundsException    [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {  popStack();      [BUGGY]  if(stackSize  >  0)  {  pathIndices  =  new  int[stackSize  -  1];  System.arraycopy(pathNames,  0,  pathNames,  0,  stackSize  -  1);  }  if(stackSize  >  0)  {  pathIndices  =  new  int[stackSize  -  1];  System.arraycopy(pathNames,  1,  pathNames,  0,  stackSize  -  1);  }  [BUGGY]      }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	262	262	2	add	if(stackSize    >    0)    {    pathIndices    =    new    int[stackSize    -    1];    System.arraycopy(pathNames,    0,    pathNames,    0,    stackSize    -    1);    }    if(stackSize  >  0)  {  pathIndices  =  new  int[stackSize  -  1];  System.arraycopy(pathNames,  1,  pathNames,  0,  stackSize  -  1);  }	  	compilable	  [FE]  ArrayIndexOutOfBoundsException  	43	2	add
338	[BUG]  [BUGGY]  if(stackSize  >  0)  {  pathIndices  =  new  int[stackSize  -  1];  System.arraycopy(pathNames,  0,  pathNames,  0,  stackSize  -  1);  }  if(stackSize  >  0)  {  pathIndices  =  new  int[stackSize  -  1];  System.arraycopy(pathNames,  1,  pathNames,  0,  stackSize  -  1);  }  [FE]  ArrayIndexOutOfBoundsException  [FE]          ArrayIndexOutOfBoundsException    [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {  popStack();      [BUGGY]  if(stackSize  >  0)  {  pathIndices  =  new  int[stackSize  -  1];  System.arraycopy(pathNames,  0,  pathNames,  0,  stackSize  -  1);  }  if(stackSize  >  0)  {  pathIndices  =  new  int[stackSize  -  1];  System.arraycopy(pathNames,  1,  pathNames,  0,  stackSize  -  1);  }  [BUGGY]      }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	262	262	2	replace	if(stackSize    >    0)    {    pathIndices    =    new    int[stackSize    -    1];    System.arraycopy(pathNames,    0,    pathNames,    0,    stackSize    -    1);    }    if(stackSize  >  0)  {  pathIndices  =  new  int[stackSize  -  1];  System.arraycopy(pathNames,  1,  pathNames,  0,  stackSize  -  1);  }	  	compilable	  [FE]  ArrayIndexOutOfBoundsException  	43	2	add
339	[BUG]  [BUGGY]  if(stackSize  >  0)  {  pathIndices  =  new  int[stackSize  -  1];  System.arraycopy(pathNames,  0,  pathNames,  0,  stackSize  -  1);  }  If(stackSize  >  0)  {  pathIndices  =  new  int[stackSize  -  1];  System.arraycopy(pathNames,  0,  pathNames,  0,  stackSize  -  1);  }  [CE]  ';'  expected  [FE]            ArrayIndexOutOfBoundsException    [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {  popStack();      [BUGGY]  if(stackSize  >  0)  {  pathIndices  =  new  int[stackSize  -  1];  System.arraycopy(pathNames,  0,  pathNames,  0,  stackSize  -  1);  }  If(stackSize  >  0)  {  pathIndices  =  new  int[stackSize  -  1];  System.arraycopy(pathNames,  0,  pathNames,  0,  stackSize  -  1);  }  [BUGGY]      }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	262	262	2	replace	if(stackSize    >    0)    {    pathIndices    =    new    int[stackSize    -    1];    System.arraycopy(pathNames,    0,    pathNames,    0,    stackSize    -    1);    }    If(stackSize  >  0)  {  pathIndices  =  new  int[stackSize  -  1];  System.arraycopy(pathNames,  0,  pathNames,  0,  stackSize  -  1);  }	  	non-compiled	[CE]  ';'  expected	43	None	add
340	[BUG]  [BUGGY]  if(stackSize  >  0)  {  pathIndices  =  new  int[stackSize  -  1];  System.arraycopy(pathNames,  0,  pathNames,  0,  stackSize  -  1);  }  if(stackSize  >  0)  {  pathIndices  =  new  int[pathNames,  0,  pathNames,  0,  stackSize  -  1);  }  [CE]  ']'  expected  [FE]              ArrayIndexOutOfBoundsException    [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {  popStack();      [BUGGY]  if(stackSize  >  0)  {  pathIndices  =  new  int[stackSize  -  1];  System.arraycopy(pathNames,  0,  pathNames,  0,  stackSize  -  1);  }  if(stackSize  >  0)  {  pathIndices  =  new  int[pathNames,  0,  pathNames,  0,  stackSize  -  1);  }  [BUGGY]      }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	262	262	2	replace	if(stackSize    >    0)    {    pathIndices    =    new    int[stackSize    -    1];    System.arraycopy(pathNames,    0,    pathNames,    0,    stackSize    -    1);    }    if(stackSize  >  0)  {  pathIndices  =  new  int[pathNames,  0,  pathNames,  0,  stackSize  -  1);  }	  	non-compiled	[CE]  ']'  expected	43	None	add
341	[BUG]  [BUGGY]  PathIndexOutOfBoundsException  e  =  new  PathIndexOutOfBoundsException( " ");  pathNames[stackSize  -  1]  =  null;  [CE]  cannot  find  symbol  [FE]              ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {  popStack();      [BUGGY]  PathIndexOutOfBoundsException  e  =  new  PathIndexOutOfBoundsException( " ");  pathNames[stackSize  -  1]  =  null;  [BUGGY]      }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	262	262	2	replace	PathIndexOutOfBoundsException  e  =  new  PathIndexOutOfBoundsException( " ");  pathNames[stackSize  -  1]  =  null;	  pathNames[stackSize    -    1]    =    null;    PathIndexOutOfBoundsException    e    =    new    PathIndexOutOfBoundsException(   "   ");    pathNames[stackSize    -    1]    =    null;    	non-compiled	[CE]  cannot  find  symbol	30	None	replace
342	[BUG]  [BUGGY]  pathNames[stackSize  -  1]  =  new  PathIndexOutOfBoundsException( " ");  pathNames[stackSize  -  1]  =  null;  [CE]  cannot  find  symbol  [FE]                ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {  popStack();      [BUGGY]  pathNames[stackSize  -  1]  =  new  PathIndexOutOfBoundsException( " ");  pathNames[stackSize  -  1]  =  null;  [BUGGY]      }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	262	262	2	replace	pathNames[stackSize  -  1]  =  new  PathIndexOutOfBoundsException( " ");  pathNames[stackSize  -  1]  =  null;	  pathNames[stackSize    -    1]    =    null;    PathIndexOutOfBoundsException    e    =    new    PathIndexOutOfBoundsException(   "   ");    pathNames[stackSize    -    1]    =    null;    	non-compiled	[CE]  cannot  find  symbol	30	None	replace
343	[BUG]  [BUGGY]  pathNames[stackSize  -  1]  =  null;  PathIndexOutOfBoundsException  e  =  new  PathIndexOutOfBoundsException( " ");  pathIndices[stackSize  -  1]  =  null;  [CE]  cannot  find  symbol  [FE]                  ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {  popStack();      [BUGGY]  pathNames[stackSize  -  1]  =  null;  PathIndexOutOfBoundsException  e  =  new  PathIndexOutOfBoundsException( " ");  pathIndices[stackSize  -  1]  =  null;  [BUGGY]      }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	262	262	2	replace	pathNames[stackSize  -  1]  =  null;  PathIndexOutOfBoundsException  e  =  new  PathIndexOutOfBoundsException( " ");  pathIndices[stackSize  -  1]  =  null;	  pathNames[stackSize    -    1]    =    null;    PathIndexOutOfBoundsException    e    =    new    PathIndexOutOfBoundsException(   "   ");    pathNames[stackSize    -    1]    =    null;    	non-compiled	[CE]  cannot  find  symbol	30	None	replace
344	[BUG]  [BUGGY]  pathNames[stackSize  -  1]  =   "null ",  JsonToken.FIELD_NAME;  [CE]  [FE]                  ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {  popStack();      [BUGGY]  pathNames[stackSize  -  1]  =   "null ",  JsonToken.FIELD_NAME;  [BUGGY]      }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	262	262	2	replace	pathNames[stackSize  -  1]  =   "null ",  JsonToken.FIELD_NAME;	  pathNames[stackSize    -    1]    =       "null   "    +    JsonToken.FIELD_NAME;    	non-compiled	[CE]  	40	None	replace
345	[BUG]  [BUGGY]  int[]  result  =  new  int[stackSize  -  1];  for(int  i  =  0;  i  <  stackSize;  ++i)  {  result[i]  =  null;  }  [CE]  incompatible  types  [FE]        ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {  popStack();      [BUGGY]  int[]  result  =  new  int[stackSize  -  1];  for(int  i  =  0;  i  <  stackSize;  ++i)  {  result[i]  =  null;  }  [BUGGY]      }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	262	262	2	replace	int[]  result  =  new  int[stackSize  -  1];  for(int  i  =  0;  i  <  stackSize;  ++i)  {  result[i]  =  null;  }	  if(stackSize    >    0)    {    int[]    result    =    new    int[stackSize    -    1];    for(int    i    =    0;    i    <    stackSize;    ++i)    {    result[i]    =    null;    }    	non-compiled	[CE]  incompatible  types	76	None	replace
346	[BUG]  [BUGGY]  []  result  =  new  int[stackSize  -  1];  for(int  i  =  0;  i  <  stackSize;  ++i)  {  result[i]  =  null;  }  [CE]  illegal  start  of  expression  [FE]          ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {  popStack();      [BUGGY]  []  result  =  new  int[stackSize  -  1];  for(int  i  =  0;  i  <  stackSize;  ++i)  {  result[i]  =  null;  }  [BUGGY]      }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	262	262	2	replace	[]  result  =  new  int[stackSize  -  1];  for(int  i  =  0;  i  <  stackSize;  ++i)  {  result[i]  =  null;  }	  if(stackSize    >    0)    {    int[]    result    =    new    int[stackSize    -    1];    for(int    i    =    0;    i    <    stackSize;    ++i)    {    result[i]    =    null;    }    	non-compiled	[CE]  illegal  start  of  expression	76	None	replace
347	[BUG]  [BUGGY]  ||  stackSize  >  0)  {  int[]  result  =  new  int[stackSize  -  1];  for(int  i  =  0;  i  <  stackSize;  ++i)  {  result[i]  =  null;  }  [CE]  illegal  start  of  expression  [FE]            ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {  popStack();      [BUGGY]  ||  stackSize  >  0)  {  int[]  result  =  new  int[stackSize  -  1];  for(int  i  =  0;  i  <  stackSize;  ++i)  {  result[i]  =  null;  }  [BUGGY]      }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	262	262	2	replace	||  stackSize  >  0)  {  int[]  result  =  new  int[stackSize  -  1];  for(int  i  =  0;  i  <  stackSize;  ++i)  {  result[i]  =  null;  }	  if(stackSize    >    0)    {    int[]    result    =    new    int[stackSize    -    1];    for(int    i    =    0;    i    <    stackSize;    ++i)    {    result[i]    =    null;    }    	non-compiled	[CE]  illegal  start  of  expression	76	None	replace
348	[BUG]  [BUGGY]  if(stackSize  ==  0)  {  if(stackSize  >  0)  {  int[]  result  =  new  int[stackSize  -  1];  for(int  i  =  0;  i  <  stackSize;  ++i)  {  result[i]  =  null;  }  }  [CE]  ';'  expected  [FE]              ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {  popStack();      [BUGGY]  if(stackSize  ==  0)  {  if(stackSize  >  0)  {  int[]  result  =  new  int[stackSize  -  1];  for(int  i  =  0;  i  <  stackSize;  ++i)  {  result[i]  =  null;  }  }  [BUGGY]      }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	262	262	2	replace	if(stackSize  ==  0)  {  if(stackSize  >  0)  {  int[]  result  =  new  int[stackSize  -  1];  for(int  i  =  0;  i  <  stackSize;  ++i)  {  result[i]  =  null;  }  }	  if(stackSize    >    0)    {    int[]    result    =    new    int[stackSize    -    1];    for(int    i    =    0;    i    <    stackSize;    ++i)    {    result[i]    =    null;    }    	non-compiled	[CE]  ';'  expected	76	None	replace
349	[BUG]  [BUGGY]  if(stackSize  >  1)  {  int[]  result  =  new  int[stackSize  -  1];  for(int  i  =  0;  i  <  stackSize;  ++i)  {  result[i]  =  null;  }  [CE]  ';'  expected  [FE]                ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {  popStack();      [BUGGY]  if(stackSize  >  1)  {  int[]  result  =  new  int[stackSize  -  1];  for(int  i  =  0;  i  <  stackSize;  ++i)  {  result[i]  =  null;  }  [BUGGY]      }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	262	262	2	replace	if(stackSize  >  1)  {  int[]  result  =  new  int[stackSize  -  1];  for(int  i  =  0;  i  <  stackSize;  ++i)  {  result[i]  =  null;  }	  if(stackSize    >    0)    {    int[]    result    =    new    int[stackSize    -    1];    for(int    i    =    0;    i    <    stackSize;    ++i)    {    result[i]    =    null;    }    	non-compiled	[CE]  ';'  expected	76	None	replace
350	[BUG]  [BUGGY]  [FE]  IOException  [FE]    IOException    [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {  popStack();      [BUGGY]  if(stackSize  >  0)  {  pathIndices  =  new  int[stackSize  -  1];  System.arraycopy(pathNames,  0,  pathNames,  0,  stackSize  -  1);  }  else  {  throw  new  IOException(   "   ");  }  if(stackSize  >  0)  {  pathIndices  =  new  int[stackSize  -  1];  System.arraycopy(pathNames,  0,  pathNames,  0,  stackSize  -  1);  }  else  {  throw  new  IOException( "   ");  }  [BUGGY]      }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	262	262	2	add	if(stackSize    >    0)    {    pathIndices    =    new    int[stackSize    -    1];    System.arraycopy(pathNames,    0,    pathNames,    0,    stackSize    -    1);    }    else    {    throw    new    IOException(   "   ");    }    if(stackSize  >  0)  {  pathIndices  =  new  int[stackSize  -  1];  System.arraycopy(pathNames,  0,  pathNames,  0,  stackSize  -  1);  }  else  {  throw  new  IOException( "   ");  }	  	compilable	  [FE]  IOException  	50	2	add
351	[BUG]  [BUGGY]  if(stackSize  >  0)  {  pathIndices  =  new  int[stackSize  -  1];  System.arraycopy(pathNames,  0,  pathNames,  0,  stackSize  -  1);  }  else  {  throw  new  IOException(   "   ");  }  if(stackSize  >  0)  {  pathIndices  =  new  int[stackSize  -  1];  System.arraycopy(pathNames,  0,  pathNames,  0,  stackSize  -  1);  }  else  {  throw  new  IOException( "   ");  }  [FE]  IOException  [FE]    IOException    [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {  popStack();      [BUGGY]  if(stackSize  >  0)  {  pathIndices  =  new  int[stackSize  -  1];  System.arraycopy(pathNames,  0,  pathNames,  0,  stackSize  -  1);  }  else  {  throw  new  IOException(   "   ");  }  if(stackSize  >  0)  {  pathIndices  =  new  int[stackSize  -  1];  System.arraycopy(pathNames,  0,  pathNames,  0,  stackSize  -  1);  }  else  {  throw  new  IOException( "   ");  }  [BUGGY]      }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	262	262	2	replace	if(stackSize    >    0)    {    pathIndices    =    new    int[stackSize    -    1];    System.arraycopy(pathNames,    0,    pathNames,    0,    stackSize    -    1);    }    else    {    throw    new    IOException(   "   ");    }    if(stackSize  >  0)  {  pathIndices  =  new  int[stackSize  -  1];  System.arraycopy(pathNames,  0,  pathNames,  0,  stackSize  -  1);  }  else  {  throw  new  IOException( "   ");  }	  	compilable	  [FE]  IOException  	50	2	add
352	[BUG]  [BUGGY]  if(stackSize  >  0)  {  pathIndices  =  new  int[stackSize  -  1];  System.arraycopy(pathNames,  0,  pathNames,  0,  stackSize  -  1);  }  else  {  throw  new  IOException(   "   ");  }  if(stackSize  >  0)  {  pathIndices  =  new  int[stackSize  -  1];  System.arraycopy(pathNames,  0,  pathNames,  0,  stackSize  -  1);  }  else  {  throw  new  IOException( "  [CE]  unclosed  string  literal  [FE]      IOException    [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {  popStack();      [BUGGY]  if(stackSize  >  0)  {  pathIndices  =  new  int[stackSize  -  1];  System.arraycopy(pathNames,  0,  pathNames,  0,  stackSize  -  1);  }  else  {  throw  new  IOException(   "   ");  }  if(stackSize  >  0)  {  pathIndices  =  new  int[stackSize  -  1];  System.arraycopy(pathNames,  0,  pathNames,  0,  stackSize  -  1);  }  else  {  throw  new  IOException( "  [BUGGY]      }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	262	262	2	replace	if(stackSize    >    0)    {    pathIndices    =    new    int[stackSize    -    1];    System.arraycopy(pathNames,    0,    pathNames,    0,    stackSize    -    1);    }    else    {    throw    new    IOException(   "   ");    }    if(stackSize  >  0)  {  pathIndices  =  new  int[stackSize  -  1];  System.arraycopy(pathNames,  0,  pathNames,  0,  stackSize  -  1);  }  else  {  throw  new  IOException( "	  	non-compiled	[CE]  unclosed  string  literal	50	None	add
353	[BUG]  [BUGGY]  if(stackSize  >  0)  {  pathIndices  =  new  int[stackSize  -  1];  System.arraycopy(pathNames,  0,  pathNames,  0,  stackSize  -  1);  }  else  {  throw  new  IOException(   "   ");  }  if(stackSize  >  0)  {  pathIndices  =  new  int[stackSize  -  1];  System.arraycopy(pathNames,  0,  pathNames,  0,  stackSize  -  1);  }  else  {  throw  new  IOException( " ".);  }  [CE]  <identifier>  expected  [FE]        IOException    [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {  popStack();      [BUGGY]  if(stackSize  >  0)  {  pathIndices  =  new  int[stackSize  -  1];  System.arraycopy(pathNames,  0,  pathNames,  0,  stackSize  -  1);  }  else  {  throw  new  IOException(   "   ");  }  if(stackSize  >  0)  {  pathIndices  =  new  int[stackSize  -  1];  System.arraycopy(pathNames,  0,  pathNames,  0,  stackSize  -  1);  }  else  {  throw  new  IOException( " ".);  }  [BUGGY]      }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	262	262	2	replace	if(stackSize    >    0)    {    pathIndices    =    new    int[stackSize    -    1];    System.arraycopy(pathNames,    0,    pathNames,    0,    stackSize    -    1);    }    else    {    throw    new    IOException(   "   ");    }    if(stackSize  >  0)  {  pathIndices  =  new  int[stackSize  -  1];  System.arraycopy(pathNames,  0,  pathNames,  0,  stackSize  -  1);  }  else  {  throw  new  IOException( " ".);  }	  	non-compiled	[CE]  <identifier>  expected	50	None	add
354	[BUG]  [BUGGY]  [FE]  IOException  [FE]          IOException    [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {  popStack();      [BUGGY]  if(stackSize  >  0)  {  pathIndices  =  new  int[stackSize  -  1];  System.arraycopy(pathNames,  0,  pathNames,  0,  stackSize  -  1);  }  else  {  throw  new  IOException(   "   ");  }  if(stackSize  >  0)  {  pathIndices  =  new  int[stackSize  -  1];  System.arraycopy(pathNames,  0,  pathNames,  0,  stackSize  -  1);  }  else  {  throw  new  IOException( ". ");  }  [BUGGY]      }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	262	262	2	add	if(stackSize    >    0)    {    pathIndices    =    new    int[stackSize    -    1];    System.arraycopy(pathNames,    0,    pathNames,    0,    stackSize    -    1);    }    else    {    throw    new    IOException(   "   ");    }    if(stackSize  >  0)  {  pathIndices  =  new  int[stackSize  -  1];  System.arraycopy(pathNames,  0,  pathNames,  0,  stackSize  -  1);  }  else  {  throw  new  IOException( ". ");  }	  	compilable	  [FE]  IOException  	50	2	add
355	[BUG]  [BUGGY]  if(stackSize  >  0)  {  pathIndices  =  new  int[stackSize  -  1];  System.arraycopy(pathNames,  0,  pathNames,  0,  stackSize  -  1);  }  else  {  throw  new  IOException(   "   ");  }  if(stackSize  >  0)  {  pathIndices  =  new  int[stackSize  -  1];  System.arraycopy(pathNames,  0,  pathNames,  0,  stackSize  -  1);  }  else  {  throw  new  IOException( ". ");  }  [FE]  IOException  [FE]          IOException    [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {  popStack();      [BUGGY]  if(stackSize  >  0)  {  pathIndices  =  new  int[stackSize  -  1];  System.arraycopy(pathNames,  0,  pathNames,  0,  stackSize  -  1);  }  else  {  throw  new  IOException(   "   ");  }  if(stackSize  >  0)  {  pathIndices  =  new  int[stackSize  -  1];  System.arraycopy(pathNames,  0,  pathNames,  0,  stackSize  -  1);  }  else  {  throw  new  IOException( ". ");  }  [BUGGY]      }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	262	262	2	replace	if(stackSize    >    0)    {    pathIndices    =    new    int[stackSize    -    1];    System.arraycopy(pathNames,    0,    pathNames,    0,    stackSize    -    1);    }    else    {    throw    new    IOException(   "   ");    }    if(stackSize  >  0)  {  pathIndices  =  new  int[stackSize  -  1];  System.arraycopy(pathNames,  0,  pathNames,  0,  stackSize  -  1);  }  else  {  throw  new  IOException( ". ");  }	  	compilable	  [FE]  IOException  	50	2	add
356	[BUG]  [BUGGY]  [FE]  IOException  [FE]            IOException    [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {  popStack();      [BUGGY]  if(stackSize  >  0)  {  pathIndices  =  new  int[stackSize  -  1];  System.arraycopy(pathNames,  0,  pathNames,  0,  stackSize  -  1);  }  else  {  throw  new  IOException(   "   ");  }  if(stackSize  >  0)  {  pathIndices  =  new  int[stackSize  -  1];  System.arraycopy(pathNames,  0,  pathNames,  0,  stackSize  -  1);  }  else  {  throw  new  IOException( ", ");  }  [BUGGY]      }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	262	262	2	add	if(stackSize    >    0)    {    pathIndices    =    new    int[stackSize    -    1];    System.arraycopy(pathNames,    0,    pathNames,    0,    stackSize    -    1);    }    else    {    throw    new    IOException(   "   ");    }    if(stackSize  >  0)  {  pathIndices  =  new  int[stackSize  -  1];  System.arraycopy(pathNames,  0,  pathNames,  0,  stackSize  -  1);  }  else  {  throw  new  IOException( ", ");  }	  	compilable	  [FE]  IOException  	50	2	add
357	[BUG]  [BUGGY]  if(stackSize  >  0)  {  pathIndices  =  new  int[stackSize  -  1];  System.arraycopy(pathNames,  0,  pathNames,  0,  stackSize  -  1);  }  else  {  throw  new  IOException(   "   ");  }  if(stackSize  >  0)  {  pathIndices  =  new  int[stackSize  -  1];  System.arraycopy(pathNames,  0,  pathNames,  0,  stackSize  -  1);  }  else  {  throw  new  IOException( ", ");  }  [FE]  IOException  [FE]            IOException    [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {  popStack();      [BUGGY]  if(stackSize  >  0)  {  pathIndices  =  new  int[stackSize  -  1];  System.arraycopy(pathNames,  0,  pathNames,  0,  stackSize  -  1);  }  else  {  throw  new  IOException(   "   ");  }  if(stackSize  >  0)  {  pathIndices  =  new  int[stackSize  -  1];  System.arraycopy(pathNames,  0,  pathNames,  0,  stackSize  -  1);  }  else  {  throw  new  IOException( ", ");  }  [BUGGY]      }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	262	262	2	replace	if(stackSize    >    0)    {    pathIndices    =    new    int[stackSize    -    1];    System.arraycopy(pathNames,    0,    pathNames,    0,    stackSize    -    1);    }    else    {    throw    new    IOException(   "   ");    }    if(stackSize  >  0)  {  pathIndices  =  new  int[stackSize  -  1];  System.arraycopy(pathNames,  0,  pathNames,  0,  stackSize  -  1);  }  else  {  throw  new  IOException( ", ");  }	  	compilable	  [FE]  IOException  	50	2	add
358	[BUG]  [BUGGY]  [FE]  IOException  [FE]    IOException    [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {  popStack();      [BUGGY]  if(stackSize  >  1)  {  pathIndices  =  new  int[stackSize  -  1];  System.arraycopy(pathNames,  0,  pathNames,  0,  stackSize  -  1);  }  else  {  throw  new  IOException( " ");  }  [BUGGY]      }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	262	262	2	add	if(stackSize  >  1)  {  pathIndices  =  new  int[stackSize  -  1];  System.arraycopy(pathNames,  0,  pathNames,  0,  stackSize  -  1);  }  else  {  throw  new  IOException( " ");  }	  if(stackSize    >    0)    {    pathIndices    =    new    int[stackSize    -    1];    System.arraycopy(pathNames,    0,    pathNames,    0,    stackSize    -    1);    }    else    {    throw    new    IOException(   "   ");    }    	compilable	  [FE]  IOException  	51	2	replace
359	[BUG]  [BUGGY]  if(stackSize  >  1)  {  pathIndices  =  new  int[stackSize  -  1];  System.arraycopy(pathNames,  0,  pathNames,  0,  stackSize  -  1);  }  else  {  throw  new  IOException( " ");  }  [FE]  IOException  [FE]    IOException    [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {  popStack();      [BUGGY]  if(stackSize  >  1)  {  pathIndices  =  new  int[stackSize  -  1];  System.arraycopy(pathNames,  0,  pathNames,  0,  stackSize  -  1);  }  else  {  throw  new  IOException( " ");  }  [BUGGY]      }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	262	262	2	replace	if(stackSize  >  1)  {  pathIndices  =  new  int[stackSize  -  1];  System.arraycopy(pathNames,  0,  pathNames,  0,  stackSize  -  1);  }  else  {  throw  new  IOException( " ");  }	  if(stackSize    >    0)    {    pathIndices    =    new    int[stackSize    -    1];    System.arraycopy(pathNames,    0,    pathNames,    0,    stackSize    -    1);    }    else    {    throw    new    IOException(   "   ");    }    	compilable	  [FE]  IOException  	51	2	replace
360	[BUG]  [BUGGY]  pathIndices  =  new  int[stackSize  -  1];  System.arraycopy(pathNames,  0,  pathNames,  0,  stackSize  -  1);  }  else  {  throw  new  IOException( " ");  }  [CE]  [FE]      IOException    [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {  popStack();      [BUGGY]  pathIndices  =  new  int[stackSize  -  1];  System.arraycopy(pathNames,  0,  pathNames,  0,  stackSize  -  1);  }  else  {  throw  new  IOException( " ");  }  [BUGGY]      }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	262	262	2	replace	pathIndices  =  new  int[stackSize  -  1];  System.arraycopy(pathNames,  0,  pathNames,  0,  stackSize  -  1);  }  else  {  throw  new  IOException( " ");  }	  if(stackSize    >    0)    {    pathIndices    =    new    int[stackSize    -    1];    System.arraycopy(pathNames,    0,    pathNames,    0,    stackSize    -    1);    }    else    {    throw    new    IOException(   "   ");    }    	non-compiled	[CE]  	51	None	replace
361	[BUG]  [BUGGY]  pathNames[stackSize  -  1]  =   "null "  +  JsonToken.VALUE_NUMBER_OBJECT;  [CE]  cannot  find  symbol  VALUE_NUMBER_OBJECT  [FE]                ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {  popStack();      [BUGGY]  pathNames[stackSize  -  1]  =   "null "  +  JsonToken.VALUE_NUMBER_OBJECT;  [BUGGY]      }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	262	262	2	replace	pathNames[stackSize  -  1]  =   "null "  +  JsonToken.VALUE_NUMBER_OBJECT;	  pathNames[stackSize    -    1]    =       "null   "    +    JsonToken.VALUE_EMBEDDED_OBJECT;    	non-compiled	[CE]  cannot  find  symbol  VALUE_NUMBER_OBJECT	39	None	replace
362	[BUG]  [BUGGY]  pathNames[stackSize  -  2]  =  null;  PathIndexOutOfBoundsException.printStackTrace(pathNames[stackSize  -  1]);  [CE]  cannot  find  symbol  PathIndexOutOfBoundsException  [FE]                    ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {  popStack();      [BUGGY]  pathNames[stackSize  -  2]  =  null;  PathIndexOutOfBoundsException.printStackTrace(pathNames[stackSize  -  1]);  [BUGGY]      }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	262	262	2	replace	pathNames[stackSize  -  2]  =  null;  PathIndexOutOfBoundsException.printStackTrace(pathNames[stackSize  -  1]);	  pathNames[stackSize    -    1]    =    null;    PathIndexOutOfBoundsException.printStackTrace(pathNames[stackSize    -    1]);    	non-compiled	[CE]  cannot  find  symbol  PathIndexOutOfBoundsException	33	None	replace
363	[BUG]  [BUGGY]  PathIndexOutOfBoundsException.printStackTrace(pathNames[stackSize  -  1]);  [CE]  cannot  find  symbol  PathIndexOutOfBoundsException  [FE]                      ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {  popStack();      [BUGGY]  PathIndexOutOfBoundsException.printStackTrace(pathNames[stackSize  -  1]);  [BUGGY]      }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	262	262	2	replace	PathIndexOutOfBoundsException.printStackTrace(pathNames[stackSize  -  1]);	  pathNames[stackSize    -    1]    =    null;    PathIndexOutOfBoundsException.printStackTrace(pathNames[stackSize    -    1]);    	non-compiled	[CE]  cannot  find  symbol  PathIndexOutOfBoundsException	33	None	replace
364	[BUG]  [BUGGY]  pathNames[stackSize  -  1]  =  null;  pathIndexOutOfBoundsException.printStackTrace(pathNames[stackSize  -  1]);  [CE]  cannot  find  symbol  pathIndexOutOfBoundsException  [FE]                        ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {  popStack();      [BUGGY]  pathNames[stackSize  -  1]  =  null;  pathIndexOutOfBoundsException.printStackTrace(pathNames[stackSize  -  1]);  [BUGGY]      }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	262	262	2	replace	pathNames[stackSize  -  1]  =  null;  pathIndexOutOfBoundsException.printStackTrace(pathNames[stackSize  -  1]);	  pathNames[stackSize    -    1]    =    null;    PathIndexOutOfBoundsException.printStackTrace(pathNames[stackSize    -    1]);    	non-compiled	[CE]  cannot  find  symbol  pathIndexOutOfBoundsException	33	None	replace
365	[BUG]  [BUGGY]  if(stackSize  >  0)  {  pathIndices[stackSize  -  1]  =  JsonToken.VALUE_NULL;  System.arraycopy(pathNames,  0,  pathNames,  0,  stackSize  -  1);  }  [CE]  cannot  find  symbol  VALUE_NULL  [FE]            ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {  popStack();      [BUGGY]  if(stackSize  >  0)  {  pathIndices[stackSize  -  1]  =  JsonToken.VALUE_NULL;  System.arraycopy(pathNames,  0,  pathNames,  0,  stackSize  -  1);  }  [BUGGY]      }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	262	262	2	replace	if(stackSize  >  0)  {  pathIndices[stackSize  -  1]  =  JsonToken.VALUE_NULL;  System.arraycopy(pathNames,  0,  pathNames,  0,  stackSize  -  1);  }	  if(stackSize    >    0)    {    pathIndices[stackSize    -    1]    =    null;    System.arraycopy(pathNames,    0,    pathNames,    0,    stackSize    -    1);    }    	non-compiled	[CE]  cannot  find  symbol  VALUE_NULL	47	None	replace
366	[BUG]  [BUGGY]  if(stackSize  >  0)  {  pathIndices[stackSize  -  1]  =  JsonToken.VALUE_EMPTY;  System.arraycopy(pathNames,  0,  pathNames,  0,  stackSize  -  1);  }  [CE]  cannot  find  symbol  VALUE_EMPTY  [FE]              ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {  popStack();      [BUGGY]  if(stackSize  >  0)  {  pathIndices[stackSize  -  1]  =  JsonToken.VALUE_EMPTY;  System.arraycopy(pathNames,  0,  pathNames,  0,  stackSize  -  1);  }  [BUGGY]      }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	262	262	2	replace	if(stackSize  >  0)  {  pathIndices[stackSize  -  1]  =  JsonToken.VALUE_EMPTY;  System.arraycopy(pathNames,  0,  pathNames,  0,  stackSize  -  1);  }	  if(stackSize    >    0)    {    pathIndices[stackSize    -    1]    =    null;    System.arraycopy(pathNames,    0,    pathNames,    0,    stackSize    -    1);    }    	non-compiled	[CE]  cannot  find  symbol  VALUE_EMPTY	47	None	replace
367	[BUG]  [BUGGY]  pathIndices[stackSize  -  1]  =  null;  }  [CE]  ']'  expected  [FE]        ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {  popStack();      [BUGGY]  pathIndices[stackSize  -  1]  =  null;  }  [BUGGY]      }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	262	262	2	replace	pathIndices[stackSize  -  1]  =  null;  }	  if(stackSize    >    0)    {    pathIndices[stackSize    -    1]    =    null;    }    	non-compiled	[CE]  ']'  expected	14	None	replace
368	[BUG]  [BUGGY]  [FE]  ArrayIndexOutOfBoundsException  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {  popStack();      [BUGGY]  if(stackSize  >  0)  {  int[]  result  =  new  int[stackSize  -  1];  System.arraycopy(pathNames,  0,  pathNames,  0,  stackSize  -  1);  }  if(stackSize  >  0)  {  int[]  result  =  new  int[stackSize  -  1];  System.arraycopy(pathNames,  0,  pathNames,  0,  stackSize  -  1);  }  [BUGGY]      }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	262	262	2	add	if(stackSize    >    0)    {    int[]    result    =    new    int[stackSize    -    1];    System.arraycopy(pathNames,    0,    pathNames,    0,    stackSize    -    1);    }    if(stackSize  >  0)  {  int[]  result  =  new  int[stackSize  -  1];  System.arraycopy(pathNames,  0,  pathNames,  0,  stackSize  -  1);  }	  	compilable	  [FE]  ArrayIndexOutOfBoundsException  	77	2	add
369	[BUG]  [BUGGY]  if(stackSize  >  0)  {  int[]  result  =  new  int[stackSize  -  1];  System.arraycopy(pathNames,  0,  pathNames,  0,  stackSize  -  1);  }  if(stackSize  >  0)  {  int[]  result  =  new  int[stackSize  -  1];  System.arraycopy(pathNames,  0,  pathNames,  0,  stackSize  -  1);  }  [FE]  ArrayIndexOutOfBoundsException  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {  popStack();      [BUGGY]  if(stackSize  >  0)  {  int[]  result  =  new  int[stackSize  -  1];  System.arraycopy(pathNames,  0,  pathNames,  0,  stackSize  -  1);  }  if(stackSize  >  0)  {  int[]  result  =  new  int[stackSize  -  1];  System.arraycopy(pathNames,  0,  pathNames,  0,  stackSize  -  1);  }  [BUGGY]      }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	262	262	2	replace	if(stackSize    >    0)    {    int[]    result    =    new    int[stackSize    -    1];    System.arraycopy(pathNames,    0,    pathNames,    0,    stackSize    -    1);    }    if(stackSize  >  0)  {  int[]  result  =  new  int[stackSize  -  1];  System.arraycopy(pathNames,  0,  pathNames,  0,  stackSize  -  1);  }	  	compilable	  [FE]  ArrayIndexOutOfBoundsException  	77	2	add
370	[BUG]  [BUGGY]  if(stackSize  >  0)  {  int[]  result  =  new  int[stackSize  -  1];  System.arraycopy(pathNames,  0,  pathNames,  0,  stackSize  -  1);  }  if(stackSize  >  0)  {  int[]  result  =  new  int[result[stackSize  -  1];  System.arraycopy(pathNames,  0,  pathNames,  0,  stackSize  -  1);  }  [CE]  ']'  expected  [FE]      ArrayIndexOutOfBoundsException    [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {  popStack();      [BUGGY]  if(stackSize  >  0)  {  int[]  result  =  new  int[stackSize  -  1];  System.arraycopy(pathNames,  0,  pathNames,  0,  stackSize  -  1);  }  if(stackSize  >  0)  {  int[]  result  =  new  int[result[stackSize  -  1];  System.arraycopy(pathNames,  0,  pathNames,  0,  stackSize  -  1);  }  [BUGGY]      }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	262	262	2	replace	if(stackSize    >    0)    {    int[]    result    =    new    int[stackSize    -    1];    System.arraycopy(pathNames,    0,    pathNames,    0,    stackSize    -    1);    }    if(stackSize  >  0)  {  int[]  result  =  new  int[result[stackSize  -  1];  System.arraycopy(pathNames,  0,  pathNames,  0,  stackSize  -  1);  }	  	non-compiled	[CE]  ']'  expected	77	None	add
371	[BUG]  [BUGGY]  if(stackSize  >  0)  {  int[]  result  =  new  int[stackSize  -  1];  System.arraycopy(pathNames,  0,  pathNames,  0,  stackSize  -  1);  }  if(stackSize  >  0)  {  int[]  result  =  new  int[result.length  -  1];  System.arraycopy(pathNames,  0,  pathNames,  0,  stackSize  -  1);  }  [CE]  variable  result  might  not  have  been  initialized  [FE]        ArrayIndexOutOfBoundsException    [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {  popStack();      [BUGGY]  if(stackSize  >  0)  {  int[]  result  =  new  int[stackSize  -  1];  System.arraycopy(pathNames,  0,  pathNames,  0,  stackSize  -  1);  }  if(stackSize  >  0)  {  int[]  result  =  new  int[result.length  -  1];  System.arraycopy(pathNames,  0,  pathNames,  0,  stackSize  -  1);  }  [BUGGY]      }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	262	262	2	replace	if(stackSize    >    0)    {    int[]    result    =    new    int[stackSize    -    1];    System.arraycopy(pathNames,    0,    pathNames,    0,    stackSize    -    1);    }    if(stackSize  >  0)  {  int[]  result  =  new  int[result.length  -  1];  System.arraycopy(pathNames,  0,  pathNames,  0,  stackSize  -  1);  }	  	non-compiled	[CE]  variable  result  might  not  have  been  initialized	77	None	add
372	[BUG]  [BUGGY]  [FE]  ArrayIndexOutOfBoundsException  [FE]          ArrayIndexOutOfBoundsException    [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {  popStack();      [BUGGY]  if(stackSize  >  0)  {  int[]  result  =  new  int[stackSize  -  1];  System.arraycopy(pathNames,  0,  pathNames,  0,  stackSize  -  1);  }  if(stackSize  >  0)  {  int[]  result  =  new  int[stackSize  -  1];  System.arraycopy(pathNames,  0,  pathNames,  1,  stackSize  -  1);  }  [BUGGY]      }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	262	262	2	add	if(stackSize    >    0)    {    int[]    result    =    new    int[stackSize    -    1];    System.arraycopy(pathNames,    0,    pathNames,    0,    stackSize    -    1);    }    if(stackSize  >  0)  {  int[]  result  =  new  int[stackSize  -  1];  System.arraycopy(pathNames,  0,  pathNames,  1,  stackSize  -  1);  }	  	compilable	  [FE]  ArrayIndexOutOfBoundsException  	77	2	add
373	[BUG]  [BUGGY]  if(stackSize  >  0)  {  int[]  result  =  new  int[stackSize  -  1];  System.arraycopy(pathNames,  0,  pathNames,  0,  stackSize  -  1);  }  if(stackSize  >  0)  {  int[]  result  =  new  int[stackSize  -  1];  System.arraycopy(pathNames,  0,  pathNames,  1,  stackSize  -  1);  }  [FE]  ArrayIndexOutOfBoundsException  [FE]          ArrayIndexOutOfBoundsException    [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {  popStack();      [BUGGY]  if(stackSize  >  0)  {  int[]  result  =  new  int[stackSize  -  1];  System.arraycopy(pathNames,  0,  pathNames,  0,  stackSize  -  1);  }  if(stackSize  >  0)  {  int[]  result  =  new  int[stackSize  -  1];  System.arraycopy(pathNames,  0,  pathNames,  1,  stackSize  -  1);  }  [BUGGY]      }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	262	262	2	replace	if(stackSize    >    0)    {    int[]    result    =    new    int[stackSize    -    1];    System.arraycopy(pathNames,    0,    pathNames,    0,    stackSize    -    1);    }    if(stackSize  >  0)  {  int[]  result  =  new  int[stackSize  -  1];  System.arraycopy(pathNames,  0,  pathNames,  1,  stackSize  -  1);  }	  	compilable	  [FE]  ArrayIndexOutOfBoundsException  	77	2	add
374	[BUG]  [BUGGY]  if(stackSize  >  0)  {  int[]  result  =  new  int[stackSize  -  1];  System.arraycopy(pathNames,  0,  pathNames,  0,  stackSize  -  1);  }  if(stackSize  >  0)  {  int[]  result  =  new  int[stackSize  -  1];  System.arraycopy(pathNames,  0,  pathNames,  0,  stackSize  -  1  [CE]  [FE]            ArrayIndexOutOfBoundsException    [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {  popStack();      [BUGGY]  if(stackSize  >  0)  {  int[]  result  =  new  int[stackSize  -  1];  System.arraycopy(pathNames,  0,  pathNames,  0,  stackSize  -  1);  }  if(stackSize  >  0)  {  int[]  result  =  new  int[stackSize  -  1];  System.arraycopy(pathNames,  0,  pathNames,  0,  stackSize  -  1  [BUGGY]      }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	262	262	2	replace	if(stackSize    >    0)    {    int[]    result    =    new    int[stackSize    -    1];    System.arraycopy(pathNames,    0,    pathNames,    0,    stackSize    -    1);    }    if(stackSize  >  0)  {  int[]  result  =  new  int[stackSize  -  1];  System.arraycopy(pathNames,  0,  pathNames,  0,  stackSize  -  1	  	non-compiled	[CE]  	77	None	add
375	[BUG]  [BUGGY]  [FE]  ArrayIndexOutOfBoundsException  [FE]              ArrayIndexOutOfBoundsException    [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {  popStack();      [BUGGY]  if(stackSize  >  0)  {  int[]  result  =  new  int[stackSize  -  1];  System.arraycopy(pathNames,  0,  pathNames,  0,  stackSize  -  1);  }  if(stackSize  >  0)  {  int[]  pathNames  =  new  int[stackSize  -  1];  System.arraycopy(pathNames,  0,  pathNames,  0,  stackSize  -  1);  }  [BUGGY]      }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	262	262	2	add	if(stackSize    >    0)    {    int[]    result    =    new    int[stackSize    -    1];    System.arraycopy(pathNames,    0,    pathNames,    0,    stackSize    -    1);    }    if(stackSize  >  0)  {  int[]  pathNames  =  new  int[stackSize  -  1];  System.arraycopy(pathNames,  0,  pathNames,  0,  stackSize  -  1);  }	  	compilable	  [FE]  ArrayIndexOutOfBoundsException  	77	2	add
376	[BUG]  [BUGGY]  if(stackSize  >  0)  {  int[]  result  =  new  int[stackSize  -  1];  System.arraycopy(pathNames,  0,  pathNames,  0,  stackSize  -  1);  }  if(stackSize  >  0)  {  int[]  pathNames  =  new  int[stackSize  -  1];  System.arraycopy(pathNames,  0,  pathNames,  0,  stackSize  -  1);  }  [FE]  ArrayIndexOutOfBoundsException  [FE]              ArrayIndexOutOfBoundsException    [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {  popStack();      [BUGGY]  if(stackSize  >  0)  {  int[]  result  =  new  int[stackSize  -  1];  System.arraycopy(pathNames,  0,  pathNames,  0,  stackSize  -  1);  }  if(stackSize  >  0)  {  int[]  pathNames  =  new  int[stackSize  -  1];  System.arraycopy(pathNames,  0,  pathNames,  0,  stackSize  -  1);  }  [BUGGY]      }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	262	262	2	replace	if(stackSize    >    0)    {    int[]    result    =    new    int[stackSize    -    1];    System.arraycopy(pathNames,    0,    pathNames,    0,    stackSize    -    1);    }    if(stackSize  >  0)  {  int[]  pathNames  =  new  int[stackSize  -  1];  System.arraycopy(pathNames,  0,  pathNames,  0,  stackSize  -  1);  }	  	compilable	  [FE]  ArrayIndexOutOfBoundsException  	77	2	add
377	[BUG]  [BUGGY]  pathNames[stackSize  -  1]  =   "null ",  JsonToken.END_OBJECT;  [CE]  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {  popStack();      [BUGGY]  pathNames[stackSize  -  1]  =   "null ",  JsonToken.END_OBJECT;  [BUGGY]      }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	262	262	2	replace	pathNames[stackSize  -  1]  =   "null ",  JsonToken.END_OBJECT;	  pathNames[stackSize    -    1]    =       "null   "    +    JsonToken.END_OBJECT;    	non-compiled	[CE]  	59	None	replace
378	[BUG]  [BUGGY]  [FE]  ArrayIndexOutOfBoundsException  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {  popStack();      [BUGGY]  pathNames[stackSize  -  1]  =   "null. ";  [BUGGY]      }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	262	262	2	add	pathNames[stackSize  -  1]  =   "null. ";	  pathNames[stackSize    -    2]    =           "null       ";    pathNames[stackSize    -    2]    =       "null.   ";    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	11	2	replace
379	[BUG]  [BUGGY]  pathNames[stackSize  -  1]  =   "null. ";  [FE]  ArrayIndexOutOfBoundsException  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {  popStack();      [BUGGY]  pathNames[stackSize  -  1]  =   "null. ";  [BUGGY]      }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	262	262	2	replace	pathNames[stackSize  -  1]  =   "null. ";	  pathNames[stackSize    -    2]    =           "null       ";    pathNames[stackSize    -    2]    =       "null.   ";    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	11	2	replace
380	[BUG]  [BUGGY]  pathNames[stackSize  -  1]  =   "null ".equals(pathNames[stackSize  -  1]);  [CE]  incompatible  types  [FE]      ArrayIndexOutOfBoundsException    [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {  popStack();      [BUGGY]  pathNames[stackSize  -  1]  =   "null ".equals(pathNames[stackSize  -  1]);  [BUGGY]      }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	262	262	2	replace	pathNames[stackSize  -  1]  =   "null ".equals(pathNames[stackSize  -  1]);	  pathNames[stackSize    -    2]    =           "null       ";    pathNames[stackSize    -    2]    =       "null.   ";    	non-compiled	[CE]  incompatible  types	11	None	replace
381	[BUG]  [BUGGY]  [FE]  ArrayIndexOutOfBoundsException  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {  popStack();      [BUGGY]  pathNames[stackSize  -  2]  =  null;  pathNames[stackSize  -  2]  =  null;  [BUGGY]      }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	262	262	2	add	pathNames[stackSize    -    2]    =    null;    pathNames[stackSize  -  2]  =  null;	  	compilable	  [FE]  ArrayIndexOutOfBoundsException  	36	2	add
382	[BUG]  [BUGGY]  pathNames[stackSize  -  2]  =  null;  pathNames[stackSize  -  2]  =  null;  [FE]  ArrayIndexOutOfBoundsException  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {  popStack();      [BUGGY]  pathNames[stackSize  -  2]  =  null;  pathNames[stackSize  -  2]  =  null;  [BUGGY]      }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	262	262	2	replace	pathNames[stackSize    -    2]    =    null;    pathNames[stackSize  -  2]  =  null;	  	compilable	  [FE]  ArrayIndexOutOfBoundsException  	36	2	add
383	[BUG]  [BUGGY]  pathNames[stackSize  -  2]  =  null;  PathIndexOutOfBoundsException.printStackTrace();  pathNames[stackSize  -  2]  =  null;  [CE]  cannot  find  symbol  PathIndexOutOfBoundsException  [FE]      ArrayIndexOutOfBoundsException    [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {  popStack();      [BUGGY]  pathNames[stackSize  -  2]  =  null;  PathIndexOutOfBoundsException.printStackTrace();  pathNames[stackSize  -  2]  =  null;  [BUGGY]      }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	262	262	2	replace	pathNames[stackSize    -    2]    =    null;    PathIndexOutOfBoundsException.printStackTrace();  pathNames[stackSize  -  2]  =  null;	  	non-compiled	[CE]  cannot  find  symbol  PathIndexOutOfBoundsException	36	None	add
384	[BUG]  [BUGGY]  pathNames[stackSize  -  2]  =  null;  PathIndexOutOfBoundsException  e  =  new  PathIndexOutOfBoundsException();  pathNames[stackSize  -  2]  =  null;  [CE]  cannot  find  symbol  [FE]        ArrayIndexOutOfBoundsException    [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {  popStack();      [BUGGY]  pathNames[stackSize  -  2]  =  null;  PathIndexOutOfBoundsException  e  =  new  PathIndexOutOfBoundsException();  pathNames[stackSize  -  2]  =  null;  [BUGGY]      }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	262	262	2	replace	pathNames[stackSize    -    2]    =    null;    PathIndexOutOfBoundsException  e  =  new  PathIndexOutOfBoundsException();  pathNames[stackSize  -  2]  =  null;	  	non-compiled	[CE]  cannot  find  symbol	36	None	add
385	[BUG]  [BUGGY]  pathNames[stackSize  -  2]  =  null;  PathIndexOutOfBoundsException  e  =  new  PathIndexOutOfBoundsException( " ");  pathNames[stackSize  -  2]  =  null;  [CE]  cannot  find  symbol  [FE]          ArrayIndexOutOfBoundsException    [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {  popStack();      [BUGGY]  pathNames[stackSize  -  2]  =  null;  PathIndexOutOfBoundsException  e  =  new  PathIndexOutOfBoundsException( " ");  pathNames[stackSize  -  2]  =  null;  [BUGGY]      }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	262	262	2	replace	pathNames[stackSize    -    2]    =    null;    PathIndexOutOfBoundsException  e  =  new  PathIndexOutOfBoundsException( " ");  pathNames[stackSize  -  2]  =  null;	  	non-compiled	[CE]  cannot  find  symbol	36	None	add
386	[BUG]  [BUGGY]  pathNames[stackSize  -  2]  =  null;  PathIndexOutOfBoundsException.printStackTrace(pathNames);  pathNames[stackSize  -  2]  =  null;  [CE]  cannot  find  symbol  PathIndexOutOfBoundsException  [FE]            ArrayIndexOutOfBoundsException    [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {  popStack();      [BUGGY]  pathNames[stackSize  -  2]  =  null;  PathIndexOutOfBoundsException.printStackTrace(pathNames);  pathNames[stackSize  -  2]  =  null;  [BUGGY]      }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	262	262	2	replace	pathNames[stackSize    -    2]    =    null;    PathIndexOutOfBoundsException.printStackTrace(pathNames);  pathNames[stackSize  -  2]  =  null;	  	non-compiled	[CE]  cannot  find  symbol  PathIndexOutOfBoundsException	36	None	add
387	[BUG]  [BUGGY]  pathNames[stackSize  -  2]  =  null;  PathIndexOutOfBoundsException.printStackTrace(pathNames[stackSize  -  2]);  [CE]  cannot  find  symbol  PathIndexOutOfBoundsException  [FE]              ArrayIndexOutOfBoundsException    [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {  popStack();      [BUGGY]  pathNames[stackSize  -  2]  =  null;  PathIndexOutOfBoundsException.printStackTrace(pathNames[stackSize  -  2]);  [BUGGY]      }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	262	262	2	replace	pathNames[stackSize    -    2]    =    null;    PathIndexOutOfBoundsException.printStackTrace(pathNames[stackSize  -  2]);	  	non-compiled	[CE]  cannot  find  symbol  PathIndexOutOfBoundsException	36	None	add
388	[BUG]  [BUGGY]  pathNames[stackSize  -  2]  =  null;  PathIndexOutOfBoundsException  e  =  new  PathIndexOutOfBoundsException();  pathNames[stackSize  -  1]  =  null;  [CE]  cannot  find  symbol  [FE]                ArrayIndexOutOfBoundsException    [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {  popStack();      [BUGGY]  pathNames[stackSize  -  2]  =  null;  PathIndexOutOfBoundsException  e  =  new  PathIndexOutOfBoundsException();  pathNames[stackSize  -  1]  =  null;  [BUGGY]      }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	262	262	2	replace	pathNames[stackSize    -    2]    =    null;    PathIndexOutOfBoundsException  e  =  new  PathIndexOutOfBoundsException();  pathNames[stackSize  -  1]  =  null;	  	non-compiled	[CE]  cannot  find  symbol	36	None	add
389	[BUG]  [BUGGY]  [FE]  ArrayIndexOutOfBoundsException  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {  popStack();      [BUGGY]  if(stackSize  >  0)  {  throw  new  IllegalArgumentException(   "   ");  }  if(stackSize  >  0)  {  throw  new  IllegalArgumentException( "   ");  }  [BUGGY]      }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	262	262	2	add	if(stackSize    >    0)    {    throw    new    IllegalArgumentException(   "   ");    }    if(stackSize  >  0)  {  throw  new  IllegalArgumentException( "   ");  }	  	compilable	  [FE]  ArrayIndexOutOfBoundsException  	15	2	add
390	[BUG]  [BUGGY]  if(stackSize  >  0)  {  throw  new  IllegalArgumentException(   "   ");  }  if(stackSize  >  0)  {  throw  new  IllegalArgumentException( "   ");  }  [FE]  ArrayIndexOutOfBoundsException  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {  popStack();      [BUGGY]  if(stackSize  >  0)  {  throw  new  IllegalArgumentException(   "   ");  }  if(stackSize  >  0)  {  throw  new  IllegalArgumentException( "   ");  }  [BUGGY]      }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	262	262	2	replace	if(stackSize    >    0)    {    throw    new    IllegalArgumentException(   "   ");    }    if(stackSize  >  0)  {  throw  new  IllegalArgumentException( "   ");  }	  	compilable	  [FE]  ArrayIndexOutOfBoundsException  	15	2	add
391	[BUG]  [BUGGY]  [FE]  ArrayIndexOutOfBoundsException  [FE]      ArrayIndexOutOfBoundsException    [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {  popStack();      [BUGGY]  if(stackSize  >  0)  {  throw  new  IllegalArgumentException(   "   ");  }  if(stackSize  >  0)  {  throw  new  IllegalArgumentException( ".   ");  }  [BUGGY]      }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	262	262	2	add	if(stackSize    >    0)    {    throw    new    IllegalArgumentException(   "   ");    }    if(stackSize  >  0)  {  throw  new  IllegalArgumentException( ".   ");  }	  	compilable	  [FE]  ArrayIndexOutOfBoundsException  	15	2	add
392	[BUG]  [BUGGY]  if(stackSize  >  0)  {  throw  new  IllegalArgumentException(   "   ");  }  if(stackSize  >  0)  {  throw  new  IllegalArgumentException( ".   ");  }  [FE]  ArrayIndexOutOfBoundsException  [FE]      ArrayIndexOutOfBoundsException    [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {  popStack();      [BUGGY]  if(stackSize  >  0)  {  throw  new  IllegalArgumentException(   "   ");  }  if(stackSize  >  0)  {  throw  new  IllegalArgumentException( ".   ");  }  [BUGGY]      }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	262	262	2	replace	if(stackSize    >    0)    {    throw    new    IllegalArgumentException(   "   ");    }    if(stackSize  >  0)  {  throw  new  IllegalArgumentException( ".   ");  }	  	compilable	  [FE]  ArrayIndexOutOfBoundsException  	15	2	add
393	[BUG]  [BUGGY]  [FE]  ArrayIndexOutOfBoundsException  [FE]        ArrayIndexOutOfBoundsException    [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {  popStack();      [BUGGY]  if(stackSize  >  0)  {  throw  new  IllegalArgumentException(   "   ");  }  if(stackSize  >  0)  {  throw  new  IllegalArgumentException( ",   ");  }  [BUGGY]      }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	262	262	2	add	if(stackSize    >    0)    {    throw    new    IllegalArgumentException(   "   ");    }    if(stackSize  >  0)  {  throw  new  IllegalArgumentException( ",   ");  }	  	compilable	  [FE]  ArrayIndexOutOfBoundsException  	15	2	add
394	[BUG]  [BUGGY]  if(stackSize  >  0)  {  throw  new  IllegalArgumentException(   "   ");  }  if(stackSize  >  0)  {  throw  new  IllegalArgumentException( ",   ");  }  [FE]  ArrayIndexOutOfBoundsException  [FE]        ArrayIndexOutOfBoundsException    [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {  popStack();      [BUGGY]  if(stackSize  >  0)  {  throw  new  IllegalArgumentException(   "   ");  }  if(stackSize  >  0)  {  throw  new  IllegalArgumentException( ",   ");  }  [BUGGY]      }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	262	262	2	replace	if(stackSize    >    0)    {    throw    new    IllegalArgumentException(   "   ");    }    if(stackSize  >  0)  {  throw  new  IllegalArgumentException( ",   ");  }	  	compilable	  [FE]  ArrayIndexOutOfBoundsException  	15	2	add
395	[BUG]  [BUGGY]  if(stackSize  >  0)  {  throw  new  IllegalArgumentException(   "   ");  }  if(stackSize  >  0)  {  throw  new  IllegalArgumentException(. "   ");  }  [CE]  illegal  start  of  expression  [FE]          ArrayIndexOutOfBoundsException    [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {  popStack();      [BUGGY]  if(stackSize  >  0)  {  throw  new  IllegalArgumentException(   "   ");  }  if(stackSize  >  0)  {  throw  new  IllegalArgumentException(. "   ");  }  [BUGGY]      }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	262	262	2	replace	if(stackSize    >    0)    {    throw    new    IllegalArgumentException(   "   ");    }    if(stackSize  >  0)  {  throw  new  IllegalArgumentException(. "   ");  }	  	non-compiled	[CE]  illegal  start  of  expression	15	None	add
396	[BUG]  [BUGGY]  PathIndexOutOfBoundsException  e  =  new  PathIndexOutOfBoundsException(String.valueOf(stack));  pathNames[stackSize  -  1]  =  null;  [CE]  cannot  find  symbol  [FE]          ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {  popStack();      [BUGGY]  PathIndexOutOfBoundsException  e  =  new  PathIndexOutOfBoundsException(String.valueOf(stack));  pathNames[stackSize  -  1]  =  null;  [BUGGY]      }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	262	262	2	replace	PathIndexOutOfBoundsException  e  =  new  PathIndexOutOfBoundsException(String.valueOf(stack));  pathNames[stackSize  -  1]  =  null;	  pathNames[stackSize    -    1]    =    null;    PathIndexOutOfBoundsException    e    =    new    PathIndexOutOfBoundsException(String.valueOf(stack));    pathNames[stackSize    -    1]    =    null;    	non-compiled	[CE]  cannot  find  symbol	56	None	replace
397	[BUG]  [BUGGY]  pathNames[result.length  -  1]  =  null;  PathIndexOutOfBoundsException  e  =  new  PathIndexOutOfBoundsException(String.valueOf(stack));  pathNames[stackSize  -  1]  =  null;  [CE]  cannot  find  symbol  result  [FE]            ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {  popStack();      [BUGGY]  pathNames[result.length  -  1]  =  null;  PathIndexOutOfBoundsException  e  =  new  PathIndexOutOfBoundsException(String.valueOf(stack));  pathNames[stackSize  -  1]  =  null;  [BUGGY]      }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	262	262	2	replace	pathNames[result.length  -  1]  =  null;  PathIndexOutOfBoundsException  e  =  new  PathIndexOutOfBoundsException(String.valueOf(stack));  pathNames[stackSize  -  1]  =  null;	  pathNames[stackSize    -    1]    =    null;    PathIndexOutOfBoundsException    e    =    new    PathIndexOutOfBoundsException(String.valueOf(stack));    pathNames[stackSize    -    1]    =    null;    	non-compiled	[CE]  cannot  find  symbol  result	56	None	replace
398	[BUG]  [BUGGY]  pathNames[0]  =  null;  PathIndexOutOfBoundsException  e  =  new  PathIndexOutOfBoundsException(String.valueOf(stack));  pathNames[stackSize  -  1]  =  null;  [CE]  cannot  find  symbol  [FE]              ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {  popStack();      [BUGGY]  pathNames[0]  =  null;  PathIndexOutOfBoundsException  e  =  new  PathIndexOutOfBoundsException(String.valueOf(stack));  pathNames[stackSize  -  1]  =  null;  [BUGGY]      }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	262	262	2	replace	pathNames[0]  =  null;  PathIndexOutOfBoundsException  e  =  new  PathIndexOutOfBoundsException(String.valueOf(stack));  pathNames[stackSize  -  1]  =  null;	  pathNames[stackSize    -    1]    =    null;    PathIndexOutOfBoundsException    e    =    new    PathIndexOutOfBoundsException(String.valueOf(stack));    pathNames[stackSize    -    1]    =    null;    	non-compiled	[CE]  cannot  find  symbol	56	None	replace
399	[BUG]  [BUGGY]  pathNames[stackSize  -  1]  =  new  PathIndexOutOfBoundsException(String.valueOf(stack));  pathNames[stackSize  -  1]  =  null;  [CE]  cannot  find  symbol  [FE]                ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {  popStack();      [BUGGY]  pathNames[stackSize  -  1]  =  new  PathIndexOutOfBoundsException(String.valueOf(stack));  pathNames[stackSize  -  1]  =  null;  [BUGGY]      }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	262	262	2	replace	pathNames[stackSize  -  1]  =  new  PathIndexOutOfBoundsException(String.valueOf(stack));  pathNames[stackSize  -  1]  =  null;	  pathNames[stackSize    -    1]    =    null;    PathIndexOutOfBoundsException    e    =    new    PathIndexOutOfBoundsException(String.valueOf(stack));    pathNames[stackSize    -    1]    =    null;    	non-compiled	[CE]  cannot  find  symbol	56	None	replace
400	[BUG]  [BUGGY]  Indices[stackSize  -  1]  =  null;  System.arraycopy(pathNames,  0,  pathNames,  0,  stackSize  -  1);  [CE]  cannot  find  symbol  Indices  [FE]            ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {  popStack();      [BUGGY]  Indices[stackSize  -  1]  =  null;  System.arraycopy(pathNames,  0,  pathNames,  0,  stackSize  -  1);  [BUGGY]      }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	262	262	2	replace	Indices[stackSize  -  1]  =  null;  System.arraycopy(pathNames,  0,  pathNames,  0,  stackSize  -  1);	  if(stackSize    >    0)    {    pathIndices[stackSize    -    1]    =    null;    System.arraycopy(pathNames,    0,    pathNames,    0,    stackSize    -    1);    }    	non-compiled	[CE]  cannot  find  symbol  Indices	47	None	replace
401	[BUG]  [BUGGY]  if(stackSize  >  0)  {  pathIndices[stackSize  -  1]  =  new  StringBuffer();  System.arraycopy(pathNames,  0,  pathNames,  0,  stackSize  -  1);  }  [CE]  incompatible  types  [FE]              ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {  popStack();      [BUGGY]  if(stackSize  >  0)  {  pathIndices[stackSize  -  1]  =  new  StringBuffer();  System.arraycopy(pathNames,  0,  pathNames,  0,  stackSize  -  1);  }  [BUGGY]      }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	262	262	2	replace	if(stackSize  >  0)  {  pathIndices[stackSize  -  1]  =  new  StringBuffer();  System.arraycopy(pathNames,  0,  pathNames,  0,  stackSize  -  1);  }	  if(stackSize    >    0)    {    pathIndices[stackSize    -    1]    =    null;    System.arraycopy(pathNames,    0,    pathNames,    0,    stackSize    -    1);    }    	non-compiled	[CE]  incompatible  types	47	None	replace
402	[BUG]  [BUGGY]  [FE]  NegativeArraySizeException  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {  popStack();      [BUGGY]  Object[]  result  =  new  Object[stackSize  -  1];  System.arraycopy(pathNames,  0,  pathNames,  0,  stackSize  -  1);  [BUGGY]      }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	262	262	2	add	Object[]  result  =  new  Object[stackSize  -  1];  System.arraycopy(pathNames,  0,  pathNames,  0,  stackSize  -  1);	  if(stackSize    >    0)    {    int[]    result    =    new    int[stackSize    -    1];    System.arraycopy(pathNames,    0,    pathNames,    0,    stackSize    -    1);    }    	compilable	  [FE]  NegativeArraySizeException  	78	2	replace
403	[BUG]  [BUGGY]  Object[]  result  =  new  Object[stackSize  -  1];  System.arraycopy(pathNames,  0,  pathNames,  0,  stackSize  -  1);  [FE]  NegativeArraySizeException  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {  popStack();      [BUGGY]  Object[]  result  =  new  Object[stackSize  -  1];  System.arraycopy(pathNames,  0,  pathNames,  0,  stackSize  -  1);  [BUGGY]      }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	262	262	2	replace	Object[]  result  =  new  Object[stackSize  -  1];  System.arraycopy(pathNames,  0,  pathNames,  0,  stackSize  -  1);	  if(stackSize    >    0)    {    int[]    result    =    new    int[stackSize    -    1];    System.arraycopy(pathNames,    0,    pathNames,    0,    stackSize    -    1);    }    	compilable	  [FE]  NegativeArraySizeException  	78	2	replace
404	[BUG]  [BUGGY]  ArrayList  <  String>  result  =  new  ArrayList  <  String>();  System.arraycopy(pathNames,  0,  pathNames,  0,  stackSize  -  1);  [CE]  cannot  find  symbol  [FE]      ArrayIndexOutOfBoundsException    [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {  popStack();      [BUGGY]  ArrayList  <  String>  result  =  new  ArrayList  <  String>();  System.arraycopy(pathNames,  0,  pathNames,  0,  stackSize  -  1);  [BUGGY]      }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	262	262	2	replace	ArrayList  <  String>  result  =  new  ArrayList  <  String>();  System.arraycopy(pathNames,  0,  pathNames,  0,  stackSize  -  1);	  if(stackSize    >    0)    {    int[]    result    =    new    int[stackSize    -    1];    System.arraycopy(pathNames,    0,    pathNames,    0,    stackSize    -    1);    }    	non-compiled	[CE]  cannot  find  symbol	78	None	replace
405	[BUG]  [BUGGY]  if(stackSize  >  0)  {  int[]  result  =  new  int[length  -  1];  System.arraycopy(pathNames,  0,  pathNames,  0,  stackSize  -  1);  }  [CE]  cannot  find  symbol  length  [FE]        ArrayIndexOutOfBoundsException    [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {  popStack();      [BUGGY]  if(stackSize  >  0)  {  int[]  result  =  new  int[length  -  1];  System.arraycopy(pathNames,  0,  pathNames,  0,  stackSize  -  1);  }  [BUGGY]      }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	262	262	2	replace	if(stackSize  >  0)  {  int[]  result  =  new  int[length  -  1];  System.arraycopy(pathNames,  0,  pathNames,  0,  stackSize  -  1);  }	  if(stackSize    >    0)    {    int[]    result    =    new    int[stackSize    -    1];    System.arraycopy(pathNames,    0,    pathNames,    0,    stackSize    -    1);    }    	non-compiled	[CE]  cannot  find  symbol  length	78	None	replace
406	[BUG]  [BUGGY]          if(stackSize  >  0)  {  pathIndices  =  new  int[stackSize  -  1];  System.arraycopy(pathNames,  0,  pathNames,  1,  stackSize  -  1);  }  if(stackSize  >  0)  {  pathIndices  =  new  int[stackSize  -  1];  System.arraycopy(pathNames,  0,  pathNames,  1,  stackSize  -  1]);  }  [CE]  ')'  expected  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {  popStack();      [BUGGY]          if(stackSize  >  0)  {  pathIndices  =  new  int[stackSize  -  1];  System.arraycopy(pathNames,  0,  pathNames,  1,  stackSize  -  1);  }  if(stackSize  >  0)  {  pathIndices  =  new  int[stackSize  -  1];  System.arraycopy(pathNames,  0,  pathNames,  1,  stackSize  -  1]);  }  [BUGGY]      }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	262	262	2	replace	                if(stackSize    >    0)    {    pathIndices    =    new    int[stackSize    -    1];    System.arraycopy(pathNames,    0,    pathNames,    1,    stackSize    -    1);    }    if(stackSize  >  0)  {  pathIndices  =  new  int[stackSize  -  1];  System.arraycopy(pathNames,  0,  pathNames,  1,  stackSize  -  1]);  }	  	non-compiled	[CE]  ')'  expected	63	None	add
407	[BUG]  [BUGGY]          if(stackSize  >  0)  {  pathIndices  =  new  int[stackSize  -  1];  System.arraycopy(pathNames,  0,  pathNames,  1,  stackSize  -  1);  }  if(stackSize  >  0)  {  pathIndices  =  new  int[pathNames,  0,  pathNames,  1,  stackSize  -  1];  System.arraycopy(pathNames,  0,  pathNames,  1,  stackSize  -  1);  }  [CE]  ']'  expected  [FE]      ArrayIndexOutOfBoundsException    [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {  popStack();      [BUGGY]          if(stackSize  >  0)  {  pathIndices  =  new  int[stackSize  -  1];  System.arraycopy(pathNames,  0,  pathNames,  1,  stackSize  -  1);  }  if(stackSize  >  0)  {  pathIndices  =  new  int[pathNames,  0,  pathNames,  1,  stackSize  -  1];  System.arraycopy(pathNames,  0,  pathNames,  1,  stackSize  -  1);  }  [BUGGY]      }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	262	262	2	replace	                if(stackSize    >    0)    {    pathIndices    =    new    int[stackSize    -    1];    System.arraycopy(pathNames,    0,    pathNames,    1,    stackSize    -    1);    }    if(stackSize  >  0)  {  pathIndices  =  new  int[pathNames,  0,  pathNames,  1,  stackSize  -  1];  System.arraycopy(pathNames,  0,  pathNames,  1,  stackSize  -  1);  }	  	non-compiled	[CE]  ']'  expected	63	None	add
408	[BUG]  [BUGGY]          if(stackSize  >  0)  {  pathIndices  =  new  int[stackSize  -  1];  System.arraycopy(pathNames,  0,  pathNames,  1,  stackSize  -  1);  }  if(stackSize  >  0)  {  pathIndices  =  new  int[pathNames,  0,  stackSize  -  1];  System.arraycopy(pathNames,  0,  pathNames,  1,  stackSize  -  1);  }  [CE]  ']'  expected  [FE]        ArrayIndexOutOfBoundsException    [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {  popStack();      [BUGGY]          if(stackSize  >  0)  {  pathIndices  =  new  int[stackSize  -  1];  System.arraycopy(pathNames,  0,  pathNames,  1,  stackSize  -  1);  }  if(stackSize  >  0)  {  pathIndices  =  new  int[pathNames,  0,  stackSize  -  1];  System.arraycopy(pathNames,  0,  pathNames,  1,  stackSize  -  1);  }  [BUGGY]      }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	262	262	2	replace	                if(stackSize    >    0)    {    pathIndices    =    new    int[stackSize    -    1];    System.arraycopy(pathNames,    0,    pathNames,    1,    stackSize    -    1);    }    if(stackSize  >  0)  {  pathIndices  =  new  int[pathNames,  0,  stackSize  -  1];  System.arraycopy(pathNames,  0,  pathNames,  1,  stackSize  -  1);  }	  	non-compiled	[CE]  ']'  expected	63	None	add
409	[BUG]  [BUGGY]          if(stackSize  >  0)  {  pathIndices  =  new  int[stackSize  -  1];  System.arraycopy(pathNames,  0,  pathNames,  1,  stackSize  -  1);  }  if(stackSize  >  0)  {  pathIndices  =  new  int[stackSize  -  1];  System.arraycopy(pathNames,  0,  pathNames,  1,  stackSize  -  1]  [CE]  ')'  expected  [FE]          ArrayIndexOutOfBoundsException    [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {  popStack();      [BUGGY]          if(stackSize  >  0)  {  pathIndices  =  new  int[stackSize  -  1];  System.arraycopy(pathNames,  0,  pathNames,  1,  stackSize  -  1);  }  if(stackSize  >  0)  {  pathIndices  =  new  int[stackSize  -  1];  System.arraycopy(pathNames,  0,  pathNames,  1,  stackSize  -  1]  [BUGGY]      }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	262	262	2	replace	                if(stackSize    >    0)    {    pathIndices    =    new    int[stackSize    -    1];    System.arraycopy(pathNames,    0,    pathNames,    1,    stackSize    -    1);    }    if(stackSize  >  0)  {  pathIndices  =  new  int[stackSize  -  1];  System.arraycopy(pathNames,  0,  pathNames,  1,  stackSize  -  1]	  	non-compiled	[CE]  ')'  expected	63	None	add
410	[BUG]  [BUGGY]  [FE]  ArrayIndexOutOfBoundsException  [FE]            ArrayIndexOutOfBoundsException    [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {  popStack();      [BUGGY]          if(stackSize  >  0)  {  pathIndices  =  new  int[stackSize  -  1];  System.arraycopy(pathNames,  0,  pathNames,  1,  stackSize  -  1);  }  if(stackSize  >  0)  {  pathIndices  =  new  int[pathNames.length  -  1];  System.arraycopy(pathNames,  0,  pathNames,  1,  stackSize  -  1);  }  [BUGGY]      }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	262	262	2	add	                if(stackSize    >    0)    {    pathIndices    =    new    int[stackSize    -    1];    System.arraycopy(pathNames,    0,    pathNames,    1,    stackSize    -    1);    }    if(stackSize  >  0)  {  pathIndices  =  new  int[pathNames.length  -  1];  System.arraycopy(pathNames,  0,  pathNames,  1,  stackSize  -  1);  }	  	compilable	  [FE]  ArrayIndexOutOfBoundsException  	63	2	add
411	[BUG]  [BUGGY]          if(stackSize  >  0)  {  pathIndices  =  new  int[stackSize  -  1];  System.arraycopy(pathNames,  0,  pathNames,  1,  stackSize  -  1);  }  if(stackSize  >  0)  {  pathIndices  =  new  int[pathNames.length  -  1];  System.arraycopy(pathNames,  0,  pathNames,  1,  stackSize  -  1);  }  [FE]  ArrayIndexOutOfBoundsException  [FE]            ArrayIndexOutOfBoundsException    [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {  popStack();      [BUGGY]          if(stackSize  >  0)  {  pathIndices  =  new  int[stackSize  -  1];  System.arraycopy(pathNames,  0,  pathNames,  1,  stackSize  -  1);  }  if(stackSize  >  0)  {  pathIndices  =  new  int[pathNames.length  -  1];  System.arraycopy(pathNames,  0,  pathNames,  1,  stackSize  -  1);  }  [BUGGY]      }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	262	262	2	replace	                if(stackSize    >    0)    {    pathIndices    =    new    int[stackSize    -    1];    System.arraycopy(pathNames,    0,    pathNames,    1,    stackSize    -    1);    }    if(stackSize  >  0)  {  pathIndices  =  new  int[pathNames.length  -  1];  System.arraycopy(pathNames,  0,  pathNames,  1,  stackSize  -  1);  }	  	compilable	  [FE]  ArrayIndexOutOfBoundsException  	63	2	add
412	[BUG]  [BUGGY]  if(stackSize  >  0)  {  pathIndices  =  new  int[stackSize  -  1];  System.arraycopy(pathNames,  0,  pathNames,  0,  stackSize  -  1);  }  else  {  throw  new  IOException(   "   ");  }  if(stackSize  >  0)  {  pathIndices  =  new  int[stackSize  -  1];  System.arraycopy(pathNames,  0,  pathNames,  0,  stackSize  -  1]);  }  else  {  throw  new  IOException( "   ");  }  [CE]  [FE]    IOException    [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {  popStack();      [BUGGY]  if(stackSize  >  0)  {  pathIndices  =  new  int[stackSize  -  1];  System.arraycopy(pathNames,  0,  pathNames,  0,  stackSize  -  1);  }  else  {  throw  new  IOException(   "   ");  }  if(stackSize  >  0)  {  pathIndices  =  new  int[stackSize  -  1];  System.arraycopy(pathNames,  0,  pathNames,  0,  stackSize  -  1]);  }  else  {  throw  new  IOException( "   ");  }  [BUGGY]      }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	262	262	2	replace	if(stackSize    >    0)    {    pathIndices    =    new    int[stackSize    -    1];    System.arraycopy(pathNames,    0,    pathNames,    0,    stackSize    -    1);    }    else    {    throw    new    IOException(   "   ");    }    if(stackSize  >  0)  {  pathIndices  =  new  int[stackSize  -  1];  System.arraycopy(pathNames,  0,  pathNames,  0,  stackSize  -  1]);  }  else  {  throw  new  IOException( "   ");  }	  	non-compiled	[CE]  	50	None	add
413	[BUG]  [BUGGY]  if(stackSize  >  0)  {  pathIndices  =  new  int[stackSize  -  1];  System.arraycopy(pathNames,  0,  pathNames,  0,  stackSize  -  1);  }  else  {  throw  new  IOException(   "   ");  }  if(stackSize  >  0)  {  pathIndices  =  new  int[stackSize  -  1];  System.arraycopy(pathNames,  0,  pathNames,  0,  stackSize  -  1);  }  else  {  throw  new  IOException( " "));  }  [CE]  [FE]      IOException    [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {  popStack();      [BUGGY]  if(stackSize  >  0)  {  pathIndices  =  new  int[stackSize  -  1];  System.arraycopy(pathNames,  0,  pathNames,  0,  stackSize  -  1);  }  else  {  throw  new  IOException(   "   ");  }  if(stackSize  >  0)  {  pathIndices  =  new  int[stackSize  -  1];  System.arraycopy(pathNames,  0,  pathNames,  0,  stackSize  -  1);  }  else  {  throw  new  IOException( " "));  }  [BUGGY]      }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	262	262	2	replace	if(stackSize    >    0)    {    pathIndices    =    new    int[stackSize    -    1];    System.arraycopy(pathNames,    0,    pathNames,    0,    stackSize    -    1);    }    else    {    throw    new    IOException(   "   ");    }    if(stackSize  >  0)  {  pathIndices  =  new  int[stackSize  -  1];  System.arraycopy(pathNames,  0,  pathNames,  0,  stackSize  -  1);  }  else  {  throw  new  IOException( " "));  }	  	non-compiled	[CE]  	50	None	add
414	[BUG]  [BUGGY]  Path[]  pathNames  =  pathNames.toArray(new  Path[pathSize  -  1]);  [CE]  cannot  find  symbol  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {  popStack();      [BUGGY]  Path[]  pathNames  =  pathNames.toArray(new  Path[pathSize  -  1]);  [BUGGY]      }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	262	262	2	replace	Path[]  pathNames  =  pathNames.toArray(new  Path[pathSize  -  1]);	  if(stackSize    >    0)    {    pathNames[stackSize    -    1]    =    null;    }    	non-compiled	[CE]  cannot  find  symbol	20	None	replace
415	[BUG]  [BUGGY]  Path[]  result  =  pathNames.toArray(new  Path[result.size()  ]);  [CE]  cannot  find  symbol  [FE]      ArrayIndexOutOfBoundsException    [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {  popStack();      [BUGGY]  Path[]  result  =  pathNames.toArray(new  Path[result.size()  ]);  [BUGGY]      }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	262	262	2	replace	Path[]  result  =  pathNames.toArray(new  Path[result.size()  ]);	  if(stackSize    >    0)    {    pathNames[stackSize    -    1]    =    null;    }    	non-compiled	[CE]  cannot  find  symbol	20	None	replace
416	[BUG]  [BUGGY]  Path[]  result  =  pathNames.toArray(new  Path[pathSize  -  1]);  [CE]  cannot  find  symbol  [FE]        ArrayIndexOutOfBoundsException    [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {  popStack();      [BUGGY]  Path[]  result  =  pathNames.toArray(new  Path[pathSize  -  1]);  [BUGGY]      }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	262	262	2	replace	Path[]  result  =  pathNames.toArray(new  Path[pathSize  -  1]);	  if(stackSize    >    0)    {    pathNames[stackSize    -    1]    =    null;    }    	non-compiled	[CE]  cannot  find  symbol	20	None	replace
417	[BUG]  [BUGGY]  [FE]  ArrayIndexOutOfBoundsException  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {  popStack();      [BUGGY]  pathNames[stackSize  -  1]  =  null;  if(pathNames.length  >  0)  {  pathNames[stackSize  -  1]  =  null;  }  else  {  popStack();  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	262	262	2	add	pathNames[stackSize  -  1]  =  null;  if(pathNames.length  >  0)  {  pathNames[stackSize  -  1]  =  null;  }  else  {  popStack();  throw  new  IllegalArgumentException( " ");  }	  pathNames[stackSize    -    1]    =    null;    if(stackSize    >    0)    {    pathNames[stackSize    -    1]    =    null;    }    else    {    popStack();    throw    new    IllegalArgumentException(   "   ");    }    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	72	2	replace
418	[BUG]  [BUGGY]  pathNames[stackSize  -  1]  =  null;  if(pathNames.length  >  0)  {  pathNames[stackSize  -  1]  =  null;  }  else  {  popStack();  throw  new  IllegalArgumentException( " ");  }  [FE]  ArrayIndexOutOfBoundsException  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {  popStack();      [BUGGY]  pathNames[stackSize  -  1]  =  null;  if(pathNames.length  >  0)  {  pathNames[stackSize  -  1]  =  null;  }  else  {  popStack();  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	262	262	2	replace	pathNames[stackSize  -  1]  =  null;  if(pathNames.length  >  0)  {  pathNames[stackSize  -  1]  =  null;  }  else  {  popStack();  throw  new  IllegalArgumentException( " ");  }	  pathNames[stackSize    -    1]    =    null;    if(stackSize    >    0)    {    pathNames[stackSize    -    1]    =    null;    }    else    {    popStack();    throw    new    IllegalArgumentException(   "   ");    }    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	72	2	replace
419	[BUG]  [BUGGY]  [FE]  ArrayIndexOutOfBoundsException  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {  popStack();      [BUGGY]          if(stackSize  >  0)  {  pathNames[stackSize  -  1]  =  null;  }  else  {  skipValue();  }  if(stackSize  >  1)  {  pathNames[stackSize  -  1]  =  null;  }  else  {  skipValue();  }  [BUGGY]      }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	262	262	2	add	                if(stackSize    >    0)    {    pathNames[stackSize    -    1]    =    null;    }    else    {    skipValue();    }    if(stackSize  >  1)  {  pathNames[stackSize  -  1]  =  null;  }  else  {  skipValue();  }	  	compilable	  [FE]  ArrayIndexOutOfBoundsException  	34	2	add
420	[BUG]  [BUGGY]          if(stackSize  >  0)  {  pathNames[stackSize  -  1]  =  null;  }  else  {  skipValue();  }  if(stackSize  >  1)  {  pathNames[stackSize  -  1]  =  null;  }  else  {  skipValue();  }  [FE]  ArrayIndexOutOfBoundsException  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {  popStack();      [BUGGY]          if(stackSize  >  0)  {  pathNames[stackSize  -  1]  =  null;  }  else  {  skipValue();  }  if(stackSize  >  1)  {  pathNames[stackSize  -  1]  =  null;  }  else  {  skipValue();  }  [BUGGY]      }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	262	262	2	replace	                if(stackSize    >    0)    {    pathNames[stackSize    -    1]    =    null;    }    else    {    skipValue();    }    if(stackSize  >  1)  {  pathNames[stackSize  -  1]  =  null;  }  else  {  skipValue();  }	  	compilable	  [FE]  ArrayIndexOutOfBoundsException  	34	2	add
421	[BUG]  [BUGGY]          if(stackSize  >  0)  {  pathNames[stackSize  -  1]  =  null;  }  else  {  skipValue();  }  if(stackSize  >  0)  {  pathNames[stackSize  -  1]  =  null;  }  else  {  skippeValue();  }  [CE]  cannot  find  symbol  [FE]      ArrayIndexOutOfBoundsException    [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {  popStack();      [BUGGY]          if(stackSize  >  0)  {  pathNames[stackSize  -  1]  =  null;  }  else  {  skipValue();  }  if(stackSize  >  0)  {  pathNames[stackSize  -  1]  =  null;  }  else  {  skippeValue();  }  [BUGGY]      }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	262	262	2	replace	                if(stackSize    >    0)    {    pathNames[stackSize    -    1]    =    null;    }    else    {    skipValue();    }    if(stackSize  >  0)  {  pathNames[stackSize  -  1]  =  null;  }  else  {  skippeValue();  }	  	non-compiled	[CE]  cannot  find  symbol	34	None	add
422	[BUG]  [BUGGY]  [FE]  IllegalArgumentException  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {  popStack();      [BUGGY]  if(stackSize  ==  stackSize)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	262	262	2	add	if(stackSize  ==  stackSize)  {  throw  new  IllegalArgumentException( " ");  }	  if(stackSize    >    stackSize)    {    throw    new    IllegalArgumentException(   "   ");    }    	compilable	  [FE]  IllegalArgumentException  	22	2	replace
423	[BUG]  [BUGGY]  if(stackSize  ==  stackSize)  {  throw  new  IllegalArgumentException( " ");  }  [FE]  IllegalArgumentException  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {  popStack();      [BUGGY]  if(stackSize  ==  stackSize)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	262	262	2	replace	if(stackSize  ==  stackSize)  {  throw  new  IllegalArgumentException( " ");  }	  if(stackSize    >    stackSize)    {    throw    new    IllegalArgumentException(   "   ");    }    	compilable	  [FE]  IllegalArgumentException  	22	2	replace
424	[BUG]  [BUGGY]  [FE]  IllegalArgumentException  [FE]      ArrayIndexOutOfBoundsException    [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {  popStack();      [BUGGY]  if(stackSize  >=  stackSize)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	262	262	2	add	if(stackSize  >=  stackSize)  {  throw  new  IllegalArgumentException( " ");  }	  if(stackSize    >    stackSize)    {    throw    new    IllegalArgumentException(   "   ");    }    	compilable	  [FE]  IllegalArgumentException  	22	2	replace
425	[BUG]  [BUGGY]  if(stackSize  >=  stackSize)  {  throw  new  IllegalArgumentException( " ");  }  [FE]  IllegalArgumentException  [FE]      ArrayIndexOutOfBoundsException    [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {  popStack();      [BUGGY]  if(stackSize  >=  stackSize)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	262	262	2	replace	if(stackSize  >=  stackSize)  {  throw  new  IllegalArgumentException( " ");  }	  if(stackSize    >    stackSize)    {    throw    new    IllegalArgumentException(   "   ");    }    	compilable	  [FE]  IllegalArgumentException  	22	2	replace
426	[BUG]  [BUGGY]  pathNames[stackSize  -  1]  =  null;  if(pathNames[stackSize  -  2]  ==  null)  {  pathNames[stackSize  -  1]  =  null;  }  else  {  popStack();  skipStack();  }  [CE]  cannot  find  symbol  [FE]                ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {  popStack();      [BUGGY]  pathNames[stackSize  -  1]  =  null;  if(pathNames[stackSize  -  2]  ==  null)  {  pathNames[stackSize  -  1]  =  null;  }  else  {  popStack();  skipStack();  }  [BUGGY]      }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	262	262	2	replace	pathNames[stackSize  -  1]  =  null;  if(pathNames[stackSize  -  2]  ==  null)  {  pathNames[stackSize  -  1]  =  null;  }  else  {  popStack();  skipStack();  }	  pathNames[stackSize    -    1]    =    null;    if(stackSize    >    0)    {    pathNames[stackSize    -    1]    =    null;    }    else    {    popStack();    skipStack();    }    	non-compiled	[CE]  cannot  find  symbol	73	None	replace
427	[BUG]  [BUGGY]  [FE]  ArrayIndexOutOfBoundsException  [FE]                  ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {  popStack();      [BUGGY]  pathNames[stackSize  -  1]  =  null;  if(pathNames[stackSize  -  2]  ==  null)  {  pathNames[stackSize  -  1]  =  null;  }  [BUGGY]      }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	262	262	2	add	pathNames[stackSize  -  1]  =  null;  if(pathNames[stackSize  -  2]  ==  null)  {  pathNames[stackSize  -  1]  =  null;  }	  pathNames[stackSize    -    1]    =    null;    if(stackSize    >    0)    {    pathNames[stackSize    -    1]    =    null;    }    else    {    popStack();    skipStack();    }    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	73	2	replace
428	[BUG]  [BUGGY]  pathNames[stackSize  -  1]  =  null;  if(pathNames[stackSize  -  2]  ==  null)  {  pathNames[stackSize  -  1]  =  null;  }  [FE]  ArrayIndexOutOfBoundsException  [FE]                  ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {  popStack();      [BUGGY]  pathNames[stackSize  -  1]  =  null;  if(pathNames[stackSize  -  2]  ==  null)  {  pathNames[stackSize  -  1]  =  null;  }  [BUGGY]      }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	262	262	2	replace	pathNames[stackSize  -  1]  =  null;  if(pathNames[stackSize  -  2]  ==  null)  {  pathNames[stackSize  -  1]  =  null;  }	  pathNames[stackSize    -    1]    =    null;    if(stackSize    >    0)    {    pathNames[stackSize    -    1]    =    null;    }    else    {    popStack();    skipStack();    }    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	73	2	replace
429	[BUG]  [BUGGY]  pathNames[stackSize  -  1]  =  null;  if(pathNames[stackSize  -  1]  ==  null)  {  pathNames[stackSize  -  1]  =  null;  }  else  {  popStack();  skipStack();  }  [CE]  cannot  find  symbol  [FE]                    ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {  popStack();      [BUGGY]  pathNames[stackSize  -  1]  =  null;  if(pathNames[stackSize  -  1]  ==  null)  {  pathNames[stackSize  -  1]  =  null;  }  else  {  popStack();  skipStack();  }  [BUGGY]      }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	262	262	2	replace	pathNames[stackSize  -  1]  =  null;  if(pathNames[stackSize  -  1]  ==  null)  {  pathNames[stackSize  -  1]  =  null;  }  else  {  popStack();  skipStack();  }	  pathNames[stackSize    -    1]    =    null;    if(stackSize    >    0)    {    pathNames[stackSize    -    1]    =    null;    }    else    {    popStack();    skipStack();    }    	non-compiled	[CE]  cannot  find  symbol	73	None	replace
430	[BUG]  [BUGGY]  pathNames[stackSize  -  1]  =  null;  if(pathNames[stackSize  -  2]!=  null)  {  pathNames[stackSize  -  1]  =  null;  }  else  {  popStack();  skipStack();  }  [CE]  cannot  find  symbol  [FE]                      ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {  popStack();      [BUGGY]  pathNames[stackSize  -  1]  =  null;  if(pathNames[stackSize  -  2]!=  null)  {  pathNames[stackSize  -  1]  =  null;  }  else  {  popStack();  skipStack();  }  [BUGGY]      }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	262	262	2	replace	pathNames[stackSize  -  1]  =  null;  if(pathNames[stackSize  -  2]!=  null)  {  pathNames[stackSize  -  1]  =  null;  }  else  {  popStack();  skipStack();  }	  pathNames[stackSize    -    1]    =    null;    if(stackSize    >    0)    {    pathNames[stackSize    -    1]    =    null;    }    else    {    popStack();    skipStack();    }    	non-compiled	[CE]  cannot  find  symbol	73	None	replace
431	[BUG]  [BUGGY]  pathNames[stackSize  -  1]  =  null  +  JsonToken.VALUE_NUMBER;  [CE]  cannot  find  symbol  VALUE_NUMBER  [FE]              ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {  popStack();      [BUGGY]  pathNames[stackSize  -  1]  =  null  +  JsonToken.VALUE_NUMBER;  [BUGGY]      }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	262	262	2	replace	pathNames[stackSize  -  1]  =  null  +  JsonToken.VALUE_NUMBER;	  pathNames[stackSize    -    1]    =       "null   "    +    JsonToken.VALUE_NUMBER;    	non-compiled	[CE]  cannot  find  symbol  VALUE_NUMBER	38	None	replace
432	[BUG]  [BUGGY]  pathNames[stackSize  -  1]  =  JsonToken.VALUE_NUMBER_STRING;  [CE]  cannot  find  symbol  VALUE_NUMBER_STRING  [FE]                ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {  popStack();      [BUGGY]  pathNames[stackSize  -  1]  =  JsonToken.VALUE_NUMBER_STRING;  [BUGGY]      }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	262	262	2	replace	pathNames[stackSize  -  1]  =  JsonToken.VALUE_NUMBER_STRING;	  pathNames[stackSize    -    1]    =    JsonToken.VALUE_EMBEDDED_STRING;    	non-compiled	[CE]  cannot  find  symbol  VALUE_NUMBER_STRING	12	None	replace
433	[BUG]  [BUGGY]  pathNames[stackSize  -  2]  =  null;  PathIndexOutOfBoundsException  e  =  new  PathIndexOutOfBoundsException();  [CE]  cannot  find  symbol  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {  popStack();      [BUGGY]  pathNames[stackSize  -  2]  =  null;  PathIndexOutOfBoundsException  e  =  new  PathIndexOutOfBoundsException();  [BUGGY]      }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	262	262	2	replace	pathNames[stackSize    -    2]    =    null;    PathIndexOutOfBoundsException  e  =  new  PathIndexOutOfBoundsException();	  	non-compiled	[CE]  cannot  find  symbol	36	None	add
434	[BUG]  [BUGGY]  pathNames[stackSize    -    1]    =    null;    pathNames[stackSize  -  1]  =  null;  PathIndexOutOfBoundsException  e  =  new  PathIndexOutOfBoundsException();  pathNames[stackSize  -  1]  =  null;  pathNames[stackSize  -  1]  =  null;  [CE]  cannot  find  symbol  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {  popStack();      [BUGGY]  pathNames[stackSize    -    1]    =    null;    pathNames[stackSize  -  1]  =  null;  PathIndexOutOfBoundsException  e  =  new  PathIndexOutOfBoundsException();  pathNames[stackSize  -  1]  =  null;  pathNames[stackSize  -  1]  =  null;  [BUGGY]      }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	262	262	2	replace	pathNames[stackSize        -        1]        =        null;        pathNames[stackSize    -    1]    =    null;    PathIndexOutOfBoundsException  e  =  new  PathIndexOutOfBoundsException();  pathNames[stackSize  -  1]  =  null;  pathNames[stackSize  -  1]  =  null;	  	non-compiled	[CE]  cannot  find  symbol	26	None	add
435	[BUG]  [BUGGY]  pathNames[stackSize    -    1]    =    null;    pathNames[stackSize  -  1]  =  null;  PathIndexOutOfBoundsException  e  =  new  PathIndexOutOfBoundsException( " ");  pathNames[stackSize  -  1]  =  null;  pathNames[stackSize  -  1]  =  null;  [CE]  cannot  find  symbol  [FE]      ArrayIndexOutOfBoundsException    [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {  popStack();      [BUGGY]  pathNames[stackSize    -    1]    =    null;    pathNames[stackSize  -  1]  =  null;  PathIndexOutOfBoundsException  e  =  new  PathIndexOutOfBoundsException( " ");  pathNames[stackSize  -  1]  =  null;  pathNames[stackSize  -  1]  =  null;  [BUGGY]      }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	262	262	2	replace	pathNames[stackSize        -        1]        =        null;        pathNames[stackSize    -    1]    =    null;    PathIndexOutOfBoundsException  e  =  new  PathIndexOutOfBoundsException( " ");  pathNames[stackSize  -  1]  =  null;  pathNames[stackSize  -  1]  =  null;	  	non-compiled	[CE]  cannot  find  symbol	26	None	add
436	[BUG]  [BUGGY]  pathNames[stackSize    -    1]    =    null;    pathNames[stackSize  -  1]  =  null;  PathIndexOutOfBoundsException  e  =  null;  pathNames[stackSize  -  1]  =  null;  [CE]  cannot  find  symbol  [FE]        ArrayIndexOutOfBoundsException    [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {  popStack();      [BUGGY]  pathNames[stackSize    -    1]    =    null;    pathNames[stackSize  -  1]  =  null;  PathIndexOutOfBoundsException  e  =  null;  pathNames[stackSize  -  1]  =  null;  [BUGGY]      }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	262	262	2	replace	pathNames[stackSize        -        1]        =        null;        pathNames[stackSize    -    1]    =    null;    PathIndexOutOfBoundsException  e  =  null;  pathNames[stackSize  -  1]  =  null;	  	non-compiled	[CE]  cannot  find  symbol	26	None	add
437	[BUG]  [BUGGY]  pathNames[stackSize    -    1]    =    null;    pathNames[stackSize  -  1]  =  null;  PathIndexOutOfBoundsException  e  =  new  PathIndexOutOfBoundsException();  pathNames[stackSize  -  2]  =  null;  pathNames[stackSize  -  1]  =  null;  [CE]  cannot  find  symbol  [FE]          ArrayIndexOutOfBoundsException    [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {  popStack();      [BUGGY]  pathNames[stackSize    -    1]    =    null;    pathNames[stackSize  -  1]  =  null;  PathIndexOutOfBoundsException  e  =  new  PathIndexOutOfBoundsException();  pathNames[stackSize  -  2]  =  null;  pathNames[stackSize  -  1]  =  null;  [BUGGY]      }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	262	262	2	replace	pathNames[stackSize        -        1]        =        null;        pathNames[stackSize    -    1]    =    null;    PathIndexOutOfBoundsException  e  =  new  PathIndexOutOfBoundsException();  pathNames[stackSize  -  2]  =  null;  pathNames[stackSize  -  1]  =  null;	  	non-compiled	[CE]  cannot  find  symbol	26	None	add
438	[BUG]  [BUGGY]  [FE]  ArrayIndexOutOfBoundsException  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {  popStack();      [BUGGY]  pathNames[0]  =  null;  if(stackSize  >  0)  {  pathNames[0]  =  null;  }  else  {  popStack();  pathNames[0]  =  null;  }  [BUGGY]      }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	262	262	2	add	pathNames[0]  =  null;  if(stackSize  >  0)  {  pathNames[0]  =  null;  }  else  {  popStack();  pathNames[0]  =  null;  }	  pathNames[stackSize    -    1]    =    null;    if(stackSize    >    0)    {    pathNames[stackSize    -    1]    =    null;    }    else    {    popStack();    pathNames[stackSize    -    1]    =    null;    }    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	66	2	replace
439	[BUG]  [BUGGY]  pathNames[0]  =  null;  if(stackSize  >  0)  {  pathNames[0]  =  null;  }  else  {  popStack();  pathNames[0]  =  null;  }  [FE]  ArrayIndexOutOfBoundsException  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {  popStack();      [BUGGY]  pathNames[0]  =  null;  if(stackSize  >  0)  {  pathNames[0]  =  null;  }  else  {  popStack();  pathNames[0]  =  null;  }  [BUGGY]      }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	262	262	2	replace	pathNames[0]  =  null;  if(stackSize  >  0)  {  pathNames[0]  =  null;  }  else  {  popStack();  pathNames[0]  =  null;  }	  pathNames[stackSize    -    1]    =    null;    if(stackSize    >    0)    {    pathNames[stackSize    -    1]    =    null;    }    else    {    popStack();    pathNames[stackSize    -    1]    =    null;    }    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	66	2	replace
440	[BUG]  [BUGGY]  pathIndices[stackSize  -  1]  =  null;  if(stackSize  >  0)  {  pathNames[stackSize  -  1]  =  null;  }  else  {  popStack();  pathNames[stackSize  -  1]  =  nu  [CE]  ';'  expected  [FE]      ArrayIndexOutOfBoundsException    [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {  popStack();      [BUGGY]  pathIndices[stackSize  -  1]  =  null;  if(stackSize  >  0)  {  pathNames[stackSize  -  1]  =  null;  }  else  {  popStack();  pathNames[stackSize  -  1]  =  nu  [BUGGY]      }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	262	262	2	replace	pathIndices[stackSize  -  1]  =  null;  if(stackSize  >  0)  {  pathNames[stackSize  -  1]  =  null;  }  else  {  popStack();  pathNames[stackSize  -  1]  =  nu	  pathNames[stackSize    -    1]    =    null;    if(stackSize    >    0)    {    pathNames[stackSize    -    1]    =    null;    }    else    {    popStack();    pathNames[stackSize    -    1]    =    null;    }    	non-compiled	[CE]  ';'  expected	66	None	replace
441	[BUG]  [BUGGY]  pathNames[peek()  -  1]  =  null;  if(stackSize  >  0)  {  pathNames[peek()  -  1]  =  null;  }  else  {  popStack();  pathNames[peek()  -  1]  =  null;  }  [CE]  bad  operand  types  for  binary  operator  '-'  [FE]        ArrayIndexOutOfBoundsException    [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {  popStack();      [BUGGY]  pathNames[peek()  -  1]  =  null;  if(stackSize  >  0)  {  pathNames[peek()  -  1]  =  null;  }  else  {  popStack();  pathNames[peek()  -  1]  =  null;  }  [BUGGY]      }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	262	262	2	replace	pathNames[peek()  -  1]  =  null;  if(stackSize  >  0)  {  pathNames[peek()  -  1]  =  null;  }  else  {  popStack();  pathNames[peek()  -  1]  =  null;  }	  pathNames[stackSize    -    1]    =    null;    if(stackSize    >    0)    {    pathNames[stackSize    -    1]    =    null;    }    else    {    popStack();    pathNames[stackSize    -    1]    =    null;    }    	non-compiled	[CE]  bad  operand  types  for  binary  operator  '-'	66	None	replace
442	[BUG]  [BUGGY]  pathNames[result.length  -  1]  =  null;  if(stackSize  >  0)  {  pathNames[result.length  -  1]  =  null;  }  [CE]  cannot  find  symbol  result  [FE]          ArrayIndexOutOfBoundsException    [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {  popStack();      [BUGGY]  pathNames[result.length  -  1]  =  null;  if(stackSize  >  0)  {  pathNames[result.length  -  1]  =  null;  }  [BUGGY]      }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	262	262	2	replace	pathNames[result.length  -  1]  =  null;  if(stackSize  >  0)  {  pathNames[result.length  -  1]  =  null;  }	  pathNames[stackSize    -    1]    =    null;    if(stackSize    >    0)    {    pathNames[stackSize    -    1]    =    null;    }    else    {    popStack();    pathNames[stackSize    -    1]    =    null;    }    	non-compiled	[CE]  cannot  find  symbol  result	66	None	replace
443	[BUG]  [BUGGY]  pathNames[stackSize  -  1]  =  null  +  JsonToken.START_OBJECT;  [CE]  cannot  find  symbol  START_OBJECT  [FE]                ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {  popStack();      [BUGGY]  pathNames[stackSize  -  1]  =  null  +  JsonToken.START_OBJECT;  [BUGGY]      }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	262	262	2	replace	pathNames[stackSize  -  1]  =  null  +  JsonToken.START_OBJECT;	  pathNames[stackSize    -    1]    =       "null   "    +    JsonToken.START_OBJECT;    	non-compiled	[CE]  cannot  find  symbol  START_OBJECT	60	None	replace
444	[BUG]  [BUGGY]  pathNames[resultSize  -  1]  =  null;  PathIndexOutOfBoundsException  e  =  new  PathIndexOutOfBoundsException(String.valueOf(stack));  pathNames[stackSize  -  1]  =  null;  [CE]  cannot  find  symbol  resultSize  [FE]          ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {  popStack();      [BUGGY]  pathNames[resultSize  -  1]  =  null;  PathIndexOutOfBoundsException  e  =  new  PathIndexOutOfBoundsException(String.valueOf(stack));  pathNames[stackSize  -  1]  =  null;  [BUGGY]      }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	262	262	2	replace	pathNames[resultSize  -  1]  =  null;  PathIndexOutOfBoundsException  e  =  new  PathIndexOutOfBoundsException(String.valueOf(stack));  pathNames[stackSize  -  1]  =  null;	  pathNames[stackSize    -    1]    =    null;    PathIndexOutOfBoundsException    e    =    new    PathIndexOutOfBoundsException(String.valueOf(stack));    pathNames[stackSize    -    1]    =    null;    	non-compiled	[CE]  cannot  find  symbol  resultSize	56	None	replace
445	[BUG]  [BUGGY]  pathNames[stackSize  -  1]  =  null;  pathIndexOutOfBoundsException  e  =  new  PathIndexOutOfBoundsException(String.valueOf(stack));  pathNames[stackSize  -  1]  =  null;  [CE]  cannot  find  symbol  [FE]            ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {  popStack();      [BUGGY]  pathNames[stackSize  -  1]  =  null;  pathIndexOutOfBoundsException  e  =  new  PathIndexOutOfBoundsException(String.valueOf(stack));  pathNames[stackSize  -  1]  =  null;  [BUGGY]      }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	262	262	2	replace	pathNames[stackSize  -  1]  =  null;  pathIndexOutOfBoundsException  e  =  new  PathIndexOutOfBoundsException(String.valueOf(stack));  pathNames[stackSize  -  1]  =  null;	  pathNames[stackSize    -    1]    =    null;    PathIndexOutOfBoundsException    e    =    new    PathIndexOutOfBoundsException(String.valueOf(stack));    pathNames[stackSize    -    1]    =    null;    	non-compiled	[CE]  cannot  find  symbol	56	None	replace
446	[BUG]  [BUGGY]  pathNames[stackSize  -  1]  =  null;  pathIndexOutOfBoundsException  e  =  new  PathIndexOutOfBoundsException( " "));  pathNames[stackSize  -  1]  =  null;  [CE]  [FE]                ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {  popStack();      [BUGGY]  pathNames[stackSize  -  1]  =  null;  pathIndexOutOfBoundsException  e  =  new  PathIndexOutOfBoundsException( " "));  pathNames[stackSize  -  1]  =  null;  [BUGGY]      }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	262	262	2	replace	pathNames[stackSize  -  1]  =  null;  pathIndexOutOfBoundsException  e  =  new  PathIndexOutOfBoundsException( " "));  pathNames[stackSize  -  1]  =  null;	  pathNames[stackSize    -    1]    =    null;    PathIndexOutOfBoundsException    e    =    new    PathIndexOutOfBoundsException(   "   "));    pathNames[stackSize    -    1]    =    null;    	non-compiled	[CE]  	31	None	replace
447	[BUG]  [BUGGY]  pathIndices  =  new  int[pathSize  -  1];  System.arraycopy(pathNames,  0,  pathNames,  0,  stackSize  -  1);  [CE]  cannot  find  symbol  pathSize  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {  popStack();      [BUGGY]  pathIndices  =  new  int[pathSize  -  1];  System.arraycopy(pathNames,  0,  pathNames,  0,  stackSize  -  1);  [BUGGY]      }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	262	262	2	replace	pathIndices  =  new  int[pathSize  -  1];  System.arraycopy(pathNames,  0,  pathNames,  0,  stackSize  -  1);	  if(stackSize    >    0)    {    pathIndices    =    new    int[stackSize    -    1];    System.arraycopy(pathNames,    0,    pathNames,    0,    stackSize    -    1);    }    	non-compiled	[CE]  cannot  find  symbol  pathSize	44	None	replace
448	[BUG]  [BUGGY]  pathIndices  =  new  int[pathNames  -  1];  System.arraycopy(pathNames,  0,  pathNames,  0,  stackSize  -  1);  [CE]  bad  operand  types  for  binary  operator  '-'  [FE]      ArrayIndexOutOfBoundsException    [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {  popStack();      [BUGGY]  pathIndices  =  new  int[pathNames  -  1];  System.arraycopy(pathNames,  0,  pathNames,  0,  stackSize  -  1);  [BUGGY]      }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	262	262	2	replace	pathIndices  =  new  int[pathNames  -  1];  System.arraycopy(pathNames,  0,  pathNames,  0,  stackSize  -  1);	  if(stackSize    >    0)    {    pathIndices    =    new    int[stackSize    -    1];    System.arraycopy(pathNames,    0,    pathNames,    0,    stackSize    -    1);    }    	non-compiled	[CE]  bad  operand  types  for  binary  operator  '-'	44	None	replace
449	[BUG]  [BUGGY]  if(stackSize  >  0)  {  pathIndices  =  new  int[stackSize  -  1];  System.arraycopy(pathNames,  0,  pathNames,  0,  stackSize  -  1);  }  if(stackSize  >  0)  {  pathIndices  =  new  int[pathNames,  0,  stackSize  -  1];  System.arraycopy(pathNames,  0,  pathNames,  0,  stackSize  -  1);  }  [CE]  ']'  expected  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {  popStack();      [BUGGY]  if(stackSize  >  0)  {  pathIndices  =  new  int[stackSize  -  1];  System.arraycopy(pathNames,  0,  pathNames,  0,  stackSize  -  1);  }  if(stackSize  >  0)  {  pathIndices  =  new  int[pathNames,  0,  stackSize  -  1];  System.arraycopy(pathNames,  0,  pathNames,  0,  stackSize  -  1);  }  [BUGGY]      }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	262	262	2	replace	if(stackSize    >    0)    {    pathIndices    =    new    int[stackSize    -    1];    System.arraycopy(pathNames,    0,    pathNames,    0,    stackSize    -    1);    }    if(stackSize  >  0)  {  pathIndices  =  new  int[pathNames,  0,  stackSize  -  1];  System.arraycopy(pathNames,  0,  pathNames,  0,  stackSize  -  1);  }	  	non-compiled	[CE]  ']'  expected	43	None	add
450	[BUG]  [BUGGY]  if(stackSize  >  0)  {  pathIndices  =  new  int[stackSize  -  1];  System.arraycopy(pathNames,  0,  pathNames,  0,  stackSize  -  1);  }  if(stackSize  >  0)  {  pathIndices  =  new  int[stackSize  -  1];  System.arraycopy(pathNames,  0,  pathNames,  0,  stackSize  -  1]);  }  [CE]  ')'  expected  [FE]      ArrayIndexOutOfBoundsException    [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {  popStack();      [BUGGY]  if(stackSize  >  0)  {  pathIndices  =  new  int[stackSize  -  1];  System.arraycopy(pathNames,  0,  pathNames,  0,  stackSize  -  1);  }  if(stackSize  >  0)  {  pathIndices  =  new  int[stackSize  -  1];  System.arraycopy(pathNames,  0,  pathNames,  0,  stackSize  -  1]);  }  [BUGGY]      }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	262	262	2	replace	if(stackSize    >    0)    {    pathIndices    =    new    int[stackSize    -    1];    System.arraycopy(pathNames,    0,    pathNames,    0,    stackSize    -    1);    }    if(stackSize  >  0)  {  pathIndices  =  new  int[stackSize  -  1];  System.arraycopy(pathNames,  0,  pathNames,  0,  stackSize  -  1]);  }	  	non-compiled	[CE]  ')'  expected	43	None	add
451	[BUG]  [BUGGY]  [FE]  ArrayIndexOutOfBoundsException  [FE]        ArrayIndexOutOfBoundsException    [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {  popStack();      [BUGGY]  if(stackSize  >  0)  {  pathIndices  =  new  int[stackSize  -  1];  System.arraycopy(pathNames,  0,  pathNames,  0,  stackSize  -  1);  }  if(stackSize  >  0)  {  pathIndices  =  new  int[pathNames.length  -  1];  System.arraycopy(pathNames,  0,  pathNames,  0,  stackSize  -  1);  }  [BUGGY]      }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	262	262	2	add	if(stackSize    >    0)    {    pathIndices    =    new    int[stackSize    -    1];    System.arraycopy(pathNames,    0,    pathNames,    0,    stackSize    -    1);    }    if(stackSize  >  0)  {  pathIndices  =  new  int[pathNames.length  -  1];  System.arraycopy(pathNames,  0,  pathNames,  0,  stackSize  -  1);  }	  	compilable	  [FE]  ArrayIndexOutOfBoundsException  	43	2	add
452	[BUG]  [BUGGY]  if(stackSize  >  0)  {  pathIndices  =  new  int[stackSize  -  1];  System.arraycopy(pathNames,  0,  pathNames,  0,  stackSize  -  1);  }  if(stackSize  >  0)  {  pathIndices  =  new  int[pathNames.length  -  1];  System.arraycopy(pathNames,  0,  pathNames,  0,  stackSize  -  1);  }  [FE]  ArrayIndexOutOfBoundsException  [FE]        ArrayIndexOutOfBoundsException    [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {  popStack();      [BUGGY]  if(stackSize  >  0)  {  pathIndices  =  new  int[stackSize  -  1];  System.arraycopy(pathNames,  0,  pathNames,  0,  stackSize  -  1);  }  if(stackSize  >  0)  {  pathIndices  =  new  int[pathNames.length  -  1];  System.arraycopy(pathNames,  0,  pathNames,  0,  stackSize  -  1);  }  [BUGGY]      }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	262	262	2	replace	if(stackSize    >    0)    {    pathIndices    =    new    int[stackSize    -    1];    System.arraycopy(pathNames,    0,    pathNames,    0,    stackSize    -    1);    }    if(stackSize  >  0)  {  pathIndices  =  new  int[pathNames.length  -  1];  System.arraycopy(pathNames,  0,  pathNames,  0,  stackSize  -  1);  }	  	compilable	  [FE]  ArrayIndexOutOfBoundsException  	43	2	add
453	[BUG]  [BUGGY]  if(stackSize  >  0)  {  pathIndices  =  new  int[stackSize  -  1];  System.arraycopy(pathNames,  0,  pathNames,  0,  stackSize  -  1);  }  if(stackSize  >  0)  {  pathIndices  =  new  int[pathNames  -  1];  System.arraycopy(pathNames,  0,  pathNames,  0,  stackSize  -  1);  }  [CE]  bad  operand  types  for  binary  operator  '-'  [FE]          ArrayIndexOutOfBoundsException    [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {  popStack();      [BUGGY]  if(stackSize  >  0)  {  pathIndices  =  new  int[stackSize  -  1];  System.arraycopy(pathNames,  0,  pathNames,  0,  stackSize  -  1);  }  if(stackSize  >  0)  {  pathIndices  =  new  int[pathNames  -  1];  System.arraycopy(pathNames,  0,  pathNames,  0,  stackSize  -  1);  }  [BUGGY]      }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	262	262	2	replace	if(stackSize    >    0)    {    pathIndices    =    new    int[stackSize    -    1];    System.arraycopy(pathNames,    0,    pathNames,    0,    stackSize    -    1);    }    if(stackSize  >  0)  {  pathIndices  =  new  int[pathNames  -  1];  System.arraycopy(pathNames,  0,  pathNames,  0,  stackSize  -  1);  }	  	non-compiled	[CE]  bad  operand  types  for  binary  operator  '-'	43	None	add
454	[BUG]  [BUGGY]  if(stackSize  >  0)  {  pathIndices  =  new  int[pathNames  -  1];  System.arraycopy(pathNames,  0,  pathNames,  0,  stackSize  -  1);  }  else  {  throw  new  IOException( " ");  }  [CE]  bad  operand  types  for  binary  operator  [FE]    IOException    [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {  popStack();      [BUGGY]  if(stackSize  >  0)  {  pathIndices  =  new  int[pathNames  -  1];  System.arraycopy(pathNames,  0,  pathNames,  0,  stackSize  -  1);  }  else  {  throw  new  IOException( " ");  }  [BUGGY]      }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	262	262	2	replace	if(stackSize  >  0)  {  pathIndices  =  new  int[pathNames  -  1];  System.arraycopy(pathNames,  0,  pathNames,  0,  stackSize  -  1);  }  else  {  throw  new  IOException( " ");  }	  if(stackSize    >    0)    {    pathIndices    =    new    int[stackSize    -    1];    System.arraycopy(pathNames,    0,    pathNames,    0,    stackSize    -    1);    }    else    {    throw    new    IOException(   "   ");    }    	non-compiled	[CE]  bad  operand  types  for  binary  operator  	51	None	replace
455	[BUG]  [BUGGY]  pathNames[stackSize    -    1]    =    null;    if(stackSize  >  0)  {  pathNames[stackSize  -  1]  =  null;  }  if(stackSize  >  0)  {  pathNames[stackSize  -  1]  =  null;  if(stackSize  >  1)  {  pathNames[stackSize  -  1]  =  null;  }  [CE]  ';'  expected  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {  popStack();      [BUGGY]  pathNames[stackSize    -    1]    =    null;    if(stackSize  >  0)  {  pathNames[stackSize  -  1]  =  null;  }  if(stackSize  >  0)  {  pathNames[stackSize  -  1]  =  null;  if(stackSize  >  1)  {  pathNames[stackSize  -  1]  =  null;  }  [BUGGY]      }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	262	262	2	replace	pathNames[stackSize        -        1]        =        null;        if(stackSize    >    0)    {    pathNames[stackSize    -    1]    =    null;    }    if(stackSize  >  0)  {  pathNames[stackSize  -  1]  =  null;  if(stackSize  >  1)  {  pathNames[stackSize  -  1]  =  null;  }	  	non-compiled	[CE]  ';'  expected	69	None	add
456	[BUG]  [BUGGY]  pathNames[stackSize    -    1]    =    null;    if(stackSize  >  0)  {  pathNames[stackSize  -  1]  =  null;  }  if(stackSize  >  0)  {  pathNames[stackSize  -  1]  =  null;  if(stackSize  >  0)  {  pathNames[stackSize  -  1]  =  nu  [CE]  ';'  expected  [FE]      ArrayIndexOutOfBoundsException    [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {  popStack();      [BUGGY]  pathNames[stackSize    -    1]    =    null;    if(stackSize  >  0)  {  pathNames[stackSize  -  1]  =  null;  }  if(stackSize  >  0)  {  pathNames[stackSize  -  1]  =  null;  if(stackSize  >  0)  {  pathNames[stackSize  -  1]  =  nu  [BUGGY]      }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	262	262	2	replace	pathNames[stackSize        -        1]        =        null;        if(stackSize    >    0)    {    pathNames[stackSize    -    1]    =    null;    }    if(stackSize  >  0)  {  pathNames[stackSize  -  1]  =  null;  if(stackSize  >  0)  {  pathNames[stackSize  -  1]  =  nu	  	non-compiled	[CE]  ';'  expected	69	None	add
457	[BUG]  [BUGGY]  if(stackSize  >  0)  {  pathIndices  =  new  int[stackSize  -  1];  System.arraycopy(pathNames,  0,  pathNames,  0,  stackSize  -  1);  }  else  {  throw  new  IllegalArgumentException(   "   ");  }  if(stackSize  >  0)  {  pathIndices  =  new  int[stackSize  -  1];  System.arraycopy(pathNames,  0,  pathNames,  0,  stackSize  -  1]);  }  else  {  throw  new  IllegalArgumentException( "   ");  }  [CE]  [FE]    IllegalArgumentException    [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {  popStack();      [BUGGY]  if(stackSize  >  0)  {  pathIndices  =  new  int[stackSize  -  1];  System.arraycopy(pathNames,  0,  pathNames,  0,  stackSize  -  1);  }  else  {  throw  new  IllegalArgumentException(   "   ");  }  if(stackSize  >  0)  {  pathIndices  =  new  int[stackSize  -  1];  System.arraycopy(pathNames,  0,  pathNames,  0,  stackSize  -  1]);  }  else  {  throw  new  IllegalArgumentException( "   ");  }  [BUGGY]      }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	262	262	2	replace	if(stackSize    >    0)    {    pathIndices    =    new    int[stackSize    -    1];    System.arraycopy(pathNames,    0,    pathNames,    0,    stackSize    -    1);    }    else    {    throw    new    IllegalArgumentException(   "   ");    }    if(stackSize  >  0)  {  pathIndices  =  new  int[stackSize  -  1];  System.arraycopy(pathNames,  0,  pathNames,  0,  stackSize  -  1]);  }  else  {  throw  new  IllegalArgumentException( "   ");  }	  	non-compiled	[CE]  	45	None	add
458	[BUG]  [BUGGY]  if(stackSize  >  0)  {  pathIndices  =  new  int[stackSize  -  1];  System.arraycopy(pathNames,  0,  pathNames,  0,  stackSize  -  1);  }  else  {  throw  new  IllegalArgumentException(   "   ");  }  if(stackSize  >  0)  {  pathIndices  =  new  int[pathNames,  0,  stackSize  -  1];  System.arraycopy(pathNames,  0,  pathNames,  0,  stackSize  -  1);  }  else  {  throw  new  IllegalArgumentException( "   ");  }  [CE]  [FE]      IllegalArgumentException    [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {  popStack();      [BUGGY]  if(stackSize  >  0)  {  pathIndices  =  new  int[stackSize  -  1];  System.arraycopy(pathNames,  0,  pathNames,  0,  stackSize  -  1);  }  else  {  throw  new  IllegalArgumentException(   "   ");  }  if(stackSize  >  0)  {  pathIndices  =  new  int[pathNames,  0,  stackSize  -  1];  System.arraycopy(pathNames,  0,  pathNames,  0,  stackSize  -  1);  }  else  {  throw  new  IllegalArgumentException( "   ");  }  [BUGGY]      }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	262	262	2	replace	if(stackSize    >    0)    {    pathIndices    =    new    int[stackSize    -    1];    System.arraycopy(pathNames,    0,    pathNames,    0,    stackSize    -    1);    }    else    {    throw    new    IllegalArgumentException(   "   ");    }    if(stackSize  >  0)  {  pathIndices  =  new  int[pathNames,  0,  stackSize  -  1];  System.arraycopy(pathNames,  0,  pathNames,  0,  stackSize  -  1);  }  else  {  throw  new  IllegalArgumentException( "   ");  }	  	non-compiled	[CE]  	45	None	add
459	[BUG]  [BUGGY]  if(stackSize  >  0)  {  pathIndices  =  new  int[stackSize  -  1];  System.arraycopy(pathNames,  0,  pathNames,  0,  stackSize  -  1);  }  else  {  throw  new  IllegalArgumentException(   "   ");  }  if(stackSize  >  0)  {  pathIndices  =  new  int[stackSize  -  1];  System.arraycopy(pathNames,  0,  pathNames,  0,  stackSize  -  1]);  }  else  {  throw  new  IllegalArgumentException( "  [CE]  [FE]        IllegalArgumentException    [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {  popStack();      [BUGGY]  if(stackSize  >  0)  {  pathIndices  =  new  int[stackSize  -  1];  System.arraycopy(pathNames,  0,  pathNames,  0,  stackSize  -  1);  }  else  {  throw  new  IllegalArgumentException(   "   ");  }  if(stackSize  >  0)  {  pathIndices  =  new  int[stackSize  -  1];  System.arraycopy(pathNames,  0,  pathNames,  0,  stackSize  -  1]);  }  else  {  throw  new  IllegalArgumentException( "  [BUGGY]      }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	262	262	2	replace	if(stackSize    >    0)    {    pathIndices    =    new    int[stackSize    -    1];    System.arraycopy(pathNames,    0,    pathNames,    0,    stackSize    -    1);    }    else    {    throw    new    IllegalArgumentException(   "   ");    }    if(stackSize  >  0)  {  pathIndices  =  new  int[stackSize  -  1];  System.arraycopy(pathNames,  0,  pathNames,  0,  stackSize  -  1]);  }  else  {  throw  new  IllegalArgumentException( "	  	non-compiled	[CE]  	45	None	add
460	[BUG]  [BUGGY]  [FE]  NegativeArraySizeException  [FE]        ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {  popStack();      [BUGGY]  Object[]  result  =  new  Object[stackSize  -  1];  for(int  i  =  0;  i  <  stackSize;  ++i)  {  result[i]  =  null;  }  [BUGGY]      }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	262	262	2	add	Object[]  result  =  new  Object[stackSize  -  1];  for(int  i  =  0;  i  <  stackSize;  ++i)  {  result[i]  =  null;  }	  if(stackSize    >    0)    {    int[]    result    =    new    int[stackSize    -    1];    for(int    i    =    0;    i    <    stackSize;    ++i)    {    result[i]    =    null;    }    	compilable	  [FE]  NegativeArraySizeException  	76	2	replace
461	[BUG]  [BUGGY]  Object[]  result  =  new  Object[stackSize  -  1];  for(int  i  =  0;  i  <  stackSize;  ++i)  {  result[i]  =  null;  }  [FE]  NegativeArraySizeException  [FE]        ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {  popStack();      [BUGGY]  Object[]  result  =  new  Object[stackSize  -  1];  for(int  i  =  0;  i  <  stackSize;  ++i)  {  result[i]  =  null;  }  [BUGGY]      }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	262	262	2	replace	Object[]  result  =  new  Object[stackSize  -  1];  for(int  i  =  0;  i  <  stackSize;  ++i)  {  result[i]  =  null;  }	  if(stackSize    >    0)    {    int[]    result    =    new    int[stackSize    -    1];    for(int    i    =    0;    i    <    stackSize;    ++i)    {    result[i]    =    null;    }    	compilable	  [FE]  NegativeArraySizeException  	76	2	replace
462	[BUG]  [BUGGY]  if(stackSize  ==  0)  {  int[]  result  =  new  int[stackSize  -  1];  for(int  i  =  0;  i  <  stackSize;  ++i)  {  result[i]  =  null;  }  [CE]  ';'  expected  [FE]          ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {  popStack();      [BUGGY]  if(stackSize  ==  0)  {  int[]  result  =  new  int[stackSize  -  1];  for(int  i  =  0;  i  <  stackSize;  ++i)  {  result[i]  =  null;  }  [BUGGY]      }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	262	262	2	replace	if(stackSize  ==  0)  {  int[]  result  =  new  int[stackSize  -  1];  for(int  i  =  0;  i  <  stackSize;  ++i)  {  result[i]  =  null;  }	  if(stackSize    >    0)    {    int[]    result    =    new    int[stackSize    -    1];    for(int    i    =    0;    i    <    stackSize;    ++i)    {    result[i]    =    null;    }    	non-compiled	[CE]  ';'  expected	76	None	replace
463	[BUG]  [BUGGY]  if(stackSize  >  0)  {  int[]  result  =  new  int[pathNames.length  -  1];  for(int  i  =  0;  i  <  stackSize;  ++i)  {  result[i]  =  null;  }  [CE]  ';'  expected  [FE]            ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {  popStack();      [BUGGY]  if(stackSize  >  0)  {  int[]  result  =  new  int[pathNames.length  -  1];  for(int  i  =  0;  i  <  stackSize;  ++i)  {  result[i]  =  null;  }  [BUGGY]      }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	262	262	2	replace	if(stackSize  >  0)  {  int[]  result  =  new  int[pathNames.length  -  1];  for(int  i  =  0;  i  <  stackSize;  ++i)  {  result[i]  =  null;  }	  if(stackSize    >    0)    {    int[]    result    =    new    int[stackSize    -    1];    for(int    i    =    0;    i    <    stackSize;    ++i)    {    result[i]    =    null;    }    	non-compiled	[CE]  ';'  expected	76	None	replace
464	[BUG]  [BUGGY]  Result[]  result  =  new  Object[stackSize  -  1];  for(int  i  =  0;  i  <  stackSize;  ++i)  {  result[i]  =  null;  }  [CE]  cannot  find  symbol  [FE]              ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {  popStack();      [BUGGY]  Result[]  result  =  new  Object[stackSize  -  1];  for(int  i  =  0;  i  <  stackSize;  ++i)  {  result[i]  =  null;  }  [BUGGY]      }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	262	262	2	replace	Result[]  result  =  new  Object[stackSize  -  1];  for(int  i  =  0;  i  <  stackSize;  ++i)  {  result[i]  =  null;  }	  if(stackSize    >    0)    {    int[]    result    =    new    int[stackSize    -    1];    for(int    i    =    0;    i    <    stackSize;    ++i)    {    result[i]    =    null;    }    	non-compiled	[CE]  cannot  find  symbol	76	None	replace
465	[BUG]  [BUGGY]  if(stackSize  >  0)  {  int[]  result  =  new  int[pathIndices.length  -  1];  for(int  i  =  0;  i  <  stackSize;  ++i)  {  result[i]  =  null;  }  [CE]  ';'  expected  [FE]                ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {  popStack();      [BUGGY]  if(stackSize  >  0)  {  int[]  result  =  new  int[pathIndices.length  -  1];  for(int  i  =  0;  i  <  stackSize;  ++i)  {  result[i]  =  null;  }  [BUGGY]      }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	262	262	2	replace	if(stackSize  >  0)  {  int[]  result  =  new  int[pathIndices.length  -  1];  for(int  i  =  0;  i  <  stackSize;  ++i)  {  result[i]  =  null;  }	  if(stackSize    >    0)    {    int[]    result    =    new    int[stackSize    -    1];    for(int    i    =    0;    i    <    stackSize;    ++i)    {    result[i]    =    null;    }    	non-compiled	[CE]  ';'  expected	76	None	replace
466	[BUG]  [BUGGY]  if(stackSize  ==  0)  {  int[]  result  =  new  int[stackSize  -  1];  for(int  i  =  0;  i  <  stackSize;  ++i)  {  result[i]  =  handleMissingValue();  }  [CE]  ';'  expected  [FE]            ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {  popStack();      [BUGGY]  if(stackSize  ==  0)  {  int[]  result  =  new  int[stackSize  -  1];  for(int  i  =  0;  i  <  stackSize;  ++i)  {  result[i]  =  handleMissingValue();  }  [BUGGY]      }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	262	262	2	replace	if(stackSize  ==  0)  {  int[]  result  =  new  int[stackSize  -  1];  for(int  i  =  0;  i  <  stackSize;  ++i)  {  result[i]  =  handleMissingValue();  }	  if(stackSize    >    0)    {    int[]    result    =    new    int[stackSize    -    1];    for(int    i    =    0;    i    <    stackSize;    ++i)    {    result[i]    =    handleMissingValue();    }    	non-compiled	[CE]  ';'  expected	79	None	replace
467	[BUG]  [BUGGY]  if(stackSize  >=  0)  {  int[]  result  =  new  int[stackSize  -  1];  for(int  i  =  0;  i  <  stackSize;  ++i)  {  result[i]  =  handleMissingValue();  }  [CE]  ';'  expected  [FE]              ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {  popStack();      [BUGGY]  if(stackSize  >=  0)  {  int[]  result  =  new  int[stackSize  -  1];  for(int  i  =  0;  i  <  stackSize;  ++i)  {  result[i]  =  handleMissingValue();  }  [BUGGY]      }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	262	262	2	replace	if(stackSize  >=  0)  {  int[]  result  =  new  int[stackSize  -  1];  for(int  i  =  0;  i  <  stackSize;  ++i)  {  result[i]  =  handleMissingValue();  }	  if(stackSize    >    0)    {    int[]    result    =    new    int[stackSize    -    1];    for(int    i    =    0;    i    <    stackSize;    ++i)    {    result[i]    =    handleMissingValue();    }    	non-compiled	[CE]  ';'  expected	79	None	replace
468	[BUG]  [BUGGY]  if(stackSize!=  0)  {  int[]  result  =  new  int[stackSize  -  1];  for(int  i  =  0;  i  <  stackSize;  ++i)  {  result[i]  =  handleMissingValue();  }  [CE]  ';'  expected  [FE]                ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {  popStack();      [BUGGY]  if(stackSize!=  0)  {  int[]  result  =  new  int[stackSize  -  1];  for(int  i  =  0;  i  <  stackSize;  ++i)  {  result[i]  =  handleMissingValue();  }  [BUGGY]      }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	262	262	2	replace	if(stackSize!=  0)  {  int[]  result  =  new  int[stackSize  -  1];  for(int  i  =  0;  i  <  stackSize;  ++i)  {  result[i]  =  handleMissingValue();  }	  if(stackSize    >    0)    {    int[]    result    =    new    int[stackSize    -    1];    for(int    i    =    0;    i    <    stackSize;    ++i)    {    result[i]    =    handleMissingValue();    }    	non-compiled	[CE]  ';'  expected	79	None	replace
469	[BUG]  [BUGGY]  Result[]  result  =  new  Object[stackSize  -  1];  for(int  i  =  0;  i  <  stackSize;  ++i)  {  result[i]  =  handleMissingValue();  }  [CE]  cannot  find  symbol  [FE]                  ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {  popStack();      [BUGGY]  Result[]  result  =  new  Object[stackSize  -  1];  for(int  i  =  0;  i  <  stackSize;  ++i)  {  result[i]  =  handleMissingValue();  }  [BUGGY]      }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	262	262	2	replace	Result[]  result  =  new  Object[stackSize  -  1];  for(int  i  =  0;  i  <  stackSize;  ++i)  {  result[i]  =  handleMissingValue();  }	  if(stackSize    >    0)    {    int[]    result    =    new    int[stackSize    -    1];    for(int    i    =    0;    i    <    stackSize;    ++i)    {    result[i]    =    handleMissingValue();    }    	non-compiled	[CE]  cannot  find  symbol	79	None	replace
470	[BUG]  [BUGGY]  if(stackSize  >  0)  {  int[]  result  =  new  int[pathNames.length  -  1];  for(int  i  =  0;  i  <  stackSize;  ++i)  {  result[i]  =  handleMissingValue();  }  [CE]  ';'  expected  [FE]                    ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {  popStack();      [BUGGY]  if(stackSize  >  0)  {  int[]  result  =  new  int[pathNames.length  -  1];  for(int  i  =  0;  i  <  stackSize;  ++i)  {  result[i]  =  handleMissingValue();  }  [BUGGY]      }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	262	262	2	replace	if(stackSize  >  0)  {  int[]  result  =  new  int[pathNames.length  -  1];  for(int  i  =  0;  i  <  stackSize;  ++i)  {  result[i]  =  handleMissingValue();  }	  if(stackSize    >    0)    {    int[]    result    =    new    int[stackSize    -    1];    for(int    i    =    0;    i    <    stackSize;    ++i)    {    result[i]    =    handleMissingValue();    }    	non-compiled	[CE]  ';'  expected	79	None	replace
471	[BUG]  [BUGGY]  [FE]  IllegalArgumentException  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {  popStack();      [BUGGY]  if(stackSize  ==  0)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	262	262	2	add	if(stackSize  ==  0)  {  throw  new  IllegalArgumentException( " ");  }	  if(stackSize    >    0)    {    throw    new    IllegalArgumentException(   "   ");    }    	compilable	  [FE]  IllegalArgumentException  	16	2	replace
472	[BUG]  [BUGGY]  if(stackSize  ==  0)  {  throw  new  IllegalArgumentException( " ");  }  [FE]  IllegalArgumentException  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {  popStack();      [BUGGY]  if(stackSize  ==  0)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	262	262	2	replace	if(stackSize  ==  0)  {  throw  new  IllegalArgumentException( " ");  }	  if(stackSize    >    0)    {    throw    new    IllegalArgumentException(   "   ");    }    	compilable	  [FE]  IllegalArgumentException  	16	2	replace
473	[BUG]  [BUGGY]  if(stackSize  >  0)  {  pathNames[stackSize  -  1]  =  null;  }  int  stackSize  >  0)  {  pathNames[stackSize  -  1]  =  null;  }  [CE]  ';'  expected  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {  popStack();      [BUGGY]  if(stackSize  >  0)  {  pathNames[stackSize  -  1]  =  null;  }  int  stackSize  >  0)  {  pathNames[stackSize  -  1]  =  null;  }  [BUGGY]      }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	262	262	2	replace	if(stackSize    >    0)    {    pathNames[stackSize    -    1]    =    null;    }    int  stackSize  >  0)  {  pathNames[stackSize  -  1]  =  null;  }	  	non-compiled	[CE]  ';'  expected	19	None	add
474	[BUG]  [BUGGY]  [FE]  NegativeArraySizeException  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {  popStack();      [BUGGY]  Object[]  result  =  new  Object[stackSize  -  1];  System.arraycopy(pathNames,  0,  pathNames,  0,  stackSize  -  1);  return;  [BUGGY]      }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	262	262	2	add	Object[]  result  =  new  Object[stackSize  -  1];  System.arraycopy(pathNames,  0,  pathNames,  0,  stackSize  -  1);  return;	  if(stackSize    >    0)    {    int[]    result    =    new    int[stackSize    -    1];    System.arraycopy(pathNames,    0,    pathNames,    0,    stackSize    -    1);    return;    }    	compilable	  [FE]  NegativeArraySizeException  	84	2	replace
475	[BUG]  [BUGGY]  Object[]  result  =  new  Object[stackSize  -  1];  System.arraycopy(pathNames,  0,  pathNames,  0,  stackSize  -  1);  return;  [FE]  NegativeArraySizeException  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {  popStack();      [BUGGY]  Object[]  result  =  new  Object[stackSize  -  1];  System.arraycopy(pathNames,  0,  pathNames,  0,  stackSize  -  1);  return;  [BUGGY]      }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	262	262	2	replace	Object[]  result  =  new  Object[stackSize  -  1];  System.arraycopy(pathNames,  0,  pathNames,  0,  stackSize  -  1);  return;	  if(stackSize    >    0)    {    int[]    result    =    new    int[stackSize    -    1];    System.arraycopy(pathNames,    0,    pathNames,    0,    stackSize    -    1);    return;    }    	compilable	  [FE]  NegativeArraySizeException  	84	2	replace
476	[BUG]  [BUGGY]  [FE]  ArrayIndexOutOfBoundsException  [FE]      ArrayIndexOutOfBoundsException    [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {  popStack();      [BUGGY]  if(stackSize  >  0)  {  int[]  result  =  new  int[pathNames.length  -  1];  System.arraycopy(pathNames,  0,  pathNames,  0,  stackSize  -  1);  return;  }  [BUGGY]      }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	262	262	2	add	if(stackSize  >  0)  {  int[]  result  =  new  int[pathNames.length  -  1];  System.arraycopy(pathNames,  0,  pathNames,  0,  stackSize  -  1);  return;  }	  if(stackSize    >    0)    {    int[]    result    =    new    int[stackSize    -    1];    System.arraycopy(pathNames,    0,    pathNames,    0,    stackSize    -    1);    return;    }    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	84	2	replace
477	[BUG]  [BUGGY]  if(stackSize  >  0)  {  int[]  result  =  new  int[pathNames.length  -  1];  System.arraycopy(pathNames,  0,  pathNames,  0,  stackSize  -  1);  return;  }  [FE]  ArrayIndexOutOfBoundsException  [FE]      ArrayIndexOutOfBoundsException    [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {  popStack();      [BUGGY]  if(stackSize  >  0)  {  int[]  result  =  new  int[pathNames.length  -  1];  System.arraycopy(pathNames,  0,  pathNames,  0,  stackSize  -  1);  return;  }  [BUGGY]      }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	262	262	2	replace	if(stackSize  >  0)  {  int[]  result  =  new  int[pathNames.length  -  1];  System.arraycopy(pathNames,  0,  pathNames,  0,  stackSize  -  1);  return;  }	  if(stackSize    >    0)    {    int[]    result    =    new    int[stackSize    -    1];    System.arraycopy(pathNames,    0,    pathNames,    0,    stackSize    -    1);    return;    }    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	84	2	replace
478	[BUG]  [BUGGY]  [FE]  ArrayIndexOutOfBoundsException  [FE]        ArrayIndexOutOfBoundsException    [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {  popStack();      [BUGGY]  if(stackSize  >  0)  {  int[]  result  =  new  int[stackSize  -  1];  System.arraycopy(pathNames,  0,  pathNames,  1,  stackSize  -  1);  return;  }  [BUGGY]      }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	262	262	2	add	if(stackSize  >  0)  {  int[]  result  =  new  int[stackSize  -  1];  System.arraycopy(pathNames,  0,  pathNames,  1,  stackSize  -  1);  return;  }	  if(stackSize    >    0)    {    int[]    result    =    new    int[stackSize    -    1];    System.arraycopy(pathNames,    0,    pathNames,    0,    stackSize    -    1);    return;    }    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	84	2	replace
479	[BUG]  [BUGGY]  if(stackSize  >  0)  {  int[]  result  =  new  int[stackSize  -  1];  System.arraycopy(pathNames,  0,  pathNames,  1,  stackSize  -  1);  return;  }  [FE]  ArrayIndexOutOfBoundsException  [FE]        ArrayIndexOutOfBoundsException    [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {  popStack();      [BUGGY]  if(stackSize  >  0)  {  int[]  result  =  new  int[stackSize  -  1];  System.arraycopy(pathNames,  0,  pathNames,  1,  stackSize  -  1);  return;  }  [BUGGY]      }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	262	262	2	replace	if(stackSize  >  0)  {  int[]  result  =  new  int[stackSize  -  1];  System.arraycopy(pathNames,  0,  pathNames,  1,  stackSize  -  1);  return;  }	  if(stackSize    >    0)    {    int[]    result    =    new    int[stackSize    -    1];    System.arraycopy(pathNames,    0,    pathNames,    0,    stackSize    -    1);    return;    }    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	84	2	replace
480	[BUG]  [BUGGY]  [FE]  ArrayIndexOutOfBoundsException  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {  popStack();      [BUGGY]  pathNames[stackSize  -  1]  =   "null "  +  JsonToken.END_OBJECT  +  1;  [BUGGY]      }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	262	262	2	add	pathNames[stackSize  -  1]  =   "null "  +  JsonToken.END_OBJECT  +  1;	  pathNames[stackSize    -    1]    =       "null   "    +    JsonToken.END_OBJECT;    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	59	2	replace
481	[BUG]  [BUGGY]  pathNames[stackSize  -  1]  =   "null "  +  JsonToken.END_OBJECT  +  1;  [FE]  ArrayIndexOutOfBoundsException  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {  popStack();      [BUGGY]  pathNames[stackSize  -  1]  =   "null "  +  JsonToken.END_OBJECT  +  1;  [BUGGY]      }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	262	262	2	replace	pathNames[stackSize  -  1]  =   "null "  +  JsonToken.END_OBJECT  +  1;	  pathNames[stackSize    -    1]    =       "null   "    +    JsonToken.END_OBJECT;    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	59	2	replace
482	[BUG]  [BUGGY]  [FE]  ArrayIndexOutOfBoundsException  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {  popStack();      [BUGGY]  pathNames[stackSize    -    2]    =         "null     ";    pathNames[stackSize  -  2]  =     "null     ";  pathNames[stackSize  -  1]  =   "null   ";  pathNames[stackSize  -  2]  =   "null   ";  [BUGGY]      }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	262	262	2	add	pathNames[stackSize        -        2]        =               "null       ";        pathNames[stackSize    -    2]    =       "null       ";    pathNames[stackSize  -  1]  =   "null   ";  pathNames[stackSize  -  2]  =   "null   ";	  	compilable	  [FE]  ArrayIndexOutOfBoundsException  	6	2	add
483	[BUG]  [BUGGY]  pathNames[stackSize    -    2]    =         "null     ";    pathNames[stackSize  -  2]  =     "null     ";  pathNames[stackSize  -  1]  =   "null   ";  pathNames[stackSize  -  2]  =   "null   ";  [FE]  ArrayIndexOutOfBoundsException  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {  popStack();      [BUGGY]  pathNames[stackSize    -    2]    =         "null     ";    pathNames[stackSize  -  2]  =     "null     ";  pathNames[stackSize  -  1]  =   "null   ";  pathNames[stackSize  -  2]  =   "null   ";  [BUGGY]      }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	262	262	2	replace	pathNames[stackSize        -        2]        =               "null       ";        pathNames[stackSize    -    2]    =       "null       ";    pathNames[stackSize  -  1]  =   "null   ";  pathNames[stackSize  -  2]  =   "null   ";	  	compilable	  [FE]  ArrayIndexOutOfBoundsException  	6	2	add
484	[BUG]  [BUGGY]  [FE]  ArrayIndexOutOfBoundsException  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {  popStack();      [BUGGY]  pathNames[stackSize    -    2]    =         "null     ";    pathNames[stackSize  -  2]  =     "null.   ";  pathNames[stackSize  -  1]  =   "null   ";  pathNames[stackSize  -  2]  =   "null.   ";  [BUGGY]      }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	262	262	2	add	pathNames[stackSize        -        2]        =               "null       ";        pathNames[stackSize    -    2]    =       "null.   ";    pathNames[stackSize  -  1]  =   "null   ";  pathNames[stackSize  -  2]  =   "null.   ";	  	compilable	  [FE]  ArrayIndexOutOfBoundsException  	10	2	add
485	[BUG]  [BUGGY]  pathNames[stackSize    -    2]    =         "null     ";    pathNames[stackSize  -  2]  =     "null.   ";  pathNames[stackSize  -  1]  =   "null   ";  pathNames[stackSize  -  2]  =   "null.   ";  [FE]  ArrayIndexOutOfBoundsException  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {  popStack();      [BUGGY]  pathNames[stackSize    -    2]    =         "null     ";    pathNames[stackSize  -  2]  =     "null.   ";  pathNames[stackSize  -  1]  =   "null   ";  pathNames[stackSize  -  2]  =   "null.   ";  [BUGGY]      }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	262	262	2	replace	pathNames[stackSize        -        2]        =               "null       ";        pathNames[stackSize    -    2]    =       "null.   ";    pathNames[stackSize  -  1]  =   "null   ";  pathNames[stackSize  -  2]  =   "null.   ";	  	compilable	  [FE]  ArrayIndexOutOfBoundsException  	10	2	add
486	[BUG]  [BUGGY]  [FE]  ArrayIndexOutOfBoundsException  [FE]      ArrayIndexOutOfBoundsException    [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {  popStack();      [BUGGY]  pathNames[stackSize    -    2]    =         "null     ";    pathNames[stackSize  -  2]  =     "null.   ";  pathNames[stackSize  -  2]  = ",null   ";  pathNames[stackSize  -  2]  =   "null.   ";  [BUGGY]      }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	262	262	2	add	pathNames[stackSize        -        2]        =               "null       ";        pathNames[stackSize    -    2]    =       "null.   ";    pathNames[stackSize  -  2]  = ",null   ";  pathNames[stackSize  -  2]  =   "null.   ";	  	compilable	  [FE]  ArrayIndexOutOfBoundsException  	10	2	add
487	[BUG]  [BUGGY]  pathNames[stackSize    -    2]    =         "null     ";    pathNames[stackSize  -  2]  =     "null.   ";  pathNames[stackSize  -  2]  = ",null   ";  pathNames[stackSize  -  2]  =   "null.   ";  [FE]  ArrayIndexOutOfBoundsException  [FE]      ArrayIndexOutOfBoundsException    [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {  popStack();      [BUGGY]  pathNames[stackSize    -    2]    =         "null     ";    pathNames[stackSize  -  2]  =     "null.   ";  pathNames[stackSize  -  2]  = ",null   ";  pathNames[stackSize  -  2]  =   "null.   ";  [BUGGY]      }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	262	262	2	replace	pathNames[stackSize        -        2]        =               "null       ";        pathNames[stackSize    -    2]    =       "null.   ";    pathNames[stackSize  -  2]  = ",null   ";  pathNames[stackSize  -  2]  =   "null.   ";	  	compilable	  [FE]  ArrayIndexOutOfBoundsException  	10	2	add
488	[BUG]  [BUGGY]  pathNames[stackSize  -  1]  =  JsonToken.START_NAME;  [CE]  cannot  find  symbol  START_NAME  [FE]                  ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {  popStack();      [BUGGY]  pathNames[stackSize  -  1]  =  JsonToken.START_NAME;  [BUGGY]      }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	262	262	2	replace	pathNames[stackSize  -  1]  =  JsonToken.START_NAME;	  pathNames[stackSize    -    1]    =    JsonToken.START_OBJECT;    	non-compiled	[CE]  cannot  find  symbol  START_NAME	13	None	replace
489	[BUG]  [BUGGY]  [FE]  ArrayIndexOutOfBoundsException  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {  popStack();      [BUGGY]  pathNames[stackSize    -    1]    =    null;    if(stackSize  >  0)  {  pathNames[stackSize  -  1]  =  null;  }  else  {  popStack();  throw  new  IllegalArgumentException(   "   ");  }  pathNames[stackSize  -  1]  =  null;  if(stackSize  >  0)  {  pathNames[stackSize  -  1]  =   "null ";  }  else  {  popStack();  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	262	262	2	add	pathNames[stackSize        -        1]        =        null;        if(stackSize    >    0)    {    pathNames[stackSize    -    1]    =    null;    }    else    {    popStack();    throw    new    IllegalArgumentException(   "   ");    }    pathNames[stackSize  -  1]  =  null;  if(stackSize  >  0)  {  pathNames[stackSize  -  1]  =   "null ";  }  else  {  popStack();  throw  new  IllegalArgumentException( " ");  }	  	compilable	  [FE]  ArrayIndexOutOfBoundsException  	71	2	add
490	[BUG]  [BUGGY]  pathNames[stackSize    -    1]    =    null;    if(stackSize  >  0)  {  pathNames[stackSize  -  1]  =  null;  }  else  {  popStack();  throw  new  IllegalArgumentException(   "   ");  }  pathNames[stackSize  -  1]  =  null;  if(stackSize  >  0)  {  pathNames[stackSize  -  1]  =   "null ";  }  else  {  popStack();  throw  new  IllegalArgumentException( " ");  }  [FE]  ArrayIndexOutOfBoundsException  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {  popStack();      [BUGGY]  pathNames[stackSize    -    1]    =    null;    if(stackSize  >  0)  {  pathNames[stackSize  -  1]  =  null;  }  else  {  popStack();  throw  new  IllegalArgumentException(   "   ");  }  pathNames[stackSize  -  1]  =  null;  if(stackSize  >  0)  {  pathNames[stackSize  -  1]  =   "null ";  }  else  {  popStack();  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	262	262	2	replace	pathNames[stackSize        -        1]        =        null;        if(stackSize    >    0)    {    pathNames[stackSize    -    1]    =    null;    }    else    {    popStack();    throw    new    IllegalArgumentException(   "   ");    }    pathNames[stackSize  -  1]  =  null;  if(stackSize  >  0)  {  pathNames[stackSize  -  1]  =   "null ";  }  else  {  popStack();  throw  new  IllegalArgumentException( " ");  }	  	compilable	  [FE]  ArrayIndexOutOfBoundsException  	71	2	add
491	[BUG]  [BUGGY]  [FE]  ArrayIndexOutOfBoundsException  [FE]      ArrayIndexOutOfBoundsException    [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {  popStack();      [BUGGY]  pathNames[stackSize    -    1]    =    null;    if(stackSize  >  0)  {  pathNames[stackSize  -  1]  =  null;  }  else  {  popStack();  throw  new  IllegalArgumentException(   "   ");  }  pathNames[stackSize  -  1]  =  null;  if(stackSize  >  0)  {  pathNames[stackSize  -  1]  =  null;  }  else  {  popStack();  throw  new  IllegalArgumentException( "null ");  }  [BUGGY]      }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	262	262	2	add	pathNames[stackSize        -        1]        =        null;        if(stackSize    >    0)    {    pathNames[stackSize    -    1]    =    null;    }    else    {    popStack();    throw    new    IllegalArgumentException(   "   ");    }    pathNames[stackSize  -  1]  =  null;  if(stackSize  >  0)  {  pathNames[stackSize  -  1]  =  null;  }  else  {  popStack();  throw  new  IllegalArgumentException( "null ");  }	  	compilable	  [FE]  ArrayIndexOutOfBoundsException  	71	2	add
492	[BUG]  [BUGGY]  pathNames[stackSize    -    1]    =    null;    if(stackSize  >  0)  {  pathNames[stackSize  -  1]  =  null;  }  else  {  popStack();  throw  new  IllegalArgumentException(   "   ");  }  pathNames[stackSize  -  1]  =  null;  if(stackSize  >  0)  {  pathNames[stackSize  -  1]  =  null;  }  else  {  popStack();  throw  new  IllegalArgumentException( "null ");  }  [FE]  ArrayIndexOutOfBoundsException  [FE]      ArrayIndexOutOfBoundsException    [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {  popStack();      [BUGGY]  pathNames[stackSize    -    1]    =    null;    if(stackSize  >  0)  {  pathNames[stackSize  -  1]  =  null;  }  else  {  popStack();  throw  new  IllegalArgumentException(   "   ");  }  pathNames[stackSize  -  1]  =  null;  if(stackSize  >  0)  {  pathNames[stackSize  -  1]  =  null;  }  else  {  popStack();  throw  new  IllegalArgumentException( "null ");  }  [BUGGY]      }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	262	262	2	replace	pathNames[stackSize        -        1]        =        null;        if(stackSize    >    0)    {    pathNames[stackSize    -    1]    =    null;    }    else    {    popStack();    throw    new    IllegalArgumentException(   "   ");    }    pathNames[stackSize  -  1]  =  null;  if(stackSize  >  0)  {  pathNames[stackSize  -  1]  =  null;  }  else  {  popStack();  throw  new  IllegalArgumentException( "null ");  }	  	compilable	  [FE]  ArrayIndexOutOfBoundsException  	71	2	add
493	[BUG]  [BUGGY]  pathNames[stackSize    -    1]    =    null;    if(stackSize  >  0)  {  pathNames[stackSize  -  1]  =  null;  }  else  {  popStack();  throw  new  IllegalArgumentException(   "   ");  }  pathNames[stackSize  -  1]  =  null;  if(stackSize  >  0)  {  pathNames[stackSize  -  1]  =  null;  }  else  {  popStack();  throw  new  IllegalArgumentException( " ".);  }  [CE]  <identifier>  expected  [FE]        ArrayIndexOutOfBoundsException    [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {  popStack();      [BUGGY]  pathNames[stackSize    -    1]    =    null;    if(stackSize  >  0)  {  pathNames[stackSize  -  1]  =  null;  }  else  {  popStack();  throw  new  IllegalArgumentException(   "   ");  }  pathNames[stackSize  -  1]  =  null;  if(stackSize  >  0)  {  pathNames[stackSize  -  1]  =  null;  }  else  {  popStack();  throw  new  IllegalArgumentException( " ".);  }  [BUGGY]      }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	262	262	2	replace	pathNames[stackSize        -        1]        =        null;        if(stackSize    >    0)    {    pathNames[stackSize    -    1]    =    null;    }    else    {    popStack();    throw    new    IllegalArgumentException(   "   ");    }    pathNames[stackSize  -  1]  =  null;  if(stackSize  >  0)  {  pathNames[stackSize  -  1]  =  null;  }  else  {  popStack();  throw  new  IllegalArgumentException( " ".);  }	  	non-compiled	[CE]  <identifier>  expected	71	None	add
494	[BUG]  [BUGGY]  [FE]  ArrayIndexOutOfBoundsException  [FE]          ArrayIndexOutOfBoundsException    [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {  popStack();      [BUGGY]  pathNames[stackSize    -    1]    =    null;    if(stackSize  >  0)  {  pathNames[stackSize  -  1]  =  null;  }  else  {  popStack();  throw  new  IllegalArgumentException(   "   ");  }  pathNames[stackSize  -  1]  =  null;  if(stackSize  >  0)  {  pathNames[stackSize  -  1]  =  null;  }  else  {  popStack();  throw  new  IllegalArgumentException( ". ");  }  [BUGGY]      }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	262	262	2	add	pathNames[stackSize        -        1]        =        null;        if(stackSize    >    0)    {    pathNames[stackSize    -    1]    =    null;    }    else    {    popStack();    throw    new    IllegalArgumentException(   "   ");    }    pathNames[stackSize  -  1]  =  null;  if(stackSize  >  0)  {  pathNames[stackSize  -  1]  =  null;  }  else  {  popStack();  throw  new  IllegalArgumentException( ". ");  }	  	compilable	  [FE]  ArrayIndexOutOfBoundsException  	71	2	add
495	[BUG]  [BUGGY]  pathNames[stackSize    -    1]    =    null;    if(stackSize  >  0)  {  pathNames[stackSize  -  1]  =  null;  }  else  {  popStack();  throw  new  IllegalArgumentException(   "   ");  }  pathNames[stackSize  -  1]  =  null;  if(stackSize  >  0)  {  pathNames[stackSize  -  1]  =  null;  }  else  {  popStack();  throw  new  IllegalArgumentException( ". ");  }  [FE]  ArrayIndexOutOfBoundsException  [FE]          ArrayIndexOutOfBoundsException    [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {  popStack();      [BUGGY]  pathNames[stackSize    -    1]    =    null;    if(stackSize  >  0)  {  pathNames[stackSize  -  1]  =  null;  }  else  {  popStack();  throw  new  IllegalArgumentException(   "   ");  }  pathNames[stackSize  -  1]  =  null;  if(stackSize  >  0)  {  pathNames[stackSize  -  1]  =  null;  }  else  {  popStack();  throw  new  IllegalArgumentException( ". ");  }  [BUGGY]      }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	262	262	2	replace	pathNames[stackSize        -        1]        =        null;        if(stackSize    >    0)    {    pathNames[stackSize    -    1]    =    null;    }    else    {    popStack();    throw    new    IllegalArgumentException(   "   ");    }    pathNames[stackSize  -  1]  =  null;  if(stackSize  >  0)  {  pathNames[stackSize  -  1]  =  null;  }  else  {  popStack();  throw  new  IllegalArgumentException( ". ");  }	  	compilable	  [FE]  ArrayIndexOutOfBoundsException  	71	2	add
496	[BUG]  [BUGGY]  pathNames[stackSize    -    1]    =    null;    if(stackSize  >  0)  {  pathNames[stackSize  -  1]  =  null;  }  else  {  popStack();  throw  new  IllegalArgumentException(   "   ");  }  pathNames[stackSize  -  1]  =  null;  if(stackSize  >  0)  {  pathNames[stackSize  -  1]  =  null;  }  else  {  popStack();  throw  new  IllegalArgumentException( "  [CE]  unclosed  string  literal  [FE]            ArrayIndexOutOfBoundsException    [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {  popStack();      [BUGGY]  pathNames[stackSize    -    1]    =    null;    if(stackSize  >  0)  {  pathNames[stackSize  -  1]  =  null;  }  else  {  popStack();  throw  new  IllegalArgumentException(   "   ");  }  pathNames[stackSize  -  1]  =  null;  if(stackSize  >  0)  {  pathNames[stackSize  -  1]  =  null;  }  else  {  popStack();  throw  new  IllegalArgumentException( "  [BUGGY]      }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	262	262	2	replace	pathNames[stackSize        -        1]        =        null;        if(stackSize    >    0)    {    pathNames[stackSize    -    1]    =    null;    }    else    {    popStack();    throw    new    IllegalArgumentException(   "   ");    }    pathNames[stackSize  -  1]  =  null;  if(stackSize  >  0)  {  pathNames[stackSize  -  1]  =  null;  }  else  {  popStack();  throw  new  IllegalArgumentException( "	  	non-compiled	[CE]  unclosed  string  literal	71	None	add
497	[BUG]  [BUGGY]  pathNames[stackSize    -    1]    =    null;    if(stackSize  >  0)  {  pathNames[stackSize  -  1]  =  null;  }  else  {  popStack();  throw  new  IllegalArgumentException(   "   ");  }  pathNames[stackSize  -  1]  =  null;  if(stackSize  >  0)  {  pathNames[stackSize  -  1]  =  NULL;  }  else  {  popStack();  throw  new  IllegalArgumentException( " ");  }  [CE]  cannot  find  symbol  NULL  [FE]              ArrayIndexOutOfBoundsException    [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {  popStack();      [BUGGY]  pathNames[stackSize    -    1]    =    null;    if(stackSize  >  0)  {  pathNames[stackSize  -  1]  =  null;  }  else  {  popStack();  throw  new  IllegalArgumentException(   "   ");  }  pathNames[stackSize  -  1]  =  null;  if(stackSize  >  0)  {  pathNames[stackSize  -  1]  =  NULL;  }  else  {  popStack();  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	262	262	2	replace	pathNames[stackSize        -        1]        =        null;        if(stackSize    >    0)    {    pathNames[stackSize    -    1]    =    null;    }    else    {    popStack();    throw    new    IllegalArgumentException(   "   ");    }    pathNames[stackSize  -  1]  =  null;  if(stackSize  >  0)  {  pathNames[stackSize  -  1]  =  NULL;  }  else  {  popStack();  throw  new  IllegalArgumentException( " ");  }	  	non-compiled	[CE]  cannot  find  symbol  NULL	71	None	add
498	[BUG]  [BUGGY]  pathNames[stackSize  -  2]  =  JsonToken.VALUE_EMPTY;  [CE]  cannot  find  symbol  VALUE_EMPTY  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {  popStack();      [BUGGY]  pathNames[stackSize  -  2]  =  JsonToken.VALUE_EMPTY;  [BUGGY]      }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	262	262	2	replace	pathNames[stackSize  -  2]  =  JsonToken.VALUE_EMPTY;	  pathNames[stackSize    -    2]    =    null;    	non-compiled	[CE]  cannot  find  symbol  VALUE_EMPTY	37	None	replace
499	[BUG]  [BUGGY]  pathNames[resultSize  -  1]  =  null;  PathIndexOutOfBoundsException  e  =  new  PathIndexOutOfBoundsException(String.valueOf(stackSize  -  1));  pathNames[stackSize  -  1]  =  null;  [CE]  cannot  find  symbol  resultSize  [FE]            ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {  popStack();      [BUGGY]  pathNames[resultSize  -  1]  =  null;  PathIndexOutOfBoundsException  e  =  new  PathIndexOutOfBoundsException(String.valueOf(stackSize  -  1));  pathNames[stackSize  -  1]  =  null;  [BUGGY]      }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	262	262	2	replace	pathNames[resultSize  -  1]  =  null;  PathIndexOutOfBoundsException  e  =  new  PathIndexOutOfBoundsException(String.valueOf(stackSize  -  1));  pathNames[stackSize  -  1]  =  null;	  pathNames[stackSize    -    1]    =    null;    PathIndexOutOfBoundsException    e    =    new    PathIndexOutOfBoundsException(String.valueOf(stackSize    -    1));    pathNames[stackSize    -    1]    =    null;    	non-compiled	[CE]  cannot  find  symbol  resultSize	57	None	replace
500	[BUG]  [BUGGY]  pathNames[result  -  1]  =  null;  PathIndexOutOfBoundsException  e  =  new  PathIndexOutOfBoundsException(String.valueOf(stackSize  -  1));  pathNames[stackSize  -  1]  =  null;  [CE]  cannot  find  symbol  result  [FE]              ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {  popStack();      [BUGGY]  pathNames[result  -  1]  =  null;  PathIndexOutOfBoundsException  e  =  new  PathIndexOutOfBoundsException(String.valueOf(stackSize  -  1));  pathNames[stackSize  -  1]  =  null;  [BUGGY]      }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	262	262	2	replace	pathNames[result  -  1]  =  null;  PathIndexOutOfBoundsException  e  =  new  PathIndexOutOfBoundsException(String.valueOf(stackSize  -  1));  pathNames[stackSize  -  1]  =  null;	  pathNames[stackSize    -    1]    =    null;    PathIndexOutOfBoundsException    e    =    new    PathIndexOutOfBoundsException(String.valueOf(stackSize    -    1));    pathNames[stackSize    -    1]    =    null;    	non-compiled	[CE]  cannot  find  symbol  result	57	None	replace
501	[BUG]  [BUGGY]  [FE]  ArrayIndexOutOfBoundsException  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {  popStack();      [BUGGY]  pathNames[stackSize    -    1]    =    null;    if(stackSize  >  0)  {  pathNames[stackSize  -  1]  =  null;  }  else  {  popStack();  throw  new  RuntimeException(   "   ");  }  pathNames[stackSize  -  1]  =  null;  if(stackSize  >  0)  {  pathNames[stackSize  -  1]  =   "null ";  }  else  {  popStack();  throw  new  RuntimeException( " ");  }  [BUGGY]      }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	262	262	2	add	pathNames[stackSize        -        1]        =        null;        if(stackSize    >    0)    {    pathNames[stackSize    -    1]    =    null;    }    else    {    popStack();    throw    new    RuntimeException(   "   ");    }    pathNames[stackSize  -  1]  =  null;  if(stackSize  >  0)  {  pathNames[stackSize  -  1]  =   "null ";  }  else  {  popStack();  throw  new  RuntimeException( " ");  }	  	compilable	  [FE]  ArrayIndexOutOfBoundsException  	74	2	add
502	[BUG]  [BUGGY]  pathNames[stackSize    -    1]    =    null;    if(stackSize  >  0)  {  pathNames[stackSize  -  1]  =  null;  }  else  {  popStack();  throw  new  RuntimeException(   "   ");  }  pathNames[stackSize  -  1]  =  null;  if(stackSize  >  0)  {  pathNames[stackSize  -  1]  =   "null ";  }  else  {  popStack();  throw  new  RuntimeException( " ");  }  [FE]  ArrayIndexOutOfBoundsException  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {  popStack();      [BUGGY]  pathNames[stackSize    -    1]    =    null;    if(stackSize  >  0)  {  pathNames[stackSize  -  1]  =  null;  }  else  {  popStack();  throw  new  RuntimeException(   "   ");  }  pathNames[stackSize  -  1]  =  null;  if(stackSize  >  0)  {  pathNames[stackSize  -  1]  =   "null ";  }  else  {  popStack();  throw  new  RuntimeException( " ");  }  [BUGGY]      }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	262	262	2	replace	pathNames[stackSize        -        1]        =        null;        if(stackSize    >    0)    {    pathNames[stackSize    -    1]    =    null;    }    else    {    popStack();    throw    new    RuntimeException(   "   ");    }    pathNames[stackSize  -  1]  =  null;  if(stackSize  >  0)  {  pathNames[stackSize  -  1]  =   "null ";  }  else  {  popStack();  throw  new  RuntimeException( " ");  }	  	compilable	  [FE]  ArrayIndexOutOfBoundsException  	74	2	add
503	[BUG]  [BUGGY]  pathNames[stackSize    -    1]    =    null;    if(stackSize  >  0)  {  pathNames[stackSize  -  1]  =  null;  }  else  {  popStack();  throw  new  RuntimeException(   "   ");  }  pathNames[stackSize  -  1]  =  null;  if(stackSize  >  0)  {  pathNames[stackSize  -  1]  =  null;  }  else  {  popStack();  throw  new  RuntimeException( " ".);  }  [CE]  <identifier>  expected  [FE]      ArrayIndexOutOfBoundsException    [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {  popStack();      [BUGGY]  pathNames[stackSize    -    1]    =    null;    if(stackSize  >  0)  {  pathNames[stackSize  -  1]  =  null;  }  else  {  popStack();  throw  new  RuntimeException(   "   ");  }  pathNames[stackSize  -  1]  =  null;  if(stackSize  >  0)  {  pathNames[stackSize  -  1]  =  null;  }  else  {  popStack();  throw  new  RuntimeException( " ".);  }  [BUGGY]      }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	262	262	2	replace	pathNames[stackSize        -        1]        =        null;        if(stackSize    >    0)    {    pathNames[stackSize    -    1]    =    null;    }    else    {    popStack();    throw    new    RuntimeException(   "   ");    }    pathNames[stackSize  -  1]  =  null;  if(stackSize  >  0)  {  pathNames[stackSize  -  1]  =  null;  }  else  {  popStack();  throw  new  RuntimeException( " ".);  }	  	non-compiled	[CE]  <identifier>  expected	74	None	add
504	[BUG]  [BUGGY]  [FE]  ArrayIndexOutOfBoundsException  [FE]        ArrayIndexOutOfBoundsException    [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {  popStack();      [BUGGY]  pathNames[stackSize    -    1]    =    null;    if(stackSize  >  0)  {  pathNames[stackSize  -  1]  =  null;  }  else  {  popStack();  throw  new  RuntimeException(   "   ");  }  pathNames[stackSize  -  1]  =  null;  if(stackSize  >  0)  {  pathNames[stackSize  -  1]  =  null;  }  else  {  popStack();  throw  new  RuntimeException( ", ");  }  [BUGGY]      }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	262	262	2	add	pathNames[stackSize        -        1]        =        null;        if(stackSize    >    0)    {    pathNames[stackSize    -    1]    =    null;    }    else    {    popStack();    throw    new    RuntimeException(   "   ");    }    pathNames[stackSize  -  1]  =  null;  if(stackSize  >  0)  {  pathNames[stackSize  -  1]  =  null;  }  else  {  popStack();  throw  new  RuntimeException( ", ");  }	  	compilable	  [FE]  ArrayIndexOutOfBoundsException  	74	2	add
505	[BUG]  [BUGGY]  pathNames[stackSize    -    1]    =    null;    if(stackSize  >  0)  {  pathNames[stackSize  -  1]  =  null;  }  else  {  popStack();  throw  new  RuntimeException(   "   ");  }  pathNames[stackSize  -  1]  =  null;  if(stackSize  >  0)  {  pathNames[stackSize  -  1]  =  null;  }  else  {  popStack();  throw  new  RuntimeException( ", ");  }  [FE]  ArrayIndexOutOfBoundsException  [FE]        ArrayIndexOutOfBoundsException    [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {  popStack();      [BUGGY]  pathNames[stackSize    -    1]    =    null;    if(stackSize  >  0)  {  pathNames[stackSize  -  1]  =  null;  }  else  {  popStack();  throw  new  RuntimeException(   "   ");  }  pathNames[stackSize  -  1]  =  null;  if(stackSize  >  0)  {  pathNames[stackSize  -  1]  =  null;  }  else  {  popStack();  throw  new  RuntimeException( ", ");  }  [BUGGY]      }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	262	262	2	replace	pathNames[stackSize        -        1]        =        null;        if(stackSize    >    0)    {    pathNames[stackSize    -    1]    =    null;    }    else    {    popStack();    throw    new    RuntimeException(   "   ");    }    pathNames[stackSize  -  1]  =  null;  if(stackSize  >  0)  {  pathNames[stackSize  -  1]  =  null;  }  else  {  popStack();  throw  new  RuntimeException( ", ");  }	  	compilable	  [FE]  ArrayIndexOutOfBoundsException  	74	2	add
506	[BUG]  [BUGGY]  [FE]  ArrayIndexOutOfBoundsException  [FE]          ArrayIndexOutOfBoundsException    [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {  popStack();      [BUGGY]  pathNames[stackSize    -    1]    =    null;    if(stackSize  >  0)  {  pathNames[stackSize  -  1]  =  null;  }  else  {  popStack();  throw  new  RuntimeException(   "   ");  }  pathNames[stackSize  -  1]  =  null;  if(stackSize  >  0)  {  pathNames[stackSize  -  1]  =  null;  }  else  {  popStack();  throw  new  RuntimeException( ". ");  }  [BUGGY]      }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	262	262	2	add	pathNames[stackSize        -        1]        =        null;        if(stackSize    >    0)    {    pathNames[stackSize    -    1]    =    null;    }    else    {    popStack();    throw    new    RuntimeException(   "   ");    }    pathNames[stackSize  -  1]  =  null;  if(stackSize  >  0)  {  pathNames[stackSize  -  1]  =  null;  }  else  {  popStack();  throw  new  RuntimeException( ". ");  }	  	compilable	  [FE]  ArrayIndexOutOfBoundsException  	74	2	add
507	[BUG]  [BUGGY]  pathNames[stackSize    -    1]    =    null;    if(stackSize  >  0)  {  pathNames[stackSize  -  1]  =  null;  }  else  {  popStack();  throw  new  RuntimeException(   "   ");  }  pathNames[stackSize  -  1]  =  null;  if(stackSize  >  0)  {  pathNames[stackSize  -  1]  =  null;  }  else  {  popStack();  throw  new  RuntimeException( ". ");  }  [FE]  ArrayIndexOutOfBoundsException  [FE]          ArrayIndexOutOfBoundsException    [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {  popStack();      [BUGGY]  pathNames[stackSize    -    1]    =    null;    if(stackSize  >  0)  {  pathNames[stackSize  -  1]  =  null;  }  else  {  popStack();  throw  new  RuntimeException(   "   ");  }  pathNames[stackSize  -  1]  =  null;  if(stackSize  >  0)  {  pathNames[stackSize  -  1]  =  null;  }  else  {  popStack();  throw  new  RuntimeException( ". ");  }  [BUGGY]      }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	262	262	2	replace	pathNames[stackSize        -        1]        =        null;        if(stackSize    >    0)    {    pathNames[stackSize    -    1]    =    null;    }    else    {    popStack();    throw    new    RuntimeException(   "   ");    }    pathNames[stackSize  -  1]  =  null;  if(stackSize  >  0)  {  pathNames[stackSize  -  1]  =  null;  }  else  {  popStack();  throw  new  RuntimeException( ". ");  }	  	compilable	  [FE]  ArrayIndexOutOfBoundsException  	74	2	add
508	[BUG]  [BUGGY]  [FE]  ArrayIndexOutOfBoundsException  [FE]            ArrayIndexOutOfBoundsException    [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {  popStack();      [BUGGY]  pathNames[stackSize    -    1]    =    null;    if(stackSize  >  0)  {  pathNames[stackSize  -  1]  =  null;  }  else  {  popStack();  throw  new  RuntimeException(   "   ");  }  pathNames[stackSize  -  1]  =  null;  if(stackSize  >  0)  {  pathNames[stackSize  -  1]  =  null;  }  else  {  popStack();  throw  new  RuntimeException( "null ");  }  [BUGGY]      }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	262	262	2	add	pathNames[stackSize        -        1]        =        null;        if(stackSize    >    0)    {    pathNames[stackSize    -    1]    =    null;    }    else    {    popStack();    throw    new    RuntimeException(   "   ");    }    pathNames[stackSize  -  1]  =  null;  if(stackSize  >  0)  {  pathNames[stackSize  -  1]  =  null;  }  else  {  popStack();  throw  new  RuntimeException( "null ");  }	  	compilable	  [FE]  ArrayIndexOutOfBoundsException  	74	2	add
509	[BUG]  [BUGGY]  pathNames[stackSize    -    1]    =    null;    if(stackSize  >  0)  {  pathNames[stackSize  -  1]  =  null;  }  else  {  popStack();  throw  new  RuntimeException(   "   ");  }  pathNames[stackSize  -  1]  =  null;  if(stackSize  >  0)  {  pathNames[stackSize  -  1]  =  null;  }  else  {  popStack();  throw  new  RuntimeException( "null ");  }  [FE]  ArrayIndexOutOfBoundsException  [FE]            ArrayIndexOutOfBoundsException    [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {  popStack();      [BUGGY]  pathNames[stackSize    -    1]    =    null;    if(stackSize  >  0)  {  pathNames[stackSize  -  1]  =  null;  }  else  {  popStack();  throw  new  RuntimeException(   "   ");  }  pathNames[stackSize  -  1]  =  null;  if(stackSize  >  0)  {  pathNames[stackSize  -  1]  =  null;  }  else  {  popStack();  throw  new  RuntimeException( "null ");  }  [BUGGY]      }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	262	262	2	replace	pathNames[stackSize        -        1]        =        null;        if(stackSize    >    0)    {    pathNames[stackSize    -    1]    =    null;    }    else    {    popStack();    throw    new    RuntimeException(   "   ");    }    pathNames[stackSize  -  1]  =  null;  if(stackSize  >  0)  {  pathNames[stackSize  -  1]  =  null;  }  else  {  popStack();  throw  new  RuntimeException( "null ");  }	  	compilable	  [FE]  ArrayIndexOutOfBoundsException  	74	2	add
510	[BUG]  [BUGGY]  if(stackSize  >  0)  {  int[]  result  =  new  int[stackSize  -  1];  System.arraycopy(stack,  0,  pathNames,  0,  stackSize  -  1);  }  if(stackSize  >  0)  {  int[]  result  =  new  int[stackSize  -  1];  System.arraycopy(stack,  0,  pathNames,  0,  stackSize  -  1]);  }  [CE]  ')'  expected  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {  popStack();      [BUGGY]  if(stackSize  >  0)  {  int[]  result  =  new  int[stackSize  -  1];  System.arraycopy(stack,  0,  pathNames,  0,  stackSize  -  1);  }  if(stackSize  >  0)  {  int[]  result  =  new  int[stackSize  -  1];  System.arraycopy(stack,  0,  pathNames,  0,  stackSize  -  1]);  }  [BUGGY]      }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	262	262	2	replace	if(stackSize    >    0)    {    int[]    result    =    new    int[stackSize    -    1];    System.arraycopy(stack,    0,    pathNames,    0,    stackSize    -    1);    }    if(stackSize  >  0)  {  int[]  result  =  new  int[stackSize  -  1];  System.arraycopy(stack,  0,  pathNames,  0,  stackSize  -  1]);  }	  	non-compiled	[CE]  ')'  expected	80	None	add
511	[BUG]  [BUGGY]  if(stackSize  >  0)  {  int[]  result  =  new  int[stackSize  -  1];  System.arraycopy(stack,  0,  pathNames,  0,  stackSize  -  1);  }  if(stackSize  >  0)  {  int[]  result  =  new  int[stackSize  -  1];  System.arraycopy(pathNames,  0,  result[stackSize  -  1]);  }  [CE]  method  arraycopy  in  class  System  cannot  be  applied  to  given  types;  [FE]      ArrayIndexOutOfBoundsException    [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {  popStack();      [BUGGY]  if(stackSize  >  0)  {  int[]  result  =  new  int[stackSize  -  1];  System.arraycopy(stack,  0,  pathNames,  0,  stackSize  -  1);  }  if(stackSize  >  0)  {  int[]  result  =  new  int[stackSize  -  1];  System.arraycopy(pathNames,  0,  result[stackSize  -  1]);  }  [BUGGY]      }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	262	262	2	replace	if(stackSize    >    0)    {    int[]    result    =    new    int[stackSize    -    1];    System.arraycopy(stack,    0,    pathNames,    0,    stackSize    -    1);    }    if(stackSize  >  0)  {  int[]  result  =  new  int[stackSize  -  1];  System.arraycopy(pathNames,  0,  result[stackSize  -  1]);  }	  	non-compiled	[CE]  method  arraycopy  in  class  System  cannot  be  applied  to  given  types;	80	None	add
512	[BUG]  [BUGGY]  if(stackSize  >  0)  {  int[]  result  =  new  int[stackSize  -  1];  System.arraycopy(stack,  0,  pathNames,  0,  stackSize  -  1);  }  if(stackSize  >  0)  {  int[]  result  =  new  int[stackSize  -  1];  System.arraycopy(storage,  0,  pathNames,  0,  stackSize  -  1);  }  [CE]  cannot  find  symbol  storage  [FE]        ArrayIndexOutOfBoundsException    [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {  popStack();      [BUGGY]  if(stackSize  >  0)  {  int[]  result  =  new  int[stackSize  -  1];  System.arraycopy(stack,  0,  pathNames,  0,  stackSize  -  1);  }  if(stackSize  >  0)  {  int[]  result  =  new  int[stackSize  -  1];  System.arraycopy(storage,  0,  pathNames,  0,  stackSize  -  1);  }  [BUGGY]      }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	262	262	2	replace	if(stackSize    >    0)    {    int[]    result    =    new    int[stackSize    -    1];    System.arraycopy(stack,    0,    pathNames,    0,    stackSize    -    1);    }    if(stackSize  >  0)  {  int[]  result  =  new  int[stackSize  -  1];  System.arraycopy(storage,  0,  pathNames,  0,  stackSize  -  1);  }	  	non-compiled	[CE]  cannot  find  symbol  storage	80	None	add
513	[BUG]  [BUGGY]  pathNames[stackSize    -    1]    =    null;    if(stackSize  >  0)  {  pathNames[stackSize  -  1]  =  null;  }  else  {  popStack();  }  if(stackSize  >  0)  {  pathNames[stackSize  -  1]  =  null;  if(stackSize  >  1)  {  pathNames[stackSize  -  1]  =  null;  }  else  {  popStack();  }  [CE]  ';'  expected  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {  popStack();      [BUGGY]  pathNames[stackSize    -    1]    =    null;    if(stackSize  >  0)  {  pathNames[stackSize  -  1]  =  null;  }  else  {  popStack();  }  if(stackSize  >  0)  {  pathNames[stackSize  -  1]  =  null;  if(stackSize  >  1)  {  pathNames[stackSize  -  1]  =  null;  }  else  {  popStack();  }  [BUGGY]      }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	262	262	2	replace	pathNames[stackSize        -        1]        =        null;        if(stackSize    >    0)    {    pathNames[stackSize    -    1]    =    null;    }    else    {    popStack();    }    if(stackSize  >  0)  {  pathNames[stackSize  -  1]  =  null;  if(stackSize  >  1)  {  pathNames[stackSize  -  1]  =  null;  }  else  {  popStack();  }	  	non-compiled	[CE]  ';'  expected	67	None	add
514	[BUG]  [BUGGY]  pathNames[stackSize    -    1]    =    null;    if(stackSize  >  0)  {  pathNames[stackSize  -  1]  =  null;  }  else  {  popStack();  }  if(stackSize  >  0)  {  pathNames[stackSize  -  1]  =  null;  if(stackSize  >  0)  {  pathNames[stackSize  -  1]  =  null;  }  else  {  popStack()  [CE]  ';'  expected  [FE]      ArrayIndexOutOfBoundsException    [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {  popStack();      [BUGGY]  pathNames[stackSize    -    1]    =    null;    if(stackSize  >  0)  {  pathNames[stackSize  -  1]  =  null;  }  else  {  popStack();  }  if(stackSize  >  0)  {  pathNames[stackSize  -  1]  =  null;  if(stackSize  >  0)  {  pathNames[stackSize  -  1]  =  null;  }  else  {  popStack()  [BUGGY]      }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	262	262	2	replace	pathNames[stackSize        -        1]        =        null;        if(stackSize    >    0)    {    pathNames[stackSize    -    1]    =    null;    }    else    {    popStack();    }    if(stackSize  >  0)  {  pathNames[stackSize  -  1]  =  null;  if(stackSize  >  0)  {  pathNames[stackSize  -  1]  =  null;  }  else  {  popStack()	  	non-compiled	[CE]  ';'  expected	67	None	add
515	[BUG]  [BUGGY]  [FE]  ArrayIndexOutOfBoundsException  [FE]        ArrayIndexOutOfBoundsException    [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {  popStack();      [BUGGY]  pathNames[stackSize    -    1]    =    null;    if(stackSize  >  0)  {  pathNames[stackSize  -  1]  =  null;  }  else  {  popStack();  }  if(stackSize  >  0)  {  pathNames[stackSize  -  1]  =  null;  }  else  {  popStack();  }  [BUGGY]      }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	262	262	2	add	pathNames[stackSize        -        1]        =        null;        if(stackSize    >    0)    {    pathNames[stackSize    -    1]    =    null;    }    else    {    popStack();    }    if(stackSize  >  0)  {  pathNames[stackSize  -  1]  =  null;  }  else  {  popStack();  }	  	compilable	  [FE]  ArrayIndexOutOfBoundsException  	67	2	add
516	[BUG]  [BUGGY]  pathNames[stackSize    -    1]    =    null;    if(stackSize  >  0)  {  pathNames[stackSize  -  1]  =  null;  }  else  {  popStack();  }  if(stackSize  >  0)  {  pathNames[stackSize  -  1]  =  null;  }  else  {  popStack();  }  [FE]  ArrayIndexOutOfBoundsException  [FE]        ArrayIndexOutOfBoundsException    [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {  popStack();      [BUGGY]  pathNames[stackSize    -    1]    =    null;    if(stackSize  >  0)  {  pathNames[stackSize  -  1]  =  null;  }  else  {  popStack();  }  if(stackSize  >  0)  {  pathNames[stackSize  -  1]  =  null;  }  else  {  popStack();  }  [BUGGY]      }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	262	262	2	replace	pathNames[stackSize        -        1]        =        null;        if(stackSize    >    0)    {    pathNames[stackSize    -    1]    =    null;    }    else    {    popStack();    }    if(stackSize  >  0)  {  pathNames[stackSize  -  1]  =  null;  }  else  {  popStack();  }	  	compilable	  [FE]  ArrayIndexOutOfBoundsException  	67	2	add
517	[BUG]  [BUGGY]  pathNames[stackSize    -    1]    =    null;    if(stackSize  >  0)  {  pathNames[stackSize  -  1]  =  null;  }  else  {  popStack();  }  if(stackSize  >  0)  {  pathNames[stackSize  -  1]  =  null;  if(stackSize  >  0)  {  pathNames[stackSize  -  1]  =  null;  }  [CE]  ';'  expected  [FE]          ArrayIndexOutOfBoundsException    [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {  popStack();      [BUGGY]  pathNames[stackSize    -    1]    =    null;    if(stackSize  >  0)  {  pathNames[stackSize  -  1]  =  null;  }  else  {  popStack();  }  if(stackSize  >  0)  {  pathNames[stackSize  -  1]  =  null;  if(stackSize  >  0)  {  pathNames[stackSize  -  1]  =  null;  }  [BUGGY]      }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	262	262	2	replace	pathNames[stackSize        -        1]        =        null;        if(stackSize    >    0)    {    pathNames[stackSize    -    1]    =    null;    }    else    {    popStack();    }    if(stackSize  >  0)  {  pathNames[stackSize  -  1]  =  null;  if(stackSize  >  0)  {  pathNames[stackSize  -  1]  =  null;  }	  	non-compiled	[CE]  ';'  expected	67	None	add
518	[BUG]  [BUGGY]  pathNames[resultSize  -  1]  =  null;  PathIndexOutOfBoundsException.printStackTrace(pathNames);  pathNames[stackSize  -  1]  =  null;  [CE]  cannot  find  symbol  resultSize  [FE]                  ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {  popStack();      [BUGGY]  pathNames[resultSize  -  1]  =  null;  PathIndexOutOfBoundsException.printStackTrace(pathNames);  pathNames[stackSize  -  1]  =  null;  [BUGGY]      }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	262	262	2	replace	pathNames[resultSize  -  1]  =  null;  PathIndexOutOfBoundsException.printStackTrace(pathNames);  pathNames[stackSize  -  1]  =  null;	  pathNames[stackSize    -    1]    =    null;    PathIndexOutOfBoundsException.printStackTrace(pathNames);    pathNames[stackSize    -    1]    =    null;    	non-compiled	[CE]  cannot  find  symbol  resultSize	32	None	replace
519	[BUG]  [BUGGY]  pathNames[stackSize  -  1]  =  null;  pathIndexOutOfBoundsException.printStackTrace(pathNames);  pathNames[stackSize  -  1]  =  null;  [CE]  cannot  find  symbol  pathIndexOutOfBoundsException  [FE]                    ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {  popStack();      [BUGGY]  pathNames[stackSize  -  1]  =  null;  pathIndexOutOfBoundsException.printStackTrace(pathNames);  pathNames[stackSize  -  1]  =  null;  [BUGGY]      }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	262	262	2	replace	pathNames[stackSize  -  1]  =  null;  pathIndexOutOfBoundsException.printStackTrace(pathNames);  pathNames[stackSize  -  1]  =  null;	  pathNames[stackSize    -    1]    =    null;    PathIndexOutOfBoundsException.printStackTrace(pathNames);    pathNames[stackSize    -    1]    =    null;    	non-compiled	[CE]  cannot  find  symbol  pathIndexOutOfBoundsException	32	None	replace
520	[BUG]  [BUGGY]  pathNames[stackSize  -  1]  =   "null ",  JsonToken.NAME;  [CE]  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {  popStack();      [BUGGY]  pathNames[stackSize  -  1]  =   "null ",  JsonToken.NAME;  [BUGGY]      }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	262	262	2	replace	pathNames[stackSize  -  1]  =   "null ",  JsonToken.NAME;	  pathNames[stackSize    -    1]    =       "null   "    +    JsonToken.NAME;    	non-compiled	[CE]  	91	None	replace
521	[BUG]  [BUGGY]  [FE]  ArrayIndexOutOfBoundsException  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {  popStack();      [BUGGY]  pathNames[stackSize  -  1]  =   "null ";  pathNames[stackSize  -  1]  =   "null.   ";  [BUGGY]      }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	262	262	2	add	pathNames[stackSize  -  1]  =   "null ";  pathNames[stackSize  -  1]  =   "null.   ";	  pathNames[stackSize    -    2]    =           "null       ";    pathNames[stackSize    -    2]    =       "null.   ";    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	11	2	replace
522	[BUG]  [BUGGY]  pathNames[stackSize  -  1]  =   "null ";  pathNames[stackSize  -  1]  =   "null.   ";  [FE]  ArrayIndexOutOfBoundsException  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {  popStack();      [BUGGY]  pathNames[stackSize  -  1]  =   "null ";  pathNames[stackSize  -  1]  =   "null.   ";  [BUGGY]      }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	262	262	2	replace	pathNames[stackSize  -  1]  =   "null ";  pathNames[stackSize  -  1]  =   "null.   ";	  pathNames[stackSize    -    2]    =           "null       ";    pathNames[stackSize    -    2]    =       "null.   ";    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	11	2	replace
523	[BUG]  [BUGGY]  [FE]  ArrayIndexOutOfBoundsException  [FE]      ArrayIndexOutOfBoundsException    [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {  popStack();      [BUGGY]  pathNames[stackSize  -  1]  =   "null ";  pathNames[stackSize  -  2]  =   "null.   ";  [BUGGY]      }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	262	262	2	add	pathNames[stackSize  -  1]  =   "null ";  pathNames[stackSize  -  2]  =   "null.   ";	  pathNames[stackSize    -    2]    =           "null       ";    pathNames[stackSize    -    2]    =       "null.   ";    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	11	2	replace
524	[BUG]  [BUGGY]  pathNames[stackSize  -  1]  =   "null ";  pathNames[stackSize  -  2]  =   "null.   ";  [FE]  ArrayIndexOutOfBoundsException  [FE]      ArrayIndexOutOfBoundsException    [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {  popStack();      [BUGGY]  pathNames[stackSize  -  1]  =   "null ";  pathNames[stackSize  -  2]  =   "null.   ";  [BUGGY]      }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	262	262	2	replace	pathNames[stackSize  -  1]  =   "null ";  pathNames[stackSize  -  2]  =   "null.   ";	  pathNames[stackSize    -    2]    =           "null       ";    pathNames[stackSize    -    2]    =       "null.   ";    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	11	2	replace
525	[BUG]  [BUGGY]  pathNames[result  -  1]  =  null;  PathIndexOutOfBoundsException  e  =  new  PathIndexOutOfBoundsException(String.valueOf(result));  pathNames[stackSize  -  1]  =  null;  [CE]  cannot  find  symbol  result  [FE]        ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {  popStack();      [BUGGY]  pathNames[result  -  1]  =  null;  PathIndexOutOfBoundsException  e  =  new  PathIndexOutOfBoundsException(String.valueOf(result));  pathNames[stackSize  -  1]  =  null;  [BUGGY]      }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	262	262	2	replace	pathNames[result  -  1]  =  null;  PathIndexOutOfBoundsException  e  =  new  PathIndexOutOfBoundsException(String.valueOf(result));  pathNames[stackSize  -  1]  =  null;	  pathNames[stackSize    -    1]    =    null;    PathIndexOutOfBoundsException    e    =    new    PathIndexOutOfBoundsException(String.valueOf(result));    pathNames[stackSize    -    1]    =    null;    	non-compiled	[CE]  cannot  find  symbol  result	55	None	replace
526	[BUG]  [BUGGY]  pathNames[stackSize  -  1]  =  null;  PathIndexOutOfBoundsException  e  =  new  PathIndexOutOfBoundsException(String.valueOf(result));  pathIndices[stackSize  -  1]  =  null;  [CE]  cannot  find  symbol  [FE]          ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {  popStack();      [BUGGY]  pathNames[stackSize  -  1]  =  null;  PathIndexOutOfBoundsException  e  =  new  PathIndexOutOfBoundsException(String.valueOf(result));  pathIndices[stackSize  -  1]  =  null;  [BUGGY]      }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	262	262	2	replace	pathNames[stackSize  -  1]  =  null;  PathIndexOutOfBoundsException  e  =  new  PathIndexOutOfBoundsException(String.valueOf(result));  pathIndices[stackSize  -  1]  =  null;	  pathNames[stackSize    -    1]    =    null;    PathIndexOutOfBoundsException    e    =    new    PathIndexOutOfBoundsException(String.valueOf(result));    pathNames[stackSize    -    1]    =    null;    	non-compiled	[CE]  cannot  find  symbol	55	None	replace
527	[BUG]  [BUGGY]  pathNames[resultSize  -  1]  =  null;  PathIndexOutOfBoundsException  e  =  new  PathIndexOutOfBoundsException( " ");  pathNames[stackSize  -  1]  =  null;  [CE]  cannot  find  symbol  resultSize  [FE]              ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {  popStack();      [BUGGY]  pathNames[resultSize  -  1]  =  null;  PathIndexOutOfBoundsException  e  =  new  PathIndexOutOfBoundsException( " ");  pathNames[stackSize  -  1]  =  null;  [BUGGY]      }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	262	262	2	replace	pathNames[resultSize  -  1]  =  null;  PathIndexOutOfBoundsException  e  =  new  PathIndexOutOfBoundsException( " ");  pathNames[stackSize  -  1]  =  null;	  pathNames[stackSize    -    1]    =    null;    PathIndexOutOfBoundsException    e    =    new    PathIndexOutOfBoundsException(   "   ");    pathNames[stackSize    -    1]    =    null;    	non-compiled	[CE]  cannot  find  symbol  resultSize	30	None	replace
528	[BUG]  [BUGGY]  pathNames[resultSize  -  1]  =  null;  PathIndexOutOfBoundsException  e  =  new  PathIndexOutOfBoundsException( " ");  pathIndices[stackSize  -  1]  =  null;  [CE]  cannot  find  symbol  resultSize  [FE]                ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {  popStack();      [BUGGY]  pathNames[resultSize  -  1]  =  null;  PathIndexOutOfBoundsException  e  =  new  PathIndexOutOfBoundsException( " ");  pathIndices[stackSize  -  1]  =  null;  [BUGGY]      }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	262	262	2	replace	pathNames[resultSize  -  1]  =  null;  PathIndexOutOfBoundsException  e  =  new  PathIndexOutOfBoundsException( " ");  pathIndices[stackSize  -  1]  =  null;	  pathNames[stackSize    -    1]    =    null;    PathIndexOutOfBoundsException    e    =    new    PathIndexOutOfBoundsException(   "   ");    pathNames[stackSize    -    1]    =    null;    	non-compiled	[CE]  cannot  find  symbol  resultSize	30	None	replace
529	[BUG]  [BUGGY]  [FE]  NegativeArraySizeException  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {  popStack();      [BUGGY]  if(stackSize  ==  0)  {  pathIndices  =  new  int[stackSize  -  1];  System.arraycopy(pathNames,  0,  pathNames,  1,  stackSize  -  1);  }  [BUGGY]      }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	262	262	2	add	if(stackSize  ==  0)  {  pathIndices  =  new  int[stackSize  -  1];  System.arraycopy(pathNames,  0,  pathNames,  1,  stackSize  -  1);  }	          if(stackSize    >    0)    {    pathIndices    =    new    int[stackSize    -    1];    System.arraycopy(pathNames,    0,    pathNames,    1,    stackSize    -    1);    }    	compilable	  [FE]  NegativeArraySizeException  	64	2	replace
530	[BUG]  [BUGGY]  if(stackSize  ==  0)  {  pathIndices  =  new  int[stackSize  -  1];  System.arraycopy(pathNames,  0,  pathNames,  1,  stackSize  -  1);  }  [FE]  NegativeArraySizeException  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {  popStack();      [BUGGY]  if(stackSize  ==  0)  {  pathIndices  =  new  int[stackSize  -  1];  System.arraycopy(pathNames,  0,  pathNames,  1,  stackSize  -  1);  }  [BUGGY]      }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	262	262	2	replace	if(stackSize  ==  0)  {  pathIndices  =  new  int[stackSize  -  1];  System.arraycopy(pathNames,  0,  pathNames,  1,  stackSize  -  1);  }	          if(stackSize    >    0)    {    pathIndices    =    new    int[stackSize    -    1];    System.arraycopy(pathNames,    0,    pathNames,    1,    stackSize    -    1);    }    	compilable	  [FE]  NegativeArraySizeException  	64	2	replace
531	[BUG]  [BUGGY]  pathIndices  =  new  int[pathNames  -  1];  System.arraycopy(pathNames,  0,  pathNames,  1,  stackSize  -  1);  [CE]  bad  operand  types  for  binary  operator  '-'  [FE]      ArrayIndexOutOfBoundsException    [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {  popStack();      [BUGGY]  pathIndices  =  new  int[pathNames  -  1];  System.arraycopy(pathNames,  0,  pathNames,  1,  stackSize  -  1);  [BUGGY]      }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	262	262	2	replace	pathIndices  =  new  int[pathNames  -  1];  System.arraycopy(pathNames,  0,  pathNames,  1,  stackSize  -  1);	          if(stackSize    >    0)    {    pathIndices    =    new    int[stackSize    -    1];    System.arraycopy(pathNames,    0,    pathNames,    1,    stackSize    -    1);    }    	non-compiled	[CE]  bad  operand  types  for  binary  operator  '-'	64	None	replace
532	[BUG]  [BUGGY]  if(stackSize  >  0)  {  int[]  result  =  new  int[stackSize  -  1];  System.arraycopy(pathNames,  0,  pathNames,  0,  stackSize  -  1);  }  if(stackSize  >  0)  {  int[]  result  =  new  int[stackSize  -  1];  System.arraycopy(pathNames,  0,  pathNames,  0,  stackSize  -  1]);  }  [CE]  ')'  expected  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {  popStack();      [BUGGY]  if(stackSize  >  0)  {  int[]  result  =  new  int[stackSize  -  1];  System.arraycopy(pathNames,  0,  pathNames,  0,  stackSize  -  1);  }  if(stackSize  >  0)  {  int[]  result  =  new  int[stackSize  -  1];  System.arraycopy(pathNames,  0,  pathNames,  0,  stackSize  -  1]);  }  [BUGGY]      }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	262	262	2	replace	if(stackSize    >    0)    {    int[]    result    =    new    int[stackSize    -    1];    System.arraycopy(pathNames,    0,    pathNames,    0,    stackSize    -    1);    }    if(stackSize  >  0)  {  int[]  result  =  new  int[stackSize  -  1];  System.arraycopy(pathNames,  0,  pathNames,  0,  stackSize  -  1]);  }	  	non-compiled	[CE]  ')'  expected	77	None	add
533	[BUG]  [BUGGY]  if(stackSize  >  0)  {  int[]  result  =  new  int[stackSize  -  1];  System.arraycopy(pathNames,  0,  pathNames,  0,  stackSize  -  1);  }  if(stackSize  >  0)  {  int[]  result  =  new  int[stackSize  -  1];  System.arraycopy(pathNames,  0,  pathNames,  0,  stackSize  -  1);  [CE]  ';'  expected  [FE]      ArrayIndexOutOfBoundsException    [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {  popStack();      [BUGGY]  if(stackSize  >  0)  {  int[]  result  =  new  int[stackSize  -  1];  System.arraycopy(pathNames,  0,  pathNames,  0,  stackSize  -  1);  }  if(stackSize  >  0)  {  int[]  result  =  new  int[stackSize  -  1];  System.arraycopy(pathNames,  0,  pathNames,  0,  stackSize  -  1);  [BUGGY]      }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	262	262	2	replace	if(stackSize    >    0)    {    int[]    result    =    new    int[stackSize    -    1];    System.arraycopy(pathNames,    0,    pathNames,    0,    stackSize    -    1);    }    if(stackSize  >  0)  {  int[]  result  =  new  int[stackSize  -  1];  System.arraycopy(pathNames,  0,  pathNames,  0,  stackSize  -  1);	  	non-compiled	[CE]  ';'  expected	77	None	add
534	[BUG]  [BUGGY]  [FE]  ArrayIndexOutOfBoundsException  [FE]        ArrayIndexOutOfBoundsException    [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {  popStack();      [BUGGY]  if(stackSize  >  0)  {  int[]  result  =  new  int[stackSize  -  1];  System.arraycopy(pathNames,  0,  pathNames,  0,  stackSize  -  1);  }  if(stackSize  >  0)  {  int[]  result  =  new  int[stackSize  -  1];  System.arraycopy(pathNames,  0,  pathNames,  0,  stackSize  -  1);  return;  }  [BUGGY]      }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	262	262	2	add	if(stackSize    >    0)    {    int[]    result    =    new    int[stackSize    -    1];    System.arraycopy(pathNames,    0,    pathNames,    0,    stackSize    -    1);    }    if(stackSize  >  0)  {  int[]  result  =  new  int[stackSize  -  1];  System.arraycopy(pathNames,  0,  pathNames,  0,  stackSize  -  1);  return;  }	  	compilable	  [FE]  ArrayIndexOutOfBoundsException  	77	2	add
535	[BUG]  [BUGGY]  if(stackSize  >  0)  {  int[]  result  =  new  int[stackSize  -  1];  System.arraycopy(pathNames,  0,  pathNames,  0,  stackSize  -  1);  }  if(stackSize  >  0)  {  int[]  result  =  new  int[stackSize  -  1];  System.arraycopy(pathNames,  0,  pathNames,  0,  stackSize  -  1);  return;  }  [FE]  ArrayIndexOutOfBoundsException  [FE]        ArrayIndexOutOfBoundsException    [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {  popStack();      [BUGGY]  if(stackSize  >  0)  {  int[]  result  =  new  int[stackSize  -  1];  System.arraycopy(pathNames,  0,  pathNames,  0,  stackSize  -  1);  }  if(stackSize  >  0)  {  int[]  result  =  new  int[stackSize  -  1];  System.arraycopy(pathNames,  0,  pathNames,  0,  stackSize  -  1);  return;  }  [BUGGY]      }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	262	262	2	replace	if(stackSize    >    0)    {    int[]    result    =    new    int[stackSize    -    1];    System.arraycopy(pathNames,    0,    pathNames,    0,    stackSize    -    1);    }    if(stackSize  >  0)  {  int[]  result  =  new  int[stackSize  -  1];  System.arraycopy(pathNames,  0,  pathNames,  0,  stackSize  -  1);  return;  }	  	compilable	  [FE]  ArrayIndexOutOfBoundsException  	77	2	add
536	[BUG]  [BUGGY]  if(stackSize  ==  0)  {  int[]  result  =  new  int[stackSize  -  1];  for(int  i  =  0;  i  <  stackSize;  ++i)  {  result[i]  =  getValue();  }  [CE]  ';'  expected  [FE]                    ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {  popStack();      [BUGGY]  if(stackSize  ==  0)  {  int[]  result  =  new  int[stackSize  -  1];  for(int  i  =  0;  i  <  stackSize;  ++i)  {  result[i]  =  getValue();  }  [BUGGY]      }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	262	262	2	replace	if(stackSize  ==  0)  {  int[]  result  =  new  int[stackSize  -  1];  for(int  i  =  0;  i  <  stackSize;  ++i)  {  result[i]  =  getValue();  }	  if(stackSize    >    0)    {    int[]    result    =    new    int[stackSize    -    1];    for(int    i    =    0;    i    <    stackSize;    ++i)    {    result[i]    =    getValue();    }    	non-compiled	[CE]  ';'  expected	85	None	replace
537	[BUG]  [BUGGY]  Object[]  result  =  new  Object[stackSize  -  1];  for(int  i  =  0;  i  <  stackSize;  ++i)  {  result[i]  =  getValue();  }  [CE]  cannot  find  symbol  [FE]                      ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {  popStack();      [BUGGY]  Object[]  result  =  new  Object[stackSize  -  1];  for(int  i  =  0;  i  <  stackSize;  ++i)  {  result[i]  =  getValue();  }  [BUGGY]      }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	262	262	2	replace	Object[]  result  =  new  Object[stackSize  -  1];  for(int  i  =  0;  i  <  stackSize;  ++i)  {  result[i]  =  getValue();  }	  if(stackSize    >    0)    {    int[]    result    =    new    int[stackSize    -    1];    for(int    i    =    0;    i    <    stackSize;    ++i)    {    result[i]    =    getValue();    }    	non-compiled	[CE]  cannot  find  symbol	85	None	replace
538	[BUG]  [BUGGY]  if(stackSize  >=  0)  {  int[]  result  =  new  int[stackSize  -  1];  for(int  i  =  0;  i  <  stackSize;  ++i)  {  result[i]  =  getValue();  }  [CE]  ';'  expected  [FE]                        ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {  popStack();      [BUGGY]  if(stackSize  >=  0)  {  int[]  result  =  new  int[stackSize  -  1];  for(int  i  =  0;  i  <  stackSize;  ++i)  {  result[i]  =  getValue();  }  [BUGGY]      }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	262	262	2	replace	if(stackSize  >=  0)  {  int[]  result  =  new  int[stackSize  -  1];  for(int  i  =  0;  i  <  stackSize;  ++i)  {  result[i]  =  getValue();  }	  if(stackSize    >    0)    {    int[]    result    =    new    int[stackSize    -    1];    for(int    i    =    0;    i    <    stackSize;    ++i)    {    result[i]    =    getValue();    }    	non-compiled	[CE]  ';'  expected	85	None	replace
539	[BUG]  [BUGGY]  Result[]  result  =  new  Object[stackSize  -  1];  for(int  i  =  0;  i  <  stackSize;  ++i)  {  result[i]  =  getValue();  }  [CE]  cannot  find  symbol  [FE]                          ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {  popStack();      [BUGGY]  Result[]  result  =  new  Object[stackSize  -  1];  for(int  i  =  0;  i  <  stackSize;  ++i)  {  result[i]  =  getValue();  }  [BUGGY]      }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	262	262	2	replace	Result[]  result  =  new  Object[stackSize  -  1];  for(int  i  =  0;  i  <  stackSize;  ++i)  {  result[i]  =  getValue();  }	  if(stackSize    >    0)    {    int[]    result    =    new    int[stackSize    -    1];    for(int    i    =    0;    i    <    stackSize;    ++i)    {    result[i]    =    getValue();    }    	non-compiled	[CE]  cannot  find  symbol	85	None	replace
540	[BUG]  [BUGGY]  if(stackSize  >  0)  {  int[]  result  =  new  int[pathNames.length  -  1];  for(int  i  =  0;  i  <  stackSize;  ++i)  {  result[i]  =  getValue();  }  [CE]  ';'  expected  [FE]                            ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {  popStack();      [BUGGY]  if(stackSize  >  0)  {  int[]  result  =  new  int[pathNames.length  -  1];  for(int  i  =  0;  i  <  stackSize;  ++i)  {  result[i]  =  getValue();  }  [BUGGY]      }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	262	262	2	replace	if(stackSize  >  0)  {  int[]  result  =  new  int[pathNames.length  -  1];  for(int  i  =  0;  i  <  stackSize;  ++i)  {  result[i]  =  getValue();  }	  if(stackSize    >    0)    {    int[]    result    =    new    int[stackSize    -    1];    for(int    i    =    0;    i    <    stackSize;    ++i)    {    result[i]    =    getValue();    }    	non-compiled	[CE]  ';'  expected	85	None	replace
541	[BUG]  [BUGGY]  [FE]  ArrayIndexOutOfBoundsException  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {  popStack();      [BUGGY]  pathNames[stackSize  -  2]  =  null;  if(pathNames[stackSize  -  2]  ==  null)  {  pathNames[stackSize  -  2]  =  null;  }  else  {  popStack();  }  [BUGGY]      }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	262	262	2	add	pathNames[stackSize  -  2]  =  null;  if(pathNames[stackSize  -  2]  ==  null)  {  pathNames[stackSize  -  2]  =  null;  }  else  {  popStack();  }	  pathNames[stackSize    -    1]    =    null;    if(stackSize    >    0)    {    pathNames[stackSize    -    1]    =    null;    }    else    {    popStack();    }    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	68	2	replace
542	[BUG]  [BUGGY]  pathNames[stackSize  -  2]  =  null;  if(pathNames[stackSize  -  2]  ==  null)  {  pathNames[stackSize  -  2]  =  null;  }  else  {  popStack();  }  [FE]  ArrayIndexOutOfBoundsException  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {  popStack();      [BUGGY]  pathNames[stackSize  -  2]  =  null;  if(pathNames[stackSize  -  2]  ==  null)  {  pathNames[stackSize  -  2]  =  null;  }  else  {  popStack();  }  [BUGGY]      }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	262	262	2	replace	pathNames[stackSize  -  2]  =  null;  if(pathNames[stackSize  -  2]  ==  null)  {  pathNames[stackSize  -  2]  =  null;  }  else  {  popStack();  }	  pathNames[stackSize    -    1]    =    null;    if(stackSize    >    0)    {    pathNames[stackSize    -    1]    =    null;    }    else    {    popStack();    }    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	68	2	replace
543	[BUG]  [BUGGY]  [FE]  ArrayIndexOutOfBoundsException  [FE]      ArrayIndexOutOfBoundsException    [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {  popStack();      [BUGGY]  pathNames[stackSize  -  2]  =  null;  if(pathNames[stackSize  -  2]  ==  null)  {  pathNames[stackSize  -  1]  =  null;  }  else  {  popStack();  }  [BUGGY]      }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	262	262	2	add	pathNames[stackSize  -  2]  =  null;  if(pathNames[stackSize  -  2]  ==  null)  {  pathNames[stackSize  -  1]  =  null;  }  else  {  popStack();  }	  pathNames[stackSize    -    1]    =    null;    if(stackSize    >    0)    {    pathNames[stackSize    -    1]    =    null;    }    else    {    popStack();    }    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	68	2	replace
544	[BUG]  [BUGGY]  pathNames[stackSize  -  2]  =  null;  if(pathNames[stackSize  -  2]  ==  null)  {  pathNames[stackSize  -  1]  =  null;  }  else  {  popStack();  }  [FE]  ArrayIndexOutOfBoundsException  [FE]      ArrayIndexOutOfBoundsException    [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {  popStack();      [BUGGY]  pathNames[stackSize  -  2]  =  null;  if(pathNames[stackSize  -  2]  ==  null)  {  pathNames[stackSize  -  1]  =  null;  }  else  {  popStack();  }  [BUGGY]      }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	262	262	2	replace	pathNames[stackSize  -  2]  =  null;  if(pathNames[stackSize  -  2]  ==  null)  {  pathNames[stackSize  -  1]  =  null;  }  else  {  popStack();  }	  pathNames[stackSize    -    1]    =    null;    if(stackSize    >    0)    {    pathNames[stackSize    -    1]    =    null;    }    else    {    popStack();    }    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	68	2	replace
545	[BUG]  [BUGGY]  [FE]  ArrayIndexOutOfBoundsException  [FE]        ArrayIndexOutOfBoundsException    [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {  popStack();      [BUGGY]  pathNames[stackSize  -  2]  =  null;  if(pathNames[stackSize  -  2]  ==  null)  {  pathNames[stackSize  -  2]  =  null;  }  [BUGGY]      }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	262	262	2	add	pathNames[stackSize  -  2]  =  null;  if(pathNames[stackSize  -  2]  ==  null)  {  pathNames[stackSize  -  2]  =  null;  }	  pathNames[stackSize    -    1]    =    null;    if(stackSize    >    0)    {    pathNames[stackSize    -    1]    =    null;    }    else    {    popStack();    }    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	68	2	replace
546	[BUG]  [BUGGY]  pathNames[stackSize  -  2]  =  null;  if(pathNames[stackSize  -  2]  ==  null)  {  pathNames[stackSize  -  2]  =  null;  }  [FE]  ArrayIndexOutOfBoundsException  [FE]        ArrayIndexOutOfBoundsException    [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {  popStack();      [BUGGY]  pathNames[stackSize  -  2]  =  null;  if(pathNames[stackSize  -  2]  ==  null)  {  pathNames[stackSize  -  2]  =  null;  }  [BUGGY]      }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	262	262	2	replace	pathNames[stackSize  -  2]  =  null;  if(pathNames[stackSize  -  2]  ==  null)  {  pathNames[stackSize  -  2]  =  null;  }	  pathNames[stackSize    -    1]    =    null;    if(stackSize    >    0)    {    pathNames[stackSize    -    1]    =    null;    }    else    {    popStack();    }    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	68	2	replace
547	[BUG]  [BUGGY]  Arrays.sort(pathIndices,  stackSize  -  1)  {  if(stackSize  >  0)  {  pathIndices[stackSize  -  1]  =  null;  }  [CE]  ';'  expected  [FE]        ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {  popStack();      [BUGGY]  Arrays.sort(pathIndices,  stackSize  -  1)  {  if(stackSize  >  0)  {  pathIndices[stackSize  -  1]  =  null;  }  [BUGGY]      }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	262	262	2	replace	Arrays.sort(pathIndices,  stackSize  -  1)  {  if(stackSize  >  0)  {  pathIndices[stackSize  -  1]  =  null;  }	  if(stackSize    >    0)    {    pathIndices[stackSize    -    1]    =    null;    }    	non-compiled	[CE]  ';'  expected	14	None	replace
548	[BUG]  [BUGGY]  if(stackSize  >  0)  {  pathIndices[stackSize  -  1]  =  new  int[pathNames.length  -  1];  }  [CE]  incompatible  types  [FE]          ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {  popStack();      [BUGGY]  if(stackSize  >  0)  {  pathIndices[stackSize  -  1]  =  new  int[pathNames.length  -  1];  }  [BUGGY]      }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	262	262	2	replace	if(stackSize  >  0)  {  pathIndices[stackSize  -  1]  =  new  int[pathNames.length  -  1];  }	  if(stackSize    >    0)    {    pathIndices[stackSize    -    1]    =    null;    }    	non-compiled	[CE]  incompatible  types	14	None	replace
549	[BUG]  [BUGGY]  if(stackSize  >  0)  {  int[]  result  =  new  int[stackSize  -  1];  System.arraycopy(pathNames,  0,  pathNames,  0,  stackSize  -  1);  return;  }  if(stackSize  >  0)  {  int[]  result  =  new  int[stackSize  -  1];  System.arraycopy(pathNames,  0,  pathNames,  0,  stackSize  -  1]);  return;  }  [CE]  ')'  expected  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {  popStack();      [BUGGY]  if(stackSize  >  0)  {  int[]  result  =  new  int[stackSize  -  1];  System.arraycopy(pathNames,  0,  pathNames,  0,  stackSize  -  1);  return;  }  if(stackSize  >  0)  {  int[]  result  =  new  int[stackSize  -  1];  System.arraycopy(pathNames,  0,  pathNames,  0,  stackSize  -  1]);  return;  }  [BUGGY]      }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	262	262	2	replace	if(stackSize    >    0)    {    int[]    result    =    new    int[stackSize    -    1];    System.arraycopy(pathNames,    0,    pathNames,    0,    stackSize    -    1);    return;    }    if(stackSize  >  0)  {  int[]  result  =  new  int[stackSize  -  1];  System.arraycopy(pathNames,  0,  pathNames,  0,  stackSize  -  1]);  return;  }	  	non-compiled	[CE]  ')'  expected	83	None	add
550	[BUG]  [BUGGY]  if(stackSize  >  0)  {  int[]  result  =  new  int[stackSize  -  1];  System.arraycopy(pathNames,  0,  pathNames,  0,  stackSize  -  1);  return;  }  if(stackSize  >  0)  {  int[]  result  =  new  int[stackSize  -  1];  System.arraycopy(pathNames,  0,  result,  0,  stackSize  -  1]);  return;  }  [CE]  ')'  expected  [FE]      ArrayIndexOutOfBoundsException    [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {  popStack();      [BUGGY]  if(stackSize  >  0)  {  int[]  result  =  new  int[stackSize  -  1];  System.arraycopy(pathNames,  0,  pathNames,  0,  stackSize  -  1);  return;  }  if(stackSize  >  0)  {  int[]  result  =  new  int[stackSize  -  1];  System.arraycopy(pathNames,  0,  result,  0,  stackSize  -  1]);  return;  }  [BUGGY]      }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	262	262	2	replace	if(stackSize    >    0)    {    int[]    result    =    new    int[stackSize    -    1];    System.arraycopy(pathNames,    0,    pathNames,    0,    stackSize    -    1);    return;    }    if(stackSize  >  0)  {  int[]  result  =  new  int[stackSize  -  1];  System.arraycopy(pathNames,  0,  result,  0,  stackSize  -  1]);  return;  }	  	non-compiled	[CE]  ')'  expected	83	None	add
551	[BUG]  [BUGGY]  if(stackSize  >  0)  {  int[]  result  =  new  int[stackSize  -  1];  System.arraycopy(pathNames,  0,  pathNames,  0,  stackSize  -  1);  return;  }  if(stackSize  >  0)  {  int[]  result  =  new  int[stackSize  -  1];  System.arraycopy(pathNames,  0,  [CE]  [FE]        ArrayIndexOutOfBoundsException    [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {  popStack();      [BUGGY]  if(stackSize  >  0)  {  int[]  result  =  new  int[stackSize  -  1];  System.arraycopy(pathNames,  0,  pathNames,  0,  stackSize  -  1);  return;  }  if(stackSize  >  0)  {  int[]  result  =  new  int[stackSize  -  1];  System.arraycopy(pathNames,  0,  [BUGGY]      }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	262	262	2	replace	if(stackSize    >    0)    {    int[]    result    =    new    int[stackSize    -    1];    System.arraycopy(pathNames,    0,    pathNames,    0,    stackSize    -    1);    return;    }    if(stackSize  >  0)  {  int[]  result  =  new  int[stackSize  -  1];  System.arraycopy(pathNames,  0,	  	non-compiled	[CE]  	83	None	add
552	[BUG]  [BUGGY]  if(stackSize  >  0)  {  int[]  result  =  new  int[stackSize  -  1];  System.arraycopy(pathNames,  0,  pathNames,  0,  stackSize  -  1);  return;  }  if(stackSize  >  0)  {  result  =  new  int[stackSize  -  1];  System.arraycopy(pathNames,  0,  pathNames,  0,  stackSize  -  1);  return;  }  [CE]  cannot  find  symbol  result  [FE]          ArrayIndexOutOfBoundsException    [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {  popStack();      [BUGGY]  if(stackSize  >  0)  {  int[]  result  =  new  int[stackSize  -  1];  System.arraycopy(pathNames,  0,  pathNames,  0,  stackSize  -  1);  return;  }  if(stackSize  >  0)  {  result  =  new  int[stackSize  -  1];  System.arraycopy(pathNames,  0,  pathNames,  0,  stackSize  -  1);  return;  }  [BUGGY]      }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	262	262	2	replace	if(stackSize    >    0)    {    int[]    result    =    new    int[stackSize    -    1];    System.arraycopy(pathNames,    0,    pathNames,    0,    stackSize    -    1);    return;    }    if(stackSize  >  0)  {  result  =  new  int[stackSize  -  1];  System.arraycopy(pathNames,  0,  pathNames,  0,  stackSize  -  1);  return;  }	  	non-compiled	[CE]  cannot  find  symbol  result	83	None	add
553	[BUG]  [BUGGY]  pathNames[stackSize  -  1]  =  null;  PathIndexOutOfBoundsException.printStackTrace(pathNames[stackSize  -  1]  + "n ");  [CE]  cannot  find  symbol  PathIndexOutOfBoundsException  [FE]                    ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {  popStack();      [BUGGY]  pathNames[stackSize  -  1]  =  null;  PathIndexOutOfBoundsException.printStackTrace(pathNames[stackSize  -  1]  + "n ");  [BUGGY]      }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	262	262	2	replace	pathNames[stackSize  -  1]  =  null;  PathIndexOutOfBoundsException.printStackTrace(pathNames[stackSize  -  1]  + "n ");	  pathNames[stackSize    -    1]    =    null;    PathIndexOutOfBoundsException.printStackTrace(pathNames[stackSize    -    1]);    	non-compiled	[CE]  cannot  find  symbol  PathIndexOutOfBoundsException	33	None	replace
554	[BUG]  [BUGGY]  pathNames[stackSize  -  1]  =     "null   "  +  JsonToken.END_OBJECT;  pathNames[stackSize  -  1]  =   "null   "  +  JsonToken.END_OBJECT);  [CE]  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {  popStack();      [BUGGY]  pathNames[stackSize  -  1]  =     "null   "  +  JsonToken.END_OBJECT;  pathNames[stackSize  -  1]  =   "null   "  +  JsonToken.END_OBJECT);  [BUGGY]      }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	262	262	2	replace	pathNames[stackSize    -    1]    =       "null   "    +    JsonToken.END_OBJECT;    pathNames[stackSize  -  1]  =   "null   "  +  JsonToken.END_OBJECT);	  	non-compiled	[CE]  	58	None	add
555	[BUG]  [BUGGY]  pathNames[stackSize    -    1]    =    null;    if(stackSize  >  0)  {  pathNames[stackSize  -  1]  =  null;  }  else  {  popStack();  pathNames[stackSize  -  1]  =  null;  }  if(stackSize  >  0)  {  pathNames[stackSize  -  1]  =  null;  if(stackSize  >  0)  {  pathNames[stackSize  -  1]  =  null;  }  else  {  popStack();  pathNames[  [CE]  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {  popStack();      [BUGGY]  pathNames[stackSize    -    1]    =    null;    if(stackSize  >  0)  {  pathNames[stackSize  -  1]  =  null;  }  else  {  popStack();  pathNames[stackSize  -  1]  =  null;  }  if(stackSize  >  0)  {  pathNames[stackSize  -  1]  =  null;  if(stackSize  >  0)  {  pathNames[stackSize  -  1]  =  null;  }  else  {  popStack();  pathNames[  [BUGGY]      }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	262	262	2	replace	pathNames[stackSize        -        1]        =        null;        if(stackSize    >    0)    {    pathNames[stackSize    -    1]    =    null;    }    else    {    popStack();    pathNames[stackSize    -    1]    =    null;    }    if(stackSize  >  0)  {  pathNames[stackSize  -  1]  =  null;  if(stackSize  >  0)  {  pathNames[stackSize  -  1]  =  null;  }  else  {  popStack();  pathNames[	  	non-compiled	[CE]  	65	None	add
556	[BUG]  [BUGGY]  pathNames[stackSize    -    1]    =    null;    if(stackSize  >  0)  {  pathNames[stackSize  -  1]  =  null;  }  else  {  popStack();  pathNames[stackSize  -  1]  =  null;  }  if(stackSize  >  0)  {  pathNames[stackSize  -  1]  =  null;  if(stackSize  >  0)  {  pathNames[stackSize  -  1]  =  null;  }  [CE]  ';'  expected  [FE]      ArrayIndexOutOfBoundsException    [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {  popStack();      [BUGGY]  pathNames[stackSize    -    1]    =    null;    if(stackSize  >  0)  {  pathNames[stackSize  -  1]  =  null;  }  else  {  popStack();  pathNames[stackSize  -  1]  =  null;  }  if(stackSize  >  0)  {  pathNames[stackSize  -  1]  =  null;  if(stackSize  >  0)  {  pathNames[stackSize  -  1]  =  null;  }  [BUGGY]      }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	262	262	2	replace	pathNames[stackSize        -        1]        =        null;        if(stackSize    >    0)    {    pathNames[stackSize    -    1]    =    null;    }    else    {    popStack();    pathNames[stackSize    -    1]    =    null;    }    if(stackSize  >  0)  {  pathNames[stackSize  -  1]  =  null;  if(stackSize  >  0)  {  pathNames[stackSize  -  1]  =  null;  }	  	non-compiled	[CE]  ';'  expected	65	None	add
557	[BUG]  [BUGGY]  pathNames[stackSize    -    1]    =    null;    if(stackSize  >  0)  {  pathNames[stackSize  -  1]  =  null;  }  else  {  popStack();  pathNames[stackSize  -  1]  =  null;  }  if(stackSize  >  0)  {  pathNames[stackSize  -  1]  =  null;  if(stackSize  >  0)  {  pathNames[stackSize  -  1]  =  null;  }  else  {  popStack();  pathNames[s  [CE]  [FE]        ArrayIndexOutOfBoundsException    [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {  popStack();      [BUGGY]  pathNames[stackSize    -    1]    =    null;    if(stackSize  >  0)  {  pathNames[stackSize  -  1]  =  null;  }  else  {  popStack();  pathNames[stackSize  -  1]  =  null;  }  if(stackSize  >  0)  {  pathNames[stackSize  -  1]  =  null;  if(stackSize  >  0)  {  pathNames[stackSize  -  1]  =  null;  }  else  {  popStack();  pathNames[s  [BUGGY]      }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	262	262	2	replace	pathNames[stackSize        -        1]        =        null;        if(stackSize    >    0)    {    pathNames[stackSize    -    1]    =    null;    }    else    {    popStack();    pathNames[stackSize    -    1]    =    null;    }    if(stackSize  >  0)  {  pathNames[stackSize  -  1]  =  null;  if(stackSize  >  0)  {  pathNames[stackSize  -  1]  =  null;  }  else  {  popStack();  pathNames[s	  	non-compiled	[CE]  	65	None	add
558	[BUG]  [BUGGY]  if(stackSize!=  0)  {  int[]  result  =  new  int[stackSize  -  1];  for(int  i  =  0;  i  <  stackSize;  ++i)  {  result[i]  =  handleMissingName();  }  [CE]  ';'  expected  [FE]        ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {  popStack();      [BUGGY]  if(stackSize!=  0)  {  int[]  result  =  new  int[stackSize  -  1];  for(int  i  =  0;  i  <  stackSize;  ++i)  {  result[i]  =  handleMissingName();  }  [BUGGY]      }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	262	262	2	replace	if(stackSize!=  0)  {  int[]  result  =  new  int[stackSize  -  1];  for(int  i  =  0;  i  <  stackSize;  ++i)  {  result[i]  =  handleMissingName();  }	          if(stackSize    >    0)    {    int[]    result    =    new    int[stackSize    -    1];    for(int    i    =    0;    i    <    stackSize;    ++i)    {    result[i]    =    handleMissingName();    }    	non-compiled	[CE]  ';'  expected	86	None	replace
559	[BUG]  [BUGGY]  Result[]  result  =  new  Object[stackSize  -  1];  for(int  i  =  0;  i  <  stackSize;  ++i)  {  result[i]  =  handleMissingName();  }  [CE]  cannot  find  symbol  [FE]          ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {  popStack();      [BUGGY]  Result[]  result  =  new  Object[stackSize  -  1];  for(int  i  =  0;  i  <  stackSize;  ++i)  {  result[i]  =  handleMissingName();  }  [BUGGY]      }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	262	262	2	replace	Result[]  result  =  new  Object[stackSize  -  1];  for(int  i  =  0;  i  <  stackSize;  ++i)  {  result[i]  =  handleMissingName();  }	          if(stackSize    >    0)    {    int[]    result    =    new    int[stackSize    -    1];    for(int    i    =    0;    i    <    stackSize;    ++i)    {    result[i]    =    handleMissingName();    }    	non-compiled	[CE]  cannot  find  symbol	86	None	replace
560	[BUG]  [BUGGY]  if(stackSize  >  0)  {  int[]  result  =  new  int[pathNames.length  -  1];  for(int  i  =  0;  i  <  stackSize;  ++i)  {  result[i]  =  handleMissingName();  }  [CE]  ';'  expected  [FE]            ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {  popStack();      [BUGGY]  if(stackSize  >  0)  {  int[]  result  =  new  int[pathNames.length  -  1];  for(int  i  =  0;  i  <  stackSize;  ++i)  {  result[i]  =  handleMissingName();  }  [BUGGY]      }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	262	262	2	replace	if(stackSize  >  0)  {  int[]  result  =  new  int[pathNames.length  -  1];  for(int  i  =  0;  i  <  stackSize;  ++i)  {  result[i]  =  handleMissingName();  }	          if(stackSize    >    0)    {    int[]    result    =    new    int[stackSize    -    1];    for(int    i    =    0;    i    <    stackSize;    ++i)    {    result[i]    =    handleMissingName();    }    	non-compiled	[CE]  ';'  expected	86	None	replace
561	[BUG]  [BUGGY]  [FE]  NegativeArraySizeException  [FE]    IllegalArgumentException    [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {  popStack();      [BUGGY]  if(stackSize  ==  0)  {  pathIndices  =  new  int[stackSize  -  1];  System.arraycopy(pathNames,  0,  pathNames,  0,  stackSize  -  1);  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	262	262	2	add	if(stackSize  ==  0)  {  pathIndices  =  new  int[stackSize  -  1];  System.arraycopy(pathNames,  0,  pathNames,  0,  stackSize  -  1);  }  else  {  throw  new  IllegalArgumentException( " ");  }	  if(stackSize    >    0)    {    pathIndices    =    new    int[stackSize    -    1];    System.arraycopy(pathNames,    0,    pathNames,    0,    stackSize    -    1);    }    else    {    throw    new    IllegalArgumentException(   "   ");    }    	compilable	  [FE]  NegativeArraySizeException  	46	2	replace
562	[BUG]  [BUGGY]  if(stackSize  ==  0)  {  pathIndices  =  new  int[stackSize  -  1];  System.arraycopy(pathNames,  0,  pathNames,  0,  stackSize  -  1);  }  else  {  throw  new  IllegalArgumentException( " ");  }  [FE]  NegativeArraySizeException  [FE]    IllegalArgumentException    [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {  popStack();      [BUGGY]  if(stackSize  ==  0)  {  pathIndices  =  new  int[stackSize  -  1];  System.arraycopy(pathNames,  0,  pathNames,  0,  stackSize  -  1);  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	262	262	2	replace	if(stackSize  ==  0)  {  pathIndices  =  new  int[stackSize  -  1];  System.arraycopy(pathNames,  0,  pathNames,  0,  stackSize  -  1);  }  else  {  throw  new  IllegalArgumentException( " ");  }	  if(stackSize    >    0)    {    pathIndices    =    new    int[stackSize    -    1];    System.arraycopy(pathNames,    0,    pathNames,    0,    stackSize    -    1);    }    else    {    throw    new    IllegalArgumentException(   "   ");    }    	compilable	  [FE]  NegativeArraySizeException  	46	2	replace
563	[BUG]  [BUGGY]  [FE]  IllegalArgumentException  [FE]      IllegalArgumentException    [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {  popStack();      [BUGGY]  if(stackSize  >  0)  {  pathIndices  =  new  int[pathNames.length  -  1];  System.arraycopy(pathNames,  0,  pathNames,  0,  stackSize  -  1);  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	262	262	2	add	if(stackSize  >  0)  {  pathIndices  =  new  int[pathNames.length  -  1];  System.arraycopy(pathNames,  0,  pathNames,  0,  stackSize  -  1);  }  else  {  throw  new  IllegalArgumentException( " ");  }	  if(stackSize    >    0)    {    pathIndices    =    new    int[stackSize    -    1];    System.arraycopy(pathNames,    0,    pathNames,    0,    stackSize    -    1);    }    else    {    throw    new    IllegalArgumentException(   "   ");    }    	compilable	  [FE]  IllegalArgumentException  	46	2	replace
564	[BUG]  [BUGGY]  if(stackSize  >  0)  {  pathIndices  =  new  int[pathNames.length  -  1];  System.arraycopy(pathNames,  0,  pathNames,  0,  stackSize  -  1);  }  else  {  throw  new  IllegalArgumentException( " ");  }  [FE]  IllegalArgumentException  [FE]      IllegalArgumentException    [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {  popStack();      [BUGGY]  if(stackSize  >  0)  {  pathIndices  =  new  int[pathNames.length  -  1];  System.arraycopy(pathNames,  0,  pathNames,  0,  stackSize  -  1);  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	262	262	2	replace	if(stackSize  >  0)  {  pathIndices  =  new  int[pathNames.length  -  1];  System.arraycopy(pathNames,  0,  pathNames,  0,  stackSize  -  1);  }  else  {  throw  new  IllegalArgumentException( " ");  }	  if(stackSize    >    0)    {    pathIndices    =    new    int[stackSize    -    1];    System.arraycopy(pathNames,    0,    pathNames,    0,    stackSize    -    1);    }    else    {    throw    new    IllegalArgumentException(   "   ");    }    	compilable	  [FE]  IllegalArgumentException  	46	2	replace
565	[BUG]  [BUGGY]  pathNames[resultSize  -  1]  =  null;  PathIndexOutOfBoundsException  e  =  new  PathIndexOutOfBoundsException();  pathNames[stackSize  -  1]  =  null;  [CE]  cannot  find  symbol  resultSize  [FE]            ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {  popStack();      [BUGGY]  pathNames[resultSize  -  1]  =  null;  PathIndexOutOfBoundsException  e  =  new  PathIndexOutOfBoundsException();  pathNames[stackSize  -  1]  =  null;  [BUGGY]      }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	262	262	2	replace	pathNames[resultSize  -  1]  =  null;  PathIndexOutOfBoundsException  e  =  new  PathIndexOutOfBoundsException();  pathNames[stackSize  -  1]  =  null;	  pathNames[stackSize    -    1]    =    null;    PathIndexOutOfBoundsException    e    =    new    PathIndexOutOfBoundsException();    pathNames[stackSize    -    1]    =    null;    	non-compiled	[CE]  cannot  find  symbol  resultSize	29	None	replace
566	[BUG]  [BUGGY]  pathNames[stackSize  -  1]  =  null;  pathIndexOutOfBoundsException  e  =  new  PathIndexOutOfBoundsException();  pathNames[stackSize  -  1]  =  null;  [CE]  cannot  find  symbol  [FE]              ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {  popStack();      [BUGGY]  pathNames[stackSize  -  1]  =  null;  pathIndexOutOfBoundsException  e  =  new  PathIndexOutOfBoundsException();  pathNames[stackSize  -  1]  =  null;  [BUGGY]      }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	262	262	2	replace	pathNames[stackSize  -  1]  =  null;  pathIndexOutOfBoundsException  e  =  new  PathIndexOutOfBoundsException();  pathNames[stackSize  -  1]  =  null;	  pathNames[stackSize    -    1]    =    null;    PathIndexOutOfBoundsException    e    =    new    PathIndexOutOfBoundsException();    pathNames[stackSize    -    1]    =    null;    	non-compiled	[CE]  cannot  find  symbol	29	None	replace
567	[BUG]  [BUGGY]  pathNames[stackSize  -  1]  =  null;  pathIndices[stackSize  -  1]  =  null;  [CE]  incompatible  types  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {  popStack();      [BUGGY]  pathNames[stackSize  -  1]  =  null;  pathIndices[stackSize  -  1]  =  null;  [BUGGY]      }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	262	262	2	replace	pathNames[stackSize  -  1]  =  null;  pathIndices[stackSize  -  1]  =  null;	  pathNames[stackSize    -    1]    =    null;    pathNames[stackSize    -    1]    =    null;    	non-compiled	[CE]  incompatible  types	27	None	replace
568	[BUG]  [BUGGY]  if(stackSize  >  0)  {  pathIndices[stackSize  -  2]  =  null;  }  else  {  popStack();  }  [CE]  incompatible  types  [FE]                    ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {  popStack();      [BUGGY]  if(stackSize  >  0)  {  pathIndices[stackSize  -  2]  =  null;  }  else  {  popStack();  }  [BUGGY]      }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	262	262	2	replace	if(stackSize  >  0)  {  pathIndices[stackSize  -  2]  =  null;  }  else  {  popStack();  }	  if(stackSize    >    0)    {    pathIndices[stackSize    -    1]    =    null;    }    else    {    popStack();    }    	non-compiled	[CE]  incompatible  types	25	None	replace
569	[BUG]  [BUGGY]  Indices[stackSize  -  1]  =  null;  [CE]  cannot  find  symbol  Indices  [FE]                      ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {  popStack();      [BUGGY]  Indices[stackSize  -  1]  =  null;  [BUGGY]      }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	262	262	2	replace	Indices[stackSize  -  1]  =  null;	  if(stackSize    >    0)    {    pathIndices[stackSize    -    1]    =    null;    }    else    {    popStack();    }    	non-compiled	[CE]  cannot  find  symbol  Indices	25	None	replace
570	[BUG]  [BUGGY]  pathNames[result.length  -  1]  =  null;  [CE]  cannot  find  symbol  result  [FE]          ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {  popStack();      [BUGGY]  pathNames[result.length  -  1]  =  null;  [BUGGY]      }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	262	262	2	replace	pathNames[result.length  -  1]  =  null;	  pathNames[stackSize    -    1]    =    null;    PathIndexOutOfBoundsException.printStackTrace();    pathNames[stackSize    -    1]    =    null;    	non-compiled	[CE]  cannot  find  symbol  result	28	None	replace
571	[BUG]  [BUGGY]  pathNames[resultSize  -  1]  =  null;  [CE]  cannot  find  symbol  resultSize  [FE]            ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {  popStack();      [BUGGY]  pathNames[resultSize  -  1]  =  null;  [BUGGY]      }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	262	262	2	replace	pathNames[resultSize  -  1]  =  null;	  pathNames[stackSize    -    1]    =    null;    PathIndexOutOfBoundsException.printStackTrace();    pathNames[stackSize    -    1]    =    null;    	non-compiled	[CE]  cannot  find  symbol  resultSize	28	None	replace
572	[BUG]  [BUGGY]  [FE]  NegativeArraySizeException  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {  popStack();      [BUGGY]  Object[]  result  =  new  Object[stackSize  -  1];  System.arraycopy(pathNames,  0,  result,  0,  stackSize  -  1);  [BUGGY]      }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	262	262	2	add	Object[]  result  =  new  Object[stackSize  -  1];  System.arraycopy(pathNames,  0,  result,  0,  stackSize  -  1);	  if(stackSize    >    0)    {    int[]    result    =    new    int[stackSize    -    1];    System.arraycopy(stack,    0,    pathNames,    0,    stackSize    -    1);    }    	compilable	  [FE]  NegativeArraySizeException  	81	2	replace
573	[BUG]  [BUGGY]  Object[]  result  =  new  Object[stackSize  -  1];  System.arraycopy(pathNames,  0,  result,  0,  stackSize  -  1);  [FE]  NegativeArraySizeException  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {  popStack();      [BUGGY]  Object[]  result  =  new  Object[stackSize  -  1];  System.arraycopy(pathNames,  0,  result,  0,  stackSize  -  1);  [BUGGY]      }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	262	262	2	replace	Object[]  result  =  new  Object[stackSize  -  1];  System.arraycopy(pathNames,  0,  result,  0,  stackSize  -  1);	  if(stackSize    >    0)    {    int[]    result    =    new    int[stackSize    -    1];    System.arraycopy(stack,    0,    pathNames,    0,    stackSize    -    1);    }    	compilable	  [FE]  NegativeArraySizeException  	81	2	replace
574	[BUG]  [BUGGY]  [FE]  ArrayIndexOutOfBoundsException  [FE]      ArrayIndexOutOfBoundsException    [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {  popStack();      [BUGGY]  if(stackSize  >  0)  {  int[]  result  =  new  int[pathNames.length  -  1];  System.arraycopy(stack,  0,  pathNames,  0,  stackSize  -  1);  }  [BUGGY]      }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	262	262	2	add	if(stackSize  >  0)  {  int[]  result  =  new  int[pathNames.length  -  1];  System.arraycopy(stack,  0,  pathNames,  0,  stackSize  -  1);  }	  if(stackSize    >    0)    {    int[]    result    =    new    int[stackSize    -    1];    System.arraycopy(stack,    0,    pathNames,    0,    stackSize    -    1);    }    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	81	2	replace
575	[BUG]  [BUGGY]  if(stackSize  >  0)  {  int[]  result  =  new  int[pathNames.length  -  1];  System.arraycopy(stack,  0,  pathNames,  0,  stackSize  -  1);  }  [FE]  ArrayIndexOutOfBoundsException  [FE]      ArrayIndexOutOfBoundsException    [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {  popStack();      [BUGGY]  if(stackSize  >  0)  {  int[]  result  =  new  int[pathNames.length  -  1];  System.arraycopy(stack,  0,  pathNames,  0,  stackSize  -  1);  }  [BUGGY]      }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	262	262	2	replace	if(stackSize  >  0)  {  int[]  result  =  new  int[pathNames.length  -  1];  System.arraycopy(stack,  0,  pathNames,  0,  stackSize  -  1);  }	  if(stackSize    >    0)    {    int[]    result    =    new    int[stackSize    -    1];    System.arraycopy(stack,    0,    pathNames,    0,    stackSize    -    1);    }    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	81	2	replace
576	[BUG]  [BUGGY]  ArrayList  <  String>  result  =  new  ArrayList  <  String>();  System.arraycopy(pathNames,  0,  result,  0,  stackSize  -  1);  [CE]  cannot  find  symbol  [FE]        ArrayIndexOutOfBoundsException    [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {  popStack();      [BUGGY]  ArrayList  <  String>  result  =  new  ArrayList  <  String>();  System.arraycopy(pathNames,  0,  result,  0,  stackSize  -  1);  [BUGGY]      }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	262	262	2	replace	ArrayList  <  String>  result  =  new  ArrayList  <  String>();  System.arraycopy(pathNames,  0,  result,  0,  stackSize  -  1);	  if(stackSize    >    0)    {    int[]    result    =    new    int[stackSize    -    1];    System.arraycopy(stack,    0,    pathNames,    0,    stackSize    -    1);    }    	non-compiled	[CE]  cannot  find  symbol	81	None	replace
577	[BUG]  [BUGGY]  [FE]  ArrayIndexOutOfBoundsException  [FE]          ArrayIndexOutOfBoundsException    [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {  popStack();      [BUGGY]  if(stackSize  >  0)  {  int[]  result  =  new  int[stackSize  -  1];  System.arraycopy(pathNames,  0,  result,  1,  stackSize  -  1);  }  [BUGGY]      }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	262	262	2	add	if(stackSize  >  0)  {  int[]  result  =  new  int[stackSize  -  1];  System.arraycopy(pathNames,  0,  result,  1,  stackSize  -  1);  }	  if(stackSize    >    0)    {    int[]    result    =    new    int[stackSize    -    1];    System.arraycopy(stack,    0,    pathNames,    0,    stackSize    -    1);    }    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	81	2	replace
578	[BUG]  [BUGGY]  if(stackSize  >  0)  {  int[]  result  =  new  int[stackSize  -  1];  System.arraycopy(pathNames,  0,  result,  1,  stackSize  -  1);  }  [FE]  ArrayIndexOutOfBoundsException  [FE]          ArrayIndexOutOfBoundsException    [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {  popStack();      [BUGGY]  if(stackSize  >  0)  {  int[]  result  =  new  int[stackSize  -  1];  System.arraycopy(pathNames,  0,  result,  1,  stackSize  -  1);  }  [BUGGY]      }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	262	262	2	replace	if(stackSize  >  0)  {  int[]  result  =  new  int[stackSize  -  1];  System.arraycopy(pathNames,  0,  result,  1,  stackSize  -  1);  }	  if(stackSize    >    0)    {    int[]    result    =    new    int[stackSize    -    1];    System.arraycopy(stack,    0,    pathNames,    0,    stackSize    -    1);    }    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	81	2	replace
579	[BUG]  [BUGGY]  pathNames[stackSize  -  1]  =     "null   "  +  JsonToken.END_ARRAY;  pathNames[stackSize  -  1]  =   "null   "  +  JsonToken.END_ARRAY);  [CE]  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {  popStack();      [BUGGY]  pathNames[stackSize  -  1]  =     "null   "  +  JsonToken.END_ARRAY;  pathNames[stackSize  -  1]  =   "null   "  +  JsonToken.END_ARRAY);  [BUGGY]      }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	262	262	2	replace	pathNames[stackSize    -    1]    =       "null   "    +    JsonToken.END_ARRAY;    pathNames[stackSize  -  1]  =   "null   "  +  JsonToken.END_ARRAY);	  	non-compiled	[CE]  	61	None	add
580	[BUG]  [BUGGY]  pathNames[stackSize  -  1]  =  JsonToken.FIELD_NAME  +  1;  [CE]  cannot  find  symbol  FIELD_NAME  [FE]                      ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {  popStack();      [BUGGY]  pathNames[stackSize  -  1]  =  JsonToken.FIELD_NAME  +  1;  [BUGGY]      }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	262	262	2	replace	pathNames[stackSize  -  1]  =  JsonToken.FIELD_NAME  +  1;	  pathNames[stackSize    -    1]    =    JsonToken.FIELD_NAME;    	non-compiled	[CE]  cannot  find  symbol  FIELD_NAME	3	None	replace
581	[BUG]  [BUGGY]  [FE]  ArrayIndexOutOfBoundsException  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {  popStack();      [BUGGY]  pathNames[stackSize  -  1]  =  null;  if(pathNames.length  >  0)  {  pathNames[stackSize  -  1]  =  null;  }  [BUGGY]      }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	262	262	2	add	pathNames[stackSize  -  1]  =  null;  if(pathNames.length  >  0)  {  pathNames[stackSize  -  1]  =  null;  }	  pathNames[stackSize    -    1]    =    null;    if(stackSize    >    0)    {    pathNames[stackSize    -    1]    =    null;    }    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	70	2	replace
582	[BUG]  [BUGGY]  pathNames[stackSize  -  1]  =  null;  if(pathNames.length  >  0)  {  pathNames[stackSize  -  1]  =  null;  }  [FE]  ArrayIndexOutOfBoundsException  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {  popStack();      [BUGGY]  pathNames[stackSize  -  1]  =  null;  if(pathNames.length  >  0)  {  pathNames[stackSize  -  1]  =  null;  }  [BUGGY]      }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	262	262	2	replace	pathNames[stackSize  -  1]  =  null;  if(pathNames.length  >  0)  {  pathNames[stackSize  -  1]  =  null;  }	  pathNames[stackSize    -    1]    =    null;    if(stackSize    >    0)    {    pathNames[stackSize    -    1]    =    null;    }    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	70	2	replace
583	[BUG]  [BUGGY]  pathNames[stackSize  -  1]  =  null;  if(result  ==  null)  {  pathNames[stackSize  -  1]  =  null;  }  [CE]  cannot  find  symbol  result  [FE]      ArrayIndexOutOfBoundsException    [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {  popStack();      [BUGGY]  pathNames[stackSize  -  1]  =  null;  if(result  ==  null)  {  pathNames[stackSize  -  1]  =  null;  }  [BUGGY]      }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	262	262	2	replace	pathNames[stackSize  -  1]  =  null;  if(result  ==  null)  {  pathNames[stackSize  -  1]  =  null;  }	  pathNames[stackSize    -    1]    =    null;    if(stackSize    >    0)    {    pathNames[stackSize    -    1]    =    null;    }    	non-compiled	[CE]  cannot  find  symbol  result	70	None	replace
584	[BUG]  [BUGGY]  [FE]  ArrayIndexOutOfBoundsException  [FE]        ArrayIndexOutOfBoundsException    [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {  popStack();      [BUGGY]  pathNames[0]  =  null;  if(stackSize  >  0)  {  pathNames[0]  =  null;  }  [BUGGY]      }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	262	262	2	add	pathNames[0]  =  null;  if(stackSize  >  0)  {  pathNames[0]  =  null;  }	  pathNames[stackSize    -    1]    =    null;    if(stackSize    >    0)    {    pathNames[stackSize    -    1]    =    null;    }    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	70	2	replace
585	[BUG]  [BUGGY]  pathNames[0]  =  null;  if(stackSize  >  0)  {  pathNames[0]  =  null;  }  [FE]  ArrayIndexOutOfBoundsException  [FE]        ArrayIndexOutOfBoundsException    [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {  popStack();      [BUGGY]  pathNames[0]  =  null;  if(stackSize  >  0)  {  pathNames[0]  =  null;  }  [BUGGY]      }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	262	262	2	replace	pathNames[0]  =  null;  if(stackSize  >  0)  {  pathNames[0]  =  null;  }	  pathNames[stackSize    -    1]    =    null;    if(stackSize    >    0)    {    pathNames[stackSize    -    1]    =    null;    }    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	70	2	replace
586	[BUG]  [BUGGY]  [FE]  ArrayIndexOutOfBoundsException  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {  popStack();      [BUGGY]  if(stackSize  >  0)  {  pathNames[stackSize  -  1]  =  null;  }  else  {  popStack();  }  if(stackSize  >  1)  {  pathNames[stackSize  -  1]  =  null;  }  else  {  popStack();  }  [BUGGY]      }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	262	262	2	add	if(stackSize    >    0)    {    pathNames[stackSize    -    1]    =    null;    }    else    {    popStack();    }    if(stackSize  >  1)  {  pathNames[stackSize  -  1]  =  null;  }  else  {  popStack();  }	  	compilable	  [FE]  ArrayIndexOutOfBoundsException  	23	2	add
587	[BUG]  [BUGGY]  if(stackSize  >  0)  {  pathNames[stackSize  -  1]  =  null;  }  else  {  popStack();  }  if(stackSize  >  1)  {  pathNames[stackSize  -  1]  =  null;  }  else  {  popStack();  }  [FE]  ArrayIndexOutOfBoundsException  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {  popStack();      [BUGGY]  if(stackSize  >  0)  {  pathNames[stackSize  -  1]  =  null;  }  else  {  popStack();  }  if(stackSize  >  1)  {  pathNames[stackSize  -  1]  =  null;  }  else  {  popStack();  }  [BUGGY]      }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	262	262	2	replace	if(stackSize    >    0)    {    pathNames[stackSize    -    1]    =    null;    }    else    {    popStack();    }    if(stackSize  >  1)  {  pathNames[stackSize  -  1]  =  null;  }  else  {  popStack();  }	  	compilable	  [FE]  ArrayIndexOutOfBoundsException  	23	2	add
588	[BUG]  [BUGGY]  pathNames[stackSize  -  1]  =     "null   "  +  JsonToken.NAME;  PathIndexOutOfBoundsException.printStackTrace();  [CE]  cannot  find  symbol  PathIndexOutOfBoundsException  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {  popStack();      [BUGGY]  pathNames[stackSize  -  1]  =     "null   "  +  JsonToken.NAME;  PathIndexOutOfBoundsException.printStackTrace();  [BUGGY]      }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	262	262	2	replace	pathNames[stackSize    -    1]    =       "null   "    +    JsonToken.NAME;    PathIndexOutOfBoundsException.printStackTrace();	  	non-compiled	[CE]  cannot  find  symbol  PathIndexOutOfBoundsException	90	None	add
589	[BUG]  [BUGGY]  [FE]  ArrayIndexOutOfBoundsException  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {  popStack();      [BUGGY]  pathNames[stackSize  -  2]  =  null;  if(stackSize  >  0)  {  pathNames[stackSize  -  2]  =  null;  }  [BUGGY]      }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	262	262	2	add	pathNames[stackSize  -  2]  =  null;  if(stackSize  >  0)  {  pathNames[stackSize  -  2]  =  null;  }	  pathNames[stackSize    -    1]    =    null;    if(stackSize    >    0)    {    pathNames[stackSize    -    1]    =    null;    }    else    {    popStack();    throw    new    RuntimeException(   "   ");    }    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	75	2	replace
590	[BUG]  [BUGGY]  pathNames[stackSize  -  2]  =  null;  if(stackSize  >  0)  {  pathNames[stackSize  -  2]  =  null;  }  [FE]  ArrayIndexOutOfBoundsException  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {  popStack();      [BUGGY]  pathNames[stackSize  -  2]  =  null;  if(stackSize  >  0)  {  pathNames[stackSize  -  2]  =  null;  }  [BUGGY]      }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	262	262	2	replace	pathNames[stackSize  -  2]  =  null;  if(stackSize  >  0)  {  pathNames[stackSize  -  2]  =  null;  }	  pathNames[stackSize    -    1]    =    null;    if(stackSize    >    0)    {    pathNames[stackSize    -    1]    =    null;    }    else    {    popStack();    throw    new    RuntimeException(   "   ");    }    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	75	2	replace
591	[BUG]  [BUGGY]  pathIndices[stackSize  -  1]  =  null;  if(stackSize  >  0)  {  pathNames[stackSize  -  1]  =  null;  }  else  {  popStack();  throw  new  RuntimeException( " ");  }  [CE]  incompatible  types  [FE]      ArrayIndexOutOfBoundsException    [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {  popStack();      [BUGGY]  pathIndices[stackSize  -  1]  =  null;  if(stackSize  >  0)  {  pathNames[stackSize  -  1]  =  null;  }  else  {  popStack();  throw  new  RuntimeException( " ");  }  [BUGGY]      }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	262	262	2	replace	pathIndices[stackSize  -  1]  =  null;  if(stackSize  >  0)  {  pathNames[stackSize  -  1]  =  null;  }  else  {  popStack();  throw  new  RuntimeException( " ");  }	  pathNames[stackSize    -    1]    =    null;    if(stackSize    >    0)    {    pathNames[stackSize    -    1]    =    null;    }    else    {    popStack();    throw    new    RuntimeException(   "   ");    }    	non-compiled	[CE]  incompatible  types	75	None	replace
592	[BUG]  [BUGGY]  if(stackSize  >  0)  {  int[]  result  =  new  int[pathNames.length  -  1];  System.arraycopy(pathNames,  0,  result,  0,  stackSize  -  1,  stackSize  -  1);  }  [CE]  method  arraycopy  in  class  System  cannot  be  applied  to  given  types;  [FE]                ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {  popStack();      [BUGGY]  if(stackSize  >  0)  {  int[]  result  =  new  int[pathNames.length  -  1];  System.arraycopy(pathNames,  0,  result,  0,  stackSize  -  1,  stackSize  -  1);  }  [BUGGY]      }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	262	262	2	replace	if(stackSize  >  0)  {  int[]  result  =  new  int[pathNames.length  -  1];  System.arraycopy(pathNames,  0,  result,  0,  stackSize  -  1,  stackSize  -  1);  }	  if(stackSize    >    0)    {    int[]    result    =    new    int[stackSize    -    1];    System.arraycopy(stack,    0,    pathNames,    0,    stackSize    -    1,    stackSize    -    1);    }    	non-compiled	[CE]  method  arraycopy  in  class  System  cannot  be  applied  to  given  types;	82	None	replace
593	[BUG]  [BUGGY]  Arrays.arraycopy(pathNames,  0,  result,  0,  stackSize  -  1,  stackSize  -  1);  [CE]  cannot  find  symbol  result  [FE]                  ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {  popStack();      [BUGGY]  Arrays.arraycopy(pathNames,  0,  result,  0,  stackSize  -  1,  stackSize  -  1);  [BUGGY]      }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	262	262	2	replace	Arrays.arraycopy(pathNames,  0,  result,  0,  stackSize  -  1,  stackSize  -  1);	  if(stackSize    >    0)    {    int[]    result    =    new    int[stackSize    -    1];    System.arraycopy(stack,    0,    pathNames,    0,    stackSize    -    1,    stackSize    -    1);    }    	non-compiled	[CE]  cannot  find  symbol  result	82	None	replace
594	[BUG]  [BUGGY]  int[]  result  =  new  int[pathNames.length  -  1];  System.arraycopy(stack,  0,  pathNames,  0,  stackSize  -  1,  stackSize  -  1);  [CE]  method  arraycopy  in  class  System  cannot  be  applied  to  given  types;  [FE]                    ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {  popStack();      [BUGGY]  int[]  result  =  new  int[pathNames.length  -  1];  System.arraycopy(stack,  0,  pathNames,  0,  stackSize  -  1,  stackSize  -  1);  [BUGGY]      }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	262	262	2	replace	int[]  result  =  new  int[pathNames.length  -  1];  System.arraycopy(stack,  0,  pathNames,  0,  stackSize  -  1,  stackSize  -  1);	  if(stackSize    >    0)    {    int[]    result    =    new    int[stackSize    -    1];    System.arraycopy(stack,    0,    pathNames,    0,    stackSize    -    1,    stackSize    -    1);    }    	non-compiled	[CE]  method  arraycopy  in  class  System  cannot  be  applied  to  given  types;	82	None	replace
595	[BUG]  [BUGGY]  pathNames[stackSize  -  1]  =   "null ",  JsonToken.END_ARRAY;  [CE]  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {  popStack();      [BUGGY]  pathNames[stackSize  -  1]  =   "null ",  JsonToken.END_ARRAY;  [BUGGY]      }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	262	262	2	replace	pathNames[stackSize  -  1]  =   "null ",  JsonToken.END_ARRAY;	  pathNames[stackSize    -    1]    =       "null   "    +    JsonToken.END_ARRAY;    	non-compiled	[CE]  	62	None	replace
596	[BUG]  [BUGGY]  pathNames[result.length  -  1]  =  null;  PathIndexOutOfBoundsException.printStackTrace(pathNames);  pathNames[stackSize  -  1]  =  null;  [CE]  cannot  find  symbol  result  [FE]                  ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {  popStack();      [BUGGY]  pathNames[result.length  -  1]  =  null;  PathIndexOutOfBoundsException.printStackTrace(pathNames);  pathNames[stackSize  -  1]  =  null;  [BUGGY]      }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	262	262	2	replace	pathNames[result.length  -  1]  =  null;  PathIndexOutOfBoundsException.printStackTrace(pathNames);  pathNames[stackSize  -  1]  =  null;	  pathNames[stackSize    -    1]    =    null;    PathIndexOutOfBoundsException.printStackTrace(pathNames);    pathNames[stackSize    -    1]    =    null;    	non-compiled	[CE]  cannot  find  symbol  result	32	None	replace
597	[BUG]  [BUGGY]  pathNames[peek()  -  1]  =  null;  PathIndexOutOfBoundsException.printStackTrace(pathNames);  pathNames[stackSize  -  1]  =  null;  [CE]  bad  operand  types  for  binary  operator  '-'  [FE]                    ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {  popStack();      [BUGGY]  pathNames[peek()  -  1]  =  null;  PathIndexOutOfBoundsException.printStackTrace(pathNames);  pathNames[stackSize  -  1]  =  null;  [BUGGY]      }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	262	262	2	replace	pathNames[peek()  -  1]  =  null;  PathIndexOutOfBoundsException.printStackTrace(pathNames);  pathNames[stackSize  -  1]  =  null;	  pathNames[stackSize    -    1]    =    null;    PathIndexOutOfBoundsException.printStackTrace(pathNames);    pathNames[stackSize    -    1]    =    null;    	non-compiled	[CE]  bad  operand  types  for  binary  operator  '-'	32	None	replace
598	[BUG]  [BUGGY]  [FE]  ArrayIndexOutOfBoundsException  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {  popStack();      [BUGGY]  pathNames[stackSize    -    1]    =    null;    if(stackSize  >  0)  {  pathNames[stackSize  -  1]  =  null;  }  pathNames[stackSize  -  2]  =  null;  if(stackSize  >  0)  {  pathNames[stackSize  -  1]  =  null;  }  [BUGGY]      }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	262	262	2	add	pathNames[stackSize        -        1]        =        null;        if(stackSize    >    0)    {    pathNames[stackSize    -    1]    =    null;    }    pathNames[stackSize  -  2]  =  null;  if(stackSize  >  0)  {  pathNames[stackSize  -  1]  =  null;  }	  	compilable	  [FE]  ArrayIndexOutOfBoundsException  	69	2	add
599	[BUG]  [BUGGY]  pathNames[stackSize    -    1]    =    null;    if(stackSize  >  0)  {  pathNames[stackSize  -  1]  =  null;  }  pathNames[stackSize  -  2]  =  null;  if(stackSize  >  0)  {  pathNames[stackSize  -  1]  =  null;  }  [FE]  ArrayIndexOutOfBoundsException  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {  popStack();      [BUGGY]  pathNames[stackSize    -    1]    =    null;    if(stackSize  >  0)  {  pathNames[stackSize  -  1]  =  null;  }  pathNames[stackSize  -  2]  =  null;  if(stackSize  >  0)  {  pathNames[stackSize  -  1]  =  null;  }  [BUGGY]      }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	262	262	2	replace	pathNames[stackSize        -        1]        =        null;        if(stackSize    >    0)    {    pathNames[stackSize    -    1]    =    null;    }    pathNames[stackSize  -  2]  =  null;  if(stackSize  >  0)  {  pathNames[stackSize  -  1]  =  null;  }	  	compilable	  [FE]  ArrayIndexOutOfBoundsException  	69	2	add
600	[BUG]  [BUGGY]  pathNames[stackSize    -    1]    =    null;    if(stackSize  >  0)  {  pathNames[stackSize  -  1]  =  null;  }  pathNames[stackSize  -  1]  =  null;  if(seackSize  >  0)  {  pathNames[stackSize  -  1]  =  null;  }  [CE]  cannot  find  symbol  seackSize  [FE]      ArrayIndexOutOfBoundsException    [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {  popStack();      [BUGGY]  pathNames[stackSize    -    1]    =    null;    if(stackSize  >  0)  {  pathNames[stackSize  -  1]  =  null;  }  pathNames[stackSize  -  1]  =  null;  if(seackSize  >  0)  {  pathNames[stackSize  -  1]  =  null;  }  [BUGGY]      }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	262	262	2	replace	pathNames[stackSize        -        1]        =        null;        if(stackSize    >    0)    {    pathNames[stackSize    -    1]    =    null;    }    pathNames[stackSize  -  1]  =  null;  if(seackSize  >  0)  {  pathNames[stackSize  -  1]  =  null;  }	  	non-compiled	[CE]  cannot  find  symbol  seackSize	69	None	add
601	[BUG]  [BUGGY]  pathNames[stackSize    -    1]    =    null;    if(stackSize  >  0)  {  pathNames[stackSize  -  1]  =  null;  }  if(stackSize  >  0)  {  pathNames[stackSize  -  1]  =  null;  if(stackSize  >  0)  {  pathNames[stackSize  -  1]  =  [CE]  ';'  expected  [FE]        ArrayIndexOutOfBoundsException    [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {  popStack();      [BUGGY]  pathNames[stackSize    -    1]    =    null;    if(stackSize  >  0)  {  pathNames[stackSize  -  1]  =  null;  }  if(stackSize  >  0)  {  pathNames[stackSize  -  1]  =  null;  if(stackSize  >  0)  {  pathNames[stackSize  -  1]  =  [BUGGY]      }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	262	262	2	replace	pathNames[stackSize        -        1]        =        null;        if(stackSize    >    0)    {    pathNames[stackSize    -    1]    =    null;    }    if(stackSize  >  0)  {  pathNames[stackSize  -  1]  =  null;  if(stackSize  >  0)  {  pathNames[stackSize  -  1]  =	  	non-compiled	[CE]  ';'  expected	69	None	add
602	[BUG]  [BUGGY]  [FE]  ArrayIndexOutOfBoundsException  [FE]          ArrayIndexOutOfBoundsException    [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {  popStack();      [BUGGY]  pathNames[stackSize    -    1]    =    null;    if(stackSize  >  0)  {  pathNames[stackSize  -  1]  =  null;  }  pathNames[stackSize  -  1]  =  null;  if(stackSize  >  1)  {  pathNames[stackSize  -  1]  =  null;  }  [BUGGY]      }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	262	262	2	add	pathNames[stackSize        -        1]        =        null;        if(stackSize    >    0)    {    pathNames[stackSize    -    1]    =    null;    }    pathNames[stackSize  -  1]  =  null;  if(stackSize  >  1)  {  pathNames[stackSize  -  1]  =  null;  }	  	compilable	  [FE]  ArrayIndexOutOfBoundsException  	69	2	add
603	[BUG]  [BUGGY]  pathNames[stackSize    -    1]    =    null;    if(stackSize  >  0)  {  pathNames[stackSize  -  1]  =  null;  }  pathNames[stackSize  -  1]  =  null;  if(stackSize  >  1)  {  pathNames[stackSize  -  1]  =  null;  }  [FE]  ArrayIndexOutOfBoundsException  [FE]          ArrayIndexOutOfBoundsException    [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {  popStack();      [BUGGY]  pathNames[stackSize    -    1]    =    null;    if(stackSize  >  0)  {  pathNames[stackSize  -  1]  =  null;  }  pathNames[stackSize  -  1]  =  null;  if(stackSize  >  1)  {  pathNames[stackSize  -  1]  =  null;  }  [BUGGY]      }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	262	262	2	replace	pathNames[stackSize        -        1]        =        null;        if(stackSize    >    0)    {    pathNames[stackSize    -    1]    =    null;    }    pathNames[stackSize  -  1]  =  null;  if(stackSize  >  1)  {  pathNames[stackSize  -  1]  =  null;  }	  	compilable	  [FE]  ArrayIndexOutOfBoundsException  	69	2	add
604	[BUG]  [BUGGY]  Path[]  pathNames  =  pathNames[stackSize  -  1];  [CE]  cannot  find  symbol  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {  popStack();      [BUGGY]  Path[]  pathNames  =  pathNames[stackSize  -  1];  [BUGGY]      }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	262	262	2	replace	Path[]  pathNames  =  pathNames[stackSize  -  1];	  if(stackSize    >    0)    {    pathNames[stackSize    -    1]    =    null;    }    	non-compiled	[CE]  cannot  find  symbol	20	None	replace
605	[BUG]  [BUGGY]  Integer[]  result  =  new  Integer[stackSize  -  1];  for(int  i  =  0;  i  <  stackSize;  ++i)  {  result[i]  =  handleMissingName();  }  [CE]  cannot  find  symbol  [FE]        ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {  popStack();      [BUGGY]  Integer[]  result  =  new  Integer[stackSize  -  1];  for(int  i  =  0;  i  <  stackSize;  ++i)  {  result[i]  =  handleMissingName();  }  [BUGGY]      }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	262	262	2	replace	Integer[]  result  =  new  Integer[stackSize  -  1];  for(int  i  =  0;  i  <  stackSize;  ++i)  {  result[i]  =  handleMissingName();  }	          if(stackSize    >    0)    {    int[]    result    =    new    int[stackSize    -    1];    for(int    i    =    0;    i    <    stackSize;    ++i)    {    result[i]    =    handleMissingName();    }    	non-compiled	[CE]  cannot  find  symbol	86	None	replace
606	[BUG]  [BUGGY]  Object[]  result  =  new  Object[stackSize  -  1];  for(int  i  =  0;  i  <  stackSize;  ++i)  {  result[i]  =  handleMissingName();  }  [CE]  cannot  find  symbol  [FE]          ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {  popStack();      [BUGGY]  Object[]  result  =  new  Object[stackSize  -  1];  for(int  i  =  0;  i  <  stackSize;  ++i)  {  result[i]  =  handleMissingName();  }  [BUGGY]      }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	262	262	2	replace	Object[]  result  =  new  Object[stackSize  -  1];  for(int  i  =  0;  i  <  stackSize;  ++i)  {  result[i]  =  handleMissingName();  }	          if(stackSize    >    0)    {    int[]    result    =    new    int[stackSize    -    1];    for(int    i    =    0;    i    <    stackSize;    ++i)    {    result[i]    =    handleMissingName();    }    	non-compiled	[CE]  cannot  find  symbol	86	None	replace
607	[BUG]  [BUGGY]  if(stackSize  <  1)  {  int[]  result  =  new  int[stackSize  -  1];  for(int  i  =  0;  i  <  stackSize;  ++i)  {  result[i]  =  handleMissingName();  }  [CE]  ';'  expected  [FE]            ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {  popStack();      [BUGGY]  if(stackSize  <  1)  {  int[]  result  =  new  int[stackSize  -  1];  for(int  i  =  0;  i  <  stackSize;  ++i)  {  result[i]  =  handleMissingName();  }  [BUGGY]      }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	262	262	2	replace	if(stackSize  <  1)  {  int[]  result  =  new  int[stackSize  -  1];  for(int  i  =  0;  i  <  stackSize;  ++i)  {  result[i]  =  handleMissingName();  }	          if(stackSize    >    0)    {    int[]    result    =    new    int[stackSize    -    1];    for(int    i    =    0;    i    <    stackSize;    ++i)    {    result[i]    =    handleMissingName();    }    	non-compiled	[CE]  ';'  expected	86	None	replace
608	[BUG]  [BUGGY]  pathNames[stackSize  -  1]  =     "null   "  +  JsonToken.END_OBJECT;  PathInfo  pathNames[stackSize  -  1]  =   "null   "  +  JsonToken.END_OBJECT;  [CE]  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {  popStack();      [BUGGY]  pathNames[stackSize  -  1]  =     "null   "  +  JsonToken.END_OBJECT;  PathInfo  pathNames[stackSize  -  1]  =   "null   "  +  JsonToken.END_OBJECT;  [BUGGY]      }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	262	262	2	replace	pathNames[stackSize    -    1]    =       "null   "    +    JsonToken.END_OBJECT;    PathInfo  pathNames[stackSize  -  1]  =   "null   "  +  JsonToken.END_OBJECT;	  	non-compiled	[CE]  	58	None	add
609	[BUG]  [BUGGY]  pathNames[stackSize  -  1]  =     "null   "  +  JsonToken.END_OBJECT;  pathNames[stackSize  -  1]  =(null   "  +  JsonToken.END_OBJECT;  [CE]  unclosed  string  literal  [FE]      ArrayIndexOutOfBoundsException    [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {  popStack();      [BUGGY]  pathNames[stackSize  -  1]  =     "null   "  +  JsonToken.END_OBJECT;  pathNames[stackSize  -  1]  =(null   "  +  JsonToken.END_OBJECT;  [BUGGY]      }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	262	262	2	replace	pathNames[stackSize    -    1]    =       "null   "    +    JsonToken.END_OBJECT;    pathNames[stackSize  -  1]  =(null   "  +  JsonToken.END_OBJECT;	  	non-compiled	[CE]  unclosed  string  literal	58	None	add
610	[BUG]  [BUGGY]  pathNames[stackSize  -  1]  =     "null   "  +  JsonToken.END_OBJECT;  pathNames[stackSize  -  1]  =  null   "  +  JsonToken.END_OBJECT;  [CE]  unclosed  string  literal  [FE]        ArrayIndexOutOfBoundsException    [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {  popStack();      [BUGGY]  pathNames[stackSize  -  1]  =     "null   "  +  JsonToken.END_OBJECT;  pathNames[stackSize  -  1]  =  null   "  +  JsonToken.END_OBJECT;  [BUGGY]      }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	262	262	2	replace	pathNames[stackSize    -    1]    =       "null   "    +    JsonToken.END_OBJECT;    pathNames[stackSize  -  1]  =  null   "  +  JsonToken.END_OBJECT;	  	non-compiled	[CE]  unclosed  string  literal	58	None	add
611	[BUG]  [BUGGY]  if(stackSize  >  0)  {  pathNames[stackSize  -  1]  =  null;  }  if(stackSize  >  0)  {  pathNames[stackSsize  -  1]  =  null;  }  [CE]  cannot  find  symbol  stackSsize  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {  popStack();      [BUGGY]  if(stackSize  >  0)  {  pathNames[stackSize  -  1]  =  null;  }  if(stackSize  >  0)  {  pathNames[stackSsize  -  1]  =  null;  }  [BUGGY]      }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	262	262	2	replace	if(stackSize    >    0)    {    pathNames[stackSize    -    1]    =    null;    }    if(stackSize  >  0)  {  pathNames[stackSsize  -  1]  =  null;  }	  	non-compiled	[CE]  cannot  find  symbol  stackSsize	19	None	add
612	[BUG]  [BUGGY]  if(stackSize  >  0)  {  int[]  result  =  new  int[stackSize  -  1];  System.arraycopy(pathNames,  0,  pathNames,  0,  stackSize  -  1);  return;  }  if(stackSize  >  0)  {  int[]  result  =  new  int[stackSize  -  1];  System.arraycopy(pathNames,  0,  pathNames,  1,  stackSize  -  1]);  return;  }  [CE]  ')'  expected  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {  popStack();      [BUGGY]  if(stackSize  >  0)  {  int[]  result  =  new  int[stackSize  -  1];  System.arraycopy(pathNames,  0,  pathNames,  0,  stackSize  -  1);  return;  }  if(stackSize  >  0)  {  int[]  result  =  new  int[stackSize  -  1];  System.arraycopy(pathNames,  0,  pathNames,  1,  stackSize  -  1]);  return;  }  [BUGGY]      }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	262	262	2	replace	if(stackSize    >    0)    {    int[]    result    =    new    int[stackSize    -    1];    System.arraycopy(pathNames,    0,    pathNames,    0,    stackSize    -    1);    return;    }    if(stackSize  >  0)  {  int[]  result  =  new  int[stackSize  -  1];  System.arraycopy(pathNames,  0,  pathNames,  1,  stackSize  -  1]);  return;  }	  	non-compiled	[CE]  ')'  expected	83	None	add
613	[BUG]  [BUGGY]  if(stackSize  >  0)  {  int[]  result  =  new  int[stackSize  -  1];  System.arraycopy(pathNames,  0,  pathNames,  0,  stackSize  -  1);  return;  }  if(stackSize  >  0)  {  int[]  result  =  new  int[stackSize  -  1];  System.arraycopy(pathNames,  0,  pathNames,  0,  stackSize  -  1]  [CE]  ')'  expected  [FE]      ArrayIndexOutOfBoundsException    [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {  popStack();      [BUGGY]  if(stackSize  >  0)  {  int[]  result  =  new  int[stackSize  -  1];  System.arraycopy(pathNames,  0,  pathNames,  0,  stackSize  -  1);  return;  }  if(stackSize  >  0)  {  int[]  result  =  new  int[stackSize  -  1];  System.arraycopy(pathNames,  0,  pathNames,  0,  stackSize  -  1]  [BUGGY]      }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	262	262	2	replace	if(stackSize    >    0)    {    int[]    result    =    new    int[stackSize    -    1];    System.arraycopy(pathNames,    0,    pathNames,    0,    stackSize    -    1);    return;    }    if(stackSize  >  0)  {  int[]  result  =  new  int[stackSize  -  1];  System.arraycopy(pathNames,  0,  pathNames,  0,  stackSize  -  1]	  	non-compiled	[CE]  ')'  expected	83	None	add
614	[BUG]  [BUGGY]  if(stackSize  >  0)  {  int[]  result  =  new  int[stackSize  -  1];  System.arraycopy(pathNames,  0,  pathNames,  0,  stackSize  -  1);  return;  }  if(stackSize  >  0)  {  int[]  result  =  new  int[result.length  -  1];  System.arraycopy(pathNames,  0,  pathNames,  0,  stackSize  -  1]);  return;  }  [CE]  ')'  expected  [FE]        ArrayIndexOutOfBoundsException    [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {  popStack();      [BUGGY]  if(stackSize  >  0)  {  int[]  result  =  new  int[stackSize  -  1];  System.arraycopy(pathNames,  0,  pathNames,  0,  stackSize  -  1);  return;  }  if(stackSize  >  0)  {  int[]  result  =  new  int[result.length  -  1];  System.arraycopy(pathNames,  0,  pathNames,  0,  stackSize  -  1]);  return;  }  [BUGGY]      }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	262	262	2	replace	if(stackSize    >    0)    {    int[]    result    =    new    int[stackSize    -    1];    System.arraycopy(pathNames,    0,    pathNames,    0,    stackSize    -    1);    return;    }    if(stackSize  >  0)  {  int[]  result  =  new  int[result.length  -  1];  System.arraycopy(pathNames,  0,  pathNames,  0,  stackSize  -  1]);  return;  }	  	non-compiled	[CE]  ')'  expected	83	None	add
615	[BUG]  [BUGGY]  if(stackSize  >  0)  {  int[]  result  =  new  int[stackSize  -  1];  System.arraycopy(pathNames,  0,  pathNames,  0,  stackSize  -  1);  return;  }  if(stackSize  >  0)  {  int[]  result  =  new  int[stackSize  -  1];  System.arraycopy(pathNames,  0,  pathNames,  0,  stackSize  -  1]);  [CE]  ')'  expected  [FE]          ArrayIndexOutOfBoundsException    [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {  popStack();      [BUGGY]  if(stackSize  >  0)  {  int[]  result  =  new  int[stackSize  -  1];  System.arraycopy(pathNames,  0,  pathNames,  0,  stackSize  -  1);  return;  }  if(stackSize  >  0)  {  int[]  result  =  new  int[stackSize  -  1];  System.arraycopy(pathNames,  0,  pathNames,  0,  stackSize  -  1]);  [BUGGY]      }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	262	262	2	replace	if(stackSize    >    0)    {    int[]    result    =    new    int[stackSize    -    1];    System.arraycopy(pathNames,    0,    pathNames,    0,    stackSize    -    1);    return;    }    if(stackSize  >  0)  {  int[]  result  =  new  int[stackSize  -  1];  System.arraycopy(pathNames,  0,  pathNames,  0,  stackSize  -  1]);	  	non-compiled	[CE]  ')'  expected	83	None	add
616	[BUG]  [BUGGY]  [FE]  ArrayIndexOutOfBoundsException  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {  popStack();      [BUGGY]  pathNames[stackSize  -  2]  =   "null. ";  [BUGGY]      }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	262	262	2	add	pathNames[stackSize  -  2]  =   "null. ";	  pathNames[stackSize    -    2]    =           "null       ";    pathNames[stackSize    -    2]    =       "null.   ";    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	11	2	replace
617	[BUG]  [BUGGY]  pathNames[stackSize  -  2]  =   "null. ";  [FE]  ArrayIndexOutOfBoundsException  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {  popStack();      [BUGGY]  pathNames[stackSize  -  2]  =   "null. ";  [BUGGY]      }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	262	262	2	replace	pathNames[stackSize  -  2]  =   "null. ";	  pathNames[stackSize    -    2]    =           "null       ";    pathNames[stackSize    -    2]    =       "null.   ";    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	11	2	replace
618	[BUG]  [BUGGY]  [FE]  ArrayIndexOutOfBoundsException  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {  popStack();      [BUGGY]  if(stackSize  >  0)  {  int[]  result  =  new  int[stackSize  -  1];  System.arraycopy(pathNames,  0,  result,  0,  stackSize  -  1);  return;  }  [BUGGY]      }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	262	262	2	add	if(stackSize  >  0)  {  int[]  result  =  new  int[stackSize  -  1];  System.arraycopy(pathNames,  0,  result,  0,  stackSize  -  1);  return;  }	  if(stackSize    >    0)    {    int[]    result    =    new    int[stackSize    -    1];    System.arraycopy(pathNames,    0,    pathNames,    0,    stackSize    -    1);    return;    }    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	84	2	replace
619	[BUG]  [BUGGY]  if(stackSize  >  0)  {  int[]  result  =  new  int[stackSize  -  1];  System.arraycopy(pathNames,  0,  result,  0,  stackSize  -  1);  return;  }  [FE]  ArrayIndexOutOfBoundsException  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {  popStack();      [BUGGY]  if(stackSize  >  0)  {  int[]  result  =  new  int[stackSize  -  1];  System.arraycopy(pathNames,  0,  result,  0,  stackSize  -  1);  return;  }  [BUGGY]      }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	262	262	2	replace	if(stackSize  >  0)  {  int[]  result  =  new  int[stackSize  -  1];  System.arraycopy(pathNames,  0,  result,  0,  stackSize  -  1);  return;  }	  if(stackSize    >    0)    {    int[]    result    =    new    int[stackSize    -    1];    System.arraycopy(pathNames,    0,    pathNames,    0,    stackSize    -    1);    return;    }    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	84	2	replace
620	[BUG]  [BUGGY]  [FE]  NegativeArraySizeException  [FE]      ArrayIndexOutOfBoundsException    [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {  popStack();      [BUGGY]  Object[]  result  =  new  Object[stackSize  -  1];  System.arraycopy(pathNames,  0,  result,  0,  stackSize  -  1);  return;  [BUGGY]      }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	262	262	2	add	Object[]  result  =  new  Object[stackSize  -  1];  System.arraycopy(pathNames,  0,  result,  0,  stackSize  -  1);  return;	  if(stackSize    >    0)    {    int[]    result    =    new    int[stackSize    -    1];    System.arraycopy(pathNames,    0,    pathNames,    0,    stackSize    -    1);    return;    }    	compilable	  [FE]  NegativeArraySizeException  	84	2	replace
621	[BUG]  [BUGGY]  Object[]  result  =  new  Object[stackSize  -  1];  System.arraycopy(pathNames,  0,  result,  0,  stackSize  -  1);  return;  [FE]  NegativeArraySizeException  [FE]      ArrayIndexOutOfBoundsException    [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {  popStack();      [BUGGY]  Object[]  result  =  new  Object[stackSize  -  1];  System.arraycopy(pathNames,  0,  result,  0,  stackSize  -  1);  return;  [BUGGY]      }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	262	262	2	replace	Object[]  result  =  new  Object[stackSize  -  1];  System.arraycopy(pathNames,  0,  result,  0,  stackSize  -  1);  return;	  if(stackSize    >    0)    {    int[]    result    =    new    int[stackSize    -    1];    System.arraycopy(pathNames,    0,    pathNames,    0,    stackSize    -    1);    return;    }    	compilable	  [FE]  NegativeArraySizeException  	84	2	replace
622	[BUG]  [BUGGY]  [FE]  ArrayIndexOutOfBoundsException  [FE]        ArrayIndexOutOfBoundsException    [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {  popStack();      [BUGGY]  if(stackSize  >  0)  {  int[]  result  =  new  int[pathIndices.length  -  1];  System.arraycopy(pathNames,  0,  pathNames,  0,  stackSize  -  1);  return;  }  [BUGGY]      }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	262	262	2	add	if(stackSize  >  0)  {  int[]  result  =  new  int[pathIndices.length  -  1];  System.arraycopy(pathNames,  0,  pathNames,  0,  stackSize  -  1);  return;  }	  if(stackSize    >    0)    {    int[]    result    =    new    int[stackSize    -    1];    System.arraycopy(pathNames,    0,    pathNames,    0,    stackSize    -    1);    return;    }    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	84	2	replace
623	[BUG]  [BUGGY]  if(stackSize  >  0)  {  int[]  result  =  new  int[pathIndices.length  -  1];  System.arraycopy(pathNames,  0,  pathNames,  0,  stackSize  -  1);  return;  }  [FE]  ArrayIndexOutOfBoundsException  [FE]        ArrayIndexOutOfBoundsException    [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {  popStack();      [BUGGY]  if(stackSize  >  0)  {  int[]  result  =  new  int[pathIndices.length  -  1];  System.arraycopy(pathNames,  0,  pathNames,  0,  stackSize  -  1);  return;  }  [BUGGY]      }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	262	262	2	replace	if(stackSize  >  0)  {  int[]  result  =  new  int[pathIndices.length  -  1];  System.arraycopy(pathNames,  0,  pathNames,  0,  stackSize  -  1);  return;  }	  if(stackSize    >    0)    {    int[]    result    =    new    int[stackSize    -    1];    System.arraycopy(pathNames,    0,    pathNames,    0,    stackSize    -    1);    return;    }    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	84	2	replace
624	[BUG]  [BUGGY]  [FE]  ArrayIndexOutOfBoundsException  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {  popStack();      [BUGGY]  if(stackSize  >  0)  {  pathNames[stackSize  -  1]  =   "null ";  }  else  {  skipValue();  }  [BUGGY]      }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	262	262	2	add	if(stackSize  >  0)  {  pathNames[stackSize  -  1]  =   "null ";  }  else  {  skipValue();  }	          if(stackSize    >    0)    {    pathNames[stackSize    -    1]    =    null;    }    else    {    skipValue();    }    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	35	2	replace
625	[BUG]  [BUGGY]  if(stackSize  >  0)  {  pathNames[stackSize  -  1]  =   "null ";  }  else  {  skipValue();  }  [FE]  ArrayIndexOutOfBoundsException  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {  popStack();      [BUGGY]  if(stackSize  >  0)  {  pathNames[stackSize  -  1]  =   "null ";  }  else  {  skipValue();  }  [BUGGY]      }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	262	262	2	replace	if(stackSize  >  0)  {  pathNames[stackSize  -  1]  =   "null ";  }  else  {  skipValue();  }	          if(stackSize    >    0)    {    pathNames[stackSize    -    1]    =    null;    }    else    {    skipValue();    }    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	35	2	replace
626	[BUG]  [BUGGY]  [FE]  ArrayIndexOutOfBoundsException  [FE]      ArrayIndexOutOfBoundsException    [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {  popStack();      [BUGGY]  if(stackSize  >  0)  {  pathNames[stackSize  -  2]  =  null;  }  else  {  skipValue();  }  [BUGGY]      }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	262	262	2	add	if(stackSize  >  0)  {  pathNames[stackSize  -  2]  =  null;  }  else  {  skipValue();  }	          if(stackSize    >    0)    {    pathNames[stackSize    -    1]    =    null;    }    else    {    skipValue();    }    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	35	2	replace
627	[BUG]  [BUGGY]  if(stackSize  >  0)  {  pathNames[stackSize  -  2]  =  null;  }  else  {  skipValue();  }  [FE]  ArrayIndexOutOfBoundsException  [FE]      ArrayIndexOutOfBoundsException    [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {  popStack();      [BUGGY]  if(stackSize  >  0)  {  pathNames[stackSize  -  2]  =  null;  }  else  {  skipValue();  }  [BUGGY]      }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	262	262	2	replace	if(stackSize  >  0)  {  pathNames[stackSize  -  2]  =  null;  }  else  {  skipValue();  }	          if(stackSize    >    0)    {    pathNames[stackSize    -    1]    =    null;    }    else    {    skipValue();    }    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	35	2	replace
628	[BUG]  [BUGGY]  Integer[]  result  =  new  Integer[stackSize  -  1];  for(int  i  =  0;  i  <  stackSize;  ++i)  {  result[i]  =  getValue();  }  [CE]  cannot  find  symbol  [FE]                    ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {  popStack();      [BUGGY]  Integer[]  result  =  new  Integer[stackSize  -  1];  for(int  i  =  0;  i  <  stackSize;  ++i)  {  result[i]  =  getValue();  }  [BUGGY]      }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	262	262	2	replace	Integer[]  result  =  new  Integer[stackSize  -  1];  for(int  i  =  0;  i  <  stackSize;  ++i)  {  result[i]  =  getValue();  }	  if(stackSize    >    0)    {    int[]    result    =    new    int[stackSize    -    1];    for(int    i    =    0;    i    <    stackSize;    ++i)    {    result[i]    =    getValue();    }    	non-compiled	[CE]  cannot  find  symbol	85	None	replace
629	[BUG]  [BUGGY]  if(stackSize  <  1)  {  int[]  result  =  new  int[stackSize  -  1];  for(int  i  =  0;  i  <  stackSize;  ++i)  {  result[i]  =  getValue();  }  [CE]  ';'  expected  [FE]                      ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {  popStack();      [BUGGY]  if(stackSize  <  1)  {  int[]  result  =  new  int[stackSize  -  1];  for(int  i  =  0;  i  <  stackSize;  ++i)  {  result[i]  =  getValue();  }  [BUGGY]      }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	262	262	2	replace	if(stackSize  <  1)  {  int[]  result  =  new  int[stackSize  -  1];  for(int  i  =  0;  i  <  stackSize;  ++i)  {  result[i]  =  getValue();  }	  if(stackSize    >    0)    {    int[]    result    =    new    int[stackSize    -    1];    for(int    i    =    0;    i    <    stackSize;    ++i)    {    result[i]    =    getValue();    }    	non-compiled	[CE]  ';'  expected	85	None	replace
630	[BUG]  [BUGGY]  if(stackSize  >  0)  {  int[]  result  =  new  int[stackSize  -  2];  for(int  i  =  0;  i  <  stackSize;  ++i)  {  result[i]  =  getValue();  }  [CE]  ';'  expected  [FE]                        ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {  popStack();      [BUGGY]  if(stackSize  >  0)  {  int[]  result  =  new  int[stackSize  -  2];  for(int  i  =  0;  i  <  stackSize;  ++i)  {  result[i]  =  getValue();  }  [BUGGY]      }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	262	262	2	replace	if(stackSize  >  0)  {  int[]  result  =  new  int[stackSize  -  2];  for(int  i  =  0;  i  <  stackSize;  ++i)  {  result[i]  =  getValue();  }	  if(stackSize    >    0)    {    int[]    result    =    new    int[stackSize    -    1];    for(int    i    =    0;    i    <    stackSize;    ++i)    {    result[i]    =    getValue();    }    	non-compiled	[CE]  ';'  expected	85	None	replace
631	[BUG]  [BUGGY]  [FE]  IllegalArgumentException  [FE]    IllegalArgumentException    [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {  popStack();      [BUGGY]  if(stackSize  >  0)  {  pathIndices  =  new  int[stackSize  -  1];  System.arraycopy(pathNames,  0,  pathNames,  0,  stackSize  -  1);  }  else  {  throw  new  IllegalArgumentException(   "   ");  }  if(stackSize  >  1)  {  pathIndices  =  new  int[stackSize  -  1];  System.arraycopy(pathNames,  0,  pathNames,  0,  stackSize  -  1);  }  else  {  throw  new  IllegalArgumentException( "   ");  }  [BUGGY]      }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	262	262	2	add	if(stackSize    >    0)    {    pathIndices    =    new    int[stackSize    -    1];    System.arraycopy(pathNames,    0,    pathNames,    0,    stackSize    -    1);    }    else    {    throw    new    IllegalArgumentException(   "   ");    }    if(stackSize  >  1)  {  pathIndices  =  new  int[stackSize  -  1];  System.arraycopy(pathNames,  0,  pathNames,  0,  stackSize  -  1);  }  else  {  throw  new  IllegalArgumentException( "   ");  }	  	compilable	  [FE]  IllegalArgumentException  	45	2	add
632	[BUG]  [BUGGY]  if(stackSize  >  0)  {  pathIndices  =  new  int[stackSize  -  1];  System.arraycopy(pathNames,  0,  pathNames,  0,  stackSize  -  1);  }  else  {  throw  new  IllegalArgumentException(   "   ");  }  if(stackSize  >  1)  {  pathIndices  =  new  int[stackSize  -  1];  System.arraycopy(pathNames,  0,  pathNames,  0,  stackSize  -  1);  }  else  {  throw  new  IllegalArgumentException( "   ");  }  [FE]  IllegalArgumentException  [FE]    IllegalArgumentException    [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {  popStack();      [BUGGY]  if(stackSize  >  0)  {  pathIndices  =  new  int[stackSize  -  1];  System.arraycopy(pathNames,  0,  pathNames,  0,  stackSize  -  1);  }  else  {  throw  new  IllegalArgumentException(   "   ");  }  if(stackSize  >  1)  {  pathIndices  =  new  int[stackSize  -  1];  System.arraycopy(pathNames,  0,  pathNames,  0,  stackSize  -  1);  }  else  {  throw  new  IllegalArgumentException( "   ");  }  [BUGGY]      }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	262	262	2	replace	if(stackSize    >    0)    {    pathIndices    =    new    int[stackSize    -    1];    System.arraycopy(pathNames,    0,    pathNames,    0,    stackSize    -    1);    }    else    {    throw    new    IllegalArgumentException(   "   ");    }    if(stackSize  >  1)  {  pathIndices  =  new  int[stackSize  -  1];  System.arraycopy(pathNames,  0,  pathNames,  0,  stackSize  -  1);  }  else  {  throw  new  IllegalArgumentException( "   ");  }	  	compilable	  [FE]  IllegalArgumentException  	45	2	add
633	[BUG]  [BUGGY]  if(stackSize  <  1)  {  int[]  result  =  new  int[stackSize  -  1];  for(int  i  =  0;  i  <  stackSize;  ++i)  {  result[i]  =  null;  }  [CE]  ';'  expected  [FE]        ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {  popStack();      [BUGGY]  if(stackSize  <  1)  {  int[]  result  =  new  int[stackSize  -  1];  for(int  i  =  0;  i  <  stackSize;  ++i)  {  result[i]  =  null;  }  [BUGGY]      }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	262	262	2	replace	if(stackSize  <  1)  {  int[]  result  =  new  int[stackSize  -  1];  for(int  i  =  0;  i  <  stackSize;  ++i)  {  result[i]  =  null;  }	  if(stackSize    >    0)    {    int[]    result    =    new    int[stackSize    -    1];    for(int    i    =    0;    i    <    stackSize;    ++i)    {    result[i]    =    null;    }    	non-compiled	[CE]  ';'  expected	76	None	replace
634	[BUG]  [BUGGY]  if(stackSize  >=  0)  {  int[]  result  =  new  int[stackSize  -  1];  for(int  i  =  0;  i  <  stackSize;  ++i)  {  result[i]  =  null;  }  [CE]  ';'  expected  [FE]          ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {  popStack();      [BUGGY]  if(stackSize  >=  0)  {  int[]  result  =  new  int[stackSize  -  1];  for(int  i  =  0;  i  <  stackSize;  ++i)  {  result[i]  =  null;  }  [BUGGY]      }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	262	262	2	replace	if(stackSize  >=  0)  {  int[]  result  =  new  int[stackSize  -  1];  for(int  i  =  0;  i  <  stackSize;  ++i)  {  result[i]  =  null;  }	  if(stackSize    >    0)    {    int[]    result    =    new    int[stackSize    -    1];    for(int    i    =    0;    i    <    stackSize;    ++i)    {    result[i]    =    null;    }    	non-compiled	[CE]  ';'  expected	76	None	replace
635	[BUG]  [BUGGY]  if(stackSize  >  0)  {  int[]  result  =  new  int[stackSize  -  2];  for(int  i  =  0;  i  <  stackSize;  ++i)  {  result[i]  =  null;  }  [CE]  ';'  expected  [FE]            ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {  popStack();      [BUGGY]  if(stackSize  >  0)  {  int[]  result  =  new  int[stackSize  -  2];  for(int  i  =  0;  i  <  stackSize;  ++i)  {  result[i]  =  null;  }  [BUGGY]      }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	262	262	2	replace	if(stackSize  >  0)  {  int[]  result  =  new  int[stackSize  -  2];  for(int  i  =  0;  i  <  stackSize;  ++i)  {  result[i]  =  null;  }	  if(stackSize    >    0)    {    int[]    result    =    new    int[stackSize    -    1];    for(int    i    =    0;    i    <    stackSize;    ++i)    {    result[i]    =    null;    }    	non-compiled	[CE]  ';'  expected	76	None	replace
636	[BUG]  [BUGGY]  pathNames[i  -  1]  =  null;  PathIndexOutOfBoundsException  e  =  new  PathIndexOutOfBoundsException(String.valueOf(stack));  pathNames[stackSize  -  1]  =  null;  [CE]  cannot  find  symbol  i  [FE]          ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {  popStack();      [BUGGY]  pathNames[i  -  1]  =  null;  PathIndexOutOfBoundsException  e  =  new  PathIndexOutOfBoundsException(String.valueOf(stack));  pathNames[stackSize  -  1]  =  null;  [BUGGY]      }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	262	262	2	replace	pathNames[i  -  1]  =  null;  PathIndexOutOfBoundsException  e  =  new  PathIndexOutOfBoundsException(String.valueOf(stack));  pathNames[stackSize  -  1]  =  null;	  pathNames[stackSize    -    1]    =    null;    PathIndexOutOfBoundsException    e    =    new    PathIndexOutOfBoundsException(String.valueOf(stack));    pathNames[stackSize    -    1]    =    null;    	non-compiled	[CE]  cannot  find  symbol  i	56	None	replace
637	[BUG]  [BUGGY]  allowNonEmptyStack(stackSize  -  1,  stackSize  -  1))  {  throw  new  IllegalArgumentException( " ");  }  [CE]  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {  popStack();      [BUGGY]  allowNonEmptyStack(stackSize  -  1,  stackSize  -  1))  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	262	262	2	replace	allowNonEmptyStack(stackSize  -  1,  stackSize  -  1))  {  throw  new  IllegalArgumentException( " ");  }	  if(stackSize    >    0)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  	16	None	replace
638	[BUG]  [BUGGY]  timeout  [FE]      ArrayIndexOutOfBoundsException    [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {  popStack();      [BUGGY]  Thread.currentThread().interrupt();  [BUGGY]      }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	262	262	2	add	Thread.currentThread().interrupt();	  if(stackSize    >    0)    {    throw    new    IllegalArgumentException(   "   ");    }    	compilable	timeout	16	1	replace
639	[BUG]  [BUGGY]  Thread.currentThread().interrupt();  timeout  [FE]      ArrayIndexOutOfBoundsException    [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {  popStack();      [BUGGY]  Thread.currentThread().interrupt();  [BUGGY]      }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	262	262	2	replace	Thread.currentThread().interrupt();	  if(stackSize    >    0)    {    throw    new    IllegalArgumentException(   "   ");    }    	compilable	timeout	16	1	replace
640	[BUG]  [BUGGY]  allowNonEmptyStack(stackSize))  {  throw  new  IllegalArgumentException( " ");  }  [CE]  [FE]        ArrayIndexOutOfBoundsException    [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {  popStack();      [BUGGY]  allowNonEmptyStack(stackSize))  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	262	262	2	replace	allowNonEmptyStack(stackSize))  {  throw  new  IllegalArgumentException( " ");  }	  if(stackSize    >    0)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  	16	None	replace
641	[BUG]  [BUGGY]  allowNonEmptyStack(stackSize  -  1,  stackSize))  {  throw  new  IllegalArgumentException( " ");  }  [CE]  [FE]          ArrayIndexOutOfBoundsException    [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {  popStack();      [BUGGY]  allowNonEmptyStack(stackSize  -  1,  stackSize))  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	262	262	2	replace	allowNonEmptyStack(stackSize  -  1,  stackSize))  {  throw  new  IllegalArgumentException( " ");  }	  if(stackSize    >    0)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  	16	None	replace
642	[BUG]  [BUGGY]  allowNonEmptyStack(stackSize  -  1,  stackSize  -  1)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  [FE]            ArrayIndexOutOfBoundsException    [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {  popStack();      [BUGGY]  allowNonEmptyStack(stackSize  -  1,  stackSize  -  1)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	262	262	2	replace	allowNonEmptyStack(stackSize  -  1,  stackSize  -  1)  {  throw  new  IllegalArgumentException( " ");  }	  if(stackSize    >    0)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  	16	None	replace
643	[BUG]  [BUGGY]  [FE]  ArrayIndexOutOfBoundsException  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {  popStack();      [BUGGY]          if(stackSize  >  0)  {  pathNames[stackSize  -  1]  =  null;  }  else  {  skipValue();  }  if(stackSize  <  0)  {  pathNames[stackSize  -  1]  =  null;  }  else  {  skipValue();  }  [BUGGY]      }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	262	262	2	add	                if(stackSize    >    0)    {    pathNames[stackSize    -    1]    =    null;    }    else    {    skipValue();    }    if(stackSize  <  0)  {  pathNames[stackSize  -  1]  =  null;  }  else  {  skipValue();  }	  	compilable	  [FE]  ArrayIndexOutOfBoundsException  	34	2	add
644	[BUG]  [BUGGY]          if(stackSize  >  0)  {  pathNames[stackSize  -  1]  =  null;  }  else  {  skipValue();  }  if(stackSize  <  0)  {  pathNames[stackSize  -  1]  =  null;  }  else  {  skipValue();  }  [FE]  ArrayIndexOutOfBoundsException  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {  popStack();      [BUGGY]          if(stackSize  >  0)  {  pathNames[stackSize  -  1]  =  null;  }  else  {  skipValue();  }  if(stackSize  <  0)  {  pathNames[stackSize  -  1]  =  null;  }  else  {  skipValue();  }  [BUGGY]      }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	262	262	2	replace	                if(stackSize    >    0)    {    pathNames[stackSize    -    1]    =    null;    }    else    {    skipValue();    }    if(stackSize  <  0)  {  pathNames[stackSize  -  1]  =  null;  }  else  {  skipValue();  }	  	compilable	  [FE]  ArrayIndexOutOfBoundsException  	34	2	add
645	[BUG]  [BUGGY]          if(stackSize  >  0)  {  pathNames[stackSize  -  1]  =  null;  }  else  {  skipValue();  }  if(stackSize  >  0)  {  pathNames[stackSsize  -  1]  =  null;  }  else  {  skipValue();  }  [CE]  cannot  find  symbol  stackSsize  [FE]      ArrayIndexOutOfBoundsException    [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {  popStack();      [BUGGY]          if(stackSize  >  0)  {  pathNames[stackSize  -  1]  =  null;  }  else  {  skipValue();  }  if(stackSize  >  0)  {  pathNames[stackSsize  -  1]  =  null;  }  else  {  skipValue();  }  [BUGGY]      }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	262	262	2	replace	                if(stackSize    >    0)    {    pathNames[stackSize    -    1]    =    null;    }    else    {    skipValue();    }    if(stackSize  >  0)  {  pathNames[stackSsize  -  1]  =  null;  }  else  {  skipValue();  }	  	non-compiled	[CE]  cannot  find  symbol  stackSsize	34	None	add
646	[BUG]  [BUGGY]  if(stackSize  >  0)  {  pathIndices[stackSize  -  1]  =   "null ";  }  [CE]  incompatible  types  [FE]        ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {  popStack();      [BUGGY]  if(stackSize  >  0)  {  pathIndices[stackSize  -  1]  =   "null ";  }  [BUGGY]      }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	262	262	2	replace	if(stackSize  >  0)  {  pathIndices[stackSize  -  1]  =   "null ";  }	  if(stackSize    >    0)    {    pathIndices[stackSize    -    1]    =    null;    }    	non-compiled	[CE]  incompatible  types	14	None	replace
647	[BUG]  [BUGGY]  pathNames[stackSize  -  1]  =  new  String(pathIndexOutOfBoundsException.toString());  pathNames[stackSize  -  1]  =  null;  [CE]  cannot  find  symbol  pathIndexOutOfBoundsException  [FE]                ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {  popStack();      [BUGGY]  pathNames[stackSize  -  1]  =  new  String(pathIndexOutOfBoundsException.toString());  pathNames[stackSize  -  1]  =  null;  [BUGGY]      }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	262	262	2	replace	pathNames[stackSize  -  1]  =  new  String(pathIndexOutOfBoundsException.toString());  pathNames[stackSize  -  1]  =  null;	  pathNames[stackSize    -    1]    =    null;    PathIndexOutOfBoundsException    e    =    new    PathIndexOutOfBoundsException(   "   "));    pathNames[stackSize    -    1]    =    null;    	non-compiled	[CE]  cannot  find  symbol  pathIndexOutOfBoundsException	31	None	replace
648	[BUG]  [BUGGY]  pathIndices  =  new  int[pathSize  -  1];  System.arraycopy(pathNames,  0,  pathNames,  0,  stackSize  -  1);  }  else  {  throw  new  JsonTokenException( " ");  }  [CE]  [FE]                ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {  popStack();      [BUGGY]  pathIndices  =  new  int[pathSize  -  1];  System.arraycopy(pathNames,  0,  pathNames,  0,  stackSize  -  1);  }  else  {  throw  new  JsonTokenException( " ");  }  [BUGGY]      }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	262	262	2	replace	pathIndices  =  new  int[pathSize  -  1];  System.arraycopy(pathNames,  0,  pathNames,  0,  stackSize  -  1);  }  else  {  throw  new  JsonTokenException( " ");  }	  if(stackSize    >    0)    {    pathIndices    =    new    int[stackSize    -    1];    System.arraycopy(pathNames,    0,    pathNames,    0,    stackSize    -    1);    }    else    {    throw    new    JsonTokenException(   "   ");    }    	non-compiled	[CE]  	49	None	replace
649	[BUG]  [BUGGY]  Path[]  pathIndices  =  new  Path[stackSize  -  1];  System.arraycopy(pathNames,  0,  pathNames,  0,  stackSize  -  1);  }  else  {  throw  new  JsonTokenException( " ");  }  [CE]  [FE]                  ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {  popStack();      [BUGGY]  Path[]  pathIndices  =  new  Path[stackSize  -  1];  System.arraycopy(pathNames,  0,  pathNames,  0,  stackSize  -  1);  }  else  {  throw  new  JsonTokenException( " ");  }  [BUGGY]      }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	262	262	2	replace	Path[]  pathIndices  =  new  Path[stackSize  -  1];  System.arraycopy(pathNames,  0,  pathNames,  0,  stackSize  -  1);  }  else  {  throw  new  JsonTokenException( " ");  }	  if(stackSize    >    0)    {    pathIndices    =    new    int[stackSize    -    1];    System.arraycopy(pathNames,    0,    pathNames,    0,    stackSize    -    1);    }    else    {    throw    new    JsonTokenException(   "   ");    }    	non-compiled	[CE]  	49	None	replace
650	[BUG]  [BUGGY]  [FE]  ArrayIndexOutOfBoundsException  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {  popStack();      [BUGGY]  if(stackSize  >  0)  {  int[]  result  =  new  int[stackSize  -  1];  System.arraycopy(stack,  0,  pathNames,  0,  stackSize  -  1);  }  if(stackSize  >  0)  {  int[]  result  =  new  int[stackSize  -  1];  System.arraycopy(stack,  1,  pathNames,  0,  stackSize  -  1);  }  [BUGGY]      }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	262	262	2	add	if(stackSize    >    0)    {    int[]    result    =    new    int[stackSize    -    1];    System.arraycopy(stack,    0,    pathNames,    0,    stackSize    -    1);    }    if(stackSize  >  0)  {  int[]  result  =  new  int[stackSize  -  1];  System.arraycopy(stack,  1,  pathNames,  0,  stackSize  -  1);  }	  	compilable	  [FE]  ArrayIndexOutOfBoundsException  	80	2	add
651	[BUG]  [BUGGY]  if(stackSize  >  0)  {  int[]  result  =  new  int[stackSize  -  1];  System.arraycopy(stack,  0,  pathNames,  0,  stackSize  -  1);  }  if(stackSize  >  0)  {  int[]  result  =  new  int[stackSize  -  1];  System.arraycopy(stack,  1,  pathNames,  0,  stackSize  -  1);  }  [FE]  ArrayIndexOutOfBoundsException  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {  popStack();      [BUGGY]  if(stackSize  >  0)  {  int[]  result  =  new  int[stackSize  -  1];  System.arraycopy(stack,  0,  pathNames,  0,  stackSize  -  1);  }  if(stackSize  >  0)  {  int[]  result  =  new  int[stackSize  -  1];  System.arraycopy(stack,  1,  pathNames,  0,  stackSize  -  1);  }  [BUGGY]      }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	262	262	2	replace	if(stackSize    >    0)    {    int[]    result    =    new    int[stackSize    -    1];    System.arraycopy(stack,    0,    pathNames,    0,    stackSize    -    1);    }    if(stackSize  >  0)  {  int[]  result  =  new  int[stackSize  -  1];  System.arraycopy(stack,  1,  pathNames,  0,  stackSize  -  1);  }	  	compilable	  [FE]  ArrayIndexOutOfBoundsException  	80	2	add
652	[BUG]  [BUGGY]  if(stackSize  >  0)  {  int[]  result  =  new  int[stackSize  -  1];  System.arraycopy(stack,  0,  pathNames,  0,  stackSize  -  1);  }  if(stackSize  >  0)  {  int[]  result  =  new  int[stackSize  -  1];  System.arraycopy(stack,  0,  pathNames,  0,  stackSize  -  1  [CE]  [FE]      ArrayIndexOutOfBoundsException    [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {  popStack();      [BUGGY]  if(stackSize  >  0)  {  int[]  result  =  new  int[stackSize  -  1];  System.arraycopy(stack,  0,  pathNames,  0,  stackSize  -  1);  }  if(stackSize  >  0)  {  int[]  result  =  new  int[stackSize  -  1];  System.arraycopy(stack,  0,  pathNames,  0,  stackSize  -  1  [BUGGY]      }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	262	262	2	replace	if(stackSize    >    0)    {    int[]    result    =    new    int[stackSize    -    1];    System.arraycopy(stack,    0,    pathNames,    0,    stackSize    -    1);    }    if(stackSize  >  0)  {  int[]  result  =  new  int[stackSize  -  1];  System.arraycopy(stack,  0,  pathNames,  0,  stackSize  -  1	  	non-compiled	[CE]  	80	None	add
653	[BUG]  [BUGGY]  [FE]  ArrayIndexOutOfBoundsException  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {  popStack();      [BUGGY]  if(stackSize  >  0)  {  pathNames[stackSize  -  2]  =  null;  }  else  {  popStack();  }  [BUGGY]      }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	262	262	2	add	if(stackSize  >  0)  {  pathNames[stackSize  -  2]  =  null;  }  else  {  popStack();  }	  if(stackSize    >    0)    {    pathNames[stackSize    -    1]    =    null;    }    else    {    popStack();    }    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	24	2	replace
654	[BUG]  [BUGGY]  if(stackSize  >  0)  {  pathNames[stackSize  -  2]  =  null;  }  else  {  popStack();  }  [FE]  ArrayIndexOutOfBoundsException  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {  popStack();      [BUGGY]  if(stackSize  >  0)  {  pathNames[stackSize  -  2]  =  null;  }  else  {  popStack();  }  [BUGGY]      }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	262	262	2	replace	if(stackSize  >  0)  {  pathNames[stackSize  -  2]  =  null;  }  else  {  popStack();  }	  if(stackSize    >    0)    {    pathNames[stackSize    -    1]    =    null;    }    else    {    popStack();    }    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	24	2	replace
655	[BUG]  [BUGGY]  pathNames[stackSize  -  1]  =  new  PathIndexOutOfBoundsException(String.valueOf(result));  pathIndices[stackSize  -  1]  =  null;  [CE]  cannot  find  symbol  [FE]        ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {  popStack();      [BUGGY]  pathNames[stackSize  -  1]  =  new  PathIndexOutOfBoundsException(String.valueOf(result));  pathIndices[stackSize  -  1]  =  null;  [BUGGY]      }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	262	262	2	replace	pathNames[stackSize  -  1]  =  new  PathIndexOutOfBoundsException(String.valueOf(result));  pathIndices[stackSize  -  1]  =  null;	  pathNames[stackSize    -    1]    =    null;    PathIndexOutOfBoundsException    e    =    new    PathIndexOutOfBoundsException(String.valueOf(result));    pathNames[stackSize    -    1]    =    null;    	non-compiled	[CE]  cannot  find  symbol	55	None	replace
656	[BUG]  [BUGGY]  [FE]  IOException  [FE]    IOException    [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {  popStack();      [BUGGY]  if(stackSize  >  0)  {  pathIndices  =  new  int[pathNames.length  -  1];  System.arraycopy(pathNames,  0,  pathNames,  0,  stackSize  -  1);  }  else  {  throw  new  IOException( " ");  }  [BUGGY]      }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	262	262	2	add	if(stackSize  >  0)  {  pathIndices  =  new  int[pathNames.length  -  1];  System.arraycopy(pathNames,  0,  pathNames,  0,  stackSize  -  1);  }  else  {  throw  new  IOException( " ");  }	  if(stackSize    >    0)    {    pathIndices    =    new    int[stackSize    -    1];    System.arraycopy(pathNames,    0,    pathNames,    0,    stackSize    -    1);    }    else    {    throw    new    IOException(   "   ");    }    	compilable	  [FE]  IOException  	51	2	replace
657	[BUG]  [BUGGY]  if(stackSize  >  0)  {  pathIndices  =  new  int[pathNames.length  -  1];  System.arraycopy(pathNames,  0,  pathNames,  0,  stackSize  -  1);  }  else  {  throw  new  IOException( " ");  }  [FE]  IOException  [FE]    IOException    [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {  popStack();      [BUGGY]  if(stackSize  >  0)  {  pathIndices  =  new  int[pathNames.length  -  1];  System.arraycopy(pathNames,  0,  pathNames,  0,  stackSize  -  1);  }  else  {  throw  new  IOException( " ");  }  [BUGGY]      }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	262	262	2	replace	if(stackSize  >  0)  {  pathIndices  =  new  int[pathNames.length  -  1];  System.arraycopy(pathNames,  0,  pathNames,  0,  stackSize  -  1);  }  else  {  throw  new  IOException( " ");  }	  if(stackSize    >    0)    {    pathIndices    =    new    int[stackSize    -    1];    System.arraycopy(pathNames,    0,    pathNames,    0,    stackSize    -    1);    }    else    {    throw    new    IOException(   "   ");    }    	compilable	  [FE]  IOException  	51	2	replace
658	[BUG]  [BUGGY]  Path[]  pathIndices  =  new  Path[stackSize  -  1];  System.arraycopy(pathNames,  0,  pathNames,  0,  stackSize  -  1);  }  else  {  throw  new  IOException( " ");  }  [CE]  [FE]      IOException    [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {  popStack();      [BUGGY]  Path[]  pathIndices  =  new  Path[stackSize  -  1];  System.arraycopy(pathNames,  0,  pathNames,  0,  stackSize  -  1);  }  else  {  throw  new  IOException( " ");  }  [BUGGY]      }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	262	262	2	replace	Path[]  pathIndices  =  new  Path[stackSize  -  1];  System.arraycopy(pathNames,  0,  pathNames,  0,  stackSize  -  1);  }  else  {  throw  new  IOException( " ");  }	  if(stackSize    >    0)    {    pathIndices    =    new    int[stackSize    -    1];    System.arraycopy(pathNames,    0,    pathNames,    0,    stackSize    -    1);    }    else    {    throw    new    IOException(   "   ");    }    	non-compiled	[CE]  	51	None	replace
659	[BUG]  [BUGGY]  Arrays.arraycopy(pathNames,  0,  result,  0,  stackSize  -  1);  [CE]  cannot  find  symbol  result  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {  popStack();      [BUGGY]  Arrays.arraycopy(pathNames,  0,  result,  0,  stackSize  -  1);  [BUGGY]      }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	262	262	2	replace	Arrays.arraycopy(pathNames,  0,  result,  0,  stackSize  -  1);	  if(stackSize    >    0)    {    int[]    result    =    new    int[stackSize    -    1];    System.arraycopy(pathNames,    0,    pathNames,    0,    stackSize    -    1);    }    	non-compiled	[CE]  cannot  find  symbol  result	78	None	replace
660	[BUG]  [BUGGY]  [FE]  ArrayIndexOutOfBoundsException  [FE]      ArrayIndexOutOfBoundsException    [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {  popStack();      [BUGGY]  if(stackSize  >  0)  {  int[]  result  =  new  int[pathIndices.length  -  1];  System.arraycopy(pathNames,  0,  pathNames,  0,  stackSize  -  1);  }  [BUGGY]      }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	262	262	2	add	if(stackSize  >  0)  {  int[]  result  =  new  int[pathIndices.length  -  1];  System.arraycopy(pathNames,  0,  pathNames,  0,  stackSize  -  1);  }	  if(stackSize    >    0)    {    int[]    result    =    new    int[stackSize    -    1];    System.arraycopy(pathNames,    0,    pathNames,    0,    stackSize    -    1);    }    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	78	2	replace
661	[BUG]  [BUGGY]  if(stackSize  >  0)  {  int[]  result  =  new  int[pathIndices.length  -  1];  System.arraycopy(pathNames,  0,  pathNames,  0,  stackSize  -  1);  }  [FE]  ArrayIndexOutOfBoundsException  [FE]      ArrayIndexOutOfBoundsException    [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {  popStack();      [BUGGY]  if(stackSize  >  0)  {  int[]  result  =  new  int[pathIndices.length  -  1];  System.arraycopy(pathNames,  0,  pathNames,  0,  stackSize  -  1);  }  [BUGGY]      }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	262	262	2	replace	if(stackSize  >  0)  {  int[]  result  =  new  int[pathIndices.length  -  1];  System.arraycopy(pathNames,  0,  pathNames,  0,  stackSize  -  1);  }	  if(stackSize    >    0)    {    int[]    result    =    new    int[stackSize    -    1];    System.arraycopy(pathNames,    0,    pathNames,    0,    stackSize    -    1);    }    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	78	2	replace
662	[BUG]  [BUGGY]  [FE]  NegativeArraySizeException  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {  popStack();      [BUGGY]  Integer[]  result  =  new  Integer[stackSize  -  1];  System.arraycopy(stack,  0,  pathNames,  0,  stackSize  -  1);  [BUGGY]      }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	262	262	2	add	Integer[]  result  =  new  Integer[stackSize  -  1];  System.arraycopy(stack,  0,  pathNames,  0,  stackSize  -  1);	  if(stackSize    >    0)    {    int[]    result    =    new    int[stackSize    -    1];    System.arraycopy(stack,    0,    pathNames,    0,    stackSize    -    1);    }    	compilable	  [FE]  NegativeArraySizeException  	81	2	replace
663	[BUG]  [BUGGY]  Integer[]  result  =  new  Integer[stackSize  -  1];  System.arraycopy(stack,  0,  pathNames,  0,  stackSize  -  1);  [FE]  NegativeArraySizeException  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {  popStack();      [BUGGY]  Integer[]  result  =  new  Integer[stackSize  -  1];  System.arraycopy(stack,  0,  pathNames,  0,  stackSize  -  1);  [BUGGY]      }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	262	262	2	replace	Integer[]  result  =  new  Integer[stackSize  -  1];  System.arraycopy(stack,  0,  pathNames,  0,  stackSize  -  1);	  if(stackSize    >    0)    {    int[]    result    =    new    int[stackSize    -    1];    System.arraycopy(stack,    0,    pathNames,    0,    stackSize    -    1);    }    	compilable	  [FE]  NegativeArraySizeException  	81	2	replace
664	[BUG]  [BUGGY]  pathIndices[stackSize  -  1]  =  null;  System.arraycopy(pathNames,  0,  pathNames,  0,  stackSize  -  1);  }  else  {  throw  new  IllegalArgumentException( " ");  }  [CE]  [FE]              ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {  popStack();      [BUGGY]  pathIndices[stackSize  -  1]  =  null;  System.arraycopy(pathNames,  0,  pathNames,  0,  stackSize  -  1);  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	262	262	2	replace	pathIndices[stackSize  -  1]  =  null;  System.arraycopy(pathNames,  0,  pathNames,  0,  stackSize  -  1);  }  else  {  throw  new  IllegalArgumentException( " ");  }	  if(stackSize    >    0)    {    pathIndices[stackSize    -    1]    =    null;    System.arraycopy(pathNames,    0,    pathNames,    0,    stackSize    -    1);    }    else    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  	48	None	replace
665	[BUG]  [BUGGY]  Path[]  pathIndices  =  new  Path[stackSize  -  1];  System.arraycopy(pathNames,  0,  pathNames,  0,  stackSize  -  1);  }  else  {  throw  new  IllegalArgumentException( " ");  }  [CE]  [FE]    IllegalArgumentException    [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {  popStack();      [BUGGY]  Path[]  pathIndices  =  new  Path[stackSize  -  1];  System.arraycopy(pathNames,  0,  pathNames,  0,  stackSize  -  1);  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	262	262	2	replace	Path[]  pathIndices  =  new  Path[stackSize  -  1];  System.arraycopy(pathNames,  0,  pathNames,  0,  stackSize  -  1);  }  else  {  throw  new  IllegalArgumentException( " ");  }	  if(stackSize    >    0)    {    pathIndices    =    new    int[stackSize    -    1];    System.arraycopy(pathNames,    0,    pathNames,    0,    stackSize    -    1);    }    else    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  	46	None	replace
666	[BUG]  [BUGGY]  pathNames[result.length  -  1]  =  null;  if(stackSize  >  0)  {  pathNames[stackSize  -  1]  =  null;  }  else  {  popStack();  skipStack();  }  [CE]  cannot  find  symbol  result  [FE]                ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {  popStack();      [BUGGY]  pathNames[result.length  -  1]  =  null;  if(stackSize  >  0)  {  pathNames[stackSize  -  1]  =  null;  }  else  {  popStack();  skipStack();  }  [BUGGY]      }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	262	262	2	replace	pathNames[result.length  -  1]  =  null;  if(stackSize  >  0)  {  pathNames[stackSize  -  1]  =  null;  }  else  {  popStack();  skipStack();  }	  pathNames[stackSize    -    1]    =    null;    if(stackSize    >    0)    {    pathNames[stackSize    -    1]    =    null;    }    else    {    popStack();    skipStack();    }    	non-compiled	[CE]  cannot  find  symbol  result	73	None	replace
667	[BUG]  [BUGGY]  pathNames[peek()  -  1]  =  null;  if(stackSize  >  0)  {  pathNames[stackSize  -  1]  =  null;  }  else  {  popStack();  skipStack();  }  [CE]  bad  operand  types  for  binary  operator  '-'  [FE]                  ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {  popStack();      [BUGGY]  pathNames[peek()  -  1]  =  null;  if(stackSize  >  0)  {  pathNames[stackSize  -  1]  =  null;  }  else  {  popStack();  skipStack();  }  [BUGGY]      }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	262	262	2	replace	pathNames[peek()  -  1]  =  null;  if(stackSize  >  0)  {  pathNames[stackSize  -  1]  =  null;  }  else  {  popStack();  skipStack();  }	  pathNames[stackSize    -    1]    =    null;    if(stackSize    >    0)    {    pathNames[stackSize    -    1]    =    null;    }    else    {    popStack();    skipStack();    }    	non-compiled	[CE]  bad  operand  types  for  binary  operator  '-'	73	None	replace
668	[BUG]  [BUGGY]  pathNames[size  -  1]  =  null;  if(stackSize  >  0)  {  pathNames[stackSize  -  1]  =  null;  }  else  {  popStack();  skipStack();  }  [CE]  cannot  find  symbol  size  [FE]                    ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {  popStack();      [BUGGY]  pathNames[size  -  1]  =  null;  if(stackSize  >  0)  {  pathNames[stackSize  -  1]  =  null;  }  else  {  popStack();  skipStack();  }  [BUGGY]      }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	262	262	2	replace	pathNames[size  -  1]  =  null;  if(stackSize  >  0)  {  pathNames[stackSize  -  1]  =  null;  }  else  {  popStack();  skipStack();  }	  pathNames[stackSize    -    1]    =    null;    if(stackSize    >    0)    {    pathNames[stackSize    -    1]    =    null;    }    else    {    popStack();    skipStack();    }    	non-compiled	[CE]  cannot  find  symbol  size	73	None	replace
669	[BUG]  [BUGGY]  pathNames[peek()  -  1]  =  null;  if(stackSize  >  0)  {  pathNames[pathStackSize  -  1]  =  null;  }  else  {  popStack();  skipStack();  }  [CE]  bad  operand  types  for  binary  operator  '-'  [FE]                      ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {  popStack();      [BUGGY]  pathNames[peek()  -  1]  =  null;  if(stackSize  >  0)  {  pathNames[pathStackSize  -  1]  =  null;  }  else  {  popStack();  skipStack();  }  [BUGGY]      }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	262	262	2	replace	pathNames[peek()  -  1]  =  null;  if(stackSize  >  0)  {  pathNames[pathStackSize  -  1]  =  null;  }  else  {  popStack();  skipStack();  }	  pathNames[stackSize    -    1]    =    null;    if(stackSize    >    0)    {    pathNames[stackSize    -    1]    =    null;    }    else    {    popStack();    skipStack();    }    	non-compiled	[CE]  bad  operand  types  for  binary  operator  '-'	73	None	replace
670	[BUG]  [BUGGY]  pathNames[0]  =  null;  if(stackSize  >  0)  {  pathNames[0]  =  null;  }  else  {  popStack();  skipStack();  }  [CE]  cannot  find  symbol  [FE]                        ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {  popStack();      [BUGGY]  pathNames[0]  =  null;  if(stackSize  >  0)  {  pathNames[0]  =  null;  }  else  {  popStack();  skipStack();  }  [BUGGY]      }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	262	262	2	replace	pathNames[0]  =  null;  if(stackSize  >  0)  {  pathNames[0]  =  null;  }  else  {  popStack();  skipStack();  }	  pathNames[stackSize    -    1]    =    null;    if(stackSize    >    0)    {    pathNames[stackSize    -    1]    =    null;    }    else    {    popStack();    skipStack();    }    	non-compiled	[CE]  cannot  find  symbol	73	None	replace
671	[BUG]  [BUGGY]  pathNames[stackSize  -  1]  =  new  String(pathIndices);  [CE]  no  suitable  constructor  found  for  String(int[])  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {  popStack();      [BUGGY]  pathNames[stackSize  -  1]  =  new  String(pathIndices);  [BUGGY]      }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	262	262	2	replace	pathNames[stackSize  -  1]  =  new  String(pathIndices);	  pathNames[stackSize    -    1]    =    null;    pathNames[stackSize    -    1]    =    null;    	non-compiled	[CE]  no  suitable  constructor  found  for  String(int[])	27	None	replace
672	[BUG]  [BUGGY]  [FE]  ArrayIndexOutOfBoundsException  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {  popStack();      [BUGGY]  pathNames[stackSize    -    1]    =    null;    pathNames[stackSize  -  1]  =  null;  if(stackSize  >  0)  {  pathNames[stackSize  -  1]  =  null;  pathNames[stackSize  -  1]  =  null;  }  [BUGGY]      }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	262	262	2	add	pathNames[stackSize        -        1]        =        null;        pathNames[stackSize    -    1]    =    null;    if(stackSize  >  0)  {  pathNames[stackSize  -  1]  =  null;  pathNames[stackSize  -  1]  =  null;  }	  	compilable	  [FE]  ArrayIndexOutOfBoundsException  	26	2	add
673	[BUG]  [BUGGY]  pathNames[stackSize    -    1]    =    null;    pathNames[stackSize  -  1]  =  null;  if(stackSize  >  0)  {  pathNames[stackSize  -  1]  =  null;  pathNames[stackSize  -  1]  =  null;  }  [FE]  ArrayIndexOutOfBoundsException  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {  popStack();      [BUGGY]  pathNames[stackSize    -    1]    =    null;    pathNames[stackSize  -  1]  =  null;  if(stackSize  >  0)  {  pathNames[stackSize  -  1]  =  null;  pathNames[stackSize  -  1]  =  null;  }  [BUGGY]      }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	262	262	2	replace	pathNames[stackSize        -        1]        =        null;        pathNames[stackSize    -    1]    =    null;    if(stackSize  >  0)  {  pathNames[stackSize  -  1]  =  null;  pathNames[stackSize  -  1]  =  null;  }	  	compilable	  [FE]  ArrayIndexOutOfBoundsException  	26	2	add
674	[BUG]  [BUGGY]  [FE]  ArrayIndexOutOfBoundsException  [FE]      ArrayIndexOutOfBoundsException    [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {  popStack();      [BUGGY]  pathNames[stackSize    -    1]    =    null;    pathNames[stackSize  -  1]  =  null;  if(stackSize  >  0)  {  pathNames[stackSize  -  1]  =  null;  pathNames[stackSize  -  1]  =  null;  }  else  {  popStack();  }  [BUGGY]      }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	262	262	2	add	pathNames[stackSize        -        1]        =        null;        pathNames[stackSize    -    1]    =    null;    if(stackSize  >  0)  {  pathNames[stackSize  -  1]  =  null;  pathNames[stackSize  -  1]  =  null;  }  else  {  popStack();  }	  	compilable	  [FE]  ArrayIndexOutOfBoundsException  	26	2	add
675	[BUG]  [BUGGY]  pathNames[stackSize    -    1]    =    null;    pathNames[stackSize  -  1]  =  null;  if(stackSize  >  0)  {  pathNames[stackSize  -  1]  =  null;  pathNames[stackSize  -  1]  =  null;  }  else  {  popStack();  }  [FE]  ArrayIndexOutOfBoundsException  [FE]      ArrayIndexOutOfBoundsException    [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {  popStack();      [BUGGY]  pathNames[stackSize    -    1]    =    null;    pathNames[stackSize  -  1]  =  null;  if(stackSize  >  0)  {  pathNames[stackSize  -  1]  =  null;  pathNames[stackSize  -  1]  =  null;  }  else  {  popStack();  }  [BUGGY]      }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	262	262	2	replace	pathNames[stackSize        -        1]        =        null;        pathNames[stackSize    -    1]    =    null;    if(stackSize  >  0)  {  pathNames[stackSize  -  1]  =  null;  pathNames[stackSize  -  1]  =  null;  }  else  {  popStack();  }	  	compilable	  [FE]  ArrayIndexOutOfBoundsException  	26	2	add
676	[BUG]  [BUGGY]  pathNames[stackSize    -    1]    =    null;    pathNames[stackSize  -  1]  =  null;  pathNames[stackSize  -  1]  =  null;  pathNames[stackSsize  -  1]  =  null;  [CE]  cannot  find  symbol  stackSsize  [FE]        ArrayIndexOutOfBoundsException    [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {  popStack();      [BUGGY]  pathNames[stackSize    -    1]    =    null;    pathNames[stackSize  -  1]  =  null;  pathNames[stackSize  -  1]  =  null;  pathNames[stackSsize  -  1]  =  null;  [BUGGY]      }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	262	262	2	replace	pathNames[stackSize        -        1]        =        null;        pathNames[stackSize    -    1]    =    null;    pathNames[stackSize  -  1]  =  null;  pathNames[stackSsize  -  1]  =  null;	  	non-compiled	[CE]  cannot  find  symbol  stackSsize	26	None	add
677	[BUG]  [BUGGY]  pathNames[stackSize    -    1]    =    null;    pathNames[stackSize  -  1]  =  null;  if(stackSize  >  0)  {  pathNames[stackSize  -  1]  =  null;  pathNames[stackSize  -  1]  =  null;  }  else  {  popStack();  [CE]  ';'  expected  [FE]          ArrayIndexOutOfBoundsException    [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {  popStack();      [BUGGY]  pathNames[stackSize    -    1]    =    null;    pathNames[stackSize  -  1]  =  null;  if(stackSize  >  0)  {  pathNames[stackSize  -  1]  =  null;  pathNames[stackSize  -  1]  =  null;  }  else  {  popStack();  [BUGGY]      }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	262	262	2	replace	pathNames[stackSize        -        1]        =        null;        pathNames[stackSize    -    1]    =    null;    if(stackSize  >  0)  {  pathNames[stackSize  -  1]  =  null;  pathNames[stackSize  -  1]  =  null;  }  else  {  popStack();	  	non-compiled	[CE]  ';'  expected	26	None	add
678	[BUG]  [BUGGY]  pathNames[stackSize  -  2]  =  null;  if(stackSize  >  0)  {  pathNames[stackSize  -  2]  =  null;  }  else  {  popStack();  skipStack();  }  [CE]  cannot  find  symbol  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {  popStack();      [BUGGY]  pathNames[stackSize  -  2]  =  null;  if(stackSize  >  0)  {  pathNames[stackSize  -  2]  =  null;  }  else  {  popStack();  skipStack();  }  [BUGGY]      }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	262	262	2	replace	pathNames[stackSize    -    2]    =    null;    if(stackSize  >  0)  {  pathNames[stackSize  -  2]  =  null;  }  else  {  popStack();  skipStack();  }	  	non-compiled	[CE]  cannot  find  symbol	36	None	add
679	[BUG]  [BUGGY]  pathNames[stackSize  -  2]  =  null;  if(stackSize  >  0)  {  pathNames[stackSize  -  2]  =  null;  }  else  {  popStack();  [CE]  ';'  expected  [FE]      ArrayIndexOutOfBoundsException    [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {  popStack();      [BUGGY]  pathNames[stackSize  -  2]  =  null;  if(stackSize  >  0)  {  pathNames[stackSize  -  2]  =  null;  }  else  {  popStack();  [BUGGY]      }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	262	262	2	replace	pathNames[stackSize    -    2]    =    null;    if(stackSize  >  0)  {  pathNames[stackSize  -  2]  =  null;  }  else  {  popStack();	  	non-compiled	[CE]  ';'  expected	36	None	add
680	[BUG]  [BUGGY]  pathNames[stackSize  -  2]  =  null;  if(stackSize  >  0)  {  pathNames[stackSize  -  2]  =  null;  }  else  {  popStack();  stack();  }  [CE]  cannot  find  symbol  [FE]        ArrayIndexOutOfBoundsException    [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {  popStack();      [BUGGY]  pathNames[stackSize  -  2]  =  null;  if(stackSize  >  0)  {  pathNames[stackSize  -  2]  =  null;  }  else  {  popStack();  stack();  }  [BUGGY]      }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	262	262	2	replace	pathNames[stackSize    -    2]    =    null;    if(stackSize  >  0)  {  pathNames[stackSize  -  2]  =  null;  }  else  {  popStack();  stack();  }	  	non-compiled	[CE]  cannot  find  symbol	36	None	add
681	[BUG]  [BUGGY]  if(stackSize  >  0)  {  pathIndices  =  new  int[stackSize  -  1];  System.arraycopy(pathNames,  0,  pathNames,  0,  stackSize  -  1);  }  if(stackSize  >  0)  {  pathIndices  =  new  int[stackSize  -  1];  System.arraycopy(pathNames,  0,  pathNames,  1,  stackSize  -  1]);  }  [CE]  ')'  expected  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {  popStack();      [BUGGY]  if(stackSize  >  0)  {  pathIndices  =  new  int[stackSize  -  1];  System.arraycopy(pathNames,  0,  pathNames,  0,  stackSize  -  1);  }  if(stackSize  >  0)  {  pathIndices  =  new  int[stackSize  -  1];  System.arraycopy(pathNames,  0,  pathNames,  1,  stackSize  -  1]);  }  [BUGGY]      }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	262	262	2	replace	if(stackSize    >    0)    {    pathIndices    =    new    int[stackSize    -    1];    System.arraycopy(pathNames,    0,    pathNames,    0,    stackSize    -    1);    }    if(stackSize  >  0)  {  pathIndices  =  new  int[stackSize  -  1];  System.arraycopy(pathNames,  0,  pathNames,  1,  stackSize  -  1]);  }	  	non-compiled	[CE]  ')'  expected	43	None	add
682	[BUG]  [BUGGY]  if(stackSize  >  0)  {  pathIndices  =  new  int[stackSize  -  1];  System.arraycopy(pathNames,  0,  pathNames,  0,  stackSize  -  1);  }  if(stackSize  >  0)  {  pathIndices  =  new  int[stackSize  -  1];  System.arraycopy(pathNames,  0,  pathNames,  0,  stackSize  -  1]  [CE]  ')'  expected  [FE]      ArrayIndexOutOfBoundsException    [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {  popStack();      [BUGGY]  if(stackSize  >  0)  {  pathIndices  =  new  int[stackSize  -  1];  System.arraycopy(pathNames,  0,  pathNames,  0,  stackSize  -  1);  }  if(stackSize  >  0)  {  pathIndices  =  new  int[stackSize  -  1];  System.arraycopy(pathNames,  0,  pathNames,  0,  stackSize  -  1]  [BUGGY]      }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	262	262	2	replace	if(stackSize    >    0)    {    pathIndices    =    new    int[stackSize    -    1];    System.arraycopy(pathNames,    0,    pathNames,    0,    stackSize    -    1);    }    if(stackSize  >  0)  {  pathIndices  =  new  int[stackSize  -  1];  System.arraycopy(pathNames,  0,  pathNames,  0,  stackSize  -  1]	  	non-compiled	[CE]  ')'  expected	43	None	add
683	[BUG]  [BUGGY]  if(stackSize  >  0)  {  pathIndices  =  new  int[stackSize  -  1];  System.arraycopy(pathNames,  0,  pathNames,  0,  stackSize  -  1);  }  if(stackSize  >  1)  {  pathIndices  =  new  int[stackSize  -  1];  System.arraycopy(pathNames,  0,  pathNames,  0,  stackSize  -  1]);  }  [CE]  ')'  expected  [FE]        ArrayIndexOutOfBoundsException    [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {  popStack();      [BUGGY]  if(stackSize  >  0)  {  pathIndices  =  new  int[stackSize  -  1];  System.arraycopy(pathNames,  0,  pathNames,  0,  stackSize  -  1);  }  if(stackSize  >  1)  {  pathIndices  =  new  int[stackSize  -  1];  System.arraycopy(pathNames,  0,  pathNames,  0,  stackSize  -  1]);  }  [BUGGY]      }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	262	262	2	replace	if(stackSize    >    0)    {    pathIndices    =    new    int[stackSize    -    1];    System.arraycopy(pathNames,    0,    pathNames,    0,    stackSize    -    1);    }    if(stackSize  >  1)  {  pathIndices  =  new  int[stackSize  -  1];  System.arraycopy(pathNames,  0,  pathNames,  0,  stackSize  -  1]);  }	  	non-compiled	[CE]  ')'  expected	43	None	add
684	[BUG]  [BUGGY]  if(stackSize  >  0)  {  pathIndices  =  new  int[stackSize  -  1];  System.arraycopy(pathNames,  0,  pathNames,  0,  stackSize  -  1);  }  if(stackSize  >  0)  {  pathIndices  =  new  int[stackSize  -  1];  System.arraycopy(pathNames,  0,  pathNames,  0,  stackSize  -  1].  [CE]  [FE]          ArrayIndexOutOfBoundsException    [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {  popStack();      [BUGGY]  if(stackSize  >  0)  {  pathIndices  =  new  int[stackSize  -  1];  System.arraycopy(pathNames,  0,  pathNames,  0,  stackSize  -  1);  }  if(stackSize  >  0)  {  pathIndices  =  new  int[stackSize  -  1];  System.arraycopy(pathNames,  0,  pathNames,  0,  stackSize  -  1].  [BUGGY]      }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	262	262	2	replace	if(stackSize    >    0)    {    pathIndices    =    new    int[stackSize    -    1];    System.arraycopy(pathNames,    0,    pathNames,    0,    stackSize    -    1);    }    if(stackSize  >  0)  {  pathIndices  =  new  int[stackSize  -  1];  System.arraycopy(pathNames,  0,  pathNames,  0,  stackSize  -  1].	  	non-compiled	[CE]  	43	None	add
685	[BUG]  [BUGGY]  pathIndices[stackSize  -  1]  =  null;  System.arraycopy(pathNames,  0,  pathNames,  0,  stackSize  -  1);  }  else  {  throw  new  JsonTokenException( " ");  }  [CE]  [FE]                    ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {  popStack();      [BUGGY]  pathIndices[stackSize  -  1]  =  null;  System.arraycopy(pathNames,  0,  pathNames,  0,  stackSize  -  1);  }  else  {  throw  new  JsonTokenException( " ");  }  [BUGGY]      }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	262	262	2	replace	pathIndices[stackSize  -  1]  =  null;  System.arraycopy(pathNames,  0,  pathNames,  0,  stackSize  -  1);  }  else  {  throw  new  JsonTokenException( " ");  }	  if(stackSize    >    0)    {    pathIndices[stackSize    -    1]    =    null;    System.arraycopy(pathNames,    0,    pathNames,    0,    stackSize    -    1);    }    else    {    throw    new    JsonTokenException(   "   ");    }    	non-compiled	[CE]  	52	None	replace
686	[BUG]  [BUGGY]  pathIndexOutOfBoundsException  e  =  new  PathIndexOutOfBoundsException( " ");  pathNames[stackSize  -  1]  =  null;  [CE]  cannot  find  symbol  [FE]              ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {  popStack();      [BUGGY]  pathIndexOutOfBoundsException  e  =  new  PathIndexOutOfBoundsException( " ");  pathNames[stackSize  -  1]  =  null;  [BUGGY]      }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	262	262	2	replace	pathIndexOutOfBoundsException  e  =  new  PathIndexOutOfBoundsException( " ");  pathNames[stackSize  -  1]  =  null;	  pathNames[stackSize    -    1]    =    null;    PathIndexOutOfBoundsException    e    =    new    PathIndexOutOfBoundsException(   "   ");    pathNames[stackSize    -    1]    =    null;    	non-compiled	[CE]  cannot  find  symbol	30	None	replace
687	[BUG]  [BUGGY]  pathNames[stackSize  -  1]  =  new  PathIndexOutOfBoundsException( " ");  pathIndices[stackSize  -  1]  =  null;  [CE]  cannot  find  symbol  [FE]                ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {  popStack();      [BUGGY]  pathNames[stackSize  -  1]  =  new  PathIndexOutOfBoundsException( " ");  pathIndices[stackSize  -  1]  =  null;  [BUGGY]      }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	262	262	2	replace	pathNames[stackSize  -  1]  =  new  PathIndexOutOfBoundsException( " ");  pathIndices[stackSize  -  1]  =  null;	  pathNames[stackSize    -    1]    =    null;    PathIndexOutOfBoundsException    e    =    new    PathIndexOutOfBoundsException(   "   ");    pathNames[stackSize    -    1]    =    null;    	non-compiled	[CE]  cannot  find  symbol	30	None	replace
688	[BUG]  [BUGGY]  pathNames[stackSize  -  1]  =  null;  pathIndexOutOfBoundsException  e  =  new  PathIndexOutOfBoundsException( " ");  pathNames[stackSize  -  1]  =  null;  [CE]  cannot  find  symbol  [FE]                  ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {  popStack();      [BUGGY]  pathNames[stackSize  -  1]  =  null;  pathIndexOutOfBoundsException  e  =  new  PathIndexOutOfBoundsException( " ");  pathNames[stackSize  -  1]  =  null;  [BUGGY]      }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	262	262	2	replace	pathNames[stackSize  -  1]  =  null;  pathIndexOutOfBoundsException  e  =  new  PathIndexOutOfBoundsException( " ");  pathNames[stackSize  -  1]  =  null;	  pathNames[stackSize    -    1]    =    null;    PathIndexOutOfBoundsException    e    =    new    PathIndexOutOfBoundsException(   "   ");    pathNames[stackSize    -    1]    =    null;    	non-compiled	[CE]  cannot  find  symbol	30	None	replace
689	[BUG]  [BUGGY]  pathNames[stackSize  -  1]  =  new  PathIndexOutOfBoundsException();  pathIndices[stackSize  -  1]  =  null;  [CE]  cannot  find  symbol  [FE]            ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {  popStack();      [BUGGY]  pathNames[stackSize  -  1]  =  new  PathIndexOutOfBoundsException();  pathIndices[stackSize  -  1]  =  null;  [BUGGY]      }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	262	262	2	replace	pathNames[stackSize  -  1]  =  new  PathIndexOutOfBoundsException();  pathIndices[stackSize  -  1]  =  null;	  pathNames[stackSize    -    1]    =    null;    PathIndexOutOfBoundsException    e    =    new    PathIndexOutOfBoundsException();    pathNames[stackSize    -    1]    =    null;    	non-compiled	[CE]  cannot  find  symbol	29	None	replace
690	[BUG]  [BUGGY]  pathNames[stackSize  -  1]  =     "null   "  +  JsonToken.NAME;  PathInfo  pathNames[stackSize  -  1]  =   "null   "  +  JsonToken.NAME;  [CE]  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {  popStack();      [BUGGY]  pathNames[stackSize  -  1]  =     "null   "  +  JsonToken.NAME;  PathInfo  pathNames[stackSize  -  1]  =   "null   "  +  JsonToken.NAME;  [BUGGY]      }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	262	262	2	replace	pathNames[stackSize    -    1]    =       "null   "    +    JsonToken.NAME;    PathInfo  pathNames[stackSize  -  1]  =   "null   "  +  JsonToken.NAME;	  	non-compiled	[CE]  	90	None	add
691	[BUG]  [BUGGY]  pathNames[stackSize  -  1]  =     "null   "  +  JsonToken.NAME;  pathNames[stackSize  -  1]  =  null   "  +  JsonToken.NAME;  [CE]  unclosed  string  literal  [FE]      ArrayIndexOutOfBoundsException    [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {  popStack();      [BUGGY]  pathNames[stackSize  -  1]  =     "null   "  +  JsonToken.NAME;  pathNames[stackSize  -  1]  =  null   "  +  JsonToken.NAME;  [BUGGY]      }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	262	262	2	replace	pathNames[stackSize    -    1]    =       "null   "    +    JsonToken.NAME;    pathNames[stackSize  -  1]  =  null   "  +  JsonToken.NAME;	  	non-compiled	[CE]  unclosed  string  literal	90	None	add
692	[BUG]  [BUGGY]  if(stackSize  >  0)  {  pathIndices[stackSize  -  1]  =   "null ";  }  else  {  popStack();  }  [CE]  incompatible  types  [FE]                    ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {  popStack();      [BUGGY]  if(stackSize  >  0)  {  pathIndices[stackSize  -  1]  =   "null ";  }  else  {  popStack();  }  [BUGGY]      }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	262	262	2	replace	if(stackSize  >  0)  {  pathIndices[stackSize  -  1]  =   "null ";  }  else  {  popStack();  }	  if(stackSize    >    0)    {    pathIndices[stackSize    -    1]    =    null;    }    else    {    popStack();    }    	non-compiled	[CE]  incompatible  types	25	None	replace
693	[BUG]  [BUGGY]  pathNames[stackSize  -  1]  =  new  PathIndexOutOfBoundsException(String.valueOf(stackSize  -  1));  pathIndices[stackSize  -  1]  =  null;  [CE]  cannot  find  symbol  [FE]            ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {  popStack();      [BUGGY]  pathNames[stackSize  -  1]  =  new  PathIndexOutOfBoundsException(String.valueOf(stackSize  -  1));  pathIndices[stackSize  -  1]  =  null;  [BUGGY]      }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	262	262	2	replace	pathNames[stackSize  -  1]  =  new  PathIndexOutOfBoundsException(String.valueOf(stackSize  -  1));  pathIndices[stackSize  -  1]  =  null;	  pathNames[stackSize    -    1]    =    null;    PathIndexOutOfBoundsException    e    =    new    PathIndexOutOfBoundsException(String.valueOf(stackSize    -    1));    pathNames[stackSize    -    1]    =    null;    	non-compiled	[CE]  cannot  find  symbol	57	None	replace
694	[BUG]  [BUGGY]  pathNames[stackSize    -    1]    =    null;    if(stackSize  >  0)  {  pathNames[stackSize  -  1]  =  null;  }  else  {  popStack();  throw  new  IllegalArgumentException(   "   ");  }  if(stackSize  >  0)  {  pathNames[stackSize  -  1]  =  null;  if(stackSize  >  0)  {  pathNames[stackSize  -  1]  =  null;  }  else  {  popStack();  throw  new  Il  [CE]  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {  popStack();      [BUGGY]  pathNames[stackSize    -    1]    =    null;    if(stackSize  >  0)  {  pathNames[stackSize  -  1]  =  null;  }  else  {  popStack();  throw  new  IllegalArgumentException(   "   ");  }  if(stackSize  >  0)  {  pathNames[stackSize  -  1]  =  null;  if(stackSize  >  0)  {  pathNames[stackSize  -  1]  =  null;  }  else  {  popStack();  throw  new  Il  [BUGGY]      }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	262	262	2	replace	pathNames[stackSize        -        1]        =        null;        if(stackSize    >    0)    {    pathNames[stackSize    -    1]    =    null;    }    else    {    popStack();    throw    new    IllegalArgumentException(   "   ");    }    if(stackSize  >  0)  {  pathNames[stackSize  -  1]  =  null;  if(stackSize  >  0)  {  pathNames[stackSize  -  1]  =  null;  }  else  {  popStack();  throw  new  Il	  	non-compiled	[CE]  	71	None	add
695	[BUG]  [BUGGY]  if(stackSize  >  0)  {  pathIndices[stackSize  -  1]  =  pathNames;  System.arraycopy(pathNames,  0,  pathNames,  0,  stackSize  -  1);  }  [CE]  incompatible  types  [FE]            ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {  popStack();      [BUGGY]  if(stackSize  >  0)  {  pathIndices[stackSize  -  1]  =  pathNames;  System.arraycopy(pathNames,  0,  pathNames,  0,  stackSize  -  1);  }  [BUGGY]      }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	262	262	2	replace	if(stackSize  >  0)  {  pathIndices[stackSize  -  1]  =  pathNames;  System.arraycopy(pathNames,  0,  pathNames,  0,  stackSize  -  1);  }	  if(stackSize    >    0)    {    pathIndices[stackSize    -    1]    =    null;    System.arraycopy(pathNames,    0,    pathNames,    0,    stackSize    -    1);    }    	non-compiled	[CE]  incompatible  types	47	None	replace
696	[BUG]  [BUGGY]  if(stackSize  >  0)  {  pathIndices[stackSize  -  1]  =  new  String(pathNames);  System.arraycopy(pathNames,  0,  pathNames,  0,  stackSize  -  1);  }  [CE]  no  suitable  constructor  found  for  String(String[])  [FE]              ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {  popStack();      [BUGGY]  if(stackSize  >  0)  {  pathIndices[stackSize  -  1]  =  new  String(pathNames);  System.arraycopy(pathNames,  0,  pathNames,  0,  stackSize  -  1);  }  [BUGGY]      }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	262	262	2	replace	if(stackSize  >  0)  {  pathIndices[stackSize  -  1]  =  new  String(pathNames);  System.arraycopy(pathNames,  0,  pathNames,  0,  stackSize  -  1);  }	  if(stackSize    >    0)    {    pathIndices[stackSize    -    1]    =    null;    System.arraycopy(pathNames,    0,    pathNames,    0,    stackSize    -    1);    }    	non-compiled	[CE]  no  suitable  constructor  found  for  String(String[])	47	None	replace
697	[BUG]  [BUGGY]  if(stackSize  >  0)  {  int[]  result  =  new  int[stackSize  -  1];  System.arraycopy(pathNames,  0,  pathNames,  0,  stackSize  -  1);  }  if(stackSize  >  0)  {  int[]  result  =  new  int[stackSize  -  1];  System.arraycopy(pathNames,  0,  pathNames,  1,  stackSize  -  1]);  }  [CE]  ')'  expected  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {  popStack();      [BUGGY]  if(stackSize  >  0)  {  int[]  result  =  new  int[stackSize  -  1];  System.arraycopy(pathNames,  0,  pathNames,  0,  stackSize  -  1);  }  if(stackSize  >  0)  {  int[]  result  =  new  int[stackSize  -  1];  System.arraycopy(pathNames,  0,  pathNames,  1,  stackSize  -  1]);  }  [BUGGY]      }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	262	262	2	replace	if(stackSize    >    0)    {    int[]    result    =    new    int[stackSize    -    1];    System.arraycopy(pathNames,    0,    pathNames,    0,    stackSize    -    1);    }    if(stackSize  >  0)  {  int[]  result  =  new  int[stackSize  -  1];  System.arraycopy(pathNames,  0,  pathNames,  1,  stackSize  -  1]);  }	  	non-compiled	[CE]  ')'  expected	77	None	add
698	[BUG]  [BUGGY]  if(stackSize  >  0)  {  int[]  result  =  new  int[stackSize  -  1];  System.arraycopy(pathNames,  0,  pathNames,  0,  stackSize  -  1);  }  if(stackSize  >  0)  {  int[]  result  =  new  int[stackSize  -  1];  System.arraycopy(pathNames,  0,  pathNames,  0,  stackSize  -  1]  [CE]  ')'  expected  [FE]      ArrayIndexOutOfBoundsException    [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {  popStack();      [BUGGY]  if(stackSize  >  0)  {  int[]  result  =  new  int[stackSize  -  1];  System.arraycopy(pathNames,  0,  pathNames,  0,  stackSize  -  1);  }  if(stackSize  >  0)  {  int[]  result  =  new  int[stackSize  -  1];  System.arraycopy(pathNames,  0,  pathNames,  0,  stackSize  -  1]  [BUGGY]      }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	262	262	2	replace	if(stackSize    >    0)    {    int[]    result    =    new    int[stackSize    -    1];    System.arraycopy(pathNames,    0,    pathNames,    0,    stackSize    -    1);    }    if(stackSize  >  0)  {  int[]  result  =  new  int[stackSize  -  1];  System.arraycopy(pathNames,  0,  pathNames,  0,  stackSize  -  1]	  	non-compiled	[CE]  ')'  expected	77	None	add
699	[BUG]  [BUGGY]  if(stackSize  >  0)  {  int[]  result  =  new  int[stackSize  -  1];  System.arraycopy(pathNames,  0,  pathNames,  0,  stackSize  -  1);  }  if(stackSize  >  1)  {  int[]  result  =  new  int[stackSize  -  1];  System.arraycopy(pathNames,  0,  pathNames,  0,  stackSize  -  1]);  }  [CE]  ')'  expected  [FE]        ArrayIndexOutOfBoundsException    [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {  popStack();      [BUGGY]  if(stackSize  >  0)  {  int[]  result  =  new  int[stackSize  -  1];  System.arraycopy(pathNames,  0,  pathNames,  0,  stackSize  -  1);  }  if(stackSize  >  1)  {  int[]  result  =  new  int[stackSize  -  1];  System.arraycopy(pathNames,  0,  pathNames,  0,  stackSize  -  1]);  }  [BUGGY]      }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	262	262	2	replace	if(stackSize    >    0)    {    int[]    result    =    new    int[stackSize    -    1];    System.arraycopy(pathNames,    0,    pathNames,    0,    stackSize    -    1);    }    if(stackSize  >  1)  {  int[]  result  =  new  int[stackSize  -  1];  System.arraycopy(pathNames,  0,  pathNames,  0,  stackSize  -  1]);  }	  	non-compiled	[CE]  ')'  expected	77	None	add
700	[BUG]  [BUGGY]  pathNames[stackSize  -  1]  =  JsonToken.VALUE_CLOSED;  [CE]  cannot  find  symbol  VALUE_CLOSED  [FE]                  ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {  popStack();      [BUGGY]  pathNames[stackSize  -  1]  =  JsonToken.VALUE_CLOSED;  [BUGGY]      }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	262	262	2	replace	pathNames[stackSize  -  1]  =  JsonToken.VALUE_CLOSED;	  pathNames[stackSize    -    1]    =    JsonToken.VALUE_EMBEDDED;    	non-compiled	[CE]  cannot  find  symbol  VALUE_CLOSED	54	None	replace
701	[BUG]  [BUGGY]  pathNames[stackSize  -  1]  =  null,;  [CE]  ';'  expected  [FE]          ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {  popStack();      [BUGGY]  pathNames[stackSize  -  1]  =  null,;  [BUGGY]      }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	262	262	2	replace	pathNames[stackSize  -  1]  =  null,;	  pathNames[stackSize    -    2]    =           "null       ";    pathNames[stackSize    -    2]    =       "null   ",;    	non-compiled	[CE]  ';'  expected	8	None	replace
702	[BUG]  [BUGGY]  [FE]  ArrayIndexOutOfBoundsException  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {  popStack();      [BUGGY]  pathNames[stackSize  -  1]  =  null;  if(stackSize  <  2)  {  pathNames[stackSize  -  1]  =  null;  }  else  {  popStack();  }  [BUGGY]      }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	262	262	2	add	pathNames[stackSize  -  1]  =  null;  if(stackSize  <  2)  {  pathNames[stackSize  -  1]  =  null;  }  else  {  popStack();  }	  pathNames[stackSize    -    1]    =    null;    if(stackSize    >    0)    {    pathNames[stackSize    -    1]    =    null;    }    else    {    popStack();    }    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	68	2	replace
703	[BUG]  [BUGGY]  pathNames[stackSize  -  1]  =  null;  if(stackSize  <  2)  {  pathNames[stackSize  -  1]  =  null;  }  else  {  popStack();  }  [FE]  ArrayIndexOutOfBoundsException  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {  popStack();      [BUGGY]  pathNames[stackSize  -  1]  =  null;  if(stackSize  <  2)  {  pathNames[stackSize  -  1]  =  null;  }  else  {  popStack();  }  [BUGGY]      }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	262	262	2	replace	pathNames[stackSize  -  1]  =  null;  if(stackSize  <  2)  {  pathNames[stackSize  -  1]  =  null;  }  else  {  popStack();  }	  pathNames[stackSize    -    1]    =    null;    if(stackSize    >    0)    {    pathNames[stackSize    -    1]    =    null;    }    else    {    popStack();    }    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	68	2	replace
704	[BUG]  [BUGGY]  pathNames[peek()  -  1]  =  null;  if(stackSize  >  0)  {  pathNames[peek()  -  1]  =  null;  }  else  {  popStack();  }  [CE]  bad  operand  types  for  binary  operator  '-'  [FE]      ArrayIndexOutOfBoundsException    [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {  popStack();      [BUGGY]  pathNames[peek()  -  1]  =  null;  if(stackSize  >  0)  {  pathNames[peek()  -  1]  =  null;  }  else  {  popStack();  }  [BUGGY]      }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	262	262	2	replace	pathNames[peek()  -  1]  =  null;  if(stackSize  >  0)  {  pathNames[peek()  -  1]  =  null;  }  else  {  popStack();  }	  pathNames[stackSize    -    1]    =    null;    if(stackSize    >    0)    {    pathNames[stackSize    -    1]    =    null;    }    else    {    popStack();    }    	non-compiled	[CE]  bad  operand  types  for  binary  operator  '-'	68	None	replace
705	[BUG]  [BUGGY]  pathNames[result.length  -  1]  =  null;  if(stackSize  >  0)  {  pathNames[stackSize  -  1]  =  null;  }  else  {  popStack();  }  [CE]  cannot  find  symbol  result  [FE]        ArrayIndexOutOfBoundsException    [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {  popStack();      [BUGGY]  pathNames[result.length  -  1]  =  null;  if(stackSize  >  0)  {  pathNames[stackSize  -  1]  =  null;  }  else  {  popStack();  }  [BUGGY]      }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	262	262	2	replace	pathNames[result.length  -  1]  =  null;  if(stackSize  >  0)  {  pathNames[stackSize  -  1]  =  null;  }  else  {  popStack();  }	  pathNames[stackSize    -    1]    =    null;    if(stackSize    >    0)    {    pathNames[stackSize    -    1]    =    null;    }    else    {    popStack();    }    	non-compiled	[CE]  cannot  find  symbol  result	68	None	replace
706	[BUG]  [BUGGY]  [FE]  ArrayIndexOutOfBoundsException  [FE]                ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {  popStack();      [BUGGY]  pathNames[stackSize  -  1]  =   "null "  +  JsonToken.STRING;  [BUGGY]      }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	262	262	2	add	pathNames[stackSize  -  1]  =   "null "  +  JsonToken.STRING;	  pathNames[stackSize    -    1]    =       "null   "    +    JsonToken.START_OBJECT;    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	60	2	replace
707	[BUG]  [BUGGY]  pathNames[stackSize  -  1]  =   "null "  +  JsonToken.STRING;  [FE]  ArrayIndexOutOfBoundsException  [FE]                ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {  popStack();      [BUGGY]  pathNames[stackSize  -  1]  =   "null "  +  JsonToken.STRING;  [BUGGY]      }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	262	262	2	replace	pathNames[stackSize  -  1]  =   "null "  +  JsonToken.STRING;	  pathNames[stackSize    -    1]    =       "null   "    +    JsonToken.START_OBJECT;    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	60	2	replace
708	[BUG]  [BUGGY]  [FE]  ArrayIndexOutOfBoundsException  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {  popStack();      [BUGGY]  if(stackSize  >  0)  {  pathNames[stackSize  -  1]  =  null;  }  else  {  popStack();  }  if(stackSize  <  0)  {  pathNames[stackSize  -  1]  =  null;  }  else  {  popStack();  }  [BUGGY]      }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	262	262	2	add	if(stackSize    >    0)    {    pathNames[stackSize    -    1]    =    null;    }    else    {    popStack();    }    if(stackSize  <  0)  {  pathNames[stackSize  -  1]  =  null;  }  else  {  popStack();  }	  	compilable	  [FE]  ArrayIndexOutOfBoundsException  	23	2	add
709	[BUG]  [BUGGY]  if(stackSize  >  0)  {  pathNames[stackSize  -  1]  =  null;  }  else  {  popStack();  }  if(stackSize  <  0)  {  pathNames[stackSize  -  1]  =  null;  }  else  {  popStack();  }  [FE]  ArrayIndexOutOfBoundsException  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {  popStack();      [BUGGY]  if(stackSize  >  0)  {  pathNames[stackSize  -  1]  =  null;  }  else  {  popStack();  }  if(stackSize  <  0)  {  pathNames[stackSize  -  1]  =  null;  }  else  {  popStack();  }  [BUGGY]      }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	262	262	2	replace	if(stackSize    >    0)    {    pathNames[stackSize    -    1]    =    null;    }    else    {    popStack();    }    if(stackSize  <  0)  {  pathNames[stackSize  -  1]  =  null;  }  else  {  popStack();  }	  	compilable	  [FE]  ArrayIndexOutOfBoundsException  	23	2	add
710	[BUG]  [BUGGY]  if(stackSize  >  0)  {  pathNames[stackSize  -  1]  =  null;  }  else  {  popStack();  }  if(stackSize  >  0)  {  pathNames[stackSsize  -  1]  =  null;  }  else  {  popStack();  }  [CE]  cannot  find  symbol  stackSsize  [FE]      ArrayIndexOutOfBoundsException    [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {  popStack();      [BUGGY]  if(stackSize  >  0)  {  pathNames[stackSize  -  1]  =  null;  }  else  {  popStack();  }  if(stackSize  >  0)  {  pathNames[stackSsize  -  1]  =  null;  }  else  {  popStack();  }  [BUGGY]      }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	262	262	2	replace	if(stackSize    >    0)    {    pathNames[stackSize    -    1]    =    null;    }    else    {    popStack();    }    if(stackSize  >  0)  {  pathNames[stackSsize  -  1]  =  null;  }  else  {  popStack();  }	  	non-compiled	[CE]  cannot  find  symbol  stackSsize	23	None	add
711	[BUG]  [BUGGY]  Object[]  result  =  new  Object[stackSize  -  1];  for(int  i  =  0;  i  <  stackSize;  ++i)  {  result[i]  =  handleMissingValue();  }  [CE]  cannot  find  symbol  [FE]            ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {  popStack();      [BUGGY]  Object[]  result  =  new  Object[stackSize  -  1];  for(int  i  =  0;  i  <  stackSize;  ++i)  {  result[i]  =  handleMissingValue();  }  [BUGGY]      }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	262	262	2	replace	Object[]  result  =  new  Object[stackSize  -  1];  for(int  i  =  0;  i  <  stackSize;  ++i)  {  result[i]  =  handleMissingValue();  }	  if(stackSize    >    0)    {    int[]    result    =    new    int[stackSize    -    1];    for(int    i    =    0;    i    <    stackSize;    ++i)    {    result[i]    =    handleMissingValue();    }    	non-compiled	[CE]  cannot  find  symbol	79	None	replace
712	[BUG]  [BUGGY]  Integer[]  result  =  new  Integer[stackSize  -  1];  for(int  i  =  0;  i  <  stackSize;  ++i)  {  result[i]  =  handleMissingValue();  }  [CE]  cannot  find  symbol  [FE]              ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {  popStack();      [BUGGY]  Integer[]  result  =  new  Integer[stackSize  -  1];  for(int  i  =  0;  i  <  stackSize;  ++i)  {  result[i]  =  handleMissingValue();  }  [BUGGY]      }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	262	262	2	replace	Integer[]  result  =  new  Integer[stackSize  -  1];  for(int  i  =  0;  i  <  stackSize;  ++i)  {  result[i]  =  handleMissingValue();  }	  if(stackSize    >    0)    {    int[]    result    =    new    int[stackSize    -    1];    for(int    i    =    0;    i    <    stackSize;    ++i)    {    result[i]    =    handleMissingValue();    }    	non-compiled	[CE]  cannot  find  symbol	79	None	replace
713	[BUG]  [BUGGY]  if(stackSize  <  1)  {  int[]  result  =  new  int[stackSize  -  1];  for(int  i  =  0;  i  <  stackSize;  ++i)  {  result[i]  =  handleMissingValue();  }  [CE]  ';'  expected  [FE]                ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {  popStack();      [BUGGY]  if(stackSize  <  1)  {  int[]  result  =  new  int[stackSize  -  1];  for(int  i  =  0;  i  <  stackSize;  ++i)  {  result[i]  =  handleMissingValue();  }  [BUGGY]      }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	262	262	2	replace	if(stackSize  <  1)  {  int[]  result  =  new  int[stackSize  -  1];  for(int  i  =  0;  i  <  stackSize;  ++i)  {  result[i]  =  handleMissingValue();  }	  if(stackSize    >    0)    {    int[]    result    =    new    int[stackSize    -    1];    for(int    i    =    0;    i    <    stackSize;    ++i)    {    result[i]    =    handleMissingValue();    }    	non-compiled	[CE]  ';'  expected	79	None	replace
714	[BUG]  [BUGGY]  if(stackSize  >  0)  {  int[]  result  =  new  int[stackSize  -  2];  for(int  i  =  0;  i  <  stackSize;  ++i)  {  result[i]  =  handleMissingValue();  }  [CE]  ';'  expected  [FE]                  ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {  popStack();      [BUGGY]  if(stackSize  >  0)  {  int[]  result  =  new  int[stackSize  -  2];  for(int  i  =  0;  i  <  stackSize;  ++i)  {  result[i]  =  handleMissingValue();  }  [BUGGY]      }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	262	262	2	replace	if(stackSize  >  0)  {  int[]  result  =  new  int[stackSize  -  2];  for(int  i  =  0;  i  <  stackSize;  ++i)  {  result[i]  =  handleMissingValue();  }	  if(stackSize    >    0)    {    int[]    result    =    new    int[stackSize    -    1];    for(int    i    =    0;    i    <    stackSize;    ++i)    {    result[i]    =    handleMissingValue();    }    	non-compiled	[CE]  ';'  expected	79	None	replace
715	[BUG]  [BUGGY]  [FE]  ArrayIndexOutOfBoundsException  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {  popStack();      [BUGGY]  pathNames[stackSize  -  1]  =  null;  if(stackSize  >=  0)  {  pathNames[stackSize  -  1]  =  null;  }  [BUGGY]      }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	262	262	2	add	pathNames[stackSize  -  1]  =  null;  if(stackSize  >=  0)  {  pathNames[stackSize  -  1]  =  null;  }	  pathNames[stackSize    -    1]    =    null;    if(stackSize    >    0)    {    pathNames[stackSize    -    1]    =    null;    }    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	70	2	replace
716	[BUG]  [BUGGY]  pathNames[stackSize  -  1]  =  null;  if(stackSize  >=  0)  {  pathNames[stackSize  -  1]  =  null;  }  [FE]  ArrayIndexOutOfBoundsException  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {  popStack();      [BUGGY]  pathNames[stackSize  -  1]  =  null;  if(stackSize  >=  0)  {  pathNames[stackSize  -  1]  =  null;  }  [BUGGY]      }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	262	262	2	replace	pathNames[stackSize  -  1]  =  null;  if(stackSize  >=  0)  {  pathNames[stackSize  -  1]  =  null;  }	  pathNames[stackSize    -    1]    =    null;    if(stackSize    >    0)    {    pathNames[stackSize    -    1]    =    null;    }    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	70	2	replace
717	[BUG]  [BUGGY]  [FE]  ArrayIndexOutOfBoundsException  [FE]      ArrayIndexOutOfBoundsException    [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {  popStack();      [BUGGY]  pathNames[stackSize  -  1]  =  null;  if(stackSize  <  2)  {  pathNames[stackSize  -  1]  =  null;  }  [BUGGY]      }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	262	262	2	add	pathNames[stackSize  -  1]  =  null;  if(stackSize  <  2)  {  pathNames[stackSize  -  1]  =  null;  }	  pathNames[stackSize    -    1]    =    null;    if(stackSize    >    0)    {    pathNames[stackSize    -    1]    =    null;    }    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	70	2	replace
718	[BUG]  [BUGGY]  pathNames[stackSize  -  1]  =  null;  if(stackSize  <  2)  {  pathNames[stackSize  -  1]  =  null;  }  [FE]  ArrayIndexOutOfBoundsException  [FE]      ArrayIndexOutOfBoundsException    [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {  popStack();      [BUGGY]  pathNames[stackSize  -  1]  =  null;  if(stackSize  <  2)  {  pathNames[stackSize  -  1]  =  null;  }  [BUGGY]      }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	262	262	2	replace	pathNames[stackSize  -  1]  =  null;  if(stackSize  <  2)  {  pathNames[stackSize  -  1]  =  null;  }	  pathNames[stackSize    -    1]    =    null;    if(stackSize    >    0)    {    pathNames[stackSize    -    1]    =    null;    }    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	70	2	replace
719	[BUG]  [BUGGY]  [FE]  ArrayIndexOutOfBoundsException  [FE]        ArrayIndexOutOfBoundsException    [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {  popStack();      [BUGGY]  pathNames[stackSize  -  1]  =  null;  if(stackSize  ==  0)  {  pathNames[stackSize  -  1]  =  null;  }  [BUGGY]      }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	262	262	2	add	pathNames[stackSize  -  1]  =  null;  if(stackSize  ==  0)  {  pathNames[stackSize  -  1]  =  null;  }	  pathNames[stackSize    -    1]    =    null;    if(stackSize    >    0)    {    pathNames[stackSize    -    1]    =    null;    }    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	70	2	replace
720	[BUG]  [BUGGY]  pathNames[stackSize  -  1]  =  null;  if(stackSize  ==  0)  {  pathNames[stackSize  -  1]  =  null;  }  [FE]  ArrayIndexOutOfBoundsException  [FE]        ArrayIndexOutOfBoundsException    [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {  popStack();      [BUGGY]  pathNames[stackSize  -  1]  =  null;  if(stackSize  ==  0)  {  pathNames[stackSize  -  1]  =  null;  }  [BUGGY]      }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	262	262	2	replace	pathNames[stackSize  -  1]  =  null;  if(stackSize  ==  0)  {  pathNames[stackSize  -  1]  =  null;  }	  pathNames[stackSize    -    1]    =    null;    if(stackSize    >    0)    {    pathNames[stackSize    -    1]    =    null;    }    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	70	2	replace
721	[BUG]  [BUGGY]  pathNames[result.length  -  1]  =  null;  if(stackSize  >  0)  {  pathNames[stackSize  -  1]  =  null;  }  else  {  popStack();  pathNames[stackSize  -  1]  =  null;  }  [CE]  cannot  find  symbol  result  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {  popStack();      [BUGGY]  pathNames[result.length  -  1]  =  null;  if(stackSize  >  0)  {  pathNames[stackSize  -  1]  =  null;  }  else  {  popStack();  pathNames[stackSize  -  1]  =  null;  }  [BUGGY]      }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	262	262	2	replace	pathNames[result.length  -  1]  =  null;  if(stackSize  >  0)  {  pathNames[stackSize  -  1]  =  null;  }  else  {  popStack();  pathNames[stackSize  -  1]  =  null;  }	  pathNames[stackSize    -    1]    =    null;    if(stackSize    >    0)    {    pathNames[stackSize    -    1]    =    null;    }    else    {    popStack();    pathNames[stackSize    -    1]    =    null;    }    	non-compiled	[CE]  cannot  find  symbol  result	66	None	replace
722	[BUG]  [BUGGY]  pathIndices[stackSize  -  1]  =  null;  if(stackSize  <  1)  {  pathNames[stackSize  -  1]  =  null;  }  else  {  popStack();  pathNames[stackSize  -  1]  =  null;  }  [CE]  incompatible  types  [FE]      ArrayIndexOutOfBoundsException    [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {  popStack();      [BUGGY]  pathIndices[stackSize  -  1]  =  null;  if(stackSize  <  1)  {  pathNames[stackSize  -  1]  =  null;  }  else  {  popStack();  pathNames[stackSize  -  1]  =  null;  }  [BUGGY]      }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	262	262	2	replace	pathIndices[stackSize  -  1]  =  null;  if(stackSize  <  1)  {  pathNames[stackSize  -  1]  =  null;  }  else  {  popStack();  pathNames[stackSize  -  1]  =  null;  }	  pathNames[stackSize    -    1]    =    null;    if(stackSize    >    0)    {    pathNames[stackSize    -    1]    =    null;    }    else    {    popStack();    pathNames[stackSize    -    1]    =    null;    }    	non-compiled	[CE]  incompatible  types	66	None	replace
723	[BUG]  [BUGGY]  pathIndices[stackSize  -  2]  =  null;  if(stackSize  >  0)  {  pathNames[stackSize  -  2]  =  null;  }  else  {  popStack();  pathNames[stackSize  -  1]  =  null;  }  [CE]  incompatible  types  [FE]        ArrayIndexOutOfBoundsException    [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {  popStack();      [BUGGY]  pathIndices[stackSize  -  2]  =  null;  if(stackSize  >  0)  {  pathNames[stackSize  -  2]  =  null;  }  else  {  popStack();  pathNames[stackSize  -  1]  =  null;  }  [BUGGY]      }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	262	262	2	replace	pathIndices[stackSize  -  2]  =  null;  if(stackSize  >  0)  {  pathNames[stackSize  -  2]  =  null;  }  else  {  popStack();  pathNames[stackSize  -  1]  =  null;  }	  pathNames[stackSize    -    1]    =    null;    if(stackSize    >    0)    {    pathNames[stackSize    -    1]    =    null;    }    else    {    popStack();    pathNames[stackSize    -    1]    =    null;    }    	non-compiled	[CE]  incompatible  types	66	None	replace
724	[BUG]  [BUGGY]  pathNames[stackSize  -  1]  =     "null   "  +  JsonToken.END_ARRAY;  PathInfo  pathNames[stackSize  -  1]  =   "null   "  +  JsonToken.END_ARRAY;  [CE]  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {  popStack();      [BUGGY]  pathNames[stackSize  -  1]  =     "null   "  +  JsonToken.END_ARRAY;  PathInfo  pathNames[stackSize  -  1]  =   "null   "  +  JsonToken.END_ARRAY;  [BUGGY]      }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	262	262	2	replace	pathNames[stackSize    -    1]    =       "null   "    +    JsonToken.END_ARRAY;    PathInfo  pathNames[stackSize  -  1]  =   "null   "  +  JsonToken.END_ARRAY;	  	non-compiled	[CE]  	61	None	add
725	[BUG]  [BUGGY]  pathNames[stackSize  -  1]  =     "null   "  +  JsonToken.END_ARRAY;  pathNames[stackSize  -  1]  =(null   "  +  JsonToken.END_ARRAY;  [CE]  unclosed  string  literal  [FE]      ArrayIndexOutOfBoundsException    [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {  popStack();      [BUGGY]  pathNames[stackSize  -  1]  =     "null   "  +  JsonToken.END_ARRAY;  pathNames[stackSize  -  1]  =(null   "  +  JsonToken.END_ARRAY;  [BUGGY]      }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	262	262	2	replace	pathNames[stackSize    -    1]    =       "null   "    +    JsonToken.END_ARRAY;    pathNames[stackSize  -  1]  =(null   "  +  JsonToken.END_ARRAY;	  	non-compiled	[CE]  unclosed  string  literal	61	None	add
726	[BUG]  [BUGGY]  pathNames[stackSize  -  1]  =     "null   "  +  JsonToken.END_ARRAY;  pathNames[stackSize  -  1]  =  null   "  +  JsonToken.END_ARRAY;  [CE]  unclosed  string  literal  [FE]        ArrayIndexOutOfBoundsException    [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {  popStack();      [BUGGY]  pathNames[stackSize  -  1]  =     "null   "  +  JsonToken.END_ARRAY;  pathNames[stackSize  -  1]  =  null   "  +  JsonToken.END_ARRAY;  [BUGGY]      }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	262	262	2	replace	pathNames[stackSize    -    1]    =       "null   "    +    JsonToken.END_ARRAY;    pathNames[stackSize  -  1]  =  null   "  +  JsonToken.END_ARRAY;	  	non-compiled	[CE]  unclosed  string  literal	61	None	add
727	[BUG]  [BUGGY]  PathIndices  pathIndices  =  new  PathIndices(stackSize  -  1);  System.arraycopy(pathNames,  0,  pathNames,  1,  stackSize  -  1);  [CE]  cannot  find  symbol  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {  popStack();      [BUGGY]  PathIndices  pathIndices  =  new  PathIndices(stackSize  -  1);  System.arraycopy(pathNames,  0,  pathNames,  1,  stackSize  -  1);  [BUGGY]      }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	262	262	2	replace	PathIndices  pathIndices  =  new  PathIndices(stackSize  -  1);  System.arraycopy(pathNames,  0,  pathNames,  1,  stackSize  -  1);	          if(stackSize    >    0)    {    pathIndices    =    new    int[stackSize    -    1];    System.arraycopy(pathNames,    0,    pathNames,    1,    stackSize    -    1);    }    	non-compiled	[CE]  cannot  find  symbol	64	None	replace
728	[BUG]  [BUGGY]  ||(stackSize  >  0  &&  stackSize  <  2)||  stackSize  >  0)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  expression  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {  popStack();      [BUGGY]  ||(stackSize  >  0  &&  stackSize  <  2)||  stackSize  >  0)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	262	262	2	replace	||(stackSize  >  0  &&  stackSize  <  2)||  stackSize  >  0)  {  throw  new  IllegalArgumentException( " ");  }	  if(stackSize    >    stackSize)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	22	None	replace
729	[BUG]  [BUGGY]  ||(stackSize  >  0  &&  stackSize  <  1))  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  expression  [FE]      ArrayIndexOutOfBoundsException    [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {  popStack();      [BUGGY]  ||(stackSize  >  0  &&  stackSize  <  1))  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	262	262	2	replace	||(stackSize  >  0  &&  stackSize  <  1))  {  throw  new  IllegalArgumentException( " ");  }	  if(stackSize    >    stackSize)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	22	None	replace
730	[BUG]  [BUGGY]  ||(stackSize  >  0  &&  stackSize  <  =  0))  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  expression  [FE]        ArrayIndexOutOfBoundsException    [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {  popStack();      [BUGGY]  ||(stackSize  >  0  &&  stackSize  <  =  0))  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	262	262	2	replace	||(stackSize  >  0  &&  stackSize  <  =  0))  {  throw  new  IllegalArgumentException( " ");  }	  if(stackSize    >    stackSize)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	22	None	replace
731	[BUG]  [BUGGY]  pathIndices[stackSize  -  1]  =   "null ";  [CE]  incompatible  types  [FE]          ArrayIndexOutOfBoundsException    [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {  popStack();      [BUGGY]  pathIndices[stackSize  -  1]  =   "null ";  [BUGGY]      }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	262	262	2	replace	pathIndices[stackSize  -  1]  =   "null ";	  if(stackSize    >    stackSize)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  incompatible  types	22	None	replace
732	[BUG]  [BUGGY]  pathNames[stackSize    -    1]    =    null;    if(stackSize  >  0)  {  pathNames[stackSize  -  1]  =  null;  }  else  {  popStack();  throw  new  RuntimeException(   "   ");  }  if(stackSize  >  0)  {  pathNames[stackSize  -  1]  =  null;  if(stackSize  >  0)  {  pathNames[stackSize  -  1]  =  null;  }  else  {  popStack();  throw  new  RuntimeException(  [CE]  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {  popStack();      [BUGGY]  pathNames[stackSize    -    1]    =    null;    if(stackSize  >  0)  {  pathNames[stackSize  -  1]  =  null;  }  else  {  popStack();  throw  new  RuntimeException(   "   ");  }  if(stackSize  >  0)  {  pathNames[stackSize  -  1]  =  null;  if(stackSize  >  0)  {  pathNames[stackSize  -  1]  =  null;  }  else  {  popStack();  throw  new  RuntimeException(  [BUGGY]      }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	262	262	2	replace	pathNames[stackSize        -        1]        =        null;        if(stackSize    >    0)    {    pathNames[stackSize    -    1]    =    null;    }    else    {    popStack();    throw    new    RuntimeException(   "   ");    }    if(stackSize  >  0)  {  pathNames[stackSize  -  1]  =  null;  if(stackSize  >  0)  {  pathNames[stackSize  -  1]  =  null;  }  else  {  popStack();  throw  new  RuntimeException(	  	non-compiled	[CE]  	74	None	add
733	[BUG]  [BUGGY]  if(stackSize  >  0)  {  int[]  result  =  new  int[pathIndices.length  -  1];  System.arraycopy(stack,  0,  pathNames,  0,  stackSize  -  1,  stackSize  -  1);  }  [CE]  method  arraycopy  in  class  System  cannot  be  applied  to  given  types;  [FE]                ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {  popStack();      [BUGGY]  if(stackSize  >  0)  {  int[]  result  =  new  int[pathIndices.length  -  1];  System.arraycopy(stack,  0,  pathNames,  0,  stackSize  -  1,  stackSize  -  1);  }  [BUGGY]      }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	262	262	2	replace	if(stackSize  >  0)  {  int[]  result  =  new  int[pathIndices.length  -  1];  System.arraycopy(stack,  0,  pathNames,  0,  stackSize  -  1,  stackSize  -  1);  }	  if(stackSize    >    0)    {    int[]    result    =    new    int[stackSize    -    1];    System.arraycopy(stack,    0,    pathNames,    0,    stackSize    -    1,    stackSize    -    1);    }    	non-compiled	[CE]  method  arraycopy  in  class  System  cannot  be  applied  to  given  types;	82	None	replace
734	[BUG]  [BUGGY]  if(stackSize  >  0)  {  int[]  result  =  new  int[pathNames.length  -  1];  System.arraycopy(path,  0,  result,  0,  stackSize  -  1,  stackSize  -  1);  }  [CE]  cannot  find  symbol  path  [FE]                  ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {  popStack();      [BUGGY]  if(stackSize  >  0)  {  int[]  result  =  new  int[pathNames.length  -  1];  System.arraycopy(path,  0,  result,  0,  stackSize  -  1,  stackSize  -  1);  }  [BUGGY]      }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	262	262	2	replace	if(stackSize  >  0)  {  int[]  result  =  new  int[pathNames.length  -  1];  System.arraycopy(path,  0,  result,  0,  stackSize  -  1,  stackSize  -  1);  }	  if(stackSize    >    0)    {    int[]    result    =    new    int[stackSize    -    1];    System.arraycopy(stack,    0,    pathNames,    0,    stackSize    -    1,    stackSize    -    1);    }    	non-compiled	[CE]  cannot  find  symbol  path	82	None	replace
735	[BUG]  [BUGGY]  [FE]  ArrayIndexOutOfBoundsException  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {  popStack();      [BUGGY]  pathNames[stackSize  -  1]  =  null;  if(stackSize  <  1)  {  pathNames[stackSize  -  1]  =  null;  }  else  {  popStack();  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	262	262	2	add	pathNames[stackSize  -  1]  =  null;  if(stackSize  <  1)  {  pathNames[stackSize  -  1]  =  null;  }  else  {  popStack();  throw  new  IllegalArgumentException( " ");  }	  pathNames[stackSize    -    1]    =    null;    if(stackSize    >    0)    {    pathNames[stackSize    -    1]    =    null;    }    else    {    popStack();    throw    new    IllegalArgumentException(   "   ");    }    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	72	2	replace
736	[BUG]  [BUGGY]  pathNames[stackSize  -  1]  =  null;  if(stackSize  <  1)  {  pathNames[stackSize  -  1]  =  null;  }  else  {  popStack();  throw  new  IllegalArgumentException( " ");  }  [FE]  ArrayIndexOutOfBoundsException  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {  popStack();      [BUGGY]  pathNames[stackSize  -  1]  =  null;  if(stackSize  <  1)  {  pathNames[stackSize  -  1]  =  null;  }  else  {  popStack();  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	262	262	2	replace	pathNames[stackSize  -  1]  =  null;  if(stackSize  <  1)  {  pathNames[stackSize  -  1]  =  null;  }  else  {  popStack();  throw  new  IllegalArgumentException( " ");  }	  pathNames[stackSize    -    1]    =    null;    if(stackSize    >    0)    {    pathNames[stackSize    -    1]    =    null;    }    else    {    popStack();    throw    new    IllegalArgumentException(   "   ");    }    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	72	2	replace
737	[BUG]  [BUGGY]  [FE]  ArrayIndexOutOfBoundsException  [FE]      ArrayIndexOutOfBoundsException    [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {  popStack();      [BUGGY]  pathNames[stackSize  -  1]  =  null;  if(stackSize  <  2)  {  pathNames[stackSize  -  1]  =  null;  }  else  {  popStack();  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	262	262	2	add	pathNames[stackSize  -  1]  =  null;  if(stackSize  <  2)  {  pathNames[stackSize  -  1]  =  null;  }  else  {  popStack();  throw  new  IllegalArgumentException( " ");  }	  pathNames[stackSize    -    1]    =    null;    if(stackSize    >    0)    {    pathNames[stackSize    -    1]    =    null;    }    else    {    popStack();    throw    new    IllegalArgumentException(   "   ");    }    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	72	2	replace
738	[BUG]  [BUGGY]  pathNames[stackSize  -  1]  =  null;  if(stackSize  <  2)  {  pathNames[stackSize  -  1]  =  null;  }  else  {  popStack();  throw  new  IllegalArgumentException( " ");  }  [FE]  ArrayIndexOutOfBoundsException  [FE]      ArrayIndexOutOfBoundsException    [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {  popStack();      [BUGGY]  pathNames[stackSize  -  1]  =  null;  if(stackSize  <  2)  {  pathNames[stackSize  -  1]  =  null;  }  else  {  popStack();  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	262	262	2	replace	pathNames[stackSize  -  1]  =  null;  if(stackSize  <  2)  {  pathNames[stackSize  -  1]  =  null;  }  else  {  popStack();  throw  new  IllegalArgumentException( " ");  }	  pathNames[stackSize    -    1]    =    null;    if(stackSize    >    0)    {    pathNames[stackSize    -    1]    =    null;    }    else    {    popStack();    throw    new    IllegalArgumentException(   "   ");    }    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	72	2	replace
739	[BUG]  [BUGGY]  [FE]  ArrayIndexOutOfBoundsException  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {  popStack();      [BUGGY]  pathNames[stackSize    -    1]    =    null;    if(stackSize  >  0)  {  pathNames[stackSize  -  1]  =  null;  }  else  {  popStack();  }  pathNames[stackSize  -  1]  =  null;  if(stackSize  >  1)  {  pathNames[stackSize  -  1]  =  null;  }  else  {  popStack();  }  [BUGGY]      }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	262	262	2	add	pathNames[stackSize        -        1]        =        null;        if(stackSize    >    0)    {    pathNames[stackSize    -    1]    =    null;    }    else    {    popStack();    }    pathNames[stackSize  -  1]  =  null;  if(stackSize  >  1)  {  pathNames[stackSize  -  1]  =  null;  }  else  {  popStack();  }	  	compilable	  [FE]  ArrayIndexOutOfBoundsException  	67	2	add
740	[BUG]  [BUGGY]  pathNames[stackSize    -    1]    =    null;    if(stackSize  >  0)  {  pathNames[stackSize  -  1]  =  null;  }  else  {  popStack();  }  pathNames[stackSize  -  1]  =  null;  if(stackSize  >  1)  {  pathNames[stackSize  -  1]  =  null;  }  else  {  popStack();  }  [FE]  ArrayIndexOutOfBoundsException  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {  popStack();      [BUGGY]  pathNames[stackSize    -    1]    =    null;    if(stackSize  >  0)  {  pathNames[stackSize  -  1]  =  null;  }  else  {  popStack();  }  pathNames[stackSize  -  1]  =  null;  if(stackSize  >  1)  {  pathNames[stackSize  -  1]  =  null;  }  else  {  popStack();  }  [BUGGY]      }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	262	262	2	replace	pathNames[stackSize        -        1]        =        null;        if(stackSize    >    0)    {    pathNames[stackSize    -    1]    =    null;    }    else    {    popStack();    }    pathNames[stackSize  -  1]  =  null;  if(stackSize  >  1)  {  pathNames[stackSize  -  1]  =  null;  }  else  {  popStack();  }	  	compilable	  [FE]  ArrayIndexOutOfBoundsException  	67	2	add
741	[BUG]  [BUGGY]  pathNames[stackSize    -    1]    =    null;    if(stackSize  >  0)  {  pathNames[stackSize  -  1]  =  null;  }  else  {  popStack();  pathNames[stackSize  -  1]  =  null;  }  if(stackSize  >  0)  {  pathNames[stackSize  -  1]  =  null;  if(stackSize  >  0)  {  pathNames[stackSize  -  1]  =  null;  }  else  {  popStack();  pathNames[st  [CE]  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {  popStack();      [BUGGY]  pathNames[stackSize    -    1]    =    null;    if(stackSize  >  0)  {  pathNames[stackSize  -  1]  =  null;  }  else  {  popStack();  pathNames[stackSize  -  1]  =  null;  }  if(stackSize  >  0)  {  pathNames[stackSize  -  1]  =  null;  if(stackSize  >  0)  {  pathNames[stackSize  -  1]  =  null;  }  else  {  popStack();  pathNames[st  [BUGGY]      }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	262	262	2	replace	pathNames[stackSize        -        1]        =        null;        if(stackSize    >    0)    {    pathNames[stackSize    -    1]    =    null;    }    else    {    popStack();    pathNames[stackSize    -    1]    =    null;    }    if(stackSize  >  0)  {  pathNames[stackSize  -  1]  =  null;  if(stackSize  >  0)  {  pathNames[stackSize  -  1]  =  null;  }  else  {  popStack();  pathNames[st	  	non-compiled	[CE]  	65	None	add
742	[BUG]  [BUGGY]          if(stackSize  >  0)  {  pathIndices  =  new  int[stackSize  -  1];  System.arraycopy(pathNames,  0,  pathNames,  1,  stackSize  -  1);  }  if(stackSize  >  0)  {  pathIndices  =  new  int[pathNames,  1,  stackSize  -  1];  System.arraycopy(pathNames,  0,  pathNames,  1,  stackSize  -  1]);  }  [CE]  ']'  expected  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {  popStack();      [BUGGY]          if(stackSize  >  0)  {  pathIndices  =  new  int[stackSize  -  1];  System.arraycopy(pathNames,  0,  pathNames,  1,  stackSize  -  1);  }  if(stackSize  >  0)  {  pathIndices  =  new  int[pathNames,  1,  stackSize  -  1];  System.arraycopy(pathNames,  0,  pathNames,  1,  stackSize  -  1]);  }  [BUGGY]      }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	262	262	2	replace	                if(stackSize    >    0)    {    pathIndices    =    new    int[stackSize    -    1];    System.arraycopy(pathNames,    0,    pathNames,    1,    stackSize    -    1);    }    if(stackSize  >  0)  {  pathIndices  =  new  int[pathNames,  1,  stackSize  -  1];  System.arraycopy(pathNames,  0,  pathNames,  1,  stackSize  -  1]);  }	  	non-compiled	[CE]  ']'  expected	63	None	add
743	[BUG]  [BUGGY]          if(stackSize  >  0)  {  pathIndices  =  new  int[stackSize  -  1];  System.arraycopy(pathNames,  0,  pathNames,  1,  stackSize  -  1);  }  if(stackSize  >  0)  {  pathIndices  =  new  int[stackSize  -  1];  System.arraycopy(pathNames,  0,  pathNames,  1,  stackSize  -  1],  stackSize  -  1);  }  [CE]  ')'  expected  [FE]      ArrayIndexOutOfBoundsException    [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {  popStack();      [BUGGY]          if(stackSize  >  0)  {  pathIndices  =  new  int[stackSize  -  1];  System.arraycopy(pathNames,  0,  pathNames,  1,  stackSize  -  1);  }  if(stackSize  >  0)  {  pathIndices  =  new  int[stackSize  -  1];  System.arraycopy(pathNames,  0,  pathNames,  1,  stackSize  -  1],  stackSize  -  1);  }  [BUGGY]      }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	262	262	2	replace	                if(stackSize    >    0)    {    pathIndices    =    new    int[stackSize    -    1];    System.arraycopy(pathNames,    0,    pathNames,    1,    stackSize    -    1);    }    if(stackSize  >  0)  {  pathIndices  =  new  int[stackSize  -  1];  System.arraycopy(pathNames,  0,  pathNames,  1,  stackSize  -  1],  stackSize  -  1);  }	  	non-compiled	[CE]  ')'  expected	63	None	add
744	[BUG]  [BUGGY]          if(stackSize  >  0)  {  pathIndices  =  new  int[stackSize  -  1];  System.arraycopy(pathNames,  0,  pathNames,  1,  stackSize  -  1);  }  if(stackSize  >  1)  {  pathIndices  =  new  int[stackSize  -  1];  System.arraycopy(pathNames,  0,  pathNames,  1,  stackSize  -  1]);  }  [CE]  ')'  expected  [FE]        ArrayIndexOutOfBoundsException    [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {  popStack();      [BUGGY]          if(stackSize  >  0)  {  pathIndices  =  new  int[stackSize  -  1];  System.arraycopy(pathNames,  0,  pathNames,  1,  stackSize  -  1);  }  if(stackSize  >  1)  {  pathIndices  =  new  int[stackSize  -  1];  System.arraycopy(pathNames,  0,  pathNames,  1,  stackSize  -  1]);  }  [BUGGY]      }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	262	262	2	replace	                if(stackSize    >    0)    {    pathIndices    =    new    int[stackSize    -    1];    System.arraycopy(pathNames,    0,    pathNames,    1,    stackSize    -    1);    }    if(stackSize  >  1)  {  pathIndices  =  new  int[stackSize  -  1];  System.arraycopy(pathNames,  0,  pathNames,  1,  stackSize  -  1]);  }	  	non-compiled	[CE]  ')'  expected	63	None	add
745	[BUG]  [BUGGY]          if(stackSize  >  0)  {  pathIndices  =  new  int[stackSize  -  1];  System.arraycopy(pathNames,  0,  pathNames,  1,  stackSize  -  1);  }  if(stackSize  >  0)  {  pathIndices  =  new  int[stackSize  -  1];  System.arraycopy(pathNames,  1,  pathNames,  1,  stackSize  -  1]);  }  [CE]  ')'  expected  [FE]          ArrayIndexOutOfBoundsException    [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {  popStack();      [BUGGY]          if(stackSize  >  0)  {  pathIndices  =  new  int[stackSize  -  1];  System.arraycopy(pathNames,  0,  pathNames,  1,  stackSize  -  1);  }  if(stackSize  >  0)  {  pathIndices  =  new  int[stackSize  -  1];  System.arraycopy(pathNames,  1,  pathNames,  1,  stackSize  -  1]);  }  [BUGGY]      }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	262	262	2	replace	                if(stackSize    >    0)    {    pathIndices    =    new    int[stackSize    -    1];    System.arraycopy(pathNames,    0,    pathNames,    1,    stackSize    -    1);    }    if(stackSize  >  0)  {  pathIndices  =  new  int[stackSize  -  1];  System.arraycopy(pathNames,  1,  pathNames,  1,  stackSize  -  1]);  }	  	non-compiled	[CE]  ')'  expected	63	None	add
746	[BUG]  [BUGGY]  pathNames[stackSize  -  1]  =   "null "  +  JsonToken.VALUE_EMBEDDED_STRING;  [CE]  cannot  find  symbol  VALUE_EMBEDDED_STRING  [FE]                ArrayIndexOutOfBoundsException      [CONTEXT]      @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =       "null     ";  }  else  {  popStack();      [BUGGY]  pathNames[stackSize  -  1]  =   "null "  +  JsonToken.VALUE_EMBEDDED_STRING;  [BUGGY]      }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	262	262	2	replace	pathNames[stackSize  -  1]  =   "null "  +  JsonToken.VALUE_EMBEDDED_STRING;	  pathNames[stackSize    -    1]    =       "null   "    +    JsonToken.VALUE_EMBEDDED_OBJECT;    	non-compiled	[CE]  cannot  find  symbol  VALUE_EMBEDDED_STRING	39	None	replace
