bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  pathNames[stackSize  -  1]  =  JsonToken.VALUE_STRING;  [CE]  cannot  find  symbol  VALUE_STRING  [FE]              ArrayIndexOutOfBoundsException    [CONTEXT]    @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =     "null   ";  }  else  {  popStack();    [BUGGY]  pathNames[stackSize  -  1]  =  JsonToken.VALUE_STRING;  [BUGGY]    }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	262	262	2	replace	pathNames[stackSize  -  1]  =  JsonToken.VALUE_STRING;	  pathNames[stackSize    -    1]    =    JsonToken.VALUE_NULL;    	non-compiled	[CE]  cannot  find  symbol  VALUE_STRING	6	None	replace
2	[BUG]  [BUGGY]  pathNames[stackSize  -  1]  =  JsonToken.VALUE_NUMBER;  [CE]  cannot  find  symbol  VALUE_NUMBER  [FE]                ArrayIndexOutOfBoundsException    [CONTEXT]    @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =     "null   ";  }  else  {  popStack();    [BUGGY]  pathNames[stackSize  -  1]  =  JsonToken.VALUE_NUMBER;  [BUGGY]    }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	262	262	2	replace	pathNames[stackSize  -  1]  =  JsonToken.VALUE_NUMBER;	  pathNames[stackSize    -    1]    =    JsonToken.VALUE_NULL;    	non-compiled	[CE]  cannot  find  symbol  VALUE_NUMBER	6	None	replace
3	[BUG]  [BUGGY]  pathNames[stackSize  -  1]  =  JsonToken.FIELD_NAME;  [CE]  cannot  find  symbol  FIELD_NAME  [FE]                  ArrayIndexOutOfBoundsException    [CONTEXT]    @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =     "null   ";  }  else  {  popStack();    [BUGGY]  pathNames[stackSize  -  1]  =  JsonToken.FIELD_NAME;  [BUGGY]    }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	262	262	2	replace	pathNames[stackSize  -  1]  =  JsonToken.FIELD_NAME;	  pathNames[stackSize    -    1]    =    JsonToken.VALUE_NULL;    	non-compiled	[CE]  cannot  find  symbol  FIELD_NAME	6	None	replace
4	[BUG]  [BUGGY]  pathNames[stackSize  -  1]  =  JsonToken.VALUE_EMPTY;  [CE]  cannot  find  symbol  VALUE_EMPTY  [FE]                    ArrayIndexOutOfBoundsException    [CONTEXT]    @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =     "null   ";  }  else  {  popStack();    [BUGGY]  pathNames[stackSize  -  1]  =  JsonToken.VALUE_EMPTY;  [BUGGY]    }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	262	262	2	replace	pathNames[stackSize  -  1]  =  JsonToken.VALUE_EMPTY;	  pathNames[stackSize    -    1]    =    JsonToken.VALUE_NULL;    	non-compiled	[CE]  cannot  find  symbol  VALUE_EMPTY	6	None	replace
5	[BUG]  [BUGGY]  pathNames[stackSize  -  2]  =  null ";  [CE]  unclosed  string  literal  [FE]        ArrayIndexOutOfBoundsException    [CONTEXT]    @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =     "null   ";  }  else  {  popStack();    [BUGGY]  pathNames[stackSize  -  2]  =  null ";  [BUGGY]    }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	262	262	2	replace	pathNames[stackSize  -  2]  =  null ";	  pathNames[stackSize    -    1]    =    null   ";    	non-compiled	[CE]  unclosed  string  literal	10	None	replace
6	[BUG]  [BUGGY]  [FE]  ArrayIndexOutOfBoundsException  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]    @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =     "null   ";  }  else  {  popStack();    [BUGGY]  pathNames[stackSize  -  2]  =     "null   ";  pathNames[stackSize  -  2]  =   "null   ";  [BUGGY]    }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	262	262	2	add	pathNames[stackSize    -    2]    =       "null   ";    pathNames[stackSize  -  2]  =   "null   ";	  	compilable	  [FE]  ArrayIndexOutOfBoundsException  	3	2	add
7	[BUG]  [BUGGY]  pathNames[stackSize  -  2]  =     "null   ";  pathNames[stackSize  -  2]  =   "null   ";  [FE]  ArrayIndexOutOfBoundsException  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]    @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =     "null   ";  }  else  {  popStack();    [BUGGY]  pathNames[stackSize  -  2]  =     "null   ";  pathNames[stackSize  -  2]  =   "null   ";  [BUGGY]    }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	262	262	2	replace	pathNames[stackSize    -    2]    =       "null   ";    pathNames[stackSize  -  2]  =   "null   ";	  	compilable	  [FE]  ArrayIndexOutOfBoundsException  	3	2	add
8	[BUG]  [BUGGY]  pathNames[stackSize  -  2]  =     "null   ";  pathNames[stackSize  -  2]  =   "null ",;  [CE]  [FE]      ArrayIndexOutOfBoundsException    [CONTEXT]    @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =     "null   ";  }  else  {  popStack();    [BUGGY]  pathNames[stackSize  -  2]  =     "null   ";  pathNames[stackSize  -  2]  =   "null ",;  [BUGGY]    }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	262	262	2	replace	pathNames[stackSize    -    2]    =       "null   ";    pathNames[stackSize  -  2]  =   "null ",;	  	non-compiled	[CE]  	3	None	add
9	[BUG]  [BUGGY]  pathNames[stackSize  -  2]  =     "null   ";  pathNames[stackSize  -  2]  =   "null ".;  [CE]  <identifier>  expected  [FE]        ArrayIndexOutOfBoundsException    [CONTEXT]    @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =     "null   ";  }  else  {  popStack();    [BUGGY]  pathNames[stackSize  -  2]  =     "null   ";  pathNames[stackSize  -  2]  =   "null ".;  [BUGGY]    }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	262	262	2	replace	pathNames[stackSize    -    2]    =       "null   ";    pathNames[stackSize  -  2]  =   "null ".;	  	non-compiled	[CE]  <identifier>  expected	3	None	add
10	[BUG]  [BUGGY]  [FE]  ArrayIndexOutOfBoundsException  [FE]          ArrayIndexOutOfBoundsException    [CONTEXT]    @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =     "null   ";  }  else  {  popStack();    [BUGGY]  pathNames[stackSize  -  2]  =     "null   ";  pathNames[stackSize  -  2]  =   "null. ";  [BUGGY]    }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	262	262	2	add	pathNames[stackSize    -    2]    =       "null   ";    pathNames[stackSize  -  2]  =   "null. ";	  	compilable	  [FE]  ArrayIndexOutOfBoundsException  	3	2	add
11	[BUG]  [BUGGY]  pathNames[stackSize  -  2]  =     "null   ";  pathNames[stackSize  -  2]  =   "null. ";  [FE]  ArrayIndexOutOfBoundsException  [FE]          ArrayIndexOutOfBoundsException    [CONTEXT]    @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =     "null   ";  }  else  {  popStack();    [BUGGY]  pathNames[stackSize  -  2]  =     "null   ";  pathNames[stackSize  -  2]  =   "null. ";  [BUGGY]    }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	262	262	2	replace	pathNames[stackSize    -    2]    =       "null   ";    pathNames[stackSize  -  2]  =   "null. ";	  	compilable	  [FE]  ArrayIndexOutOfBoundsException  	3	2	add
12	[BUG]  [BUGGY]  pathNames[stackSize  -  1]  =  JsonToken.VALUE_EMBEDDED_STRING;  [CE]  cannot  find  symbol  VALUE_EMBEDDED_STRING  [FE]            ArrayIndexOutOfBoundsException    [CONTEXT]    @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =     "null   ";  }  else  {  popStack();    [BUGGY]  pathNames[stackSize  -  1]  =  JsonToken.VALUE_EMBEDDED_STRING;  [BUGGY]    }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	262	262	2	replace	pathNames[stackSize  -  1]  =  JsonToken.VALUE_EMBEDDED_STRING;	  pathNames[stackSize    -    1]    =    JsonToken.VALUE_EMBEDDED_OBJECT;    	non-compiled	[CE]  cannot  find  symbol  VALUE_EMBEDDED_STRING	5	None	replace
13	[BUG]  [BUGGY]  pathNames[stackSize  -  1]  =  JsonToken.START_OBJECT;  [CE]  cannot  find  symbol  START_OBJECT  [FE]              ArrayIndexOutOfBoundsException    [CONTEXT]    @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =     "null   ";  }  else  {  popStack();    [BUGGY]  pathNames[stackSize  -  1]  =  JsonToken.START_OBJECT;  [BUGGY]    }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	262	262	2	replace	pathNames[stackSize  -  1]  =  JsonToken.START_OBJECT;	  pathNames[stackSize    -    1]    =    JsonToken.VALUE_EMBEDDED_OBJECT;    	non-compiled	[CE]  cannot  find  symbol  START_OBJECT	5	None	replace
14	[BUG]  [BUGGY]  if(stackSize  >  0)  {  pathIndices[stackSize  -  1]  =  null;  }  [CE]  incompatible  types  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]    @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =     "null   ";  }  else  {  popStack();    [BUGGY]  if(stackSize  >  0)  {  pathIndices[stackSize  -  1]  =  null;  }  [BUGGY]    }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	262	262	2	replace	if(stackSize  >  0)  {  pathIndices[stackSize  -  1]  =  null;  }	      	non-compiled	[CE]  incompatible  types	9	None	replace
15	[BUG]  [BUGGY]  [FE]  ArrayIndexOutOfBoundsException  [FE]      ArrayIndexOutOfBoundsException    [CONTEXT]    @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =     "null   ";  }  else  {  popStack();    [BUGGY]  if(stackSize  >  0)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]    }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	262	262	2	add	if(stackSize  >  0)  {  throw  new  IllegalArgumentException( " ");  }	      	compilable	  [FE]  ArrayIndexOutOfBoundsException  	9	2	replace
16	[BUG]  [BUGGY]  if(stackSize  >  0)  {  throw  new  IllegalArgumentException( " ");  }  [FE]  ArrayIndexOutOfBoundsException  [FE]      ArrayIndexOutOfBoundsException    [CONTEXT]    @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =     "null   ";  }  else  {  popStack();    [BUGGY]  if(stackSize  >  0)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]    }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	262	262	2	replace	if(stackSize  >  0)  {  throw  new  IllegalArgumentException( " ");  }	      	compilable	  [FE]  ArrayIndexOutOfBoundsException  	9	2	replace
17	[BUG]  [BUGGY]  [FE]  ArrayIndexOutOfBoundsException  [FE]        ArrayIndexOutOfBoundsException    [CONTEXT]    @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =     "null   ";  }  else  {  popStack();    [BUGGY]  if(stackSize  >  0)  {  pathNames[stackSize  -  1]  =   "null ";  }  else  {  popStack();  }  [BUGGY]    }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	262	262	2	add	if(stackSize  >  0)  {  pathNames[stackSize  -  1]  =   "null ";  }  else  {  popStack();  }	      	compilable	  [FE]  ArrayIndexOutOfBoundsException  	9	2	replace
18	[BUG]  [BUGGY]  if(stackSize  >  0)  {  pathNames[stackSize  -  1]  =   "null ";  }  else  {  popStack();  }  [FE]  ArrayIndexOutOfBoundsException  [FE]        ArrayIndexOutOfBoundsException    [CONTEXT]    @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =     "null   ";  }  else  {  popStack();    [BUGGY]  if(stackSize  >  0)  {  pathNames[stackSize  -  1]  =   "null ";  }  else  {  popStack();  }  [BUGGY]    }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	262	262	2	replace	if(stackSize  >  0)  {  pathNames[stackSize  -  1]  =   "null ";  }  else  {  popStack();  }	      	compilable	  [FE]  ArrayIndexOutOfBoundsException  	9	2	replace
19	[BUG]  [BUGGY]  [FE]  ArrayIndexOutOfBoundsException  [FE]          ArrayIndexOutOfBoundsException    [CONTEXT]    @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =     "null   ";  }  else  {  popStack();    [BUGGY]  if(stackSize  >  0)  {  pathNames[stackSize  -  1]  =  null;  }  [BUGGY]    }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	262	262	2	add	if(stackSize  >  0)  {  pathNames[stackSize  -  1]  =  null;  }	      	compilable	  [FE]  ArrayIndexOutOfBoundsException  	9	2	replace
20	[BUG]  [BUGGY]  if(stackSize  >  0)  {  pathNames[stackSize  -  1]  =  null;  }  [FE]  ArrayIndexOutOfBoundsException  [FE]          ArrayIndexOutOfBoundsException    [CONTEXT]    @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =     "null   ";  }  else  {  popStack();    [BUGGY]  if(stackSize  >  0)  {  pathNames[stackSize  -  1]  =  null;  }  [BUGGY]    }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	262	262	2	replace	if(stackSize  >  0)  {  pathNames[stackSize  -  1]  =  null;  }	      	compilable	  [FE]  ArrayIndexOutOfBoundsException  	9	2	replace
21	[BUG]  [BUGGY]  [FE]  ArrayIndexOutOfBoundsException  [FE]            ArrayIndexOutOfBoundsException    [CONTEXT]    @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =     "null   ";  }  else  {  popStack();    [BUGGY]  if(stackSize  >  stackSize)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]    }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	262	262	2	add	if(stackSize  >  stackSize)  {  throw  new  IllegalArgumentException( " ");  }	      	compilable	  [FE]  ArrayIndexOutOfBoundsException  	9	2	replace
22	[BUG]  [BUGGY]  if(stackSize  >  stackSize)  {  throw  new  IllegalArgumentException( " ");  }  [FE]  ArrayIndexOutOfBoundsException  [FE]            ArrayIndexOutOfBoundsException    [CONTEXT]    @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =     "null   ";  }  else  {  popStack();    [BUGGY]  if(stackSize  >  stackSize)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]    }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	262	262	2	replace	if(stackSize  >  stackSize)  {  throw  new  IllegalArgumentException( " ");  }	      	compilable	  [FE]  ArrayIndexOutOfBoundsException  	9	2	replace
23	[BUG]  [BUGGY]  [FE]  ArrayIndexOutOfBoundsException  [FE]              ArrayIndexOutOfBoundsException    [CONTEXT]    @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =     "null   ";  }  else  {  popStack();    [BUGGY]  if(stackSize  >  0)  {  pathNames[stackSize  -  1]  =  null;  }  else  {  popStack();  }  [BUGGY]    }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	262	262	2	add	if(stackSize  >  0)  {  pathNames[stackSize  -  1]  =  null;  }  else  {  popStack();  }	      	compilable	  [FE]  ArrayIndexOutOfBoundsException  	9	2	replace
24	[BUG]  [BUGGY]  if(stackSize  >  0)  {  pathNames[stackSize  -  1]  =  null;  }  else  {  popStack();  }  [FE]  ArrayIndexOutOfBoundsException  [FE]              ArrayIndexOutOfBoundsException    [CONTEXT]    @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =     "null   ";  }  else  {  popStack();    [BUGGY]  if(stackSize  >  0)  {  pathNames[stackSize  -  1]  =  null;  }  else  {  popStack();  }  [BUGGY]    }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	262	262	2	replace	if(stackSize  >  0)  {  pathNames[stackSize  -  1]  =  null;  }  else  {  popStack();  }	      	compilable	  [FE]  ArrayIndexOutOfBoundsException  	9	2	replace
25	[BUG]  [BUGGY]  if(stackSize  >  0)  {  pathIndices[stackSize  -  1]  =  null;  }  else  {  popStack();  }  [CE]  incompatible  types  [FE]                ArrayIndexOutOfBoundsException    [CONTEXT]    @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =     "null   ";  }  else  {  popStack();    [BUGGY]  if(stackSize  >  0)  {  pathIndices[stackSize  -  1]  =  null;  }  else  {  popStack();  }  [BUGGY]    }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	262	262	2	replace	if(stackSize  >  0)  {  pathIndices[stackSize  -  1]  =  null;  }  else  {  popStack();  }	      	non-compiled	[CE]  incompatible  types	9	None	replace
26	[BUG]  [BUGGY]  [FE]  ArrayIndexOutOfBoundsException  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]    @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =     "null   ";  }  else  {  popStack();    [BUGGY]  pathNames[stackSize  -  1]  =  null;  pathNames[stackSize  -  1]  =  null;  [BUGGY]    }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	262	262	2	add	pathNames[stackSize    -    1]    =    null;    pathNames[stackSize  -  1]  =  null;	  	compilable	  [FE]  ArrayIndexOutOfBoundsException  	1	2	add
27	[BUG]  [BUGGY]  pathNames[stackSize  -  1]  =  null;  pathNames[stackSize  -  1]  =  null;  [FE]  ArrayIndexOutOfBoundsException  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]    @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =     "null   ";  }  else  {  popStack();    [BUGGY]  pathNames[stackSize  -  1]  =  null;  pathNames[stackSize  -  1]  =  null;  [BUGGY]    }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	262	262	2	replace	pathNames[stackSize    -    1]    =    null;    pathNames[stackSize  -  1]  =  null;	  	compilable	  [FE]  ArrayIndexOutOfBoundsException  	1	2	add
28	[BUG]  [BUGGY]  pathNames[stackSize  -  1]  =  null;  PathIndexOutOfBoundsException.printStackTrace();  pathNames[stackSize  -  1]  =  null;  [CE]  cannot  find  symbol  PathIndexOutOfBoundsException  [FE]      ArrayIndexOutOfBoundsException    [CONTEXT]    @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =     "null   ";  }  else  {  popStack();    [BUGGY]  pathNames[stackSize  -  1]  =  null;  PathIndexOutOfBoundsException.printStackTrace();  pathNames[stackSize  -  1]  =  null;  [BUGGY]    }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	262	262	2	replace	pathNames[stackSize    -    1]    =    null;    PathIndexOutOfBoundsException.printStackTrace();  pathNames[stackSize  -  1]  =  null;	  	non-compiled	[CE]  cannot  find  symbol  PathIndexOutOfBoundsException	1	None	add
29	[BUG]  [BUGGY]  pathNames[stackSize  -  1]  =  null;  PathIndexOutOfBoundsException  e  =  new  PathIndexOutOfBoundsException();  pathNames[stackSize  -  1]  =  null;  [CE]  cannot  find  symbol  [FE]        ArrayIndexOutOfBoundsException    [CONTEXT]    @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =     "null   ";  }  else  {  popStack();    [BUGGY]  pathNames[stackSize  -  1]  =  null;  PathIndexOutOfBoundsException  e  =  new  PathIndexOutOfBoundsException();  pathNames[stackSize  -  1]  =  null;  [BUGGY]    }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	262	262	2	replace	pathNames[stackSize    -    1]    =    null;    PathIndexOutOfBoundsException  e  =  new  PathIndexOutOfBoundsException();  pathNames[stackSize  -  1]  =  null;	  	non-compiled	[CE]  cannot  find  symbol	1	None	add
30	[BUG]  [BUGGY]  pathNames[stackSize  -  1]  =  null;  PathIndexOutOfBoundsException  e  =  new  PathIndexOutOfBoundsException( " ");  pathNames[stackSize  -  1]  =  null;  [CE]  cannot  find  symbol  [FE]          ArrayIndexOutOfBoundsException    [CONTEXT]    @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =     "null   ";  }  else  {  popStack();    [BUGGY]  pathNames[stackSize  -  1]  =  null;  PathIndexOutOfBoundsException  e  =  new  PathIndexOutOfBoundsException( " ");  pathNames[stackSize  -  1]  =  null;  [BUGGY]    }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	262	262	2	replace	pathNames[stackSize    -    1]    =    null;    PathIndexOutOfBoundsException  e  =  new  PathIndexOutOfBoundsException( " ");  pathNames[stackSize  -  1]  =  null;	  	non-compiled	[CE]  cannot  find  symbol	1	None	add
31	[BUG]  [BUGGY]  pathNames[stackSize  -  1]  =  null;  PathIndexOutOfBoundsException  e  =  new  PathIndexOutOfBoundsException( " "));  pathNames[stackSize  -  1]  =  null;  [CE]  [FE]            ArrayIndexOutOfBoundsException    [CONTEXT]    @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =     "null   ";  }  else  {  popStack();    [BUGGY]  pathNames[stackSize  -  1]  =  null;  PathIndexOutOfBoundsException  e  =  new  PathIndexOutOfBoundsException( " "));  pathNames[stackSize  -  1]  =  null;  [BUGGY]    }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	262	262	2	replace	pathNames[stackSize    -    1]    =    null;    PathIndexOutOfBoundsException  e  =  new  PathIndexOutOfBoundsException( " "));  pathNames[stackSize  -  1]  =  null;	  	non-compiled	[CE]  	1	None	add
32	[BUG]  [BUGGY]  pathNames[stackSize  -  1]  =  null;  PathIndexOutOfBoundsException.printStackTrace(pathNames);  pathNames[stackSize  -  1]  =  null;  [CE]  cannot  find  symbol  PathIndexOutOfBoundsException  [FE]              ArrayIndexOutOfBoundsException    [CONTEXT]    @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =     "null   ";  }  else  {  popStack();    [BUGGY]  pathNames[stackSize  -  1]  =  null;  PathIndexOutOfBoundsException.printStackTrace(pathNames);  pathNames[stackSize  -  1]  =  null;  [BUGGY]    }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	262	262	2	replace	pathNames[stackSize    -    1]    =    null;    PathIndexOutOfBoundsException.printStackTrace(pathNames);  pathNames[stackSize  -  1]  =  null;	  	non-compiled	[CE]  cannot  find  symbol  PathIndexOutOfBoundsException	1	None	add
33	[BUG]  [BUGGY]  pathNames[stackSize  -  1]  =  null;  PathIndexOutOfBoundsException.printStackTrace(pathNames[stackSize  -  1]);  [CE]  cannot  find  symbol  PathIndexOutOfBoundsException  [FE]                ArrayIndexOutOfBoundsException    [CONTEXT]    @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =     "null   ";  }  else  {  popStack();    [BUGGY]  pathNames[stackSize  -  1]  =  null;  PathIndexOutOfBoundsException.printStackTrace(pathNames[stackSize  -  1]);  [BUGGY]    }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	262	262	2	replace	pathNames[stackSize    -    1]    =    null;    PathIndexOutOfBoundsException.printStackTrace(pathNames[stackSize  -  1]);	  	non-compiled	[CE]  cannot  find  symbol  PathIndexOutOfBoundsException	1	None	add
34	[BUG]  [BUGGY]  [FE]  ArrayIndexOutOfBoundsException  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]    @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =     "null   ";  }  else  {  popStack();    [BUGGY]      if(stackSize  >  0)  {  pathNames[stackSize  -  1]  =  null;  }  else  {  skipValue();  }  [BUGGY]    }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	262	262	2	add	        if(stackSize  >  0)  {  pathNames[stackSize  -  1]  =  null;  }  else  {  skipValue();  }	  	compilable	  [FE]  ArrayIndexOutOfBoundsException  	8	2	add
35	[BUG]  [BUGGY]      if(stackSize  >  0)  {  pathNames[stackSize  -  1]  =  null;  }  else  {  skipValue();  }  [FE]  ArrayIndexOutOfBoundsException  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]    @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =     "null   ";  }  else  {  popStack();    [BUGGY]      if(stackSize  >  0)  {  pathNames[stackSize  -  1]  =  null;  }  else  {  skipValue();  }  [BUGGY]    }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	262	262	2	replace	        if(stackSize  >  0)  {  pathNames[stackSize  -  1]  =  null;  }  else  {  skipValue();  }	  	compilable	  [FE]  ArrayIndexOutOfBoundsException  	8	2	add
36	[BUG]  [BUGGY]  [FE]  ArrayIndexOutOfBoundsException  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]    @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =     "null   ";  }  else  {  popStack();    [BUGGY]  pathNames[stackSize  -  2]  =  null;  [BUGGY]    }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	262	262	2	add	pathNames[stackSize  -  2]  =  null;	  pathNames[stackSize    -    1]    =    null;    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	2	2	replace
37	[BUG]  [BUGGY]  pathNames[stackSize  -  2]  =  null;  [FE]  ArrayIndexOutOfBoundsException  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]    @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =     "null   ";  }  else  {  popStack();    [BUGGY]  pathNames[stackSize  -  2]  =  null;  [BUGGY]    }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	262	262	2	replace	pathNames[stackSize  -  2]  =  null;	  pathNames[stackSize    -    1]    =    null;    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	2	2	replace
38	[BUG]  [BUGGY]  pathNames[stackSize  -  1]  =   "null "  +  JsonToken.VALUE_NUMBER;  [CE]  cannot  find  symbol  VALUE_NUMBER  [FE]          ArrayIndexOutOfBoundsException    [CONTEXT]    @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =     "null   ";  }  else  {  popStack();    [BUGGY]  pathNames[stackSize  -  1]  =   "null "  +  JsonToken.VALUE_NUMBER;  [BUGGY]    }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	262	262	2	replace	pathNames[stackSize  -  1]  =   "null "  +  JsonToken.VALUE_NUMBER;	  pathNames[stackSize    -    1]    =       "null   "    +    JsonToken.VALUE_STRING;    	non-compiled	[CE]  cannot  find  symbol  VALUE_NUMBER	11	None	replace
39	[BUG]  [BUGGY]  pathNames[stackSize  -  1]  =   "null "  +  JsonToken.VALUE_EMBEDDED_OBJECT;  [CE]  cannot  find  symbol  VALUE_EMBEDDED_OBJECT  [FE]            ArrayIndexOutOfBoundsException    [CONTEXT]    @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =     "null   ";  }  else  {  popStack();    [BUGGY]  pathNames[stackSize  -  1]  =   "null "  +  JsonToken.VALUE_EMBEDDED_OBJECT;  [BUGGY]    }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	262	262	2	replace	pathNames[stackSize  -  1]  =   "null "  +  JsonToken.VALUE_EMBEDDED_OBJECT;	  pathNames[stackSize    -    1]    =       "null   "    +    JsonToken.VALUE_STRING;    	non-compiled	[CE]  cannot  find  symbol  VALUE_EMBEDDED_OBJECT	11	None	replace
40	[BUG]  [BUGGY]  pathNames[stackSize  -  1]  =   "null "  +  JsonToken.FIELD_NAME;  [CE]  cannot  find  symbol  FIELD_NAME  [FE]              ArrayIndexOutOfBoundsException    [CONTEXT]    @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =     "null   ";  }  else  {  popStack();    [BUGGY]  pathNames[stackSize  -  1]  =   "null "  +  JsonToken.FIELD_NAME;  [BUGGY]    }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	262	262	2	replace	pathNames[stackSize  -  1]  =   "null "  +  JsonToken.FIELD_NAME;	  pathNames[stackSize    -    1]    =       "null   "    +    JsonToken.VALUE_STRING;    	non-compiled	[CE]  cannot  find  symbol  FIELD_NAME	11	None	replace
41	[BUG]  [BUGGY]  pathNames[stackSize  -  1]  =   "null "  +  JsonToken.VALUE_EMPTY;  [CE]  cannot  find  symbol  VALUE_EMPTY  [FE]                ArrayIndexOutOfBoundsException    [CONTEXT]    @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =     "null   ";  }  else  {  popStack();    [BUGGY]  pathNames[stackSize  -  1]  =   "null "  +  JsonToken.VALUE_EMPTY;  [BUGGY]    }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	262	262	2	replace	pathNames[stackSize  -  1]  =   "null "  +  JsonToken.VALUE_EMPTY;	  pathNames[stackSize    -    1]    =       "null   "    +    JsonToken.VALUE_STRING;    	non-compiled	[CE]  cannot  find  symbol  VALUE_EMPTY	11	None	replace
42	[BUG]  [BUGGY]  pathNames[stackSize  -  1]  =   "null "  +  JsonToken.VALUE_EMBEDDED_ARRAY;  [CE]  cannot  find  symbol  VALUE_EMBEDDED_ARRAY  [FE]                  ArrayIndexOutOfBoundsException    [CONTEXT]    @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =     "null   ";  }  else  {  popStack();    [BUGGY]  pathNames[stackSize  -  1]  =   "null "  +  JsonToken.VALUE_EMBEDDED_ARRAY;  [BUGGY]    }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	262	262	2	replace	pathNames[stackSize  -  1]  =   "null "  +  JsonToken.VALUE_EMBEDDED_ARRAY;	  pathNames[stackSize    -    1]    =       "null   "    +    JsonToken.VALUE_STRING;    	non-compiled	[CE]  cannot  find  symbol  VALUE_EMBEDDED_ARRAY	11	None	replace
43	[BUG]  [BUGGY]  [FE]  ArrayIndexOutOfBoundsException  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]    @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =     "null   ";  }  else  {  popStack();    [BUGGY]  if(stackSize  >  0)  {  pathIndices  =  new  int[stackSize  -  1];  System.arraycopy(pathNames,  0,  pathNames,  0,  stackSize  -  1);  }  [BUGGY]    }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	262	262	2	add	if(stackSize  >  0)  {  pathIndices  =  new  int[stackSize  -  1];  System.arraycopy(pathNames,  0,  pathNames,  0,  stackSize  -  1);  }	      	compilable	  [FE]  ArrayIndexOutOfBoundsException  	9	2	replace
44	[BUG]  [BUGGY]  if(stackSize  >  0)  {  pathIndices  =  new  int[stackSize  -  1];  System.arraycopy(pathNames,  0,  pathNames,  0,  stackSize  -  1);  }  [FE]  ArrayIndexOutOfBoundsException  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]    @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =     "null   ";  }  else  {  popStack();    [BUGGY]  if(stackSize  >  0)  {  pathIndices  =  new  int[stackSize  -  1];  System.arraycopy(pathNames,  0,  pathNames,  0,  stackSize  -  1);  }  [BUGGY]    }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	262	262	2	replace	if(stackSize  >  0)  {  pathIndices  =  new  int[stackSize  -  1];  System.arraycopy(pathNames,  0,  pathNames,  0,  stackSize  -  1);  }	      	compilable	  [FE]  ArrayIndexOutOfBoundsException  	9	2	replace
45	[BUG]  [BUGGY]  [FE]  IllegalArgumentException  [FE]      ArrayIndexOutOfBoundsException    [CONTEXT]    @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =     "null   ";  }  else  {  popStack();    [BUGGY]  if(stackSize  >  0)  {  pathIndices  =  new  int[stackSize  -  1];  System.arraycopy(pathNames,  0,  pathNames,  0,  stackSize  -  1);  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]    }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	262	262	2	add	if(stackSize  >  0)  {  pathIndices  =  new  int[stackSize  -  1];  System.arraycopy(pathNames,  0,  pathNames,  0,  stackSize  -  1);  }  else  {  throw  new  IllegalArgumentException( " ");  }	      	compilable	  [FE]  IllegalArgumentException  	9	2	replace
46	[BUG]  [BUGGY]  if(stackSize  >  0)  {  pathIndices  =  new  int[stackSize  -  1];  System.arraycopy(pathNames,  0,  pathNames,  0,  stackSize  -  1);  }  else  {  throw  new  IllegalArgumentException( " ");  }  [FE]  IllegalArgumentException  [FE]      ArrayIndexOutOfBoundsException    [CONTEXT]    @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =     "null   ";  }  else  {  popStack();    [BUGGY]  if(stackSize  >  0)  {  pathIndices  =  new  int[stackSize  -  1];  System.arraycopy(pathNames,  0,  pathNames,  0,  stackSize  -  1);  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]    }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	262	262	2	replace	if(stackSize  >  0)  {  pathIndices  =  new  int[stackSize  -  1];  System.arraycopy(pathNames,  0,  pathNames,  0,  stackSize  -  1);  }  else  {  throw  new  IllegalArgumentException( " ");  }	      	compilable	  [FE]  IllegalArgumentException  	9	2	replace
47	[BUG]  [BUGGY]  if(stackSize  >  0)  {  pathIndices[stackSize  -  1]  =  null;  System.arraycopy(pathNames,  0,  pathNames,  0,  stackSize  -  1);  }  [CE]  incompatible  types  [FE]        ArrayIndexOutOfBoundsException    [CONTEXT]    @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =     "null   ";  }  else  {  popStack();    [BUGGY]  if(stackSize  >  0)  {  pathIndices[stackSize  -  1]  =  null;  System.arraycopy(pathNames,  0,  pathNames,  0,  stackSize  -  1);  }  [BUGGY]    }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	262	262	2	replace	if(stackSize  >  0)  {  pathIndices[stackSize  -  1]  =  null;  System.arraycopy(pathNames,  0,  pathNames,  0,  stackSize  -  1);  }	      	non-compiled	[CE]  incompatible  types	9	None	replace
48	[BUG]  [BUGGY]  if(stackSize  >  0)  {  pathIndices[stackSize  -  1]  =  null;  System.arraycopy(pathNames,  0,  pathNames,  0,  stackSize  -  1);  }  else  {  throw  new  IllegalArgumentException( " ");  }  [CE]  incompatible  types  [FE]          ArrayIndexOutOfBoundsException    [CONTEXT]    @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =     "null   ";  }  else  {  popStack();    [BUGGY]  if(stackSize  >  0)  {  pathIndices[stackSize  -  1]  =  null;  System.arraycopy(pathNames,  0,  pathNames,  0,  stackSize  -  1);  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]    }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	262	262	2	replace	if(stackSize  >  0)  {  pathIndices[stackSize  -  1]  =  null;  System.arraycopy(pathNames,  0,  pathNames,  0,  stackSize  -  1);  }  else  {  throw  new  IllegalArgumentException( " ");  }	      	non-compiled	[CE]  incompatible  types	9	None	replace
49	[BUG]  [BUGGY]  if(stackSize  >  0)  {  pathIndices  =  new  int[stackSize  -  1];  System.arraycopy(pathNames,  0,  pathNames,  0,  stackSize  -  1);  }  else  {  throw  new  JsonTokenException( " ");  }  [CE]  cannot  find  symbol  [FE]            ArrayIndexOutOfBoundsException    [CONTEXT]    @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =     "null   ";  }  else  {  popStack();    [BUGGY]  if(stackSize  >  0)  {  pathIndices  =  new  int[stackSize  -  1];  System.arraycopy(pathNames,  0,  pathNames,  0,  stackSize  -  1);  }  else  {  throw  new  JsonTokenException( " ");  }  [BUGGY]    }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	262	262	2	replace	if(stackSize  >  0)  {  pathIndices  =  new  int[stackSize  -  1];  System.arraycopy(pathNames,  0,  pathNames,  0,  stackSize  -  1);  }  else  {  throw  new  JsonTokenException( " ");  }	      	non-compiled	[CE]  cannot  find  symbol	9	None	replace
50	[BUG]  [BUGGY]  [FE]  IOException  [FE]              ArrayIndexOutOfBoundsException    [CONTEXT]    @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =     "null   ";  }  else  {  popStack();    [BUGGY]  if(stackSize  >  0)  {  pathIndices  =  new  int[stackSize  -  1];  System.arraycopy(pathNames,  0,  pathNames,  0,  stackSize  -  1);  }  else  {  throw  new  IOException( " ");  }  [BUGGY]    }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	262	262	2	add	if(stackSize  >  0)  {  pathIndices  =  new  int[stackSize  -  1];  System.arraycopy(pathNames,  0,  pathNames,  0,  stackSize  -  1);  }  else  {  throw  new  IOException( " ");  }	      	compilable	  [FE]  IOException  	9	2	replace
51	[BUG]  [BUGGY]  if(stackSize  >  0)  {  pathIndices  =  new  int[stackSize  -  1];  System.arraycopy(pathNames,  0,  pathNames,  0,  stackSize  -  1);  }  else  {  throw  new  IOException( " ");  }  [FE]  IOException  [FE]              ArrayIndexOutOfBoundsException    [CONTEXT]    @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =     "null   ";  }  else  {  popStack();    [BUGGY]  if(stackSize  >  0)  {  pathIndices  =  new  int[stackSize  -  1];  System.arraycopy(pathNames,  0,  pathNames,  0,  stackSize  -  1);  }  else  {  throw  new  IOException( " ");  }  [BUGGY]    }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	262	262	2	replace	if(stackSize  >  0)  {  pathIndices  =  new  int[stackSize  -  1];  System.arraycopy(pathNames,  0,  pathNames,  0,  stackSize  -  1);  }  else  {  throw  new  IOException( " ");  }	      	compilable	  [FE]  IOException  	9	2	replace
52	[BUG]  [BUGGY]  if(stackSize  >  0)  {  pathIndices[stackSize  -  1]  =  null;  System.arraycopy(pathNames,  0,  pathNames,  0,  stackSize  -  1);  }  else  {  throw  new  JsonTokenException( " ");  }  [CE]  incompatible  types  [FE]                ArrayIndexOutOfBoundsException    [CONTEXT]    @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =     "null   ";  }  else  {  popStack();    [BUGGY]  if(stackSize  >  0)  {  pathIndices[stackSize  -  1]  =  null;  System.arraycopy(pathNames,  0,  pathNames,  0,  stackSize  -  1);  }  else  {  throw  new  JsonTokenException( " ");  }  [BUGGY]    }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	262	262	2	replace	if(stackSize  >  0)  {  pathIndices[stackSize  -  1]  =  null;  System.arraycopy(pathNames,  0,  pathNames,  0,  stackSize  -  1);  }  else  {  throw  new  JsonTokenException( " ");  }	      	non-compiled	[CE]  incompatible  types	9	None	replace
53	[BUG]  [BUGGY]  pathNames[stackSize  -  1]  =  JsonToken.VALUE_NUMBER_ARRAY;  [CE]  cannot  find  symbol  VALUE_NUMBER_ARRAY  [FE]                ArrayIndexOutOfBoundsException    [CONTEXT]    @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =     "null   ";  }  else  {  popStack();    [BUGGY]  pathNames[stackSize  -  1]  =  JsonToken.VALUE_NUMBER_ARRAY;  [BUGGY]    }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	262	262	2	replace	pathNames[stackSize  -  1]  =  JsonToken.VALUE_NUMBER_ARRAY;	  pathNames[stackSize    -    1]    =    JsonToken.VALUE_EMBEDDED_ARRAY;    	non-compiled	[CE]  cannot  find  symbol  VALUE_NUMBER_ARRAY	7	None	replace
54	[BUG]  [BUGGY]  pathNames[stackSize  -  1]  =  JsonToken.VALUE_EMBEDDED;  [CE]  cannot  find  symbol  VALUE_EMBEDDED  [FE]              ArrayIndexOutOfBoundsException    [CONTEXT]    @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =     "null   ";  }  else  {  popStack();    [BUGGY]  pathNames[stackSize  -  1]  =  JsonToken.VALUE_EMBEDDED;  [BUGGY]    }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	262	262	2	replace	pathNames[stackSize  -  1]  =  JsonToken.VALUE_EMBEDDED;	  pathNames[stackSize    -    1]    =    JsonToken.VALUE_NULL;    	non-compiled	[CE]  cannot  find  symbol  VALUE_EMBEDDED	6	None	replace
55	[BUG]  [BUGGY]  pathNames[stackSize  -  1]  =  null;  PathIndexOutOfBoundsException  e  =  new  PathIndexOutOfBoundsException(String.valueOf(result));  pathNames[stackSize  -  1]  =  null;  [CE]  cannot  find  symbol  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]    @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =     "null   ";  }  else  {  popStack();    [BUGGY]  pathNames[stackSize  -  1]  =  null;  PathIndexOutOfBoundsException  e  =  new  PathIndexOutOfBoundsException(String.valueOf(result));  pathNames[stackSize  -  1]  =  null;  [BUGGY]    }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	262	262	2	replace	pathNames[stackSize    -    1]    =    null;    PathIndexOutOfBoundsException  e  =  new  PathIndexOutOfBoundsException(String.valueOf(result));  pathNames[stackSize  -  1]  =  null;	  	non-compiled	[CE]  cannot  find  symbol	1	None	add
56	[BUG]  [BUGGY]  pathNames[stackSize  -  1]  =  null;  PathIndexOutOfBoundsException  e  =  new  PathIndexOutOfBoundsException(String.valueOf(stack));  pathNames[stackSize  -  1]  =  null;  [CE]  cannot  find  symbol  [FE]      ArrayIndexOutOfBoundsException    [CONTEXT]    @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =     "null   ";  }  else  {  popStack();    [BUGGY]  pathNames[stackSize  -  1]  =  null;  PathIndexOutOfBoundsException  e  =  new  PathIndexOutOfBoundsException(String.valueOf(stack));  pathNames[stackSize  -  1]  =  null;  [BUGGY]    }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	262	262	2	replace	pathNames[stackSize    -    1]    =    null;    PathIndexOutOfBoundsException  e  =  new  PathIndexOutOfBoundsException(String.valueOf(stack));  pathNames[stackSize  -  1]  =  null;	  	non-compiled	[CE]  cannot  find  symbol	1	None	add
57	[BUG]  [BUGGY]  pathNames[stackSize  -  1]  =  null;  PathIndexOutOfBoundsException  e  =  new  PathIndexOutOfBoundsException(String.valueOf(stackSize  -  1));  pathNames[stackSize  -  1]  =  null;  [CE]  cannot  find  symbol  [FE]        ArrayIndexOutOfBoundsException    [CONTEXT]    @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =     "null   ";  }  else  {  popStack();    [BUGGY]  pathNames[stackSize  -  1]  =  null;  PathIndexOutOfBoundsException  e  =  new  PathIndexOutOfBoundsException(String.valueOf(stackSize  -  1));  pathNames[stackSize  -  1]  =  null;  [BUGGY]    }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	262	262	2	replace	pathNames[stackSize    -    1]    =    null;    PathIndexOutOfBoundsException  e  =  new  PathIndexOutOfBoundsException(String.valueOf(stackSize  -  1));  pathNames[stackSize  -  1]  =  null;	  	non-compiled	[CE]  cannot  find  symbol	1	None	add
58	[BUG]  [BUGGY]  [FE]  ArrayIndexOutOfBoundsException  [FE]          ArrayIndexOutOfBoundsException    [CONTEXT]    @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =     "null   ";  }  else  {  popStack();    [BUGGY]  pathNames[stackSize  -  1]  =   "null "  +  JsonToken.END_OBJECT;  [BUGGY]    }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	262	262	2	add	pathNames[stackSize  -  1]  =   "null "  +  JsonToken.END_OBJECT;	  pathNames[stackSize    -    1]    =       "null   "    +    JsonToken.VALUE_STRING;    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	11	2	replace
59	[BUG]  [BUGGY]  pathNames[stackSize  -  1]  =   "null "  +  JsonToken.END_OBJECT;  [FE]  ArrayIndexOutOfBoundsException  [FE]          ArrayIndexOutOfBoundsException    [CONTEXT]    @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =     "null   ";  }  else  {  popStack();    [BUGGY]  pathNames[stackSize  -  1]  =   "null "  +  JsonToken.END_OBJECT;  [BUGGY]    }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	262	262	2	replace	pathNames[stackSize  -  1]  =   "null "  +  JsonToken.END_OBJECT;	  pathNames[stackSize    -    1]    =       "null   "    +    JsonToken.VALUE_STRING;    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	11	2	replace
60	[BUG]  [BUGGY]  pathNames[stackSize  -  1]  =   "null "  +  JsonToken.START_OBJECT;  [CE]  cannot  find  symbol  START_OBJECT  [FE]            ArrayIndexOutOfBoundsException    [CONTEXT]    @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =     "null   ";  }  else  {  popStack();    [BUGGY]  pathNames[stackSize  -  1]  =   "null "  +  JsonToken.START_OBJECT;  [BUGGY]    }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	262	262	2	replace	pathNames[stackSize  -  1]  =   "null "  +  JsonToken.START_OBJECT;	  pathNames[stackSize    -    1]    =       "null   "    +    JsonToken.VALUE_STRING;    	non-compiled	[CE]  cannot  find  symbol  START_OBJECT	11	None	replace
61	[BUG]  [BUGGY]  [FE]  ArrayIndexOutOfBoundsException  [FE]              ArrayIndexOutOfBoundsException    [CONTEXT]    @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =     "null   ";  }  else  {  popStack();    [BUGGY]  pathNames[stackSize  -  1]  =   "null "  +  JsonToken.END_ARRAY;  [BUGGY]    }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	262	262	2	add	pathNames[stackSize  -  1]  =   "null "  +  JsonToken.END_ARRAY;	  pathNames[stackSize    -    1]    =       "null   "    +    JsonToken.VALUE_STRING;    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	11	2	replace
62	[BUG]  [BUGGY]  pathNames[stackSize  -  1]  =   "null "  +  JsonToken.END_ARRAY;  [FE]  ArrayIndexOutOfBoundsException  [FE]              ArrayIndexOutOfBoundsException    [CONTEXT]    @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =     "null   ";  }  else  {  popStack();    [BUGGY]  pathNames[stackSize  -  1]  =   "null "  +  JsonToken.END_ARRAY;  [BUGGY]    }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	262	262	2	replace	pathNames[stackSize  -  1]  =   "null "  +  JsonToken.END_ARRAY;	  pathNames[stackSize    -    1]    =       "null   "    +    JsonToken.VALUE_STRING;    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	11	2	replace
63	[BUG]  [BUGGY]  [FE]  ArrayIndexOutOfBoundsException  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]    @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =     "null   ";  }  else  {  popStack();    [BUGGY]      if(stackSize  >  0)  {  pathIndices  =  new  int[stackSize  -  1];  System.arraycopy(pathNames,  0,  pathNames,  1,  stackSize  -  1);  }  [BUGGY]    }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	262	262	2	add	        if(stackSize  >  0)  {  pathIndices  =  new  int[stackSize  -  1];  System.arraycopy(pathNames,  0,  pathNames,  1,  stackSize  -  1);  }	  	compilable	  [FE]  ArrayIndexOutOfBoundsException  	8	2	add
64	[BUG]  [BUGGY]      if(stackSize  >  0)  {  pathIndices  =  new  int[stackSize  -  1];  System.arraycopy(pathNames,  0,  pathNames,  1,  stackSize  -  1);  }  [FE]  ArrayIndexOutOfBoundsException  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]    @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =     "null   ";  }  else  {  popStack();    [BUGGY]      if(stackSize  >  0)  {  pathIndices  =  new  int[stackSize  -  1];  System.arraycopy(pathNames,  0,  pathNames,  1,  stackSize  -  1);  }  [BUGGY]    }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	262	262	2	replace	        if(stackSize  >  0)  {  pathIndices  =  new  int[stackSize  -  1];  System.arraycopy(pathNames,  0,  pathNames,  1,  stackSize  -  1);  }	  	compilable	  [FE]  ArrayIndexOutOfBoundsException  	8	2	add
65	[BUG]  [BUGGY]  [FE]  ArrayIndexOutOfBoundsException  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]    @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =     "null   ";  }  else  {  popStack();    [BUGGY]  pathNames[stackSize  -  1]  =  null;  if(stackSize  >  0)  {  pathNames[stackSize  -  1]  =  null;  }  else  {  popStack();  pathNames[stackSize  -  1]  =  null;  }  [BUGGY]    }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	262	262	2	add	pathNames[stackSize    -    1]    =    null;    if(stackSize  >  0)  {  pathNames[stackSize  -  1]  =  null;  }  else  {  popStack();  pathNames[stackSize  -  1]  =  null;  }	  	compilable	  [FE]  ArrayIndexOutOfBoundsException  	1	2	add
66	[BUG]  [BUGGY]  pathNames[stackSize  -  1]  =  null;  if(stackSize  >  0)  {  pathNames[stackSize  -  1]  =  null;  }  else  {  popStack();  pathNames[stackSize  -  1]  =  null;  }  [FE]  ArrayIndexOutOfBoundsException  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]    @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =     "null   ";  }  else  {  popStack();    [BUGGY]  pathNames[stackSize  -  1]  =  null;  if(stackSize  >  0)  {  pathNames[stackSize  -  1]  =  null;  }  else  {  popStack();  pathNames[stackSize  -  1]  =  null;  }  [BUGGY]    }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	262	262	2	replace	pathNames[stackSize    -    1]    =    null;    if(stackSize  >  0)  {  pathNames[stackSize  -  1]  =  null;  }  else  {  popStack();  pathNames[stackSize  -  1]  =  null;  }	  	compilable	  [FE]  ArrayIndexOutOfBoundsException  	1	2	add
67	[BUG]  [BUGGY]  [FE]  ArrayIndexOutOfBoundsException  [FE]      ArrayIndexOutOfBoundsException    [CONTEXT]    @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =     "null   ";  }  else  {  popStack();    [BUGGY]  pathNames[stackSize  -  1]  =  null;  if(stackSize  >  0)  {  pathNames[stackSize  -  1]  =  null;  }  else  {  popStack();  }  [BUGGY]    }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	262	262	2	add	pathNames[stackSize    -    1]    =    null;    if(stackSize  >  0)  {  pathNames[stackSize  -  1]  =  null;  }  else  {  popStack();  }	  	compilable	  [FE]  ArrayIndexOutOfBoundsException  	1	2	add
68	[BUG]  [BUGGY]  pathNames[stackSize  -  1]  =  null;  if(stackSize  >  0)  {  pathNames[stackSize  -  1]  =  null;  }  else  {  popStack();  }  [FE]  ArrayIndexOutOfBoundsException  [FE]      ArrayIndexOutOfBoundsException    [CONTEXT]    @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =     "null   ";  }  else  {  popStack();    [BUGGY]  pathNames[stackSize  -  1]  =  null;  if(stackSize  >  0)  {  pathNames[stackSize  -  1]  =  null;  }  else  {  popStack();  }  [BUGGY]    }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	262	262	2	replace	pathNames[stackSize    -    1]    =    null;    if(stackSize  >  0)  {  pathNames[stackSize  -  1]  =  null;  }  else  {  popStack();  }	  	compilable	  [FE]  ArrayIndexOutOfBoundsException  	1	2	add
69	[BUG]  [BUGGY]  [FE]  ArrayIndexOutOfBoundsException  [FE]        ArrayIndexOutOfBoundsException    [CONTEXT]    @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =     "null   ";  }  else  {  popStack();    [BUGGY]  pathNames[stackSize  -  1]  =  null;  if(stackSize  >  0)  {  pathNames[stackSize  -  1]  =  null;  }  [BUGGY]    }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	262	262	2	add	pathNames[stackSize    -    1]    =    null;    if(stackSize  >  0)  {  pathNames[stackSize  -  1]  =  null;  }	  	compilable	  [FE]  ArrayIndexOutOfBoundsException  	1	2	add
70	[BUG]  [BUGGY]  pathNames[stackSize  -  1]  =  null;  if(stackSize  >  0)  {  pathNames[stackSize  -  1]  =  null;  }  [FE]  ArrayIndexOutOfBoundsException  [FE]        ArrayIndexOutOfBoundsException    [CONTEXT]    @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =     "null   ";  }  else  {  popStack();    [BUGGY]  pathNames[stackSize  -  1]  =  null;  if(stackSize  >  0)  {  pathNames[stackSize  -  1]  =  null;  }  [BUGGY]    }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	262	262	2	replace	pathNames[stackSize    -    1]    =    null;    if(stackSize  >  0)  {  pathNames[stackSize  -  1]  =  null;  }	  	compilable	  [FE]  ArrayIndexOutOfBoundsException  	1	2	add
71	[BUG]  [BUGGY]  [FE]  ArrayIndexOutOfBoundsException  [FE]          ArrayIndexOutOfBoundsException    [CONTEXT]    @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =     "null   ";  }  else  {  popStack();    [BUGGY]  pathNames[stackSize  -  1]  =  null;  if(stackSize  >  0)  {  pathNames[stackSize  -  1]  =  null;  }  else  {  popStack();  throw  new  IllegalArgumentException( " ");  }  [BUGGY]    }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	262	262	2	add	pathNames[stackSize    -    1]    =    null;    if(stackSize  >  0)  {  pathNames[stackSize  -  1]  =  null;  }  else  {  popStack();  throw  new  IllegalArgumentException( " ");  }	  	compilable	  [FE]  ArrayIndexOutOfBoundsException  	1	2	add
72	[BUG]  [BUGGY]  pathNames[stackSize  -  1]  =  null;  if(stackSize  >  0)  {  pathNames[stackSize  -  1]  =  null;  }  else  {  popStack();  throw  new  IllegalArgumentException( " ");  }  [FE]  ArrayIndexOutOfBoundsException  [FE]          ArrayIndexOutOfBoundsException    [CONTEXT]    @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =     "null   ";  }  else  {  popStack();    [BUGGY]  pathNames[stackSize  -  1]  =  null;  if(stackSize  >  0)  {  pathNames[stackSize  -  1]  =  null;  }  else  {  popStack();  throw  new  IllegalArgumentException( " ");  }  [BUGGY]    }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	262	262	2	replace	pathNames[stackSize    -    1]    =    null;    if(stackSize  >  0)  {  pathNames[stackSize  -  1]  =  null;  }  else  {  popStack();  throw  new  IllegalArgumentException( " ");  }	  	compilable	  [FE]  ArrayIndexOutOfBoundsException  	1	2	add
73	[BUG]  [BUGGY]  pathNames[stackSize  -  1]  =  null;  if(stackSize  >  0)  {  pathNames[stackSize  -  1]  =  null;  }  else  {  popStack();  skipStack();  }  [CE]  cannot  find  symbol  [FE]            ArrayIndexOutOfBoundsException    [CONTEXT]    @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =     "null   ";  }  else  {  popStack();    [BUGGY]  pathNames[stackSize  -  1]  =  null;  if(stackSize  >  0)  {  pathNames[stackSize  -  1]  =  null;  }  else  {  popStack();  skipStack();  }  [BUGGY]    }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	262	262	2	replace	pathNames[stackSize    -    1]    =    null;    if(stackSize  >  0)  {  pathNames[stackSize  -  1]  =  null;  }  else  {  popStack();  skipStack();  }	  	non-compiled	[CE]  cannot  find  symbol	1	None	add
74	[BUG]  [BUGGY]  [FE]  ArrayIndexOutOfBoundsException  [FE]              ArrayIndexOutOfBoundsException    [CONTEXT]    @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =     "null   ";  }  else  {  popStack();    [BUGGY]  pathNames[stackSize  -  1]  =  null;  if(stackSize  >  0)  {  pathNames[stackSize  -  1]  =  null;  }  else  {  popStack();  throw  new  RuntimeException( " ");  }  [BUGGY]    }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	262	262	2	add	pathNames[stackSize    -    1]    =    null;    if(stackSize  >  0)  {  pathNames[stackSize  -  1]  =  null;  }  else  {  popStack();  throw  new  RuntimeException( " ");  }	  	compilable	  [FE]  ArrayIndexOutOfBoundsException  	1	2	add
75	[BUG]  [BUGGY]  pathNames[stackSize  -  1]  =  null;  if(stackSize  >  0)  {  pathNames[stackSize  -  1]  =  null;  }  else  {  popStack();  throw  new  RuntimeException( " ");  }  [FE]  ArrayIndexOutOfBoundsException  [FE]              ArrayIndexOutOfBoundsException    [CONTEXT]    @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =     "null   ";  }  else  {  popStack();    [BUGGY]  pathNames[stackSize  -  1]  =  null;  if(stackSize  >  0)  {  pathNames[stackSize  -  1]  =  null;  }  else  {  popStack();  throw  new  RuntimeException( " ");  }  [BUGGY]    }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	262	262	2	replace	pathNames[stackSize    -    1]    =    null;    if(stackSize  >  0)  {  pathNames[stackSize  -  1]  =  null;  }  else  {  popStack();  throw  new  RuntimeException( " ");  }	  	compilable	  [FE]  ArrayIndexOutOfBoundsException  	1	2	add
76	[BUG]  [BUGGY]  if(stackSize  >  0)  {  int[]  result  =  new  int[stackSize  -  1];  for(int  i  =  0;  i  <  stackSize;  ++i)  {  result[i]  =  null;  }  [CE]  ';'  expected  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]    @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =     "null   ";  }  else  {  popStack();    [BUGGY]  if(stackSize  >  0)  {  int[]  result  =  new  int[stackSize  -  1];  for(int  i  =  0;  i  <  stackSize;  ++i)  {  result[i]  =  null;  }  [BUGGY]    }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	262	262	2	replace	if(stackSize  >  0)  {  int[]  result  =  new  int[stackSize  -  1];  for(int  i  =  0;  i  <  stackSize;  ++i)  {  result[i]  =  null;  }	      	non-compiled	[CE]  ';'  expected	9	None	replace
77	[BUG]  [BUGGY]  [FE]  ArrayIndexOutOfBoundsException  [FE]      ArrayIndexOutOfBoundsException    [CONTEXT]    @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =     "null   ";  }  else  {  popStack();    [BUGGY]  if(stackSize  >  0)  {  int[]  result  =  new  int[stackSize  -  1];  System.arraycopy(pathNames,  0,  pathNames,  0,  stackSize  -  1);  }  [BUGGY]    }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	262	262	2	add	if(stackSize  >  0)  {  int[]  result  =  new  int[stackSize  -  1];  System.arraycopy(pathNames,  0,  pathNames,  0,  stackSize  -  1);  }	      	compilable	  [FE]  ArrayIndexOutOfBoundsException  	9	2	replace
78	[BUG]  [BUGGY]  if(stackSize  >  0)  {  int[]  result  =  new  int[stackSize  -  1];  System.arraycopy(pathNames,  0,  pathNames,  0,  stackSize  -  1);  }  [FE]  ArrayIndexOutOfBoundsException  [FE]      ArrayIndexOutOfBoundsException    [CONTEXT]    @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =     "null   ";  }  else  {  popStack();    [BUGGY]  if(stackSize  >  0)  {  int[]  result  =  new  int[stackSize  -  1];  System.arraycopy(pathNames,  0,  pathNames,  0,  stackSize  -  1);  }  [BUGGY]    }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	262	262	2	replace	if(stackSize  >  0)  {  int[]  result  =  new  int[stackSize  -  1];  System.arraycopy(pathNames,  0,  pathNames,  0,  stackSize  -  1);  }	      	compilable	  [FE]  ArrayIndexOutOfBoundsException  	9	2	replace
79	[BUG]  [BUGGY]  if(stackSize  >  0)  {  int[]  result  =  new  int[stackSize  -  1];  for(int  i  =  0;  i  <  stackSize;  ++i)  {  result[i]  =  handleMissingValue();  }  [CE]  ';'  expected  [FE]        ArrayIndexOutOfBoundsException    [CONTEXT]    @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =     "null   ";  }  else  {  popStack();    [BUGGY]  if(stackSize  >  0)  {  int[]  result  =  new  int[stackSize  -  1];  for(int  i  =  0;  i  <  stackSize;  ++i)  {  result[i]  =  handleMissingValue();  }  [BUGGY]    }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	262	262	2	replace	if(stackSize  >  0)  {  int[]  result  =  new  int[stackSize  -  1];  for(int  i  =  0;  i  <  stackSize;  ++i)  {  result[i]  =  handleMissingValue();  }	      	non-compiled	[CE]  ';'  expected	9	None	replace
80	[BUG]  [BUGGY]  [FE]  ArrayIndexOutOfBoundsException  [FE]          ArrayIndexOutOfBoundsException    [CONTEXT]    @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =     "null   ";  }  else  {  popStack();    [BUGGY]  if(stackSize  >  0)  {  int[]  result  =  new  int[stackSize  -  1];  System.arraycopy(stack,  0,  pathNames,  0,  stackSize  -  1);  }  [BUGGY]    }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	262	262	2	add	if(stackSize  >  0)  {  int[]  result  =  new  int[stackSize  -  1];  System.arraycopy(stack,  0,  pathNames,  0,  stackSize  -  1);  }	      	compilable	  [FE]  ArrayIndexOutOfBoundsException  	9	2	replace
81	[BUG]  [BUGGY]  if(stackSize  >  0)  {  int[]  result  =  new  int[stackSize  -  1];  System.arraycopy(stack,  0,  pathNames,  0,  stackSize  -  1);  }  [FE]  ArrayIndexOutOfBoundsException  [FE]          ArrayIndexOutOfBoundsException    [CONTEXT]    @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =     "null   ";  }  else  {  popStack();    [BUGGY]  if(stackSize  >  0)  {  int[]  result  =  new  int[stackSize  -  1];  System.arraycopy(stack,  0,  pathNames,  0,  stackSize  -  1);  }  [BUGGY]    }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	262	262	2	replace	if(stackSize  >  0)  {  int[]  result  =  new  int[stackSize  -  1];  System.arraycopy(stack,  0,  pathNames,  0,  stackSize  -  1);  }	      	compilable	  [FE]  ArrayIndexOutOfBoundsException  	9	2	replace
82	[BUG]  [BUGGY]  if(stackSize  >  0)  {  int[]  result  =  new  int[stackSize  -  1];  System.arraycopy(stack,  0,  pathNames,  0,  stackSize  -  1,  stackSize  -  1);  }  [CE]  method  arraycopy  in  class  System  cannot  be  applied  to  given  types;  [FE]            ArrayIndexOutOfBoundsException    [CONTEXT]    @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =     "null   ";  }  else  {  popStack();    [BUGGY]  if(stackSize  >  0)  {  int[]  result  =  new  int[stackSize  -  1];  System.arraycopy(stack,  0,  pathNames,  0,  stackSize  -  1,  stackSize  -  1);  }  [BUGGY]    }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	262	262	2	replace	if(stackSize  >  0)  {  int[]  result  =  new  int[stackSize  -  1];  System.arraycopy(stack,  0,  pathNames,  0,  stackSize  -  1,  stackSize  -  1);  }	      	non-compiled	[CE]  method  arraycopy  in  class  System  cannot  be  applied  to  given  types;	9	None	replace
83	[BUG]  [BUGGY]  [FE]  ArrayIndexOutOfBoundsException  [FE]              ArrayIndexOutOfBoundsException    [CONTEXT]    @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =     "null   ";  }  else  {  popStack();    [BUGGY]  if(stackSize  >  0)  {  int[]  result  =  new  int[stackSize  -  1];  System.arraycopy(pathNames,  0,  pathNames,  0,  stackSize  -  1);  return;  }  [BUGGY]    }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	262	262	2	add	if(stackSize  >  0)  {  int[]  result  =  new  int[stackSize  -  1];  System.arraycopy(pathNames,  0,  pathNames,  0,  stackSize  -  1);  return;  }	      	compilable	  [FE]  ArrayIndexOutOfBoundsException  	9	2	replace
84	[BUG]  [BUGGY]  if(stackSize  >  0)  {  int[]  result  =  new  int[stackSize  -  1];  System.arraycopy(pathNames,  0,  pathNames,  0,  stackSize  -  1);  return;  }  [FE]  ArrayIndexOutOfBoundsException  [FE]              ArrayIndexOutOfBoundsException    [CONTEXT]    @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =     "null   ";  }  else  {  popStack();    [BUGGY]  if(stackSize  >  0)  {  int[]  result  =  new  int[stackSize  -  1];  System.arraycopy(pathNames,  0,  pathNames,  0,  stackSize  -  1);  return;  }  [BUGGY]    }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	262	262	2	replace	if(stackSize  >  0)  {  int[]  result  =  new  int[stackSize  -  1];  System.arraycopy(pathNames,  0,  pathNames,  0,  stackSize  -  1);  return;  }	      	compilable	  [FE]  ArrayIndexOutOfBoundsException  	9	2	replace
85	[BUG]  [BUGGY]  if(stackSize  >  0)  {  int[]  result  =  new  int[stackSize  -  1];  for(int  i  =  0;  i  <  stackSize;  ++i)  {  result[i]  =  getValue();  }  [CE]  ';'  expected  [FE]                ArrayIndexOutOfBoundsException    [CONTEXT]    @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =     "null   ";  }  else  {  popStack();    [BUGGY]  if(stackSize  >  0)  {  int[]  result  =  new  int[stackSize  -  1];  for(int  i  =  0;  i  <  stackSize;  ++i)  {  result[i]  =  getValue();  }  [BUGGY]    }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	262	262	2	replace	if(stackSize  >  0)  {  int[]  result  =  new  int[stackSize  -  1];  for(int  i  =  0;  i  <  stackSize;  ++i)  {  result[i]  =  getValue();  }	      	non-compiled	[CE]  ';'  expected	9	None	replace
86	[BUG]  [BUGGY]      if(stackSize  >  0)  {  int[]  result  =  new  int[stackSize  -  1];  for(int  i  =  0;  i  <  stackSize;  ++i)  {  result[i]  =  handleMissingName();  }  [CE]  ';'  expected  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]    @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =     "null   ";  }  else  {  popStack();    [BUGGY]      if(stackSize  >  0)  {  int[]  result  =  new  int[stackSize  -  1];  for(int  i  =  0;  i  <  stackSize;  ++i)  {  result[i]  =  handleMissingName();  }  [BUGGY]    }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	262	262	2	replace	        if(stackSize  >  0)  {  int[]  result  =  new  int[stackSize  -  1];  for(int  i  =  0;  i  <  stackSize;  ++i)  {  result[i]  =  handleMissingName();  }	  	non-compiled	[CE]  ';'  expected	8	None	add
87	[BUG]  [BUGGY]  pathNames[stackSize  -  1]  =   "null "  +  JsonToken.VALUE_EMBEDDED;  [CE]  cannot  find  symbol  VALUE_EMBEDDED  [FE]          ArrayIndexOutOfBoundsException    [CONTEXT]    @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =     "null   ";  }  else  {  popStack();    [BUGGY]  pathNames[stackSize  -  1]  =   "null "  +  JsonToken.VALUE_EMBEDDED;  [BUGGY]    }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	262	262	2	replace	pathNames[stackSize  -  1]  =   "null "  +  JsonToken.VALUE_EMBEDDED;	  pathNames[stackSize    -    1]    =       "null   "    +    JsonToken.VALUE_STRING;    	non-compiled	[CE]  cannot  find  symbol  VALUE_EMBEDDED	11	None	replace
88	[BUG]  [BUGGY]  pathNames[stackSize  -  1]  =   "null "  +  JsonToken.VALUE_DECEMBER;  [CE]  cannot  find  symbol  VALUE_DECEMBER  [FE]            ArrayIndexOutOfBoundsException    [CONTEXT]    @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =     "null   ";  }  else  {  popStack();    [BUGGY]  pathNames[stackSize  -  1]  =   "null "  +  JsonToken.VALUE_DECEMBER;  [BUGGY]    }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	262	262	2	replace	pathNames[stackSize  -  1]  =   "null "  +  JsonToken.VALUE_DECEMBER;	  pathNames[stackSize    -    1]    =       "null   "    +    JsonToken.VALUE_STRING;    	non-compiled	[CE]  cannot  find  symbol  VALUE_DECEMBER	11	None	replace
89	[BUG]  [BUGGY]  pathNames[stackSize  -  1]  =   "null "  +  JsonToken.VALUE_CLOSED;  [CE]  cannot  find  symbol  VALUE_CLOSED  [FE]              ArrayIndexOutOfBoundsException    [CONTEXT]    @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =     "null   ";  }  else  {  popStack();    [BUGGY]  pathNames[stackSize  -  1]  =   "null "  +  JsonToken.VALUE_CLOSED;  [BUGGY]    }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	262	262	2	replace	pathNames[stackSize  -  1]  =   "null "  +  JsonToken.VALUE_CLOSED;	  pathNames[stackSize    -    1]    =       "null   "    +    JsonToken.VALUE_STRING;    	non-compiled	[CE]  cannot  find  symbol  VALUE_CLOSED	11	None	replace
90	[BUG]  [BUGGY]  [FE]  ArrayIndexOutOfBoundsException  [FE]                ArrayIndexOutOfBoundsException    [CONTEXT]    @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =     "null   ";  }  else  {  popStack();    [BUGGY]  pathNames[stackSize  -  1]  =   "null "  +  JsonToken.NAME;  [BUGGY]    }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	262	262	2	add	pathNames[stackSize  -  1]  =   "null "  +  JsonToken.NAME;	  pathNames[stackSize    -    1]    =       "null   "    +    JsonToken.VALUE_STRING;    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	11	2	replace
91	[BUG]  [BUGGY]  pathNames[stackSize  -  1]  =   "null "  +  JsonToken.NAME;  [FE]  ArrayIndexOutOfBoundsException  [FE]                ArrayIndexOutOfBoundsException    [CONTEXT]    @Override  public  void  skipValue()  throws  IOException  {  if  (peek()  ==  JsonToken.NAME)  {  nextName();  pathNames[stackSize  -  2]  =     "null   ";  }  else  {  popStack();    [BUGGY]  pathNames[stackSize  -  1]  =   "null "  +  JsonToken.NAME;  [BUGGY]    }  pathIndices[stackSize  -  1]++;  }  [CLASS]  JsonTreeReader  1  [METHOD]  skipValue  [RETURN_TYPE]  void  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  result  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	262	262	2	replace	pathNames[stackSize  -  1]  =   "null "  +  JsonToken.NAME;	  pathNames[stackSize    -    1]    =       "null   "    +    JsonToken.VALUE_STRING;    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	11	2	replace
